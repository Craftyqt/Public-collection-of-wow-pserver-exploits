<?xml version="1.0" encoding="utf-8" ?><DEATHKNIGHT><Ability><Name>Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(43265)
 and Nova_Mod() == 1 then 
	CastSpellByName(GetSpellInfo(43265))
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	return true 
end</Lua><RecastDelay>100</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-------- Functions --------</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
	PQR_RotationStarted = false
	
	-- Load LUA Data Files
	if PQR_LoadLua ~= nil then
		-- Load the data
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffFFCCFFYou&amp;apos;re missing PQR_Nova_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
	
	FirstRun = nil
end

-- Let&amp;apos;s automatically put ourself in Blood Presence.
--if not UnitBuffID(&amp;quot;player&amp;quot;,48263,&amp;quot;PLAYER&amp;quot;)
--	then CastSpellByName(GetSpellInfo(48263),&amp;quot;player&amp;quot;)
--end

-- Death Rune on CD Check
function DeathRuneCD()
	local DRunesOnCD = 0
	local DRunesOffCD = 0
	for i=1, 6 do
		if GetRuneType(i) == 4 and select(3, GetRuneCooldown(i)) == false then
			DRunesOnCD = DRunesOnCD + 1
		elseif GetRuneType(i) == 4 and select(3, GetRuneCooldown(i)) == true then
			DRunesOffCD = DRunesOffCD + 1
		end
	end
	
	return DRunesOnCD, DRunesOffCD
end

-- Death Rune checker.
function DeathRuneCheck()
	local numDeathRunes = 0
	for i=1, 6 do
		if GetRuneType(i) == 4 then
			numDeathRunes = numDeathRunes + 1
		end
	end
	
	return numDeathRunes
end

-- Is it safe to Death Strike?
function SafeToDeathStrike()
	local SafeToCast = false
	local NonDROffCD = 0
	for i=3, 6 do
		if select(3, GetRuneCooldown(i)) == true and GetRuneType(i) ~= 4 then
			NonDROffCD = NonDROffCD + 1
		end
	end
	if NonDROffCD + select(2, DeathRuneCD()) &amp;gt; 2 then
		SafeToCast = true
	elseif NonDROffCD + select(2, DeathRuneCD()) == 2 then
		for i=3, 6 do
			local CDRemaining = GetRuneCooldown(i) + select(2, GetRuneCooldown(i)) - GetTime()
			if CDRemaining &amp;gt; 0 and CDRemaining &amp;lt;= 1.5 then
				SafeToCast = true
			end
		end
	end
	return SafeToCast
end

-- Target validation.
PQ_ValidUnit = false
if UnitExists(&amp;quot;target&amp;quot;)
	and (UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) or UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;))
	and (not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) and not UnitIsCorpse(&amp;quot;target&amp;quot;))
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
then
	PQ_ValidUnit = true
	PQR_CustomTarget = &amp;quot;target&amp;quot;
end

-- No accidental deaths
if IsMounted() or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	return true
end


----------------------------------------
---- Test AoE Toggle Code
----------------------------------------
if not GetCVar(&amp;quot;BloodAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;BloodAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
	InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
	InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if IsRightShiftKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
 	SwitchTimer = GetTime()
	if tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 0 then 
		SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 2) 
	elseif tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 5 then
		SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 1)
	end
end

if tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;Blood Tanking (Nova [Blood])&amp;quot;) 
elseif tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;Blood AoE Tanking (Nova [Blood])&amp;quot;) end

if tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end

if Nova_Mod() == 16 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-------- Debuff Handler --------</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local FF,_,_,_,_,_,FFtimer = UnitDebuffID(PQR_CustomTarget,55095,&amp;quot;player&amp;quot;)
local BP,_,_,_,_,_,BPtimer = UnitDebuffID(PQR_CustomTarget,55078,&amp;quot;player&amp;quot;)

if PQ_Pestilence == nil then PQ_Pestilence = false end
if IsSpellKnown(77575)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(77575),PQR_CustomTarget) == 1
	and PQR_UnitFacing(&amp;quot;player&amp;quot;, PQR_CustomTarget)
then
	-- If Outbreak is on Cooldown we&amp;apos;ll check if the diseases are up.
	if GetSpellCooldown(77575) ~= 0 then
		if FF then
			-- If less than 3 seconds left on Frost Fever, reapply is Outbreak is down.
			if FFtimer - GetTime() &amp;lt; 3 then
				PQ_Pestilence = true
				CastSpellByID(45477,PQR_CustomTarget)
			end
		-- If Frost Fever isn&amp;apos;t on Target, apply with Icey Touch if Outbreak is down.
		else
			PQ_Pestilence = true
			CastSpellByID(45477,PQR_CustomTarget)
			end
		
		if BP then
			-- If less than 3 seconds left on Blood Plague, reapply is Outbreak is down.
			if BPtimer - GetTime() &amp;lt; 3 then
				PQ_Pestilence = true
				CastSpellByID(45462,PQR_CustomTarget)
			end
		-- If Blood Plague isn&amp;apos;t on Target, apply with Icey Touch if Outbreak is down.
		else
			PQ_Pestilence = true
			CastSpellByID(45462,PQR_CustomTarget)
		end
	else
		-- If Outbreak is off Cooldown, and either FF or BP isn&amp;apos;t on target, cast Outbreak
		if not FF or not BP then
			PQ_Pestilence = true
			CastSpellByID(77575,PQR_CustomTarget)
		else
			-- If both Diseases are on, but either one has less than 3 seconds remaining, Cast Outbreak.
			if (FF and FFtimer - GetTime() &amp;lt; 3) or (BP and BPtimer - GetTime() &amp;lt; 3)
			then
				PQ_Pestilence = true
				CastSpellByID(77575,PQR_CustomTarget)
			end
		end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raise Ally</Name><Default>false</Default><SpellID>61999</SpellID><Actions></Actions><Lua>local members = GetNumGroupMembers()
local group = &amp;quot;party&amp;quot;
if IsInRaid() then group = &amp;quot;raid&amp;quot; end

if PQR_SpellAvailable(61999) then
	for i=1, members, 1 do
		local member = group..tostring(i)
		if ( UnitIsDead(member) or UnitIsCorpse(member) )
		  and not PQR_IsOutOfSight(member)
		  and IsSpellInRange(GetSpellInfo(61999), member) == 1
		  and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		  and ( UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot;
		   or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; ) then
			PQR_CustomTarget = member
			return true
		end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>local HoW = UnitBuffID(&amp;quot;player&amp;quot;, 57330)

if PQR_SpellAvailable(57330) then
	if HoW then
		local HoWexpire = select(7, UnitBuffID(&amp;quot;player&amp;quot;, 57330)) - GetTime()
		if HoWexpire &amp;lt;= 3 then
			return true
		elseif UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 20 then
			return true
		end	
	else
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Empower Rune Weapon</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>local RunesOnCD = 0

if not UnitBuffID(&amp;quot;player&amp;quot;, 51460)
	and PQR_SpellAvailable(47568)
	and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; select(4, GetSpellInfo(56815))
	and PQ_ValidUnit
	and not AoEToggle
	and UnitExists(PQR_CustomTarget)
	and ( UnitLevel(PQR_CustomTarget) == -1 or UnitIsUnit(PQR_CustomTarget, &amp;quot;boss1&amp;quot;) ) then
		for i=1, 6 do
			if not select(3, GetRuneCooldown(i)) then
				RunesOnCD = RunesOnCD + 1
			end
		end
end

if RunesOnCD == 5 then
	Nova_Notify(&amp;quot;Popped Empower Rune Weapon&amp;quot;)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Use: Mouseover Skill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and IsMouseButtonDown()
 then RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName()) end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heart Strike</Name><Default>false</Default><SpellID>55050</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(45902)
	and PQ_ValidUnit
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt;= 70
	and PQR_UnitFacing(&amp;quot;player&amp;quot;, PQR_CustomTarget)
	and IsSpellInRange(GetSpellInfo(45902), PQR_CustomTarget) == 1 then
		BR1start, BR1duration, BR1ready = GetRuneCooldown(1)
		BR2start, BR2duration, BR2ready = GetRuneCooldown(2)
		BR1type = GetRuneType(1)
		BR2type = GetRuneType(2)
		
		if ( BR1ready and BR1type ~=4 ) or ( BR2ready and BR2type ~= 4 ) then
			if BR1ready or BR2ready then
				CastSpellByName(GetSpellInfo(55050), PQR_CustomTarget) 
				return true
			end
		end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Blood Boil</Name><Default>false</Default><SpellID>48721</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48721)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(45462), PQR_CustomTarget) == 1
	and AoEToggle
	and (UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;) or UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;PLAYER&amp;quot;)) then
		BR1start, BR1duration, BR1ready = GetRuneCooldown(1)
		BR2start, BR2duration, BR2ready = GetRuneCooldown(2)
		if BR1ready or BR2ready or select(2, DeathRuneCD()) &amp;gt;= 1 then return true end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rune Strike</Name><Default>false</Default><SpellID>56815</SpellID><Actions></Actions><Lua>local RunesOffCD = 0
if PQR_SpellAvailable(56815)
	and PQ_ValidUnit
	and PQR_UnitFacing(&amp;quot;player&amp;quot;, PQR_CustomTarget)
	and IsSpellInRange(GetSpellInfo(56815), PQR_CustomTarget) == 1 then
		for i=3, 6 do
			if select(3, GetRuneCooldown(i)) == true then
				RunesOffCD = RunesOffCD + 1
			end
		end
		
		if RunesOffCD == 4 and select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 95 then return false
		elseif SafeToDeathStrike() and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 95 then return false
		elseif RunesOffCD &amp;gt;= 2 and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 60 then return false
		elseif select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= select(4, GetSpellInfo(56815)) then return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Bone Shield</Name><Default>false</Default><SpellID>49222</SpellID><Actions></Actions><Lua>local BoneShield = UnitBuffID(&amp;quot;player&amp;quot;, 49222)

if PQR_SpellAvailable(49222)
  and BoneShield 
  and not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	local BoneShieldCount = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 49222))
	if BoneShieldCount &amp;lt;= 2 then
		return true
	end
elseif PQR_SpellAvailable(49222)
  and not BoneShield then
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Death Strike</Name><Default>false</Default><SpellID>49998</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(49998)
  and PQ_ValidUnit
  and IsSpellInRange(GetSpellInfo(49998), PQR_CustomTarget) == 1
  and PQR_UnitFacing(&amp;quot;player&amp;quot;, PQR_CustomTarget)
  --and SafeToDeathStrike() 
  then
  	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rune Tap</Name><Default>false</Default><SpellID>48982</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48982)
  and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 50 then
  	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Special Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Fading Light
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end

-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
	
if HoT == GetSpellInfo(103327)
 and not UnitBuffID(&amp;quot;player&amp;quot;, 48792) 
 and timer/1000 - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end	

-- Try to aim on Darkmoon Faerie Cannon
local canontime = select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116))
if canontime and canontime - GetTime() &amp;lt; 1.07 then CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) end

-- Code provided by Kickmydog
-- Avoid Fragmentation on Madness
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Pestilence</Name><Default>false</Default><SpellID>50842</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(50842)
	and PQ_ValidUnit
	and PQ_Pestilence
	and AoEToggle
	and IsSpellInRange(GetSpellInfo(45462), PQR_CustomTarget) == 1
	and (UnitDebuffID(PQR_CustomTarget,55095,&amp;quot;PLAYER&amp;quot;) and UnitDebuffID(PQR_CustomTarget,55078,&amp;quot;PLAYER&amp;quot;)) then
		_, _, BR1ready = GetRuneCooldown(1)
		_, _, BR2ready = GetRuneCooldown(2)
		if BR1ready or BR2ready or select(2, DeathRuneCD()) &amp;gt;= 1 then
			if not IsPlayerSpell(108170) then
				PQ_Pestilence = false
				return true
			else
				CastSpellByName(GetSpellInfo(48721), PQR_CustomTarget)
				return false
			end
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Death Grip</Name><Default>false</Default><SpellID>49576</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(49576)
 and Nova_Mod() == 2
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and IsSpellInRange(GetSpellInfo(49576), &amp;quot;mouseover&amp;quot;) == 1
 and PQR_UnitFacing(&amp;quot;player&amp;quot;, PQR_CustomTarget)
 and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dark Command</Name><Default>false</Default><SpellID>56222</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(56222)
 and Nova_Mod() == 4
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and IsSpellInRange(GetSpellInfo(56222), &amp;quot;mouseover&amp;quot;) == 1
 and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)
 and UnitDetailedThreatSituation(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) == nil then
	PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HS Org</Name><Default>false</Default><SpellID>55050</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(55050)
	and PQ_ValidUnit
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt;= 70
	and IsSpellInRange(GetSpellInfo(55050), PQR_CustomTarget) == 1 then
		BR1start, BR1duration, BR1ready = GetRuneCooldown(1)
		BR2start, BR2duration, BR2ready = GetRuneCooldown(2)
		
		if BR1ready or BR2ready or select(2, DeathRuneCD()) &amp;gt;= 1 then
			if BR1ready or BR2ready then return true
			--[[ elseif BR1ready and not BR2ready then
				if BR2start + BR2duration - GetTime() &amp;lt;= 1.5 then return true end
			elseif not BR1ready and BR2ready then
				if BR1start + BR2duration - GetTime() &amp;lt;= 1.5 then return true end ]]--
			elseif select(2, DeathRuneCD()) &amp;gt;= 1 then 
			CastSpellByID(GetSpellInfo(45902), PQR_CustomTarget) return true end
		end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Blood Tap</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 114851) 
 and select(4, UnitBuffID(&amp;quot;player&amp;quot;, 114851)) &amp;gt;= 5 
 and PQR_SpellAvailable(45529) then
 	local RunesOffCD = 0
 	for i = 1, 6 do
 		if select(3, GetRuneCooldown(i)) then
 			RunesOffCD = RunesOffCD + 1
 		end
 	end
 	
 	if RunesOffCD + DeathRuneCheck() &amp;lt;= 2 then
 		return true
 	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Boil (Proc)</Name><Default>false</Default><SpellID>48721</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48721)
 and PQ_ValidUnit
 and IsSpellInRange(GetSpellInfo(45462), PQR_CustomTarget) == 1
 and (UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;) and UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;PLAYER&amp;quot;)) then
	if UnitBuffID(&amp;quot;player&amp;quot;, 81141) then
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Test Frame -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FirstRun == nil then
 FristRun = true
 
 if GetCVar(&amp;quot;Nova_Frame&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Frame&amp;quot;, 0) end
 
 
-- Save
function Nova_SaveAll()
	print(&amp;quot;You just saved everything lawl&amp;quot;)
end

-- Hide the frame
function Nova_HideFrame()
	Nova_Notify:Hide()
end

-- Debug Notification Frame
Nova_Notify = CreateFrame(&amp;apos;Frame&amp;apos;, &amp;apos;Nova_Notify&amp;apos;, UIParent)
Nova_Notify:ClearAllPoints()
Nova_Notify:SetHeight(300)
Nova_Notify:SetWidth(300)
--Nova_Notify:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_Notify_OnUpdate)
Nova_Notify:SetMovable(true)
Nova_Notify:EnableMouse(true)
Nova_Notify:RegisterForDrag(&amp;quot;LeftButton&amp;quot;)
Nova_Notify:SetScript(&amp;quot;OnDragStart&amp;quot;, Nova_Notify.StartMoving)
Nova_Notify:SetScript(&amp;quot;OnDragStop&amp;quot;, Nova_Notify.StopMovingOrSizing)
Nova_Notify:SetBackdrop({bgFile = &amp;quot;Interface/Tooltips/UI-Tooltip-Background&amp;quot;, 
                                            edgeFile = &amp;quot;Interface/Tooltips/UI-Tooltip-Border&amp;quot;, 
                                            tile = true, tileSize = 16, edgeSize = 16, 
                                            insets = { left = 4, right = 4, top = 4, bottom = 4 }});
Nova_Notify:SetBackdropColor(0,0,0,1);
Nova_Notify:Hide()
Nova_Notify.text = Nova_Notify:CreateFontString(nil, &amp;apos;ARTWORK&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
Nova_Notify.text:SetAllPoints()
Nova_Notify:SetPoint(&amp;apos;CENTER&amp;apos;, 0, 200)
Nova_NotifyTime = 0

-- Inherited Button
Nova_iButton = CreateFrame(&amp;apos;Button&amp;apos;, Nova_iButton, nil)
Nova_iButton:ClearAllPoints()
Nova_iButton:RegisterForClicks(&amp;quot;LeftButtonDown&amp;quot;, &amp;quot;RightButtonDown&amp;quot;)
Nova_iButton:SetHeight(15)
Nova_iButton:SetWidth(45)
Nova_iButton:SetBackdrop({bgFile = &amp;quot;Interface/Tooltips/UI-Tooltip-Background&amp;quot;, 
                                            edgeFile = &amp;quot;Interface/Tooltips/UI-Tooltip-Border&amp;quot;, 
                                            tile = true, tileSize = 16, edgeSize = 16, 
                                            insets = { left = 4, right = 4, top = 4, bottom = 4 }});
Nova_iButton:SetBackdropColor(0,0,0,1);
Nova_iButton:Hide()

-- Inherited EditBoxes
Nova_iEditbox = CreateFrame(&amp;apos;Editbox&amp;apos;, Nova_iEditbox, nil)
Nova_iEditbox:ClearAllPoints()
Nova_iEditbox:SetHeight(14)
Nova_iEditbox:SetWidth(40)
Nova_iEditbox:SetMaxNumbers(3)
Nova_iEditbox:SetAutoFocus(false)
Nova_iEditbox:SetFont(&amp;quot;Fonts\\ARIALN.TTF&amp;quot;, 12)
Nova_iEditbox:SetScript(&amp;apos;OnEnterPressed&amp;apos;, function(self)
		self:ClearFocus();
	end);
Nova_iEditbox:SetScript(&amp;apos;OnEscapePressed&amp;apos;, function(self)
		self:ClearFocus();
	end);
Nova_iEditbox:SetBackdrop({bgFile = &amp;quot;Interface/Tooltips/UI-Tooltip-Background&amp;quot;, 
                                            edgeFile = &amp;quot;Interface/Tooltips/UI-Tooltip-Border&amp;quot;, 
                                            tile = true, tileSize = 16, edgeSize = 16, 
                                            insets = { left = 4, right = 4, top = 4, bottom = 4 }});
Nova_iEditbox:SetBackdropColor(0,0,0,1);
Nova_iEditbox:ClearFocus()
Nova_iEditbox:Hide()


--Exit Button
Nova_ExitButton = CreateFrame(&amp;apos;Button&amp;apos;, Nova_ExitButton, Nova_Notify, Nova_iButton)
Nova_ExitButton:ClearAllPoints()
Nova_ExitButton:SetHeight(20)
Nova_ExitButton:SetWidth(20)
Nova_ExitButton:RegisterForClicks(&amp;quot;LeftButtonDown&amp;quot;, &amp;quot;RightButtonDown&amp;quot;)
Nova_ExitButton:SetText(&amp;quot;X&amp;quot;)
Nova_ExitButton:SetScript(&amp;apos;OnClick&amp;apos;, HideParentPanel(self))
Nova_ExitButton:Show()
Nova_ExitButton:SetPoint(&amp;apos;TOPRIGHT&amp;apos;, -50, -50)


--Save Button
Nova_SaveButton = CreateFrame(&amp;apos;Button&amp;apos;, nil, Nova_Notify, Nova_iButton)
Nova_SaveButton:RegisterForClicks(&amp;quot;LeftButtonDown&amp;quot;, &amp;quot;RightButtonDown&amp;quot;)
Nova_SaveButton:SetText(&amp;quot;Save&amp;quot;)
Nova_SaveButton:SetScript(&amp;apos;OnClick&amp;apos;, Nova_SaveAll)
Nova_SaveButton:Show()
Nova_SaveButton:SetPoint(&amp;apos;BOTTOMRIGHT&amp;apos;, -50, 50)

-- Test
Nova_Editbox = CreateFrame(&amp;apos;Editbox&amp;apos;, Nova_Editbox, Nova_Notify, Nova_iEditbox)
Nova_Editbox:SetPoint(&amp;apos;LEFT&amp;apos;, 10, 100)
Nova_Editbox:Show()



	SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
	SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
	function SlashCmdList.NOVAFRAME(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Frame&amp;quot;) then
			SetCVar(&amp;quot;Nova_Frame&amp;quot;, 1)
			Nova_Notify:Show()
		else
			SetCVar(&amp;quot;Nova_Frame&amp;quot;, 0)
			Nova_Notify:Hide()
		end
	end



end

if Nova_Mod() == 48 then
	Nova_Notify:Show()
	print(&amp;quot;show&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Encounter Code --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;apos;boss1&amp;apos;)
 and GetInstanceInfo() == &amp;apos;raid&amp;apos; then
 	local npcid = = tonumber(UnitGUID(&amp;apos;boss1&amp;apos;):sub(6,10), 16)
 	local CastingInfo = UnitCastingInfo(&amp;apos;boss1&amp;apos;)
 	
 	if npcid == 60009 then
	 	local EAB = ActionButton_GetPagedID(_G[&amp;apos;ExtraActionButton1&amp;apos;])
	 	local EAF = _G[&amp;apos;ExtraActionBarFrame&amp;apos;]
	 	
	 	
	 	if EAF:IsShown() then
	 		if select(2, GetAction(EAB)) == 115911 
	 		 and UnitExists(&amp;apos;focus&amp;apos;) 
	 		 and UnitInRaid(&amp;apos;focus&amp;apos;)
	 		 and not PQR_IsMoving(0.1) then
	 			if CastingInfo == GetSpellInfo(116157) 
	 			 or UnitDebuffID(&amp;apos;focus&amp;apos;, 116157) then
	 				if (GetSpellCooldown(115911) + select(2, GetSpellCooldown(115911)) ) - GetTime() &amp;lt;= 2 then
	 					UseAction(EAB, &amp;apos;focus&amp;apos;)
	 				end
	 			end
	 			for i=1, #</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DEATHKNIGHT>