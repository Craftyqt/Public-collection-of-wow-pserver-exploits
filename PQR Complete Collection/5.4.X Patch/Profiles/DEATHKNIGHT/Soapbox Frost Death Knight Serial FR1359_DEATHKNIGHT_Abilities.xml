<?xml version="1.0" encoding="utf-8" ?><DEATHKNIGHT><Ability><Name>Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,57330)
and not UnitBuffID(&amp;quot;player&amp;quot;,19506)
and not UnitBuffID(&amp;quot;player&amp;quot;,6673)
then
return true
end</Lua><RecastDelay>2000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Presence</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_FrostPresence_enable then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then
CastShapeshiftForm(2)
return true
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Tap Soul Reaper</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local val = tonumber(PQI_SoapboxFrost_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxFrost_SoulReaperTrash_value)
local Empower, Charges, Chargescount, SRCD = Empower, Charges, Chargescount, SRCD


if Empower == true and Charges and Chargescount &amp;gt;= 5  and SRCD &amp;lt; 1 then
	if (UnitLevel(&amp;quot;target&amp;quot;) == -1 or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;boss1&amp;quot;) or UnitIsPlayer(&amp;quot;target&amp;quot;))  then
		if PQI_SoapboxFrost_SoulReaperBoss_enable then
			if Targethealth &amp;lt;= val then
			return true
			end
		end
	elseif PQI_SoapboxFrost_SoulReaperTrash_enable then
		if Targethealth &amp;lt;= val2 then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap KM</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>local BloodTap, Charges, Chargescount, KillingMachine = 
BloodTap, Charges, Chargescount, KillingMachine

---actions+=/blood_tap,if=talent.blood_tap.enabled---
if BloodTap == true then
	if Charges and Chargescount &amp;gt; 4 then
		if KillingMachine then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pillar of Frost</Name><Default>false</Default><SpellID>0</SpellID><Actions>/cast Berserking |/cast Blood Fury</Actions><Lua>if not PQI_SoapboxFrost_Cooldowns_enable then return false end

local CDSwap, GloveCD, Trinket1CD, Trinket2CD, PillarCD = CDSwap, GloveCD, Trinket1CD, Trinket2CD, 
PillarCD

--- actions+=/pillar_of_frost---
if PillarCD &amp;lt; 1 and MeleeRange() and CDSwap then
	if RCD &amp;lt; 1 or RCD &amp;gt; 20 then
		if UnitDebuffID(&amp;quot;target&amp;quot;,55095) 
		and UnitDebuffID(&amp;quot;target&amp;quot;,55078) then
			UseInventoryItem(10)
			CastSpellByName(GetSpellInfo(51271))
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raise Dead</Name><Default>false</Default><SpellID>46584</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Cooldowns_enable then return false end

local CDSwap = CDSwap

---actions+=/raise_dead---
if CDSwap and UnitExists(&amp;quot;pet&amp;quot;) == nil and Pillar then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Plague Leech</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>local PlagueLeech, BP, BPtimer, FF, FFtimer, UnholyRune, DeathRune, OutbreakCD, Empower = PlagueLeech, BP, BPtimer, FF, 
FFtimer, UnholyRune, DeathRune, OutbreakCD, Empower

if PlagueLeech == true
and BP ~= nil
and FF ~= nil
then
	if BPtimer - GetTime() &amp;lt; 3
	and OutbreakCD &amp;lt; 2.5
	and Empower == true
	then
	return true
	end
	
	if BPtimer - GetTime() &amp;lt; 3
	and UnitBuffID(&amp;quot;player&amp;quot;,59052)
	and Empower == true
	then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Icebound Fortitude</Name><Default>false</Default><SpellID>48792</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_IceboundFortitude_enable then return false end

local value = tonumber(PQI_SoapboxFrost_IceboundFortitude_value)
local AMSCD = AMSCD
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if Playerhealth &amp;lt;= value
or (UnitDebuffID(&amp;quot;player&amp;quot;, 111850) and (AMSCD &amp;gt; 2 and not UnitBuffID(&amp;quot;player&amp;quot;, 48707))) then 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMouseButtonDown(2)
and IsUsableSpell(43265)
and select(2,GetSpellCooldown(43265)) &amp;lt; 2
then 
CastSpellByName(GetSpellInfo(43265)) 

 return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Strike (RP cap)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local RP = RP

---actions+=/frost_strike,if=runic_power&amp;gt;76---
if IsUsableSpell(49143) and RP &amp;gt; 76
then
CastSpellByName(GetSpellInfo(49143))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---Engineer Glove Cooldown---
GloveCD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10)

---Trinket 1 Cooldown---
Trinket1CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

---Trinket 2 Cooldown---
Trinket2CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

Mushroom = false

---Raise Dead Cooldown---
local RStart, RDuration = GetSpellCooldown(46584)
RCD = RStart + RDuration - GetTime()
if IsUsableSpell(113516) 
and UnitBuffID(&amp;quot;player&amp;quot;, 110498) 
and RCD &amp;gt; 1 and RCD &amp;lt; 60 then
Mushroom = true
end

---Mind Freeze CD---
local MFStart, MFDuration = GetSpellCooldown(47528)
MFCD = MFStart + MFDuration - GetTime()

---Necrotic Strike CD---
local NSStart, NSDuration = GetSpellCooldown(73975)
NSCD = NSStart + NSDuration - GetTime()

---Death Pact CD---
local DPStart, DPDuration = GetSpellCooldown(48743)
DPCD = DPStart + DPDuration - GetTime()

---Soul Reaper CD---
local SRStart, SRDuration = GetSpellCooldown(130735)
SRCD = SRStart + SRDuration - GetTime()

---Raise Dead Cooldown---
local RStart, RDuration = GetSpellCooldown(46584)
RCD = RStart + RDuration - GetTime()

---Shroom Cooldown---
local MStart, MDuration = GetSpellCooldown(113516)
MCD = MStart + MDuration - GetTime()

---Outbreak Cooldown---
local OutbreakStart, OutbreakDuration = GetSpellCooldown(77575)
OutbreakCD = OutbreakStart + OutbreakDuration - GetTime()

---ERW Cooldown---
local ERWStart, ERWDuration = GetSpellCooldown(47568)
ERWCD = ERWStart + ERWDuration - GetTime()

---AMS Cooldown---
local AMSStart, AMSDuration = GetSpellCooldown(48707)
AMSCD = AMSStart + AMSDuration - GetTime()
---ERW Cooldown---
local RAStart, RADuration = GetSpellCooldown(61999)
RACD = RAStart + RADuration - GetTime()

local BlightStart, BlightDuration = GetSpellCooldown(115989)
BlightCD = BlightStart + BlightDuration - GetTime()

---Pillar of Frost Cooldown---
local PillarStart, PillarDuration = GetSpellCooldown(51271)
PillarCD = PillarStart + PillarDuration - GetTime()

---Gorfiend&amp;apos;s Grasp Cooldown---
local GraspStart, GraspDuration = GetSpellCooldown(108199)
GraspCD = GraspStart + GraspDuration - GetTime()

---Remorseless Winter Cooldown---
local WinterStart, WinterDuration = GetSpellCooldown(108200)
WinterCD = WinterStart + WinterDuration - GetTime()

---Desecrated Ground Cooldown---
local GroundStart, GroundDuration = GetSpellCooldown(108201)
GroundCD = GroundStart + GroundDuration - GetTime()

---Touch of Death Cooldown---
local TODStart, TODDuration = GetSpellCooldown(115080)
TODCD = TODStart + TODDuration - GetTime()

---Healthstone Cooldown---
HealthstoneCD = select(2,GetItemCooldown(5512))

---Fortifying Brew Cooldown---
local BrewStart, BrewDuration = GetSpellCooldown(115203)
BrewCD = BrewStart + BrewDuration - GetTime()

---Touch of Karma Cooldown---
local KarmaStart, KarmaDuration = GetSpellCooldown(124280)
KarmaCD = KarmaStart + KarmaDuration - GetTime()

---Dampen Harm Cooldown---
local HarmStart, HarmDuration = GetSpellCooldown(122278)
HarmCD = HarmStart + HarmDuration - GetTime()

---Diffuse Magic Cooldown---
local MagicStart, MagicDuration = GetSpellCooldown(122783)
MagicCD = MagicStart + MagicDuration - GetTime()

---Chi Wave Cooldown---
local WaveStart, WaveDuration = GetSpellCooldown(115098)
WaveCD = WaveStart + WaveDuration - GetTime()

---Zen Sphere Cooldown---
local ZenStart, ZenDuration = GetSpellCooldown(124081)
ZenCD = ZenStart + ZenDuration - GetTime()




--------------------------------------HEALTH/POWER TOOLS------------------------------------------
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

---Runic Power---
RP = UnitPower(&amp;quot;player&amp;quot;)

---Death Rune CDs---
local Death1Start, Death1Duration, Death1runeReady = GetRuneCooldown(5)
Death1CD = Death1Start + Death1Duration - GetTime()

local Death2Start, Death2Duration, Death2runeReady = GetRuneCooldown(6)
Death2CD = Death2Start + Death2Duration - GetTime()

--Melee Range---
function MeleeRange()
	if IsSpellInRange(GetSpellInfo(45462), &amp;quot;target&amp;quot;) == 1 then 
	return true 
	else 
	return false
	end
end

-------------------------------------BUFFS--------------------------------------------------------
---Frost Fever---
FF,_,_,_,_,_,FFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;)

---Blight---
Blighted = UnitBuffID(&amp;quot;player&amp;quot;, 115989)

---Rime---
Rime = UnitBuffID(&amp;quot;player&amp;quot;, 59052)  

---Killing Machine---
KillingMachine = UnitBuffID(&amp;quot;player&amp;quot;, 51124)  

---Frost Fever---
FF,_,_,_,_,_,FFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;)

---Blood Plague---
BP,_,_,_,_,_,BPtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;PLAYER&amp;quot;)

---Blood Charges---
Charges,_,_,Chargescount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,114851)

---Bloodlust Check---
Bloodlust = UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
or UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)

---Pillar of Frost---
Pillar = UnitBuffID(&amp;quot;player&amp;quot;, 51271)

---Touch of Death Boss Check---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

DeathBoss = false

BossName = { 60047, 60051, 60043, 59915, 60009, 60143, 60701, 60708, 60709, 60710, 60410, 60400, 60399,
62980, 62543, 62164, 62397, 62511, 62711, 62837, 60583, 60586, 60585, 62442, 62983, 60999, 60491 }

for i=1, #BossName do
   if targetGUID == BossName[i] then DeathBoss = true
   end
end
end

---Disarm Target List---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Grapple = false

Disarm = { 61947, 61240, 61398, 59240, 62405, 62408, 62402, 60396, 64453, 63591, 63589 }

for i=1, #Disarm do
   if targetGUID == Disarm[i] then Grapple = true
   end
end
end

---Is Target Disarmed---
Disarmed = false

Weapons = { 676, 51722, 91644, 64058, 117368 }

for y=1, #Weapons do
   if UnitDebuffID(&amp;quot;target&amp;quot;, Weapons[y]) then Disarmed = true
   end
end

---Trinket Slot Check---
Trinkets = 0

trinketID = { 87495, 86043, 91099, 93253, 93258, 89082, 84934, 91452, 81265, 84344 }

for i=13, 14, 1  do
	 for y=1, #trinketID do
   if GetInventoryItemID(&amp;apos;player&amp;apos;, i) == trinketID[y] then 
     Trinkets = Trinkets + 1
   end
  end
end

---Trinket Buff Check---
Proc = 0 

Buff = { 126649, 126554, 126707, 128984, 127928, 126483, 126489, 105574, 127575, 
126690, 136086, 136086, 126599, 126484, 136088, 118334, 104423, 104510, 105697, 126734 }

for i=1, #Buff do
   if UnitBuffID(&amp;quot;player&amp;quot;, Buff[i]) then Proc = Proc + 1 
   end
end

---Touch of Death Target Check---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

DeathBoss = false

BossName = { 60047, 60051, 60043, 59915, 60009, 60143, 60701, 60708, 60709, 60710, 60410, 60400, 60399,
62980, 62543, 62164, 62397, 62511, 62711, 62837, 60583, 60586, 60585, 62442, 62983, 60999, 60491 }

for i=1, #BossName do
   if targetGUID == BossName[i] then DeathBoss = true
   end
end
end

---Blacklist ToD Targets---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Blacklist = false

BossName = { 60913 }

for i=1, #BossName do
   if targetGUID == BossName[i] then Blacklist = true
   end
end
end

---Blacklist AoE Targets---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

NoAoE = false

Name = { 62995 }

for i=1, #Name do
   if targetGUID == Name[i] then NoAoE = true
   end
end
end

---Runic Empowerment Check---
Empower = false

for i=1, 6 do
	local RuneStart, RuneDuration = GetRuneCooldown(i)
	RunePercent =  100 * ((GetTime() - RuneStart) / RuneDuration)
   if RunePercent &amp;lt; 1 then Empower = true
   end
end

---Runic Corruption Check---
DeathCD = 0

Death = { 1, 2 }

for i=1, #Death do
	local RuneStart, RuneDuration = GetRuneCooldown(Death[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;gt; 1 then DeathCD = DeathCD + 1
    end
end

UnholyCD = 0


Unholy = { 3, 4 }

for i=1, #Unholy do
	local RuneStart, RuneDuration = GetRuneCooldown(Unholy[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;gt; 1 then UnholyCD = UnholyCD + 1
    end
end

FrostCD = 0

Frost = { 5, 6 }

for i=1, #Frost do
	local RuneStart, RuneDuration = GetRuneCooldown(Frost[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;gt; 1 then FrostCD = FrostCD + 1
    end
end


Oblit = 0

Cools = { 3, 4 }

for i=1, #Cools do
	local RuneStart, RuneDuration = GetRuneCooldown(Cools[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
	if RuneCD &amp;lt; 0.1 then Oblit = Oblit + 1
    end
end

---AoE Howling Blast Check (Death Runes)---
Blast = 0

Cools2 = { 1, 2 }

for i=1, #Cools2 do
	local RuneStart, RuneDuration = GetRuneCooldown(Cools2[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
	if RuneCD &amp;lt; 0.1 then Blast = Blast + 1
   end
end

---AoE Howling Blast Check (Frost Runes)---
Blast2 = 0

Cools3 = { 5, 6 }
for i=1, #Cools3 do
	local RuneStart, RuneDuration = GetRuneCooldown(Cools3[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
	if RuneCD &amp;lt; 0.1 then Blast2 = Blast2 + 1
   end
end

---Empower Rune Weapon Check---
RuneWep = 0

Finish = { 1, 2, 3, 4, 5, 6 }

for i=1, #Finish do
	local RuneStart, RuneDuration = GetRuneCooldown(Finish[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;gt; 1 then RuneWep = RuneWep + 1
    end
end



---Rune off cooldown, dont mind the contradiction---
NoRune = nil
function NoRune()
	local Blood = 0
	local Frost = 0
	local Unholy = 0
	local Death = 0
	for i=1, 6 do
		if GetRuneType(i) == 1 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Blood = Blood + 1
		end
		if GetRuneType(i) == 2 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Unholy = Unholy + 1
		end
		if GetRuneType(i) == 3 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Frost = Frost + 1
		end
		if GetRuneType(i) == 4 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Death = Death + 1
		end
	end
	return Blood, Unholy, Frost, Death
end

RuneSoon = nil
function RuneSoon()
    local Blood = 0
	local Frost = 0
	local Unholy = 0
	local Death = 0
	for i=1, 6 do
		if GetRuneType(i) == 1 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Blood = Blood + 1
		end
		if GetRuneType(i) == 2 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Unholy = Unholy + 1
		end
		if GetRuneType(i) == 3 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Frost = Frost + 1
		end
		if GetRuneType(i) == 4 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Death = Death + 1
		end
	end
	return Blood, Unholy, Frost, Death
end


---Soul Reaper Check---
SoulReaper = 0

SoulRune = { 1, 2, 5, 6 }

for i=1, #SoulRune do
local RuneStart, RuneDuration = GetRuneCooldown(SoulRune[i])
RuneCD = RuneStart + RuneDuration - GetTime()
local SRStart, SRDuration = GetSpellCooldown(130735)
SRCD = SRStart + SRDuration - GetTime()
	if (RuneCD &amp;gt; SRCD)  then SoulReaper = SoulReaper + 1
   	end
end

Reaping = 0

ReaperRune = { 1, 2, 5, 6 }

for i=1, #ReaperRune do
local ReaperStart, ReaperDuration = GetRuneCooldown(ReaperRune[i])
ReaperCD = ReaperStart + ReaperDuration - GetTime()
	if ReaperCD &amp;lt; 0.1 then Reaping = Reaping + 1
	end
end

DND = 0

DNDRune = { 1, 2, 5, 6 }

for i=1, #DNDRune do
local DNDStart, DNDDuration = GetRuneCooldown(DNDRune[i])
DNDCD = DNDStart + DNDDuration - GetTime()
	if DNDCD &amp;gt; 1 then DND = DND + 1
	end
end

for i=1, 8 do
   local name,_,_,_,type=UnitDebuff(&amp;quot;player&amp;quot;,i)
   if type == &amp;quot;Magic&amp;quot; then MagicDebuff = true
   end
end

---Control Undead Target List---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Control = false

Undeads = { 36725, 16165, 37122, 37038, 36807, 30278, 58822, 31220, 26694, 26830, 26624, 26636 }

for i=1, #Undeads do
   if targetGUID == Undeads[i] then Control = true
   end
end
end

---AMS Use List---
BossShield = false

Debuff = { 123011, 123012, 111850, 124863 }

for i=1, #Debuff do
	local Dread,_,_,Dreadcount,_,_,expires = UnitDebuffID(&amp;quot;player&amp;quot;,122768) 
	if UnitDebuffID(&amp;quot;player&amp;quot;, Debuff[i]) 
	or UnitCastingInfo(&amp;quot;target&amp;quot;) == &amp;quot;Expel Corruption&amp;quot;
	or UnitChannelInfo(&amp;quot;target&amp;quot;) == &amp;quot;Get Away!&amp;quot;
	or UnitChannelInfo(&amp;quot;target&amp;quot;) == &amp;quot;Lightning Storm&amp;quot;
	or (Dread and Dreadcount &amp;gt; 15) then
	BossShield = true
	end
end


---Time to die---

TimeToDie = 999999
if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PlayerCombat then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end             
_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
_currentTime = GetTime()
timeDiff = _currentTime - _firstTime
hpDiff = _firstLife - _currentLife
	if hpDiff &amp;gt; 0 then
		fullTime = timeDiff*_firstLifeMax/hpDiff
		pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
		calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
		if calcTime &amp;lt; 1 then
			calcTime = 1
		end
   	TimeToDie = calcTime
	end
	if hpDiff &amp;lt;= 0 then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end

---dummy---
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
		TimeToDie = 99
	end
end

PQ_ImpalingSpearCD = 0
PQ_ImpalingSpear = 122224

PQ_Frame = nil
PQ_CanCast = true
PQ_CanBT = true
PQ_CanImpalingSpear = true
function PQ_Frame_OnEvent(self, event, ...)
	if ... ~= &amp;quot;player&amp;quot; then return end
	
	local spellID = select(5, ...)
	
	if spellID ~= PQ_ImpalingSpear then
		PQ_GCD = GetTime() + 0.7
		PQ_CanCast = false
	end
			
	if spellID == PQ_ImpalingSpear then
		PQ_ImpalingSpearCD = GetTime() + 5
		PQ_CanImpalingSpear = false
	end
end
-----------------------------------------GLYPHS--------------------------------------------------
GlyphTouch = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 58631 then GlyphTouch = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 58631 then GlyphTouch = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 58631 then GlyphTouch = true end



----------------------------------------TALENTS----------------------------------------------------
BloodTap = false
Empowerment = false
Corruption = false
PlagueLeech = false
Grasp = false
Winter = false
Ground = false
Blight = false
Lichborne = false
Siphon = false
DeathPact = false
Conversion = false

if select(2,GetTalentRowSelectionInfo(5)) == 13 then BloodTap = true end

if select(2,GetTalentRowSelectionInfo(5)) == 14 then Empowerment = true end

if select(2,GetTalentRowSelectionInfo(5)) == 15 then Corruption = true end

if select(2,GetTalentRowSelectionInfo(1)) == 2 then PlagueLeech = true end

if select(2,GetTalentRowSelectionInfo(1)) == 3 then Blight = true end

if select(2,GetTalentRowSelectionInfo(6)) == 16 then Grasp = true end

if select(2,GetTalentRowSelectionInfo(6)) == 17 then Winter = true end

if select(2,GetTalentRowSelectionInfo(6)) == 18 then Ground = true end

if select(2,GetTalentRowSelectionInfo(2)) == 4 then Lichborne = true end

if select(2,GetTalentRowSelectionInfo(4)) == 11 then Siphon = true end

if select(2,GetTalentRowSelectionInfo(4)) == 10 then DeathPact = true end

if select(2,GetTalentRowSelectionInfo(4)) == 12 then Conversion = true end
------------------------------------------RACIALS(Death Knight)--------------------------------------------
---Race Check---
Troll = IsSpellKnown(26297)
Orc = IsSpellKnown(20572)
Goblin = IsSpellKnown(69041)
BloodElf = IsSpellKnown(25046)

---Cooldown Check---
local TrollStart,TrollDuration = GetSpellCooldown(26297)
TrollCD = TrollStart + TrollDuration - GetTime()
local OrcStart,OrcDuration = GetSpellCooldown(20572)
OrcCD = OrcStart + OrcDuration - GetTime()
local BloodElfStart,BloodElfDuration = GetSpellCooldown(25046)
BloodElfCD = BloodElfStart + BloodElfDuration - GetTime()
local GoblinStart,GoblinDuration = GetSpellCooldown(69041)
GoblinCD = GoblinStart + GoblinDuration - GetTime()



------------------------------------------POTIONS--------------------------------------------------
VirmenCD = select(2,GetItemCooldown(76089))
Virmen = GetItemCount(76089)

MoguCD = select(2,GetItemCooldown(76095))
Mogu = GetItemCount(76095)

SharkCD = select(2,GetItemCooldown(77589))
Shark = GetItemCount(77589)

--------------------------------------PVP Tools----------------------------------------------------
function IsSlowed(unit)
local Slows = {
--WARLOCK--
18223,
--WARRIOR--
12323,
1715,
--PALADIN--
110300,                             
--DK--
45524,
50435,
--DRUID--
58180,
102355,
--HUNTER--
5116,
72217,
--MAGE--
7302,
116,
120,
44614,
--PRIEST--
124468,
15407,
--ROGUE--
26679,
3408,
--SHAMAN--
8056,
--MONK--
116095
              }
for i=1,#Slows do
        if UnitDebuffID(unit,Slows[i])
                then
                        return true
                end
        end
end

function SlowImmune(unit)
local Freedom = {
--Hand of Freedom--
1044,
--Dispersion--
47585
             }
for i=1,#Freedom do
        if UnitBuffID(unit,Freedom[i])
                then
                        return true
                end
        end
end

function IsImmune(unit)
local Immunity = {
110700, --Divine Shield
1022, --Hand of Protection
45438, --Ice Block
31224,--Cloak of Shadows
19263, --Deterrence
97417--BrittleBarrier
					}
for i=1,#Immunity do
        if UnitBuffID(unit,Immunity[i])
                then
                        return true
                end
        end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Reaper</Name><Default>false</Default><SpellID>130735</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_SoulReaperTrash_enable or not
PQI_SoapboxFrost_SoulReaperBoss_enable then return false end


local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local val = tonumber(PQI_SoapboxFrost_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxFrost_SoulReaperTrash_value)

if (UnitLevel(&amp;quot;target&amp;quot;) == -1 or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;boss1&amp;quot;) or UnitIsPlayer(&amp;quot;target&amp;quot;))  then
	if PQI_SoapboxFrost_SoulReaperBoss_enable then
		if Targethealth &amp;lt;= val then
		return true
		end
	end
elseif PQI_SoapboxFrost_SoulReaperTrash_enable then
	if Targethealth &amp;lt;= val2 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Killing Machine</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>local KillingMachine = KillingMachine

if KillingMachine then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rime</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>local NoAoE = NoAoE

--- actions+=/howling_blast,if=buff.rime.react---
if UnitBuffID(&amp;quot;player&amp;quot;,59052) then
	if NoAoE == false then
	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Killing Machine</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local KillingMachine, RP = KillingMachine, RP

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

---actions+=/frost_strike,if=buff.killing_machine.react---
if IsUsableSpell(49143) then
	if KillingMachine 
	or RP &amp;gt; 88 then
		CastSpellByName(GetSpellInfo(49143))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Outbreak - High-</Name><Default>false</Default><SpellID>77575</SpellID><Actions></Actions><Lua>local BP, FF = BP, FF

if BP == nil
or FF == nil then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Obliterate</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Howling Blast</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>local NoAoE = NoAoE
 
if NoAoE == false then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Howling Blast</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>local Blast, Blast2 = Blast, Blast2

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_SoapboxFrost_DNDQueue_enable then return false end

local Oblit = Oblit

if IsUsableSpell(43265)
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 
and Oblit == 2
then 
  CastSpellByName(GetSpellInfo(43265)) 
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Obliterate</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>local Oblit = Oblit

if UnitDebuffID(&amp;quot;target&amp;quot;,55095) 
and UnitDebuffID(&amp;quot;target&amp;quot;,55078) then
	if Oblit == 2 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Initialize--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local IB, IBtmer = IB, IBtimer 

if IsMounted()
or IsMouseButtonDown(3)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
or UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or UnitBuffID(&amp;quot;player&amp;quot;,5384) ~= nil
or UnitDebuffID(&amp;quot;target&amp;quot;,1499)
or (UnitBuffID(&amp;quot;target&amp;quot;,123250) and UnitBuffID(&amp;quot;target&amp;quot;,123181))
or UnitDebuffID(&amp;quot;target&amp;quot;,19503)
then return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pestilence</Name><Default>false</Default><SpellID>50842</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Pestilence_enable then return false end

local FF, BP, pestSwap = FF, BP, pestSwap


if FF ~= nil
and BP ~= nil 
and MeleeRange() then
	if pestSwap then	
	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Racials]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Troll, Orc, Goblin, BloodElf, TrollCD, OrcCD, BloodElfCD, GoblinCD, RP, Pillar = 
Troll, Orc, Goblin, BloodElf, TrollCD, OrcCD, BloodElfCD, GoblinCD, RP, Pillar

--Troll Berserking--
if Troll == true then 
	if TrollCD &amp;lt; 1 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 3045) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
	and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 90355) then
	CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	return true
	end
end

--Orc Blood Fury--
if Orc == true then 
	if (UnitLevel(&amp;quot;target&amp;quot;) == -1 or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;boss1&amp;quot;))
	and OrcCD &amp;lt; 1 
	and Pillar then
	CastSpellByName(GetSpellInfo(20572),&amp;quot;player&amp;quot;)
	return true
	end
end

--Blood Elf Arcane Torrent--
if BloodElf == true then 
	if BloodElfCD &amp;lt; 1 
	and RP &amp;lt; 40 then
	CastSpellByName(GetSpellInfo(25046),&amp;quot;player&amp;quot;)
	return true
	end
end

--Goblin Rocket Barrage--
if Goblin == true then 
	if GoblinCD &amp;lt; 1 then
	CastSpellByName(GetSpellInfo(69041),&amp;quot;target&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Override]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMouseButtonDown(3) then
	RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Potions]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_MoguPower_enable then return false end

local MoguCD, Mogu, Bloodlust = MoguCD, Mogu, Bloodlust

if Bloodlust
and MoguCD &amp;lt; 1 
and Mogu &amp;gt; 0 then
UseItemByName(76095, &amp;quot;player&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Boss Special</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--abilities lower in the rotation from being cast.
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
		elseif npcID == 62397 then -- Wind Lord Mel&amp;apos;jarak
        
        	if UnitExists(&amp;quot;focus&amp;quot;) then
        		local impalingDebuff = select(7, UnitDebuffID(&amp;quot;focus&amp;quot;, PQ_ImpalingSpear, &amp;quot;player&amp;quot;))
        		
        		if impalingDebuff and impalingDebuff - GetTime() &amp;lt; 7 or IsMouseButtonDown(3) then
        			if PQ_CanCast
        			and PQ_CanImpalingSpear then
        				if GetSpellInfo(PQ_ImpalingSpear) == UnitCastingInfo(&amp;quot;player&amp;quot;) then
        					return true 
        				end
        				RunMacroText(&amp;quot;/target [@focus]&amp;quot;)
        				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
        				RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
        				return true
        			end
        		end
       		end
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Icy Touch</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>local Reaping, BP, BPtimer, OutbreakCD, SoulReaper, Targethealth, NoAoE = Reaping, BP, BPtimer, OutbreakCD,
SoulReaper, Targethealth, NoAoE

if NoAoE == false then
return false
end

if (BP and BPtimer - GetTime() &amp;lt; 10) and OutbreakCD &amp;gt; 1 then
	if OutbreakCD &amp;gt; BPtimer - GetTime() then
	return false
	end
end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tier 6 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Tier6Talent_enable then return false end

local Ground, GroundCD, Winter, WinterCD, Grasp, GraspCD = Ground, GroundCD, Winter, WinterCD, Grasp, GraspCD

if PQI:IsHotkeys(PQI_SoapboxFrost_Tier6Talent_key) 
and GetCurrentKeyBoardFocus() == nil then
	if Winter == true then
		if WinterCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(108200),&amp;quot;player&amp;quot;)
		end
	end
	if Grasp == true then
		if GraspCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(108199),&amp;quot;player&amp;quot;)
		end
	end
	if Ground == true then
		if GroundCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(108201),&amp;quot;player&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_SoapboxFrost_DNDQueue_enable then return false end

local NoAoE = NoAoE

--- actions+=/death_and_decay---
if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and NoAoE == false
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Plague Strike</Name><Default>false</Default><SpellID>45462</SpellID><Actions></Actions><Lua>local Oblit = Oblit

if Oblit == 2 then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ST] Toggle Key</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false
  if PQI_SoapboxFrost_Pestilence_enable and (pestSwap or not pestSwap) then pestSwap = false 
  PQR_WriteToChat(&amp;quot;Pestilence: \124cFFE61515Disabled&amp;quot;)
  PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Disabled&amp;quot;, nil, &amp;apos;ff0000&amp;apos;) end
  if PQI_SoapboxFrost_DNDQueue_enable and DNDSwap then 
  PQR_WriteToChat(&amp;quot;Death and Decay: \124cFF15E615Queued&amp;quot;) end
  if PQI_SoapboxFrost_DNDQueue_enable and not DNDSwap then 
  PQR_WriteToChat(&amp;quot;Death and Decay: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_Cooldowns_enable and CDSwap then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_Cooldowns_enable and not CDSwap then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_NecroticStrike_enable and NSSwap then
  PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_NecroticStrike_enable and not NSSwap then
  PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_Strangulate_enable and StrangSwap then
  PQR_WriteToChat(&amp;quot;Strangulate: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_Strangulate_enable and not StrangSwap then
  PQR_WriteToChat(&amp;quot;Strangulate: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_ChainsofIce_enable and IceSwap then
  PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_ChainsofIce_enable and not IceSwap then
  PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFFE61515Disabled&amp;quot;) end
end

if modtime == nil then
	modtime = 0
end

if PQI_SoapboxFrost_DNDQueue_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_DNDQueue_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if DNDSwap then 
			DNDSwap = nil
			PQR_WriteToChat(&amp;quot;Death and Decay: \124cFFE61515Disabled&amp;quot;)
		else
			DNDSwap = 1
			PQR_WriteToChat(&amp;quot;Death and Decay: \124cFF15E615Queued&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_Pestilence_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_Pestilence_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if pestSwap then 
			pestSwap = nil
			PQR_WriteToChat(&amp;quot;Pestilence: \124cFFE61515Disabled&amp;quot;)
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Disabled&amp;quot;, nil, &amp;apos;ff0000&amp;apos;)
		else
			pestSwap = 1
			PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;)
		end
	end
end

if PQI_SoapboxFrost_Cooldowns_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_Cooldowns_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if CDSwap then 
			CDSwap = nil
			PQR_WriteToChat(&amp;quot;Cooldowns: \124cFFE61515Disabled&amp;quot;)
		else
			CDSwap = 1
			PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Enabled&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_NecroticStrike_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_NecroticStrike_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if NSSwap then 
			NSSwap = nil
			PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFFE61515Disabled&amp;quot;)
		else
			NSSwap = 1
			PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFF15E615Enabled&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_Strangulate_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_Strangulate_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if StrangSwap then 
			StrangSwap = nil
			PQR_WriteToChat(&amp;quot;Strangulate: \124cFFE61515Disabled&amp;quot;)
		else
			StrangSwap = 1
			PQR_WriteToChat(&amp;quot;Strangulate: \124cFF15E615Enabled&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_ChainsofIce_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_ChainsofIce_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if IceSwap then 
			IceSwap = nil
			PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFFE61515Disabled&amp;quot;)
		else
			IceSwap = 1
			PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFF15E615Enabled&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Toggle Key</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false
  if PQI_SoapboxFrost_Pestilence_enable and not pestSwap then pestSwap = 1
  PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
  PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;) end
  if PQI_SoapboxFrost_DNDQueue_enable and DNDSwap then 
  PQR_WriteToChat(&amp;quot;Death and Decay: \124cFF15E615Queued&amp;quot;) end
  if PQI_SoapboxFrost_DNDQueue_enable and not DNDSwap then 
  PQR_WriteToChat(&amp;quot;Death and Decay: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_Cooldowns_enable and CDSwap then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_Cooldowns_enable and not CDSwap then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_NecroticStrike_enable and NSSwap then
  PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_NecroticStrike_enable and not NSSwap then
  PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_Strangulate_enable and StrangSwap then
  PQR_WriteToChat(&amp;quot;Strangulate: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_Strangulate_enable and not StrangSwap then
  PQR_WriteToChat(&amp;quot;Strangulate: \124cFFE61515Disabled&amp;quot;) end
  if PQI_SoapboxFrost_ChainsofIce_enable and IceSwap then
  PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFF15E615Enabled&amp;quot;) end
  if PQI_SoapboxFrost_ChainsofIce_enable and not IceSwap then
  PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFFE61515Disabled&amp;quot;) end
end

if modtime == nil then
	modtime = 0
end

if PQI_SoapboxFrost_DNDQueue_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_DNDQueue_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if DNDSwap then 
			DNDSwap = nil
			PQR_WriteToChat(&amp;quot;Death and Decay: \124cFFE61515Disabled&amp;quot;)
		else
			DNDSwap = 1
			PQR_WriteToChat(&amp;quot;Death and Decay: \124cFF15E615Queued&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_Pestilence_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_Pestilence_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if pestSwap then 
			pestSwap = nil
			PQR_WriteToChat(&amp;quot;Pestilence: \124cFFE61515Disabled&amp;quot;)
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Disabled&amp;quot;, nil, &amp;apos;ff0000&amp;apos;)
		else
			pestSwap = 1
			PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;)
		end
	end
end

if PQI_SoapboxFrost_Cooldowns_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_Cooldowns_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if CDSwap then 
			CDSwap = nil
			PQR_WriteToChat(&amp;quot;Cooldowns: \124cFFE61515Disabled&amp;quot;)
		else
			CDSwap = 1
			PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Enabled&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_NecroticStrike_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_NecroticStrike_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if NSSwap then 
			NSSwap = nil
			PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFFE61515Disabled&amp;quot;)
		else
			NSSwap = 1
			PQR_WriteToChat(&amp;quot;Necrotic Strike: \124cFF15E615Enabled&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_Strangulate_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_Strangulate_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if StrangSwap then 
			StrangSwap = nil
			PQR_WriteToChat(&amp;quot;Strangulate: \124cFFE61515Disabled&amp;quot;)
		else
			StrangSwap = 1
			PQR_WriteToChat(&amp;quot;Strangulate: \124cFF15E615Enabled&amp;quot;)
		end
	end
end

if PQI_SoapboxFrost_ChainsofIce_enable then
	if PQI:IsHotkeys(PQI_SoapboxFrost_ChainsofIce_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if IceSwap then 
			IceSwap = nil
			PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFFE61515Disabled&amp;quot;)
		else
			IceSwap = 1
			PQR_WriteToChat(&amp;quot;Chains of Ice: \124cFF15E615Enabled&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Success!</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
             or (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
                	if select(12, ...) == 61999 then
		PQR_WriteToChat(&amp;quot;Raise Ally: \124cFFE61515Casted&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Raise Ally: Casted&amp;quot;, nil, &amp;apos;0fffff&amp;apos;)
		elseif select(12, ...) == 43265 then
		DNDSwap = false
		PQR_WriteToChat(&amp;quot;Death and Decay: \124cFFE61515Casted&amp;quot;)	
		elseif select(12, ...) == 50842 then
		pestSwap = false
		PQR_WriteToChat(&amp;quot;Pestilence: \124cFFE61515Casted&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Casted&amp;quot;, nil, &amp;apos;0fffff&amp;apos;)
      end
     end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Diseases</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Oblit, pestSwap, Blighted, BlightCD, Blight, FF, FFtimer, BP, BPtimer, Rime, OutbreakCD, 
NoAoE = Oblit, pestSwap, Blighted, BlightCD, Blight, FF, FFtimer, BP, BPtimer, Rime, OutbreakCD, 
NoAoE


---Outbreak, Howling Blast w/Rime, Plague Strike---
if (FF == nil or FFtimer - GetTime() &amp;lt; 3) then
	if OutbreakCD &amp;lt; 1 and not Blighted then
		CastSpellByName(GetSpellInfo(77575)) 
	end
	if Blight == true and BlightCD &amp;lt; 1  and OutbreakCD &amp;gt; 2  and OutbreakCD &amp;lt; 85 then
		CastSpellByName(GetSpellInfo(115989))
	end
	if OutbreakCD &amp;gt; 3 and Rime and NoAoE == false then
		CastSpellByName(GetSpellInfo(49184))
	end
end

if BP == nil or BPtimer - GetTime() &amp;lt; 3 then
	pestSwap = 1
	PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
  	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;)
	if OutbreakCD &amp;lt; 1 and not Blighted then
		CastSpellByName(GetSpellInfo(77575))
	end
	if Blight == true and BlightCD &amp;lt; 1 and OutbreakCD &amp;gt; 2  and OutbreakCD &amp;lt; 85 then
		CastSpellByName(GetSpellInfo(115989))
	end
	if OutbreakCD &amp;gt; 3 and OutbreakCD &amp;lt; 55 
	and ((Blight == true and BlightCD &amp;gt; 3) or Blight == false) 
	and not Blighted 
	and Oblit &amp;gt;= 1 then
		CastSpellByName(GetSpellInfo(45462))
	end
end

---Howling Blast---
if (FF == nil or FFtimer - GetTime() &amp;lt; 3) and NoAoE == false then
	if OutbreakCD &amp;gt; 3 then
		CastSpellByName(GetSpellInfo(49184))
	end
	pestSwap = 1
	PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
  	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;)
end

---Howling Blast---
if (FF == nil or FFtimer - GetTime() &amp;lt; 3) and NoAoE == true then
	if OutbreakCD &amp;gt; 3 then
		CastSpellByName(GetSpellInfo(45477))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Healthstone_enable then return false end

local value = tonumber(PQI_SoapboxFrost_Healthstone_value)
local HealthstoneCD = select(2,GetItemCooldown(5512))
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if  Playerhealth &amp;lt;= value
and HealthstoneCD &amp;lt; 1
then
UseItemByName(5512, &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti-Magic Shell</Name><Default>false</Default><SpellID>48707</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_AntiMagicShell_enable then return false end

local value = tonumber(PQI_SoapboxFrost_AntiMagicShell_value)
local BossShield, MagicDebuff = BossShield, MagicDebuff
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if (Playerhealth &amp;lt;= value and MagicDebuff)
or BossShield == true then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Runic Empowerment</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Corruption, FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount = Corruption, 
FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

if Empowerment == true then
	if select(3,NoRune()) == 0 then 
	CastSpellByName(GetSpellInfo(49143))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Rotation Swap]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_SingleAoESwap_enable then return false end

-- AoE Toggle Code
if not GetCVar(&amp;quot;FrostAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;FrostAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
 InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
 InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if PQI:IsHotkeys(PQI_SoapboxFrost_SingleAoESwap_key)
 and GetCurrentKeyBoardFocus() == nil 
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
  SwitchTimer = GetTime()
 if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 0 then 
  SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 2) 
 elseif tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 5 then
  SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 1)
 end
end

if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;Frost (Soapbox Frost Death Knight Serial FR1359)&amp;quot;)
  PQR_WriteToChat(&amp;quot;AoE: \124cFFE61515Disabled&amp;quot;)
elseif tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;Frost AoE (Soapbox Frost Death Knight Serial FR1359)&amp;quot;)
  PQR_WriteToChat(&amp;quot;AoE: \124cFF15E615Enabled&amp;quot;) end

if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Control Undead</Name><Default>false</Default><SpellID>111673</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_ControlUndead_enable then return false end

local Control = Control

if Control == true 
and UnitExists(&amp;quot;pet&amp;quot;) == nil then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raise Ally -Manual-</Name><Default>false</Default><SpellID>61999</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_RaiseAlly_enable then return false end


if PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)
and GetCurrentKeyBoardFocus() == nil 
and (UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) or UnitIsCorpse(&amp;quot;mouseover&amp;quot;)) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
then
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mushroom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Mushroom, MCD, BP, BPtimer = Mushroom, MCD, BP, BPtimer

if Mushroom == true
and MCD &amp;lt; 1
and UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) == 1
and (BP == nil or (BP and BPtimer - GetTime() &amp;lt; 7))
then 
  RunMacroText(&amp;quot;/cast Wild Mushroom: Plague&amp;quot;)
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Plague Leech</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>local OutbreakCD, BP, BPtimer, FF, FFtimer, Empower = OutbreakCD, BP, BPtimer, FF, 
FFtimer, Empower

if BP ~= nil
and FF ~= nil then
	if ((BP and BPtimer - GetTime() &amp;lt; 3)
 	or (FF and FFtimer - GetTime() &amp;lt; 3))
	and OutbreakCD &amp;lt; 1
	and Empower == true then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Obliterate 2 Unholy Runes</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>local RuneSoon = RuneSoon

if select(2,NoRune()) &amp;gt; 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Howling Blast  2 Death/Frost Runes</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>local RuneSoon, NoAoE = RuneSoon, NoAoE

if NoAoE == true then
return false
end

if select(3,NoRune()) &amp;gt; 1 
or select(4,NoRune()) &amp;gt; 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Strike Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Corruption, FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount = Corruption, 
FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

if IsUsableSpell(49143) then
	if Corruption == true then
		if FrostCD &amp;gt;= 1 and UnholyCD &amp;gt;= 1 and DeathCD &amp;gt;= 1 then
			CastSpellByName(GetSpellInfo(49143))
		end
	end
	if Empowerment == true then
		if select(3,NoRune()) == 0 then
			CastSpellByName(GetSpellInfo(49143))
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tier 4 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Tier4Talent_enable then return false end

local RP, Playerhealth, SiphonHealth, DeathPact, DPCD, RCD, Siphon, SiphonCheck = RP, Playerhealth, 
SiphonHealth, DeathPact, DPCD, RCD, Siphon, SiphonCheck

local value = tonumber(PQI_SoapboxFrost_Tier4Talent_value)

if Playerhealth &amp;lt;= value then
	if DeathPact == true and DPCD &amp;lt; 1 then
		if RCD &amp;gt; 60 and RCD &amp;lt; 120 then
			CastSpellByName(GetSpellInfo(48743))
			return true
		elseif RCD &amp;lt; 1 then
			CastSpellByName(GetSpellInfo(46584))
			return true
		end
	--DEATH SIPHON
	elseif Siphon == true then
		if Blast &amp;gt;= 1 then
			CastSpellByName(GetSpellInfo(108196))
			return true
		end
	elseif Conversion == true then
		if RP &amp;gt;= 20 and not UnitBuffID(&amp;quot;player&amp;quot;, 119975) then
		CastSpellByName(GetSpellInfo(119975))
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Obliterate 1 Unholy Rune</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>local RuneSoon = RuneSoon

if select(2,NoRune()) &amp;gt; 0 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Corruption, FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount = Corruption, 
FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

---actions+=/frost_strike---
if IsUsableSpell(49143) then
	CastSpellByName(GetSpellInfo(49143))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Icy Dispel</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>local GlyphTouch = GlyphTouch

if GlyphTouch == true then
	if UnitBuffID(&amp;quot;target&amp;quot;,117283)
	or UnitBuffID(&amp;quot;target&amp;quot;,122149) then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dark Succor</Name><Default>false</Default><SpellID>49998</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DarkSuccor_enable then return false end

local value = tonumber(PQI_SoapboxFrost_DarkSuccor_value)

local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if UnitBuffID(&amp;quot;player&amp;quot;, 101568) then
	if Playerhealth &amp;lt;= value then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Necrotic Strike</Name><Default>false</Default><SpellID>73975</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_NecroticStrike_enable then return false end

if MeleeRange() then
	if NSSwap and IsUsableSpell(73975) then
	  	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chains of Ice</Name><Default>false</Default><SpellID>45524</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_ChainsofIce_enable then return false end
if not IceSwap or SlowImmune(&amp;quot;target&amp;quot;) then return false end
if UnitExists(&amp;quot;target&amp;quot;) == nil then return false end
local SlowThem = true

if IsSlowed(&amp;quot;target&amp;quot;)
or SlowImmune(&amp;quot;target&amp;quot;)
then
SlowThem = false
end


if SlowThem == false
and UnitDebuffID(&amp;quot;target&amp;quot;,45524)
then
	local Ice, _, _, _, _, _, Icetimer = UnitDebuffID(&amp;quot;target&amp;quot;, 45524)
	if Ice then
		if Icetimer - GetTime() &amp;lt; 1 then
			return true
		end
	end
end
		
		
if SlowThem == true
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Death Strike</Name><Default>false</Default><SpellID>49998</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DeathStrike_enable then return false end

local value = tonumber(PQI_SoapboxFrost_DeathStrike_value)

local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if Playerhealth &amp;lt;= value then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TABLE]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_FROST then return false end

local config = {
	name  = &amp;apos;Frost&amp;apos;,
	author  = &amp;apos;Soapbox&amp;apos;,
	abilities = {
		{  name = &amp;quot;Frost Presence&amp;quot;,
			enable = true,
		},
		{  name = &amp;quot;Control Undead&amp;quot;,
			enable = true,
			newSection = true,
		},	
		{  name = &amp;quot;Mogu Power&amp;quot;,
			enable = true,
			newSection = true,
		},
		{  name = &amp;quot;Soul Reaper Trash&amp;quot;,	
			newSection = true,	
			enable = true,	
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 7,
				step = 1,
			},
		},
		{  name = &amp;quot;Soul Reaper Boss&amp;quot;,	
			enable = true,		
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 36,
				step = 1,
			},
		},
		{  name = &amp;quot;Dark Succor&amp;quot;,			
			newSection = true,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 95,
				step = 5,
			},
		},
		{  name = &amp;quot;Tier 4 Talent&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 20,
				step = 5,
			},
		},
		{  name = &amp;quot;Death Strike&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 20,
				step = 5,
			},
		},
		{  name = &amp;quot;Healthstone&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 65,
				step = 5,
			},
		},
		{  name = &amp;quot;Icebound Fortitude&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
			},
		},
		{  name = &amp;quot;Anti Magic Shell&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
			},
		},
	},
	hotkeys = {
		{ name = &amp;quot;Single AoE Swap&amp;quot;,  enable = false, hotkeys = {&amp;apos;ls&amp;apos;}, },
		{ name = &amp;quot;DND Queue&amp;quot;,        enable = false, hotkeys = {&amp;apos;ls&amp;apos;}, },
		{ name = &amp;quot;Tier 6 Talent&amp;quot;,    enable = true, hotkeys = {&amp;apos;lc&amp;apos;}, },
     	{ name = &amp;quot;Anti Magic Zone&amp;quot;,  enable = false, hotkeys = {&amp;apos;ls&amp;apos;}, },
		{ name = &amp;quot;Cooldowns&amp;quot;,   	 enable = true, hotkeys = {&amp;apos;ls&amp;apos;}, },
		{ name = &amp;quot;Pestilence&amp;quot;,   	 enable = true, hotkeys = {&amp;apos;la&amp;apos;}, },
		{ name = &amp;quot;Raise Ally&amp;quot;,   	 enable = true, hotkeys = {&amp;apos;rs&amp;apos;}, },
		{ name = &amp;quot;Chains of Ice&amp;quot;,    enable = false, hotkeys = {&amp;apos;la&amp;apos;}, },
		{ name = &amp;quot;Necrotic Strike&amp;quot;,  enable = false, hotkeys = {&amp;apos;ra&amp;apos;}, },
		{ name = &amp;quot;Strangulate&amp;quot;,  	 enable = false, hotkeys = {&amp;apos;rc&amp;apos;}, },
	},	
}
SOAPBOX_FROST = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Strangulate</Name><Default>false</Default><SpellID>47476</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Strangulate_enable then return false end

local MFCD = MFCD

if (MFCD &amp;gt;= 1 and MFCD &amp;lt; 15)
or not MeleeRange() then
	if UnitCastingInfo(&amp;quot;target&amp;quot;) 
	or UnitChannelInfo(&amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(45529))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap 10+</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>local BloodTap, Charges, Chargescount, KillingMachine, RP = 
BloodTap, Charges, Chargescount, KillingMachine, RP

---actions+=/blood_tap,if=talent.blood_tap.enabled---
if BloodTap == true then
	if Charges and Chargescount &amp;gt; 10 then
		if RP &amp;gt; 76 then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Blood Tap 76 RP or KM</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>local RP, BloodTap, Charges, Chargescount, Empower, KillingMachine = RP,
BloodTap, Charges, Chargescount, Empower, KillingMachine

---actions+=/blood_tap,if=talent.blood_tap.enabled---
if BloodTap == true then
	if Empower == true and Charges and Chargescount &amp;gt; 10 then
		if RP &amp;gt; 76  or (RP &amp;gt; 20 and KillingMachine) then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Blood Tap 8+ Charges</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>local Targethealth, BloodTap, Charges, Chargescount, Empower = Targethealth,
BloodTap, Charges, Chargescount, Empower

local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local TTD = (Targethealth - 3 * (Targethealth / TimeToDie))

---actions+=/blood_tap,if=talent.blood_tap.enabled---
if BloodTap == true then
	if Empower == true and Charges and Chargescount &amp;gt;= 5 then
		if TTD &amp;gt; 45  or Chargescount &amp;gt;= 8 then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Frost Strike BT</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Charges, Chargescount, BloodTap, RP = Charges, Chargescount, BloodTap, RP

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

---actions+=/frost_strike,if=runic_power&amp;gt;76---
if IsUsableSpell(49143) and BloodTap == true then
	if Charges and Chargescount &amp;lt;= 10
	then
	CastSpellByName(GetSpellInfo(49143))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Unholy Blight - High-</Name><Default>false</Default><SpellID>115989</SpellID><Actions></Actions><Lua>local BP, FF = BP, FF

if BP == nil
or FF == nil then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Outbreak -Low-</Name><Default>false</Default><SpellID>77575</SpellID><Actions></Actions><Lua>local BP, BPtimer, FF, FFtimer = BP, BPtimer, FF, FFtimer

if (BP ~= nil and BPtimer - GetTime() &amp;lt; 3)
or (FF ~= nil and FFtimer - GetTime() &amp;lt; 3) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Unholy Blight -Low-</Name><Default>false</Default><SpellID>115989</SpellID><Actions></Actions><Lua>local BP, BPtimer, FF, FFtimer = BP, BPtimer, FF, FFtimer

if (BP ~= nil and BPtimer - GetTime() &amp;lt; 3)
or (FF ~= nil and FFtimer - GetTime() &amp;lt; 3) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Fever</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>local FF, OutbreakCD, Blighted = FF, OutbreakCD, Blighted


if FF == nil 
and OutbreakCD &amp;gt; 1 and not Blighted then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Rime</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>local NoAoE = NoAoE

--- actions+=/howling_blast,if=buff.rime.react---
if UnitBuffID(&amp;quot;player&amp;quot;,59052) then
	if NoAoE == false then
	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Obliterate -High-</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>if select(4,NoRune()) &amp;gt; 1 
or select(2,NoRune()) &amp;gt; 1
or select(3,NoRune()) &amp;gt; 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Plague Leech - Low-</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>local PlagueLeech, BP, BPtimer, FF, FFtimer, Empower = PlagueLeech, BP, BPtimer, FF, 
FFtimer, Empower

if BP ~= nil
and FF ~= nil then
	if ((BP and BPtimer - GetTime() &amp;lt; 3)
	or (FF and FFtimer - GetTime() &amp;lt; 3))
	and Empower == true then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Plague Leech - High-</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>local PlagueLeech, BP, BPtimer, FF, FFtimer, Empower = PlagueLeech, BP, BPtimer, FF, 
FFtimer, Empower

if BP ~= nil
and FF ~= nil then
	if ((BP and BPtimer - GetTime() &amp;lt; 1)
	or (FF and FFtimer - GetTime() &amp;lt; 1))
	and Empower == true then	
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Plague</Name><Default>false</Default><SpellID>45462</SpellID><Actions></Actions><Lua>local OutbreakCD, Blighted, BP = OutbreakCD, Blighted, BP

if BP == nil 
and OutbreakCD &amp;gt; 1 and not Blighted then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Runic Corruption</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Corruption, FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount = Corruption, 
FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

if IsUsableSpell(49143) then
	if Corruption == true then
		if not UnitBuffID(&amp;quot;player&amp;quot;, 51462) then
			CastSpellByName(GetSpellInfo(49143))
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Plague Leech</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>local BP, FF = BP, FF

if BP ~= nil
and FF ~= nil then
	if Empower == true
	then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Frost Strike -High-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Corruption, FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount = Corruption, 
FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

---actions+=/frost_strike---
if IsUsableSpell(49143) then
	if RP &amp;gt;= 88 then
		CastSpellByName(GetSpellInfo(49143))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap -Low-</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>local BloodTap, Charges, Chargescount, KillingMachine, RP = 
BloodTap, Charges, Chargescount, KillingMachine, RP

---actions+=/blood_tap,if=talent.blood_tap.enabled---
if BloodTap == true then
	if Charges and Chargescount &amp;gt; 10 then
		if RP &amp;gt;= 20 then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Empower Rune Weapon -High-</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Cooldowns_enable then return false end

local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local TTD = (Targethealth - 3 * (Targethealth / TimeToDie))

local Mogu, RuneWep, RP, CDSwap = Mogu, RuneWep, RP, CDSwap

--- actions+=/empower_rune_weapon,if=target.time_to_die&amp;lt;=60&amp;buff.mogu_power_potion.up---
if CDSwap and MeleeRange() then
	if (UnitLevel(&amp;quot;target&amp;quot;) == -1 or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;boss1&amp;quot;) or UnitIsPlayer(&amp;quot;target&amp;quot;))
	and TTD &amp;lt;= 60 and Mogu then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Empower Rune Weapon -Low-</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Cooldowns_enable then return false end

local Mogu, RuneWep, RP, CDSwap = Mogu, RuneWep, RP, CDSwap

--- actions+=/empower_rune_weapon,if=target.time_to_die&amp;lt;=60&amp;buff.mogu_power_potion.up---
if CDSwap and MeleeRange() then
	if (UnitLevel(&amp;quot;target&amp;quot;) == -1 or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;boss1&amp;quot;) or UnitIsPlayer(&amp;quot;target&amp;quot;)) then
		if select(4,NoRune()) &amp;lt; 1 
		and select(2,NoRune()) &amp;lt; 1
		and select(3,NoRune()) &amp;lt; 1 
		and RP &amp;lt; 20 then
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Corruption, FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount = Corruption, 
FrostCD, UnholyCD, DeathCD, Empowerment, Empower, BloodTap, Charges, Chargescount

if (PQI_SoapboxFrost_RaiseAlly_enable 
and PQI:IsHotkeys(PQI_SoapboxFrost_RaiseAlly_key)) then
return false
end

---actions+=/frost_strike---
if IsUsableSpell(49143) then
	if RP &amp;gt;= 40 then
		CastSpellByName(GetSpellInfo(49143))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Death and Decay -Manual-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DNDQueue_enable then return false end
if not DNDSwap then return false end


local NoAoE, Oblit, DND = NoAoE, Oblit, DND

--- actions+=/death_and_decay---
if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and NoAoE == false
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti-Magic Zone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_AntiMagicZone_enable then return false end

if PQI:IsHotkeys(PQI_SoapboxFrost_AntiMagicZone_key) then
	if IsUsableSpell(51052)
	and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	and select(2,GetSpellCooldown(51052)) &amp;lt; 2 then
	CastSpellByName(tostring(GetSpellInfo(51052)))
 	 if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
 	 return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Rotation Swap DW]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_SingleAoESwap_enable then return false end

-- AoE Toggle Code
if not GetCVar(&amp;quot;FrostAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;FrostAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
 InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
 InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if PQI:IsHotkeys(PQI_SoapboxFrost_SingleAoESwap_key)
 and GetCurrentKeyBoardFocus() == nil 
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
  SwitchTimer = GetTime()
 if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 0 then 
  SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 2) 
 elseif tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 5 then
  SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 1)
 end
end

if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;[DW] Frost (Soapbox Frost Death Knight Serial FR1359)&amp;quot;)
  PQR_WriteToChat(&amp;quot;AoE: \124cFFE61515Disabled&amp;quot;)
elseif tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;[DW] Frost AoE (Soapbox Frost Death Knight Serial FR1359)&amp;quot;)
  PQR_WriteToChat(&amp;quot;AoE: \124cFF15E615Enabled&amp;quot;) end

if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Rotation Swap 2H]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_SingleAoESwap_enable then return false end

-- AoE Toggle Code
if not GetCVar(&amp;quot;FrostAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;FrostAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
 InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
 InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if PQI:IsHotkeys(PQI_SoapboxFrost_SingleAoESwap_key)
 and GetCurrentKeyBoardFocus() == nil 
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
  SwitchTimer = GetTime()
 if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 0 then 
  SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 2) 
 elseif tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 5 then
  SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 1)
 end
end

if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;[2H] Frost (Soapbox Frost Death Knight Serial FR1359)&amp;quot;)
  PQR_WriteToChat(&amp;quot;AoE: \124cFFE61515Disabled&amp;quot;)
elseif tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;FrostAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;[2H] Frost AoE (Soapbox Frost Death Knight Serial FR1359)&amp;quot;)
  PQR_WriteToChat(&amp;quot;AoE: \124cFF15E615Enabled&amp;quot;) end

if tonumber(GetCVar(&amp;quot;FrostAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Death and Decay -Manual-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DNDQueue_enable then return false end
if not DNDSwap then return false end

local NoAoE, Oblit, DND = NoAoE, Oblit, DND

--- actions+=/death_and_decay---
if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and NoAoE == false
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Death and Decay -Manual-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DNDQueue_enable then return false end
if not DNDSwap then return false end

local NoAoE, Oblit, DND = NoAoE, Oblit, DND

--- actions+=/death_and_decay---
if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and NoAoE == false
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TEST</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(4,NoRune()) == 0 then 
	CastSpellByName(GetSpellInfo(49143))
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DEATHKNIGHT>