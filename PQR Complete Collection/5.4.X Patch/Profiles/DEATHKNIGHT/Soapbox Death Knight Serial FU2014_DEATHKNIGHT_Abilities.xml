<?xml version="1.0" encoding="utf-8" ?><DEATHKNIGHT><Ability><Name>[MS] Plague Strike</Name><Default>false</Default><SpellID>45462</SpellID><Actions></Actions><Lua>--actions.single_target+=/plague_strike,if=unholy&amp;gt;0

if not PQI_SoapboxDeathKnight_MasterSimpleRotation_enable then return false end


if select(2,Rune()) &amp;gt; 0 then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- DoT Mind Control Function
MindControlled = nil
function MindControlled(unit)
	if UnitDebuffID(unit, 145832) 
	or UnitDebuffID(unit, 145171) 
	or UnitDebuffID(unit, 145065) 
	or UnitDebuffID(unit, 145071) then
	return true
	else
	return false
	end
end

if sTimer == nil then
  sTimer = 0
 end
 if cTime == nil then
  cTime = 0
 end
 if UnitAffectingCombat(&amp;quot;player&amp;quot;) and sTimer == 0 then
   sTimer = GetTime()
 end
 if sTimer &amp;gt; 0 then
   cTime = (GetTime() - sTimer)
 end
 if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not UnitExists(&amp;quot;target&amp;quot;) then
  sTimer = 0
  cTime = 0
 end
 
 --Dummy 5min DPS Test
if UnitExists(&amp;quot;target&amp;quot;) then
if cTime &amp;gt;= 300 and dummy() then  
	StopAttack()
	ClearTarget()
	print(&amp;quot;5 Minute Dummy Test Concluded - Profile Stopped&amp;quot;)
	RunMacroText(&amp;quot;/run Screenshot()&amp;quot;)
	--PQR_StopRotation()
end
end
function dummy()
	dummies = {
		31146, --Raider&amp;apos;s Training Dummy - Lvl ??
		67127, --Training Dummy - Lvl 90
		46647, --Training Dummy - Lvl 85
		32546, --Ebon Knight&amp;apos;s Training Dummy - Lvl 80
		31144, --Training Dummy - Lvl 80
		32667, --Training Dummy - Lvl 70
		32542, --Disciple&amp;apos;s Training Dummy - Lvl 65
		32666, --Training Dummy - Lvl 60
		32545, --Initiate&amp;apos;s Training Dummy - Lvl 55 
		32541, --Initiate&amp;apos;s Training Dummy - Lvl 55 (Scarlet Enclave) 
		54344
	}
	for i=1, #dummies do
		if UnitExists(&amp;quot;target&amp;quot;) then
			dummyID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(-13, -9), 16)
		else
			dummyID = 0
		end
		if dummyID == dummies[i] then
			return true
		end	
	end
end

-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local PQ_BossUnits = PQ_BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#PQ_BossUnits do
				if PQ_BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end
-- Complete boss unit table (Dungeons/Heroics/Raids)
PQ_BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}

if not T2D then
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		if NOT2D == true then timeToDie = 1000 end
		return timeToDie
	end
end
end


-- GetSpellCD will return actual Timer before we can use the ability, 0 if the ability is ready.
	GetSpellCD = nil
	function GetSpellCD(MySpell)
		if GetSpellCooldown(GetSpellInfo(MySpell)) == nil then
			return 0
		else
			local Start ,CD = GetSpellCooldown(MySpell)
			local MyCD = Start + CD - GetTime()
			return MyCD
		end
	end
	
	---Engineer Glove Cooldown---
GloveCD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10)

---Trinket 1 Cooldown---
Trinket1CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

---Trinket 2 Cooldown---
Trinket2CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

Mushroom = false

---Raise Dead Cooldown---
local RStart, RDuration = GetSpellCooldown(46584)
RCD = RStart + RDuration - GetTime()
if IsUsableSpell(113516) 
and UnitBuffID(&amp;quot;player&amp;quot;, 110498) 
and RCD &amp;gt; 1 and RCD &amp;lt; 60 then
Mushroom = true
end

---Mind Freeze CD---
local MFStart, MFDuration = GetSpellCooldown(47528)
MFCD = MFStart + MFDuration - GetTime()

---Necrotic Strike CD---
local NSStart, NSDuration = GetSpellCooldown(73975)
NSCD = NSStart + NSDuration - GetTime()

---Death Pact CD---
local DPStart, DPDuration = GetSpellCooldown(48743)
DPCD = DPStart + DPDuration - GetTime()

---Soul Reaper CD---
local SRStart, SRDuration = GetSpellCooldown(130735)
SRCD = SRStart + SRDuration - GetTime()

---Raise Dead Cooldown---
local RStart, RDuration = GetSpellCooldown(46584)
RCD = RStart + RDuration - GetTime()

---Shroom Cooldown---
local MStart, MDuration = GetSpellCooldown(113516)
MCD = MStart + MDuration - GetTime()

---Outbreak Cooldown---
local OutbreakStart, OutbreakDuration = GetSpellCooldown(77575)
OutbreakCD = OutbreakStart + OutbreakDuration - GetTime()

---ERW Cooldown---
local ERWStart, ERWDuration = GetSpellCooldown(47568)
ERWCD = ERWStart + ERWDuration - GetTime()

---AMS Cooldown---
local AMSStart, AMSDuration = GetSpellCooldown(48707)
AMSCD = AMSStart + AMSDuration - GetTime()
---ERW Cooldown---
local RAStart, RADuration = GetSpellCooldown(61999)
RACD = RAStart + RADuration - GetTime()

local BlightStart, BlightDuration = GetSpellCooldown(115989)
BlightCD = BlightStart + BlightDuration - GetTime()

---Pillar of Frost Cooldown---
local PillarStart, PillarDuration = GetSpellCooldown(51271)
PillarCD = PillarStart + PillarDuration - GetTime()

---Gorfiend&amp;apos;s Grasp Cooldown---
local GraspStart, GraspDuration = GetSpellCooldown(108199)
GraspCD = GraspStart + GraspDuration - GetTime()

---Remorseless Winter Cooldown---
local WinterStart, WinterDuration = GetSpellCooldown(108200)
WinterCD = WinterStart + WinterDuration - GetTime()

---Desecrated Ground Cooldown---
local GroundStart, GroundDuration = GetSpellCooldown(108201)
GroundCD = GroundStart + GroundDuration - GetTime()

---Touch of Death Cooldown---
local TODStart, TODDuration = GetSpellCooldown(115080)
TODCD = TODStart + TODDuration - GetTime()

---Healthstone Cooldown---
HealthstoneCD = select(2,GetItemCooldown(5512))

---Fortifying Brew Cooldown---
local BrewStart, BrewDuration = GetSpellCooldown(115203)
BrewCD = BrewStart + BrewDuration - GetTime()

---Touch of Karma Cooldown---
local KarmaStart, KarmaDuration = GetSpellCooldown(124280)
KarmaCD = KarmaStart + KarmaDuration - GetTime()

---Dampen Harm Cooldown---
local HarmStart, HarmDuration = GetSpellCooldown(122278)
HarmCD = HarmStart + HarmDuration - GetTime()

---Diffuse Magic Cooldown---
local MagicStart, MagicDuration = GetSpellCooldown(122783)
MagicCD = MagicStart + MagicDuration - GetTime()

---Chi Wave Cooldown---
local WaveStart, WaveDuration = GetSpellCooldown(115098)
WaveCD = WaveStart + WaveDuration - GetTime()

---Zen Sphere Cooldown---
local ZenStart, ZenDuration = GetSpellCooldown(124081)
ZenCD = ZenStart + ZenDuration - GetTime()




--------------------------------------HEALTH/POWER TOOLS------------------------------------------
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

---Runic Power---
RP = UnitPower(&amp;quot;player&amp;quot;)

---Death Rune CDs---
local Death1Start, Death1Duration, Death1runeReady = GetRuneCooldown(5)
Death1CD = Death1Start + Death1Duration - GetTime()

local Death2Start, Death2Duration, Death2runeReady = GetRuneCooldown(6)
Death2CD = Death2Start + Death2Duration - GetTime()

--Melee Range---
function MeleeRange()
	if IsSpellInRange(GetSpellInfo(45462), &amp;quot;target&amp;quot;) == 1 then 
	return true 
	else 
	return false
	end
end

-------------------------------------BUFFS--------------------------------------------------------
---Frost Fever---
FF,_,_,_,_,_,FFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;)

---Blight---
UnholyBlight = UnitBuffID(&amp;quot;player&amp;quot;, 115989)

---Rime---
Rime = UnitBuffID(&amp;quot;player&amp;quot;, 59052)  

---Killing Machine---
KillingMachine = UnitBuffID(&amp;quot;player&amp;quot;, 51124)  

---Frost Fever---
FF,_,_,_,_,_,FFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;)

---Blood Plague---
BP,_,_,_,_,_,BPtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;PLAYER&amp;quot;)

---Blood Charges---
Charges,_,_,Chargescount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,114851)

---Bloodlust Check---
Bloodlust = UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
or UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)

---Pillar of Frost---
Pillar = UnitBuffID(&amp;quot;player&amp;quot;, 51271)

---Touch of Death Boss Check---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

DeathBoss = false

BossName = { 60047, 60051, 60043, 59915, 60009, 60143, 60701, 60708, 60709, 60710, 60410, 60400, 60399,
62980, 62543, 62164, 62397, 62511, 62711, 62837, 60583, 60586, 60585, 62442, 62983, 60999, 60491 }

for i=1, #BossName do
   if targetGUID == BossName[i] then DeathBoss = true
   end
end
end

---Disarm Target List---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Grapple = false

Disarm = { 61947, 61240, 61398, 59240, 62405, 62408, 62402, 60396, 64453, 63591, 63589 }

for i=1, #Disarm do
   if targetGUID == Disarm[i] then Grapple = true
   end
end
end

---Is Target Disarmed---
Disarmed = false

Weapons = { 676, 51722, 91644, 64058, 117368 }

for y=1, #Weapons do
   if UnitDebuffID(&amp;quot;target&amp;quot;, Weapons[y]) then Disarmed = true
   end
end

---Trinket Slot Check---
Trinkets = 0

trinketID = { 87495, 86043, 91099, 93253, 93258, 89082, 84934, 91452, 81265, 84344 }

for i=13, 14, 1  do
	 for y=1, #trinketID do
   if GetInventoryItemID(&amp;apos;player&amp;apos;, i) == trinketID[y] then 
     Trinkets = Trinkets + 1
   end
  end
end

---Trinket Buff Check---
Proc = 0 

Buff = { 126649, 126554, 126707, 128984, 127928, 126483, 126489, 105574, 127575, 
126690, 136086, 136086, 126599, 126484, 136088, 118334, 104423, 104510, 105697, 126734 }

for i=1, #Buff do
   if UnitBuffID(&amp;quot;player&amp;quot;, Buff[i]) then Proc = Proc + 1 
   end
end

---Touch of Death Target Check---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

DeathBoss = false

BossName = { 60047, 60051, 60043, 59915, 60009, 60143, 60701, 60708, 60709, 60710, 60410, 60400, 60399,
62980, 62543, 62164, 62397, 62511, 62711, 62837, 60583, 60586, 60585, 62442, 62983, 60999, 60491 }

for i=1, #BossName do
   if targetGUID == BossName[i] then DeathBoss = true
   end
end
end

---Blacklist ToD Targets---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Blacklist = false

BossName = { 60913 }

for i=1, #BossName do
   if targetGUID == BossName[i] then Blacklist = true
   end
end
end

---Blacklist AoE Targets---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

NoAoE = false

Name = { 62995 }

for i=1, #Name do
   if targetGUID == Name[i] then NoAoE = true
   end
end
end

---Runic Empowerment Check---
Empower = false

for i=1, 6 do
	local RuneStart, RuneDuration = GetRuneCooldown(i)
	RunePercent =  100 * ((GetTime() - RuneStart) / RuneDuration)
   if RunePercent &amp;lt; 1 then Empower = true
   end
end


Death = 0
DeathCD = { 1, 2 }
for i=1, #DeathCD do
	local RuneStart, RuneDuration = GetRuneCooldown(DeathCD[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;lt; 1 then Death = Death + 1
    end
end

Unholy = 0
UnholyCD = { 3, 4 }
for i=1, #UnholyCD do
	local RuneStart, RuneDuration = GetRuneCooldown(UnholyCD[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;lt; 1 then Unholy = Unholy + 1
    end
end

Frost = 0
FrostCD = { 5, 6 }
for i=1, #FrostCD do
	local RuneStart, RuneDuration = GetRuneCooldown(FrostCD[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;lt; 1 then Frost = Frost + 1
    end
end





---Empower Rune Weapon Check---
RuneWep = 0

Finish = { 1, 2, 3, 4, 5, 6 }

for i=1, #Finish do
	local RuneStart, RuneDuration = GetRuneCooldown(Finish[i])
	RuneCD = RuneStart + RuneDuration - GetTime()
    if RuneCD &amp;gt; 1 then RuneWep = RuneWep + 1
    end
end



---Rune off cooldown, dont mind the contradiction---
Rune = nil
function Rune()
	local Blood = 0
	local Frost = 0
	local Unholy = 0
	local Death = 0
	for i=1, 6 do
		if GetRuneType(i) == 1 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Blood = Blood + 1
		end
		if GetRuneType(i) == 2 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Unholy = Unholy + 1
		end
		if GetRuneType(i) == 3 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Frost = Frost + 1
		end
		if GetRuneType(i) == 4 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   Death = Death + 1
		end
	end
	return Blood, Unholy, Frost, Death
end

RuneSoon = nil
function RuneSoon()
    local Blood = 0
	local Frost = 0
	local Unholy = 0
	local Death = 0
	for i=1, 6 do
		if GetRuneType(i) == 1 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Blood = Blood + 1
		end
		if GetRuneType(i) == 2 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Unholy = Unholy + 1
		end
		if GetRuneType(i) == 3 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Frost = Frost + 1
		end
		if GetRuneType(i) == 4 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; ((select(2,GetRuneCooldown(i)) * 15) / 100) then 
		   Death = Death + 1
		end
	end
	return Blood, Unholy, Frost, Death
end


---Soul Reaper Check---
SoulReaper = 0

SoulRune = { 1, 2, 5, 6 }

for i=1, #SoulRune do
local RuneStart, RuneDuration = GetRuneCooldown(SoulRune[i])
RuneCD = RuneStart + RuneDuration - GetTime()
local SRStart, SRDuration = GetSpellCooldown(130735)
SRCD = SRStart + SRDuration - GetTime()
	if (RuneCD &amp;gt; SRCD)  then SoulReaper = SoulReaper + 1
   	end
end

Reaping = 0

ReaperRune = { 1, 2, 5, 6 }

for i=1, #ReaperRune do
local ReaperStart, ReaperDuration = GetRuneCooldown(ReaperRune[i])
ReaperCD = ReaperStart + ReaperDuration - GetTime()
	if ReaperCD &amp;lt; 0.1 then Reaping = Reaping + 1
	end
end

DND = 0

DNDRune = { 1, 2, 5, 6 }

for i=1, #DNDRune do
local DNDStart, DNDDuration = GetRuneCooldown(DNDRune[i])
DNDCD = DNDStart + DNDDuration - GetTime()
	if DNDCD &amp;gt; 1 then DND = DND + 1
	end
end

for i=1, 8 do
   local name,_,_,_,type=UnitDebuff(&amp;quot;player&amp;quot;,i)
   if type == &amp;quot;Magic&amp;quot; then MagicDebuff = true
   end
end

---Control Undead Target List---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Control = false

Undeads = { 36725, 16165, 37122, 37038, 36807, 30278, 58822, 31220, 26694, 26830, 26624, 26636 }

for i=1, #Undeads do
   if targetGUID == Undeads[i] then Control = true
   end
end
end

---AMS Use List---
BossShield = false

Debuff = { 123011, 123012, 111850, 124863 }

for i=1, #Debuff do
	local Dread,_,_,Dreadcount,_,_,expires = UnitDebuffID(&amp;quot;player&amp;quot;,122768) 
	if UnitDebuffID(&amp;quot;player&amp;quot;, Debuff[i]) 
	or UnitCastingInfo(&amp;quot;target&amp;quot;) == &amp;quot;Expel Corruption&amp;quot;
	or UnitChannelInfo(&amp;quot;target&amp;quot;) == &amp;quot;Get Away!&amp;quot;
	or UnitChannelInfo(&amp;quot;target&amp;quot;) == &amp;quot;Lightning Storm&amp;quot;
	or (Dread and Dreadcount &amp;gt; 15) then
	BossShield = true
	end
end


---Time to die---

TimeToDie = 999999
if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PlayerCombat then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end             
_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
_currentTime = GetTime()
timeDiff = _currentTime - _firstTime
hpDiff = _firstLife - _currentLife
	if hpDiff &amp;gt; 0 then
		fullTime = timeDiff*_firstLifeMax/hpDiff
		pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
		calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
		if calcTime &amp;lt; 1 then
			calcTime = 1
		end
   	TimeToDie = calcTime
	end
	if hpDiff &amp;lt;= 0 then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end

---dummy---
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
		TimeToDie = 99
	end
end

PQ_ImpalingSpearCD = 0
PQ_ImpalingSpear = 122224

PQ_Frame = nil
PQ_CanCast = true
PQ_CanBT = true
PQ_CanImpalingSpear = true
function PQ_Frame_OnEvent(self, event, ...)
	if ... ~= &amp;quot;player&amp;quot; then return end
	
	local spellID = select(5, ...)
	
	if spellID ~= PQ_ImpalingSpear then
		PQ_GCD = GetTime() + 0.7
		PQ_CanCast = false
	end
			
	if spellID == PQ_ImpalingSpear then
		PQ_ImpalingSpearCD = GetTime() + 5
		PQ_CanImpalingSpear = false
	end
end
-----------------------------------------GLYPHS--------------------------------------------------
GlyphTouch = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 58631 then GlyphTouch = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 58631 then GlyphTouch = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 58631 then GlyphTouch = true end



----------------------------------------TALENTS----------------------------------------------------

Empowerment = false
Corruption = false
PlagueLeech = false
Grasp = false
Winter = false
Ground = false
Blight = false
Lichborne = false
Siphon = false
DeathPact = false
Conversion = false



if select(2,GetTalentRowSelectionInfo(5)) == 14 then Empowerment = true end

if select(2,GetTalentRowSelectionInfo(5)) == 15 then Corruption = true end

if select(2,GetTalentRowSelectionInfo(1)) == 2 then PlagueLeech = true end

if select(2,GetTalentRowSelectionInfo(1)) == 3 then Blight = true end

if select(2,GetTalentRowSelectionInfo(6)) == 16 then Grasp = true end

if select(2,GetTalentRowSelectionInfo(6)) == 17 then Winter = true end

if select(2,GetTalentRowSelectionInfo(6)) == 18 then Ground = true end

if select(2,GetTalentRowSelectionInfo(2)) == 4 then Lichborne = true end

if select(2,GetTalentRowSelectionInfo(4)) == 11 then Siphon = true end

if select(2,GetTalentRowSelectionInfo(4)) == 10 then DeathPact = true end

if select(2,GetTalentRowSelectionInfo(4)) == 12 then Conversion = true end
------------------------------------------RACIALS(Death Knight)--------------------------------------------
---Race Check---
Troll = IsSpellKnown(26297)
Orc = IsSpellKnown(20572)
Goblin = IsSpellKnown(69041)
BloodElf = IsSpellKnown(25046)

---Cooldown Check---
local TrollStart,TrollDuration = GetSpellCooldown(26297)
TrollCD = TrollStart + TrollDuration - GetTime()
local OrcStart,OrcDuration = GetSpellCooldown(20572)
OrcCD = OrcStart + OrcDuration - GetTime()
local BloodElfStart,BloodElfDuration = GetSpellCooldown(25046)
BloodElfCD = BloodElfStart + BloodElfDuration - GetTime()
local GoblinStart,GoblinDuration = GetSpellCooldown(69041)
GoblinCD = GoblinStart + GoblinDuration - GetTime()



------------------------------------------POTIONS--------------------------------------------------
VirmenCD = select(2,GetItemCooldown(76089))
Virmen = GetItemCount(76089)

MoguCD = select(2,GetItemCooldown(76095))
Mogu = GetItemCount(76095)

SharkCD = select(2,GetItemCooldown(77589))
Shark = GetItemCount(77589)

--------------------------------------PVP Tools----------------------------------------------------
function IsSlowed(unit)
local Slows = {
--WARLOCK--
18223,
--WARRIOR--
12323,
1715,
--PALADIN--
110300,                             
--DK--
45524,
50435,
--DRUID--
58180,
102355,
--HUNTER--
5116,
72217,
--MAGE--
7302,
116,
120,
44614,
--PRIEST--
124468,
15407,
--ROGUE--
26679,
3408,
--SHAMAN--
8056,
--MONK--
116095
              }
for i=1,#Slows do
        if UnitDebuffID(unit,Slows[i])
                then
                        return true
                end
        end
end

function SlowImmune(unit)
local Freedom = {
--Hand of Freedom--
1044,
--Dispersion--
47585
             }
for i=1,#Freedom do
        if UnitBuffID(unit,Freedom[i])
                then
                        return true
                end
        end
end

function IsImmune(unit)
local Immunity = {
110700, --Divine Shield
1022, --Hand of Protection
45438, --Ice Block
31224,--Cloak of Shadows
19263, --Deterrence
97417--BrittleBarrier
					}
for i=1,#Immunity do
        if UnitBuffID(unit,Immunity[i])
                then
                        return true
                end
        end
end

Blood = 0
if select(2,Rune()) == 0 then
Blood = Blood + 1
end
if select(3,Rune()) == 0 then
Blood = Blood + 1
end
if select(4,Rune()) == 0 then
Blood = Blood + 1
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>--actions.aoe+=/horn_of_winter

if Nova_AOE ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Plague Leech</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>--actions.aoe+=/plague_leech,if=talent.plague_leech.enabled&amp;unholy=1

if Nova_AOE ~= 1 then return false end

if not FF or not BP then return false end

if select(2,Rune()) == 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Initialize--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local IB, IBtmer = IB, IBtimer 

if IsMounted()
or IsMouseButtonDown(3)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
or UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or UnitBuffID(&amp;quot;player&amp;quot;,5384) ~= nil
or UnitDebuffID(&amp;quot;target&amp;quot;,1499)
or (UnitBuffID(&amp;quot;target&amp;quot;,123250) and UnitBuffID(&amp;quot;target&amp;quot;,123181))
or UnitDebuffID(&amp;quot;target&amp;quot;,19503)
then return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Plague Strike = 1 Unholy</Name><Default>false</Default><SpellID>45462</SpellID><Actions></Actions><Lua>--actions.aoe+=/plague_strike,if=unholy=1

if not MeleeRange() then return false end

if Nova_AOE ~= 1 then return false end

if select(2,Rune()) == 1 then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Presence</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDeathKnight_AutoPresence_enable then return false end

if GetSpecialization() == 2 then
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then
	CastShapeshiftForm(2)
	return true
	end
elseif GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 3 then
CastShapeshiftForm(3)
return true
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Control Undead</Name><Default>false</Default><SpellID>111673</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDeathKnight_ControlUndead_enable then return false end

local Control = Control

if Control == true 
and UnitExists(&amp;quot;pet&amp;quot;) == nil then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] ERW</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>--actions.aoe+=/empower_rune_weapon

if (PQI_SoapboxDeathKnight_BossCooldowns_enable and not SpecialUnit())
or Nova_Cooldowns ~= 1 
or Nova_AOE ~= 1 then return false end


return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AoE] Diseases</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Oblit, pestSwap, Blighted, BlightCD, Blight, FF, FFtimer, BP, BPtimer, Rime, OutbreakCD, 
NoAoE = Oblit, pestSwap, Blighted, BlightCD, Blight, FF, FFtimer, BP, BPtimer, Rime, OutbreakCD, 
NoAoE


---Outbreak, Howling Blast w/Rime, Plague Strike---
if (FF == nil or FFtimer - GetTime() &amp;lt; 3) then
	if OutbreakCD &amp;lt; 1 and not Blighted then
		CastSpellByName(GetSpellInfo(77575)) 
	end
	if Blight == true and BlightCD &amp;lt; 1  and OutbreakCD &amp;gt; 2  and OutbreakCD &amp;lt; 85 then
		CastSpellByName(GetSpellInfo(115989))
	end
	if OutbreakCD &amp;gt; 3 and Rime and NoAoE == false then
		CastSpellByName(GetSpellInfo(49184))
	end
end

if BP == nil or BPtimer - GetTime() &amp;lt; 3 then
	pestSwap = 1
	PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
  	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;)
	if OutbreakCD &amp;lt; 1 and not Blighted then
		CastSpellByName(GetSpellInfo(77575))
	end
	if Blight == true and BlightCD &amp;lt; 1 and OutbreakCD &amp;gt; 2  and OutbreakCD &amp;lt; 85 then
		CastSpellByName(GetSpellInfo(115989))
	end
	if OutbreakCD &amp;gt; 3 and OutbreakCD &amp;lt; 55 
	and ((Blight == true and BlightCD &amp;gt; 3) or Blight == false) 
	and not Blighted 
	and Oblit &amp;gt;= 1 then
		CastSpellByName(GetSpellInfo(45462))
	end
end

---Howling Blast---
if (FF == nil or FFtimer - GetTime() &amp;lt; 3) and NoAoE == false then
	if OutbreakCD &amp;gt; 3 then
		CastSpellByName(GetSpellInfo(49184))
	end
	pestSwap = 1
	PQR_WriteToChat(&amp;quot;Pestilence: \124cFF15E615Queued&amp;quot;)
  	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Pestilence: Queued&amp;quot;, nil, &amp;apos;55ff00&amp;apos;)
end

---Howling Blast---
if (FF == nil or FFtimer - GetTime() &amp;lt; 3) and NoAoE == true then
	if OutbreakCD &amp;gt; 3 then
		CastSpellByName(GetSpellInfo(45477))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Death Strike</Name><Default>false</Default><SpellID>49998</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDeathKnight_DeathStrike_enable then return false end

local value = tonumber(PQI_SoapboxDeathKnight_DeathStrike_value)

if Playerhealth &amp;lt;= value then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti-Magic Shell</Name><Default>false</Default><SpellID>48707</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_AntiMagicShell_enable then return false end

local value = tonumber(PQI_SoapboxFrost_AntiMagicShell_value)
local BossShield, MagicDebuff = BossShield, MagicDebuff
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if (Playerhealth &amp;lt;= value and MagicDebuff)
or BossShield == true then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mushroom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Mushroom, MCD, BP, BPtimer = Mushroom, MCD, BP, BPtimer

if Mushroom == true
and MCD &amp;lt; 1
and UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) == 1
and (BP == nil or (BP and BPtimer - GetTime() &amp;lt; 7))
then 
  RunMacroText(&amp;quot;/cast Wild Mushroom: Plague&amp;quot;)
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Icy Dispel</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>local GlyphTouch = GlyphTouch

if GlyphTouch == true then
	if UnitBuffID(&amp;quot;target&amp;quot;,117283)
	or UnitBuffID(&amp;quot;target&amp;quot;,122149) then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Necrotic Strike</Name><Default>false</Default><SpellID>73975</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_NecroticStrike_enable then return false end

if MeleeRange() then
	if NSSwap and IsUsableSpell(73975) then
	  	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chains of Ice</Name><Default>false</Default><SpellID>45524</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_ChainsofIce_enable then return false end
if not IceSwap or SlowImmune(&amp;quot;target&amp;quot;) then return false end
if UnitExists(&amp;quot;target&amp;quot;) == nil then return false end
local SlowThem = true

if IsSlowed(&amp;quot;target&amp;quot;)
or SlowImmune(&amp;quot;target&amp;quot;)
then
SlowThem = false
end


if SlowThem == false
and UnitDebuffID(&amp;quot;target&amp;quot;,45524)
then
	local Ice, _, _, _, _, _, Icetimer = UnitDebuffID(&amp;quot;target&amp;quot;, 45524)
	if Ice then
		if Icetimer - GetTime() &amp;lt; 1 then
			return true
		end
	end
end
		
		
if SlowThem == true
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Strangulate</Name><Default>false</Default><SpellID>47476</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_Strangulate_enable then return false end

local MFCD = MFCD

if (MFCD &amp;gt;= 1 and MFCD &amp;lt; 15)
or not MeleeRange() then
	if UnitCastingInfo(&amp;quot;target&amp;quot;) 
	or UnitChannelInfo(&amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(45529))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Death and Decay -Manual-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DNDQueue_enable then return false end
if not DNDSwap then return false end


local NoAoE, Oblit, DND = NoAoE, Oblit, DND

--- actions+=/death_and_decay---
if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and NoAoE == false
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Death and Decay -Manual-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrost_DNDQueue_enable then return false end
if not DNDSwap then return false end

local NoAoE, Oblit, DND = NoAoE, Oblit, DND

--- actions+=/death_and_decay---
if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and NoAoE == false
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Frost Strike Blood Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--frost_strike,if=talent.blood_tap.enabled&amp;buff.blood_charge.stack&amp;lt;=10

if not MeleeRange() then return false end


if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsPlayerSpell(45529) then
	if IsUsableSpell(49143) then
		if not Charges or (Charges and Chargescount &amp;lt;= 10) then
		CastSpellByName(GetSpellInfo(49143))
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Unholy Blight</Name><Default>false</Default><SpellID>115989</SpellID><Actions></Actions><Lua>--actions.aoe=unholy_blight,if=talent.unholy_blight.enabled

if not MeleeRange() then return false end

if Nova_AOE ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Pestilence</Name><Default>false</Default><SpellID>50842</SpellID><Actions></Actions><Lua>--actions.aoe+=/pestilence,if=dot.blood_plague.ticking&amp;talent.plague_leech.enabled,line_cd=28
--actions.aoe+=/pestilence,if=dot.blood_plague.ticking&amp;talent.unholy_blight.enabled&amp;cooldown.unholy_blight.remains&amp;lt;49,line_cd=28

if not MeleeRange() then return false end

if Nova_AOE ~= 1 then return false end

if BP then
	if not IsPlayerSpell(115989) then
	return true
	elseif GetSpellCD(115989) &amp;lt; 49 and not UnholyBlight then
	return true
	end
end</Lua><RecastDelay>28000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Howling Blast</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>--actions.aoe+=/howling_blast 

if Nova_AOE ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Blood Tap 10+</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.aoe+=/blood_tap,if=talent.blood_tap.enabled&amp;buff.blood_charge.stack&amp;gt;10

if Nova_AOE ~= 1 then return false end

if not select(2,Rune()) == 0 
and not select(3,Rune()) == 0 
and not select(4,Rune()) == 0 then
return false
end

if Charges and Chargescount &amp;gt; 10 then		
return true
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Frost Strike &amp;gt; 76 RP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.aoe+=/frost_strike,if=runic_power&amp;gt;76

if not MeleeRange() then return false end

if Nova_AOE ~= 1 
or (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsUsableSpell(49143) then
	if RP &amp;gt; 76 then
	CastSpellByName(GetSpellInfo(49143))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.aoe+=/death_and_decay,if=unholy=1

if Nova_AOE ~= 1
or Nova_DNDD ~= 1 then return false end

if IsUsableSpell(43265)
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 
and select(2,Rune()) == 1
then 
  CastSpellByName(GetSpellInfo(43265)) 
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Plague Strike = 2 Unholy</Name><Default>false</Default><SpellID>45462</SpellID><Actions></Actions><Lua>--actions.aoe+=/plague_strike,if=unholy=2

if not MeleeRange() then return false end

if Nova_AOE ~= 1 then return false end

if select(2,Rune()) == 2 then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Blood Tap</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.aoe+=/blood_tap,if=talent.blood_tap.enabled

if Nova_AOE ~= 1 then return false end

if not select(2,Rune()) == 0 
and not select(3,Rune()) == 0 
and not select(4,Rune()) == 0 then
return false
end

if Charges and Chargescount &amp;gt; 4 then
return true
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.aoe+=/frost_strike

if not MeleeRange() then return false end

if Nova_AOE ~= 1 
or (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end



if IsUsableSpell(49143) then
	CastSpellByName(GetSpellInfo(49143))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MS] Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.single_target+=/death_and_decay,if=unholy&amp;gt;0&amp;buff.pillar_of_frost.down

if not PQI_SoapboxDeathKnight_MasterSimpleRotation_enable or Pillar then return false end



if IsUsableSpell(43265)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and select(2,GetSpellCooldown(43265)) &amp;lt; 2 
and UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
and select(2,Rune()) &amp;gt; 0 then
CastSpellByName(tostring(GetSpellInfo(43265)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MC] Soul Reaper</Name><Default>false</Default><SpellID>130735</SpellID><Actions></Actions><Lua>if PQI_SoapboxDeathKnight_MasterSimpleRotation_enable then return false end

Soul = true
if not UnitExists(&amp;quot;target&amp;quot;) then return false end
if GetSpellCD(130735) &amp;gt; 1 then return false end 
if Targethealth &amp;gt; 75 then return false end
if not MeleeRange() then return false end

if not PQI_SoapboxDeathKnight_SoulReaperTrash_enable and not
PQI_SoapboxDeathKnight_SoulReaperBoss_enable then return false end

local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)

if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
	if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
		if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then
		CastSpellByName(GetSpellInfo(130735))
		return true
		end
	end
elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
	if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val2 then
	CastSpellByName(GetSpellInfo(130735))
	return true
	end
end</Lua><RecastDelay>6000</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MC] Blood Tap Soul Reaper</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.single_target+=/blood_tap,if=talent.blood_tap.enabled&amp;((target.health.pct-3*(target.health.pct%target.time_to_die)&amp;lt;=35&amp;cooldown.soul_reaper.remains=0))

if PQI_SoapboxDeathKnight_MasterSimpleRotation_enable then return false end

if not MeleeRange() then return false end

if Targethealth &amp;gt; 75 then return false end
if not UnitExists(&amp;quot;target&amp;quot;) then return false end
local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)

if not PQI_SoapboxDeathKnight_SoulReaperTrash_enable and not
PQI_SoapboxDeathKnight_SoulReaperBoss_enable then return false end

if BloodTap then
	if Charges and Chargescount &amp;gt;= 5 and GetSpellCD(130735) &amp;lt; 1 then
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then
				return true
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val2 then
			return true
			end
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Plague Leech &amp;lt; 1</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>if Blood &amp;lt; 2 then return false end

if not FF or not BP then return false end

if (FF and FFtimer - GetTime() &amp;lt; 1)
or (BP and BPtimer - GetTime() &amp;lt; 1) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Outbreak !DoTs</Name><Default>false</Default><SpellID>77575</SpellID><Actions></Actions><Lua>--outbreak,if=!dot.frost_fever.ticking|!dot.blood_plague.ticking
if MindControlled(&amp;quot;target&amp;quot;) then return false end

--if T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then return false end
if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 10000000 then return false end

if not FF or not BP then
	if not Blighted then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Unholy Blight !DoTs</Name><Default>false</Default><SpellID>115989</SpellID><Actions></Actions><Lua>--unholy_blight,if=talent.unholy_blight.enabled&amp;((!dot.frost_fever.ticking|!dot.blood_plague.ticking))
if MindControlled(&amp;quot;target&amp;quot;) then return false end
if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 10000000 then return false end

if not MeleeRange() then return false end

if Outbreak then return false end

if not FF or not BP then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Soul Reaper</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--soul_reaper,if=target.health.pct-3*(target.health.pct%target.time_to_die)&amp;lt;=35
if not UnitExists(&amp;quot;target&amp;quot;) then return false end
if GetSpellCD(130735) &amp;gt; 1 then return false end 
if Targethealth &amp;gt; 75 then return false end
if not MeleeRange() then return false end

if not PQI_SoapboxDeathKnight_SoulReaperTrash_enable and not
PQI_SoapboxDeathKnight_SoulReaperBoss_enable then return false end

local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)

if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
	if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
		if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then
		CastSpellByName(GetSpellInfo(130735))
		return true
		end
	end
elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
	if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val2 then
	CastSpellByName(GetSpellInfo(130735))
	return true
	end
end</Lua><RecastDelay>6000</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap Soul Reaper</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.single_target+=/blood_tap,if=talent.blood_tap.enabled&amp;((target.health.pct-3*(target.health.pct%target.time_to_die)&amp;lt;=35&amp;cooldown.soul_reaper.remains=0))
if not MeleeRange() then return false end

if Blood &amp;lt; 1 then return false end

if Targethealth &amp;gt; 75 then return false end
if not UnitExists(&amp;quot;target&amp;quot;) then return false end
local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)

if not PQI_SoapboxDeathKnight_SoulReaperTrash_enable and not
PQI_SoapboxDeathKnight_SoulReaperBoss_enable then return false end

if BloodTap then
	if Charges and Chargescount &amp;gt;= 5 and GetSpellCD(130735) &amp;lt; 1 then
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then
				return true
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val2 then
			return true
			end
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Plague Strike !Blood Plague</Name><Default>false</Default><SpellID>45462</SpellID><Actions></Actions><Lua>--plague_strike,if=!dot.blood_plague.ticking
if MindControlled(&amp;quot;target&amp;quot;) then return false end
if T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then return false end

if UnholyBlight then return false end

if not BP then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Howling Blast Rime</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>-- 	howling_blast,if=buff.rime.react

if PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end

if Rime then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Icy Touch Rime</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>--icy_touch,if=buff.rime.react

if not PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end

if Rime then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Frost Strike RP &amp;gt; 76</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--frost_strike,if=runic_power&amp;gt;76

if not MeleeRange() then return false end

if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if RP &amp;gt; 76 then
	if IsUsableSpell(49143) then
	CastSpellByName(GetSpellInfo(49143))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Howling Blast</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>--actions.single_target+=/howling_blast

if PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end


return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Obliterate Killing Machine</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>-- 	obliterate,if=buff.killing_machine.react

if not MeleeRange() then return false end
if not UnitExists(&amp;quot;target&amp;quot;) then return false end
local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)
if GetSpellCD(130735) &amp;lt; 1.5 and Targethealth &amp;lt;= 75 then
	if PQI_SoapboxDeathKnight_SoulReaperTrash_enable or PQI_SoapboxDeathKnight_SoulReaperBoss_enable then 
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
					if select(2,Rune()) &amp;lt; 1 then
						if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
						return false
						end
					elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
					return false
					end
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
				if select(2,Rune()) &amp;lt; 1 then
					if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
					return false
					end
				elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
				return false
				end
			end
		end
	end
end

if KillingMachine then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Obliterate Rune=2</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>--obliterate,if=blood=2|frost=2|unholy=2

if not MeleeRange() then return false end

if not UnitExists(&amp;quot;target&amp;quot;) then return false end
local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)
if GetSpellCD(130735) &amp;lt; 1.5 and Targethealth &amp;lt;= 75 then
	if PQI_SoapboxDeathKnight_SoulReaperTrash_enable or PQI_SoapboxDeathKnight_SoulReaperBoss_enable then 
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
					if select(2,Rune()) &amp;lt; 1 then
						if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
						return false
						end
					elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
					return false
					end
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
				if select(2,Rune()) &amp;lt; 1 then
					if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
					return false
					end
				elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
				return false
				end
			end
		end
	end
end

if select(2,Rune()) &amp;gt; 1
or select(3,Rune()) &amp;gt; 1
or select(4,Rune()) &amp;gt; 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap Killing Machine</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

if Blood &amp;lt; 1 then return false end

--blood_tap,if=talent.blood_tap.enabled&amp;buff.killing_machine.react
if BloodTap then
	if Charges and Chargescount &amp;gt; 4 then
		if KillingMachine then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap &amp;gt; 10 RP &amp;gt; 76</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--blood_tap,if=talent.blood_tap.enabled&amp;(buff.blood_charge.stack&amp;gt;10&amp;runic_power&amp;gt;76)

if Blood &amp;lt; 1 then return false end


if BloodTap then
	if Charges and Chargescount &amp;gt; 10 then
		if RP &amp;gt; 76 then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Icy Touch</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>--actions.single_target+=/icy_touch

if not PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end


return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Plague Leech &amp;lt; 3</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>--plague_leech,if=talent.plague_leech.enabled&amp;((dot.blood_plague.remains&amp;lt;3|dot.frost_fever.remains&amp;lt;3))

if Blood &amp;lt; 2 then return false end

if not FF or not BP then return false end

if (FF and FFtimer - GetTime() &amp;lt; 3)
or (BP and BPtimer - GetTime() &amp;lt; 3) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Outbreak &amp;lt; 3</Name><Default>false</Default><SpellID>77575</SpellID><Actions></Actions><Lua>--outbreak,if=dot.frost_fever.remains&amp;lt;3|dot.blood_plague.remains&amp;lt;3
if MindControlled(&amp;quot;target&amp;quot;) then return false end
if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 10000000 then return false end
if (FF and FFtimer - GetTime() &amp;lt; 3)
or (BP and BPtimer - GetTime() &amp;lt; 3) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Frost Strike Empowerment</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--frost_strike,if=talent.runic_empowerment.enabled&amp;(frost=0|unholy=0|blood=0)

if not MeleeRange() then return false end

if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsPlayerSpell(81229) then
	if IsUsableSpell(49143) then
		if select(2,Rune()) == 0 
		or select(3,Rune()) == 0 
		or select(4,Rune()) == 0 then
		CastSpellByName(GetSpellInfo(49143))
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Obliterate</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end
if not UnitExists(&amp;quot;target&amp;quot;) then return false end
local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)
if GetSpellCD(130735) &amp;lt; 1.5 and Targethealth &amp;lt;= 75 then
	if PQI_SoapboxDeathKnight_SoulReaperTrash_enable or PQI_SoapboxDeathKnight_SoulReaperBoss_enable then 
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
					if select(2,Rune()) &amp;lt; 1 then
						if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
						return false
						end
					elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
					return false
					end
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
				if select(2,Rune()) &amp;lt; 1 then
					if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
					return false
					end
				elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
				return false
				end
			end
		end
	end
end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Blood Tap &amp;gt; 10 RP &amp;gt;= 20</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--blood_tap,if=talent.blood_tap.enabled&amp;(buff.blood_charge.stack&amp;gt;10&amp;runic_power&amp;gt;=20)

if Blood &amp;lt; 1 then return false end

if BloodTap then
	if Charges and Chargescount &amp;gt; 10 then
		if RP &amp;gt;= 20 then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[2H] Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsUsableSpell(49143) then
CastSpellByName(GetSpellInfo(49143))
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Ally&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;DNDD&amp;quot;, 					Var2 = 1		},	
		{	Var1 = 0,	Text = &amp;quot;Pest&amp;quot;,					Var2 = 1		}
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
			xrn:message(&amp;quot;|cff9933ffCooldowns - Active.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
		else			
			xrn:message(&amp;quot;|cff9933ffCooldowns - Inactive.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
		end
	end	
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFArea of Effect Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		end
	end
	SLASH_ALLY1 = &amp;quot;/ally&amp;quot;
	function SlashCmdList.ALLY(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Ally&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFRaise Ally - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Ally&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFF0000FFRaise Ally - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Ally&amp;quot;, 0)
		end
	end
	SLASH_DNDD1 = &amp;quot;/decay&amp;quot;
	function SlashCmdList.DNDD(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_DNDD&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFDeath and Decay - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_DNDD&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFF0000FFDeath and Decay - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_DNDD&amp;quot;, 0)
		end
	end
	SLASH_PEST1 = &amp;quot;/pest&amp;quot;
	function SlashCmdList.PEST(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pest&amp;quot;) then
			xrn:message(&amp;quot;\124cFFCC9900Pestilence - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pest&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC9900Pestilence - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pest&amp;quot;, 0)			
		end
	end
		
	SLASH_HOJ1 = &amp;quot;/hoj&amp;quot;
	function SlashCmdList.HOJ(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_HOJ&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFHammer of Justice - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOJ&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFHammer of Justice - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOJ&amp;quot;, 0)
		end
	end
	
	SLASH_DS1 = &amp;quot;/ds&amp;quot;
	function SlashCmdList.DS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_DS&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFDivine Shield - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_DS&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFDivine Shield - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_DS&amp;quot;, 0)
		end
	end
		SLASH_LIGHT1 = &amp;quot;/light&amp;quot;
	function SlashCmdList.LIGHT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Light&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFLight&amp;apos;s Hammer - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Light&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFLight&amp;apos;s Hammer - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Light&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---init---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false




 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end


  ----------------
  --Nova  Checks--
  ----------------
  if Nova_Cooldowns == 1 then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) end
  if (Nova_AOE == nil or Nova_AOE == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Config---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_DEATHKNIGHT then return false end

local config = {
	name  = &amp;apos;Death Knight&amp;apos;,
	author  = &amp;apos;Soapbox&amp;apos;,
	abilities = {
		{  name = &amp;quot;MasterSimple Rotation&amp;quot;,
			enable = true,
		},
		{  name = &amp;quot;Auto Presence&amp;quot;,
			enable = true,
		},
		{  name = &amp;quot;Boss Cooldowns&amp;quot;,
			enable = true,
			newSection = true,
		},
		{  name = &amp;quot;Boss Functions&amp;quot;,
			enable = true,
			newSection = true,
		},
		{  name = &amp;quot;Icy Touch Rotation&amp;quot;,
			enable = false,
			newSection = true,
		},
		{  name = &amp;quot;Control Undead&amp;quot;,
			enable = true,
			newSection = true,
		},	
		{  name = &amp;quot;Soul Reaper Trash&amp;quot;,	
			newSection = true,	
			enable = true,	
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 7,
				step = 1,
			},
		},
		{  name = &amp;quot;Soul Reaper Boss&amp;quot;,	
			enable = true,		
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 36,
				step = 1,
			},
		},
		{  name = &amp;quot;Dark Succor&amp;quot;,			
			newSection = true,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 95,
				step = 5,
			},
		},
		{  name = &amp;quot;Auto Tier 4 Talent&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 20,
				step = 5,
			},
		},
		{  name = &amp;quot;Death Strike&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 20,
				step = 5,
			},
		},
		{  name = &amp;quot;Healthstone&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 65,
				step = 5,
			},
		},
	},	
}
SOAPBOX_DEATHKNIGHT = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[AOE] Stop Point</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Rotation Check---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() == 2 then
	if OffhandHasWeapon() then
	Spec = &amp;quot;Dual-Wield&amp;quot;
	PQR_SwapRotation(&amp;quot;Dual-Wield (Soapbox Death Knight Serial FU2014)&amp;quot;) 
	else
	Spec = &amp;quot;Two-Hand&amp;quot;
	PQR_SwapRotation(&amp;quot;Two-Hand (Soapbox Death Knight Serial FU2014)&amp;quot;)
	end
elseif GetSpecialization() == 3 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Success!---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
             or (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
       	if select(12, ...) == 61999 and Nova_Ally == 1 then
		SetCVar(&amp;quot;Nova_Ally&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Raise Ally: \124cFFE61515Casted&amp;quot;)
		end
		if select(12, ...) == 45529 then
		BloodTap = false
		elseif select(12, ...) ~= 45529 then
		BloodTap = true
		end
		if select(12, ...) == 43265 and Nova_DNDD == 1 then
		PQR_WriteToChat(&amp;quot;Death and Decay: \124cFFE61515Casted&amp;quot;)
		SetCVar(&amp;quot;Nova_DNDD&amp;quot;, 0)
		end
		if select(12, ...) == 130735 then
		Soul = false
		SoulCasted = true
		end
		if select(12, ...) ~= 130735 then
		SoulCasted = false
		end
		if select(12, ...) == 77575 then
		Outbreak = true
		end
		if select(12, ...) ~= 77575 then
		Outbreak = false
		end
		if select(12, ...) == 50842 and Nova_Pest == 1 then
		SetCVar(&amp;quot;Nova_Pest&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Pestilence: \124cFFE61515Casted&amp;quot;)
      end
     end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Raise Ally</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Ally ~= 1 then return false end

if UnitExists(&amp;quot;mouseover&amp;quot;) 
	and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
	and UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)     
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
	and IsSpellInRange(GetSpellInfo(61999),&amp;quot;mouseover&amp;quot;)==1 
	and RP &amp;gt;= 30
then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;) == 1 and PQR_SpellAvailable(61999) then
		CastSpellByName(GetSpellInfo(61999),&amp;quot;mouseover&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Level 60 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Level60 == 1 then
	if DeathPact == true and DPCD &amp;lt; 1 then
		if RCD &amp;gt; 60 and RCD &amp;lt; 120 then
		CastSpellByName(GetSpellInfo(48743))
		return true
		elseif RCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(46584))
		return true
		end
	elseif Siphon == true then
		if select(4,Rune()) &amp;gt;= 1 then
		CastSpellByName(GetSpellInfo(108196))
		return true
		end
	elseif Conversion == true then
		if RP &amp;gt;= 20 and not UnitBuffID(&amp;quot;player&amp;quot;, 119975) then
		CastSpellByName(GetSpellInfo(119975))
		return true
		end
	end
elseif PQI_SoapboxDeathKnight_AutoTier4Talent_enable then 
local value = tonumber(PQI_SoapboxDeathKnight_AutoTier4Talent_value)
	if Playerhealth &amp;lt;= value then
		if DeathPact == true and DPCD &amp;lt; 1 then
			if GetTotemInfo(1) == true then
				CastSpellByName(GetSpellInfo(48743))
				return true
			elseif RCD &amp;lt; 1 then
			CastSpellByName(GetSpellInfo(46584))
			return true
			end
		elseif Siphon == true then
			if select(4,Rune()) &amp;gt;= 1 then
			CastSpellByName(GetSpellInfo(108196))
			return true
			end
		elseif Conversion == true then
			if RP &amp;gt;= 20 and not UnitBuffID(&amp;quot;player&amp;quot;, 119975) then
			CastSpellByName(GetSpellInfo(119975))
			return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Level 90 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Pest == 1 then
	if IsPlayerSpell(108200) then
		if WinterCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(108200),&amp;quot;player&amp;quot;)
		end
	end
	if IsPlayerSpell(108199) then
		if GraspCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(108199),&amp;quot;player&amp;quot;)
		end
	end
	if IsPlayerSpell(108201) then
		if GroundCD &amp;lt; 1 then
		CastSpellByName(GetSpellInfo(108201),&amp;quot;player&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Raise Dead</Name><Default>false</Default><SpellID>46584</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

if Nova_Cooldowns ~= 1 then return false end

---actions+=/raise_dead---
if UnitExists(&amp;quot;pet&amp;quot;) == nil and Pillar then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Combat Pause-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return true end
if not UnitExists(&amp;quot;target&amp;quot;) then return true
elseif not UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Troll, Orc, Goblin, BloodElf, TrollCD, OrcCD, BloodElfCD, GoblinCD, RP, Pillar = 
Troll, Orc, Goblin, BloodElf, TrollCD, OrcCD, BloodElfCD, GoblinCD, RP, Pillar

--Troll Berserking--
if Troll == true then 
	if TrollCD &amp;lt; 1 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 3045) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
	and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 90355) then
	CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	return true
	end
end

--Orc Blood Fury--
if Orc == true then 
	if OrcCD &amp;lt; 1 
	and Pillar then
	CastSpellByName(GetSpellInfo(20572),&amp;quot;player&amp;quot;)
	return true
	end
end

--Blood Elf Arcane Torrent--
if BloodElf == true then 
	if BloodElfCD &amp;lt; 1 
	and RP &amp;lt; 40 then
	CastSpellByName(GetSpellInfo(25046),&amp;quot;player&amp;quot;)
	return true
	end
end

--Goblin Rocket Barrage--
if Goblin == true then 
	if GoblinCD &amp;lt; 1 then
	CastSpellByName(GetSpellInfo(69041),&amp;quot;target&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Dark Succor</Name><Default>false</Default><SpellID>49998</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDeathKnight_DarkSuccor_enable then return false end

local value = tonumber(PQI_SoapboxDeathKnight_DarkSuccor_value)


if UnitBuffID(&amp;quot;player&amp;quot;, 101568) then
	if Playerhealth &amp;lt;= value then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_SoapboxDeathKnight_Healthstone_enable then return false end

local v=PQI_SoapboxDeathKnight_Healthstone_value

if GetItemCount(5512) &amp;gt; 0
	and Playerhealth &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and GetItemCooldown(5512) == 0
then UseItemByName(5512) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Boss Functions: DK---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDeathKnight_BossFunctions_enable then return false end

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		elseif npcID == 71161 or npcID == 71157 or npcID == 71156 or npcID == 71155 or npcID == 71160 or npcID == 71154 or npcID == 71152 or npcID == 71158 or npcID == 71153 then ---Klaxxi
			if UnitBuffID(&amp;quot;player&amp;quot;,141857) and not UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if PQR_SpellAvailable(143373) then
				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				return true
				end
			end
			if UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144275) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
				return true
				elseif not UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144276) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton3&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144274) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144181) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton4&amp;quot;)
				return true
				end
			end
		elseif npcID == 71515 then  ---General Nazgrim
			if UnitBuffID(&amp;quot;target&amp;quot;,71) then
			SpellStopCasting()
			PetFollow()
			return true
			end
		--elseif npcID == 71543 then  ---Immersius
		--	if UnitBuffID(&amp;quot;target&amp;quot;,143574) then
		--	SpellStopCasting()
		--	PetFollow()
		--	return true
		--	end
		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end
-- Fading Light
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) then
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 1.3 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end
	
-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
if HoT == GetSpellInfo(103327) then
	if timer/1000 - GetTime() &amp;lt; 1.3 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end	
end

-- Avoid Fragmentation on Madness
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

-- Spine of Deathwing
if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitAura(&amp;quot;player&amp;quot;, &amp;quot;Parachute&amp;quot;) then
		RunMacroText(&amp;quot;/cancelaura Parachute&amp;quot;)
	end
end

-- Darkmoon Faerie Cannon
if select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) and select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) - GetTime() &amp;lt; 1.07 then 
	CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) 
end

-- Bloody Knives Boss Horde Krassarang Wilds.
local BloodyKnives = UnitDebuffID(&amp;quot;player&amp;quot;,135343)
if BloodyKnives then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

-- Pvp Flag
local flag = { &amp;quot;Alliance Flag&amp;quot;, &amp;quot;Horde Flag&amp;quot;, &amp;quot;Netherstorm Flag&amp;quot; }
for i=1,#flag do InteractUnit(flag[i]) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Blood Tap &amp;gt; 10 RP &amp;gt; 76</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.single_target=blood_tap,if=talent.blood_tap.enabled&amp;(buff.blood_charge.stack&amp;gt;10&amp;(runic_power&amp;gt;76|(runic_power&amp;gt;=20&amp;buff.killing_machine.react)))

if not select(2,Rune()) == 0 
and not select(3,Rune()) == 0 
and not select(4,Rune()) == 0 then
return false
end

if BloodTap then
	if Charges and Chargescount &amp;gt; 10 then
		if RP &amp;gt; 76 
		or (RP &amp;gt;= 20 and KillingMachine) then
		return true
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Frost Strike &amp;gt; 88 RP or KM</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.single_target+=/frost_strike,if=buff.killing_machine.react|runic_power&amp;gt;88

if not MeleeRange() then return false end

if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsUsableSpell(49143) then
	if RP &amp;gt; 88 or KillingMachine then
	CastSpellByName(GetSpellInfo(49143))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Howling Blast Death/Frost &amp;gt; 1</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>--actions.single_target+=/howling_blast,if=death&amp;gt;1|frost&amp;gt;1

if PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end

if select(3, Rune()) &amp;gt; 1
or select(4, Rune()) &amp;gt; 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Icy Touch Death/Frost &amp;gt; 1</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>--actions.single_target+=/icy_touch,if=death&amp;gt;1|frost&amp;gt;1

if not PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end

if select(3, Rune()) &amp;gt; 1
or select(4, Rune()) &amp;gt; 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Unholy Blight &amp;lt; 3</Name><Default>false</Default><SpellID>115989</SpellID><Actions></Actions><Lua>--actions.single_target+=/unholy_blight,if=talent.unholy_blight.enabled&amp;((dot.frost_fever.remains&amp;lt;3|dot.blood_plague.remains&amp;lt;3))
if MindControlled(&amp;quot;target&amp;quot;) then return false end
if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 10000000 then return false end

if not MeleeRange() then return false end

if Outbreak then return false end


if (FF and FFtimer - GetTime() &amp;lt; 3)
or (BP and BPtimer - GetTime() &amp;lt; 3) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Frost Strike Empoweerment</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.single_target+=/frost_strike,if=talent.runic_empowerment.enabled&amp;unholy=1
if not MeleeRange() then return false end

if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsUsableSpell(49143) then
	if IsPlayerSpell(81229) then
		if select(2, Rune()) == 1 then
		CastSpellByName(GetSpellInfo(49143))
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Icy Touch !Frost Fever</Name><Default>false</Default><SpellID>45477</SpellID><Actions></Actions><Lua>--icy_touch,if=!dot.frost_fever.ticking
if MindControlled(&amp;quot;target&amp;quot;) then return false end

if UnholyBlight then return false end

if not PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end

if not FF then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Howling Blast !Frost Fever</Name><Default>false</Default><SpellID>49184</SpellID><Actions></Actions><Lua>--howling_blast,if=!dot.frost_fever.ticking
if MindControlled(&amp;quot;target&amp;quot;) then return false end

if UnholyBlight then return false end

if PQI_SoapboxDeathKnight_IcyTouchRotation_enable then return false end

if not FF then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Blood Tap &amp;gt;= 8</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.single_target+=/blood_tap,if=talent.blood_tap.enabled&amp;(target.health.pct-3*(target.health.pct%target.time_to_die)&amp;gt;35|buff.blood_charge.stack&amp;gt;=8)
if not MeleeRange() then return false end

if not select(2,Rune()) == 0 
and not select(3,Rune()) == 0 
and not select(4,Rune()) == 0 then
return false
end

if BloodTap then
	if Charges and Chargescount &amp;gt;= 8 then	
	return true
	elseif Charges and Chargescount &amp;gt;= 5 then
	if not UnitExists(&amp;quot;target&amp;quot;) then return false end
	local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
	local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;gt; val then
				return true
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;gt; val2 then
			return true
			end
		end
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Frost Strike RP &amp;gt;= 40</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--actions.single_target+=/frost_strike,if=runic_power&amp;gt;=40

if not MeleeRange() then return false end

if (Nova_Ally == 1 and PQR_SpellAvailable(61999) and RP &amp;lt; 50) then return false end

if IsUsableSpell(49143) then
	if RP &amp;gt;= 40 then
	CastSpellByName(GetSpellInfo(49143))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DW] Blood Tap</Name><Default>false</Default><SpellID>45529</SpellID><Actions></Actions><Lua>--actions.single_target+=/blood_tap,if=talent.blood_tap.enabled

if not select(2,Rune()) == 0 
and not select(3,Rune()) == 0 
and not select(4,Rune()) == 0 then
return false
end

if BloodTap then
	if Charges and Chargescount &amp;gt;4 then
	return true
	end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Plague Leech</Name><Default>false</Default><SpellID>123693</SpellID><Actions></Actions><Lua>if Blood &amp;lt; 2 then return false end

if not FF or not BP then return false end

if not MeleeRange() then return false end
return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[FROST] Pillar of Frost</Name><Default>false</Default><SpellID>51271</SpellID><Actions>/use 10 |/use 13 |/use14 |/cast Berserking |/cast Blood Fury</Actions><Lua>if not MeleeRange() then return false end

if Nova_Cooldowns ~= 1 then return false end

--- actions+=/pillar_of_frost---
if  MeleeRange() then
	if RCD &amp;lt; 1 or RCD &amp;gt; 10 then
	UseInventoryItem(10)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Empower Rune Weapon</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

if (PQI_SoapboxDeathKnight_BossCooldowns_enable and not SpecialUnit())
or Nova_Cooldowns ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MC] Obliterate</Name><Default>false</Default><SpellID>49020</SpellID><Actions></Actions><Lua>--actions.single_target+=/obliterate,if=unholy&amp;gt;0&amp;!buff.killing_machine.react
if PQI_SoapboxDeathKnight_MasterSimpleRotation_enable then return false end

if not MeleeRange() then return false end

if not UnitExists(&amp;quot;target&amp;quot;) then return false end
local val = tonumber(PQI_SoapboxDeathKnight_SoulReaperBoss_value)
local val2 = tonumber(PQI_SoapboxDeathKnight_SoulReaperTrash_value)
if GetSpellCD(130735) &amp;lt; 1.5 and T2D(&amp;quot;target&amp;quot;) &amp;gt; 5 then
	if PQI_SoapboxDeathKnight_SoulReaperTrash_enable or PQI_SoapboxDeathKnight_SoulReaperBoss_enable then 
		if PQI_SoapboxDeathKnight_BossCooldowns_enable and SpecialUnit() then
			if PQI_SoapboxDeathKnight_SoulReaperBoss_enable then
				if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
					if select(2,Rune()) &amp;lt; 1 then
						if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
						return false
						end
					elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
					return false
					end
				end
			end
		elseif PQI_SoapboxDeathKnight_SoulReaperTrash_enable then
			if Targethealth-3*(Targethealth / T2D(&amp;quot;target&amp;quot;)) &amp;lt;= val then		
				if select(2,Rune()) &amp;lt; 1 then
					if (select(3,Rune()) + select(3,Rune())) &amp;lt; 2 then 
					return false
					end
				elseif (select(3,Rune()) + select(3,Rune())) &amp;lt; 3 then
				return false
				end
			end
		end
	end
end

if select(2,Rune()) &amp;gt; 0 and not KillingMachine then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] ERW High</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

if (PQI_SoapboxDeathKnight_BossCooldowns_enable and not SpecialUnit())
or Nova_Cooldowns ~= 1 then return false end

if (cTime &amp;lt; 20 or (SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt;= 60 and UnitBuffID(&amp;quot;player&amp;quot;, 105706))) 
and RP &amp;lt; 75 and (select(1, Rune()) + select(2, Rune()) + select(3, Rune()) + select(4, Rune())) &amp;lt; 2
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lichborne Heal</Name><Default>false</Default><SpellID>47541</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 49039) and Playerhealth &amp;lt; 75 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lichborne</Name><Default>false</Default><SpellID>49039</SpellID><Actions></Actions><Lua>if Playerhealth &amp;lt; 20 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DEATHKNIGHT>