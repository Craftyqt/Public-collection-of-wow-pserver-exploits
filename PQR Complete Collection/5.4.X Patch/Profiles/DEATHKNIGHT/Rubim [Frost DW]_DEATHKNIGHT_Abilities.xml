<?xml version="1.0" encoding="utf-8" ?><DEATHKNIGHT><Ability><Name>[ MISC ] 1.1 - Globals (Class)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---------------
-- FUNCTIONS --
---------------
RuneCheck = nil
function RuneCheck()
	FrostRune = 0
	UnholyRune = 0
	BloodRune = 0
	DeathRune = 0
	for i=1, 6 do
		if GetRuneType(i) == 1 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   BloodRune = BloodRune + 1
		end
		if GetRuneType(i) == 2 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   UnholyRune = UnholyRune + 1
		end
		if GetRuneType(i) == 3 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   FrostRune = FrostRune + 1
		end
		if GetRuneType(i) == 4 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;lt; 0 then 
		   DeathRune = DeathRune + 1
		end
	end
	return BloodRune, UnholyRune, FrostRune, DeathRune
end

RuneHalfCD = nil
function RuneHalfCD()
	local FrostRuneHalf = 0
	local UnholyRuneHalf = 0
	local BloodRuneHalf = 0
	local DeathRuneHalf = 0
	for i=1, 6 do
		if GetRuneType(i) == 1 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;gt; ((select(2,GetRuneCooldown(i)) * 50) / 100) then 
		   BloodRuneHalf = BloodRuneHalf + 1
		end
		if GetRuneType(i) == 2 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;gt; ((select(2,GetRuneCooldown(i)) * 50) / 100) then 
		   UnholyRuneHalf = UnholyRuneHalf + 1
		end
		if GetRuneType(i) == 3 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;gt; ((select(2,GetRuneCooldown(i)) * 50) / 100) then 
		   FrostRuneHalf = FrostRuneHalf + 1
		end
		if GetRuneType(i) == 4 and select(1,GetRuneCooldown(i)) + select(2,GetRuneCooldown(i)) - GetTime() &amp;gt; ((select(2,GetRuneCooldown(i)) * 50) / 100) then 
		   DeathRuneHalf = DeathRuneHalf + 1
		end
	end
	return BloodRuneHalf, UnholyRuneHalf, FrostRuneHalf, DeathRuneHalf
end

-----------------
-- PROCS/BUFFS --
-----------------
Rime = UnitBuffID(&amp;quot;player&amp;quot;,59052)
KillingMachine = UnitBuffID(&amp;quot;player&amp;quot;,51124)

BloodCharge,_,_,BloodChargeCount = UnitBuffID(&amp;quot;player&amp;quot;,114851)

if not BloodCharge
then
	BloodChargeCount = 0
end

-------------
-- DEBUFFS --
-------------
FF,_,_,_,_,_,FFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;player&amp;quot;)
BP,_,_,_,_,_,BPtimer = UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;player&amp;quot;)


if not BP
then
	BPtimer = 0
else
	BPtimer = BPtimer - GetTime()
end

if not FF
then
	FFtimer = 0
else
	FFtimer = FFtimer - GetTime()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>A: Pillar of Frost</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = PillarofFrost

if PQR_SpellAvailable(SPELL)
and MeeleRange()
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 0 - Spell List</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>PlayerSpells = {
50842, -- Pestilence
42650, -- Army of the Dead
43265, -- DeathNDecay
108196, -- DeathSiphon
}

AntiMagicShell = 48707
ArmyoftheDead = 42650
BloodBoil = 48721
BloodPresence = 48263
BloodStrike = 45902
BloodTap = 45529
ChainsofIce = 45524
ControlUndead = 111673
DarkSimulacrum = 77606
DeathCoil = 47541
DeathGrip = 49576
DeathStrike = 49998
DeathSiphon = 108196
DeathandDecay = 43265
EmpowerRuneWeapon = 47568
FrostPresence = 48266
IceboundFortitude = 48792
IcyTouch = 45477
MindFreeze = 47528
Outbreak = 77575
PathofFrost = 3714
Pestilence = 50842
PlagueStrike = 45462
PlagueLeech = 123693
RaiseAlly = 61999
RaiseDead = 46584
RunicEmpowerment = 81229
Strangulate = 47476
UnholyBlight = 115989
UnholyPresence = 48265
WildMushroom = 113516
BoneShield = 49222
DancingRuneWeapon = 49028
DarkCommand = 56222

--BLOOD
HeartStrike = 55050
RuneStrike = 56815
RuneTap = 48982
--SoulReaper = 114866
VampiricBlood = 55233

--FROST
FrostStrike = 49143
HornofWinter = 57330
HowlingBlast = 49184
Obliterate = 49020
PillarofFrost = 51271
SoulReaper = 130735

--UNHOLY
DarkTransformation = 63560
FesteringStrike = 85948
ScourgeStrike = 55090
--SoulReaper = 130736
SummonGargoyle = 49206
UnholyFrenzy = 49016

Claw = 47468
GargoyleStrike = 51963
Gnaw = 47481
Huddle = 47484
Leap = 47482

--SPECIAL
if UnitBuffID(&amp;quot;player&amp;quot;,HornofWinter) ~= nil
then
	HornofWinterBuff = UnitBuffID(&amp;quot;player&amp;quot;,HornofWinter)
else
	HornofWinterBuff = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0 - Auto Cast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #PlayerSpells do
	if CheckSpell == PlayerSpells[i]
	and PQR_SpellAvailable(CheckSpell)
	then
		print(&amp;quot;|cff00ffffCast: |r&amp;quot; .. GetSpellInfo(CheckSpell))
		CastSpellByName(GetSpellInfo(CheckSpell))
		if CheckSpell == DeathandDecay
		then
			if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		end
	end
end

if SpellSucess == true then
	CheckSpell = 0
	SpellSucess = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 2 - Console Commands</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>function checkTrinket()
	if GetInventoryItemID(&amp;quot;player&amp;quot;, 13) ~= nil
	then
		ntrinket00 = tostring(GetItemInfo(GetInventoryItemID(&amp;quot;player&amp;quot;, 13))) .. &amp;quot;|cff106246 (00)|R&amp;quot;
	end
	if GetInventoryItemID(&amp;quot;player&amp;quot;, 14) ~= nil
	then
		ntrinket01 = tostring(GetItemInfo(GetInventoryItemID(&amp;quot;player&amp;quot;, 14))) .. &amp;quot;|cff106246 (01)|R&amp;quot;
	end
	if GetInventoryItemID(&amp;quot;player&amp;quot;, 10) ~= nil
	then
		ngloves = tostring(GetItemInfo(GetInventoryItemID(&amp;quot;player&amp;quot;, 10)))
	end
end

-------------
-- ShowVar --
------------
function getVar(var,var2)
	if var2 == &amp;quot;On&amp;quot; then
		print(var .. &amp;quot; = |cFF00FF00ON&amp;quot;)
	end
	
	if var2 == &amp;quot;Off&amp;quot; then
		print(var .. &amp;quot; = |cFFFF0000OFF&amp;quot;)
	end
	
	if var2 == &amp;quot;Boss&amp;quot; then
		print(var .. &amp;quot; = |CFFFFFF01Boss Only&amp;quot;)
	end	
	
end

-------------
-- RSTATUS --
-------------
--- STATUS ---
SLASH_RSTATUS1 = &amp;quot;/rstatus&amp;quot;
function SlashCmdList.RSTATUS(msg, editbox)
	PQR_rstatus()
end

function PQR_rstatus()
		checkTrinket()
		print(&amp;quot;|cFF00FFFF-- STATUS --&amp;quot;)
		getVar(&amp;quot;Cooldowns&amp;quot;,vcd)
		getVar(ntrinket00,vtrinket00)
		getVar(ntrinket01,vtrinket01)
		getVar(ngloves,vgloves)
		getVar(ndsiphon,vdsiphon)
end

----------
-- CAST --
----------
SLASH_rcast1 = &amp;quot;/rcast&amp;quot;
function SlashCmdList.rcast(rcast, editbox)
	if rcast == &amp;quot;dnd&amp;quot; then
		CheckSpell = 43265
	elseif rcast == &amp;quot;deathsiphon&amp;quot; then
		CheckSpell = 108196
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	print(&amp;quot;|cff00ffffQueue: |r&amp;quot; .. GetSpellInfo(CheckSpell))
end

---------------
-- COOLDOWNS --
---------------
SLASH_rcd1 = &amp;quot;/rcd&amp;quot;
function SlashCmdList.rcd(rcd, editbox)
	if rcd == &amp;quot;boss&amp;quot; then
		vcd = &amp;quot;Boss&amp;quot;
	elseif rcd == &amp;quot;on&amp;quot; then
		vcd = &amp;quot;On&amp;quot;
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	print(&amp;quot;|cff00ffffCooldowns: |r&amp;quot; .. vcd .. argument)
end

--------------
-- TRINKETS --
--------------
SLASH_rtrinket1 = &amp;quot;/rtrinket&amp;quot;
local function rtrinket(rtrinket, editbox)
	checkTrinket()
	if rtrinket == &amp;quot;00&amp;quot; then
		vtrinket00 = &amp;quot;On&amp;quot;
	elseif rtrinket == &amp;quot;01&amp;quot; then
		vtrinket01 = &amp;quot;On&amp;quot;
	elseif rtrinket == &amp;quot;off&amp;quot; then
		vtrinket00 = &amp;quot;Off&amp;quot;
		vtrinket01 = &amp;quot;Off&amp;quot;
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	getVar(ntrinket00,vtrinket00)		
	getVar(ntrinket01,vtrinket01)		
end
SlashCmdList[&amp;quot;rtrinket&amp;quot;] = rtrinket

------------
-- GLOVES --
------------
SLASH_rgloves1 = &amp;quot;/rgloves&amp;quot;
function SlashCmdList.rgloves(rgloves, editbox)
	if rgloves == &amp;quot;boss&amp;quot; then
		vgloves = &amp;quot;Boss&amp;quot;
	elseif rgloves == &amp;quot;on&amp;quot; then
		vgloves = &amp;quot;On&amp;quot;
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	print(&amp;quot;|cff00ffffGloves: |r&amp;quot; .. vgloves .. argument)
end

------------------
-- PLAGUE LEECH --
------------------
SLASH_rdsiphon1 = &amp;quot;/rdsiphon&amp;quot;
function SlashCmdList.rdsiphon(rdsiphon, editbox)
	if rdsiphon == &amp;quot;on&amp;quot; then
		vdsiphon = &amp;quot;On&amp;quot;
	elseif rdsiphon == &amp;quot;off&amp;quot; then
		vdsiphon = &amp;quot;Off&amp;quot;
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	print(&amp;quot;|cff00ffffPlague Leech: |r&amp;quot; .. vdsiphon .. argument)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 3 - Non Combat Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PlayerCombat
and not IsMounted()
then
	if PQR_SpellAvailable(HornofWinter)
	and HornofWinterBuff == false
	then
		CastSpellByName(GetSpellInfo(HornofWinter))
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 1 - Globals</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------
--Level 90 Check--
------------------
if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
	PQR_WriteToChat(&amp;quot;Nope, you need to be lvl 90.&amp;quot;)
	PQR_StopRotation()
end

------------
-- SetVar --
------------
function setVar()
	--VARIABLES
	CheckSpell = 0
	SpellSucess = false
	
	--CONSOLE
	vcd = &amp;quot;Boss&amp;quot;
	vtrinket00 = &amp;quot;Off&amp;quot;
	vtrinket01 = &amp;quot;Off&amp;quot;
	vgloves = &amp;quot;Off&amp;quot;
	vdsiphon = &amp;quot;Off&amp;quot;
	--NAMES
	ntrinket00 = &amp;quot;None&amp;quot;
	ntrinket01 = &amp;quot;None&amp;quot;
	ngloves = &amp;quot;None&amp;quot;
	ndsiphon = &amp;quot;None&amp;quot;
	if IsSpellKnown(DeathSiphon)
	then
		ndsiphon = tostring(GetSpellInfo(DeathSiphon))
	end
end


-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Nova_Data_Rubim.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

-- Cooldown Check
function CdCheck(spellid)
	Sstart, Sduration, Senabled = GetSpellCooldown(spellid)
	Scooldown = (Sstart + Sduration - GetTime())
	if Sstart == 0
	then
		Scooldown = 0
	end
	return Scooldown
end

-- Meele Range
function MeeleRange()
	if IsSpellInRange(GetSpellInfo(45462), &amp;quot;target&amp;quot;) == 1
	then return true else return false
	end
end

function PrePot()
	if UnitBuffID(&amp;quot;player&amp;quot;,105706)
	then return true else return false end
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

--Player Info
PlayerRP			= select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;))
PlayerHP			= Nova_UnitInfo(&amp;quot;player&amp;quot;)
PlayerCombat		= UnitAffectingCombat(&amp;quot;player&amp;quot;)
	
--PQR Functions
isMoving			= PQR_IsMoving()

--Key Mods
lShift				= Nova_Pause(1)
lCtrl				= Nova_Pause(2)
lAlt				= Nova_Pause(3)
rShift				= Nova_Pause(4)
rCtrl				= Nova_Pause(5)
rAlt				= Nova_Pause(6)

--Target Info
EnemyHP				= select(1, Nova_UnitInfo(&amp;quot;target&amp;quot;))
EnemyLevel			= UnitLevel(&amp;quot;target&amp;quot;)

-----------------
-- Time to die --
-----------------
TimeToDie = 999999
if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PlayerCombat then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end             
_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
_currentTime = GetTime()
timeDiff = _currentTime - _firstTime
hpDiff = _firstLife - _currentLife
	if hpDiff &amp;gt; 0 then
		fullTime = timeDiff*_firstLifeMax/hpDiff
		pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
		calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
		if calcTime &amp;lt; 1 then
			calcTime = 1
		end
   	TimeToDie = calcTime
	end
	if hpDiff &amp;lt;= 0 then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end

-- dummy
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
		TimeToDie = 999999
	end
end

-- AoE Toggle Code
if not GetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;1HFrostAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
	InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
	InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if IsRightShiftKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
 	SwitchTimer = GetTime()
	if tonumber(GetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;)) == 0 then 
		SetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;, 2) 
	elseif tonumber(GetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;)) == 5 then
		SetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;, 1)
	end
end

if tonumber(GetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;Frost DW - ST (Rubim [Frost DW])&amp;quot;) 
elseif tonumber(GetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;Frost DW - AoE (Rubim [Frost DW])&amp;quot;) end

if tonumber(GetCVar(&amp;quot;1HFrostAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end

-------------
-- DK --
-------------

-- At this point, everything should have loaded perfectly!
if PQ_CheckDW == nil then
	PQ_CheckDW = true
	print(&amp;quot;OK - Loaded&amp;quot;)
	setVar()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 99 - PAUSE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Code by Crystal_tech
---General Pause for Spells that cast in combat without mod key press
if lAlt
or lShift
or lCtrl
or IsMounted()
or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or not PlayerCombat then
	return true
end

---Clear Target
if rAlt then
	ClearTarget()
end
--End Code by Crystal_tech</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>C: Empower Rune Weapon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = EmpowerRuneWeapon

if PQR_SpellAvailable(SPELL)
and TimeToDie &amp;lt;= 60
and PrePot()
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>D: Raise Dead</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = RaiseDead
local SpecialUnit = SpecialUnit

if PQR_SpellAvailable(SPELL)
and MeeleRange()
then
	if vcd == &amp;quot;On&amp;quot;
	or (vcd == &amp;quot;Boss&amp;quot;
	and SpecialUnit())
	then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>E: Blood Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = BloodTap
local RuneHalfCD = RuneHalfCD
local RunesOnCD = 0

for i=1, 4 do
	if  select(i,RuneHalfCD()) &amp;gt; 1 then
	RunesOnCD = 1
	end
end

if IsSpellKnown(SPELL)
and PQR_SpellAvailable(SPELL)
and Nova_CheckLastCast(BloodTap,1) == false
and RunesOnCD == 1
and BloodChargeCount &amp;gt; 10
and (PlayerRP &amp;gt; 76
or (PlayerRP &amp;gt;= 20
and KillingMachine))
then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>F: Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = FrostStrike

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (KillingMachine
or PlayerRP &amp;gt; 88)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>G: Plague Leech</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = PlagueLeech
local RuneHalfCD = RuneHalfCD
local RunesOnCD = 0
	
for i=1, 4 do
	if  select(i,RuneHalfCD()) &amp;gt; 1 then
	RunesOnCD = 1
	end
end

if IsSpellKnown(SPELL)
and TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and RunesOnCD == 1
and FF
and BP
and (BPtimer &amp;lt; 3
or FFtimer &amp;lt; 3
or CdCheck(Outbreak) &amp;lt; 1)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>H: Outbreak</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = Outbreak

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (BPtimer &amp;lt; 3
or FFtimer &amp;lt; 3)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>I: Unholy Bligth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = UnholyBlight

if IsSpellKnown(SPELL)
and TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (BPtimer &amp;lt; 3
or FFtimer &amp;lt; 3)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>J: Soul Reaper</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = SoulReaper

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (EnemyHP - 3 * (EnemyHP / TimeToDie)) &amp;lt;= 35
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>K: Blood Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = BloodTap
local RuneHalfCD = RuneHalfCD
local RunesOnCD = 0

for i=1, 4 do
	if  select(i,RuneHalfCD()) &amp;gt; 1 then
	RunesOnCD = 1
	end
end

if IsSpellKnown(SPELL)
and PQR_SpellAvailable(SPELL)
and Nova_CheckLastCast(BloodTap,1) == false
and EnemyHP &amp;lt;= 35
and BloodChargeCount &amp;gt;= 5
and RunesOnCD == 1
and (EnemyHP - 3 * (EnemyHP / TimeToDie)) &amp;lt;= 35
and UnitDebuffID(&amp;quot;target&amp;quot;,130735,&amp;quot;player&amp;quot;) == nil
then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>L: Howling Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HowlingBlast

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and FFtimer &amp;lt; 1
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>M: Plague Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = PlagueStrike

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and BPtimer &amp;lt; 1
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>N: Howling Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HowlingBlast

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and Rime
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>O: Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = FrostStrike

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and PlayerRP &amp;gt; 76
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>P: Obliterate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = Obliterate
RuneCheck()

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and UnholyRune &amp;gt; 1
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Q: Howling Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HowlingBlast
RuneCheck()

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (DeathRune &amp;gt; 1
or FrostRune &amp;gt; 1)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>R: Horn of Winter</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HornofWinter

if PQR_SpellAvailable(HornofWinter)
then
CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>T: Howling Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HowlingBlast

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>U: Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = FrostStrike
RuneCheck()

if IsSpellKnown(RunicEmpowerment)
and TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (FrostRune == 0
or BloodRune == 0)
then
CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>V: Blood Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = BloodTap
local RuneHalfCD = RuneHalfCD
local RunesOnCD = 0

for i=1, 4 do
	if  select(i,RuneHalfCD()) &amp;gt; 1 then
	RunesOnCD = 1
	end
end

if IsSpellKnown(SPELL)
and PQR_SpellAvailable(SPELL)
and Nova_CheckLastCast(BloodTap,1) == false
and BloodChargeCount &amp;gt;= 5
and RunesOnCD == 1
and ((EnemyHP - 3 * (EnemyHP / TimeToDie)) &amp;gt; 35
or BloodChargeCount &amp;gt;= 8)
then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Y: Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = FrostStrike

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and PlayerRP &amp;gt;= 40
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Z: Empower Rune Weapon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = EmpowerRuneWeapon

if PQR_SpellAvailable(SPELL)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rubim: Death Strike (Proc)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = DeathStrike
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
	and PQR_SpellAvailable(SPELL)
	and UnitBuffID(&amp;quot;player&amp;quot;,101568)
	and PlayerHP &amp;lt;= 95 then
	CastSpellByName(tostring(GetSpellInfo(SPELL)))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>99 - Trinkets</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit

if MeeleRange() then
	if vcd == &amp;quot;On&amp;quot;
	or (vcd == &amp;quot;Boss&amp;quot;
	and SpecialUnit()) then
		if vtrinket00 == &amp;quot;On&amp;quot;
		and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then
			UseInventoryItem(13)
			return true
		end
		if vtrinket01 == &amp;quot;On&amp;quot;
		and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0 then
			UseInventoryItem(14)
			return true
		end
		if vgloves == &amp;quot;On&amp;quot;
		and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then
			UseInventoryItem(10)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>X: Death n Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = DeathandDecay

if PQR_SpellAvailable(SPELL)
--and TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and UnitExists(&amp;quot;mouseover&amp;quot;)
then
		CastSpellByName(GetSpellInfo(43265))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rubim: Death Siphon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = DeathSiphon

if IsSpellKnown(SPELL)
and vpdsiphon == &amp;quot;On&amp;quot;
and TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and PlayerHP &amp;lt;= 75
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>N: Howling Blast (AoE)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HowlingBlast

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>S: Obliterate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = Obliterate
RuneCheck()

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and UnholyRune &amp;gt; 0
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RAISE ALLY</Name><Default>false</Default><SpellID>61999</SpellID><Actions></Actions><Lua>local members = GetNumGroupMembers()
local group = &amp;quot;party&amp;quot;
if IsInRaid() then group = &amp;quot;raid&amp;quot; end

if PQR_SpellAvailable(61999)
and rCtrl then
	for i=1, members, 1 do
		local member = group..tostring(i)
		if ( UnitIsDead(member) or UnitIsCorpse(member) )
		  and not PQR_IsOutOfSight(member)
		  and IsSpellInRange(GetSpellInfo(61999), member) == 1
		  and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		  and ( UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot;
		   or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; ) then
			PQR_CustomTarget = member
			return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rubim: Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Orc_Racial = {
20572,
33697,
33702,
82836
}

for i=1, #Orc_Racial do
	if IsSpellKnown(Orc_Racial[i]) then
		SPELL = Orc_Racial[i]
	end
end

local TargetValidation = TargetValidation
local SpecialUnit = SpecialUnit
local _,Race = UnitRace(&amp;quot;player&amp;quot;)


if Race == &amp;quot;Orc&amp;quot;
and PlayerCombat
and PQR_SpellAvailable(SPELL)
and IsSpellKnown(SPELL)
and MeeleRange()
then
	
	if vcd == &amp;quot;Boss&amp;quot;
	and SpecialUnit()
	then
		CastSpellByName(GetSpellInfo(SPELL),nil)
		return true
	elseif vcd == &amp;quot;On&amp;quot;
	then
		CastSpellByName(GetSpellInfo(SPELL),nil)
		return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DEATHKNIGHT>