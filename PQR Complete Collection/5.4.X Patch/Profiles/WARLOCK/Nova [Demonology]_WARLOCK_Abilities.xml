<?xml version="1.0" encoding="utf-8" ?><WARLOCK><Ability><Name>[Misc] Initialization</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks
-------------------------------------------------------------------------------
-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false

	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Nova_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

-- Cooldown Timer function
if not SCDtimer then SCDtimer = 0 end
if not SCD then SCD = false end
if SCD then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Mode: Manual&amp;quot;, nil, &amp;quot;DC143C&amp;quot;)
else
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Mode: Automatic&amp;quot;, nil, &amp;quot;79BAEC&amp;quot;)
end

if not SCDtimer then SCDtimer = 0 end
if PQI_MentallyDemo_ToggleCooldownMode_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_ToggleCooldownMode_key)
	and GetTime() - SCDtimer &amp;gt; 1
then
	SCDtimer = GetTime()
	if SCD then
		SCD = false
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cff79BAECAutomatic|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		SCD = true
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cffDC143CManual|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

-- Detect Kil&amp;apos;jaeden&amp;apos;s Cunning
local PQ_KC = PQ_KC
if IsPlayerSpell(PQ_KC) then KilJaeden = true
else KilJaeden = false end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-- Don&amp;apos;t automatically start if we&amp;apos;re mounted.
if IsMounted() then return true end

-- Don&amp;apos;t automatically start if we&amp;apos;re dead or a ghost.
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then return true end

-- Prevent Soul Fire without Molten Core
local PQ_MCore = PQ_MCore
local PQ_SoulFire = PQ_SoulFire
if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0
	and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_SoulFire) then
	SpellStopCasting()
end

-- If we switch from AoE to single target, cancel Hellfire.
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;)
if not isAOE then
	local PQ_Hellfire = PQ_Hellfire
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Hellfire) then
		RunMacroText(&amp;quot;/stopcasting&amp;quot;)
	end
end

-- At this point, everything should have loaded perfectly!
if not PQ_DemoWarlockLoaded then
	local MCFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
	MCFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	MCFrame:SetScript(&amp;quot;OnEvent&amp;quot;, MCFrame_OnEvent)
	MCFrame:Show()
	
	Trinket = 0
	PQ_DemoWarlockLoaded = true
	PQR_WriteToChat(&amp;quot;|cff91e782Nova Demonology Warlock data is |cff82cee7Loaded!|cffffffff&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Management</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Felguard = PQ_Felguard
local PQ_Sacrifice = PQ_Sacrifice

if not PQI_MentallyDemo_AutoGrimoire_enable then return false end

if IsPlayerSpell(PQ_Sacrifice) then
	-- Sacrifice our pet when available
	if UnitExists(&amp;quot;pet&amp;quot;)
		and not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Sacrifice)
		and PQR_SpellAvailable(PQ_Sacrifice)
	then CastSpellByName(GetSpellInfo(PQ_Sacrifice),&amp;quot;player&amp;quot;) return true end
	
	-- Summon pet to sacrifice
	if not UnitExists(&amp;quot;pet&amp;quot;) and not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Sacrifice) then
		CastSpellByName(GetSpellInfo(PQ_Felguard),&amp;quot;player&amp;quot;) return true
	end
else
	-- Don&amp;apos;t summon a pet when we already have one
	if UnitExists(&amp;quot;pet&amp;quot;)
		and (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Felguard)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(112870))
	then SpellStopCasting() return true end
	
	-- Summon a pet when we don&amp;apos;t have one active
	if not UnitExists(&amp;quot;pet&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Felguard),&amp;quot;player&amp;quot;)
		return true
	end
	
	-- Demonic Rebirth
	if not UnitExists(&amp;quot;pet&amp;quot;) and UnitBuffID(&amp;quot;player&amp;quot;,108559) then
		CastSpellByName(GetSpellInfo(PQ_Felguard),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Pet] Command Demon</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack</Actions><Lua>local PQ_Service = PQ_Service
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Supermacy = PQ_Supermacy

-- We&amp;apos;re using Sacrifice, do nothing
if IsPlayerSpell(PQ_Sacrifice) then return false end

-- Make sure our pet is assisting us
-- Autocast Pursuit
if not select(2,GetSpellAutocast(30151)) then
	EnableSpellAutocast(GetSpellInfo(30151))
end
-- Autocast Felguard&amp;apos;s Legion Strike
if not select(2,GetSpellAutocast(30213)) then
	EnableSpellAutocast(GetSpellInfo(30213))
end
-- Autocast Wrathguard&amp;apos;s Mortal Cleave
if not select(2,GetSpellAutocast(115625)) then
	EnableSpellAutocast(GetSpellInfo(115625))
end

-- Disable Threatening Presence when we&amp;apos;re in a instance group/raid
if IsInGroup() or IsInRaid() then
	if select(2,GetSpellAutocast(134477)) then
		DisableSpellAutocast(GetSpellInfo(134477))
	end
end

-- Felstorm
if IsPlayerSpell(PQ_Service) then
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitExists(&amp;quot;target&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1 
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- Wrathstorm
if IsPlayerSpell(PQ_Supermacy) then
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitExists(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		--PetAttack(&amp;quot;target&amp;quot;)
		
		if PQR_SpellAvailable(115831) and IsSpellInRange(GetSpellInfo(115625),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119898),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Racials
local SCD = SCD
local PQ_HasHero = PQ_HasHero
local Nova_UnitInfo = Nova_UnitInfo
local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Racials if user tagged off automatic use
if not PQI_MentallyDemo_AutoRacials_enable then return false end

-- Troll: Berserking
if IsPlayerSpell(26297) and not SCD then
	if not PQ_HasHero() and PQR_SpellAvailable(26297) then
		if not PQI_MentallyDemo_BossCooldown_enable then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			return true
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end

-- Blood Elf: Arcane Torrent
if IsPlayerSpell(28730) and not SCD then
	if PQR_SpellAvailable(28730) and select(3,Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 94 then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
		return true
	end
end

-- Orc: Blood Fury
if IsPlayerSpell(33702) and not SCD then
	if PQR_SpellAvailable(33702) then
		if not PQI_MentallyDemo_BossCooldown_enable then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
			return true
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Instance: Combat Detection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsInInstance() then
	if (not UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;boss1&amp;quot;))
		or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
	then return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pause Rotation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyDemo_PauseRotation_enable then return false end

if PQI:IsHotkeys(PQI_MentallyDemo_PauseRotation_key)
	and not GetCurrentKeyBoardFocus() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Soulshatter</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Shatter = PQ_Shatter

if not UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then return false end

if PQR_SpellAvailable(PQ_Shatter)
	and UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) &amp;gt;= 2 then
	CastSpellByName(GetSpellInfo(PQ_Shatter),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Automatic Buffing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DI = PQ_DI
local Nova_Spells = Nova_Spell
local PQ_AuraInfo = PQ_AuraInfo

-- Determine our Group setting.
if IsInRaid() then group = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then group = &amp;quot;party&amp;quot; end

if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Do we know Dark Intent?
		if Nova_Spells[PQ_DI].known then
			-- Check for Spellpower Multiplier buffs
			if not PQ_AuraInfo(5,member) then
				-- Cast when in range
				if IsSpellInRange(GetSpellInfo(PQ_DI),member) then
					CastSpellByName(GetSpellInfo(PQ_DI),&amp;quot;player&amp;quot;) return true
				end
			end
			if not PQ_AuraInfo(5,&amp;quot;player&amp;quot;) then
				CastSpellByName(GetSpellInfo(PQ_DI),&amp;quot;player&amp;quot;) return true
			end
		end
	end
else
	-- Do we know Dark Intent?
	if Nova_Spells[PQ_DI].known then
		-- Check for Spellpower Multiplier buffs
		if not PQ_AuraInfo(5,&amp;quot;player&amp;quot;) then
			CastSpellByName(GetSpellInfo(PQ_DI),&amp;quot;player&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Alchemy: Lifeblood</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit
local PQ_HasHero = PQ_HasHero
local SCD = SCD
-- Herbalism&amp;apos;s Lifeblood
PQ_Lifeblood = {81708,74497,121279,55428,55480,55500,55501,55502,55503}

for i=1,#PQ_Lifeblood do
	if IsPlayerSpell(PQ_Lifeblood[i])
		and PQR_SpellAvailable(PQ_Lifeblood[i])
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and SpecialUnit()
		and not PQ_HasHero()
		and not SCD
	then
		if not PQI_MentallyDemo_BossCooldown_enable then
			CastSpellByName(GetSpellInfo(PQ_Lifeblood[i]),&amp;quot;player&amp;quot;)
			return true
		else
			if SpecialUnit() then
				CastSpellByName(GetSpellInfo(PQ_Lifeblood[i]),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Pet] Grimoire of Service</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack</Actions><Lua>local SCD = SCD
local PQ_Service = PQ_Service
local Nova_Spells = Nova_Spell
local SpecialUnit = SpecialUnit

if not PQI_MentallyDemo_AutoGrimoire_enable then return false end

if IsPlayerSpell(PQ_Service) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
		and PQR_SpellAvailable(PQ_GFelguard)
		and not SCD then
			if PQI_MentallyDemo_BossCooldown_enable then
				if SpecialUnit() then
					CastSpellByName(GetSpellInfo(PQ_GFelguard),&amp;quot;target&amp;quot;)
					return true
				end
			else return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Gul&amp;apos;Dan</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_GulDan = PQ_GulDan
local PQ_SFlame = PQ_SFlame
local TargetValidation = TargetValidation
local Flame,_,_,_,_,_,FlameTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;player&amp;quot;)
local GDCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_GulDan) and PQR_SpellAvailable(PQ_GulDan) and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then
    if GetSpellCharges(PQ_GulDan) &amp;lt; 2 then
        if GDCD &amp;lt;= 4 then
            SpellCancelQueuedSpell()
            CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
            return true
        end

        if Flame then
            if FlameTimer - GetTime() &amp;lt;= 4 then
                SpellCancelQueuedSpell()
                CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
                return true
            end
        end
    end

    if GetSpellCharges(PQ_GulDan) &amp;gt; 1 then
        CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
        return true
    end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack</Actions><Lua>local PQ_Cor = PQ_Cor
local TargetValidation = TargetValidation
local isMindControledUnit = isMindControledUnit
local v=PQI_MentallyDemo_PandemicTreshold_value or 4

if TargetValidation(&amp;quot;target&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;target&amp;quot;) then
	local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
	local PQ_TempBuffs = PQ_CheckTempBuffs
	local PQ_TempTable = PQ_TemporaryBuffs
	local PQ_TimeLeft = PQ_GetTimeLeft
	PQ_TempBuffs(PQ_TempTable)
	
	local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
	-- Tsulong
	if npcID == 63346 then return false end
	
	if Cor then
		for i=1,#PQ_TempTable do
			if PQ_TempTable[i].hasBuff then
				if PQ_TimeLeft(PQ_TempTable, PQ_TempTable[i].spellID) &amp;lt; 4 and CorTimer - GetTime() &amp;lt; 10 then
					CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;)
					return true end
			end
		end
		
		if CorTimer - GetTime() &amp;lt; v then CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;) return true end
	else CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local TargetValidation = TargetValidation
local isMindControledUnit = isMindControledUnit
local v=PQI_MentallyDemo_PandemicTreshold_value or 4

-- Disable if user disabled Mouseover dotting
if not PQI_MentallyDemo_MouseoverDotting_enable then return false end

if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;mouseover&amp;quot;) then
	local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
	local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16)
	
	-- Wind Lord Mel&amp;apos;jarak override
	if npcID == 65498 or npcID == 65499 or npcID == 65500 then return false end
	-- Protectors of the Endless
	if npcID == 60885 then return false end
	-- Tsulong
	if npcID == 63346 then return false end
	
	if Cor then
		if CorTimer - GetTime() &amp;lt; v then CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;mouseover&amp;quot;) return true end
	else CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;mouseover&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local TargetValidation = TargetValidation
local isMindControledUnit = isMindControledUnit
local v=PQI_MentallyDemo_PandemicTreshold_value or 4

-- Disable if user disabled Focus dotting
if not PQI_MentallyDemo_FocusDotting_enable then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;focus&amp;quot;) then
	local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
	
	if Cor then
		if CorTimer - GetTime() &amp;lt; v then CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;focus&amp;quot;) return true end
	else CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;focus&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowbolt</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack</Actions><Lua>local PQ_ShadowBolt = PQ_ShadowBolt
local TargetValidation = TargetValidation

-- Cancel on Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Cancel on Movement
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_ShadowBolt)
    and PQR_SpellAvailable(PQ_ShadowBolt)
    and GetSpellBookItemName(GetSpellInfo(PQ_ShadowBolt)) == GetSpellInfo(PQ_ShadowBolt)
then
    CastSpellByName(GetSpellInfo(PQ_ShadowBolt),&amp;quot;target&amp;quot;)
    return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack</Actions><Lua>local PQ_MCore = PQ_MCore
local PQ_SoulFire = PQ_SoulFire
local Nova_UnitInfo = Nova_UnitInfo
local TargetValidation = TargetValidation

-- Metamorphosis is bad
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- So is movement
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and PQR_SpellAvailable(PQ_SoulFire) then
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Curse of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MP = PQ_MP
local PQ_FB = PQ_FB
local PQ_LB = PQ_LB
local PQ_AOTE = PQ_AOTE
local PQ_COTE = PQ_COTE
local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation

-- Avoid confusion with Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_COTE) then
	if not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_MP)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_FB)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_LB)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_AOTE)
		and not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_COTE)
		and PQR_SpellAvailable(PQ_COTE)
		and SpecialUnit()
	then CastSpellByName(GetSpellInfo(PQ_COTE),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Potion Usage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HasHero = PQ_HasHero
local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Potion during Heroism if user tagged off automatic use
if not PQI_MentallyDemo_AutoPotion_enable then return false end

if GetItemCount(76093,false,true) &amp;gt; 0
	and GetItemCooldown(76093) == 0
	and PQ_HasHero()
	and SpecialUnit()
then UseItemByName(76093) return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyDemo_Healthstone_enable then return false end
local v=PQI_MentallyDemo_Healthstone_value

if GetItemCount(5512,false,true) &amp;gt; 0
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetItemCooldown(5512) == 0
then
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dark Regeneration</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DR = PQ_DR
local Nova_UnitInfo = Nova_UnitInfo
local v=PQI_MentallyDemo_DarkRegeneration_value

if not PQI_MentallyDemo_DarkRegeneration_enable then return false end

if IsPlayerSpell(PQ_DR)
	and PQR_SpellAvailable(PQ_DR)
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
then CastSpellByName(GetSpellInfo(PQ_DR),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Soulstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Soulstone = PQ_Soulstone

if not PQI_MentallyDemo_Soulstone_enable then return false end

if IsInRaid() then group = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then group = &amp;quot;party&amp;quot; 
	else return false end
	
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i

		if PQR_SpellAvailable(PQ_Soulstone)
			and UnitIsDeadOrGhost(member)
			and IsSpellInRange(GetSpellInfo(PQ_Soulstone),member) == 1
			and (UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot;)
		then CastSpellByName(GetSpellInfo(PQ_Soulstone),member) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fel Flame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_KC = PQ_KC
local PQ_FelFlame = PQ_FelFlame
local TargetValidation = TargetValidation

if IsPlayerSpell(PQ_KC) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_FelFlame) and PQR_SpellAvailable(PQ_FelFlame) then
	if PQR_IsMoving(0.3) then CastSpellByName(GetSpellInfo(PQ_FelFlame),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Imp Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK

if not PQI_MentallyDemo_ImpSwarm_enable then return false end

if IsPlayerSpell(56242) then
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) and PQR_SpellAvailable(104316) and UnitExists(&amp;quot;target&amp;quot;) then
		CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Carrion Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Swarm = PQ_Swarm

if not PQI_MentallyDemo_CarrionSwarm_enable then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and PQR_SpellAvailable(PQ_Swarm)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_CarrionSwarm_key)
then CastSpellByName(GetSpellInfo(PQ_Swarm),nil) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Doomguard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SDM = PQ_SDM
local PQ_STG = PQ_STG
local PQ_Supermacy = PQ_Supermacy

if not PQI_MentallyDemo_Doomguard_enable then return false end

if IsPlayerSpell(PQ_Supermacy) then
	if PQR_SpellAvailable(PQ_STG)
		and PQI:IsHotkeys(PQI_MentallyDemo_Doomguard_key)
		and not GetCurrentKeyBoardFocus()
	then SpellStopCasting() CastSpellByName(GetSpellInfo(PQ_STG),&amp;quot;target&amp;quot;) return true end
else
	if PQR_SpellAvailable(PQ_SDM)
		and PQI:IsHotkeys(PQI_MentallyDemo_Doomguard_key)
		and not GetCurrentKeyBoardFocus()
	then SpellStopCasting() CastSpellByName(GetSpellInfo(PQ_SDM),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Harvest Life</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if IsPlayerSpell(PQ_HL)
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_HL)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
then CastSpellByName(GetSpellInfo(PQ_HL),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hellfire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL
local PQ_Hellfire = PQ_Hellfire

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if not IsPlayerSpell(PQ_HL)
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_Hellfire)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
	and GetSpellBookItemName(GetSpellInfo(PQ_Hellfire)) == GetSpellInfo(PQ_Hellfire)
then CastSpellByName(GetSpellInfo(PQ_Hellfire),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local PQ_DSK = PQ_DSK
local PQ_Meta = PQ_Meta
local PQ_SFlame = PQ_SFlame
local PQ_GulDan = PQ_GulDan
local fury = select(5,Nova_UnitInfo(&amp;quot;player&amp;quot;))
local DSK,_,_,_,_,_,DSKtime = UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK)
local GDCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

-- Respect Hand of Gul&amp;apos;dan!
if GetSpellCharges(PQ_GulDan) &amp;lt; 2 and GDCD &amp;lt;= 4 then return false end

-- Also, don&amp;apos;t activate if we&amp;apos;re not in range..
if UnitExists(&amp;quot;target&amp;quot;) and IsSpellInRange(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;) == 0 then return false end

-- Prevents us from accessing this during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Metaweaving
if DSK and DSKtime - GetTime() &amp;lt;= 10 then
	if fury &amp;gt;= (DSKtime - GetTime())*25 and PQR_SpellAvailable(PQ_Meta) and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		CastShapeshiftForm(1)
	end
end
if DSK and DSKtime - GetTime() &amp;gt; 10 then
	if fury &amp;gt;= 750 and PQR_SpellAvailable(PQ_Meta) and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		CastShapeshiftForm(1)
	end
end

-- Enter Metamorphosis
if fury &amp;gt;= 900
	and PQR_SpellAvailable(PQ_Meta) and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	SpellCancelQueuedSpell()
	CastShapeshiftForm(1)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HasHero = PQ_HasHero
local fury = select(5,Nova_UnitInfo(&amp;quot;player&amp;quot;))
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;)

-- Stops Human form to mess around with Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- If we&amp;apos;re in AOE mode, dump dat fury!
if isAOE and fury &amp;lt;= 250 then CancelShapeshiftForm() end

if not isAOE then
	-- Soul Fire and Heroism..
	if PQ_HasHero() and fury &amp;lt;= 160 then CancelShapeshiftForm() end
	
	-- Don&amp;apos;t leave Meta if we have strong buffs active still.
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then return false end
	
	-- Normal Fury cancel
	if fury &amp;lt;= 750 then CancelShapeshiftForm() end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Aura of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_AOTE = PQ_AOTE
local AOTE,_,_,_,_,_,AOTEtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_AOTE,&amp;quot;PLAYER&amp;quot;)

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 and PQR_SpellAvailable(PQ_AOTE) then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_AOTE) then
		CastSpellByName(GetSpellInfo(PQ_AOTE),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Immolation Aura</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ImmoAura = PQ_ImmoAura

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if UnitExists(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and PQR_SpellAvailable(PQ_ImmoAura)
then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then
		CastSpellByName(GetSpellInfo(PQ_ImmoAura),&amp;quot;player&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Touch of Chaos</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ToC = PQ_ToC
local PQ_HasHero = PQ_HasHero

if UnitExists(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and PQR_SpellAvailable(PQ_ToC)
	and not PQ_HasHero()
then CastSpellByName(GetSpellInfo(PQ_ToC),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Void Ray</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
	
if UnitExists(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and PQR_SpellAvailable(115422)
then
	if Cor then
		if CorTimer - GetTime() &amp;lt;= 10 then
			CastSpellByName(GetSpellInfo(115422),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dark Soul: Knowledge</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13|/use 14|/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>local PQ_DSK = PQ_DSK
if not PQI_MentallyDemo_DarkSoul_enable then return false end

if IsPlayerSpell(PQ_DSK)
	and PQR_SpellAvailable(PQ_DSK)
	and PQI:IsHotkeys(PQI_MentallyDemo_DarkSoul_key)
	and not GetCurrentKeyBoardFocus()
then CastSpellByName(GetSpellInfo(PQ_DSK),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 30 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MC = PQ_MC
local PQ_SF = PQ_SF
local PQ_HOT = PQ_HOT
local Nova_UnitInfo = Nova_UnitInfo

if not PQI_MentallyDemo_Level30Talent_enable then return false end

-- Howl of Terror
if IsPlayerSpell(PQ_HOT)
	and PQR_SpellAvailable(PQ_HOT)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level30Talent_key)
then CastSpellByName(GetSpellInfo(PQ_HOT),nil) return true end

-- Mortal Coil
if IsPlayerSpell(PQ_MC)
	and PQR_SpellAvailable(PQ_MC)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level30Talent_key)
then CastSpellByName(GetSpellInfo(PQ_MC),&amp;quot;target&amp;quot;) return true end

-- Shadowfury
if IsPlayerSpell(PQ_SF)
	and PQR_SpellAvailable(PQ_SF)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level30Talent_key)
then
	SpellCancelQueuedSpell()
	CastSpellByID(PQ_SF)
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 45 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SP = PQ_SP
local PQ_DB = PQ_DB
local PQ_Soul = PQ_Soul

if not PQI_MentallyDemo_Level45Talent_enable then return false end

-- Soul Link
if IsPlayerSpell(PQ_Soul)
	and PQR_SpellAvailable(PQ_Soul)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_Soul),&amp;quot;player&amp;quot;) return true end

-- Sacrificial Pact
if IsPlayerSpell(PQ_SP)
	and PQR_SpellAvailable(PQ_SP)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_SP),&amp;quot;player&amp;quot;) return true end

-- Sacrificial Pact
if IsPlayerSpell(PQ_DB)
	and PQR_SpellAvailable(PQ_DB)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_DB),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 90 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_AV = PQ_AV
local PQ_KC = PQ_KC

if not PQI_MentallyDemo_Level90Talent_enable then return false end

-- Archimonde&amp;apos;s Vengeance
if IsPlayerSpell(PQ_AV)
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_AV)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDemo_Level90Talent_key)
then CastSpellByName(GetSpellInfo(PQ_AV),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack</Actions><Lua>local PQ_Meta = PQ_Meta
local PQ_Doom = PQ_Doom
local PQ_GulDan = PQ_GulDan
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)
local GDCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

-- Don&amp;apos;t try and dot up targets if we can&amp;apos;t go into Metamorphosis to do so
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 and not PQR_SpellAvailable(PQ_Meta) then return false end

if UnitExists(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and PQR_SpellAvailable(PQ_Doom)
then
	-- Don&amp;apos;t dot these targets
	local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
	
	-- Protectors of the Endless
	if npcID == 60885 then return false end
	-- Tsulong
	if npcID == 62919 or npcID == 63346 then return false end
	
	if Doom then
		if doomTimer - GetTime() &amp;lt; 15 then
			if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0
				and PQR_SpellAvailable(PQ_Meta) then
				if GetSpellCharges(PQ_GulDan) &amp;lt; 2 and GDCD &amp;lt;= 4 then return false end
					SpellCancelQueuedSpell()
					CastShapeshiftForm(1)
			end
			
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;)
			return true
		end
	else
		if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0
			and PQR_SpellAvailable(PQ_Meta) then
			if GetSpellCharges(PQ_GulDan) &amp;lt; 2 and GDCD &amp;lt;= 4 then return false end
				SpellCancelQueuedSpell()
				CastShapeshiftForm(1)
		end
	
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Soul Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HasHero = PQ_HasHero
local PQ_SoulFire = PQ_SoulFire
local SpecialUnit = SpecialUnit
local Nova_UnitInfo = Nova_UnitInfo
local TargetValidation = TargetValidation

-- Human Form is bad
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- So is movement
if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire)
	and PQR_SpellAvailable(PQ_SoulFire)
	and Nova_UnitInfo(&amp;quot;target&amp;quot;) &amp;lt;= 25 and SpecialUnit() then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;)
		return true
end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire)
	and PQR_SpellAvailable(PQ_SoulFire)
	and PQ_HasHero() then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;)
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Life Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_LifeTap = 1454
local Nova_UnitInfo = Nova_UnitInfo

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
if select(3,Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 55 then return false end

if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt; 30
    and select(3,Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 55
    and PQR_SpellAvailable(PQ_LifeTap)
then SpellCancelQueuedSpell() CastSpellByName(GetSpellInfo(PQ_LifeTap),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Meta = PQ_Meta
local PQ_Doom = PQ_Doom
local PQ_GulDan = PQ_GulDan
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)

-- Disable if user disabled Mouseover dotting
if not PQI_MentallyDemo_MouseoverDotting_enable then return false end

-- Disable in Human Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if UnitExists(&amp;quot;mouseover&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;, 1)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) == 1
	and PQR_SpellAvailable(PQ_Doom)
then
	-- Don&amp;apos;t dot these targets
	local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16)
	
	-- Wind Lord Mel&amp;apos;jarak override
	if npcID == 65498 or npcID == 65499 or npcID == 65500 then return false end
	-- Protectors of the Endless
	if npcID == 60885 then return false end
	-- Tsulong
	if npcID == 62919 or npcID == 63346 then return false end
	
	if Doom then
		if doomTimer - GetTime() &amp;lt; 15 then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;)
			return true
		end
	else
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Harvest Life</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if not KilJaeden then
	if PQR_IsMoving(0.3) then return false end
end

if IsPlayerSpell(PQ_HL)
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_HL)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
then CastSpellByName(GetSpellInfo(PQ_HL),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] MSV Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Gara&amp;apos;jal the Spiritbinder
local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if timer and timer - GetTime() &amp;lt; 2 then
	SpellStopCasting()
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARLOCK>