<?xml version="1.0" encoding="utf-8" ?><WARLOCK><Ability><Name>-Demonology- [META] Soul Fire</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,122355)

if not SpecialUnit() then return false end

if not name and Fury &amp;lt; 160 then return false end
if Fury &amp;lt; 80 then return false end

-- Omni Mode AOE check
if Nova_AOE == 1 then return false end

-- No Molten Core buffs..
if not name then return false end
if name and count&amp;gt;1 then return false end

if name and count==1 and UnitBuffID(&amp;quot;player&amp;quot;, 26297) and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(6353) then return false end
-- Don&amp;apos;t enter while in Caster form.
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Don&amp;apos;t run and cast!
if PQR_IsMoving(0.3) then return false end

-- Soul Fire is on CD
if not PQR_SpellAvailable(6353) then return false end

-- Cast Soul Fire during Immolation Aura
if PQI_SoapboxOffensiveSettings_SoulFirewithImmoAura_enable then
	if Soapbox_CastCheck(6353,104025) then
		if TargetValidation(&amp;quot;target&amp;quot;,6353) then return true end
	end
end

-- Cast Soul Fire during Dark Soul
if itemCheck(warlockT15) &amp;gt; 1 then
if UnitBuffID(&amp;quot;player&amp;quot;,113861) and Soapbox_CastCheck(6353,113861) then
		if TargetValidation(&amp;quot;target&amp;quot;,6353) then
			return true
		end
	end
end


-- Cast Soul Fire during Execute
if T2D(&amp;quot;target&amp;quot;) &amp;lt;= 15 or PQI_SoapboxOffensiveSettings_HighRegenRotation_enable then
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then return true end
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TBT1, TBT2 = TrinketProc() -- Trinkets Buff Timers

-- Don&amp;apos;t try to Exit Metamorphosis in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end
if Nova_Fel == 1 then CancelShapeshiftForm() return true end
if Fury &amp;lt; 60 then CancelShapeshiftForm() return true end
if UnitExists(&amp;quot;target&amp;quot;) then
if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then return false end end

-- UVLS Logic
if UnitBuffID(&amp;quot;player&amp;quot;,138963) then return false end
if UVLS then
	if not PQR_SpellAvailable(103958) then
		if GetSpellCooldown(103958) + select(2,GetSpellCooldown(103958)) - GetTime() &amp;gt; 1 then
			return false
		end
	end
elseif GetSpellCooldown(103958) + select(2,GetSpellCooldown(103958)) - GetTime() &amp;gt; 4 then
return false
end

-- Forcing Metamorphosis, don&amp;apos;t cancel just yet.
if Nova_Meta == 1 then return false end

-- AoE Mode require different rules.
if Nova_AOE == 1 then
	if Fury &amp;lt; 80 then CancelShapeshiftForm() return true end
else
	-- Dark Soul
	if UnitBuffID(&amp;quot;player&amp;quot;,113861) then return false end
	
	if Fury &amp;gt; 100 then
	if TBT1 &amp;gt; 1 or TBT2 &amp;gt; 1 then return false end
	end
	-- Shadowflame (2)
	if Shadowflame and ShadowCount &amp;gt; 1 then return false end
	
	-- Doom
	if UnitExists(&amp;quot;target&amp;quot;) then
		local id = UnitGUID(&amp;quot;target&amp;quot;)
		if #DoTs &amp;gt; 0 then
			for i=1,#DoTs do
				if DoTs[i].guid == id then
					if not Doom or (Doom and Doomtimer - GetTime() &amp;lt; DoTs[i].doom_tick_every) then return false end
				end
			end
		end
	end
	
	--Corruption
	if Cor and Cortimer - GetTime() &amp;lt; 15 then return false end
	
	-- Cleave Mode
	if Nova_Cleave == 1 then
		local cleaveTargets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}
		for i=1,#cleaveTargets do
			local cleaveCor,_,_,_,_,_,cleaveCorTimer = UnitDebuffID(cleaveTargets[i],172,&amp;quot;PLAYER&amp;quot;)
			
			if cleaveCor and cleaveCorTimer - GetTime() &amp;lt; 25 then return false end
		end
	end
	
	-- Heroism
	if Bloodlust and Fury &amp;lt; 100 then CancelShapeshiftForm() return true end
	
	
	-- Low Demonic Fury
	if not Burn then
		if Fury &amp;lt;= 1000 then CancelShapeshiftForm() return true end
	else if Fury &amp;lt;= 650 then Burn = false CancelShapeshiftForm() return true end end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Doom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local cTime = cTime
local disableDoom = disableDoom
local SoapboxPower = SoapboxPower
local TargetValidation = TargetValidation
local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(603) then return false end

if Fury &amp;lt; 60 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,6353) and not NoDoom(&amp;quot;target&amp;quot;) then
	local id = UnitGUID(&amp;quot;target&amp;quot;)
	
	if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 10 then return false end
	
	if Doom then
		for i=1,#DoTs do
			if DoTs[i].guid == id then
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
					if DoTs[i].crit == true then
						if DoTs[i].doom_tick_every &amp;gt; 12.50 then
							if Doomtimer - GetTime() &amp;lt; 62 * 1.5 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297) or UnitDebuffID(&amp;quot;player&amp;quot;, 138002)) then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
							elseif Doomtimer - GetTime() &amp;lt; 62 * 1.3 * EA then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
							end
						elseif Doomtimer - GetTime() &amp;lt; 62 * 1.3 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297) or UnitDebuffID(&amp;quot;player&amp;quot;, 138002)) then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
						end
					end
					if DoTs[i].crit == false then
						CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
					end
				else
					if DoTs[i].crit == true then
						if Doomtimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true end
					end
					if DoTs[i].crit == false then
						if SoapboxPower(603) &amp;gt; DoTs[i].doomPower then
							if Doomtimer - GetTime() &amp;lt; 60 * 1.3 * EA / MP then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true end
						end
						if Doomtimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true end
					end
				end
			end
		end
	else CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Metamorphosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TBT1, TBT2 = TrinketProc() -- Trinkets Buff Timers

if not PQR_SpellAvailable(103958) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end
if UnitExists(&amp;quot;target&amp;quot;) and IsSpellInRange(GetSpellInfo(6353),&amp;quot;target&amp;quot;) == 0
	then return false end
if Fury &amp;lt; 60 then return false end

if Nova_Fel == 1 then return false end

---Unerring Vision Override---

if UnitDebuffID(&amp;quot;target&amp;quot;,172,&amp;quot;PLAYER&amp;quot;) then
if UnitBuffID(&amp;quot;player&amp;quot;,138963) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) CastShapeshiftForm(1) return true end end

-- AoE: Metamorphosis
if Nova_AOE == 1 then
	if Nova_Meta ~= 1 then
		-- Corruption needs rebuilding
		if Cor and Cortimer - GetTime() &amp;lt;= 10 then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
		
		-- High Fury
		if Fury &amp;gt;= 350 then
			CastSpellByName(GetSpellInfo(103958),&amp;quot;player&amp;quot;)
			return true
		end
	else if Fury &amp;gt;= 250 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end end
else
	if Nova_Meta ~= 1 then
		-- Don&amp;apos;t enter Metamorphosis until after Hand of Gul&amp;apos;dan
		if not Doom and GetSpellCharges(105174) &amp;gt; 0 and (IsPlayerSpell(108503) or (cTime &amp;gt; 10)) then return false end
		if not UnitDebuffID(&amp;quot;target&amp;quot;,172,&amp;quot;PLAYER&amp;quot;) then return false end
		
		-- Iron Qon and Twin Consorts
		if UnitExists(&amp;quot;mouseover&amp;quot;) then
			local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16)
			if npcID == 68078 or npcID == 68904 then
				if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,603,&amp;quot;PLAYER&amp;quot;) then
					SpellCancelQueuedSpell()
					CastShapeshiftForm(1) return true
				end
			end
		end
		
		-- Weave Metamorphosis with Dark Soul
		if DarkSoul and Fury &amp;gt;= (DarkSoultimer - GetTime())*20 then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
		-- Weave Metamorphosis with Int Trinkets
		if Fury &amp;gt; 650  then
			if TBT1 &amp;gt; 8
			or TBT2 &amp;gt; 8 then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
			end
		end
			
		-- Weave Metamorphosis with minimum Fury cap
		if GetSpellCharges(105174) == 0 and SFCD &amp;gt; 4 and Fury &amp;gt; 700 then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
		
		-- Enter Metamorphosis to rebuild Corruption
		---if Cor and Cortimer - GetTime() &amp;lt; 5 then
			---SpellCancelQueuedSpell()
			---CastShapeshiftForm(1) return true
		---end
		
		
		

		
		
		
		
		
		
		
		-- Enter Metamorphosis to cast or refresh Doom
		if UnitExists(&amp;quot;target&amp;quot;) then
			local id = UnitGUID(&amp;quot;target&amp;quot;)
			if Doom then
				for i=1,#DoTs do
					if DoTs[i].guid == id then
						if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						if DoTs[i].crit == true then
							if DoTs[i].doom_tick_every &amp;gt; 12.50 then
								if Doomtimer - GetTime() &amp;lt; 62 * 1.5 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
								elseif Doomtimer - GetTime() &amp;lt; 62 * 1.3 * EA then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
								end
							elseif Doomtimer - GetTime() &amp;lt; 62 * 1.3 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),&amp;quot;target&amp;quot;) return true
							end
						end
							if DoTs[i].crit == false then
								SpellCancelQueuedSpell() CastShapeshiftForm(1) return true
							end
						else
							if DoTs[i].crit == true then
								if Doomtimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
							end
							if DoTs[i].crit == false then
								if SoapboxPower(603) &amp;gt; DoTs[i].doomPower then
									if Doomtimer - GetTime() &amp;lt; 60 * 1.3 * EA / MP then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
								end
								if Doomtimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
							end
						end
					end
				end
			else SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
		end
		
		-- High Fury
		if Fury &amp;gt; 900 then
			Burn = true
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
	elseif SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then
		if Fury &amp;gt;= 900 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
	else if Fury &amp;gt;= 250 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Soul Fire</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,122355)

local Nova_AOE = Nova_AOE
local TargetValidation = TargetValidation


if PQR_SpellAvailable(105174) and GetSpellCharges(105174) &amp;gt; 0 then
	if cTime &amp;lt; 10 then	
	return false
	end
end

-- Omni Mode AOE Check
if Nova_AOE == 1 then return false end

-- Don&amp;apos;t cast while in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end

-- No Molten Core buffs..
if not name then return false end
if name and count&amp;gt;1 then return false end

if PQR_IsMoving(0.3) then return false end

-- Soul Fire is on CD
if not PQR_SpellAvailable(6353) then return false end

if not PQI_SoapboxOffensiveSettings_HighRegenRotation_enable
or (name and count &amp;gt; 9)
or DarkSoul then
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then return true end
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Touch of Chaos</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Fury &amp;lt; 40 then return false end


if not PQR_SpellAvailable(103964) then return false end

if Nova_AOE == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,6353) then
	CastSpellByName(GetSpellInfo(103964),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Channeling--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(6353) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Dark Soul</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) and IsSpellInRange(GetSpellInfo(6353),&amp;quot;target&amp;quot;) == 0
	then return false end

if IsPlayerSpell(26297) and ZerkCD &amp;gt; 1 and ZerkCD &amp;lt; 20 and not Bloodlust then return false end
if IsPlayerSpell(56242) and IsPlayerSpell(108503) and cTime &amp;lt; 10 and GetSpellCharges(105174) &amp;gt; 0 then return false end
	-- Disable ability if we disabled it in PQI
if Nova_Cooldowns ~= 1 then return false end

if PQI_SoapboxOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then
	return false
	end
end


if not IsSpellKnown(108505)
or GetSpellCharges(113861) &amp;gt; 1 
or ((not IsPlayerSpell(104316) or PQR_SpellAvailable(104316)) and Fury &amp;gt; 450) then
if UnitExists(&amp;quot;boss&amp;quot;..1) then
		local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)
		if BossID == 69465	
		or BossID == 69712 then
   			if BossID == 69465 then -- Jin&amp;apos;Rokh
			local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)	
				if Fluidity then
					if IsPlayerSpell(113861)
					and Cor
					and PQR_SpellAvailable(113861) then
					CastSpellByName(GetSpellInfo(113861),&amp;quot;player&amp;quot;)
					return true
					end
				end				
    		elseif BossID == 69712 then -- Ji-Kun
  			local TargetID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
  			local Feed = UnitBuffID(&amp;quot;player&amp;quot;, 140741)
   				if TargetID == BossID then
   					if not UnitBuffID(&amp;quot;player&amp;quot;, 133755) then 
						if IsPlayerSpell(113861)
						and Cor
						and PQR_SpellAvailable(113861) then
						CastSpellByName(GetSpellInfo(113861),&amp;quot;player&amp;quot;)
						return true
						end
					elseif Feed then
						if IsPlayerSpell(113861)
						and Cor
						and PQR_SpellAvailable(113861) then
						CastSpellByName(GetSpellInfo(113861),&amp;quot;player&amp;quot;)
						return true
						end
					end
				end
			end
		elseif IsPlayerSpell(113861)
		and Cor
		and PQR_SpellAvailable(113861) then
		CastSpellByName(GetSpellInfo(113861),&amp;quot;player&amp;quot;)
		return true
	end		
elseif IsPlayerSpell(113861)
and Cor
and PQR_SpellAvailable(113861) then
CastSpellByName(GetSpellInfo(113861),&amp;quot;player&amp;quot;)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Imp Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local SpecialUnit = SpecialUnit
local DSCD = GetSpellCooldown(113861) + select(2,GetSpellCooldown(113861)) - GetTime()

if IsPlayerSpell(108503) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 and cTime &amp;lt; 10 then return false end
-- Fix Dark Soul&amp;apos;s cooldown check.
if DSCD &amp;lt;= 0 then DSCD = 0 end
-- PQI Setting toggled off
if not PQI_SoapboxOffensiveSettings_AutoImpSwarm_enable then return false end
if not UnitExists(&amp;quot;target&amp;quot;) or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) then return false end
-- We&amp;apos;re not Glyphed
if not IsPlayerSpell(56242) then return false end
-- We&amp;apos;re on a cooldown
if not PQR_SpellAvailable(104316) then return false end
-- No valid unit selected
if not UnitDebuffID(&amp;quot;target&amp;quot;,172,&amp;quot;PLAYER&amp;quot;) then return false end
if cTime &amp;lt; 10 and IsPlayerSpell(108501) and PQR_SpellAvailable(111898) then return false end
	
					
					
					
	if UnitExists(&amp;quot;boss&amp;quot;..1) then
		local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)
		if BossID == 69465	
		or BossID == 69712 then
   			if BossID == 69465 then -- Jin&amp;apos;Rokh
			local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)	
				if Fluidity then
					if UnitBuffID(&amp;quot;player&amp;quot;,113861) or (cTime &amp;lt; 10 and IsPlayerSpell(108501)) then
						if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
						CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
						end
						CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
					end
					-- Dark Soul on Cooldown, pair it up.
					if DSCD &amp;gt; 10 and DSCD &amp;gt; Round(120/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),3) then
						if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
						CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
						end
						CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
					end	
					-- Target about to die
					if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 32 then
						if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
						CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
						end
						CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
					end
				end				
    		elseif BossID == 69712 then -- Ji-Kun
  			local TargetID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
  			local Feed = UnitBuffID(&amp;quot;player&amp;quot;, 140741)
   				if TargetID == BossID then
   					if not UnitBuffID(&amp;quot;player&amp;quot;, 133755) then 
						if UnitBuffID(&amp;quot;player&amp;quot;,113861) or (cTime &amp;lt; 10 and IsPlayerSpell(108501)) then
							if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
							CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
							end
							CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
						end
						-- Dark Soul on Cooldown, pair it up.
						if DSCD &amp;gt; 10 and DSCD &amp;gt; Round(120/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),3) then
							if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
							CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
							end
							CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
						end	
						-- Target about to die
						if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 32 then
							if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
							CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
							end
							CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
						end
					elseif Feed then
						if UnitBuffID(&amp;quot;player&amp;quot;,113861) or (cTime &amp;lt; 10 and IsPlayerSpell(108501)) then
							if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
							CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
							end
							CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
						end
						-- Dark Soul on Cooldown, pair it up.
						if DSCD &amp;gt; 10 and DSCD &amp;gt; Round(120/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),3) then
							if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
							CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
							end
							CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
						end	
						-- Target about to die
						if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 32 then
							if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
							CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
							end
							CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
						end
					end
				end
			end
		elseif UnitBuffID(&amp;quot;player&amp;quot;,113861) or (cTime &amp;lt; 10 and IsPlayerSpell(108501)) then
			if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
		end
		-- Dark Soul on Cooldown, pair it up.
		if DSCD &amp;gt; 10 and DSCD &amp;gt; Round(120/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),3) then
			if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
		end	
		-- Target about to die
		if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 32 then
			if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
		end	
	elseif not UnitExists(&amp;quot;boss&amp;quot;..1) then
		if UnitBuffID(&amp;quot;player&amp;quot;,113861) or (cTime &amp;lt; 10 and IsPlayerSpell(108501)) then
			if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
		end
		-- Dark Soul on Cooldown, pair it up.
		if DSCD &amp;gt; 10 and DSCD &amp;gt; Round(120/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),3) then
			if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
		end	
		-- Target about to die
		if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 32 then
			if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxOffensiveSettings_AutoRacials_enable then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
			CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true 
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Hand of Gul&amp;apos;dan</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end

if Nova_AOE == 1 then
	if not PQI_SoapboxOffensiveSettings_AoESelection_enable then 
		if Nova_Chaos == 1 then return false end
	end
	local v=PQI_SoapboxOffensiveSettings_AoESelection_value or 2
	
	if PQI_SoapboxOffensiveSettings_AoESelection_enable then 
	-- We selected Chaos Wave. Opt out.
	if v == 1 then return false end
	end
	
	-- No Chaos Waves please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,105174) and PQR_SpellAvailable(105174)
		and GetSpellCharges(105174) &amp;gt; 0 then
		
			-- If Shadowflame is close to coming off CD...
			if SFCD &amp;lt;= 4.5 and cTime &amp;gt; 10 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- GoSac Opener
			if cTime &amp;lt; 7 and Cor and IsPlayerSpell(108503) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- Double-stack Shadowflame
			if Shadowflame and Shadowflametimer - GetTime() &amp;lt; 5 then
				if cTime &amp;gt; 10 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
				end
			end
			
			-- With 2 charges, cast as soon as we can
			if GetSpellCharges(105174) &amp;gt; 1 then
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
			end
	end
else
	-- No Chaos Waves please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	-- Getting awful close to Burn mode, cancel.
	--if fury &amp;gt;= 870 then return false end
	
	-- Fury Burn Phase
	--if furyBurn then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,105174) and PQR_SpellAvailable(105174)
		and GetSpellCharges(105174) &amp;gt; 0 then
			-- If Shadowflame is close to coming off CD...
			if SFCD &amp;lt;= 4.5 and cTime &amp;gt; 10 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- GoSac Opener
			if cTime &amp;lt; 7 and Cor and IsPlayerSpell(108503) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- Double-stack Shadowflame
			if Shadowflame and Shadowflametimer - GetTime() &amp;lt; 5 then
				if cTime &amp;gt; 10 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
				end
			end
			
			-- With 2 charges, cast as soon as we can
			if GetSpellCharges(105174) &amp;gt; 1 then
				CastSpellByName(GetSpellInfo(105174),&amp;quot;target&amp;quot;)
				return true
			end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Corruption</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Cor3,_,_,_,_,_,Cor3Timer = UnitDebuffID(&amp;quot;target&amp;quot;,172,&amp;quot;PLAYER&amp;quot;)

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on target
if TargetValidation(&amp;quot;target&amp;quot;,172) and isMindControledUnit(&amp;quot;target&amp;quot;) then
	if Nova_AOE == 1 then
		if Cor and Cortimer - GetTime() &amp;lt;= 10 then
			CastSpellByName(GetSpellInfo(172),&amp;quot;target&amp;quot;)
			return true
		end
	end
	
	if T2D(&amp;quot;target&amp;quot;) &amp;gt;= 6 then
		if Cor3 then
			if Cor3Timer - GetTime() &amp;lt; 3 then
			CastSpellByName(GetSpellInfo(172),&amp;quot;target&amp;quot;)
			return true
			end
		else
		CastSpellByName(GetSpellInfo(172),&amp;quot;target&amp;quot;)
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---1.Functions---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
else group = nil
end

---Credits to Bu_ba for the line of code!---
if not IsLineOfSight then
 LoSTable = { }
 function IsLineOfSight(targetCheck, time)
  local time=time or 5
  targetGUID = UnitGUID(targetCheck) or 0 

   for i=1, #LoSTable do
    if time &amp;lt; (GetTime() - LoSTable[i].time) then
     table.remove(LoSTable, i)
     break
    end
  end

   function LoSCheck(self, event, ...)
    local targetGUID = targetGUID
    local Log = {...}
    local AlreadyTabled = false
    if Log[2] and Log[2] == &amp;quot;SPELL_CAST_FAILED&amp;quot; and targetGUID then
     if Log[4] and Log[4]==UnitGUID(&amp;quot;player&amp;quot;) then
      if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
       for j=1, #LoSTable do
        if targetGUID == LoSTable[j].unit then
         AlreadyTabled = true
         break
        end
       end
       if not AlreadyTabled then
        table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
        targetGUID = nil
        _G.NovaLineOfSight:UnregisterAllEvents()
       end
      end
     end
    end
    
   end

  if not NovaLineOfSight then
    frameLOS = CreateFrame(&amp;quot;frame&amp;quot;, &amp;quot;NovaLineOfSight&amp;quot;)
    frameLOS:SetScript(&amp;quot;OnEvent&amp;quot;, LoSCheck)
  end
  
   for k=1, #LoSTable do
     if targetGUID and targetGUID == LoSTable[k].unit then
     return false
    end
  end
  
  
  _G.NovaLineOfSight:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  return true

 end
end

if sTimer == nil then
  sTimer = 0
 end
 if cTime == nil then
  cTime = 0
 end
 if UnitAffectingCombat(&amp;quot;player&amp;quot;) and sTimer == 0 then
   sTimer = GetTime()
 end
 if sTimer &amp;gt; 0 then
   cTime = (GetTime() - sTimer)
 end
 if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not UnitExists(&amp;quot;target&amp;quot;) then
  sTimer = 0
  cTime = 0
 end
 
-- DoT Mind Control Function
MindControlled = nil
function MindControlled(unit)
	if UnitDebuffID(unit, 145832) 
	or UnitDebuffID(unit, 145171) 
	or UnitDebuffID(unit, 145065) 
	or UnitDebuffID(unit, 145071) then
	return true
	else
	return false
	end
end
 

-- Time 2 Die
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) &amp;lt; 6 then timeToDie = 99 end
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		
		return timeToDie
	end
end

HavocAble = nil
function HavocAble()
local SpellStart2, SpellDuration2 = GetSpellCooldown(80240)
local havoccd = SpellStart2 + SpellDuration2 - GetTime()
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
 	if UnitExists(&amp;quot;focus&amp;quot;)
	and IsSpellInRange(tostring(GetSpellInfo(80240)), &amp;quot;focus&amp;quot;) == 1
	and havoc == nil
	and havoccd &amp;lt; 25
 	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;) ~= 1
    and darksoul &amp;gt; 10
 	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) == 1 then
 	return true
 	else
 	return false
 	end
 end
 


function dummy()
	dummies = {
		31146, --Raider&amp;apos;s Training Dummy - Lvl ??
		67127, --Training Dummy - Lvl 90
		46647, --Training Dummy - Lvl 85
		32546, --Ebon Knight&amp;apos;s Training Dummy - Lvl 80
		31144, --Training Dummy - Lvl 80
		32667, --Training Dummy - Lvl 70
		32542, --Disciple&amp;apos;s Training Dummy - Lvl 65
		32666, --Training Dummy - Lvl 60
		32545, --Initiate&amp;apos;s Training Dummy - Lvl 55 
		32541, --Initiate&amp;apos;s Training Dummy - Lvl 55 (Scarlet Enclave) 
	}
	for i=1, #dummies do
		if UnitExists(&amp;quot;target&amp;quot;) then
			dummyID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(-13, -9), 16)
		else
			dummyID = 0
		end
		if dummyID == dummies[i] then
			return true
		end	
	end
end
CritRating = GetSpellCritChance(6)*600
-- Calculate accumulated power of procs
SoapboxPower = nil
function SoapboxPower(spellID)
	-- Fetch our current stats.
	local mastery, haste, crit, spd, sorbs = GetMastery(), UnitSpellHaste(&amp;quot;player&amp;quot;), GetSpellCritChance(6), GetSpellBonusDamage(6), UnitPower(&amp;quot;player&amp;quot;,13)
	
	-- Calculate potential damage buffs.
	dmg_buff = 1
	local fluidity, tricks, fearless, nutriment, shadowform, pi, tof = UnitBuffID(&amp;quot;player&amp;quot;,138002), UnitBuffID(&amp;quot;player&amp;quot;,57934), UnitBuffID(&amp;quot;player&amp;quot;,118977), select(4,UnitBuffID(&amp;quot;player&amp;quot;,138002)), UnitBuffID(&amp;quot;player&amp;quot;,15473), UnitBuffID(&amp;quot;player&amp;quot;,10060), UnitBuffID(&amp;quot;player&amp;quot;,123254)
	if fluidity		then dmg_buff = dmg_buff * 1.4		end
	if fearless		then dmg_buff = dmg_buff * 1.6		end
	if tricks		then dmg_buff = dmg_buff * 1.15		end
	if nutriment	then dmg_buff = 2+(nutriment-1)*0.1	end
	if shadowform	then dmg_buff = dmg_buff * 1.25		end
	if pi			then dmg_buff = dmg_buff * 1.05		end
	if tof			then dmg_buff = dmg_buff * 1.15		end
	
	-- Skull Banner
	if crit &amp;gt;= 100	then
		if skullbanner then dmg_buff = dmg_buff * 1.20	end
	end
	
	-- If Unerring proceed, take it into account.
	if crit &amp;gt; 100 then crit = 100 end
	
	

	if GetSpecialization() == 2 then
			-- Doom
		if spellID == 603 then
			bonus		= (1+crit/100)*(1+(mastery*3)/100)
			tick_every	= 15/(1+(haste/100))
			ticks		= PowerRound(60/tick_every)
			duration	= ticks * tick_every
			damage		= (5340/ticks+spd*1.25)*bonus*ticks*dmg_buff
			dps			= PowerRound(damage/duration)
			dot_power	= PowerRound(dps/100)/10
			return dot_power
		end	
		-- Fail-safe
		return 0
	else return 0 end
end

-- Disable Doom
NoDoom = nil
function NoDoom(unit)
	local NoDoomList = NoDoomList
	local npcID = false
	
	-- Grab NPC ID
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
	end
	if UnitExists(&amp;quot;mouseover&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16)
	end
	
	-- Loop Units.
	if npcID then
		for i=1,#NoDoom do
			if NoDoom[i] == npcID then return true end
		end
		return false
	end
end


-- Combat log event reader
function DemonFrame_OnEvent(self,event,...)

	-- Clear the DOT tracker whenever we leave or enter combat!
	if event == &amp;quot;PLAYER_REGEN_ENABLED&amp;quot; or event == &amp;quot;PLAYER_REGEN_DISABLED&amp;quot; then
		if #DoTs &amp;gt; 0 then DoTs = {} end
	end
	
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		local subEvent		= select(2, ...)
		local source		= select(5, ...)
		local destGUID		= select(8, ...)
		local destination	= select(9, ...)
		local spellID		= select(12, ...)
		local spell			= select(13, ...)
		local damage		= select(15, ...)
		local critical		= select(21, ...)
		local doom_tick_every = Round(15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local swp_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local vt_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		
		-- Unit Death events
		if subEvent == &amp;quot;UNIT_DIED&amp;quot; then
			-- A unit has died, is it in our tracker?
			if #DoTs &amp;gt; 0 then
				for i=1,#DoTs do
					if DoTs[i].guid == destGUID then tremove(DoTs, i) return true end
				end
			end
		end
		
		-- Successfull Spell Casts
		if subEvent == &amp;quot;SPELL_CAST_START&amp;quot; then end
		
		
		-- Refreshed Aura Events
		if subEvent == &amp;quot;SPELL_AURA_REFRESH&amp;quot; then
			-- Doom was refreshed on an enemy, update our table.
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 603 then
				if #DoTs &amp;gt; 0 then
					for i=1,#DoTs do
						if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then
							DoTs[i].doomPower = SoapboxPower(603)
							DoTs[i].doom_tick_every = doom_tick_every
							DoTs[i].spellID = spellID
							if UnitBuffID(&amp;quot;player&amp;quot;,138963) then DoTs[i].crit = true else DoTs[i].crit = false end
						end
					end
				end
			end
		end
		
		-- Removed Aura Events
		if subEvent == &amp;quot;SPELL_AURA_REMOVED&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source then
				-- Doom fell of a unit, remove unit from tracker.
				if spellID == 603 then
					if #DoTs &amp;gt; 0 then
						for i=1,#DoTs do
							if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then tremove(DoTs, i) return true end
						end
					end
				end
			end
		end
		
		-- Applied Aura Events
		if subEvent == &amp;quot;SPELL_AURA_APPLIED&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source then
				-- Doom applied to a unit, add unit to tracker
				if spellID == 603 then
					for i=1,#DoTs do if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then return false end end
					
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						table.insert(DoTs, {guid = destGUID, doomPower = SoapboxPower(603), doom_tick_every = doom_tick_every, spellID = spellID, crit = true})
					else
						table.insert(DoTs, {guid = destGUID, doomPower = SoapboxPower(603), doom_tick_every = doom_tick_every, spellID = spellID, crit = false})
					end
				end
			end
		end
	end
end

	TrinketProc = nil
	function TrinketProc()
	
		local t = 1
		local TrinketsTimers = {0, 0}

		---Trinket IDs go here---
		local TrinketsBuffID = {
		138898,	
		91192,	
		126266,	
		146184, 
		148897, 
		148906, 
		146046  
							   }

		for i = 1, #TrinketsBuffID do
			if UnitBuffID(&amp;quot;player&amp;quot;, TrinketsBuffID[i]) then
				TrinketsTimers[t] = select(7,UnitBuffID(&amp;quot;player&amp;quot;, TrinketsBuffID[i])) - GetTime()
				if t == 1 then t = 2 end
			end
		end	
	
		return TrinketsTimers[1], TrinketsTimers[2]
		
	end
	
-- Function to check if buff.duration &amp;gt; spell.cast_time
Soapbox_CastCheck = nil
function Soapbox_CastCheck(spell, buff)
	-- Someone forgot to input something, return false by default.
	if buff == nil then return false end
	if spell == nil then return false end
	
	-- Variables and functions we need to make this work.
	local Round = Round
	local buffName,_,_,_,_,_,buffTime = UnitBuffID(&amp;quot;player&amp;quot;,buff)
	
	if buffName then
		-- It&amp;apos;s an instant spell, return true no matter what.
		if select(7,GetSpellInfo(spell)) == 0 then return true end
		
		-- Check the cast time
		if buffTime - GetTime() &amp;gt; Round(select(7,GetSpellInfo(spell))/1000,2) + 0.8 then return true
			else return false end
	end
	return false
end

-- Function to check if buff.cooldown &amp;gt; spell.cast_time
Soapbox_CooldownCast = nil
function Soapbox_CooldownCast(spell, cooldown)
	-- Someone forgot to input something, return false by default.
	if spell == nil then return false end
	if cooldown == nil then return false end
	
	-- Variables and functions we need to make this work.
	local Round = Round
	local spellCD = GetSpellCooldown(cooldown) + select(2,GetSpellCooldown(cooldown)) - GetTime()
	
	-- Validate the cooldown check
	if PQR_SpellAvailable(cooldown) or spellCD &amp;lt;= 0 then spellCD = 0 end
	
	if spellCD &amp;gt; 0 then
		-- It&amp;apos;s an instant spell, return true no matter what.
		if select(7,GetSpellInfo(spell)) == 0 then return true end
		
		-- Check the cast time
		if spellCD &amp;gt; Round(select(7,GetSpellInfo(spell))/1000,2) + 1 then return true
			else return false end
	end
	return false
end


-- Returns the number of items currently equipped from the given table.
itemCheck = nil
function itemCheck(tbl)
	local itemCount = 0
	for i=1,#tbl do
		if IsEquippedItem(tbl[i]) then itemCount = itemCount + 1 end
	end
	return itemCount
end


-- Rounding Function
Round = nil
function Round(number, decimal)
	local multiplier = 10^(decimal or 0)
	return math.floor(number * multiplier + 0.5) / multiplier
end
PowerRound = nil
function PowerRound(num) return math.floor(num+.5) end

-- DoT Mind Control Function
isMindControledUnit = nil
function isMindControledUnit(unit)
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return true end
		
	-- Stop dots on MCed raid members
	for i=1,GetNumGroupMembers() do
		local member = group..i
		if not UnitCanAttack(&amp;quot;player&amp;quot;,unit) then return true
		else
			if UnitName(unit) == member then return false end
		end
		return true
	end
end



-- Target Validation Function
TargetValidation = nil
function TargetValidation(unit, spell)
	if UnitExists(unit)
		and IsPlayerSpell(spell)
		and UnitCanAttack(&amp;quot;player&amp;quot;, unit) == 1
		and not UnitIsDeadOrGhost(unit)
		and IsLineOfSight(unit, 3) then
			if IsSpellKnown(spell) then
				if PQR_SpellAvailable(spell) then
					if IsSpellInRange(GetSpellInfo(spell), unit) == 1 then return true else return false end
				else
					if spell == 8092 or spell == 32379 then
						local spellCD = select(2,GetSpellCooldown(spell)) + GetSpellCooldown(spell) - GetTime()
						if spellCD &amp;lt;= 0 then spellCD = 0 end
						if spellCD &amp;lt;= 0.5 then return true end
					end
					return false
				end
			else
				if select(2, GetSpellCooldown(spell)) == 0 then return true end
			end
	end
end

-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local PQ_BossUnits = PQ_BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#PQ_BossUnits do
				if PQ_BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end

-- Aura Information Function
AuraInfo = nil
function AuraInfo(i,unit)
	if i == 1 then
		for x = 1, #buffs.stat do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stat[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 2 then
		for x = 1, #buffs.stamina do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stamina[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 3 then
		for x = 1, #buffs.atkpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 4 then
		for x = 1, #buffs.atkspeed do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkspeed[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 5 then
		for x = 1, #buffs.spllpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 6 then
		for x = 1, #buffs.spllhaste do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllhaste[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 7 then
		for x = 1, #buffs.crit do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.crit[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 8 then
		for x = 1, #buffs.mastery do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.mastery[x])))
			if texture then
				return name, _, texture
			end
		end
	else 
		return nil, nil, nil
	end
end

---Procs---
IntProc = 0
IntProc2 = 0
IntProc3 = 0
BBcount = 0
WUcount = 0
local JadeSpirit, _, _, _, _, _, JadeEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 104993) -- 1650int
local Yulon, _, _, _, _, _, YulonEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 128985) -- 3.0k+ int
local Lightweave, _, _, _, _, _, LightweaveEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 125487) -- 2.0k int
local PotJadeSerpent, _, _, _, _, _, PotJadeSerpentEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 105702) -- 4.0k int
local CosmosTrinket, _, _, _, _, _, CosmosTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 126577) -- 3.4k int
local FlashFrozenTrinket, _, _, _, _, _, FlashFrozenTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 126478) -- 4.2k int
local ShockChargerTrinket, _, _, _, _, _, ShockChargerTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 136082) -- 3.8k int
local WushoolayTrinket, _, _, _, _, _, WushoolayTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 138786) -- 1.3k stacking int
local ChayeEssenceTrinket, _, _, _, _, _, ChayeEssenceTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 139134) -- 7.3k int
local HydraTrinket, _, _, _, _, _, HydraTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 138898) -- 7.3k int
local PurifiedImmerseus, _, _, _, _, _, PurifiedImmerseusTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 146046 ) -- 11.7k int
local KardrisTrinket, _, _, _, _, _, KardrisTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 148906 ) -- 11.7k int
local DarkSoul, _, _, _, _, _, DarkSoulEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 113858 ) -- 30% crit
local FrenziedCrystalTrinket, _, _, _, _, _, FrenziedCrystalTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 148897 ) -- 11.7k int
local BlackBloodTrinket, _, _, _, _, _, BlackBloodTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 146184 ) -- 11.7k int
local SkullBanner, _, _, _, _, _, SkullBannerEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 114206 ) -- 20% crit
local TierBonus, _, _, _, _, _, TierBonusEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 145164 ) -- 15% crit
local ChaosBoltCastTime = select(7,GetSpellInfo(116858))/1000+.07
local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(29722) then
local Delay = ChaosBoltCastTime * .3 
if UnitBuffID(&amp;quot;player&amp;quot;,117896) and BDStacks &amp;gt; 2 then
ChaosBoltCastTime = ChaosBoltCastTime - Delay
end
end


if UnitBuffID(&amp;quot;player&amp;quot;,104993) and (JadeEndTime - GetTime()) &amp;gt; ChaosBoltCastTime  then
	IntProc = IntProc + 0.3
end
if UnitBuffID(&amp;quot;player&amp;quot;,128985) and (YulonEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,125487) and (LightweaveEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 0.3
end
if UnitBuffID(&amp;quot;player&amp;quot;,105702) and (PotJadeSerpentEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,126577) and (CosmosTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,126478) and (FlashFrozenTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,136082) and (ShockChargerTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,138786) and (WushoolayTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	local _, _, _, WUcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 138788 )
	IntProc = IntProc + (WUcount * 0.25)
end
if UnitBuffID(&amp;quot;player&amp;quot;,139134) and (ChayeEssenceTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,138898) and (HydraTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,146046) and (PurifiedImmerseusTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148906) and (KardrisTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,113858) and (DarkSoulEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148897) and (FrenziedCrystalTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,146184) and (BlackBloodTrinketEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	local _, _, _, BBcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 146202 )
	IntProc = IntProc + (BBcount * 0.4)
end
if UnitBuffID(&amp;quot;player&amp;quot;,114206) and (SkullBannerEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,145164) and (TierBonusEndTime - GetTime()) &amp;gt; ChaosBoltCastTime then
	IntProc = IntProc + 1
end

---Buff about to fall--
if UnitBuffID(&amp;quot;player&amp;quot;,104993) and (JadeEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3  then
	IntProc3 = IntProc3 + 0.3
end
if UnitBuffID(&amp;quot;player&amp;quot;,128985) and (YulonEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,125487) and (LightweaveEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc3 = IntProc3 + 0.3
end
if UnitBuffID(&amp;quot;player&amp;quot;,105702) and (PotJadeSerpentEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,126577) and (CosmosTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,126478) and (FlashFrozenTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,136082) and (ShockChargerTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,138786) and (WushoolayTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	local _, _, _, WUcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 138788 )
	IntProc3 = IntProc3 + (WUcount * 0.25)
end
if UnitBuffID(&amp;quot;player&amp;quot;,139134) and (ChayeEssenceTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime + 1.3 then
	IntProc = IntProc + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,138898) and (HydraTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,146046) and (PurifiedImmerseusTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148906) and (KardrisTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,113858) and (DarkSoulEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148897) and (FrenziedCrystalTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,146184) and (BlackBloodTrinketEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	local _, _, _, BBcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 146202 )
	IntProc3 = IntProc3 + (BBcount * 0.4)
end
if UnitBuffID(&amp;quot;player&amp;quot;,114206) and (SkullBannerEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,145164) and (TierBonusEndTime - GetTime()) &amp;lt;= ChaosBoltCastTime  + 1.3 then
	IntProc3 = IntProc3 + 1
end

---Shadowburn---


if UnitBuffID(&amp;quot;player&amp;quot;,104993) and (JadeEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 0.3
end
if UnitBuffID(&amp;quot;player&amp;quot;,128985) and (YulonEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,125487) and (LightweaveEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 0.3
end
if UnitBuffID(&amp;quot;player&amp;quot;,105702) and (PotJadeSerpentEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,126577) and (CosmosTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,126478) and (FlashFrozenTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,136082) and (ShockChargerTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,138786) and (WushoolayTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	local _, _, _, WUcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 138788 )
	IntProc2 = IntProc2 + (WUcount * 0.25)
end
if UnitBuffID(&amp;quot;player&amp;quot;,139134) and (ChayeEssenceTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,138898) and (HydraTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;,146046) and (PurifiedImmerseusTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148906) and (KardrisTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,113858) and (DarkSoulEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148897) and (FrenziedCrystalTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	IntProc2 = IntProc2 + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,146184) and (BlackBloodTrinketEndTime - GetTime()) &amp;gt; 0.4 then
	local _, _, _, BBcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 146202 )
	IntProc2 = IntProc2 + (BBcount * 0.4)
end
-- Unerring Vision of Lei-Shen
Vision = {
	95814,	-- LFR
	94524,	-- Normal
	96186,	-- Thunderforged
	96558,	-- Heroic
	96930	-- Heroic Thunderforged
}

-- Warlock Tier set table
warlockT15 = {
	96725,96726,96727,96728,96729,	-- Tier 15: Heroic
	95325,95326,95327,95328,95329,	-- Tier 15: Normal
	95981,95982,95983,95984,95985	-- Tier 15: LFR
}

-- Aura Info function.
buffs = {
	stat 		=	{ 90363, 20217,	115921, 1126 },
	stamina		= 	{ 469, 90364, 109773, 21562},
	atkpwr		= 	{ 19506, 57330,	6673 },
	atkspeed	=	{ 55610, 113742, 30809, 128432, 128433 },
	spllpwr		=	{ 77747, 109773, 126309, 61316, 1459 },
	spllhaste	= 	{ 24907, 15473, 51470, 49868 },
	crit		=	{ 17007, 1459, 61316, 116781, 97229, 24604, 90309, 126373, 126309 },
	mastery		=	{ 116956, 19740, 93435, 128997 },
}

-- Trinket Proc list
buffList = {104423, 104509, 104510, 128985, 33702, 126577, 126659, 126478, 125487, 136082, 126605, 126734, 126476, 136089, 138898, 139133, 138786, 138703, 137590, 26297, 32182, 90355, 80353, 2825, 104993, 105702}
critProcs = {104509, 126605, 126476}
hasteProcs = {104423, 126659, 136089, 138703, 137590, 26297, 32182, 90355, 80353, 2825}
masteryProcs = {104510}
intellectProcs = {128985, 126577, 126478, 136082, 138898, 139133, 138786, 104993, 105702, 33702, 126734, 125487}

-- Doom no-dot List
NoDoomList = {69556,69553,69548,69492,69491,69480,69153,60885,68192,69050,70579,69069,69172,69184,69168,69013,69133,69462,63873,69232}

-- Complete boss unit table (Dungeons/Heroics/Raids)
PQ_BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3.Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_DEMO_DEF then return false end
if SOAPBOX_DEMO_OFF then return false end

-- PQInterface Settings
	local Defensive = {
		name	= &amp;quot;Defensive Settings&amp;quot;,
		author	= &amp;quot;Soapbox&amp;quot;,
		abilities = {
			{ 	name	= &amp;quot;Auto Burning Rush&amp;quot;,
				tooltip = &amp;quot; Automatically uses burning rush while moving.&amp;quot;,
				enable	= false,
			},
			{ 	name	= &amp;quot;Soulshatter&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows the profile to automatically dump threat when you&amp;apos;ve pulled aggro.&amp;quot;,
				enable	= false,
			},
			{ 	name	= &amp;quot;Healthstone&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control automatic usage of healthstone at set health %.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= {	type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Healthstone to be used at.&amp;quot;,
					value	= 50,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Dark Regeneration&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control automatic usage of Dark Regeneration at set health %.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Dark Regeneration to be used at.&amp;quot;,
					value	= 50,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Mortal Coil&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control atuomatic usage of Dark Regeneration at set health %. (Disables Level 30 keybind when enabled!)&amp;quot;,
				enable	= false,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Mortal Coil to be used at.&amp;quot;,
					value	= 50,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Fury Ward&amp;quot;,
				tooltip = &amp;quot;When enabled; Determins at what HP to use Fury Ward in Dark Aptheosis.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Fury Ward to be triggered.&amp;quot;,
					value	= 50,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Begin Health Funnel at&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control atuomatic usage of Pet Healing at set health %. Will only be used in Solo profile.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Health Funnel to be channeled at.&amp;quot;,
					value	= 45,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Cancel Health Funnel at&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control at which health % Health Funnel will stop healing your Pet. Will only be used in Solo profile.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Health Funnel to be cancelled at.&amp;quot;,
					value	= 90,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Begin Drain Life at&amp;quot;,
				tooltip = &amp;quot;&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Drain Life to be channeled at.&amp;quot;,
					value	= 35,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Cancel Drain Life at&amp;quot;,
				tooltip = &amp;quot;&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Drain Life to be cancelled at.&amp;quot;,
					value	= 75,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Symbiosis&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control when and how the profile casts Symbiosis on you and your pet.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Symbiosis to be cast at.&amp;quot;,
					value	= 25,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Ember Tap&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control at what % Ember Tap will be casted&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Ember Tap to be cast at.&amp;quot;,
					value	= 25,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Raid Buffing&amp;quot;,
				tooltip = &amp;quot;When enabled; Will automatically try to buff your raid or party.&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Dark Aptheosis Provoke&amp;quot;,
				tooltip = &amp;quot;*DEMONOLOGY* When enabled; Taunts the target if you do not have aggro in Dark Aptheosis.&amp;quot;,
				enable	= false,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Threatening Presence&amp;quot;,
				tooltip = &amp;quot;*DEMONOLOGY* When enabled; Will Enable or Disable your Pet&amp;apos;s Threatening Presence.&amp;quot;,
				enable	= false,
			},
		},
		hotkeys = {
			{	name	= &amp;quot;Demonic Teleport&amp;quot;,
				enable	= false,
				hotkeys	= {},
			},
		},
	}
	local Offensive = {
		name	= &amp;quot;Offensive Settings&amp;quot;,
		author	= &amp;quot;Soapbox&amp;quot;,
		abilities = {
			{ 	name	= &amp;quot;Boss Functions&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Combat Pause&amp;quot;,
			    tooltip = &amp;quot;Toggle the profile to pause automatically when not engaged in combat.&amp;quot;,
				enable	= true,
			},
							{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
			{ 	name	= &amp;quot;Auto Target Next Enemy&amp;quot;,
					enable	= true,
				},
			{ 	name	= &amp;quot;Auto Potion&amp;quot;,
			    tooltip = &amp;quot;Toggle the use of Potion of the Jade Serpent under the effects of Bloodlust/Heroism/Time Warp/Ancient Hysteria.&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Auto Racials&amp;quot;,
			    tooltip = &amp;quot;Toggle the automatic usage of Racials.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Frag Belt&amp;quot;,
			    tooltip = &amp;quot;Toggle the automatic usage of Frag Belt during Metamorphosis (Mouseover).&amp;quot;,
				enable	= true,
			},		
			{ 	name	= &amp;quot;Synapse Springs&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Auto Doomguard&amp;quot;,
				tooltip = &amp;quot;Toggle the profile to automatically use Doomguard/Terrorguard at the best possible time.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Boss Cooldown&amp;quot;,
			    tooltip = &amp;quot;Toggle the use of cooldowns on boss targets only.&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Focus Dotting&amp;quot;,
			    tooltip = &amp;quot;Toggle Automatic dotting of the focus target.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Pool Chaos&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					value	= 30,
					step	= 1,
					tooltip	= &amp;quot;*DESTRUCTION* This is the amount of time before Dark Soul comes off of cooldown you want to begin saving up Chaos Bolts, only using them to avoid cap&amp;quot;,
				},
				newSection = true,
			},
			{ 	name	= &amp;quot;Pool Shadowburn&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					value	= 40,
					step	= 1,
					tooltip	= &amp;quot;*DESTRUCTION* This is the amount of time before Dark Soul comes off of cooldown you want to begin saving up Shadowburn, only using them to avoid cap&amp;quot;,
				},
			},	
			{ 	name	= &amp;quot;Immolate Bypass&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;Txtbox&amp;quot;,
					value	= 300,
					tooltip	= &amp;quot;*DESTRUCTION* This is the amount of health (in thousands, for example: 300 = 300k) you want immolate to not be used under, this may cause problems with target dummies, ensure this is UNCHECKED for them&amp;quot;,
				},
			},
			{ 	name	= &amp;quot;Auto Imp Swarm&amp;quot;,
			    tooltip = &amp;quot;*DEMONOLOGY* Toggle the use of automatic Imp Swarm during Dark Soul or high haste procs.&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Auto Carrion Swarm&amp;quot;,
			    tooltip = &amp;quot;*DEMONOLOGY* Toggle the use of automatic Carrion Swarm during the AoE rotation.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Soul Fire with Immo Aura&amp;quot;,
			    tooltip = &amp;quot;*DEMONOLOGY* Toggle usage of Soul Fire during Immolation Aura.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;AoE Selection&amp;quot;,
			    tooltip = &amp;quot;*DEMONOLOGY* Select between Hand of Gul&amp;apos;dan and Chaos Wave during the AoE rotation (Hand of Gul&amp;apos;dan during cleave/long lasting AoE | Chaos Wave during bursty AoE situations such as Lei Shen&amp;apos;s ball lightnings).&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;select&amp;quot;,
					values	= {
						&amp;quot;Chaos Wave&amp;quot;,
						&amp;quot;Hand of Gul&amp;apos;dan&amp;quot;,
					},
					width	= 100,
				},
			},
			
			{ 	name	= &amp;quot;Summon Pet&amp;quot;,
			    tooltip = &amp;quot;Select the pet that you would like the profile to summon.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select the pet that you would like the profile to summon.&amp;quot;,
					values	= {
						&amp;quot;Imp / Fel Imp&amp;quot;,
						&amp;quot;Voidwalker / Voidlord&amp;quot;,
						&amp;quot;Felhunter / Observer&amp;quot;,
						&amp;quot;Succubus / Shivarra&amp;quot;,
						&amp;quot;Felguard / Wrathguard&amp;quot;,
					},
					width	= 115,
				},
			},
			{ 	name	= &amp;quot;Grimoire Pet&amp;quot;,
			    tooltip = &amp;quot;Select the Grimoire of Service pet you would like the profile to use.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select the Grimoire of Service pet you would like the profile to use.&amp;quot;,
					values	= {
						&amp;quot;Imp / Fel Imp&amp;quot;,
						&amp;quot;Voidwalker / Voidlord&amp;quot;,
						&amp;quot;Felhunter / Observer&amp;quot;,
						&amp;quot;Succubus / Shivarra&amp;quot;,
						&amp;quot;Felguard / Wrathguard&amp;quot;,
					},
					width	= 115,
				},
			},
		},
	
	}
	SOAPBOX_DEMO_DEF = PQI:AddRotation(Defensive)
	SOAPBOX_DEMO_OFF = PQI:AddRotation(Offensive)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Initialize---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Initialize Load-Once Settings
if PQR_RotationStarted then
	PQR_RotationStarted = false

	
	
	if modtime == nil then
	modtime = 0
end
	 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
	
	  ----------------
  --Nova  Checks--
  ----------------
  if Nova_Cooldowns == 1 then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) 
  else
  
  end
  
  if (Nova_AOE == nil or Nova_AOE == 0) and (Nova_Cleave == nil or Nova_Cleave == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_Cleave == 1 then	
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;) end
  if GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
  	if not PQI_SoapboxOffensiveSettings_AoESelection_enable then
   		if Nova_Chaos == 1 then
  		PQR_WriteToChat(&amp;quot;Chaos Wave: \124cFF15E615Active&amp;quot;) 
  		else
  		PQR_WriteToChat(&amp;quot;Chaos Wave: \124cFFE61515Disabled&amp;quot;)
  		end
 	 else PQR_WriteToChat(&amp;quot;Chaos Wave: \124cFF15E615Active&amp;quot;) 
  	end
  end
  

	if not SoapboxDemoFirstStart then
		-- Initialize Event Tracker
		local Demon = CreateFrame(&amp;quot;Frame&amp;quot;)
		Demon:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
		Demon:SetScript(&amp;quot;OnEvent&amp;quot;, DemonFrame_OnEvent)
		Demon:Show()
		
		-- Demonology Settings
		Trinket = 0
		Burn = false
		DrainLife = false
		HealthFunnel = false
		NoBuff = false
		Refresh = false
		-- Initialize Dot Tracker
		if not DoTs then DoTs = {} end
		
		SoapboxDemoFirstStart = true
	end
end



-- Initialize Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-- Initialize Talents
if IsPlayerSpell(137587) then KJC = true else KJC = false end

EA = 1 
MP = 2

-- Initialize Trinkets
local itemCheck = itemCheck
local Vision = Vision
if itemCheck(Vision) == 1 then UVLS = true else UVLS = false end


------------------------------------------------------------
-- Misc. Checks
------------------------
-- Reset DoT Tracker if we&amp;apos;re not in combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and #DoTs &amp;gt; 0 then
	DoTs = {}
end


if IsMounted() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---2.Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local DSStart, DSDuration = GetSpellCooldown(113861)
DSCD = DSStart + DSDuration - GetTime()
local ZerkStart, ZerkDuration = GetSpellCooldown(26297)
ZerkCD = ZerkStart + ZerkDuration - GetTime()

Embers = UnitPower(&amp;quot;player&amp;quot;, SPELL_POWER_BURNING_EMBERS, true) / 10

Fury = UnitPower(&amp;quot;player&amp;quot;, 15)

DarkSoul,_,_,_,_,_,DarkSoultimer = UnitBuffID(&amp;quot;player&amp;quot;,113861)

Tempus,_,_,_,_,_,Tempustimer = UnitBuffID(&amp;quot;player&amp;quot;,137590) 

Cor,_,_,_,_,_,Cortimer = UnitDebuffID(&amp;quot;target&amp;quot;,172,&amp;quot;PLAYER&amp;quot;)

Shadowflame,_,_,_,_,_,Shadowflametimer = UnitDebuffID(&amp;quot;target&amp;quot;,47960,&amp;quot;PLAYER&amp;quot;)
---Invoke Xuen Cooldown---
SFCD = select(3,GetSpellCharges(105174)) + select(4,GetSpellCharges(105174)) - GetTime()

---Bloodlust Check---
Bloodlust = UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
or UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)



ShadowCount = select(4,UnitDebuffID(&amp;quot;target&amp;quot;,47960,&amp;quot;PLAYER&amp;quot;))

Doom,_,_,_,_,_,Doomtimer = UnitDebuffID(&amp;quot;target&amp;quot;,603,&amp;quot;PLAYER&amp;quot;)


Playermana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
Pethealth = 100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)


---Imp Swarm Cooldown---
local ISStart, ISDuration = GetSpellCooldown(104316)
ISCD = ISStart + ISDuration - GetTime()</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Combat Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_CombatPause_enable then return false end
 
if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or MindControlled(&amp;quot;player&amp;quot;) 
or UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Shadowbolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
local moltenCore = select(4,UnitBuffID(&amp;quot;player&amp;quot;,122351))




if cTime &amp;lt; 7 then return false end
-- Omni Mode AOE check
if Nova_AOE == 1 then return false end

-- Don&amp;apos;t cast while in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end

-- Can&amp;apos;t run and cast
if not KJC then
	if PQR_IsMoving(0.3) then return false end
end



if TargetValidation(&amp;quot;target&amp;quot;,686)
    and GetSpellBookItemName(GetSpellInfo(686)) == GetSpellInfo(686)
then
	CastSpellByName(GetSpellInfo(686),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cancel Cast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Cancel unwanted casts, channels or buffs.
------------------------

-- Soul Fire
local castTime = select(7,GetSpellInfo(6353))/1000
if castTime &amp;gt; 2.5 and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(6353)
	and GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then RunMacroText(&amp;quot;/stopcasting&amp;quot;) return true end

if Nova_AOE == 1 then return false end

-- Harvest Life
local PQ_HL = PQ_HL
if Nova_AOE ~= 1 and IsPlayerSpell(108371) then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(108371) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) end
end

-- Hellfire
if Nova_AOE ~= 1 and IsPlayerSpell(1949) then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(1949) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) end
end

-- Metamorphosis
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then CancelShapeshiftForm() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Aura of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local AOTE,_,_,_,_,_,AOTEtimer = UnitDebuffID(&amp;quot;target&amp;quot;,116202,&amp;quot;PLAYER&amp;quot;)

-- Avoid out of combat usage
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

if Fury &amp;lt; 150 then return false end


-- Don&amp;apos;t use in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Nova_AOE ~= 1 then return false end

-- Cast when ready
if PQR_SpellAvailable(116202) then
	if not UnitBuffID(&amp;quot;player&amp;quot;,116202) then CastSpellByName(GetSpellInfo(116202),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Carrion Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disabled in PQI, don&amp;apos;t use
if not PQI_SoapboxOffensiveSettings_AutoCarrionSwarm_enable then return false end

if Nova_AOE ~= 1 then return false end

if Nova_Hold == 1 then return false end

if Fury &amp;lt; 50 then return false end


-- Can only be used during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Disable while on cooldown
if not PQR_SpellAvailable(103967) then return false end

if TargetValidation(&amp;quot;target&amp;quot;, 6353) then
	-- Make sure we&amp;apos;re in melee range of the unit
	if not CheckInteractDistance(&amp;quot;target&amp;quot;,1) then return false end
	
	-- Make sure we&amp;apos;re facing the unit
	if not PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then return false end
	
	CastSpellByName(GetSpellInfo(103967),nil) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Chaos Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local v=PQI_SoapboxOffensiveSettings_AoESelection_value or 2

-- Disabled in PQI
if not PQI_SoapboxOffensiveSettings_AoESelection_enable then 
	if Nova_Chaos ~= 1 then 
	return false end
end

if PQI_SoapboxOffensiveSettings_AoESelection_enable then 

if Fury &amp;lt; 80 then return false end

-- PQInterface Settings
if v == 2 then return false end end

-- Disable outside of AoE Mode.
if Nova_AOE == 1 then
	-- Pause the usage of this ability.
	if Nova_Hold == 1 then return false end
	
	-- No Hand of Gul&amp;apos;dan please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,6353) and PQR_SpellAvailable(124916) 
		and GetSpellCharges(124916) &amp;gt; 0 then
			CastSpellByName(GetSpellInfo(124916),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Touch of Chaos (Cleave)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Fury &amp;lt; 40 then return false end

if not PQR_SpellAvailable(103964) then return false end

if Nova_Cleave == 1 then
	local cleaveTargets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}
	for i=1,#cleaveTargets do
		local cleaveCor,_,_,_,_,_,cleaveCorTimer = UnitDebuffID(cleaveTargets[i],172,&amp;quot;PLAYER&amp;quot;)
		
		if not cleaveCor then return false end
		
		if TargetValidation(cleaveTargets[i],6353) then
			if cleaveCor then
				if cleaveCorTimer - GetTime() &amp;lt; 16 then
					CastSpellByName(GetSpellInfo(103964),cleaveTargets[i]) return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Doom (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))
local Doom2,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,603,&amp;quot;PLAYER&amp;quot;)

-- Ability disabled in PQI
if not PQI_SoapboxOffensiveSettings_MouseoverDotting_enable then return false end

if Fury &amp;lt; 60 then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(603) then return false end

if TargetValidation(&amp;quot;mouseover&amp;quot;,6353) and not NoDoom(&amp;quot;mouseover&amp;quot;) then
	local id = UnitGUID(&amp;quot;mouseover&amp;quot;)
	
	if UnitHealthMax(&amp;quot;mouseover&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 10 then return false end
	
	if Doom2 then
		for i=1,#DoTs do
			if DoTs[i].guid == id then
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
					if DoTs[i].crit == true then
						if DoTs[i].doom_tick_every &amp;gt; 12.50 then
							if doomTimer - GetTime() &amp;lt; 62 * 1.5 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true
							elseif doomTimer - GetTime() &amp;lt; 62 * 1.3 * EA then CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true
							end
						elseif doomTimer - GetTime() &amp;lt; 62 * 1.3 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true
						end
					end
					if DoTs[i].crit == false then
						CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true
					end
				else
					if DoTs[i].crit == true then
						if doomTimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true end
					end
					if DoTs[i].crit == false then
						if SoapboxPower(603) &amp;gt; DoTs[i].doomPower then
							if doomTimer - GetTime() &amp;lt; 60 * 1.3 * EA / MP then CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true end
						end
						if doomTimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true end
					end
				end
			end
		end
	else CastSpellByName(GetSpellInfo(603),&amp;quot;mouseover&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Harvest Life</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

-- Harvest Life is not a selected talent!
if not IsPlayerSpell(108371) then return false end

-- Don&amp;apos;t cast in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Not available for some reason
if not PQR_SpellAvailable(108371) then return false end

if Nova_AOE ~= 1 then return false end

-- Movement..
if PQR_IsMoving(0.3) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,6353) then
	CastSpellByName(GetSpellInfo(108371),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Immolation Aura</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end
--if UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then return false end
if not PQR_SpellAvailable(104025) then return false end



if Nova_AOE == 1 then
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,104025) then
			CastSpellByName(GetSpellInfo(104025),&amp;quot;player&amp;quot;) return true
		end
	end
else
	if Nova_Immo == 1 then
		if TargetValidation(&amp;quot;target&amp;quot;,6353) then
			if not UnitBuffID(&amp;quot;player&amp;quot;,104025) then
				CastSpellByName(GetSpellInfo(104025),&amp;quot;player&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Void Ray</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQR_SpellAvailable(115422) then return false end

if Fury &amp;lt; 40 then return false end

if Nova_AOE ~= 1 then return false end


if TargetValidation(&amp;quot;target&amp;quot;,6353) then
	-- When we don&amp;apos;t use Harvest Life, nuke!
	if not IsPlayerSpell(108371) then CastSpellByName(GetSpellInfo(115422),&amp;quot;target&amp;quot;) return true end
	
	-- Refresh Corruption when we use Harvest Life
	---if Cor then
		---if Cortimer - GetTime() &amp;lt; 25 then
			---CastSpellByName(GetSpellInfo(115422),&amp;quot;target&amp;quot;)
			---return true
		---end
	---end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Doom (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))

-- Ability disabled in PQI
if not PQI_SoapboxOffensiveSettings_BossDotting_enable then return false end	


-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Fury &amp;lt; 60 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(603) then return false end

for i=1,5 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	local Doom2,_,_,_,_,_,doomTimer = UnitDebuffID(bossUnit,603,&amp;quot;PLAYER&amp;quot;)
	
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,6353) and not NoDoom(bossUnit) then
		local id = UnitGUID(bossUnit)
		
		if Doom2 then
			for i=1,#DoTs do
				if DoTs[i].guid == id then
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						if DoTs[i].crit == true then
							if DoTs[i].doom_tick_every &amp;gt; 12.50 then
								if doomTimer - GetTime() &amp;lt; 62 * 1.5 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),bossUnit) return true
								elseif doomTimer - GetTime() &amp;lt; 62 * 1.3 * EA then CastSpellByName(GetSpellInfo(603),bossUnit) return true
								end
							elseif doomTimer - GetTime() &amp;lt; 62 * 1.3 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),bossUnit) return true
							end
						end
						if DoTs[i].crit == false then
							CastSpellByName(GetSpellInfo(603),bossUnit) return true 
						end
					else
						if DoTs[i].crit == true then
							if doomTimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),bossUnit) return true end
						end
						if DoTs[i].crit == false then
							if SoapboxPower(603) &amp;gt; DoTs[i].doomPower then
								if doomTimer - GetTime() &amp;lt; 60 * 1.3 * EA / MP then CastSpellByName(GetSpellInfo(603),bossUnit) return true end
							end
							if doomTimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),bossUnit) return true end
						end
					end
				end
			end
		else CastSpellByName(GetSpellInfo(603),bossUnit) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Doom (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))
local Doom2,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;focus&amp;quot;,603,&amp;quot;PLAYER&amp;quot;)

-- Ability disabled in PQI
if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end

if Fury &amp;lt; 60 then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(603) then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,6353) and not NoDoom(&amp;quot;focus&amp;quot;) then
	local id = UnitGUID(&amp;quot;focus&amp;quot;)
	
	if UnitHealthMax(&amp;quot;focus&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 10 then return false end
	
	if Doom2 then
		for i=1,#DoTs do
			if DoTs[i].guid == id then
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
					if DoTs[i].crit == true then
						if DoTs[i].doom_tick_every &amp;gt; 12.50 then
							if doomTimer - GetTime() &amp;lt; 62 * 1.5 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true
							elseif doomTimer - GetTime() &amp;lt; 62 * 1.3 * EA then CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true
							end
						elseif doomTimer - GetTime() &amp;lt; 62 * 1.3 * EA and (UnitBuffID(&amp;quot;player&amp;quot;, 137590) or Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297)) then CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true
						end
					end
					if DoTs[i].crit == false then
						CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true 
					end
				else
					if DoTs[i].crit == true then
						if doomTimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true end
					end
					if DoTs[i].crit == false then
						if SoapboxPower(603) &amp;gt; DoTs[i].doomPower then
							if doomTimer - GetTime() &amp;lt; 60 * 1.3 * EA / MP then CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true end
						end
						if doomTimer - GetTime() &amp;lt; DoTs[i].doom_tick_every then CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true end
					end
				end
			end
		end
	else CastSpellByName(GetSpellInfo(603),&amp;quot;focus&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3a. Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Cleave&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Doomguard&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Immo&amp;quot;, 					Var2 = 1		},	
		{	Var1 = 0,	Text = &amp;quot;Hold&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Meta&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;TierTwo&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;TierThree&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;TierSix&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Fear&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Chaos&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Focus&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Mouse&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Boss&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Fel&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Howl&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Burn&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;EmberBurn&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Rain&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AutoRain&amp;quot;,				Var2 = 1		}
	}	

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------

---------------------------------------------------------------------------------------------------
----------------------------- Big Thanks to Ninjaderp for Color Coding ----------------------------
---------------------------------------------------------------------------------------------------

if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
			xrn:message(&amp;quot;|cff9F82A2Cooldowns - Active.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
		else			
			xrn:message(&amp;quot;|cff9920D0Cooldowns - Inactive.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
		end
	end
	SLASH_CLEAVE1 = &amp;quot;/cleave&amp;quot;
	function SlashCmdList.CLEAVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cleave&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;)
			xrn:message(&amp;quot;\124cA69D1CFFCleave Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		else
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
		xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		end
	end		
	
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFArea of Effect Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		end
	end
	SLASH_IMMO1 = &amp;quot;/immo&amp;quot;
	function SlashCmdList.IMMO(msg, editbox)
	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then return false end
		if not GetCVarBool(&amp;quot;Nova_Immo&amp;quot;) then
			xrn:message(&amp;quot;\124cE96E22FFImmolation Aura - Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Immo&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c853402D4Immolation Aura - Disabled.&amp;quot;) 
			SetCVar(&amp;quot;Nova_Immo&amp;quot;, 0)
		end
	end
	SLASH_DOOMGUARD1 = &amp;quot;/doomguard&amp;quot;
	function SlashCmdList.DOOMGUARD(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Doomguard&amp;quot;) then
			xrn:message(&amp;quot;\124c1E7DEAFFSummon Doomguard - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Doomguard&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c093F7D0FSummon Doomguard - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Doomguard&amp;quot;, 0)
		end
	end
	SLASH_HOLD1 = &amp;quot;/hold&amp;quot;
	function SlashCmdList.HOLD(msg, editbox)
	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then return false end
		if not GetCVarBool(&amp;quot;Nova_Hold&amp;quot;) then
			xrn:message(&amp;quot;\124c58E022FFHand of Guldan / Chaos Wave Disabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Hold&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c2A740CFFHand of Guldan / Chaos Wave Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Hold&amp;quot;, 0)
		end
	end
	SLASH_META1 = &amp;quot;/meta&amp;quot;
	function SlashCmdList.META(msg, editbox)

	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then return false end
		if not GetCVarBool(&amp;quot;Nova_Meta&amp;quot;) then
			xrn:message(&amp;quot;\124cA92FF000Forcing Metamorphosis!&amp;quot;)
			SetCVar(&amp;quot;Nova_Meta&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c53087E00No longer forcing Metamorphosis&amp;quot;)
			SetCVar(&amp;quot;Nova_Meta&amp;quot;, 0)			
		end
	end
		
	
	SLASH_TIERTWO1 = &amp;quot;/tiertwo&amp;quot;
	function SlashCmdList.TIERTWO(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_TierTwo&amp;quot;) then
			xrn:message(&amp;quot;\124cBD5ED2FFTier Two Talent - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierTwo&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c843197FFTier Two Talent - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierTwo&amp;quot;, 0)
		end
	end
		SLASH_TIERTHREE1 = &amp;quot;/tierthree&amp;quot;
	function SlashCmdList.TIERTHREE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_TierThree&amp;quot;) then
			xrn:message(&amp;quot;\124cCE5900FFTier Three Talent - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierThree&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c864615FFTier Three Talent - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierThree&amp;quot;, 0)
		end
	end
		SLASH_TIERSIX1 = &amp;quot;/tiersix&amp;quot;
	function SlashCmdList.TIERSIX(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_TierSix&amp;quot;) then
			xrn:message(&amp;quot;\124c810E0EFFTier Six Talent - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierSix&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c511010FFTier Six Talent - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierSix&amp;quot;, 0)
		end
	end
	SLASH_FEAR1 = &amp;quot;/fear&amp;quot;
	function SlashCmdList.FEAR(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Fear&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFMouseover Fear - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Fear&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFMouseover Fear - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Fear&amp;quot;, 0)
		end
	end
	SLASH_CHAOS1 = &amp;quot;/chaos&amp;quot;
	function SlashCmdList.CHAOS(msg, editbox)
	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then return false end
	if not PQI_SoapboxOffensiveSettings_AoESelection_enable then
		if not GetCVarBool(&amp;quot;Nova_Chaos&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFChaos Wave - Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Chaos&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c4B2C4EFFChaos Wave - Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Chaos&amp;quot;, 0)
		end
	end
	end
	SLASH_FELA1 = &amp;quot;/felf&amp;quot;
	function SlashCmdList.FELA(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Fel&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFFel Flame - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Fel&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFFel Flame - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Fel&amp;quot;, 0)
		end
	end
		SLASH_BURN1 = &amp;quot;/burn&amp;quot;
	function SlashCmdList.BURN(msg, editbox)
		if not IsPlayerSpell(111400) then return false end
		if PQI_SoapboxDefensiveSettings_AutoBurningRush_enable then return false end
		if not GetCVarBool(&amp;quot;Nova_Burn&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFBurning Rush - Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Burn&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFBurning Rush - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Burn&amp;quot;, 0)
		end
	end
	SLASH_HOWL1 = &amp;quot;/howl&amp;quot;
	function SlashCmdList.HOWL(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Howl&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFHowl of Terror - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Howl&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFHowl of Terror - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Howl&amp;quot;, 0)
		end
	end
	SLASH_EMBERBURN1 = &amp;quot;/emberburn&amp;quot;
	function SlashCmdList.EMBERBURN(msg, editbox)
	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 3 then return false end
		if not GetCVarBool(&amp;quot;Nova_EmberBurn&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFEmber Burning - Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_EmberBurn&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFEmber Burning - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_EmberBurn&amp;quot;, 0)
		end
	end
	SLASH_RAIN1 = &amp;quot;/rain&amp;quot;
	function SlashCmdList.RAIN(msg, editbox)
	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 3 then return false end
		if not GetCVarBool(&amp;quot;Nova_Rain&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFRain of Fire - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Rain&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFRain of Fire - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Rain&amp;quot;, 0)
		end
	end
	SLASH_AUTORAIN1 = &amp;quot;/autorain&amp;quot;
	function SlashCmdList.AUTORAIN(msg, editbox)
	if GetSpecialization(&amp;quot;player&amp;quot;) ~= 3 then return false end
		if not GetCVarBool(&amp;quot;Nova_AutoRain&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFAutomatic Rain of Fire - Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_AutoRain&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFAutomatic Rain of Fire - Disabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_AutoRain&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Corruption (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if not PQI_SoapboxOffensiveSettings_BossDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in Demon form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Keep DoTs on bosses when in range
for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	local Cor1,_,_,_,_,_,Cor1Timer = UnitDebuffID(bossUnit,172,&amp;quot;PLAYER&amp;quot;)
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,172) then	
		if T2D(bossUnit) &amp;gt;= 6 then
			if Cor1 then
				if Cor1Timer - GetTime() &amp;lt; 3 then
				CastSpellByName(GetSpellInfo(172),bossUnit)
				return true
				end
			else
			CastSpellByName(GetSpellInfo(172),bossUnit)
			return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Corruption (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Cor2,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;focus&amp;quot;,172,&amp;quot;PLAYER&amp;quot;)

-- Disable focus dotting if we unticked it.
if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on focus
if TargetValidation(&amp;quot;focus&amp;quot;,172) and isMindControledUnit(&amp;quot;focus&amp;quot;) then
	if Cor2 and CorTimer - GetTime() &amp;lt; 4 then
		CastSpellByName(GetSpellInfo(172),&amp;quot;focus&amp;quot;) return true
	end
	if not UnitDebuffID(&amp;quot;focus&amp;quot;,172,&amp;quot;PLAYER&amp;quot;) and T2D(&amp;quot;focus&amp;quot;) &amp;gt;= 6 then
		CastSpellByName(GetSpellInfo(172),&amp;quot;focus&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Corruption (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit
local Cor2,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,172,&amp;quot;PLAYER&amp;quot;)

-- Disable mouseover dotting if we unticked it.
if not PQI_SoapboxOffensiveSettings_MouseoverDotting_enable then return false end

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on mouseover
if TargetValidation(&amp;quot;mouseover&amp;quot;,172) and isMindControledUnit(&amp;quot;mouseover&amp;quot;) then
	if Cor2 and CorTimer - GetTime() &amp;lt; 4 then
		CastSpellByName(GetSpellInfo(172),&amp;quot;mouseover&amp;quot;) return true
	end
	if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,172,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(172),&amp;quot;mouseover&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[UTILITY] Demonic Portal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDefensiveSettings_DemonicTeleport_enable then return false end
if not PQI:IsHotkeys(PQI_SoapboxDefensiveSettings_DemonicTeleport_key) then return false end

-- Demonic Teleport
if not UnitBuffID(&amp;quot;player&amp;quot;,48018) then
	CastSpellByName(GetSpellInfo(48018),&amp;quot;player&amp;quot;) return true
elseif PQR_SpellAvailable(48020) then
	CastSpellByName(GetSpellInfo(48020),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Fel Flame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if KJC then return false end
if not PQR_IsMoving(0.3) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end
if not PQR_SpellAvailable(77799) then return false end
if Nova_AOE == 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,77799) then	
	CastSpellByName(GetSpellInfo(77799),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Hellfire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

-- Demon Form is bad
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end

if Nova_AOE ~= 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,6353) then
	CastSpellByName(GetSpellInfo(1949),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Life Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable when we&amp;apos;re in execute range.
if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then
	if (Fury &amp;lt; 650 and Playermana &amp;lt; 10)
		or (not PQR_SpellAvailable(103958) and GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1)
	then CastSpellByName(GetSpellInfo(1454),&amp;quot;player&amp;quot;) return true end
else
	-- Disable inside Metamorphosis
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end
	
	-- If we have more than 60% Mana, don&amp;apos;t bother tapping.
	if Playermana &amp;gt; 50 then return false end
	
	-- Stop if we&amp;apos;re trying to commit suicide.
	if  Playerhealth &amp;lt; 30 then return false end
	
	-- Life Tap!
	if PQR_SpellAvailable(1454) then
		CastSpellByName(GetSpellInfo(1454),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ENGI] Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Ability disabled in PQI
if not PQI_SoapboxOffensiveSettings_FragBelt_enable then return false end

-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

-- Don&amp;apos;t have Engineering.
if not hasEngi then return false end

local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)

-- Not equipped?
if not IsEquippedItem(Belt) then return false end

-- Don&amp;apos;t use it in Caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Belt) &amp;gt; 0 then return false end

-- Cast Frag Belt on target during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Dark Regeneration</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local v=PQI_SoapboxDefensiveSettings_DarkRegeneration_value

-- Disable ability if we disabled it in PQI
if not PQI_SoapboxDefensiveSettings_DarkRegeneration_enable then return false end

if IsPlayerSpell(108359)
	and PQR_SpellAvailable(108359)
	and Playerhealth &amp;lt;= v
then CastSpellByName(GetSpellInfo(108359),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Curse of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation

-- Disable when in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end

if Nova_AOE == 1 then return false end

-- Not a boss or a special add, ignore.
if not SpecialUnit() then return false end

-- Magic Vulnerability exists on target
if UnitDebuffID(&amp;quot;target&amp;quot;,58410)
	or UnitDebuffID(&amp;quot;target&amp;quot;,108683)
	or UnitDebuffID(&amp;quot;target&amp;quot;,44457)
	or UnitDebuffID(&amp;quot;target&amp;quot;,116202)
	or UnitDebuffID(&amp;quot;target&amp;quot;,1490)
then return false end

-- Cast when no Magic Vulnerability debuff active
if TargetValidation(&amp;quot;target&amp;quot;,1490) then
	CastSpellByName(GetSpellInfo(1490),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_SoapboxDefensiveSettings_Healthstone_enable then return false end

local v=PQI_SoapboxDefensiveSettings_Healthstone_value

if GetItemCount(5512) &amp;gt; 0
	and Playerhealth &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and GetItemCooldown(5512) == 0
then UseItemByName(5512) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Grimoire: Service</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation

if not PQI_SoapboxOffensiveSettings_GrimoirePet_enable then return false end
local v=PQI_SoapboxOffensiveSettings_GrimoirePet_value or 5


-- Don&amp;apos;t use outside of Dark Soul
if not UnitBuffID(&amp;quot;player&amp;quot;,113861) then return false end

-- When GoSup/GoSac is selected, we have nothing here to do.
if IsPlayerSpell(108503) then return false end
if IsPlayerSpell(108499) then return false end

-- Determine which pet we&amp;apos;re summoning.
if v == 1 then petSummon = 111859
	elseif v == 2 then petSummon = 111895
	elseif v == 3 then petSummon = 111897
	elseif v == 4 then petSummon = 111896
	elseif v == 5 then petSummon = 111898 end

-- Try not to spam the ability.
if IsFlying() then return false end
if IsFalling() then return false end
if not PQR_SpellAvailable(petSummon) then return false end

-- Grimoire of Service
if IsPlayerSpell(108501) then
	-- Pause the usage of this ability.
	if Nova_Hold == 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then
		if PQI_SoapboxOffensiveSettings_BossCooldown_enable then
		   if SpecialUnit() then
				CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true
		   end
		else CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Soulstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Soulstone Settings
if not PQI_SoapboxDefensiveSettings_Soulstone_enable then return false end
local v=PQI_SoapboxDefensiveSettings_Soulstone_value or 2

-- Don&amp;apos;t try to cast if we&amp;apos;re moving.
if PQR_IsMoving(0.3) then return false end

-- Stop accessing if we&amp;apos;re casting Soulstone already.
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(20707) then return false end

-- Soulstone: Self
if v == 1 then
    if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	   if PQR_SpellAvailable(20707) then
		  CastSpellByName(GetSpellInfo(20707),&amp;quot;player&amp;quot;) return true
	   end
	end
end

-- Battle Res.
if IsInRaid() then group = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end

-- When we&amp;apos;re in a party/raid with more than 1 member...
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Stop out of combat
		if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

		if PQR_SpellAvailable(20707)
			and UnitIsDeadOrGhost(member)
			and IsSpellInRange(GetSpellInfo(20707),member) == 1 then
				if not IsLineOfSight(member, 3) then return false end
				-- Soulstone: Raid
				if v == 2 then CastSpellByName(GetSpellInfo(20707),member) return true end
				
				-- Soulstone: Tanks &amp; Healers
				if v == 3 then
					if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
						CastSpellByName(GetSpellInfo(20707),member) return true
					end
				end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Potions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Potion during Heroism if user tagged off automatic use
if not PQI_SoapboxOffensiveSettings_AutoPotion_enable then return false end

-- Disable if we have no potions left
if GetItemCount(76093) &amp;lt; 1 then return false end

-- Disable if Potion is on cooldown
if GetItemCooldown(76093) ~= 0 then return false end

-- Disable if we&amp;apos;re not targeting a boss
if not SpecialUnit() then return false end

-- Disable if we don&amp;apos;t have Heroism or T2D is greater than 20 seconds
if not Bloodlust and T2D(&amp;quot;target&amp;quot;) &amp;gt; 20 then return false end

-- At this point, we should just use the potion if all of the above is true
UseItemByName(76093)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_SpellQueueType_enable then return false end
local v=PQI_SoapboxOffensiveSettings_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[HERB] Lifeblood</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit

-- Herbalism&amp;apos;s Lifeblood
Lifeblood = {81708,74497,121279,55428,55480,55500,55501,55502,55503}

for i=1,#Lifeblood do
	if IsPlayerSpell(Lifeblood[i])
		and PQR_SpellAvailable(Lifeblood[i])
		and SpecialUnit()
		and Nova_Cooldowns == 1
	then
		if not PQI_SoapboxOffensiveSettings_BossCooldown_enable then
			CastSpellByName(GetSpellInfo(Lifeblood[i]),&amp;quot;player&amp;quot;)
			return true
		else
			if SpecialUnit() then
				CastSpellByName(GetSpellInfo(Lifeblood[i]),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Command Demon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- we&amp;apos;re using GoSac, do nothing
if IsPlayerSpell(108503) then return false end

-- Pause the usage of this ability.
if Nova_Hold == 1 then return false end

-- Autocast Pursuit
if not select(2,GetSpellAutocast(30151)) then
	EnableSpellAutocast(GetSpellInfo(30151))
end
-- Autocast Felguard: Legion Strike
if not select(2,GetSpellAutocast(30213)) then
	EnableSpellAutocast(GetSpellInfo(30213))
end
-- Autocast Wrathguard: Mortal Cleave
if not select(2,GetSpellAutocast(115625)) then
	EnableSpellAutocast(GetSpellInfo(115625))
end

-- Disable Threatening Presence when we&amp;apos;re in a instance group/raid
if not PQI_SoapboxDefensiveSettings_ThreateningPresence_enable then
	if select(2,GetSpellAutocast(134477)) then
		DisableSpellAutocast(GetSpellInfo(134477))
	end
else
	if not select(2,GetSpellAutocast(134477)) then
		EnableSpellAutocast(GetSpellInfo(134477))
	end
end

-- Felstorm
if IsPlayerSpell(108501) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- Wrathstorm
if IsPlayerSpell(108499) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		if PQR_SpellAvailable(115831) and IsSpellInRange(GetSpellInfo(115625),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119898),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- We&amp;apos;ve not yet learned any Level 75 talents, fallback.
if UnitLevel(&amp;quot;player&amp;quot;) &amp;gt;= 48 and UnitLevel(&amp;quot;player&amp;quot;) &amp;lt;= 75 then
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitExists(&amp;quot;target&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1 
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[UTILITY] Soulstone Mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;mouseover&amp;quot;) 
	and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
	and UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)     
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
	and IsSpellInRange(GetSpellInfo(20707),&amp;quot;mouseover&amp;quot;)==1 
then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;) == 1 and PQR_SpellAvailable(20707) then
		CastSpellByName(GetSpellInfo(20707),&amp;quot;mouseover&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[UTILITY] Fear Mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Fear ~= 1 then return false end


-- Fear
if UnitExists(&amp;quot;mouseover&amp;quot;) and IsSpellInRange(GetSpellInfo(5782), &amp;quot;mouseover&amp;quot;) == 1 then
	CastSpellByName(GetSpellInfo(5782),&amp;quot;mouseover&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Doomguard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQI Setting integration
if Doom and (not IsPlayerSpell(56242) or (IsPlayerSpell(56242) and ISCD &amp;gt; 1)) then
if Nova_Doomguard == 1 then
	if IsPlayerSpell(108499) then
		if PQR_SpellAvailable(112927) then 
		CastSpellByName(GetSpellInfo(112927),&amp;quot;target&amp;quot;)
		return true 
		end
	elseif PQR_SpellAvailable(18540) then 
	CastSpellByName(GetSpellInfo(18540),&amp;quot;target&amp;quot;) 
	return true 
	end
end
end

if PQI_SoapboxOffensiveSettings_AutoDoomguard_enable then
   if Targethealth &amp;lt; 20 and ((T2D(&amp;quot;target&amp;quot;) &amp;lt; 35 and NOT2D == false) or UnitBuffID(&amp;quot;player&amp;quot;,113861) or Bloodlust) then
      if IsPlayerSpell(108499) then
	     if PQR_SpellAvailable(112927) then 
	     CastSpellByName(GetSpellInfo(112927),&amp;quot;target&amp;quot;) 
	     return true 
	     end
      elseif PQR_SpellAvailable(18540) then 
      CastSpellByName(GetSpellInfo(18540),&amp;quot;target&amp;quot;) 
      return true
      end
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Drain Life</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local DL = 689

local minHP = PQI_SoapboxDefensiveSettings_BeginDrainLifeat_value or 35
local maxHP = PQI_SoapboxDefensiveSettings_CancelDrainLifeat_value or 75

-- Harvest Life replaces Drain Life...
if IsPlayerSpell(108371) then DL = 108371 else DL = 689 end

-- Disabled in PQInterface
if not PQI_SoapboxDefensiveSettings_BeginDrainLifeat_enable then return false end

if Playerhealth &amp;gt;= maxHP then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(DL) then
		DrainLife = false
		RunMacroText(&amp;quot;/spellstopcasting&amp;quot;)
	end
	return false
end
if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(DL) then return true end

if PQR_IsMoving(0.3) then return false end

if not PQR_SpellAvailable(DL) then return false end

-- Heal ourself
if TargetValidation(&amp;quot;target&amp;quot;,DL) and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	if (Playerhealth &amp;lt; minHP) or DrainLife then
		DrainLife = true
		CastSpellByName(GetSpellInfo(DL),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Create Healthstone</Name><Default>false</Default><SpellID>6201</SpellID><Actions></Actions><Lua>local getHealthstoneCharges = GetItemCount(5512, nil, true)

-- Don&amp;apos;t spam the Ability
if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then return false end

-- Can&amp;apos;t run and cast
if PQR_IsMoving(0.3) then return false end

-- Create some healthstones!
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and getHealthstoneCharges &amp;lt; 3 then
	return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Grimoire: Service Low</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation

if not PQI_SoapboxOffensiveSettings_GrimoirePet_enable then return false end
local v=PQI_SoapboxOffensiveSettings_GrimoirePet_value or 5


-- Don&amp;apos;t use outside of Dark Soul
if cTime &amp;gt; 9 and not UnitBuffID(&amp;quot;player&amp;quot;,113861) then return false end

-- When GoSup/GoSac is selected, we have nothing here to do.
if IsPlayerSpell(108503) then return false end
if IsPlayerSpell(108499) then return false end

-- Determine which pet we&amp;apos;re summoning.
if v == 1 then petSummon = 111859
	elseif v == 2 then petSummon = 111895
	elseif v == 3 then petSummon = 111897
	elseif v == 4 then petSummon = 111896
	elseif v == 5 then petSummon = 111898 end

-- Try not to spam the ability.
if IsFlying() then return false end
if IsFalling() then return false end
if not PQR_SpellAvailable(petSummon) then return false end

-- Grimoire of Service
if IsPlayerSpell(108501) then
	-- Pause the usage of this ability.
	if Nova_Hold == 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then
		if PQI_SoapboxOffensiveSettings_BossCooldown_enable then
		   if SpecialUnit() then
				CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true
		   end
		else CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Grimore: Sacrifice</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

-- Buff yourself with Sacrifice
if PQI_SoapboxOffensiveSettings_GrimoirePet_enable then
	local v=PQI_SoapboxOffensiveSettings_GrimoirePet_value or 5
	
	-- When GoSup/GoServ is selected, we have nothing here to do.
	if IsPlayerSpell(108501) then return false end
	if IsPlayerSpell(108499) then return false end
	
	-- Determine which pet we&amp;apos;re summoning.
	if v == 1 then petSummon = 688
		elseif v == 2 then petSummon = 697
		elseif v == 3 then petSummon = 691
		elseif v == 4 then petSummon = 712
		elseif v == 5 and GetSpecialization(&amp;quot;player&amp;quot;) == 2 then petSummon = 30146 
		elseif v == 5 and GetSpecialization(&amp;quot;player&amp;quot;) == 3 then petSummon = 691 end
		
	-- Try not to spam the ability.
	if IsFlying() then return false end
	if IsFalling() then return false end
	if not UnitBuffID(&amp;quot;player&amp;quot;,108503) then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(petSummon) then
			if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
				SpellStopCasting()
			end
			return false
		end
	end
	
	-- Grimoire of Sacrifice
	if IsPlayerSpell(108503) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,108503) then
			if not UnitExists(&amp;quot;pet&amp;quot;) then
				CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
			else
				CastSpellByName(GetSpellInfo(108503),&amp;quot;player&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[UTILITY] Howl of Terror</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Howl ~= 1 then return false end



if IsPlayerSpell(5484)
	and PQR_SpellAvailable(5484)
then CastSpellByName(GetSpellInfo(5484),nil) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Mortal Coil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local v=PQI_SoapboxDefensiveSettings_MortalCoil_value

-- Disable ability if we disabled it in PQI
if not PQI_SoapboxDefensiveSettings_MortalCoil_enable then return false end

if not PQR_SpellAvailable(6789) then return false end

-- Mortal Coil
if IsPlayerSpell(6789)
	and TargetValidation(&amp;quot;target&amp;quot;,6353)
	and Playerhealth &amp;lt;= v
then CastSpellByName(GetSpellInfo(6789),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Twilight Ward</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Not yet learned
if not IsPlayerSpell(6229) then return false end

-- Not yet off Cooldown
if not PQR_SpellAvailable(6229) then return false end

-- Cast with Dark Bargain
if UnitDebuffID(&amp;quot;player&amp;quot;,110913) then CastSpellByName(GetSpellInfo(6229),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[UTILITY] Unbound Will</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_SpellAvailable(108482) then return false end

if UnitIsCharmed(&amp;quot;player&amp;quot;) or UnitIsPossessed(&amp;quot;player&amp;quot;) and Playerhealth &amp;gt;= 50 then
	CastSpellByName(GetSpellInfo(108482),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Ember Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_SoapboxDefensiveSettings_EmberTap_enable then
	if Playerhealth &amp;lt; PQI_SoapboxDefensiveSettings_EmberTap_value
		and PQR_SpellAvailable(114635)
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 then
		CastSpellByName(tostring(GetSpellInfo(114635))) 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Soulshatter</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxDefensiveSettings_Soulshatter_enable then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 2 then return false end
if not PQR_SpellAvailable(29858) then return false end

if UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == 3 then
	CastSpellByName(GetSpellInfo(29858),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURVIVAL] Symbiosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local v=PQI_SoapboxDefensiveSettings_Symbiosis_value

-- Don&amp;apos;t cast during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Don&amp;apos;t continue if we disabled automatic usage in PQI
if not PQI_SoapboxDefensiveSettings_Symbiosis_enable then return false end

-- We don&amp;apos;t have Symbiosis
if not UnitBuffID(&amp;quot;player&amp;quot;,110490) then return false end

-- Rejuvenation is on a CD
if not PQR_SpellAvailable(113295) then return false end

-- Cast Rejuvenation on Pet
if UnitExists(&amp;quot;pet&amp;quot;) and Pethealth &amp;lt;= v then
	CastSpellByName(GetSpellInfo(113295),&amp;quot;pet&amp;quot;) return true
end

-- Cast Rejuvenation on Self
if Playerhealth &amp;lt;= v then
	CastSpellByName(GetSpellInfo(113295),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ENGI] Synapse Springs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_SynapseSprings_enable then return false end


local TargetValidation = TargetValidation
local Gloves = GetInventoryItemID(&amp;quot;player&amp;quot;, 10)
local DSCD = GetSpellCooldown(113861) + select(2,GetSpellCooldown(113861)) - GetTime()

-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

-- Don&amp;apos;t have Engineering.
if not hasEngi then return false end

-- Item not equipped?
if not IsEquippedItem(Gloves) then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Gloves) &amp;gt; 0 then return false end

-- Don&amp;apos;t use if Dark Soul is ready!
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
	if PQR_SpellAvailable(113861) or DSCD &amp;lt; 30 then return false end
elseif PQR_SpellAvailable(113858) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 3 then
return false end

-- Cast Engineering Gloves
if not TargetValidation(&amp;quot;target&amp;quot;,1490) then return false end

UseItemByName(Gloves)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Tier 2 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disabled in PQI
if Nova_TierTwo ~= 1 then return false end


-- Demonic Breath
if IsPlayerSpell(47897)
	and PQR_SpellAvailable(47897)
then CastSpellByName(GetSpellInfo(47897),nil) return true end

-- Mortal Coil
if IsPlayerSpell(6789)
	and PQR_SpellAvailable(6789)
then CastSpellByName(GetSpellInfo(6789),&amp;quot;target&amp;quot;) return true end

-- Shadowfury
if IsPlayerSpell(30283)
	and PQR_SpellAvailable(30283)
then
	CastSpellByID(30283)
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Doomguard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_SoapboxOffensiveSettings_AutoDoomguard_enable then

	if UnitLevel(&amp;quot;target&amp;quot;) == -1 then
		
		if (select(2,GetTalentRowSelectionInfo(5)) == 14 
			or select(2,GetTalentRowSelectionInfo(5)) == 15) 
			and select(2,GetSpellCooldown(18540)) &amp;lt; 2  then 
			
				if UnitBuffID(&amp;quot;player&amp;quot;,32182)
					or Nova_Doomguard == 1
					or UnitBuffID(&amp;quot;player&amp;quot;,2825) --Bloodlust
					or UnitBuffID(&amp;quot;player&amp;quot;,80353) --Timewarp
					--or Targethealth &amp;lt; 21 
					then
					CastSpellByName(tostring(GetSpellInfo(18540)))
					return true
				end
		end
		
		if select(2,GetTalentRowSelectionInfo(5)) == 13
			and select(2,GetSpellCooldown(112927)) &amp;lt; 2 then
			
				if UnitBuffID(&amp;quot;player&amp;quot;,32182)
					or Nova_Doomguard == 1
					or UnitBuffID(&amp;quot;player&amp;quot;,2825) --Bloodlust
					or UnitBuffID(&amp;quot;player&amp;quot;,80353) --Timewarp
				--	or Targethealth &amp;lt; 21 
					then
					CastSpellByName(tostring(GetSpellInfo(112927)))
				end
		
		end
		
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Fel Flame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
if Playermana &amp;lt; 40 then return false end
if KJC then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end
if not PQR_SpellAvailable(77799) then return false end
if Nova_AOE == 1 and GetSpecialization(&amp;quot;player&amp;quot;) == 2 then return false end

if PQR_IsMoving(0.3) then 
if TargetValidation(&amp;quot;target&amp;quot;,77799) then	
	CastSpellByName(GetSpellInfo(77799),&amp;quot;target&amp;quot;) return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---5. Success---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
  			if (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
  				 if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
  				 local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
  				 	if select(12, ...) == 116858 and UnitBuffID(&amp;quot;player&amp;quot;,117896) and BDStacks &amp;gt; 2 then
  				 	print(1)
  				 	end
  				 end
  			end
  			if ((type==&amp;quot;SPELL_CAST_START&amp;quot;) or (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;)) and (select(12, ...) == 47897 or select(12, ...) == 30283 or select(12, ...) == 6789)  and Nova_TierTwo == 1 then
  			SetCVar(&amp;quot;Nova_TierTwo&amp;quot;, 0)
			PQR_WriteToChat(&amp;quot;Tier 2 Talent: \124cFFE61515Casted&amp;quot;)
			end
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
             --or (type==&amp;quot;SPELL_CAST_START&amp;quot;) 
             then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
        if select(12, ...) == 116858 then
			if ChaosBolt == nil or ChaosBolt == false then
			ChaosBolt = true
			end
		elseif select(12, ...) ~= 116858 and ChaosBolt == true then
		ChaosBolt = false
		elseif select(12, ...) == 348 or select(12, ...) == 108686 then
			if Immo == nil or Immo == false then
			PQR_DelayRotation(0.3)
			Immo = true
			--PQR_WriteToChat(&amp;quot;Immolate: \124cFFE61515Casted&amp;quot;) 
			end
		elseif select(12, ...) ~= 348 and select(12, ...) ~= 108686 and Immo == true then
		Immo = false
		elseif (select(12, ...) == 5740 or select(12, ...) == 104232) and Nova_Rain == 1 then
		SetCVar(&amp;quot;Nova_Rain&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Rain of Fire: \124cFFE61515Casted&amp;quot;) 
		elseif select(12, ...) == 5782 and Nova_Fear == 1 then
		SetCVar(&amp;quot;Nova_Fear&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Fear: \124cFFE61515Casted&amp;quot;) 
		elseif select(12, ...) == 108505 and Nova_TierSix == 1 then
		SetCVar(&amp;quot;Nova_TierSix&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Archimonde&amp;apos;s Vengeance: \124cFFE61515Casted&amp;quot;)
		elseif (select(12, ...) == 108415 or select(12, ...) == 108416 or select(12, ...) == 110913) and Nova_TierThree == 1 then
		SetCVar(&amp;quot;Nova_TierThree&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Tier 3 Talent: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 104773 and Nova_End == 1 then
		SetCVar(&amp;quot;Nova_End&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Unending Resolve: \124cFFE61515Casted&amp;quot;)
		elseif (select(12, ...) == 18540 or select(12, ...) == 112927) and Nova_Doomguard == 1 then
		SetCVar(&amp;quot;Nova_Doomguard&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Doomguard / Terrorguard: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 5484 and Nova_Howl == 1 then
		SetCVar(&amp;quot;Nova_Howl&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Howl of Terror: \124cFFE61515Casted&amp;quot;)
      end
     end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[RAID] Immune Bosses</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Let&amp;apos;s try and detect immunities
if UnitBuffID(&amp;quot;target&amp;quot;,116994) or UnitBuffID(&amp;quot;target&amp;quot;,122540) or UnitBuffID(&amp;quot;target&amp;quot;,123250) or UnitBuffID(&amp;quot;target&amp;quot;,106062) or UnitBuffID(&amp;quot;target&amp;quot;,110945)
	then return false end
	
-- Cancel spell casts or channels on Silences
if UnitExists(&amp;quot;boss1&amp;quot;) or UnitExists(&amp;quot;target&amp;quot;) then
	if UnitCastingInfo(&amp;quot;boss1&amp;quot;) == GetSpellInfo(138763) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137457) then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) return false end
		return true
	end
end
	
-- Twin Consorts (Immune while channeling Nuclear Inferno and Tidal Force)
if UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137531) or UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137491) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(138763)
	then return false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Demonic Slash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end

if not PQR_SpellAvailable(114175) then return false end

if Nova_AOE == 1 and Fury &amp;gt; 200 then return false end

if UnitExists(&amp;quot;target&amp;quot;) then
if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 14 then
	CastSpellByName(GetSpellInfo(114175),&amp;quot;target&amp;quot;) return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Void Ray</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end

if not PQR_SpellAvailable(115422) then return false end


	if Fury &amp;gt; 850 then
		Burn = true
	end


	if Fury &amp;lt;= 400 then
	 Burn = false 
	  end 

if Burn then 
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then
	-- When we don&amp;apos;t use Harvest Life, nuke!
		if not IsPlayerSpell(108371) then CastSpellByName(GetSpellInfo(115422),&amp;quot;target&amp;quot;) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Immolation Aura</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end
--if UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then return false end
if not PQR_SpellAvailable(104025) then return false end

if Nova_Immo ~= 1 then return false end

if not Burn then return false end

if Burn and Fury &amp;gt; 600 then 
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,104025) then
			CastSpellByName(GetSpellInfo(104025),&amp;quot;player&amp;quot;) return true
		end
	end
end





	if Fury &amp;gt; 850 then
		Burn = true
	end


	if Fury &amp;lt;= 400 then
	 Burn = false 
	  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Provocation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end

if not PQI_SoapboxDefensiveSettings_DarkAptheosisProvoke_enable then return false end

if not PQR_SpellAvailable(97827) then return false end

if dummy() then return false end

if UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= 3 then
	CastSpellByName(GetSpellInfo(97827),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Fury Ward</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end
if not PQI_SoapboxDefensiveSettings_FuryWard_enable then return false end

local v = PQI_SoapboxDefensiveSettings_FuryWard_value or 50

if Playerhealth &amp;lt;= v and Fury &amp;gt; 200 and not UnitBuffID(&amp;quot;player&amp;quot;, 119839) and GetSpellCharges(119839) &amp;gt; 0
then CastSpellByName(GetSpellInfo(119839),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Soul Fire High</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,122355)

local Nova_AOE = Nova_AOE
local TargetValidation = TargetValidation


if PQR_SpellAvailable(105174) and GetSpellCharges(105174) &amp;gt; 0 then
	if cTime &amp;lt; 10 then	
	return false
	end
end

-- Omni Mode AOE Check
if Nova_AOE == 1 then return false end

-- Don&amp;apos;t cast while in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end

-- No Molten Core buffs..
if not name then return false end 
if name and count==1 then return false end

if PQR_IsMoving(0.3) then return false end

-- Soul Fire is on CD
if not PQR_SpellAvailable(6353) then return false end

if not PQI_SoapboxOffensiveSettings_HighRegenRotation_enable
or (name and count &amp;gt; 9)
or DarkSoul then
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Soul Fire High</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,122355)

if not SpecialUnit() then return false end

if not name and Fury &amp;lt; 160 then return false end
if Fury &amp;lt; 80 then return false end

if Nova_AOE == 1 then return false end

if not name then return false end 
if name and count==1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if PQR_IsMoving(0.3) then return false end

if not PQR_SpellAvailable(6353) then return false end

if PQI_SoapboxOffensiveSettings_SoulFirewithImmoAura_enable then
	if Soapbox_CastCheck(6353,104025) then
		if TargetValidation(&amp;quot;target&amp;quot;,6353) then return true end
	end
end

if itemCheck(warlockT15) &amp;gt; 1 then
if UnitBuffID(&amp;quot;player&amp;quot;,113861) and Soapbox_CastCheck(6353,113861) then
		if TargetValidation(&amp;quot;target&amp;quot;,6353) then
			return true
		end
	end
end

if T2D(&amp;quot;target&amp;quot;) &amp;lt;= 15 or PQI_SoapboxOffensiveSettings_HighRegenRotation_enable then
	if TargetValidation(&amp;quot;target&amp;quot;,6353) then return true end
end</Lua><RecastDelay>50</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Casting---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(6353) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Direhorn Spirit Knockback-</Name><Default>false</Default><SpellID>77799</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end


if UnitDebuffID(&amp;quot;player&amp;quot;,140946) then
	if UnitExists(&amp;quot;focus&amp;quot;) then
		if TargetValidation(&amp;quot;focus&amp;quot;,77799) then
			if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) &amp;lt; 25 then
			return true 
			end
		end
	end
end</Lua><RecastDelay>3500</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Direhorn Spirit Focus-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 0 then return false end


if UnitDebuffID(&amp;quot;player&amp;quot;,140946) then
	if not UnitExists(&amp;quot;focus&amp;quot;) then
	RunMacroText(&amp;quot;/target train&amp;quot;)
	RunMacroText(&amp;quot;/focus&amp;quot;)
	TargetLastTarget()
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Aura of Enfeeblement</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Avoid out of combat usage
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Disable when not Demon Hunting
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end


-- Magic Vulnerability exists on target
if not UnitDebuffID(&amp;quot;target&amp;quot;,58410)
	and not UnitDebuffID(&amp;quot;target&amp;quot;,108683)
	and not UnitDebuffID(&amp;quot;target&amp;quot;,44457)
	and not UnitDebuffID(&amp;quot;target&amp;quot;,1490) 
 then return false end



-- Cast when no Physical Vulnerability debuff active
if not UnitBuffID(&amp;quot;player&amp;quot;,119652) then CastSpellByName(GetSpellInfo(119652),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [DA] Aura of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Avoid out of combat usage
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Disable when not Demon Hunting
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end


-- Magic Vulnerability exists on target
if UnitDebuffID(&amp;quot;target&amp;quot;,58410)
	or UnitDebuffID(&amp;quot;target&amp;quot;,108683)
	or UnitDebuffID(&amp;quot;target&amp;quot;,44457)
	or UnitBuffID(&amp;quot;player&amp;quot;,116202)
	or UnitDebuffID(&amp;quot;target&amp;quot;,1490) then return false end

-- Cast when no Physical Vulnerability debuff active
if not UnitBuffID(&amp;quot;player&amp;quot;,116202) then CastSpellByName(GetSpellInfo(116202),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- Health Funnel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local GHF = nil
local HFunnel = 755
local minHP = PQI_SoapboxDefensiveSettings_BeginHealthFunnelat_value or 45
local maxHP = PQI_SoapboxDefensiveSettings_CancelHealthFunnelat_value or 90

if IsPlayerSpell(108415) then return false end

if PQR_IsMoving(0.3) then return false end
-- Disabled in PQInterface
if not PQI_SoapboxDefensiveSettings_BeginHealthFunnelat_enable then return false end

if Pethealth &amp;gt;= maxHP then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(755) then
		HealthFunnel = false
		RunMacroText(&amp;quot;/spellstopcasting&amp;quot;)
	end
	return false
end
if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(755) then return true end

-- Detect Glyph of Health Funnel
if IsPlayerSpell(56238) then GHF = 114189 end

-- Cast Health Funnel on Pet
if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
	if (Pethealth &amp;lt; minHP) or HealthFunnel then
		if not GHF then
			HealthFunnel = true
			CastSpellByName(GetSpellInfo(HFunnel),&amp;quot;pet&amp;quot;) return true
		else
			if PQR_SpellAvailable(GHF) then
				HealthFunnel = true
				CastSpellByName(GetSpellInfo(HFunnel),&amp;quot;pet&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit

if Nova_Cooldowns ~= 1 then return false end

if GetSpecialization() == 2 then
if SpecialUnit() and IsPlayerSpell(108503) and not Doom and GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 2 then return false end

if not Cor then return false end
end
-- Don&amp;apos;t use Racials if user tagged off automatic use
if not PQI_SoapboxOffensiveSettings_AutoRacials_enable then return false end

-- Draenei: Gift of the Naaru
if IsPlayerSpell(59544) and PQR_SpellAvailable(59544) and Playerhealth &amp;lt; 60 then
	CastSpellByName(GetSpellInfo(59544),&amp;quot;player&amp;quot;)
	return true
end



-- Blood Elf: Arcane Torrent
if IsPlayerSpell(28730) then
	if PQR_SpellAvailable(28730) and Playermana &amp;lt; 92
	and UnitExists(&amp;quot;target&amp;quot;) then
	SpellCancelQueuedSpell()
	CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
	return true
	end
end

if IsPlayerSpell(26297) then
	if not IsPlayerSpell(56242) then
		if UnitBuffID(&amp;quot;player&amp;quot;,113861) or (cTime &amp;lt; 10 and IsPlayerSpell(108501)) then
			if PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) then
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			end
		end
	end
end
-- Orc: Blood Fury
if IsPlayerSpell(33702) then
	if PQR_SpellAvailable(33702) then
		if not PQI_SoapboxOffensiveSettings_BossCooldown_enable then
			if UnitExists(&amp;quot;target&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end
-- Troll: Berserking
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
if IsPlayerSpell(26297) then
	if PQR_SpellAvailable(26297) then
		if not PQI_SoapboxOffensiveSettings_BossCooldown_enable then
			if UnitExists(&amp;quot;target&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_AutoTargetNextEnemy_enable then return false end

if (UnitExists(&amp;quot;Target&amp;quot;) == nil 
or (UnitExists(&amp;quot;Target&amp;quot;) and UnitIsDead(&amp;quot;Target&amp;quot;)))
and UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Demonology- [META] Cor Refresh</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Corruption,_,_,_,_,_,Corruptiontimer = UnitDebuffID(&amp;quot;target&amp;quot;,172,&amp;quot;PLAYER&amp;quot;)

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Fury &amp;lt; 40 then return false end


if not PQR_SpellAvailable(103964) then return false end

if Nova_AOE == 1 then return false end

if Corruption then
	if Corruptiontimer - GetTime() &amp;gt; 25 then
	Refresh = false
	end


	if Corruptiontimer - GetTime() &amp;lt; 15 or Refresh then
	Refresh = true
	CastSpellByName(GetSpellInfo(103964),&amp;quot;target&amp;quot;)
	return true
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Tier 3 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_TierThree ~= 1 then return false end



-- Sacrificial Pact
if IsPlayerSpell(108416)
	and PQR_SpellAvailable(108416)
then CastSpellByName(GetSpellInfo(108416),&amp;quot;player&amp;quot;) return true end

-- Dark Bargain
if IsPlayerSpell(110913)
	and PQR_SpellAvailable(110913)
then CastSpellByName(GetSpellInfo(110913),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Fire and Brimstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858) and Nova_AOE == 1 then
SpellStopCasting()
end
if UnitBuffID(&amp;quot;player&amp;quot;,108683) == nil
	and Embers &amp;gt;= 1
	and Nova_AOE == 1 then
	CastSpellByName(tostring(GetSpellInfo(108683)))
	--PQR_DelayRotation(0.6)
	return true
end

if UnitBuffID(&amp;quot;player&amp;quot;,108683) ~= nil
	and (Embers &amp;lt; 1 or Nova_AOE ~= 1) then
	CastSpellByName(tostring(GetSpellInfo(108683)))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Shadowburn</Name><Default>false</Default><SpellID>17877</SpellID><Actions></Actions><Lua>local SpellStart, SpellDuration = GetSpellCooldown(113858)
local DarksoulCD = SpellStart + SpellDuration - GetTime()    
local SpellStart2, SpellDuration2 = GetSpellCooldown(80240)
local havoccd = SpellStart2 + SpellDuration2 - GetTime() 
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local BurnSaveTime = 30
----------------------------------------------------------------------------
if Nova_AOE == 1 then return false end
if PQI_SoapboxOffensiveSettings_PoolShadowburn_enable then
	BurnSaveTime = PQI_SoapboxOffensiveSettings_PoolShadowburn_value
else
	BurnSaveTime = 0
end

if UnitExists(&amp;quot;target&amp;quot;) ~= nil and Targethealth &amp;lt;= 20 and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 and TargetValidation(&amp;quot;target&amp;quot;, 17877) then
if MindControlled(&amp;quot;target&amp;quot;) then return false end
if Targethealth &amp;gt; 20 then return false end	
	---test---

	if (DarksoulCD &amp;gt;= BurnSaveTime and Embers &amp;gt; 3.5) 
	or (DarksoulCD &amp;gt; 4 and Embers &amp;gt; 3.7) 
	or (Embers &amp;gt; 3.5 and Nova_Cooldowns ~= 1) then 
	SpellStopCasting()
	return true
	end
if Nova_EmberBurn == 1 then
return true
end
---test---
if (HavocAble and havoccd &amp;gt; 2 and T2D(&amp;quot;target&amp;quot;) &amp;lt; havoccd + 3 and Embers &amp;gt;= 1) 
or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 5 and Embers &amp;gt;= 1) 
or (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime and Embers &amp;gt;= 1 and ((IntProc2 &amp;gt;= 1 and not HavocAble) or havoc))
or (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime / 2 and Embers &amp;gt;= 2.5 and (IntProc2 &amp;gt;= 1 or havoc)) 
or (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime / 1.5 and Embers &amp;gt;= 2 and (IntProc2 &amp;gt;= 1 or havoc))
 then
SpellStopCasting()
return true
end


---test---
if ((Nova_EmberBurn == 1 or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil) and Embers &amp;gt;= 1)
	or (not PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and Embers &amp;gt;= 1 and IntProc2 &amp;gt;= 1)
--	or (havoc ~= nil and Embers &amp;gt;= 1) 
	then 
	SpellStopCasting()
  	return true
end


--	if not PQI_SoapboxOffensiveSettings_PoolShadowburn_enable
	--	or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil
	--	or Nova_EmberBurn == 1
	--	or DarksoulCD &amp;gt;= BurnSaveTime
	--	or (DarksoulCD &amp;gt; 2 and Embers &amp;gt; 3.6)
	--	then
	--	SpellStopCasting()
	--	CastSpellByName(GetSpellInfo(17877),&amp;quot;target&amp;quot;)
	--	return true
--	end
--end

--if UnitExists(&amp;quot;focus&amp;quot;) and TargetValidation(&amp;quot;focus&amp;quot;, 17877) then
--if MindControlled(&amp;quot;focus&amp;quot;) then return false end
-- Disable focus dotting if we unticked it.
--if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end
--	local FocusHealth = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
--	if not UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;)
--		and FocusHealth &amp;lt;= 7
--		and IsSpellInRange(tostring(GetSpellInfo(17877)), &amp;quot;focus&amp;quot;) == 1
--		and Embers &amp;gt;= 1 then
--		SpellStopCasting()
--		CastSpellByName(GetSpellInfo(17877),&amp;quot;focus&amp;quot;)
--		return true
--	end
--end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Auto Chaos Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local SaveTime = 100

if PQR_IsMoving(0.3) then
	return false
end
if PQI_SoapboxOffensiveSettings_PoolChaos_enable then
	SaveTime = PQI_SoapboxOffensiveSettings_PoolChaos_value
else
	SaveTime = 0
end

if PQI_SoapboxOffensiveSettings_AutoChaosBolt_enable and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 and Targethealth &amp;gt; 20 and PQR_IsMoving(0.3) == false then
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) ~= nil
	or (UnitBuffID(&amp;quot;player&amp;quot;,138002) ~= nil and not PQI_SoapboxOffensiveSettings_PoolChaos_enable)
	or (UnitBuffID(&amp;quot;player&amp;quot;,138002) and darksoul &amp;gt;= SaveTime) then
		CastSpellByName(tostring(GetSpellInfo(116858))) 
	  	return true
  	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Conflagrate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local BDCount,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896) 
local SaveTime = 20
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
----------------------------------------------------------------------------

if not TargetValidation(&amp;quot;target&amp;quot;, 17962) then return false end

if PQI_SoapboxOffensiveSettings_PoolChaos_enable then
SaveTime = PQI_SoapboxOffensiveSettings_PoolChaos_value
else
	SaveTime = 0
end

if Nova_AOE == 1 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 108683) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,117896) then
		CastSpellByName(tostring(GetSpellInfo(17962))) 
		return true
		end
	else
	CastSpellByName(tostring(GetSpellInfo(17962))) 
	return true
	end
end

if cTime &amp;lt; 6 then 
CastSpellByName(tostring(GetSpellInfo(17962))) 
return true
end
if GetSpellCharges(17962) &amp;lt; 2 then
	if (UnitBuffID(&amp;quot;player&amp;quot;,113858) and Embers &amp;gt;= 1)
	or (GetSpellCharges(17962) &amp;lt; 2 and Embers &amp;gt; 3.5 and Targethealth &amp;gt; 20)
	or (UnitBuffID(&amp;quot;player&amp;quot;,113858) and UnitBuffID(&amp;quot;player&amp;quot;,117896))
	or not PQR_SpellAvailable(17962)
	or (havoc ~= nil and stacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and Embers &amp;gt;= 1)
	or (not PQI_SoapboxOffensiveSettings_PoolChaos_enable and Embers &amp;gt; 1 and IntProc &amp;gt;= 1) then
	return false
	end

	if not UnitBuffID(&amp;quot;player&amp;quot;,117896) 
	or (UnitBuffID(&amp;quot;player&amp;quot;,117896) and BDStacks &amp;lt;= 2) then
		if (not UnitBuffID(&amp;quot;player&amp;quot;,113858) and Nova_EmberBurn ~= 1)
		or (UnitBuffID(&amp;quot;player&amp;quot;,113858) and Embers &amp;lt; 1) then
		CastSpellByName(tostring(GetSpellInfo(17962))) 
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Havoc (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable focus dotting if we unticked it.
if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end

if MindControlled(&amp;quot;focus&amp;quot;) then return false end

local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local Bolt, _, _, Bolttimer = UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;)
local ChaosBoltCastTime = select(7,GetSpellInfo(116858))/1000
----------------------------------------------------------------------------

if Targethealth &amp;gt; 20 then
if UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;) and Bolttimer - GetTime() &amp;gt; ChaosBoltCastTime and not (IntProc &amp;gt;= 1 and IntProc3 &amp;gt;= 1) then return false end
if Embers &amp;lt; 4 and GetSpellCharges(17962) == 2 then return false end
	if Nova_AOE == 1
	or PQR_IsCastingSpell(116858)
	or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858)
	or havoc == nil and Backdraft ~= nil and BDStacks &amp;gt; 2 then
	return false
end

if PQR_SpellAvailable(80240)
 	and UnitExists(&amp;quot;focus&amp;quot;)
	and IsSpellInRange(tostring(GetSpellInfo(80240)), &amp;quot;focus&amp;quot;) == 1
	and havoc == nil
 	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;) ~= 1
 	and ((Embers &amp;gt;= 1 and (Targethealth &amp;gt; 20 or (Targethealth &amp;lt;= 20 and (UnitBuffID(&amp;quot;player&amp;quot;, 113858) or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 5 or T2D(&amp;quot;focus&amp;quot;) &amp;lt; 5))))) or (Embers &amp;gt;= 3 and Targethealth &amp;lt;= 20))
 	and (darksoul &amp;gt; 10 or Nova_Cooldowns ~= 1)
 	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) == 1 then
 	CastSpellByName(GetSpellInfo(80240),&amp;quot;focus&amp;quot;)
 	return true
 end
 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Immolate</Name><Default>false</Default><SpellID>348</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end
local Immolate,_,_,_,_,_,Immolatetimer = UnitDebuffID(&amp;quot;target&amp;quot;,348,&amp;quot;PLAYER&amp;quot;)
local Immolate2,_,_,_,_,_,Immolate2timer = UnitDebuffID(&amp;quot;target&amp;quot;,108686,&amp;quot;EXACT|PLAYER&amp;quot;)
local havoc, _, _, HAVstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240) 
---------------------------------------------------------------------------------------------

if not TargetValidation(&amp;quot;target&amp;quot;, 348) then return false end
if PQR_IsMoving(0.3) or Nova_AOE == 1 then
	return false
end
--if not PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then return false end
if PQI_SoapboxOffensiveSettings_ImmolateBypass_enable == false
or (PQI_SoapboxOffensiveSettings_ImmolateBypass_enable == true 
and UnitHealth(&amp;quot;target&amp;quot;) &amp;gt; PQI_SoapboxOffensiveSettings_ImmolateBypass_value * 1000) then

			if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(348) 
			or PQR_IsMoving(0.3)
			or (havoc ~= nil and HAVstacks == 3 and UnitExists(&amp;quot;focus&amp;quot;)and Embers &amp;gt;= 1)
			or (UnitBuffID(&amp;quot;player&amp;quot;,113858) and Embers &amp;gt;= 1)
			or Nova_AOE == 1 then
				return false
			end
			
			if not UnitBuffID(&amp;quot;player&amp;quot;,108683) then
				if Immolate == nil
				or Immolatetimer - GetTime() &amp;lt; 6 then
			--	CastSpellByName(tostring(GetSpellInfo(348)))	
				return true
				end
			end
			
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>-Destruction- Immolate (Focus)</Name><Default>false</Default><SpellID>348</SpellID><Actions></Actions><Lua>-- Disable focus dotting if we unticked it.
if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end

if MindControlled(&amp;quot;focus&amp;quot;) then return false end

local ImmolateFocus,_,_,_,_,_,ImmolateFocustimer = UnitDebuffID(&amp;quot;focus&amp;quot;,348,&amp;quot;PLAYER&amp;quot;)
local havoc, _, _, HAVstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
---------------------------------------------------------------------------------------------
if not TargetValidation(&amp;quot;focus&amp;quot;, 348) then return false end
if PQR_IsMoving(0.3) then
	return false
end

if not PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) then return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(348) 
	or PQR_IsMoving(0.3) == true
	or (havoc ~= nil and HAVstacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and Embers &amp;gt;= 1)
	or (UnitBuffID(&amp;quot;player&amp;quot;,113858) and Embers &amp;gt;= 1)
	or IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) ~= 1
	or UnitExists(&amp;quot;focus&amp;quot;) ~= 1 then
	return false
end

if ImmolateFocus == nil or ImmolateFocustimer - GetTime() &amp;lt; 5
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;) ~= 1
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
	and IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) == 1 then	
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>-Destruction- Incinerate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local havoc, _, _, havocstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()  
local SaveTime = 100
local Bolt, _, _, Bolttimer = UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;)
local ChaosBoltCastTime = select(7,GetSpellInfo(116858))/1000

if not TargetValidation(&amp;quot;target&amp;quot;, 29722) then return false end
if PQR_IsMoving(0.3) then
	return false
end

if PQI_SoapboxOffensiveSettings_PoolChaos_enable then
	SaveTime = PQI_SoapboxOffensiveSettings_PoolChaos_value
else
	SaveTime = 0
end

if not UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;) or (UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;) and Bolttimer - GetTime() &amp;gt; ChaosBoltCastTime) then
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(29722)
or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858)
or (Targethealth &amp;gt; 20 and Backdraft ~= nil and BDStacks &amp;lt; 3 and darksoul &amp;gt;= SaveTime and Embers &amp;gt; 1 and IntProc &amp;gt;= 1 and Nova_AOE ~= 1)
or (not PQI_SoapboxOffensiveSettings_PoolChaos_enable and Backdraft ~= nil and BDStacks &amp;lt; 3 and Embers &amp;gt; 1 and IntProc &amp;gt;= 1 and Nova_AOE ~= 1)
or (havoc ~= nil and stacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and Embers &amp;gt;= 1)
or (Nova_AOE == 1 and not UnitBuffID(&amp;quot;player&amp;quot;,108683) and  Embers &amp;gt;= 1)
or ((Nova_EmberBurn == 1 or UnitBuffID(&amp;quot;player&amp;quot;,113858)) and Embers &amp;gt;= 1 and Backdraft ~= nil and BDStacks &amp;lt; 3 and Nova_AOE ~= 1) then
	return false
end
end
if (Backdraft ~= nil and BDStacks &amp;gt;= 3)
	or Embers &amp;lt; 1
	or (not UnitBuffID(&amp;quot;player&amp;quot;,113858) and (GetSpellCharges(17962) == 0 or (GetSpellCharges(17962) &amp;gt; 0 and Embers &amp;gt; 3.5 and Targethealth &amp;gt; 20)))
	or UnitBuffID(&amp;quot;player&amp;quot;,108683) then
	CastSpellByName(tostring(GetSpellInfo(29722)))
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Incinerate (Moving)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ((PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 80240)) or PQR_IsMoving(1)) and select(2,GetTalentRowSelectionInfo(6)) == 17 then 
	CastSpellByName(tostring(GetSpellInfo(29722)))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Rain of Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (Nova_Rain == 1 and PQR_SpellAvailable(5740) and Playermana &amp;gt;= 35)
	or (Nova_AutoRain == 1 and UnitBuffID(&amp;quot;player&amp;quot;,5740) == nil and PQR_SpellAvailable(5740) and Playermana &amp;gt;=40) then
		
		---if PQI_SoapboxOffensiveSettings_MannorothsFury_enable == true then
			if IsPlayerSpell(108508) == true and PQR_SpellAvailable(108508) == true and Nova_AOE == 1 then
				CastSpellByName(GetSpellInfo(108508), &amp;quot;player&amp;quot;)
			end
		---end
		
		SpellCancelQueuedSpell() 
		CastSpellByName(GetSpellInfo(5740))
		
		if SpellIsTargeting() then
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[UTILITY] Burning Rush</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not IsPlayerSpell(111400) then return false end

if PQI_SoapboxDefensiveSettings_AutoBurningRush_enable then
	if UnitBuffID(&amp;quot;player&amp;quot;,111400) then
		if not PQR_IsMoving(0.3) or Playerhealth &amp;lt; 25 then
			CancelUnitBuff(&amp;quot;player&amp;quot;,GetSpellInfo(111400)) return true
		end
	end

	if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;,111400) and Playerhealth &amp;gt; 24 then
		CastSpellByName(GetSpellInfo(111400),&amp;quot;player&amp;quot;)
		return true
	end
elseif UnitBuffID(&amp;quot;player&amp;quot;,111400) then
	if Nova_Burn ~= 1 or Playerhealth &amp;lt; 25 then
		xrn:message(&amp;quot;\124c1B0843FFBurning Rush - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_Burn&amp;quot;, 0)
		CancelUnitBuff(&amp;quot;player&amp;quot;,GetSpellInfo(111400)) return true
	end
end

if Nova_Burn == 1 and not UnitBuffID(&amp;quot;player&amp;quot;,111400) then
	CastSpellByName(GetSpellInfo(111400),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Pet Controls</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_SummonPet_enable then return false end
local v=PQI_SoapboxOffensiveSettings_SummonPet_value or 5

-- When GoSac is selected, we have nothing here to do.
if IsPlayerSpell(108503) then return false end

-- Determine which pet we&amp;apos;re summoning.
if IsPlayerSpell(108499) then
	if v == 1 then petSummon = 112866
		elseif v == 2 then petSummon = 112867
		elseif v == 3 then petSummon = 112869
		elseif v == 4 then petSummon = 112868
		elseif v == 5 and GetSpecialization(&amp;quot;player&amp;quot;) == 2 then petSummon = 112870 
		elseif v == 5 and GetSpecialization(&amp;quot;player&amp;quot;) == 3 then petSummon = 112869 end
else
	if v == 1 then petSummon = 688
		elseif v == 2 then petSummon = 697
		elseif v == 3 then petSummon = 691
		elseif v == 4 then petSummon = 712
		elseif v == 5 and GetSpecialization(&amp;quot;player&amp;quot;) == 2 then petSummon = 30146 
		elseif v == 5 and GetSpecialization(&amp;quot;player&amp;quot;) == 3 then petSummon = 691 end
end

-- Try not to spam the ability.
if not PQR_SpellAvailable(petSummon) then return false end
if PQR_IsMoving(0.3) then return false end
if IsFlying() then return false end
if IsFalling() then return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(petSummon) then
	if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
		SpellStopCasting()
	end
	return false
end

if GetSpecialization() == 3 then
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitIsDead(&amp;quot;pet&amp;quot;)
		and PQR_SpellAvailable(120451)
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
		and select(2,GetTalentRowSelectionInfo(5)) ~= 15 then
		CastSpellByName(tostring(GetSpellInfo(120451)))
		return true
	end
	
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitIsDead(&amp;quot;pet&amp;quot;)
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;lt; 1 then
		RunMacroText(&amp;quot;/script PetDismiss()&amp;quot;)
		return true
	end
end
	
-- React to Demonic Rebirth
if UnitBuffID(&amp;quot;player&amp;quot;,108559) then
	CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
end

-- Summon our Selected Pet
if not UnitExists(&amp;quot;pet&amp;quot;) then
	CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,104934)
or UnitBuffID(&amp;quot;player&amp;quot;,104269) then
return false
end

local AuraInfo = AuraInfo

if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then return false end

-- Soul Link
--if IsPlayerSpell(108415) then
----	if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) and not UnitBuffID(&amp;quot;player&amp;quot;,108415) then
--		CastSpellByName(GetSpellInfo(108415),&amp;quot;player&amp;quot;) return true
---	end
--end

-- Dark Intent
if IsPlayerSpell(109773) and not AuraInfo(5,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(109773),&amp;quot;player&amp;quot;) return true
end


-- Dark Intent: Raid Buffing
if PQI_SoapboxDefensiveSettings_RaidBuffing_enable then
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		if not AuraInfo(5,member) and IsSpellInRange(GetSpellInfo(109773),member) == 1 then
			if UnitIsDeadOrGhost(member) then return false end
			
			if not IsLineOfSight(member, 5) then return false end
			
			CastSpellByName(GetSpellInfo(109773),member) return true 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Tier 6 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if Nova_TierSix ~= 1 then return false end

if not PQR_SpellAvailable(108505) then return false end

-- Archimonde&amp;apos;s Vengeance
if IsPlayerSpell(108505)
	and TargetValidation(&amp;quot;target&amp;quot;,6353)
then CastSpellByName(GetSpellInfo(108505),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Chaos Bolt</Name><Default>false</Default><SpellID>116858</SpellID><Actions></Actions><Lua>local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local SaveTime = 20
local Bolt, _, _, Bolttimer = UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;)
local ChaosBoltCastTime = select(7,GetSpellInfo(116858))/1000
----------------------------------------------------------------------------
if not TargetValidation(&amp;quot;target&amp;quot;, 116858) then return false end
if PQR_IsMoving(0.3) then
	return false
end
if PQI_SoapboxOffensiveSettings_PoolChaos_enable then
	SaveTime = PQI_SoapboxOffensiveSettings_PoolChaos_value
else
	SaveTime = 0
end

if UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;) and Bolttimer - GetTime() &amp;gt; ChaosBoltCastTime and not (IntProc &amp;gt;= 1 and IntProc3 &amp;gt;= 1) then return false end

if Embers &amp;lt; 4 and GetSpellCharges(17962) == 2 then return false end
if Targethealth &amp;lt;= 20
or Nova_AOE == 1
or PQR_IsCastingSpell(116858)
or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858)
or (havoc == nil and UnitBuffID(&amp;quot;player&amp;quot;,117896) and BDStacks &amp;gt; 2 and ((IntProc &amp;gt;= 1 and IntProc3 &amp;gt;= 1) == false)) then
return false
end

if Targethealth &amp;gt; 20 then
	if (darksoul &amp;gt;= SaveTime and Embers &amp;gt; 1 and IntProc &amp;gt;= 1) then
	return true
	end

	if ((Nova_EmberBurn == 1 or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil) and Embers &amp;gt;= 1)
	or (not PQI_SoapboxOffensiveSettings_PoolChaos_enable and Embers &amp;gt;= 1 and IntProc &amp;gt;= 1)
	or (havoc ~= nil and stacks == 3 and Embers &amp;gt;= 1) then 
  	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Dark Soul</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpellStart2, SpellDuration2 = GetSpellCooldown(80240)
local havoccd = SpellStart2 + SpellDuration2 - GetTime()
if PQI_SoapboxOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then
	return false
	end
end
if Nova_Cooldowns ~= 1 then return false end
if cTime &amp;gt; 10 and T2D(&amp;quot;target&amp;quot;) &amp;gt; 10 and Embers &amp;lt; 2 then return false end
if HavocAble and not PQR_SpellAvailable(80240) and havoccd &amp;lt; 10 then return false end
	if PQR_SpellAvailable(113858) and UnitExists(&amp;quot;target&amp;quot;) then
		CastSpellByName(GetSpellInfo(113858),nil)
	   	RunMacroText(&amp;quot;/use 10&amp;quot;)
	  	RunMacroText(&amp;quot;/use 13&amp;quot;)
	   	RunMacroText(&amp;quot;/use 14&amp;quot;)	
	   	return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Conflagrate (2)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local BDCount,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896) 
local SaveTime = 20
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
----------------------------------------------------------------------------

if not TargetValidation(&amp;quot;target&amp;quot;, 17962) then return false end

if PQI_SoapboxOffensiveSettings_PoolChaos_enable then
	SaveTime = PQI_SoapboxOffensiveSettings_PoolChaos_value
else
	SaveTime = 0
end

if cTime &amp;lt; 6 then 
CastSpellByName(tostring(GetSpellInfo(17962))) 
return true
end
if GetSpellCharges(17962) == 2 then 
CastSpellByName(tostring(GetSpellInfo(17962))) 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Immolate AoE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end
local Immolate,_,_,_,_,_,Immolatetimer = UnitDebuffID(&amp;quot;target&amp;quot;,348,&amp;quot;PLAYER&amp;quot;)
local Immolate2,_,_,_,_,_,Immolate2timer = UnitDebuffID(&amp;quot;target&amp;quot;,108686,&amp;quot;EXACT|PLAYER&amp;quot;)
local havoc, _, _, HAVstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240) 
---------------------------------------------------------------------------------------------
if not TargetValidation(&amp;quot;target&amp;quot;, 348) then return false end
if PQR_IsMoving(0.3) then
	return false
end
if PQI_SoapboxOffensiveSettings_ImmolateBypass_enable == false
or (PQI_SoapboxOffensiveSettings_ImmolateBypass_enable == true 
and UnitHealth(&amp;quot;target&amp;quot;) &amp;gt; PQI_SoapboxOffensiveSettings_ImmolateBypass_value * 1000) then

			if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(348) 
			or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(108686)
			or PQR_IsMoving(0.3) == true
			or (havoc ~= nil and HAVstacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and Embers &amp;gt;= 1)
			or (Immo == true and Immolate ~= nil)
			or (Nova_AOE == 1 and not UnitBuffID(&amp;quot;player&amp;quot;,108683)) then
				return false
			end
			
			if Nova_AOE == 1 and UnitBuffID(&amp;quot;player&amp;quot;,108683) then
				if Immolate2 == nil or Immolate2timer - GetTime() &amp;lt; 6 then
				CastSpellByName(tostring(GetSpellInfo(348)))
				return true
				end
			end
			
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Chaos Bolt Cap</Name><Default>false</Default><SpellID>116858</SpellID><Actions></Actions><Lua>local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local SaveTime = 20
local Bolt, _, _, Bolttimer = UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;)
local ChaosBoltCastTime = select(7,GetSpellInfo(116858))/1000

----------------------------------------------------------------------------
if not TargetValidation(&amp;quot;target&amp;quot;, 116858) then return false end
if PQR_IsMoving(0.3) then
	return false
end

if PQI_SoapboxOffensiveSettings_PoolChaos_enable then
	SaveTime = PQI_SoapboxOffensiveSettings_PoolChaos_value
else
	SaveTime = 0
end
if UnitDebuffID(&amp;quot;target&amp;quot;, 116858, &amp;quot;PLAYER&amp;quot;) and Bolttimer - GetTime() &amp;gt; ChaosBoltCastTime and not (IntProc &amp;gt;= 1 and IntProc3 &amp;gt;= 1) then return false end

if Embers &amp;lt; 4 and GetSpellCharges(17962) == 2 then return false end
if Targethealth &amp;lt;= 20
	or Nova_AOE == 1
	or PQR_IsCastingSpell(116858)
	or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858)
	or havoc == nil and Backdraft ~= nil and BDStacks &amp;gt; 2 then
	return false
end

if Targethealth &amp;gt; 20 then
	if (darksoul &amp;gt;= SaveTime and Embers &amp;gt; 3.5) then
	return true
	elseif (darksoul &amp;gt; 4 and Embers &amp;gt; 3.7) then
	return true
	elseif (Embers &amp;gt; 3.5 and (Nova_Cooldowns ~= 1 or (PQI_SoapboxOffensiveSettings_BossCooldowns_enable and not SpecialUnit()))) then 
	return true
	end
if Nova_EmberBurn == 1 then
return true
end
if (darksoul &amp;gt;= SaveTime / 2 and Embers &amp;gt;= 2.5 and IntProc &amp;gt;= 1) 
or (darksoul &amp;gt;= SaveTime / 1.5 and Embers &amp;gt;= 2 and IntProc &amp;gt;= 1) then
return true
end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Havoc (Execute)</Name><Default>false</Default><SpellID>80240</SpellID><Actions></Actions><Lua>-- Disable focus dotting if we unticked it.
if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end

if MindControlled(&amp;quot;focus&amp;quot;) then return false end

local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
----------------------------------------------------------------------------
if Targethealth &amp;lt;= 23 then
if PQR_SpellAvailable(80240)
 	and UnitExists(&amp;quot;focus&amp;quot;)
	and IsSpellInRange(tostring(GetSpellInfo(80240)), &amp;quot;focus&amp;quot;) == 1
	and havoc == nil
 	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;) ~= 1
 	and (darksoul &amp;gt; 10 or Nova_Cooldowns ~= 1)
 	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) == 1 then

local SpellStart, SpellDuration = GetSpellCooldown(113858)
local DarksoulCD = SpellStart + SpellDuration - GetTime()    
local SpellStart2, SpellDuration2 = GetSpellCooldown(80240)
local havoccd = SpellStart2 + SpellDuration2 - GetTime() 
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local BurnSaveTime = 30
----------------------------------------------------------------------------

if PQI_SoapboxOffensiveSettings_PoolShadowburn_enable then
	BurnSaveTime = PQI_SoapboxOffensiveSettings_PoolShadowburn_value
else
	BurnSaveTime = 0
end

if UnitExists(&amp;quot;target&amp;quot;) ~= nil and Targethealth &amp;lt;= 20 and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 and TargetValidation(&amp;quot;target&amp;quot;, 17877) then
if MindControlled(&amp;quot;target&amp;quot;) then return false end
	---test---

	if (DarksoulCD &amp;gt;= BurnSaveTime and Embers &amp;gt; 3.5) 
	or (DarksoulCD &amp;gt; 4 and Embers &amp;gt; 3.7) 
	or (Embers &amp;gt; 3.5 and Nova_Cooldowns ~= 1) 
	or  (((Embers &amp;gt;= 1 and (UnitBuffID(&amp;quot;player&amp;quot;, 113858) or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 7 or T2D(&amp;quot;focus&amp;quot;) &amp;lt; 7))) or Embers &amp;gt;= 3)
 	and darksoul &amp;gt; 10)
	then 
	return true
	end

---test---
if (T2D(&amp;quot;target&amp;quot;) &amp;lt; 7 and Embers &amp;gt;= 1) 
or (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime and Embers &amp;gt;= 1 and IntProc2 &amp;gt;= 1)
or (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime / 2 and Embers &amp;gt;= 2.5 and IntProc2 &amp;gt;= 1) 
or (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime / 1.5 and Embers &amp;gt;= 2 and IntProc2 &amp;gt;= 1) then
return true
end


---test---
if ((Nova_EmberBurn == 1 or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil) and Embers &amp;gt;= 1)
	or (not PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and Embers &amp;gt;= 1 and IntProc2 &amp;gt;= 1) then 
  	return true
end


--	if not PQI_SoapboxOffensiveSettings_PoolShadowburn_enable
	--	or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil
	--	or Nova_EmberBurn == 1
	--	or DarksoulCD &amp;gt;= BurnSaveTime
	--	or (DarksoulCD &amp;gt; 2 and Embers &amp;gt; 3.6)
	--	then
	--	SpellStopCasting()
	--	CastSpellByName(GetSpellInfo(17877),&amp;quot;target&amp;quot;)
	--	return true
--	end
--end

--if UnitExists(&amp;quot;focus&amp;quot;) and TargetValidation(&amp;quot;focus&amp;quot;, 17877) then
--if MindControlled(&amp;quot;focus&amp;quot;) then return false end
-- Disable focus dotting if we unticked it.
--if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end
--	local FocusHealth = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
--	if not UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;)
--		and FocusHealth &amp;lt;= 7
--		and IsSpellInRange(tostring(GetSpellInfo(17877)), &amp;quot;focus&amp;quot;) == 1
--		and Embers &amp;gt;= 1 then
--		SpellStopCasting()
--		CastSpellByName(GetSpellInfo(17877),&amp;quot;focus&amp;quot;)
--		return true
--	end
--end
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Destruction- Shadowburn Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpellStart, SpellDuration = GetSpellCooldown(113858)
local DarksoulCD = SpellStart + SpellDuration - GetTime()    
local SpellStart2, SpellDuration2 = GetSpellCooldown(80240)
local havoccd = SpellStart2 + SpellDuration2 - GetTime() 
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local BurnSaveTime = 30
----------------------------------------------------------------------------
if Nova_AOE == 1 then return false end
if PQI_SoapboxOffensiveSettings_PoolShadowburn_enable then
	BurnSaveTime = PQI_SoapboxOffensiveSettings_PoolShadowburn_value
else
	BurnSaveTime = 0
end

if UnitExists(&amp;quot;target&amp;quot;) ~= nil and Targethealth &amp;lt;= 20 and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 and TargetValidation(&amp;quot;target&amp;quot;, 17877) then
if MindControlled(&amp;quot;target&amp;quot;) then return false end
if Targethealth &amp;gt; 20 then return false end	
	---test---

	if (DarksoulCD &amp;gt;= BurnSaveTime and Embers &amp;gt; 3.5) then
	return true
	elseif (DarksoulCD &amp;gt; 4 and Embers &amp;gt; 3.7) then
	return true
	elseif (Embers &amp;gt; 3.5 and Nova_Cooldowns ~= 1) then 
	return true
	end

---test---
if HavocAble and T2D(&amp;quot;target&amp;quot;) &amp;lt; havoccd + 3 and Embers &amp;gt;= 1 then
return true
elseif not HavocAble and T2D(&amp;quot;target&amp;quot;) &amp;lt; 5 and Embers &amp;gt;= 1 then
return true
elseif (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime and Embers &amp;gt;= 1 and IntProc &amp;gt;= 1 and not HavocAble) then
return true
elseif (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime / 2 and Embers &amp;gt;= 3 and IntProc &amp;gt;= 1) then
return true
elseif (PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and DarksoulCD &amp;gt;= BurnSaveTime / 1.5 and Embers &amp;gt;= 2.5 and IntProc &amp;gt;= 1) then
return true
end


---test---
if ((Nova_EmberBurn == 1 or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil) and Embers &amp;gt;= 1)
	or (not PQI_SoapboxOffensiveSettings_PoolShadowburn_enable and Embers &amp;gt; 1 and IntProc &amp;gt;= 1)
	or (havoc ~= nil and Embers &amp;gt;= 1) then 
  	return true
end


--	if not PQI_SoapboxOffensiveSettings_PoolShadowburn_enable
	--	or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil
	--	or Nova_EmberBurn == 1
	--	or DarksoulCD &amp;gt;= BurnSaveTime
	--	or (DarksoulCD &amp;gt; 2 and Embers &amp;gt; 3.6)
	--	then
	--	SpellStopCasting()
	--	CastSpellByName(GetSpellInfo(17877),&amp;quot;target&amp;quot;)
	--	return true
--	end
--end

--if UnitExists(&amp;quot;focus&amp;quot;) and TargetValidation(&amp;quot;focus&amp;quot;, 17877) then
--if MindControlled(&amp;quot;focus&amp;quot;) then return false end
-- Disable focus dotting if we unticked it.
--if not PQI_SoapboxOffensiveSettings_FocusDotting_enable then return false end
--	local FocusHealth = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
--	if not UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;)
--		and FocusHealth &amp;lt;= 7
--		and IsSpellInRange(tostring(GetSpellInfo(17877)), &amp;quot;focus&amp;quot;) == 1
--		and Embers &amp;gt;= 1 then
--		SpellStopCasting()
--		CastSpellByName(GetSpellInfo(17877),&amp;quot;focus&amp;quot;)
--		return true
--	end
--end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Interrupt-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_InterruptEnabled then return false end
local customTarget = &amp;quot;target&amp;quot;
local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(customTarget)
local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(customTarget)

if channelName ~= nil then
	--target is channeling a spell that is interruptable
	--load the channel variables into the cast variables to make logic a little easier.
	castName = channelName
	castStartTime = channelStartTime
	castEndTime = channelEndTime
	castInterruptable = channelInterruptable
end

--This is actually &amp;quot;Not Interruptable&amp;quot;... so lets swap it around to use in the positive.
if castInterruptable == false then
	castInterruptable = true
else
	castInterruptable = false
end

--we can&amp;apos;t attack the target.
if UnitCanAttack(&amp;quot;player&amp;quot;, customTarget) == nil then
	return false
end

if castInterruptable then
	--target is casting something that is interruptable.
	--the following 2 variables are named logically... value is in seconds.
	local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000
	local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
	local castTime = castEndTime - castStartTime
	local currentPercent = timeSinceStart / castTime * 100000
	
	--interrupt percentage check
	if currentPercent &amp;lt; PQR_InterruptPercent then
		return false
	end

	--minimum interrupt time.
	if timeSinceStart - PQR_InterruptDelay &amp;lt; 0 then
		return false
	end

	--make sure the interrupt spell is available
local interruptSpell = PQR_InterruptSpell()
	if interruptSpell ~= 0 then
		
		local interruptName = GetSpellInfo(interruptSpell)
		if UnitClass(&amp;quot;player&amp;quot;) == &amp;quot;Warlock&amp;quot; then
			if (UnitBuffID(&amp;quot;player&amp;quot;, 108503) and not (PQR_SpellAvailable(132409) and PQR_SpellAvailable(132413) and PQR_SpellAvailable(132411) and PQR_SpellAvailable(137706)))
			or (not UnitBuffID(&amp;quot;player&amp;quot;, 108503) and not IsPlayerSpell(108499) and not PQR_SpellAvailable(19647))
			or (IsPlayerSpell(108499) and not PQR_SpellAvailable(115781))
			or not IsSpellInRange(GetSpellInfo(116858), customTarget) 
			then
				return false
			end
		elseif not PQR_SpellAvailable(interruptSpell)
		or not IsSpellInRange(interruptName, customTarget) then
		return false
		end
	else
		return false
	end

	--Finally, make sure the spell they are casting is on the interrupt list or interrupt all is checked
	if PQR_IsOnInterruptList(castName) or PQR_IsInterruptAll() then
		PQR_Debug(&amp;quot;Casting interrupt on &amp;quot;..customTarget)
		CastSpellByID(interruptSpell, customTarget)
		return true
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>---0. Rotation Check---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() == 2 then
	Spec = &amp;quot;Demonology&amp;quot;
	PQR_SwapRotation(&amp;quot;Demonology (Soapbox Warlock Serial DD1875)&amp;quot;) 
elseif GetSpecialization() == 3 then
	Spec = &amp;quot;Destruction&amp;quot;
	PQR_SwapRotation(&amp;quot;Destruction (Soapbox Warlock Serial DD1875)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Boss Special: Warlock---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_BossFunctions_enable then return false end

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
	local	 bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		local playerCasting,_,_,_,_,PlayercastEnd = UnitCastingInfo(&amp;quot;player&amp;quot;)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		elseif npcID == 71161 or npcID == 71157 or npcID == 71156 or npcID == 71155 or npcID == 71160 or npcID == 71154 or npcID == 71152 or npcID == 71158 or npcID == 71153 then ---Klaxxi
			if UnitBuffID(&amp;quot;player&amp;quot;,141857) and not UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if PQR_SpellAvailable(143373) then
				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				return true
				end
			end
			if UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144275) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
				return true
				elseif not UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144276) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton3&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144274) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144181) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton4&amp;quot;)
				return true
				end
			end
		elseif npcID == 71515 then  ---General Nazgrim
			if UnitBuffID(&amp;quot;target&amp;quot;,71) then
			SpellStopCasting()
		--	PetFollow()
			return true
			end
		elseif npcID == 71543 then  ---Immersius
			if UnitDebuffID(&amp;quot;target&amp;quot;,143574) then
			local Swelling,_,_,SwellStacks = UnitDebuffID(&amp;quot;player&amp;quot;,143574)
				if UnitDebuffID(&amp;quot;player&amp;quot;, 143579) then
					if SwellStacks &amp;gt;= 3 then
					SpellStopCasting()
					--PetFollow()
					return true
					end
				end
			end
		elseif npcID == 71529 then --Thok: Deafening
			local Deaf = GetSpellInfo(143343)
			local BossCasting,_,_,_,_,BossCastEnd = UnitCastingInfo(bossCheck)
			local PlayerCasting,_,_,_,_,PlayerCastEnd = UnitCastingInfo(&amp;quot;player&amp;quot;)
			if (BossCasting and BossCasting == Deaf) then	
				local BossTimeLeft = (BossCastEnd/1000) - GetTime()
				if PlayerCasting then
				local PlayerTimeLeft = (PlayerCastEnd/1000) - GetTime()
					if BossTimeLeft &amp;lt;= PlayerTimeLeft then
					SpellStopCasting()
					CastSpellByName(GetSpellInfo(77799))
					return true
					end
				else
				CastSpellByName(GetSpellInfo(77799))
				return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARLOCK>