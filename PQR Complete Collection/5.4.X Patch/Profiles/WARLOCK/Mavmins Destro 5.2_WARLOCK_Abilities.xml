<?xml version="1.0" encoding="utf-8" ?><WARLOCK><Ability><Name>-- Healthstone - Create --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local HealthstoneCharges = GetItemCount(5512, nil, true) 
------------------------------------------------------------------------

if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and LASTCAST ~= &amp;quot;Healthstone&amp;quot; 
	and HealthstoneCharges ~= 3
	and PQR_IsMoving(0.3) == false
	and UnitCastingInfo(&amp;quot;player&amp;quot;) ~= GetSpellInfo(6201) then
	CastSpellByName(GetSpellInfo(6201),&amp;quot;player&amp;quot;)
	LASTCAST = &amp;quot;Healthstone&amp;quot;
	--PQR_DelayRotation(3)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Trinket</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_AutoTrinket_enable then
	if GetInventoryItemCooldown(14)==0 then
		UseInventoryItem(14)
	end
	if GetInventoryItemCooldown(13)==0 then
		UseInventoryItem(13)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Mouse Click --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Change &amp;quot;3&amp;quot; to whatever mouse button you&amp;apos;d like.

if IsMouseButtonDown(3) then
	RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chaos Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)  
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local SaveTime = 20
----------------------------------------------------------------------------

if PQI_MavminsDestruction_EmberSaveChaosBolt_enable then
	SaveTime = PQI_MavminsDestruction_EmberSaveChaosBolt_value
else
	SaveTime = 0
end


if Targethealth &amp;lt; 20
	or AOE_MODE == true
	or PQR_IsCastingSpell(116858)
	or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858)
	or PQR_IsMoving(0.3) == true
	or havoc == nil and Backdraft ~= nil and BDStacks &amp;gt; 2 then
	return false
end

if UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
	or darksoul &amp;gt;= SaveTime and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt; 1
	or not PQI_MavminsDestruction_EmberSaveChaosBolt_enable and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt; 1
	or havoc ~= nil and stacks == 3 and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 then 
	CastSpellByName(tostring(GetSpellInfo(116858))) 
	LASTCAST = &amp;quot;ChaosBolt&amp;quot;
  	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Immolate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Immolate,_,_,_,_,_,Immolatetimer = UnitDebuffID(&amp;quot;target&amp;quot;,348,&amp;quot;PLAYER&amp;quot;)
local havoc, _, _, HAVstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)  
---------------------------------------------------------------------------------------------

if PQI_MavminsDestruction_ImmolateKThreshold_enable == false
	or (PQI_MavminsDestruction_ImmolateKThreshold_enable == true 
		and UnitHealth(&amp;quot;target&amp;quot;) &amp;gt; PQI_MavminsDestruction_ImmolateKThreshold_value * 1000) then

			if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(348) 
				or PQR_IsMoving(0.3) == true
				or havoc ~= nil and HAVstacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
				or UnitBuffID(&amp;quot;player&amp;quot;,113858) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
				or LASTCAST == &amp;quot;Immolate&amp;quot; and Immolate ~= nil
				or (AOE_MODE and not UnitBuffID(&amp;quot;player&amp;quot;,108683)) then
				return false
			end
			
			if Immolate == nil
				or Immolatetimer - GetTime() &amp;lt; 5 then	
				CastSpellByName(tostring(GetSpellInfo(348)))
				LASTCAST = &amp;quot;Immolate&amp;quot;
				return true
			end
			
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Conflagrate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local BDCount,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896) 
local SaveTime = 20
----------------------------------------------------------------------------

if PQI_MavminsDestruction_EmberSaveChaosBolt_enable then
	SaveTime = PQI_MavminsDestruction_EmberSaveChaosBolt_value
else
	SaveTime = 0
end

if UnitBuffID(&amp;quot;player&amp;quot;,113858) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
	or UnitBuffID(&amp;quot;player&amp;quot;,113858) and BDcount ~= nil 
	or not PQR_SpellAvailable(17962)
	or havoc ~= nil and stacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 
	or not PQI_MavminsDestruction_EmberSaveChaosBolt_enable and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt; 1 then
	return false
end

if GetSpellCharges(17962) == 2
	or BDCount == nil
	or BDCount ~= nil and BDStacks &amp;lt;= 2 then
		if not UnitBuffID(&amp;quot;player&amp;quot;,113858)
			or (UnitBuffID(&amp;quot;player&amp;quot;,113858) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;lt; 1) then
			CastSpellByName(tostring(GetSpellInfo(17962))) 
			LASTCAST = &amp;quot;Conflagrate&amp;quot;
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incinerate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Backdraft,_,_,BDStacks = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local havoc, _, _, havocstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()  
local SaveTime = 100
----------------------------------------------------------------------------------------

if PQI_MavminsDestruction_EmberSaveChaosBolt_enable then
	SaveTime = PQI_MavminsDestruction_EmberSaveChaosBolt_value
else
	SaveTime = 0
end

if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(29722)
	or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116858)
	or Backdraft ~= nil and BDStacks &amp;lt; 3 and darksoul &amp;gt;= SaveTime and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt; 1 
	or not PQI_MavminsDestruction_EmberSaveChaosBolt_enable and Backdraft ~= nil and BDStacks &amp;lt; 3 and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt; 1
	or havoc ~= nil and stacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
--	or AOE_MODE and not UnitBuffID(&amp;quot;player&amp;quot;,108683) and  UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
	or UnitBuffID(&amp;quot;player&amp;quot;,113858) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 and Backdraft ~= nil and BDStacks &amp;lt; 3 and not AOE_MODE then
	return false
end

if Backdraft ~= nil and BDStacks &amp;gt;= 3
	or UnitPower(&amp;quot;player&amp;quot;, 14) &amp;lt; 1
	or not UnitBuffID(&amp;quot;player&amp;quot;,113858) and GetSpellCharges(17962) == 0
	or UnitBuffID(&amp;quot;player&amp;quot;,108683) then
	CastSpellByName(tostring(GetSpellInfo(29722)))
	LASTCAST = &amp;quot;Incinerate&amp;quot;
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dark Soul : Instability</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_DarkSoul_enable == true then

	if PQI:IsHotkeys(PQI_MavminsDestruction_DarkSoul_key) and PQR_SpellAvailable(113858) and UnitExists(&amp;quot;target&amp;quot;) and not GetCurrentKeyBoardFocus()then
		CastSpellByName(GetSpellInfo(113858),nil)
	   	RunMacroText(&amp;quot;/use 10&amp;quot;)
	  	RunMacroText(&amp;quot;/use 13&amp;quot;)
	   	RunMacroText(&amp;quot;/use 14&amp;quot;)	
	   	return true
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rain of Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Playermana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
---------------------------------------------------------------------------
if PQI_MavminsDestruction_RainofFire_enable or PQI_MavminsDestruction_AutoRainofFire_enable then

	if PQI:IsHotkeys(PQI_MavminsDestruction_RainofFire_key) and PQR_SpellAvailable(5740) and not GetCurrentKeyBoardFocus()
		or (AUTO_ROF == true and UnitBuffID(&amp;quot;player&amp;quot;,5740) == nil and PQR_SpellAvailable(5740) and Playermana &amp;gt;=40) then
		
		if PQI_MavminsDestruction_AutoMannorothsFury_enable == true then
			if IsPlayerSpell(108508) == true and PQR_SpellAvailable(108508) == true then
				CastSpellByName(GetSpellInfo(108508))
			end
		end
		
		SpellCancelQueuedSpell() 
		CastSpellByName(GetSpellInfo(5740))
		
		if SpellIsTargeting() then
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		return true
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Dark Intent --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_AutoDarkIntent_enable then

	if IsMounted() then
	return false
	end
	
	if not UnitBuffID(&amp;quot;player&amp;quot;,109773)
		and not UnitBuffID(&amp;quot;player&amp;quot;,20217)
		and not UnitBuffID(&amp;quot;player&amp;quot;,90363)
		and not UnitBuffID(&amp;quot;player&amp;quot;,61316) then
		CastSpellByName(GetSpellInfo(109773),&amp;quot;player&amp;quot;)
	return true
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Havoc (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
----------------------------------------------------------------------------
if PQI_MavminsDestruction_HavocMouseover_enable == true then

	if PQR_SpellAvailable(80240) 
		and IsSpellInRange(tostring(GetSpellInfo(80240)), &amp;quot;mouseover&amp;quot;) == 1
		and havoc == nil
		and PQI:IsHotkeys(PQI_MavminsDestruction_HavocMouseover_key)
		and not GetCurrentKeyBoardFocus()
	 	and UnitExists(&amp;quot;mouseover&amp;quot;)
	 	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;) ~= 1
	 	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) == 1
	 	and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 then
	 	CastSpellByName(GetSpellInfo(80240),&amp;quot;mouseover&amp;quot;)
	 	return true
	 end
	 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Havoc (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Backdraft,_,_,Incin = UnitBuffID(&amp;quot;player&amp;quot;,117896)
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local havoc, _, _, stacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
----------------------------------------------------------------------------

if PQR_SpellAvailable(80240)
 	and UnitExists(&amp;quot;focus&amp;quot;)
	and IsSpellInRange(tostring(GetSpellInfo(80240)), &amp;quot;focus&amp;quot;) == 1
	and havoc == nil
 	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;) ~= 1
 	and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
 	and darksoul &amp;gt; 10
 	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) == 1 then
 	CastSpellByName(GetSpellInfo(80240),&amp;quot;focus&amp;quot;)
 	return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Immolate (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ImmolateFocus,_,_,_,_,_,ImmolateFocustimer = UnitDebuffID(&amp;quot;focus&amp;quot;,348,&amp;quot;PLAYER&amp;quot;)
local havoc, _, _, HAVstacks = UnitBuffID( &amp;quot;player&amp;quot;, 80240)
---------------------------------------------------------------------------------------------


if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(348) 
	or PQR_IsMoving(0.3) == true
	or havoc ~= nil and HAVstacks == 3 and UnitExists(&amp;quot;focus&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
	or UnitBuffID(&amp;quot;player&amp;quot;,113858) and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
	or IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) ~= 1
	or UnitExists(&amp;quot;focus&amp;quot;) ~= 1 then
	return false
end

if ImmolateFocus == nil or ImmolateFocustimer - GetTime() &amp;lt; 5
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;) ~= 1
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
	and IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) == 1 then	
	CastSpellByName(GetSpellInfo(348),&amp;quot;focus&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Unending Resolve</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
-------------------------------------------------------------------------------------------

if PQI_MavminsDestruction_UnendingResolve_enable then
	if Playerhealth &amp;lt; PQI_MavminsDestruction_UnendingResolve_value and PQR_SpellAvailable(104773) then
		CastSpellByName(GetSpellInfo(104773),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Mortal Coil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
-------------------------------------------------------------------------------

if PQI_MavminsDestruction_MortalCoil_enable then
	if UnitDebuffID(&amp;quot;player&amp;quot;, 123184) == nil then
		if select(2,GetTalentRowSelectionInfo(2)) == 5
			and Playerhealth &amp;lt; PQI_MavminsDestruction_MortalCoil_value
			and PQR_SpellAvailable(6789)
			and UnitExists(&amp;quot;target&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(6789))) 
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fel Flame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_IsMoving(0.3) and select(2,GetTalentRowSelectionInfo(6)) ~= 17 then 
	CastSpellByName(tostring(GetSpellInfo(77799))) 
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Curse of Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Elements, _, _, _, _, _, ElementsEndTime = UnitDebuff( &amp;quot;target&amp;quot;, 1490 )
-------------------------------------------------------------------------------------

if UnitLevel(&amp;quot;target&amp;quot;) == -1
	and not UnitDebuffID(&amp;quot;target&amp;quot;,34889)
	and not UnitDebuffID(&amp;quot;target&amp;quot;,24844)
	and not UnitDebuffID(&amp;quot;target&amp;quot;,93068)
	and not UnitDebuffID(&amp;quot;target&amp;quot;,1490)
	or Elements ~= nil and ElementsEndTime - GetTime() &amp;lt;= 15 then
	CastSpellByName(GetSpellInfo(1490),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Curse of Elements (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Elements, _, _, _, _, _, ElementsEndTime = UnitDebuff( &amp;quot;focus&amp;quot;, 1490 )
-------------------------------------------------------------------------------------

if UnitExists(&amp;quot;focus&amp;quot;) ~= 1
	or IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) ~= 1 then
	return false
end

if UnitLevel(&amp;quot;target&amp;quot;) == -1
	and not UnitDebuffID(&amp;quot;focus&amp;quot;,34889)
	and not UnitDebuffID(&amp;quot;focus&amp;quot;,24844)
	and not UnitDebuffID(&amp;quot;focus&amp;quot;,93068)
	and not UnitDebuffID(&amp;quot;focus&amp;quot;,1490)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) == 1
	and IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) == 1
	or Elements ~= nil
	and ElementsEndTime - GetTime() &amp;lt;= 15 
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) == 1 
	and IsSpellInRange(tostring(GetSpellInfo(1490)), &amp;quot;focus&amp;quot;) == 1 then
	CastSpellByName(GetSpellInfo(1490),&amp;quot;focus&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowburn</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)  
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local DarksoulCD = SpellStart + SpellDuration - GetTime()    
local BurnSaveTime = 20
----------------------------------------------------------------------------

if PQI_MavminsDestruction_EmberSaveShadowburn_enable then
	BurnSaveTime = PQI_MavminsDestruction_EmberSaveShadowburn_value
else
	BurnSaveTime = 0
end

if UnitExists(&amp;quot;target&amp;quot;) ~= nil and Targethealth &amp;lt; 20 and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 then
	if not PQI_MavminsDestruction_EmberSaveShadowburn_enable
		or UnitBuffID(&amp;quot;player&amp;quot;,113858) ~= nil
		or DarksoulCD &amp;gt;= BurnSaveTime
		or UnitPower(&amp;quot;player&amp;quot;, 14) == 4 then
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(17877),&amp;quot;target&amp;quot;)
		return true
	end
end

if UnitExists(&amp;quot;focus&amp;quot;) then
	local FocusHealth = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
	if not UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;)
		and FocusHealth &amp;lt;= 7
		and IsSpellInRange(tostring(GetSpellInfo(17877)), &amp;quot;focus&amp;quot;) == 1
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 then
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(17877),&amp;quot;focus&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local HealthstoneCD = select(2,GetItemCooldown(5512))
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if PQI_MavminsDestruction_Healthstone_enable then
	if Playerhealth &amp;lt;= PQI_MavminsDestruction_Healthstone_value
		and HealthstoneCD == 0 then
		UseItemByName(5512, &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- AoE Toggle --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_AOEMode_enable then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI:IsHotkeys(PQI_MavminsDestruction_AOEMode_key) and GetTime() - modtime &amp;gt; 0.3 and not GetCurrentKeyBoardFocus() then
		modtime = GetTime()
		if AOE_MODE then
	    	AOE_MODE = false
	    	--PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET MODE&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
	    	if PQI_MavminsDestruction_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Area of Effect: \124cFFE61515Disabled&amp;quot;)
	    	end
	    else
	        AOE_MODE = true
	        --PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;AOE MODE&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
	        if PQI_MavminsDestruction_ChatNotifications_enable then
	  			PQR_WriteToChat(&amp;quot;Area of Effect: \124cFF15E615Enabled&amp;quot;)
	  		end
	    end
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fire and Brimstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,108683) == nil
	and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
	and AOE_MODE == true then
	CastSpellByName(tostring(GetSpellInfo(108683)))
	--PQR_DelayRotation(0.6)
	return true
end

if UnitBuffID(&amp;quot;player&amp;quot;,108683) ~= nil
	and (UnitPower(&amp;quot;player&amp;quot;, 14) &amp;lt; 1 or AOE_MODE == false) then
	CastSpellByName(tostring(GetSpellInfo(108683)))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- RoF Toggle --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if modtime == nil then
	modtime = 0
end

if  PQI_MavminsDestruction_AutoRainofFire_enable == true
	and PQI:IsHotkeys(PQI_MavminsDestruction_AutoRainofFire_key)
	and GetTime() - modtime &amp;gt; 0.3
	and not GetCurrentKeyBoardFocus() then
	modtime = GetTime()
		if AUTO_ROF == true then
	    	AUTO_ROF = false
	    	if PQI_MavminsDestruction_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Auto Rain of Fire: \124cFFE61515Disabled&amp;quot;)
	    	end
	    else
	        AUTO_ROF = true
	        if PQI_MavminsDestruction_ChatNotifications_enable then
	  			PQR_WriteToChat(&amp;quot;Auto Rain of Fire: \124cFF15E615Enabled&amp;quot;)
	  		end
	    end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Ember Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
-------------------------------------------------------------------------------

if PQI_MavminsDestruction_EmberTap_enable then
	if Playerhealth &amp;lt; PQI_MavminsDestruction_EmberTap_value
		and PQR_SpellAvailable(114635)
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 then
		CastSpellByName(tostring(GetSpellInfo(114635))) 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Doomguard / Terrorguard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
---------------------------------------------------------------------------------

if PQI_MavminsDestruction_AutoDoomguard_enable then

	if UnitLevel(&amp;quot;target&amp;quot;) == -1 then
		
		if (select(2,GetTalentRowSelectionInfo(5)) == 14 
			or select(2,GetTalentRowSelectionInfo(5)) == 15) 
			and select(2,GetSpellCooldown(18540)) &amp;lt; 2  then 
			
				if UnitBuffID(&amp;quot;player&amp;quot;,32182)
					or UnitBuffID(&amp;quot;player&amp;quot;,2825) --Bloodlust
					or UnitBuffID(&amp;quot;player&amp;quot;,80353) --Timewarp
					or Targethealth &amp;lt; 21 then
					CastSpellByName(tostring(GetSpellInfo(18540)))
					return true
				end
		end
		
		if select(2,GetTalentRowSelectionInfo(5)) == 13
			and select(2,GetSpellCooldown(112927)) &amp;lt; 2 then
			
				if UnitBuffID(&amp;quot;player&amp;quot;,32182)
					or UnitBuffID(&amp;quot;player&amp;quot;,2825) --Bloodlust
					or UnitBuffID(&amp;quot;player&amp;quot;,80353) --Timewarp
					or Targethealth &amp;lt; 21 then
					CastSpellByName(tostring(GetSpellInfo(112927)))
				end
		
		end
		
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Initialize ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false

	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_MavminsDestro_DATA.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_MavminsDestro_DATA.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

if WarlockInformation == nil then
	WarlockInformation = true
	print(&amp;quot;|cffFF0099--------------------------------------------------------------------&amp;quot;)
	print(&amp;quot;|cffFF0099*-*-*-*-*-*Mavmins Destruction Warlock Profile*-*-*-*-*-*-*&amp;quot;)
	print(&amp;quot;|cffFF0099--------------------------------------------------------------------&amp;quot;)
	
	--initialise AOE and ROF
	AOE_MODE = false
	AUTO_ROF = false
end



-- Don&amp;apos;t automatically start if we&amp;apos;re mounted.
if IsMounted() then return true end

-- Don&amp;apos;t automatically start if we&amp;apos;re dead or a ghost.
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then return true end


if AOE_MODE == false and AUTO_ROF == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET MODE - MANUAL ROF&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

if AOE_MODE == false and AUTO_ROF == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET MODE - AUTOMATIC ROF&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

if AOE_MODE == true and AUTO_ROF == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;AOE MODE - AUTOMATIC ROF&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

if AOE_MODE == true and AUTO_ROF == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;AOE MODE - MANUAL ROF&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Pause ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil then
	POTION_USED = false
	return true
end

if PAUSE_PROFILE
	or (PQI_MavminsDestruction_PauseKeyHold_enable == true
	and PQI:IsHotkeys(PQI_MavminsDestruction_PauseKeyHold_key) 
	and not GetCurrentKeyBoardFocus()) then
	return true
end

--if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil or PAUSE_PROFILE then
--	return true
--end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Summon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_SummonPet_enable then

	if IsMounted() then
		return false
	end
	
	if not UnitExists(&amp;quot;pet&amp;quot;)
		and PQR_IsMoving(0.3) == false
		and not UnitBuffID(&amp;quot;player&amp;quot;,108503)
		and not (PQR_IsCastingSpell(112868) or PQR_IsCastingSpell(112869) or PQR_IsCastingSpell(112867) or PQR_IsCastingSpell(112866))
		and not (PQR_IsCastingSpell(712) or PQR_IsCastingSpell(691) or PQR_IsCastingSpell(697) or PQR_IsCastingSpell(688)) then
		if select(2,GetTalentRowSelectionInfo(5)) == 13 then
			CastSpellByName(tostring(GetSpellInfo(112869)))
			return true
		else
			CastSpellByName(tostring(GetSpellInfo(691)))
		end
	end
	
	if  UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(112868)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(112869)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(112867)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(112866)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(712)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(691)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(697)
		or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(688) then
		if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDead(&amp;quot;pet&amp;quot;) then
			SpellStopCasting()
			return true
		end
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Xoroth/Dismiss</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_FlamesofXoroth_enable then

	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitIsDead(&amp;quot;pet&amp;quot;)
		and PQR_SpellAvailable(120451)
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1
		and select(2,GetTalentRowSelectionInfo(5)) ~= 15 then
		CastSpellByName(tostring(GetSpellInfo(120451)))
		return true
	end
	
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitIsDead(&amp;quot;pet&amp;quot;)
		and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;lt; 1 then
		RunMacroText(&amp;quot;/script PetDismiss()&amp;quot;)
		return true
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Soul Shatter</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_SoulShatter_enable then
	if not UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then
		return false
	end
	
	if UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == 3 and PQR_SpellAvailable(29858) then
		CastSpellByName(GetSpellInfo(29858),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Unbound Will</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_UnboundWill_enable then
	if (UnitIsPossessed(&amp;quot;player&amp;quot;) or UnitIsCharmed(&amp;quot;player&amp;quot;))
		and select(2,GetTalentRowSelectionInfo(4)) == 12 and PQR_SpellAvailable(108482) then
		CastSpellByName(tostring(GetSpellInfo(108482))) 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Grimoire of Service</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_GrimoireofService_enable then

	if select(2,GetTalentRowSelectionInfo(5)) == 14
		and UnitExists(&amp;quot;pet&amp;quot;)
		and not UnitIsDead(&amp;quot;pet&amp;quot;)
		and PQR_SpellAvailable(111897) then
		CastSpellByName(tostring(GetSpellInfo(111897)))
		return true
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Grimoire of Sacrifice</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_GrimoireofSacrifice_enable then

	if select(2,GetTalentRowSelectionInfo(5)) == 15
		and not UnitBuffID(&amp;quot;player&amp;quot;,108503)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and not UnitIsDead(&amp;quot;pet&amp;quot;)
		and PQR_SpellAvailable(108503) then
		CastSpellByName(tostring(GetSpellInfo(108503)))
		return true
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Survival] Sacrificial Pact</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
-------------------------------------------------------------------------------

if PQI_MavminsDestruction_SacrificialPact_enable then
	if select(2,GetTalentRowSelectionInfo(3)) == 8 and Playerhealth &amp;lt; PQI_MavminsDestruction_SacrificialPact_value and UnitExists(&amp;quot;pet&amp;quot;) and PQR_SpellAvailable(108416)
		or select(2,GetTalentRowSelectionInfo(3)) == 8 and PQI:IsHotkeys(PQI_MavminsDestruction_SacrificialPact_key) and PQR_SpellAvailable(108416) and not GetCurrentKeyBoardFocus() then
		CastSpellByName(tostring(GetSpellInfo(108416))) 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Jade Serpent Potion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local JadeSerpentPotion = GetItemCount(76093, nil, true) 
local JadePotCD = select(2,GetItemCooldown(76093))
-------------------------------------------------------------------

if UnitBuffID(&amp;quot;player&amp;quot;,105702) == nil and POTION_USED ~= true then

	if PQI_MavminsDestruction_AutoPotion_enable then
	
		if JadeSerpentPotion == nil or JadeSerpentPotion == 0 then
			return false
		end
		
		if UnitBuffID(&amp;quot;player&amp;quot;,32182)
			or UnitBuffID(&amp;quot;player&amp;quot;,2825)
			or UnitBuffID(&amp;quot;player&amp;quot;,80353) then
			
			if JadeSerpentPotion &amp;gt; 0 and JadePotCD == 0 then
				UseItemByName(76093)
				POTION_USED = true
				return true
			end
		end
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowfury</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_Shadowfury_enable then

	if PQI:IsHotkeys(PQI_MavminsDestruction_Shadowfury_key) and PQR_SpellAvailable(30283) and not GetCurrentKeyBoardFocus() then

		if select(2,GetTalentRowSelectionInfo(2)) == 6 then
			SpellCancelQueuedSpell() 
			CastSpellByName(GetSpellInfo(30283))
				
			if SpellIsTargeting() then
				CameraOrSelectOrMoveStart()
				CameraOrSelectOrMoveStop()
			end
		end
		
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soulstone (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_SoulstoneMouseover_enable then
	if PQI:IsHotkeys(PQI_MavminsDestruction_SoulstoneMouseover_key) and PQR_SpellAvailable(20707) and not GetCurrentKeyBoardFocus() then
		if UnitExists(&amp;quot;mouseover&amp;quot;)
			and UnitIsDead(&amp;quot;mouseover&amp;quot;)
			and IsSpellInRange(tostring(GetSpellInfo(20707)), &amp;quot;mouseover&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(20707),&amp;quot;mouseover&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Banish (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_BanishMouseover_enable then
	if PQI:IsHotkeys(PQI_MavminsDestruction_BanishMouseover_key) and PQR_SpellAvailable(710) and not GetCurrentKeyBoardFocus() then
		if UnitExists(&amp;quot;mouseover&amp;quot;)
			and PQR_IsMoving(0.3) == false
			and IsSpellInRange(tostring(GetSpellInfo(710)), &amp;quot;mouseover&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(710),&amp;quot;mouseover&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Chaos Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) 
local SpellStart, SpellDuration = GetSpellCooldown(113858)
local darksoul = SpellStart + SpellDuration - GetTime()
local SaveTime = 100
--------------------------------------------------------------------------------------

if PQI_MavminsDestruction_EmberSaveChaosBolt_enable then
	SaveTime = PQI_MavminsDestruction_EmberSaveChaosBolt_value
else
	SaveTime = 0
end

if PQI_MavminsDestruction_AutoChaosBolt_enable and UnitPower(&amp;quot;player&amp;quot;, 14) &amp;gt;= 1 and Targethealth &amp;gt; 20 and PQR_IsMoving(0.3) == false then
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) ~= nil
	or (UnitBuffID(&amp;quot;player&amp;quot;,138002) ~= nil and not PQI_MavminsDestruction_EmberSaveChaosBolt_enable)
	or (UnitBuffID(&amp;quot;player&amp;quot;,138002) and darksoul &amp;gt;= SaveTime) then
		CastSpellByName(tostring(GetSpellInfo(116858))) 
	  	return true
  	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
-----------------------------------------------------------------------------------------

-- Don&amp;apos;t use Racials if user tagged off automatic use
if not PQI_MavminsDestruction_AutoRacials_enable then 
	return false
end

-- Draenei: Gift of the Naaru
if IsPlayerSpell(59544) and PQR_SpellAvailable(59544) and Playerhealth &amp;lt; 60 then
	CastSpellByName(GetSpellInfo(59544),&amp;quot;player&amp;quot;)
	return true
end

if UnitBuffID(&amp;quot;player&amp;quot;,32182)
	or UnitBuffID(&amp;quot;player&amp;quot;,2825)
	or UnitBuffID(&amp;quot;player&amp;quot;,80353)
	or UnitBuffID(&amp;quot;player&amp;quot;,113858) then
	-- Troll: Berserking	
	if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) then
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	end
	-- Orc: Blood Fury
	if IsPlayerSpell(33702) and PQR_SpellAvailable(33702) then
		CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fear (Target)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_FearTarget_enable then
	if PQI:IsHotkeys(PQI_MavminsDestruction_FearTarget_key) and PQR_SpellAvailable(5782) and not GetCurrentKeyBoardFocus() then
		if UnitExists(&amp;quot;target&amp;quot;)
			and PQR_IsMoving(0.3) == false
			and IsSpellInRange(tostring(GetSpellInfo(5782)), &amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(5782),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause Toggle --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsDestruction_PauseRotation_enable then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI_MavminsDestruction_PauseRotation_enable == true
		and PQI:IsHotkeys(PQI_MavminsDestruction_PauseRotation_key) 
		and GetTime() - modtime &amp;gt; 0.3 
		and not GetCurrentKeyBoardFocus() then
			modtime = GetTime()
			if PAUSE_PROFILE then
		    	PAUSE_PROFILE = false
		    	if PQI_MavminsDestruction_ChatNotifications_enable then
		    		PQR_WriteToChat(&amp;quot;Rotation Pause: \124cFFE61515Disabled&amp;quot;)
		    	end
		    else
		        PAUSE_PROFILE = true
		        if PQI_MavminsDestruction_ChatNotifications_enable then
		  			PQR_WriteToChat(&amp;quot;Rotation Pause: \124cFF15E615Enabled&amp;quot;)
		  		end
		    end
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incinerate Moving</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_IsMoving(0.3) == true and select(2,GetTalentRowSelectionInfo(6)) == 17 then 
	CastSpellByName(tostring(GetSpellInfo(29722)))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mannoroths Fury</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(108508) == true and PQR_SpellAvailable(108508) == true then
	if PQI:IsHotkeys(PQI_MavminsDestruction_MannorothsFury_key) and not GetCurrentKeyBoardFocus() then
		CastSpellByName(tostring(GetSpellInfo(108508))) 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARLOCK>