<?xml version="1.0" encoding="utf-8" ?><WARLOCK><Ability><Name>[Misc] Profile Init</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Variables &amp; Sanity checks
------------------------
-- PQInterface
if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
		PQR_WriteToChat(&amp;quot;|cff9482C9The AddOn PQInterface is not loaded or installed!|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9Version 2.22+ is required to run the profile.|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9You can get the latest version at this location:|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9http://pqrotation.wikia.com/wiki/PQInterface|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_StopRotation()
		return true
else
	local PQIver = tonumber(GetAddOnMetadata(&amp;quot;PQInterface&amp;quot;,&amp;quot;Version&amp;quot;))
	if PQIver &amp;lt; 2.22 then
		PQR_WriteToChat(&amp;quot;|cff9482C9Your PQInterface version is outdated!|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9Version 2.22+ is required to run the profile, you have version &amp;quot;..PQIver..&amp;quot;!|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9You can get the latest version at this location:|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9http://pqrotation.wikia.com/wiki/PQInterface|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

-- Initialize Load-Once Settings
if PQR_RotationStarted then
	PQR_RotationStarted = false

	-- Load Data Files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Hysteria_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737PQR_Hysteria_Data.lua failed to load. Make sure it&amp;apos;s in your Data folder!|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737PQR_PQI.lua failed to load. Make sure it&amp;apos;s in your Data folder!|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
	
	if not mentallyDemoFirstStart then
		-- Initialize Event Tracker
		local Hysteria = CreateFrame(&amp;quot;Frame&amp;quot;)
		Hysteria:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
		Hysteria:SetScript(&amp;quot;OnEvent&amp;quot;, HysteriaFrame_OnEvent)
		Hysteria:Show()
		
		-- Demonology Settings
		burnFury = false
		
		mentallyDemoFirstStart = true
		PQR_WriteToChat(&amp;quot;|cff9482C9Hysteria Demonology Warlock data is |cff82cee7Loaded!|cffffffff&amp;quot;)
	end
end

-- Slash Command Queue
SLASH_ecast1 = &amp;quot;/ecast&amp;quot;
function SlashCmdList.ecast(ecast, editbox)
	if tonumber(ecast) ~= nil then PQ_QueuedSpell = ecast
		else print(&amp;quot;You can only pass a spell ID to /ecast!&amp;quot;) end
end

-- Initialize Variables
PQR_ResetMovementTime = 0.3
isAOE = strmatch(PQR_RotationName, &amp;quot;AoE&amp;quot;)
isCleave = strmatch(PQR_RotationName, &amp;quot;Cleave&amp;quot;)
isOmni = strmatch(PQR_RotationName, &amp;quot;Omni&amp;quot;)
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-- Initialize Talents
local PQ_KC = PQ_KC
if IsPlayerSpell(PQ_KC) then KJcunning = true else KJcunning = false end

-- Initialize Trinkets
local itemCheck = itemCheck
local visionTrinket = visionTrinket
if itemCheck(visionTrinket) == 1 then UVLS = true else UVLS = false end


------------------------------------------------------------
-- Misc. Checks
------------------------
-- Reset DoT Tracker if we&amp;apos;re not in combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and #dotTracker &amp;gt; 0 then
	dotTracker = {}
end

-- Healing Settings
DrainLife = false
HFunnel = false

-- We want to pause the entire profile when we&amp;apos;re doing certain things..
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)		-- Snap! Deaded
	or UnitBuffID(&amp;quot;player&amp;quot;,104934)	-- Eating (Feast/Banquet)
	or UnitBuffID(&amp;quot;player&amp;quot;,80169)	-- Eating Normal
	or UnitBuffID(&amp;quot;player&amp;quot;,87959)	-- Drinking Normal
	or UnitBuffID(&amp;quot;player&amp;quot;,11392)	-- 18 sec Invis Pot (for CMs)
	or UnitBuffID(&amp;quot;player&amp;quot;,3680)	-- 15 sec Invis pot  (for CMs)
	or IsMounted()					-- Mounted, lol. Get it?
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Cast Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Cancel unwanted casts, channels or buffs.
------------------------

-- Soul Fire
local PQ_MCore = PQ_MCore
local OmniAoE = OmniAoE
local PQ_SoulFire = PQ_SoulFire
if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then
	if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_SoulFire)
		then RunMacroText(&amp;quot;/stopcasting&amp;quot;) return true end
end

if isOmni and OmniAoE then return false end

-- Harvest Life
local PQ_HL = PQ_HL
if not isAOE and IsPlayerSpell(PQ_HL) then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_HL) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) end
end

-- Hellfire
local PQ_Hellfire = PQ_Hellfire
if not isAOE and IsPlayerSpell(PQ_Hellfire) then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Hellfire) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) end
end

-- Metamorphosis
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then CancelShapeshiftForm() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Automatic Buffing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Automatic Buffing.
------------------------
local PQ_DI = PQ_DI
local PQ_AuraInfo = PQ_AuraInfo

if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then return false end

-- Dark Intent
if IsPlayerSpell(PQ_DI) and not PQ_AuraInfo(5,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(PQ_DI),&amp;quot;player&amp;quot;) return true
end

-- Mannoroth&amp;apos;s Fury
if PQI_MentallyOffensiveSettings_AutoMannorothsFury_enable then
	local PQ_MF = PQ_MF
	local PQ_ImmoAura = PQ_ImmoAura
	local PQ_Hellfire = PQ_Hellfire
	
	if not IsPlayerSpell(PQ_MF) then return false end
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_MF) then return false end
	if not PQR_SpellAvailable(PQ_MF) then return false end
	
	if isAOE or (isOmni and OmniAoE) then
		if UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) or UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Hellfire) then
			CastSpellByName(GetSpellInfo(PQ_MF),&amp;quot;player&amp;quot;) return true
		end
	end
end

-- Dark Intent: Raid Buffing
if PQI_MentallyDefensiveSettings_RaidBuffing_enable then
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		if not PQ_AuraInfo(5,member) and IsSpellInRange(GetSpellInfo(PQ_DI),member) == 1 then
			if UnitIsDeadOrGhost(member) then return false end
			if PQR_IsOutOfSight(member,1) then return false end
			
			CastSpellByName(GetSpellInfo(PQ_DI),member) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pet Management</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Imp = PQ_Imp
local PQ_Succubus = PQ_Succubus
local PQ_Felguard = PQ_Felguard
local PQ_Supremacy = PQ_Supremacy
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Felhunter = PQ_Felhunter
local PQ_Voidwalker = PQ_Voidwalker

if not PQI_MentallyOffensiveSettings_SummonPet_enable then return false end
local v=PQI_MentallyOffensiveSettings_SummonPet_value or 5

-- When GoSac is selected, we have nothing here to do.
if IsPlayerSpell(PQ_Sacrifice) then return false end

if PQR_IsMoving(0.1) then return false end

-- Determine which pet we&amp;apos;re summoning.
if IsPlayerSpell(PQ_Supremacy) then
	if v == 1 then petSummon = 112866
		elseif v == 2 then petSummon = 112867
		elseif v == 3 then petSummon = 112869
		elseif v == 4 then petSummon = 112868
		elseif v == 5 then petSummon = 112870 end
else
	if v == 1 then petSummon = PQ_Imp
		elseif v == 2 then petSummon = PQ_Voidwalker
		elseif v == 3 then petSummon = PQ_Felhunter
		elseif v == 4 then petSummon = PQ_Succubus
		elseif v == 5 then petSummon = PQ_Felguard end
end

-- Try not to spam the ability.
if not PQR_SpellAvailable(petSummon) then return false end
if IsFlying() then return false end
if IsFalling() then return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(petSummon) then
	if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
		SpellStopCasting()
	end
	return false
end
	
-- React to Demonic Rebirth
if UnitBuffID(&amp;quot;player&amp;quot;,108559) then
	CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
end

-- Summon our Selected Pet
if not UnitExists(&amp;quot;pet&amp;quot;) then
	CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Grimoire of Sacrifice</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Imp = PQ_Imp
local PQ_Succubus = PQ_Succubus
local PQ_Felguard = PQ_Felguard
local PQ_Supremacy = PQ_Supremacy
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Felhunter = PQ_Felhunter
local PQ_Voidwalker = PQ_Voidwalker
local TargetValidation = TargetValidation

-- Buff yourself with Sacrifice
if PQI_MentallyOffensiveSettings_GrimoirePet_enable then
	local v=PQI_MentallyOffensiveSettings_GrimoirePet_value or 5
	
	-- When GoSup/GoServ is selected, we have nothing here to do.
	if IsPlayerSpell(PQ_Service) then return false end
	if IsPlayerSpell(PQ_Supremacy) then return false end
	
	-- Determine which pet we&amp;apos;re summoning.
	if v == 1 then petSummon = PQ_Imp
		elseif v == 2 then petSummon = PQ_Voidwalker
		elseif v == 3 then petSummon = PQ_Felhunter
		elseif v == 4 then petSummon = PQ_Succubus
		elseif v == 5 then petSummon = PQ_Felguard end
		
	-- Try not to spam the ability.
	if IsFlying() then return false end
	if IsFalling() then return false end
	if not PQR_SpellAvailable(petSummon) then return false end
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Sacrifice) then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(petSummon) then
			if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
				SpellStopCasting()
			end
			return false
		end
	end
	
	-- Grimoire of Sacrifice
	if IsPlayerSpell(PQ_Sacrifice) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Sacrifice) and PQR_SpellAvailable(PQ_Sacrifice) then
			if not UnitExists(&amp;quot;pet&amp;quot;) then
				CastSpellByName(GetSpellInfo(petSummon),&amp;quot;player&amp;quot;) return true
			else
				CastSpellByName(GetSpellInfo(PQ_Sacrifice),&amp;quot;player&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Curse of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MP = PQ_MP
local PQ_FB = PQ_FB
local PQ_LB = PQ_LB
local PQ_AOTE = PQ_AOTE
local PQ_COTE = PQ_COTE
local OmniAoE = OmniAoE
local SpecialUnit = SpecialUnit
local TargetValidation = TargetValidation

-- Disable when in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if isOmni and OmniAoE then return false end

-- Not a boss or a special add, ignore.
if not SpecialUnit() then return false end

-- Magic Vulnerability exists on target
if UnitDebuffID(&amp;quot;target&amp;quot;,PQ_MP)
	or UnitDebuffID(&amp;quot;target&amp;quot;,PQ_FB)
	or UnitDebuffID(&amp;quot;target&amp;quot;,PQ_LB)
	or UnitDebuffID(&amp;quot;target&amp;quot;,PQ_AOTE)
	or UnitDebuffID(&amp;quot;target&amp;quot;,PQ_COTE)
then return false end

-- Cast when no Magic Vulnerability debuff active
if TargetValidation(&amp;quot;target&amp;quot;,PQ_COTE) then
	CastSpellByName(GetSpellInfo(PQ_COTE),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Trigger: Hold Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Cooldown Hold Trigger
------------------------
if not SCDtimer then SCDtimer = 0 end
if not SCD then SCD = false end
if not PQI_MentallyOffensiveSettings_ToggleHoldCooldown_enable then return false end

-- Disable all CD holds when we change modes
if isAOE or (isOmni and OmniAoE) then
	if SCD then SCD = false end
end

if SCD then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Hold: Enabled&amp;quot;, nil, &amp;quot;DC143C&amp;quot;)
else
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Hold: Disabled&amp;quot;, nil, &amp;quot;79BAEC&amp;quot;)
end

if PQI_MentallyOffensiveSettings_ToggleHoldCooldown_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_ToggleHoldCooldown_key)
	and GetTime() - SCDtimer &amp;gt; 1
then
	SCDtimer = GetTime()
	if SCD then
		SCD = false
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Hold: |cff79BAECDisabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		SCD = true
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Hold: |cffDC143CEnabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Herbalism: Lifeblood</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SCD = SCD
local SpecialUnit = SpecialUnit

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Herbalism&amp;apos;s Lifeblood
PQ_Lifeblood = {81708,74497,121279,55428,55480,55500,55501,55502,55503}

-- Did we enable boss only CDs?
if PQI_MentallyOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then return false end
end

for i=1,#PQ_Lifeblood do
	if IsPlayerSpell(PQ_Lifeblood[i])
		and PQR_SpellAvailable(PQ_Lifeblood[i])
		and not SCD
	then CastSpellByName(GetSpellInfo(PQ_Lifeblood[i]),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SCD = SCD
local SpecialUnit = SpecialUnit
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Don&amp;apos;t use Racials if user tagged off automatic use
if not PQI_MentallyOffensiveSettings_AutoRacials_enable then return false end

-- Draenei: Gift of the Naaru
if IsPlayerSpell(59544) and PQR_SpellAvailable(59544) and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 60 then
	CastSpellByName(GetSpellInfo(59544),&amp;quot;player&amp;quot;)
	return true
end

-- Did we enable boss only CDs?
if PQI_MentallyOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then return false end
end

-- Troll: Berserking
if IsPlayerSpell(26297) and not SCD then
	if PQR_SpellAvailable(26297) then
		if UnitExists(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
			return true
		end
	end
end

-- Blood Elf: Arcane Torrent
if IsPlayerSpell(28730) and not SCD then
	if PQR_SpellAvailable(28730) and select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 92
		and UnitExists(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
			return true
	end
end

-- Orc: Blood Fury
if IsPlayerSpell(33702) and not SCD then
	if PQR_SpellAvailable(33702) then
		if UnitExists(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Imp Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_DSK = PQ_DSK
local SpecialUnit = SpecialUnit
local DSCD = GetSpellCooldown(PQ_DSK) + select(2,GetSpellCooldown(PQ_DSK)) - GetTime()

-- Fix Dark Soul&amp;apos;s cooldown check.
if DSCD &amp;lt;= 0 then DSCD = 0 end

-- PQI Setting toggled off
if not PQI_MentallyOffensiveSettings_AutoImpSwarm_enable then return false end

-- We&amp;apos;re not Glyphed
if not IsPlayerSpell(56242) then return false end

-- We&amp;apos;re on a cooldown
if not PQR_SpellAvailable(104316) then return false end

-- No valid unit selected
if not UnitExists(&amp;quot;target&amp;quot;) or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) then return false end

-- Cast when Dark Soul is up.
if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then
	CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true end

-- Dark Soul on Cooldown, pair it up.
if DSCD &amp;gt; 0 and DSCD &amp;gt; PQ_Round(120/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),3) then
	CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true end

-- Target about to die
if T2D(&amp;quot;target&amp;quot;) &amp;lt; 32 and SpecialUnit() then
	CastSpellByName(GetSpellInfo(104316),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dark Soul: Knowledge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK

-- Disable ability if we disabled it in PQI
if not PQI_MentallyOffensiveSettings_DarkSoul_enable then return false end

if IsPlayerSpell(PQ_DSK)
	and PQR_SpellAvailable(PQ_DSK)
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_DarkSoul_key)
	and not GetCurrentKeyBoardFocus()
then
	mentalMessage:message(&amp;quot;\124cFFAADD00Casting: Dark Soul&amp;quot;)
	CastSpellByName(GetSpellInfo(PQ_DSK),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Grimoire of Service</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK
local PQ_GImp = PQ_GImp
local holdAbility = holdAbility
local SpecialUnit = SpecialUnit
local PQ_SoulFire = PQ_SoulFire
local PQ_Supremacy = PQ_Supremacy
local PQ_Sacrifice = PQ_Sacrifice
local PQ_GSuccubus = PQ_GSuccubus
local PQ_GFelguard = PQ_GFelguard
local PQ_GFelhunter = PQ_GFelhunter
local PQ_GVoidwalker = PQ_GVoidwalker
local TargetValidation = TargetValidation

if not PQI_MentallyOffensiveSettings_GrimoirePet_enable then return false end
local v=PQI_MentallyOffensiveSettings_GrimoirePet_value or 5

-- Don&amp;apos;t use outside of Dark Soul
if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then return false end

-- When GoSup/GoSac is selected, we have nothing here to do.
if IsPlayerSpell(PQ_Sacrifice) then return false end
if IsPlayerSpell(PQ_Supremacy) then return false end

-- Determine which pet we&amp;apos;re summoning.
if v == 1 then petSummon = PQ_GImp
	elseif v == 2 then petSummon = PQ_GVoidwalker
	elseif v == 3 then petSummon = PQ_GFelhunter
	elseif v == 4 then petSummon = PQ_GSuccubus
	elseif v == 5 then petSummon = PQ_GFelguard end

-- Try not to spam the ability.
if IsFlying() then return false end
if IsFalling() then return false end
if not PQR_SpellAvailable(petSummon) then return false end

-- Did we enable boss only CDs?
if PQI_MentallyOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then return false end
end

-- Grimoire of Service
if IsPlayerSpell(PQ_Service) then
	-- Pause the usage of this ability.
	if holdAbility then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
		mentalMessage:message(&amp;quot;\124cFFAADD00Casting: Grimoire of Service&amp;quot;)
		CastSpellByName(GetSpellInfo(petSummon),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Command Demon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Service = PQ_Service
local holdAbility = holdAbility
local PQ_Sacrifice = PQ_Sacrifice
local PQ_Supremacy = PQ_Supremacy

-- we&amp;apos;re using GoSac, do nothing
if IsPlayerSpell(PQ_Sacrifice) then return false end

-- Pause the usage of this ability.
if holdAbility then return false end

-- Autocast Pursuit
if not select(2,GetSpellAutocast(30151)) then
	EnableSpellAutocast(GetSpellInfo(30151))
end
-- Autocast Felguard: Legion Strike
if not select(2,GetSpellAutocast(30213)) then
	EnableSpellAutocast(GetSpellInfo(30213))
end
-- Autocast Wrathguard: Mortal Cleave
if not select(2,GetSpellAutocast(115625)) then
	EnableSpellAutocast(GetSpellInfo(115625))
end

-- Disable Threatening Presence when we&amp;apos;re in a instance group/raid
if not PQI_MentallyDefensiveSettings_ThreateningPresence_enable then
	if select(2,GetSpellAutocast(134477)) then
		DisableSpellAutocast(GetSpellInfo(134477))
	end
else
	if not select(2,GetSpellAutocast(134477)) then
		EnableSpellAutocast(GetSpellInfo(134477))
	end
end

-- Felstorm
if IsPlayerSpell(PQ_Service) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			mentalMessage:message(&amp;quot;\124cFFAADD00Casting: Fell Storm&amp;quot;)
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- Wrathstorm
if IsPlayerSpell(PQ_Supremacy) then
	if UnitExists(&amp;quot;target&amp;quot;)
		and UnitExists(&amp;quot;pet&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	then
		if PQR_SpellAvailable(115831) and IsSpellInRange(GetSpellInfo(115625),&amp;quot;target&amp;quot;) == 1 then
			mentalMessage:message(&amp;quot;\124cFFAADD00Casting: Wrath Storm&amp;quot;)
			CastSpellByName(GetSpellInfo(119898),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

-- We&amp;apos;ve not yet learned any Level 75 talents, fallback.
if UnitLevel(&amp;quot;player&amp;quot;) &amp;gt;= 48 and UnitLevel(&amp;quot;player&amp;quot;) &amp;lt;= 75 then
	if UnitExists(&amp;quot;pet&amp;quot;)
		and UnitExists(&amp;quot;target&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1 
	then
		if PQR_SpellAvailable(89751) and IsSpellInRange(GetSpellInfo(30213),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(119914),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Doomguard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SDM = PQ_SDM
local PQ_STG = PQ_STG
local PQ_Supremacy = PQ_Supremacy
local mentallyPower = mentallyPower
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- PQI Setting integration
if PQI_MentallyOffensiveSettings_Doomguard_enable
   and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_Doomguard_key) then
   if IsPlayerSpell(PQ_Supremacy) then
	  if PQR_SpellAvailable(PQ_STG) then CastSpellByName(GetSpellInfo(PQ_STG),&amp;quot;target&amp;quot;) return true end
   else
	  if PQR_SpellAvailable(PQ_SDM) then CastSpellByName(GetSpellInfo(PQ_SDM),&amp;quot;target&amp;quot;) return true end
   end
end

-- Did we enable boss only CDs?
if PQI_MentallyOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then return false end
end

if PQI_MentallyOffensiveSettings_AutoDoomguard_enable then
   if Hysteria_UnitInfo(&amp;quot;target&amp;quot;) &amp;lt;= 21 or mentallyPower() &amp;gt;= 9 then
      if IsPlayerSpell(PQ_Supremacy) then
	     if PQR_SpellAvailable(PQ_STG) then CastSpellByName(GetSpellInfo(PQ_STG),&amp;quot;target&amp;quot;) return true end
      else
	     if PQR_SpellAvailable(PQ_SDM) then CastSpellByName(GetSpellInfo(PQ_SDM),&amp;quot;target&amp;quot;) return true end
      end
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fel Flame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local KJcunning = KJcunning
local PQ_FelFlame = PQ_FelFlame
local OmniAoE = OmniAoE
local TargetValidation = TargetValidation

if KJcunning then return false end
if not PQR_IsMoving(0.1) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
if not PQR_SpellAvailable(PQ_FelFlame) then return false end
if isOmni and OmniAoE then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_FelFlame) then	
	CastSpellByName(GetSpellInfo(PQ_FelFlame),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Life Tap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_Meta = PQ_Meta
local PQ_LifeTap = 1454
local SpecialUnit = SpecialUnit
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))

-- Disable when we&amp;apos;re in execute range.
if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then
	if (fury &amp;lt; 650 and select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 10)
		or (not PQR_SpellAvailable(PQ_Meta) and GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1)
	then CastSpellByName(GetSpellInfo(PQ_LifeTap),&amp;quot;player&amp;quot;) return true end
else
	-- Disable inside Metamorphosis
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	-- If we have more than 60% Mana, don&amp;apos;t bother tapping.
	if select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 50 then return false end
	
	-- Stop if we&amp;apos;re trying to commit suicide.
	if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 30 then return false end
	
	-- Life Tap!
	if PQR_SpellAvailable(PQ_LifeTap) then
		CastSpellByName(GetSpellInfo(PQ_LifeTap),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_Cor = PQ_Cor
local TargetValidation = TargetValidation

-- Disable Boss dotting if we&amp;apos;ve unchecked it in the config.
if not PQI_MentallyOffensiveSettings_AutoBossDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in Demon form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Keep DoTs on bosses when in range
for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,PQ_Cor) then
		if not UnitDebuffID(bossUnit,PQ_Cor,&amp;quot;PLAYER&amp;quot;) and T2D(bossUnit) &amp;gt;= 6 then
			CastSpellByName(GetSpellInfo(PQ_Cor),bossUnit)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Fire</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>local OmniAoE = OmniAoE
local PQ_MCore = PQ_MCore
local PQ_SoulFire = PQ_SoulFire
local spellCooldown = spellCooldown
local TargetValidation = TargetValidation

-- Can&amp;apos;t run and cast
if PQR_IsMoving(0.1) then return false end

-- Omni Mode AOE Check
if isOmni and OmniAoE then return false end

-- Don&amp;apos;t cast while in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Soul Fire is on CD
if not PQR_SpellAvailable(PQ_SoulFire) then return false end

if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then return true end</Lua><RecastDelay>50</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on target
if TargetValidation(&amp;quot;target&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;target&amp;quot;) then
	if isAOE then
		if Cor and CorTimer - GetTime() &amp;lt;= 10 then
			CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;)
			return true
		end
	end
	
	if not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) and T2D(&amp;quot;target&amp;quot;) &amp;gt;= 6 then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Gul&amp;apos;dan</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_GulDan = PQ_GulDan
local PQ_SFlame = PQ_SFlame
local holdAbility = holdAbility
local OmniAoE = OmniAoE
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local Shadowflame = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local ShadowflameCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

-- Pause the usage of this ability.
if holdAbility then return false end

-- Shadowflame is Glyphed
if IsPlayerSpell(63310) then
	if PQR_SpellAvailable(PQ_GulDan) then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
		return true
	end
end

if isAOE or isOmni and OmniAoE then
	if not PQI_MentallyOffensiveSettings_AoESelection_enable then return false end
	local v=PQI_MentallyOffensiveSettings_AoESelection_value or 2
	
	-- We selected Chaos Wave. Opt out.
	if v == 1 then return false end
	
	-- No Chaos Waves please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_GulDan) and PQR_SpellAvailable(PQ_GulDan)
		and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then
		
			-- If Shadowflame is close to coming off CD...
			if ShadowflameCD &amp;lt;= 4.5 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- Double-stack Shadowflame
			if Shadowflame and Shadowflame - GetTime() &amp;lt;= 4 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- With 2 charges, cast as soon as we can
			if GetSpellCharges(PQ_GulDan) &amp;gt; 1 then
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
	end
else
	-- No Chaos Waves please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
	-- Getting awful close to Burn mode, cancel.
	--if fury &amp;gt;= 870 then return false end
	
	-- Fury Burn Phase
	--if furyBurn then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_GulDan) and PQR_SpellAvailable(PQ_GulDan)
		and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then
		
			-- If Shadowflame is close to coming off CD...
			if ShadowflameCD &amp;lt;= 3 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- Double-stack Shadowflame
			if Shadowflame and Shadowflame - GetTime() &amp;lt;= 4 then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
			
			-- With 2 charges, cast as soon as we can
			if GetSpellCharges(PQ_GulDan) &amp;gt; 1 then
				CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
				return true
			end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local OmniAoE = OmniAoE
local PQ_MCore = PQ_MCore
local PQ_ShadowBolt = PQ_ShadowBolt
local TargetValidation = TargetValidation
local moltenCore = select(4,UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore))

-- Omni Mode AOE check
if isOmni and OmniAoE then return false end

-- Don&amp;apos;t cast while in Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Can&amp;apos;t run and cast
if not KJcunning then
	if PQR_IsMoving(0.1) then return false end
end

if moltenCore and moltenCore &amp;gt; 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_ShadowBolt)
    and GetSpellBookItemName(GetSpellInfo(PQ_ShadowBolt)) == GetSpellInfo(PQ_ShadowBolt)
then
	CastSpellByName(GetSpellInfo(PQ_ShadowBolt),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

-- Disable focus dotting if we unticked it.
if not PQI_MentallyOffensiveSettings_FocusDotting_enable then return false end

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on focus
if TargetValidation(&amp;quot;focus&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;focus&amp;quot;) then
	if Cor and CorTimer - GetTime() &amp;lt; 4 then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;focus&amp;quot;) return true
	end
	if not UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) and T2D(&amp;quot;focus&amp;quot;) &amp;gt;= 6 then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;focus&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Cor = PQ_Cor
local isMindControledUnit = isMindControledUnit
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

-- Disable mouseover dotting if we unticked it.
if not PQI_MentallyOffensiveSettings_MouseoverDotting_enable then return false end

-- No unwanted Metamorphosis access
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Use Corruption if not present on mouseover
if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_Cor) and isMindControledUnit(&amp;quot;mouseover&amp;quot;) then
	if Cor and CorTimer - GetTime() &amp;lt; 4 then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;mouseover&amp;quot;) return true
	end
	if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_Cor),&amp;quot;mouseover&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Synapse Springs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DSK = PQ_DSK
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation
local Gloves = GetInventoryItemID(&amp;quot;player&amp;quot;, 10)
local DSCD = GetSpellCooldown(PQ_DSK) + select(2,GetSpellCooldown(PQ_DSK)) - GetTime()

-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

-- Don&amp;apos;t have Engineering.
if not hasEngi then return false end

-- Item not equipped?
if not IsEquippedItem(Gloves) then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Gloves) &amp;gt; 0 then return false end

-- Don&amp;apos;t use if Dark Soul is ready!
if PQR_SpellAvailable(PQ_DSK) or DSCD &amp;lt; 30 then return false end

-- Cast Engineering Gloves
if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	mentalMessage:message(&amp;quot;\124cFFAADD00Used: Synapse Springs&amp;quot;)
	UseItemByName(Gloves) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Soulstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Soulstone = PQ_Soulstone

-- Soulstone Settings
if not PQI_MentallyDefensiveSettings_Soulstone_enable then return false end
local v=PQI_MentallyDefensiveSettings_Soulstone_value or 2

if PQR_IsMoving(0.1) then return false end

-- Stop accessing if we&amp;apos;re casting Soulstone already.
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_Soulstone) then return false end

-- Soulstone: Self
if v == 1 then
    if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	   if PQR_SpellAvailable(PQ_Soulstone) then
		  CastSpellByName(GetSpellInfo(PQ_Soulstone),&amp;quot;player&amp;quot;) return true
	   end
	end
end

-- Battle Res.
if IsInRaid() then group = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end

-- When we&amp;apos;re in a party/raid with more than 1 member...
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Stop out of combat
		if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

		if PQR_SpellAvailable(PQ_Soulstone)
			and UnitIsDeadOrGhost(member)
			and IsSpellInRange(GetSpellInfo(PQ_Soulstone),member) == 1 then
				-- Soulstone: Raid
				if v == 2 then CastSpellByName(GetSpellInfo(PQ_Soulstone),member) return true end
				
				-- Soulstone: Tanks &amp; Healers
				if v == 3 then
					if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
						CastSpellByName(GetSpellInfo(PQ_Soulstone),member) return true
					end
				end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 45 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SP = PQ_SP
local PQ_DB = PQ_DB

if not PQI_MentallyDefensiveSettings_Level45Talent_enable then return false end

-- Sacrificial Pact
if IsPlayerSpell(PQ_SP)
	and PQR_SpellAvailable(PQ_SP)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDefensiveSettings_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_SP),&amp;quot;player&amp;quot;) return true end

-- Dark Bargain
if IsPlayerSpell(PQ_DB)
	and PQR_SpellAvailable(PQ_DB)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDefensiveSettings_Level45Talent_key)
then CastSpellByName(GetSpellInfo(PQ_DB),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Level 30 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MC = PQ_MC
local PQ_SF = PQ_SF
local PQ_DBreath = PQ_DBreath
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Disabled in PQI
if not PQI_MentallyDefensiveSettings_Level30Talent_enable then return false end

-- Howl of Terror
if IsPlayerSpell(PQ_DBreath)
	and PQR_SpellAvailable(PQ_DBreath)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDefensiveSettings_Level30Talent_key)
then CastSpellByName(GetSpellInfo(PQ_DBreath),nil) return true end

-- Mortal Coil
if IsPlayerSpell(PQ_MC)
	and PQR_SpellAvailable(PQ_MC)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDefensiveSettings_Level30Talent_key)
then CastSpellByName(GetSpellInfo(PQ_MC),&amp;quot;target&amp;quot;) return true end

-- Shadowfury
if IsPlayerSpell(PQ_SF)
	and PQR_SpellAvailable(PQ_SF)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDefensiveSettings_Level30Talent_key)
then
	CastSpellByID(PQ_SF)
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_MentallyDefensiveSettings_Healthstone_enable then return false end

if UnitDebuff(&amp;quot;player&amp;quot;,137633)
	or UnitDebuff(&amp;quot;player&amp;quot;,137552)
	or UnitDebuff(&amp;quot;player&amp;quot;,142863)
	or UnitDebuff(&amp;quot;player&amp;quot;,142864)
	or UnitDebuff(&amp;quot;player&amp;quot;,142865)
then return false end

local v=PQI_MentallyDefensiveSettings_Healthstone_value

if GetItemCount(5512) &amp;gt; 0
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and GetItemCooldown(5512) == 0
then UseItemByName(5512) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Ability disabled in PQI
if not PQI_MentallyOffensiveSettings_FragBelt_enable then return false end

-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

-- Don&amp;apos;t have Engineering.
if not hasEngi then return false end

local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)

-- Not equipped?
if not IsEquippedItem(Belt) then return false end

-- Don&amp;apos;t use it in Caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Belt) &amp;gt; 0 then return false end

-- Cast Frag Belt on target during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1
	and GetCurrentKeyBoardFocus() == nil 
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dark Regeneration</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DR = PQ_DR
local Hysteria_UnitInfo = Hysteria_UnitInfo
local v=PQI_MentallyDefensiveSettings_DarkRegeneration_value

if UnitDebuff(&amp;quot;player&amp;quot;,137633)
	or UnitDebuff(&amp;quot;player&amp;quot;,137552)
	or UnitDebuff(&amp;quot;player&amp;quot;,142863)
	or UnitDebuff(&amp;quot;player&amp;quot;,142864)
	or UnitDebuff(&amp;quot;player&amp;quot;,142865)
then return false end

-- Disable ability if we disabled it in PQI
if not PQI_MentallyDefensiveSettings_DarkRegeneration_enable then return false end

if IsPlayerSpell(PQ_DR)
	and PQR_SpellAvailable(PQ_DR)
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
then CastSpellByName(GetSpellInfo(PQ_DR),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Auto: Mortal Coil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MC = PQ_MC
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo
local v=PQI_MentallyDefensiveSettings_MortalCoil_value

if UnitDebuff(&amp;quot;player&amp;quot;,137633)
	or UnitDebuff(&amp;quot;player&amp;quot;,137552)
	or UnitDebuff(&amp;quot;player&amp;quot;,142863)
	or UnitDebuff(&amp;quot;player&amp;quot;,142864)
	or UnitDebuff(&amp;quot;player&amp;quot;,142865)
then return false end

-- Disable ability if we disabled it in PQI
if not PQI_MentallyDefensiveSettings_MortalCoil_enable then return false end

if not PQR_SpellAvailable(PQ_MC) then return false end

-- Mortal Coil
if IsPlayerSpell(PQ_MC)
	and TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire)
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
then CastSpellByName(GetSpellInfo(PQ_MC),&amp;quot;target&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Auto: Potion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_HasHero = PQ_HasHero
local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Potion during Heroism if user tagged off automatic use
if not PQI_MentallyOffensiveSettings_AutoPotion_enable then return false end

-- Disable if we have no potions left
if GetItemCount(76093) &amp;lt; 1 then return false end

-- Disable if Potion is on cooldown
if GetItemCooldown(76093) ~= 0 then return false end

-- Disable if we&amp;apos;re not targeting a boss
if not SpecialUnit() then return false end

-- Disable if we don&amp;apos;t have Heroism or T2D is greater than 20 seconds
if not PQ_HasHero() or T2D(&amp;quot;target&amp;quot;) &amp;gt; 20 then return false end

-- At this point, we should just use the potion if all of the above is true
UseItemByName(76093)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Trigger: Hold Ability</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Ability Hold Trigger
------------------------
local isOmni = isOmni
local OmniAoE = OmniAoE
if not abilityTimer then abilityTimer = 0 end
if not holdAbility then holdAbility = false end
if not PQI_MentallyOffensiveSettings_ToggleHoldAbility_enable then return false end

-- Disable all holds when we change modes
if isAOE or (isOmni and OmniAoE) then
	if holdAbility then holdAbility = false end
end

if PQI_MentallyOffensiveSettings_ToggleHoldAbility_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_ToggleHoldAbility_key)
	and GetTime() - abilityTimer &amp;gt; 1
then
	abilityTimer = GetTime()
	if holdAbility then
		holdAbility = false
		PQR_WriteToChat(&amp;quot;|cff347C2CSpecial Ability Hold: |cff79BAECDisabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		holdAbility = true
		PQR_WriteToChat(&amp;quot;|cff347C2CSpecial Ability Hold: |cffDC143CEnabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Hold: Pause Rotation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyDefensiveSettings_PauseRotation_enable then return false end

if PQI:IsHotkeys(PQI_MentallyDefensiveSettings_PauseRotation_key)
	and not GetCurrentKeyBoardFocus() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Combat Detection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyOffensiveSettings_CombatDetection_enable then return false end

if (not UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;boss1&amp;quot;))
	or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hellfire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Hellfire = PQ_Hellfire
local PQ_SoulFire = PQ_SoulFire
local OmniAoE = OmniAoE
local TargetValidation = TargetValidation

-- Demon Form is bad
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if isOmni and not OmniAoE then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	CastSpellByName(GetSpellInfo(PQ_Hellfire),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_Cor = PQ_Cor
local PQ_DSK = PQ_DSK
local OmniAoE = OmniAoE
local PQ_Doom = PQ_Doom
local PQ_SFlame = PQ_SFlame
local PQ_GulDan = PQ_GulDan
local PQ_SoulFire = PQ_SoulFire
local mentallyPower = mentallyPower
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))
local DSK,_,_,_,_,_,DSKtime = UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK)
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
local Shadowflame = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)
local ShadowflameCD = select(3,GetSpellCharges(PQ_GulDan)) + select(4,GetSpellCharges(PQ_GulDan)) - GetTime()

-- Don&amp;apos;t enter Metamorphosis when it&amp;apos;s on cooldown
if not PQR_SpellAvailable(PQ_Meta) then return false end

-- Don&amp;apos;t try to Enter Metamorphosis in Demon Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Don&amp;apos;t enter Metamorphosis if we&amp;apos;re out of range
if UnitExists(&amp;quot;target&amp;quot;) and IsSpellInRange(GetSpellInfo(PQ_SoulFire),&amp;quot;target&amp;quot;) == 0
	then return false end

-- Don&amp;apos;t enter Metamorphosis if we have no Fury to spend
if fury &amp;lt; 60 then return false end

-- Unerring Vision
if UnitBuffID(&amp;quot;player&amp;quot;,138963) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) CastShapeshiftForm(1) return true end

-- AoE: Metamorphosis
if isAOE or OmniAoE then
	if not forceMeta then
		-- Corruption needs rebuilding
		if Cor and CorTimer - GetTime() &amp;lt;= 10 then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
		
		-- High Fury
		if fury &amp;gt;= 350 then
			CastSpellByName(GetSpellInfo(PQ_Meta),&amp;quot;player&amp;quot;)
			return true
		end
	else if fury &amp;gt;= 250 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end end
else
	if not forceMeta then
		-- Don&amp;apos;t enter Metamorphosis until after Hand of Gul&amp;apos;dan
		if not IsPlayerSpell(63310) then
			if not Doom and GetSpellCharges(PQ_GulDan) &amp;gt; 0 then return false end
		end
		if not UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;) then return false end
		
		-- Iron Qon and Twin Consorts
		if UnitExists(&amp;quot;mouseover&amp;quot;) then
			local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16)
			if npcID == 68078 or npcID == 68904 then
				if not UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;) then
					SpellCancelQueuedSpell()
					CastShapeshiftForm(1) return true
				end
			end
		end
		
		-- Weave Metamorphosis with Dark Soul
		if DSK and fury &amp;gt;= (DSKtime - GetTime())*40 then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
		
		-- Weave Metamorphosis with minimum Fury cap
		if not IsPlayerSpell(63310) then
			if GetSpellCharges(PQ_GulDan) == 0 and ShadowflameCD &amp;gt; 4 and fury &amp;gt; 500 then
				SpellCancelQueuedSpell()
				CastShapeshiftForm(1) return true
			end
		end
		
		-- Enter Metamorphosis to rebuild Corruption
		if Cor and CorTimer - GetTime() &amp;lt; 5 and isMindControledUnit(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
		
		-- Enter Metamorphosis to cast or refresh Doom
		if UnitExists(&amp;quot;target&amp;quot;) and not disableDoom(&amp;quot;target&amp;quot;) then
			local id = UnitGUID(&amp;quot;target&amp;quot;)
			if Doom then
				for i=1,#dotTracker do
					if dotTracker[i].guid == id then
						if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
							if dotTracker[i].crit == true then
								if doomTimer - GetTime() &amp;lt; 60 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
							end
							if dotTracker[i].crit == false then
								if doomTimer - GetTime() &amp;lt; 60 * 1.3 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
							end
						else
							if dotTracker[i].crit == true then
								if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
							end
							if dotTracker[i].crit == false then
								if mentallyPower(603) &amp;gt; dotTracker[i].doomPower then
									if doomTimer - GetTime() &amp;lt; 60 * 1.3 / 2 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
								end
								if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
							end
						end
					end
				end
			else SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
		end
		
		-- High Fury
		if fury &amp;gt; 900 then
			burnFury = true
			SpellCancelQueuedSpell()
			CastShapeshiftForm(1) return true
		end
	elseif SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then
		if fury &amp;gt;= 900 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end
	else if fury &amp;gt;= 250 then SpellCancelQueuedSpell() CastShapeshiftForm(1) return true end end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Aura of the Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_AOTE = PQ_AOTE
local OmniAoE = OmniAoE
local AOTE,_,_,_,_,_,AOTEtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_AOTE,&amp;quot;PLAYER&amp;quot;)

-- Avoid out of combat usage
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t use in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if isOmni and not OmniAoE then return false end

-- Cast when ready
if PQR_SpellAvailable(PQ_AOTE) then
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_AOTE) then CastSpellByName(GetSpellInfo(PQ_AOTE),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_Meta = PQ_Meta
local PQ_Doom = PQ_Doom
local OmniAoE = OmniAoE
local PQ_HasHero = PQ_HasHero
local OmniCleave = OmniCleave
local SpecialUnit = SpecialUnit
local Hysteria_UnitInfo = Hysteria_UnitInfo
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)
local Shadowflame = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local ShadowCount = select(4,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)

-- Don&amp;apos;t try to Exit Metamorphosis in Caster Form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Execute Range
if SpecialUnit() and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20 then return false end

-- UVLS Logic
if UnitBuffID(&amp;quot;player&amp;quot;,138963) then return false end
if UVLS then
	if not PQR_SpellAvailable(PQ_Meta) then
		if GetSpellCooldown(PQ_Meta) + select(2,GetSpellCooldown(PQ_Meta)) - GetTime() &amp;gt; 5 then
			return false
		end
	end
end

-- Forcing Metamorphosis, don&amp;apos;t cancel just yet.
if forceMeta then return false end

-- AoE Mode require different rules.
if isAOE or OmniAoE then
	if fury &amp;lt; 80 then CancelShapeshiftForm() return true end
else
	-- Dark Soul
	if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) then return false end
	
	-- Shadowflame (2)
	if not IsPlayerSpell(63310) then
		if Shadowflame and ShadowCount &amp;gt; 1 then return false end
	end
	
	-- Doom
	if UnitExists(&amp;quot;target&amp;quot;) and not disableDoom(&amp;quot;target&amp;quot;) then
		local id = UnitGUID(&amp;quot;target&amp;quot;)
		if #dotTracker &amp;gt; 0 then
			for i=1,#dotTracker do
				if dotTracker[i].guid == id then
					if not Doom or (Doom and doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every) then return false end
				end
			end
		end
	end
	
	-- Corruption
	if Cor and CorTimer - GetTime() &amp;lt; 18*1.3 and isMindControledUnit(&amp;quot;target&amp;quot;) then return false end
	
	-- Cleave Mode
	if isCleave or OmniCleave then
		local cleaveTargets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}
		for i=1,#cleaveTargets do
			local cleaveCor,_,_,_,_,_,cleaveCorTimer = UnitDebuffID(cleaveTargets[i],PQ_Cor,&amp;quot;PLAYER&amp;quot;)
			
			if cleaveCor and cleaveCorTimer - GetTime() &amp;lt; 25 and isMindControledUnit(cleaveTargets[i]) then return false end
		end
	end
	
	-- Haste procs are VERY valuable
	if hasteBuffs &amp;gt; 0 and not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then CancelShapeshiftForm() return true end
	
	-- Don&amp;apos;t drop out on Intellect buffs
	if intBuffs &amp;gt; 0 and fury &amp;gt; 350 then return false end
	
	-- Heroism
	if PQ_HasHero() and fury &amp;lt; 100 then CancelShapeshiftForm() return true end
	
	-- Low Demonic Fury
	if not burnFury then
		if fury &amp;lt;= 1000 then CancelShapeshiftForm() return true end
	else if fury &amp;lt;= 650 then burnFury = false CancelShapeshiftForm() return true end end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Carrion Swarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Swarm = PQ_Swarm
local holdAbility = holdAbility
local PQ_SoulFire = PQ_SoulFire
local OmniAoE = OmniAoE
local pom = PQR_UnitInfo(&amp;quot;Player&amp;quot;)

-- Disabled in PQI, don&amp;apos;t use
if not PQI_MentallyOffensiveSettings_AutoCarrionSwarm_enable then return false end

if isOmni and not OmniAoE then return false end

if holdAbility then return false end

-- Can only be used during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Disable while on cooldown
if not PQR_SpellAvailable(PQ_Swarm) then return false end

if TargetValidation(&amp;quot;target&amp;quot;, PQ_SoulFire) then
	-- Make sure we&amp;apos;re in melee range of the unit
	if not CheckInteractDistance(&amp;quot;target&amp;quot;,1) then return false end
	
	-- Make sure we&amp;apos;re facing the unit
	if not PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then return false end
	
	CastSpellByName(GetSpellInfo(PQ_Swarm),nil) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Chaos Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_GulDan = PQ_GulDan
local PQ_SoulFire = PQ_SoulFire
local holdAbility = holdAbility
local PQ_ChaosWave = PQ_ChaosWave
local OmniAoE = OmniAoE
local v=PQI_MentallyOffensiveSettings_AoESelection_value or 2

-- Disabled in PQI
if not PQI_MentallyOffensiveSettings_AoESelection_enable then return false end

-- PQInterface Settings
if v == 2 then return false end

-- Disable outside of AoE Mode.
if isAOE or (isOmni and OmniAoE) then
	-- Pause the usage of this ability.
	if holdAbility then return false end
	
	-- No Hand of Gul&amp;apos;dan please!
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and PQR_SpellAvailable(PQ_ChaosWave)
		and GetSpellCharges(PQ_ChaosWave) &amp;gt; 0 then
			CastSpellByName(GetSpellInfo(PQ_ChaosWave),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Immolation Aura</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SoulFire = PQ_SoulFire
local PQ_ImmoAura = PQ_ImmoAura
local OmniAoE = OmniAoE
local TargetValidation = TargetValidation

-- Set default values
if not immolateTimer then immolateTimer = 0 end
if not immolateState then immolateState = false end

if PQI_MentallyOffensiveSettings_ToggleImmolationAura_enable
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_ToggleImmolationAura_key)
	and not GetCurrentKeyBoardFocus()
	and GetTime() - immolateTimer &amp;gt; 1
then
	immolateTimer = GetTime()
	if immolateState then
		immolateState = false
		PQR_WriteToChat(&amp;quot;|cff347C2CImmolation Aura: |cffDC143CDisabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		immolateState = true
		PQR_WriteToChat(&amp;quot;|cff347C2CImmolation Aura: |cff79BAECEnabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end
--if UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then return false end
if not PQR_SpellAvailable(PQ_ImmoAura) then return false end

if isAOE or (isOmni and OmniAoE) then
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then
			CastSpellByName(GetSpellInfo(PQ_ImmoAura),&amp;quot;player&amp;quot;) return true
		end
	end
else
	if immolateState then
		if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
			if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_ImmoAura) then
				CastSpellByName(GetSpellInfo(PQ_ImmoAura),&amp;quot;player&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Touch of Chaos</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ToC = PQ_ToC
local PQ_SoulFire = PQ_SoulFire
local OmniAoE = OmniAoE
local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if not PQR_SpellAvailable(PQ_ToC) then return false end

if isOmni and OmniAoE then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	CastSpellByName(GetSpellInfo(PQ_ToC),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Touch of Chaos (Cleave)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_ToC = PQ_ToC
local PQ_SoulFire = PQ_SoulFire
local OmniCleave = OmniCleave
local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if not PQR_SpellAvailable(PQ_ToC) then return false end

if isCleave or (isOmni and OmniCleave) then
	local cleaveTargets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}
	for i=1,#cleaveTargets do
		local cleaveCor,_,_,_,_,_,cleaveCorTimer = UnitDebuffID(cleaveTargets[i],PQ_Cor,&amp;quot;PLAYER&amp;quot;)
		
		if not cleaveCor then return false end
		
		if TargetValidation(cleaveTargets[i],PQ_SoulFire) then
			if cleaveCor then
				if cleaveCorTimer - GetTime() &amp;lt; 16 then
					CastSpellByName(GetSpellInfo(PQ_ToC),cleaveTargets[i]) return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Void Ray</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL
local PQ_VR = 115422
local PQ_Cor = PQ_Cor
local PQ_SoulFire = PQ_SoulFire
local TargetValidation = TargetValidation
local OmniAoE = OmniAoE
local Cor,_,_,_,_,_,CorTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;)

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

if not PQR_SpellAvailable(PQ_VR) then return false end

if isOmni and not OmniAoE then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then
	-- When we don&amp;apos;t use Harvest Life, nuke!
	if not IsPlayerSpell(PQ_HL) then CastSpellByName(GetSpellInfo(PQ_VR),&amp;quot;target&amp;quot;) return true end
	
	-- Refresh Corruption when we use Harvest Life
	if Cor then
		if CorTimer - GetTime() &amp;lt; 25 then
			CastSpellByName(GetSpellInfo(PQ_VR),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local disableDoom = disableDoom
local PQ_SoulFire = PQ_SoulFire
local mentallyPower = mentallyPower
local TargetValidation = TargetValidation
local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(PQ_Doom) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) and not disableDoom(&amp;quot;target&amp;quot;) then
	local id = UnitGUID(&amp;quot;target&amp;quot;)
	
	if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 10 then return false end
	
	if Doom then
		for i=1,#dotTracker do
			if dotTracker[i].guid == id then
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
					if dotTracker[i].crit == true then
						if doomTimer - GetTime() &amp;lt; 60 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
					end
					if dotTracker[i].crit == false then
						if doomTimer - GetTime() &amp;lt; 60 * 1.3 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
					end
				else
					if dotTracker[i].crit == true then
						if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
					end
					if dotTracker[i].crit == false then
						if mentallyPower(603) &amp;gt; dotTracker[i].doomPower then
							if doomTimer - GetTime() &amp;lt; 60 * 1.3 / 2 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
						end
						if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
					end
				end
			end
		end
	else CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;target&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local disableDoom = disableDoom
local PQ_SoulFire = PQ_SoulFire
local mentallyPower = mentallyPower
local TargetValidation = TargetValidation
local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))

-- Ability disabled in PQI
if not PQI_MentallyOffensiveSettings_AutoBossDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(PQ_Doom) then return false end

for i=1,5 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(bossUnit,PQ_Doom,&amp;quot;PLAYER&amp;quot;)
	
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,PQ_SoulFire) and not disableDoom(bossUnit) then
		local id = UnitGUID(bossUnit)
		
		if Doom then
			for i=1,#dotTracker do
				if dotTracker[i].guid == id then
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						if dotTracker[i].crit == true then
							if doomTimer - GetTime() &amp;lt; 60 then CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
						end
						if dotTracker[i].crit == false then
							if doomTimer - GetTime() &amp;lt; 60 * 1.3 then CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
						end
					else
						if dotTracker[i].crit == true then
							if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
						end
						if dotTracker[i].crit == false then
							if mentallyPower(603) &amp;gt; dotTracker[i].doomPower then
								if doomTimer - GetTime() &amp;lt; 60 * 1.3 / 2 then CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
							end
							if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
						end
					end
				end
			end
		else CastSpellByName(GetSpellInfo(PQ_Doom),bossUnit) return true end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local disableDoom = disableDoom
local PQ_SoulFire = PQ_SoulFire
local mentallyPower = mentallyPower
local TargetValidation = TargetValidation
local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)

-- Ability disabled in PQI
if not PQI_MentallyOffensiveSettings_FocusDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(PQ_Doom) then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,PQ_SoulFire) and not disableDoom(&amp;quot;focus&amp;quot;) then
	local id = UnitGUID(&amp;quot;focus&amp;quot;)
	
	if UnitHealthMax(&amp;quot;focus&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 10 then return false end
	
	if Doom then
		for i=1,#dotTracker do
			if dotTracker[i].guid == id then
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
					if dotTracker[i].crit == true then
						if doomTimer - GetTime() &amp;lt; 60 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true end
					end
					if dotTracker[i].crit == false then
						if doomTimer - GetTime() &amp;lt; 60 * 1.3 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true end
					end
				else
					if dotTracker[i].crit == true then
						if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true end
					end
					if dotTracker[i].crit == false then
						if mentallyPower(603) &amp;gt; dotTracker[i].doomPower then
							if doomTimer - GetTime() &amp;lt; 60 * 1.3 / 2 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true end
						end
						if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true end
					end
				end
			end
		end
	else CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;focus&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Doom (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Doom = PQ_Doom
local disableDoom = disableDoom
local PQ_SoulFire = PQ_SoulFire
local mentallyPower = mentallyPower
local TargetValidation = TargetValidation
local tick_every = 15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))
local Doom,_,_,_,_,_,doomTimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_Doom,&amp;quot;PLAYER&amp;quot;)

-- Ability disabled in PQI
if not PQI_MentallyOffensiveSettings_MouseoverDotting_enable then return false end

-- Don&amp;apos;t try to Doom target in caster form
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Unavailable for some reason
if not PQR_SpellAvailable(PQ_Doom) then return false end

if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_SoulFire) and not disableDoom(&amp;quot;mouseover&amp;quot;) then
	local id = UnitGUID(&amp;quot;mouseover&amp;quot;)
	
	if UnitHealthMax(&amp;quot;mouseover&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 10 then return false end
	
	if Doom then
		for i=1,#dotTracker do
			if dotTracker[i].guid == id then
				if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
					if dotTracker[i].crit == true then
						if doomTimer - GetTime() &amp;lt; 60 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true end
					end
					if dotTracker[i].crit == false then
						if doomTimer - GetTime() &amp;lt; 60 * 1.3 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true end
					end
				else
					if dotTracker[i].crit == true then
						if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true end
					end
					if dotTracker[i].crit == false then
						if mentallyPower(603) &amp;gt; dotTracker[i].doomPower then
							if doomTimer - GetTime() &amp;lt; 60 * 1.3 / 1 then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true end
						end
						if doomTimer - GetTime() &amp;lt; dotTracker[i].doom_tick_every then CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true end
					end
				end
			end
		end
	else CastSpellByName(GetSpellInfo(PQ_Doom),&amp;quot;mouseover&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Metamorphosis: Soul Fire</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>local T2D = T2D
local PQ_DSK = PQ_DSK
local OmniAoE = OmniAoE
local PQ_MCore = PQ_MCore
local itemCheck = itemCheck
local warlockT15 = warlockT15
local PQ_SoulFire = PQ_SoulFire
local PQ_ImmoAura = PQ_ImmoAura
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo
local Hysteria_CastCheck = Hysteria_CastCheck
local fury = select(5,Hysteria_UnitInfo(&amp;quot;player&amp;quot;))
local corruption = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_Cor,&amp;quot;PLAYER&amp;quot;))

-- Only enable for boss-units.
if not SpecialUnit() then return false end

-- Omni Mode AOE check
if isOmni and OmniAoE then return false end

-- No Molten Core procs
if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_MCore) then return false end

-- Don&amp;apos;t enter while in Caster form.
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then return false end

-- Don&amp;apos;t run and cast!
if PQR_IsMoving(0.1) then return false end

-- Soul Fire is on CD
if not PQR_SpellAvailable(PQ_SoulFire) then return false end

-- Check if we need to rebuild Corruption ...
if corruption and corruption - GetTime() &amp;lt; 15 then return false end

-- Cast Soul Fire during Immolation Aura
if PQI_MentallyOffensiveSettings_SoulFirewithImmoAura_enable then
	if itemCheck(warlockT15) &amp;gt;= 2 then
		if fury &amp;lt; 56 then return false end
	else if fury &amp;lt; 180 then return false end end
	
	if Hysteria_CastCheck(PQ_SoulFire,PQ_ImmoAura) then
		if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then return true end
	end
end

-- Cast Soul Fire during Dark Soul
if UnitBuffID(&amp;quot;player&amp;quot;,PQ_DSK) and Hysteria_CastCheck(PQ_SoulFire,PQ_DSK) then
	if itemCheck(warlockT15) &amp;gt;= 2 then
		if fury &amp;gt; 56 and Hysteria_UnitInfo(&amp;quot;target&amp;quot;) &amp;gt; 20 then
			if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then return true end
		end
	else
		if select(2,GetAverageItemLevel(&amp;quot;player&amp;quot;)) &amp;gt; 550 then
			if fury &amp;gt; 80 and Hysteria_UnitInfo(&amp;quot;target&amp;quot;) &amp;gt; 20 then
				if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then return true end
			end
		end
	end
end

-- Cast Soul Fire during Haste procs
if hasteBuffs &amp;gt; 0 then
	if fury &amp;gt; 80 and Hysteria_UnitInfo(&amp;quot;target&amp;quot;) &amp;gt; 20 then
		if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then return true end
	end
end

-- Cast Soul Fire during Execute
if T2D(&amp;quot;target&amp;quot;) &amp;lt;= 15 then
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_SoulFire) then return true end
end</Lua><RecastDelay>50</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Health Funnel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_GHF = nil
local PQ_HFunnel = 755
local HFunnel = HFunnel
local Hysteria_UnitInfo = Hysteria_UnitInfo
local minHP = PQI_MentallyDefensiveSettings_HealthFunnel_value or 45
local maxHP = PQI_MentallyDefensiveSettings_HealthFunnelMax_value or 90

-- Disabled in PQInterface
if not PQI_MentallyDefensiveSettings_HealthFunnel_enable then return false end

if PQR_IsMoving(0.1) then return false end

if Hysteria_UnitInfo(&amp;quot;pet&amp;quot;) &amp;gt;= maxHP then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(755) then
		HFunnel = false
		RunMacroText(&amp;quot;/spellstopcasting&amp;quot;)
	end
	return false
end
if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(755) then return true end

-- Detect Glyph of Health Funnel
if IsPlayerSpell(56238) then PQ_GHF = 114189 end

-- Cast Health Funnel on Pet
if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) then
	if (Hysteria_UnitInfo(&amp;quot;pet&amp;quot;) &amp;lt; minHP) or HFunnel then
		if not PQ_GHF then
			HFunnel = true
			CastSpellByName(GetSpellInfo(PQ_HFunnel),&amp;quot;pet&amp;quot;) return true
		else
			if PQR_SpellAvailable(PQ_GHF) then
				HFunnel = true
				CastSpellByName(GetSpellInfo(PQ_HFunnel),&amp;quot;pet&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Drain Life</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HL = PQ_HL
local PQ_DrainLife = 689
local Hysteria_UnitInfo = Hysteria_UnitInfo
local minHP = PQI_MentallyDefensiveSettings_DrainLife_value or 35
local maxHP = PQI_MentallyDefensiveSettings_DrainLifeMax_value or 75

if UnitDebuff(&amp;quot;player&amp;quot;,137633)
	or UnitDebuff(&amp;quot;player&amp;quot;,137552)
	or UnitDebuff(&amp;quot;player&amp;quot;,142863)
	or UnitDebuff(&amp;quot;player&amp;quot;,142864)
	or UnitDebuff(&amp;quot;player&amp;quot;,142865)
then return false end

if PQR_IsMoving(0.1) then return false end

-- Harvest Life replaces Drain Life...
if IsPlayerSpell(PQ_HL) then PQ_DrainLife = PQ_HL else PQ_DrainLife = 689 end

-- Disabled in PQInterface
if not PQI_MentallyDefensiveSettings_DrainLife_enable then return false end

if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt;= maxHP then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_DrainLife) then
		DrainLife = false
		RunMacroText(&amp;quot;/spellstopcasting&amp;quot;)
	end
	return false
end
if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(PQ_DrainLife) then return true end

if not PQR_SpellAvailable(PQ_DrainLife) then return false end

-- Heal ourself
if TargetValidation(&amp;quot;target&amp;quot;,PQ_DrainLife) and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	if (Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; minHP) or DrainLife then
		DrainLife = true
		CastSpellByName(GetSpellInfo(PQ_DrainLife),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Soulshatter</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Shatter = PQ_Shatter

if not PQI_MentallyDefensiveSettings_Soulshatter_enable then return false end

if not PQR_SpellAvailable(PQ_Shatter) then return false end

if UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == 3 then
	CastSpellByName(GetSpellInfo(PQ_Shatter),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Unbound Will</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_UW = PQ_UW
local Hysteria_UnitInfo = Hysteria_UnitInfo

if not PQR_SpellAvailable(PQ_UW) then return false end

if UnitIsCharmed(&amp;quot;player&amp;quot;) or UnitIsPossessed(&amp;quot;player&amp;quot;) and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt;= 50 then
	CastSpellByName(GetSpellInfo(PQ_UW),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Fear (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_MentallyDefensiveSettings_MouseoverFear_enable then return false end
if not PQI:IsHotkeys(PQI_MentallyDefensiveSettings_MouseoverFear_key) then return false end

-- Fear
if UnitExists(&amp;quot;mouseover&amp;quot;) and IsSpellInRange(GetSpellInfo(5782), &amp;quot;mouseover&amp;quot;) == 1 then
	CastSpellByName(GetSpellInfo(5782),&amp;quot;mouseover&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Demonic Portal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_MentallyDefensiveSettings_DemonicTeleport_enable then return false end
if not PQI:IsHotkeys(PQI_MentallyDefensiveSettings_DemonicTeleport_key) then return false end

-- Demonic Teleport
if not UnitBuffID(&amp;quot;player&amp;quot;,48018) then
	if PQR_IsMoving(0.1) then return false end
	CastSpellByName(GetSpellInfo(48018),&amp;quot;player&amp;quot;) return true
else
	CastSpellByName(GetSpellInfo(48020),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Trigger: Omni AoE/Cleave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Omni AoE/Cleave Toggles - Bitches n&amp;apos; hoes.
------------------------
if not AoEtimer then AoEtimer = 0 end
if not CleaveTimer then CleaveTimer = 0 end
if not OmniAoE then OmniAoE = false end
if not OmniCleave then OmniCleave = false end
if not PQI_MentallyOffensiveSettings_ToggleOmniCleave_enable 
   and not PQI_MentallyOffensiveSettings_ToggleOmniAoE_enable then return false end

-- AoE Toggle --
if PQI_MentallyOffensiveSettings_ToggleOmniAoE_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_ToggleOmniAoE_key)
	and GetTime() - AoEtimer &amp;gt; 1
then
	AoEtimer = GetTime()
	if OmniAoE then
		OmniAoE = false
		PQR_WriteToChat(&amp;quot;|cff00BFFFOmni AoE: |cff79BAECDisabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		OmniAoE = true
		PQR_WriteToChat(&amp;quot;|cff00BFFFOmni AoE: |cffDC143CEnabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end
-- AoE Toggle --

-- Cleave Toggle --
if PQI_MentallyOffensiveSettings_ToggleOmniCleave_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_ToggleOmniCleave_key)
	and GetTime() - CleaveTimer &amp;gt; 1
then
	CleaveTimer = GetTime()
	if OmniCleave then
		OmniCleave = false
		PQR_WriteToChat(&amp;quot;|cffBFFF00Omni Cleave: |cff79BAECDisabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		OmniCleave = true
		PQR_WriteToChat(&amp;quot;|cffBFFF00Omni Cleave: |cffDC143CEnabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end
-- Cleave Toggle --</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Create Healthstone</Name><Default>false</Default><SpellID>6201</SpellID><Actions></Actions><Lua>local getHealthstoneCharges = GetItemCount(5512, nil, true)

if PQR_IsMoving(0.1) then return false end

-- Don&amp;apos;t spam the Ability
if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then return false end

-- Create some healthstones!
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and getHealthstoneCharges &amp;lt; 3 then
	return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Boss Immunities</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Let&amp;apos;s try and detect immunities
if UnitBuffID(&amp;quot;target&amp;quot;,116994) or UnitBuffID(&amp;quot;target&amp;quot;,122540) or UnitBuffID(&amp;quot;target&amp;quot;,123250) or UnitBuffID(&amp;quot;target&amp;quot;,106062) or UnitBuffID(&amp;quot;target&amp;quot;,110945)
	then return false end
	
-- Cancel spell casts or channels on Silences
if UnitExists(&amp;quot;boss1&amp;quot;) or UnitExists(&amp;quot;target&amp;quot;) then
	if UnitCastingInfo(&amp;quot;boss1&amp;quot;) == GetSpellInfo(138763) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137457) then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) return false end
		return true
	end
end
	
-- Twin Consorts (Immune while channeling Nuclear Inferno and Tidal Force)
if UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137531) or UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137491) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(138763)
	then return false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Symbiosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Symbiosis = PQ_Symbiosis
local Hysteria_UnitInfo = Hysteria_UnitInfo
local v=PQI_MentallyDefensiveSettings_Symbiosis_value

-- Don&amp;apos;t cast during Metamorphosis
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

-- Don&amp;apos;t continue if we disabled automatic usage in PQI
if not PQI_MentallyDefensiveSettings_Symbiosis_enable then return false end

-- We don&amp;apos;t have Symbiosis
if not UnitBuffID(&amp;quot;player&amp;quot;,110490) then return false end

-- Rejuvenation is on a CD
if not PQR_SpellAvailable(PQ_Symbiosis) then return false end

-- Cast Rejuvenation on Pet
if UnitExists(&amp;quot;pet&amp;quot;) and Hysteria_UnitInfo(&amp;quot;pet&amp;quot;) &amp;lt;= v then
	CastSpellByName(GetSpellInfo(PQ_Symbiosis),&amp;quot;pet&amp;quot;) return true
end

-- Cast Rejuvenation on Self
if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v then
	CastSpellByName(GetSpellInfo(PQ_Symbiosis),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Twilight Ward</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_TW = PQ_TW
local PQ_DBD = PQ_DBD

-- Not yet learned
if not IsPlayerSpell(PQ_TW) then return false end

-- Not yet off Cooldown
if not PQR_SpellAvailable(PQ_TW) then return false end

-- Cast with Dark Bargain
if UnitDebuffID(&amp;quot;player&amp;quot;,PQ_DBD) then CastSpellByName(GetSpellInfo(PQ_TW),&amp;quot;player&amp;quot;) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Unending Resolve</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Unending Resolve
local PQ_UR = PQ_UR
local PQ_DB = PQ_DB
local PQ_DBD = PQ_DBD
local Hysteria_UnitInfo = Hysteria_UnitInfo
local DBDamage = select(15,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_DBD))
local v=PQI_MentallyDefensiveSettings_UnendingResolve_value or 35

-- Glyph of Unending Resolve check. Passive +10%
if IsPlayerSpell(148683) then return false end

-- If we&amp;apos;re on a cooldown, it&amp;apos;s also hard to execute....
if not PQR_SpellAvailable(PQ_UR) then return false end

-- Automatic portion
if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v then
	CastSpellByName(GetSpellInfo(PQ_UR),&amp;quot;player&amp;quot;) return true
end

if UnitDebuffID(&amp;quot;player&amp;quot;,PQ_DBD) then
	if ((DBDamage*8) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100) &amp;gt;= Hysteria_UnitInfo(&amp;quot;player&amp;quot;)/2 then
		CastSpellByName(GetSpellInfo(PQ_UR),&amp;quot;player&amp;quot;) return true
	end
end

-- If the Ability is disabled, don&amp;apos;t execute.
if not PQI_MentallyDefensiveSettings_UnendingResolve_enable then return false end

-- Keybind override
if PQI:IsHotkeys(PQI_MentallyDefensiveSettings_UnendingResolve_key) and not GetCurrentKeyBoardFocus() then
	CastSpellByName(GetSpellInfo(PQ_UR),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Trigger: Force Metamorphosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------------------
-- Ability Hold Trigger
------------------------
if not metaTimer then metaTimer = 0 end
if not forceMeta then forceMeta = false end
if not PQI_MentallyOffensiveSettings_ToggleForceMeta_enable then return false end

if PQI_MentallyOffensiveSettings_ToggleForceMeta_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyOffensiveSettings_ToggleForceMeta_key)
	and GetTime() - metaTimer &amp;gt; 1
then
	metaTimer = GetTime()
	if forceMeta then
		forceMeta = false
		PQR_WriteToChat(&amp;quot;|cff347C2CForcing Metamorphosis: |cff79BAECDisabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		forceMeta = true
		PQR_WriteToChat(&amp;quot;|cff347C2CForcing Metamorphosis: |cffDC143CEnabled|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Spell Queue System</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyOffensiveSettings_SpellQueueType_enable then return false end
local v=PQI_MentallyOffensiveSettings_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
else
	if PQ_QueuedSpell ~= nil then
		if PQR_SpellAvailable(PQ_QueuedSpell) and IsPlayerSpell(PQ_QueuedSpell) then
			if lastSpell and lastSpell == PQ_QueuedSpell then
				PQ_QueuedSpell = nil lastSpell = nil return true
			end
			
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(PQ_QueuedSpell),nil)
			lastSpell = PQ_QueuedSpell
			return true
		end
		PQ_QueuedSpell = nil
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Howl of Terror</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HOT = PQ_HOT
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Disabled in PQI
if not PQI_MentallyDefensiveSettings_HowlofTerror_enable then return false end

-- Howl of Terror
if IsPlayerSpell(PQ_HOT)
	and PQR_SpellAvailable(PQ_HOT)
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyDefensiveSettings_HowlofTerror_key)
then CastSpellByName(GetSpellInfo(PQ_HOT),nil) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fel Flame (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FelFlame = PQ_FelFlame
local TargetValidation = TargetValidation

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
if not PQR_SpellAvailable(PQ_FelFlame) then return false end

if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_FelFlame) then
	if UnitCreatureType(&amp;quot;mouseover&amp;quot;) == &amp;quot;Totem&amp;quot; then
		CastSpellByName(GetSpellInfo(PQ_FelFlame),&amp;quot;mouseover&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Gul&amp;apos;dan (UVLS)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_GulDan = PQ_GulDan
local PQ_SFlame = PQ_SFlame
local Shadowflame = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SFlame,&amp;quot;PLAYER&amp;quot;))

-- No Chaos Waves please!
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end
	
if TargetValidation(&amp;quot;target&amp;quot;,PQ_GulDan) and PQR_SpellAvailable(PQ_GulDan)
	and GetSpellCharges(PQ_GulDan) &amp;gt; 0 and Shadowflame then
		if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(PQ_GulDan),&amp;quot;target&amp;quot;)
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARLOCK>