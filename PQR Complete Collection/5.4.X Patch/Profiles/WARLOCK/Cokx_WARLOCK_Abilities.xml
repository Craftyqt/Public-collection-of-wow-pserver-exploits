<?xml version="1.0" encoding="utf-8" ?><WARLOCK><Ability><Name>PetHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;) 
and not UnitIsDead(&amp;quot;pet&amp;quot;)
and LineOfSight(&amp;quot;pet&amp;quot;)
and ePet[1].PRange ~= nil
and ePet[1].PRange &amp;lt; 40
and PQR_SpellAvailable(114189)
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;lt;= 80
and (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;gt; 40 
then 
--CastSpellByName(GetSpellInfo(755))
CastSpellByName(GetSpellInfo(114189))
return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Pet</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>&amp;gt; RDY</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  ----------------------------------
  -- Load Data Files
  ----------------------------------

	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_DATA.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Datafile loaded!&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_Settings.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_Settings.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Settings loaded!&amp;quot;)
		
	end
	
	
	PQR_RotationStarted = false
end
local numglobal,numperchar = GetNumMacros()
if numperchar &amp;lt; 18 then
if not GetMacroInfo(&amp;quot;AvailableMacros&amp;quot;) then
CreateMacro(&amp;quot;AvailableMacros&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;/Pause&amp;quot;, 1)
end
end


	--------------------
	-- Register CVars --
	--------------------

	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;, 				Var2 = 1		}	
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end



--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true

	
		SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then

			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
end
	

if getInfos == nil then
getInfos = 0
end
if not lastpetzwo then lastpetzwo=0 end


CastClick()
settings()
checks()
if  GetTime() - getInfos &amp;gt; 1 and (GCDCheck(77799) or GCDCheck(1490)) then
getInfos = GetTime()
clearCEH()
if UnitExists(&amp;quot;pet&amp;quot;)
then lastpetzwo = UnitCreatureFamily(&amp;quot;pet&amp;quot;)
end
if cTtimer == nil then cTtimer = 0
end
if GetTime() - cTtimer &amp;gt; 5 then
cTtimer = GetTime()
clearTables()
end
getcTar()
RangeCheckcTar()
clearcTar()
for i=1,#cTar do
redRing(cTar[i],77799,39,i)
end
getmembers()
RangeCheckMembers()
clearmembers()
RangeCheckPet()
interrupt()
if GetItemCount(GetItemInfo(80618)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(57287))end

if GetItemCount(GetItemInfo(5512)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(58275))end
RunMacroText(&amp;quot;/run UIErrorsFrame:Clear()&amp;quot;)
end
GroupInfo()
cokxMacros()

if rotationPause == nil then rotationPause = 0 end

if Nova_Pause == 1 then
rotationPause = GetTime()
SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
end
if GetTime() - rotationPause &amp;lt; 0.3 then
if MacroSpellNumber ~= 0 and MacroUnitNumber ~= 0 and GCDCheck(MacroSpellNumber) then
CastSpellByName(GetSpellInfo(MacroSpellNumber),MacroCT)
return true
end
return true
end
SetCVar(&amp;quot;MacroSpell&amp;quot;, 0)
SetCVar(&amp;quot;MacroUnit&amp;quot;, 0)
SetCVar(&amp;quot;MacroHP&amp;quot;, 100)
SetCVar(&amp;quot;MacroDR&amp;quot;,nil)
SetCVar(&amp;quot;MacroBuff&amp;quot;,nil)
SetCVar(&amp;quot;MacroDebuff&amp;quot;,nil)

if not playerdpsinc then playerdpsinc = 0 end
if not playerdpssum then playerdpssum = 0 end
if not playerdpscalc then playerdpscalc = 0 end
if not sumDps then sumDps = 0 end
if not lastplayerhp then lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;) end

if modtime == nil then
	modtime = 0
end

if GetTime() - modtime &amp;gt; 1 then
	modtime = GetTime()
	playerdpsinc = lastplayerhp -UnitHealth(&amp;quot;player&amp;quot;)
	playerdpssum = playerdpssum + playerdpsinc
	lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;)
end

if avgmodtime == nil then
	avgmodtime = 0
end

if GetTime() - avgmodtime &amp;gt; 5 then
	avgmodtime = GetTime()
	sumDps = 0
	playerdpscalc = playerdpssum/5
	sumDps = playerdpscalc
	playerdpscalc = 0
	playerdpssum = 0
end




if ROF 
and not GetCurrentKeyBoardFocus()
then
	aerage = 0
else
aerage = 1
end


if numberfriends == 0 or numberfriends &amp;gt; #members then
numberfriends = #members or nil
end

if UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
then
IsFacing = true
else
IsFacing = false
end

local flag = { &amp;quot;&amp;quot;..GetSpellInfo(23335), &amp;quot;&amp;quot;..GetSpellInfo(23333) }



for _,v in ipairs(flag) do 
InteractUnit(v)end

if select(2,GetTalentRowSelectionInfo(6)) == 17
then
if PQR_IsMoving(.1) or not PQR_IsMoving(0.1) then
IsMoving = 1
end
else
if PQR_IsMoving(0.1) then
IsMoving = 0
else
IsMoving =1 
end
end

lastpet = lastpetzwo

if lastpet == 0  or lastpet == nil then
PQR_WriteToChat(&amp;quot;Can&amp;apos;t find pet or last used pet, please resummon&amp;quot;)
end

-------------------

if UnitPower(&amp;quot;player&amp;quot;, 7) &amp;gt;= 1 or HaveBuff(&amp;quot;player&amp;quot;,113860,0) then
goRage = 1
end
if UnitPower(&amp;quot;player&amp;quot;, 7) &amp;lt;= 0 then
goRage = 0
end

					
SpellCancelQueuedSpell()






--------------</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Corruption</Name><Default>false</Default><SpellID>172</SpellID><Actions></Actions><Lua>if  
	 GCDCheck(172)
	 
and UnitExists(&amp;quot;target&amp;quot;)
and UnitExists(cTar[1])
and not HaveDebuff(&amp;quot;target&amp;quot;,172,2,&amp;quot;player&amp;quot;)
	and ecTar[1].Range &amp;lt; 40
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
		and UnitCreatureType(cTar[1]) ~= &amp;quot;Totem&amp;quot;
	and not HaveBuff(&amp;quot;player&amp;quot;,103958,0)
--	and HaveDebuff(&amp;quot;target&amp;quot;,980,0)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and LineOfSight(&amp;quot;target&amp;quot;) then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
--	CastSpellByName(GetSpellInfo(172), &amp;quot;target&amp;quot;)
	return true
	end
	
	
	if aerage == 1 then
	
	for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if 
		GCDCheck(172)
	and not HaveDebuff(cTar[i],172,2,&amp;quot;player&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(cTar[i],iDMG(),1)
		and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and not HaveBuff(&amp;quot;player&amp;quot;,103958,0)
--	and HaveDebuff(cTar[i],980,0)
	and not UnitIsDeadOrGhost(cTar[i])
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
--	CastSpellByName(GetSpellInfo(172), cTar[i])
	return true
	end
	end
	end
	

	end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Doom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;, 15) &amp;gt; 60 then
if  not HaveDebuff(&amp;quot;target&amp;quot;,603,2,&amp;quot;player&amp;quot;)
	 and GCDCheck(126)
and UnitExists(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
		and UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;Totem&amp;quot;
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and HaveBuff(&amp;quot;player&amp;quot;,103958,0)
	and LineOfSight(&amp;quot;target&amp;quot;) then
	
	CastSpellByName(GetSpellInfo(603), &amp;quot;target&amp;quot;)
	return true
	end
	
	
	if (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 40 
		 and GCDCheck(126)
	and aerage == 1 then
	
	for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if not HaveDebuff(cTar[i],603,2,&amp;quot;player&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and HaveBuff(&amp;quot;player&amp;quot;,103958,0)
	and not HaveBuff(cTar[i],iDMG(),1)
		and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and not UnitIsDeadOrGhost(cTar[i])
		and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	CastSpellByName(GetSpellInfo(603), cTar[i])
	return true
	end
	end
	end
	

	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
	 and GCDCheck(126)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and inRange(&amp;quot;target&amp;quot;,686)
and HaveBuff(&amp;quot;player&amp;quot;,{103958,114168},0)

 
 then 
 	CastSpellByName(GetSpellInfo(103964),&amp;quot;target&amp;quot;)
  	CastSpellByName(GetSpellInfo(112092),&amp;quot;target&amp;quot;)
  		CastSpellByName(GetSpellInfo(686),&amp;quot;target&amp;quot;)
 
 return true end
 
 

 
 if UnitExists(&amp;quot;target&amp;quot;) 
 	 and GCDCheck(126)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
   and IsMoving == 1
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and inRange(&amp;quot;target&amp;quot;,686)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
--and HaveBuff(&amp;quot;player&amp;quot;,{114925},0)

 
 then 
 	CastSpellByName(GetSpellInfo(103964),&amp;quot;target&amp;quot;)
  	CastSpellByName(GetSpellInfo(112092),&amp;quot;target&amp;quot;)
  		CastSpellByName(GetSpellInfo(686),&amp;quot;target&amp;quot;)
 
 return true end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Fire</Name><Default>false</Default><SpellID>6353</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,122355,2) 
	 and GCDCheck(6353)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 50000
and not HaveBuff(&amp;quot;player&amp;quot;,{103958,114168},0) 
	 and not PQR_IsMoving(0.01)
and UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
then 

return true
end

if HaveBuff(&amp;quot;player&amp;quot;,122355,2) 
	 and GCDCheck(126)
and HaveBuff(&amp;quot;player&amp;quot;,{114168},0) 
and UnitPower(&amp;quot;player&amp;quot;, 15) &amp;gt; 280
	 and not PQR_IsMoving(0.01)
and UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
then 

return true
end</Lua><RecastDelay>5000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Fel Flame</Name><Default>false</Default><SpellID>77799</SpellID><Actions></Actions><Lua>if UnitExists(cTar[1])
and ( GCDCheck(77799))
and IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;player&amp;quot;,{103958,86211},0) 
then return true end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>COE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1 , #cTar do
	if UnitExists(cTar[i]) then
	
	if GCDCheck(109466)
	and LineOfSight(cTar[i])
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])
	and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitIsPlayer(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(&amp;quot;player&amp;quot;,{74434,103958,114168},1) 
	and not HaveDebuff(cTar[i],{109466,5761,73975},1.5)
	and not HaveBuff(cTar[i],iDMG(),1)
	and not HaveBuff(cTar[i],iSpell(),1)

	 then
	
	CastSpellByName(GetSpellInfo(109466), cTar[i])
	return true
	end
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LifeTap</Name><Default>false</Default><SpellID>1454</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;)  &amp;lt; 50000 
and (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;gt; 50 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HoG</Name><Default>false</Default><SpellID>105174</SpellID><Actions>/use 13</Actions><Lua>if GetSpellCharges(105174) &amp;gt; 0
	 and GCDCheck(126)
and UnitExists(&amp;quot;target&amp;quot;)
and IsFacing
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and LineOfSight(&amp;quot;target&amp;quot;)
 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0)
and not HaveBuff(&amp;quot;player&amp;quot;,103958,1)
and not HaveDebuff(&amp;quot;target&amp;quot;,47960,0)
and LineOfSight(&amp;quot;target&amp;quot;)

then
--CastSpellByName(GetSpellInfo(105174), &amp;quot;target&amp;quot;)
return true 
end</Lua><RecastDelay>2500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Void Ray</Name><Default>false</Default><SpellID>77799</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and HaveBuff(&amp;quot;player&amp;quot;,103958,1)
then return true end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Imp Swarm</Name><Default>false</Default><SpellID>104316</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
	 and GCDCheck(126) 
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and HaveBuff(&amp;quot;player&amp;quot;,103958,0)
then
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dark Intent</Name><Default>false</Default><SpellID>109773</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,109773,1)
	 and GCDCheck(126)
then return true end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wrathstorm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pettarget&amp;quot;)
and GCDCheck(115831)
and ePet[1].TRange ~= nil
and ePet[1].TRange &amp;lt; 10 
	 then CastSpellByName(GetSpellInfo(115831),&amp;quot;pettarget&amp;quot;)
	 	CastSpellByName(GetSpellInfo(89751),&amp;quot;pettarget&amp;quot;)
	 	return true
	 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Twilight Ward</Name><Default>false</Default><SpellID>131623</SpellID><Actions></Actions><Lua>if GCDCheck(131623) then
if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt; 95 
and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
then 
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Fear</Name><Default>false</Default><SpellID>5782</SpellID><Actions></Actions><Lua>for i=1,#cTar do
if UnitExists(cTar[i])
	 and GCDCheck(126)
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and not PQR_IsMoving(0.01)
	 and fearunit == UnitGUID(cTar[i])
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and LineOfSight(cTar[i])
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and ecTar[i].Range &amp;lt; 30
	 and not HaveBuff(cTar[i],{49039,18499},1.3)
	 and not HaveDebuff(cTar[i],dPoisonCC(),2)
	 and not HaveDebuff(cTar[i],dCurseCC(),2)
	 and not HaveDebuff(cTar[i],dMagicCC(),2)
	 and not HaveDebuff(cTar[i],dSilence(),2)
	 and not HaveDebuff(cTar[i],dSilenceCC(),2)
	 and not HaveDebuff(cTar[i],dCC(),2)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),1)
	 and not HaveBuff(cTar[i],iSpell(),1)
then

PQR_CustomTarget = cTar[i]
	 	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(5782)..&amp;quot; on&amp;quot;..UnitName(cTar[i]))
return true
end
end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Agony</Name><Default>false</Default><SpellID>980</SpellID><Actions></Actions><Lua>if  UnitExists(&amp;quot;target&amp;quot;)
and UnitExists(cTar[1]) then
	if not HaveDebuff(&amp;quot;target&amp;quot;,980,3,&amp;quot;player&amp;quot;)
	 and GCDCheck(980)
	and ecTar[1].Range &amp;lt; 40
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
		and UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;Totem&amp;quot;
	 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	 and HaveDebuff(&amp;quot;target&amp;quot;,172,4,&amp;quot;player&amp;quot;)
	and UnitExists(&amp;quot;target&amp;quot;)
	and LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	 then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
--	CastSpellByName(GetSpellInfo(980), &amp;quot;target&amp;quot;)
	return true
	end
	end
	

	
	
	
	if aerage == 1 then
	
	for i=1 , #cTar do
	if UnitExists(cTar[i]) then
	if not HaveDebuff(cTar[i],980,3,&amp;quot;player&amp;quot;)
		 and GCDCheck(980)
	and LineOfSight(cTar[i])
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and ecTar[i].Range &amp;lt; 40
	and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and HaveDebuff(cTar[i],172,4,&amp;quot;player&amp;quot;)
	and not HaveBuff(cTar[i],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and not HaveBuff(cTar[i],iSpell(),1)
	 then
	PQR_CustomTarget = cTar[i]
--	CastSpellByName(GetSpellInfo(980), cTar[i])
	return true
	end
	end
	end
	

	end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>UA</Name><Default>false</Default><SpellID>30108</SpellID><Actions></Actions><Lua>if dontswap == nil then dontswap = 0 end
if  aerage == 1 
	 and GCDCheck(30108)

	and not HaveBuff(&amp;quot;player&amp;quot;,74434,0)  then
	
	for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if not HaveDebuff(cTar[i],30108,2,&amp;quot;PLAYER&amp;quot;)
	and LineOfSight(cTar[i])
	 and not PQR_IsMoving(0.01)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])
		and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and not UnitIsDeadOrGhost(cTar[i])
	and HaveDebuff(cTar[i],{172},4,&amp;quot;player&amp;quot;)
	and HaveDebuff(cTar[i],{980},4,&amp;quot;player&amp;quot;)
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(cTar[i],iDMG(),1)
	and not HaveBuff(cTar[i],iSpell(),1)
	 then

PQR_CustomTarget = cTar[i]
	 lastSwapGUID = UnitGUID(cTar[i])
	 dontswap = 1
return true
	end
	end
	end
	

	end</Lua><RecastDelay>700</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Malefic Grasp</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
	 and GCDCheck(86121)
	 and GCDCheck(103103)
	 
and IsMoving == 1
 and HaveDebuff(&amp;quot;target&amp;quot;,172,0,&amp;quot;player&amp;quot;) 
and HaveDebuff(&amp;quot;target&amp;quot;,980,0,&amp;quot;player&amp;quot;) 
and HaveDebuff(&amp;quot;target&amp;quot;,30108,0,&amp;quot;player&amp;quot;) 
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)

 
 then CastSpellByName(GetSpellInfo(103103), &amp;quot;target&amp;quot;)
 return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Haunt</Name><Default>false</Default><SpellID>48181</SpellID><Actions>/use 13</Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
	 and GCDCheck(126)
and not HaveDebuff(&amp;quot;target&amp;quot;,48181,0,&amp;quot;player&amp;quot;)
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 99
and HaveDebuff(&amp;quot;target&amp;quot;,172,4,&amp;quot;player&amp;quot;) 
	 and not PQR_IsMoving(0.01)
and goRage == 1
and HaveDebuff(&amp;quot;target&amp;quot;,980,4,&amp;quot;player&amp;quot;) 
and HaveDebuff(&amp;quot;target&amp;quot;,30108,4,&amp;quot;player&amp;quot;) 
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitPower(&amp;quot;player&amp;quot;, 7) &amp;gt;= 1
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
then 
return true end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Immolate</Name><Default>false</Default><SpellID>348</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
	 and GCDCheck(29722)
	 and not PQR_IsMoving(0.01) then
	if not HaveDebuff(&amp;quot;target&amp;quot;,{348,108686},3,&amp;quot;player&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(348)
	and IsFacing
	and not ROF
--	and not PQR_IsMoving(1) 
	and LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	then
	return true
	end
end</Lua><RecastDelay>900</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Incinerate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if --HaveDebuff(&amp;quot;target&amp;quot;,348,3,&amp;quot;player&amp;quot;)
	 --and 
	 GCDCheck(29722)
and IsFacing
and IsMoving == 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
CastSpellByName(GetSpellInfo(29722),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chaos Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13</Actions><Lua>if (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 20
and PQR_SpellAvailable(116858)
	 and not PQR_IsMoving(0.01)
and chaosbolt
	 and GCDCheck(116858)
and IsFacing
  then
  	for i = 1, #cTar do
	if UnitExists(cTar[i]) 
	and PQR_SpellAvailable(80240)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not UnitIsDeadOrGhost(cTar[i])
	and not UnitIsUnit(cTar[i],&amp;quot;target&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 39
	and not HaveBuff(cTar[i],iDMG(),0) 
	and not HaveBuff(cTar[i],iSpells(),0) 
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	then
	CastSpellByName(GetSpellInfo(80240),cTar[i])
	return true
	end end
		
CastSpellByName(GetSpellInfo(116858),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Conflagrate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(17962)
	 and GCDCheck(126)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and IsFacing
then
CastSpellByName(GetSpellInfo(17962),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowburn</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13</Actions><Lua>-- SB
local spell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;player&amp;quot;)


for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and UnitPower(&amp;quot;player&amp;quot;, 14)&amp;gt;=1 
and not UnitIsDeadOrGhost(cTar[i])
and LineOfSight(cTar[i])
and ecTar[i].Range ~= nil
and ecTar[i].Facing
and ecTar[i].Range &amp;lt; 39
and not HaveBuff(cTar[i],iDMG(),0) 
and not HaveBuff(cTar[i],iSpells(),0) 
 and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 20
then
if spell
then
SpellStopCasting()
end
PQR_CustomTarget = cTar[i]
	for i = 1, #cTar do
	if UnitExists(cTar[i]) 
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not UnitIsDeadOrGhost(cTar[i])
	and not UnitIsUnit(cTar[i],PQR_CustomTarget)
	and LineOfSight(cTar[i])
	and PQR_SpellAvailable(80240)
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 39
	and not HaveBuff(cTar[i],iDMG(),0) 
	and not HaveBuff(cTar[i],iSpells(),0) 
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	then
	CastSpellByName(GetSpellInfo(80240),cTar[i])
	return true
	end end
	CastSpellByName(GetSpellInfo(17877),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dotall</Name><Default>false</Default><SpellID>86121</SpellID><Actions></Actions><Lua>if aerage == 1
	 and GCDCheck(126) then
	

for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if  not HaveDebuff(cTar[i],30108,3,&amp;quot;player&amp;quot;)
	and HaveBuff(&amp;quot;player&amp;quot;,{74434,86211},0) 
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 40
		and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and not HaveBuff(cTar[i],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[i])
	and not HaveBuff(cTar[i],iSpell(),1)
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and LineOfSight(cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	lastSwapGUID = UnitGUID(cTar[i])
	return true
	end
	end
	
	
	
end
	


end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Drain Soul</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local spell, _, _, _, _, endTime = UnitChannelInfo(&amp;quot;player&amp;quot;)
local cspell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;player&amp;quot;)

for i=1, #cTar do
if UnitExists(cTar[i]) 
and GCDCheck(1120)
and spell ~= GetSpellInfo(1120) 
and cspell ~= GetSpellInfo(48181)
and not PQR_IsMoving(0.01)
and ((HaveDebuff(cTar[i],172,2,&amp;quot;player&amp;quot;) 
and HaveDebuff(cTar[i],980,2,&amp;quot;player&amp;quot;) 
and HaveDebuff(cTar[i],30108,2,&amp;quot;player&amp;quot;)) or(100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 5)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and not UnitIsDeadOrGhost(cTar[i])
and PQR_UnitFacing(&amp;quot;player&amp;quot;,cTar[i])
and LineOfSight(cTar[i])
and ecTar[i].Range &amp;lt; 39
and not HaveBuff(cTar[i],iDMG(),1) 
 and not HaveBuff(cTar[i],iSpell(),1)
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 30
then
RunMacroText(&amp;quot;/stopcasting&amp;quot;)
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(1120),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Drain Life</Name><Default>false</Default><SpellID>689</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt; 50 
	 and GCDCheck(126)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	 and not PQR_IsMoving(0.01)
 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
  and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 
 then 
 return true
  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>JukeBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
			and not HaveBuff(&amp;quot;player&amp;quot;,104773,0) then
				local spellId = select(12, ...)
				local listId = {
					6552, --Pummel
					1766, --Kick
					47528, --Mind Freeze
					47476, --Strangulate
					96231, --Rebuke
					57994, --Wind Shear
					2139, --Counterspell
					19647, --Spell Lock
					80965 --Skull Bash
				}
				for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						SpellStopCasting()
						SpellStopCasting()
						PQR_DelayRotation(.5)
						return true
					end
				end
			end
		end
	end
end

JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RoF</Name><Default>false</Default><SpellID>5740</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 75000
	 and GCDCheck(29722)
 and ( ROF
 or
 (UnitExists(&amp;quot;mouseover&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;)
  and not HaveBuff(&amp;quot;player&amp;quot;,104232,3)
    and aoeUnits(4,40,0) ))
  and not GetCurrentKeyBoardFocus()
  and not IsMouselooking() then 
--	return true
	CastSpellByName(GetSpellInfo(5740))
		if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() 
	return true end  
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FaB</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(108683)
 and ((ROF and IsMouselooking()) or  ( aoeUnits(6,40,0)))
 
  and not GetCurrentKeyBoardFocus()
  and UnitPower(&amp;quot;player&amp;quot;, 14)&amp;gt;=2 
  and not HaveBuff(&amp;quot;player&amp;quot;,108683,0)
  then 
	CastSpellByName(GetSpellInfo(108683))
	return true 
end

if HaveBuff(&amp;quot;player&amp;quot;,108683,0)
and (UnitPower(&amp;quot;player&amp;quot;,14) &amp;lt;=1 or (not ROF and not IsMouselooking()) and  ( aoeUnits(4,40,0)))
then
RunMacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(108683))
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>COtE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) then
	if not HaveDebuff(&amp;quot;target&amp;quot;,{1490,58410},3)
		 and GCDCheck(1490)
	and LineOfSight(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;player&amp;quot;,{74434,108683},0) 
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)

	 then
	
	CastSpellByName(GetSpellInfo(1490), &amp;quot;target&amp;quot;)
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Interrupt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Felhunter&amp;quot; or UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Observer&amp;quot; or lastpet == &amp;quot;Felhunter&amp;quot; or lastpet == &amp;quot;Observer&amp;quot; then
for j=1 , #cTar do
	 if  UnitExists(cTar[j])
     and (100 * UnitHealth(cTar[j]) / UnitHealthMax(cTar[j])) &amp;lt; 80
     then
     ddislow = 1
    
     
     end
  end
  
  for j=1 , #cTar do
	 if  UnitExists(cTar[j])
     and IsHealer(cTar[j])
     then
     interrupthealer = 1
     end
  end
  
    for i=1, numberfriends do
  if UnitExists(members[i])
  and CalculateHP(members[i]) &amp;lt; 60 then
  interrupthealer = 0
  end
  
end
  
for i=1, #cTar do
	if UnitExists(cTar[i])
	  and IsHealer(cTar[i])
	  and ddislow == 1
	  and interrupthealer == 1
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])  then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt 
					
					then
						PQR_CustomTarget = cTar[i]
						if GCDCheck(119898)
							and(inRange(PQR_CustomTarget,19647)
							or inRange(PQR_CustomTarget,115781)
							or inRange(PQR_CustomTarget,132409)
							or inRange(PQR_CustomTarget,119898))
							then
														CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
							if GCDCheck(119898) 
							and ecTar[i].Range &amp;lt; 40
								and LineOfSight(PQR_CustomTarget)
							and not UnitExists(&amp;quot;pet&amp;quot;) then
							SpellStopCasting()
							end
							CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
					
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if GCDCheck(119898)
						and
					(inRange(PQR_CustomTarget,19647)
						or inRange(PQR_CustomTarget,115781)
							or inRange(PQR_CustomTarget,132409)
						or inRange(PQR_CustomTarget,119898))
							then
														CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
							if GCDCheck(119898)
							and ecTar[i].Range &amp;lt; 40
							and LineOfSight(PQR_CustomTarget)
							and not UnitExists(&amp;quot;pet&amp;quot;)  then
							SpellStopCasting()
							end
							CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
					
					end
				end
			end
		end
	end

for i=1, #cTar do
	if UnitExists(cTar[i])
	 and (interrupthealer == 0 or (ddislow == 0 and interrupthealer == 1))
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])  then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if GCDCheck(119898)
							and (inRange(PQR_CustomTarget,19647)
							or inRange(PQR_CustomTarget,115781)
							or inRange(PQR_CustomTarget,132409)
							or inRange(PQR_CustomTarget,119898))
							then
														CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
							if GCDCheck(119898)
							and ecTar[i].Range &amp;lt; 40
							and LineOfSight(PQR_CustomTarget)
							and not UnitExists(&amp;quot;pet&amp;quot;) then
							SpellStopCasting()
							end
							CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
					
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if GCDCheck(119898)
							and (inRange(PQR_CustomTarget,19647)
							or inRange(PQR_CustomTarget,115781)
							or inRange(PQR_CustomTarget,132409)
							or inRange(PQR_CustomTarget,119898))
							then
														CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
							if GCDCheck(119898) 
							and ecTar[i].Range &amp;lt; 40
							and LineOfSight(PQR_CustomTarget)
							and not UnitExists(&amp;quot;pet&amp;quot;)  then
							SpellStopCasting()
							end
							CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
				
				end
			end
		end
	end
end
ddislow = 0
interrupthealer = 0</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PetSummon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not UnitExists(&amp;quot;pet&amp;quot;)or UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;))
and (UnitPower(&amp;quot;player&amp;quot;, 7) &amp;gt;=1 or HaveBuff(&amp;quot;player&amp;quot;,74434,0))
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 75000
then
CastSpellByName(GetSpellInfo(74434),&amp;quot;player&amp;quot;)
CastSpellByName(GetSpellInfo(112869),&amp;quot;player&amp;quot;)
CastSpellByName(GetSpellInfo(691),&amp;quot;player&amp;quot;)
		return true
	end</Lua><RecastDelay>1000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PortBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not GladiusBear then
	GladiusBear = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	GladiusBear:Hide()
end

function GladiusBear_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
					110698,		-- Hammer of Justice (Paladin)
					1330,		-- Garrote - Silence
					108194,		-- Asphyxiate
					22570,		-- Maim
					5211,		-- Mighty Bash
					9005,		-- Pounce
					102546,		-- Pounce (Incarnation)
					91800,		-- Gnaw
					91797,		-- Monstrous Blow (Dark Transformation)
					44572,		-- Deep Freeze
					119381,		-- Leg Sweep
					105593,		-- Fist of Justice
					853,		-- Hammer of Justice
					1833,		-- Cheap Shot
					408,		-- Kidney Shot
					30283,		-- Shadowfury
					89766,		-- Axe Toss (Felguard/Wrathguard)
					7922,		-- Charge Stun
					132168,		-- Shockwave
					105771		-- Warbringer
				}
				for i = 1, #listId do
					if listId[i] == spellId then
					if GCDCheck(48020) then
					SpellStopCasting()
						CastSpellByName(GetSpellInfo(48020),nil)
						return true
						end
						end
				end
			end
		end
	end
end

GladiusBear:SetScript(&amp;quot;OnEvent&amp;quot;, GladiusBear_OnEvent)
GladiusBear:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PetControle</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if petctrl == nil then
	petctrl = 0
end

if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and UnitExists(&amp;quot;pettarget&amp;quot;)
and ((100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;lt; 50
or  (ePet[1].PRange ~= nil and ePet[1].PRange &amp;gt; 80))
then
RunMacroText(&amp;quot;/petfollow&amp;quot;)
end

if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitExists(&amp;quot;target&amp;quot;)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 95
and ePet[1].PRange &amp;lt; 70
and not UnitExists(&amp;quot;pettarget&amp;quot;)
then
RunMacroText(&amp;quot;/petattack&amp;quot;)
end

if GetTime() - petctrl &amp;gt; 2 then
	petctrl = GetTime()

if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
then
RunMacroText(&amp;quot;/petattack&amp;quot;)
end


for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and UnitExists(&amp;quot;pettarget&amp;quot;) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and IsHealer(cTar[i])
and not HaveBuff(cTar[i],ccCanBreak(),0) 
and not UnitIsDeadOrGhost(cTar[i])
and not UnitIsUnit(&amp;quot;pettarget&amp;quot;,cTar[i])
and not IsHealer(&amp;quot;pettarget&amp;quot;)
and ecTar[i].Range &amp;lt; 70
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 50
and (100 * UnitPower(cTar[i]) / UnitPowerMax(cTar[i])) &amp;lt; 50
then
RunMacroText(&amp;quot;/petattack [target=&amp;quot;..cTar[i]..&amp;quot;]&amp;quot;)
end
end




if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Felhunter&amp;quot; or UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Observer&amp;quot;
then
for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and UnitExists(&amp;quot;pettarget&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and IsHealer(cTar[i])
and not HaveBuff(cTar[i],ccCanBreak(),0) 
and not UnitIsDeadOrGhost(cTar[i])
and not UnitIsUnit(&amp;quot;pettarget&amp;quot;,cTar[i])
and not IsHealer(&amp;quot;pettarget&amp;quot;)
and ecTar[i].Range &amp;lt; 70
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 50
then
RunMacroText(&amp;quot;/petattack [target=&amp;quot;..cTar[i]..&amp;quot;]&amp;quot;)
end
end


end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Burning Ember</Name><Default>false</Default><SpellID>114635</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt; 50 
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 20 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Kanrethad Chaos Bolt</Name><Default>false</Default><SpellID>108416</SpellID><Actions></Actions><Lua>local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(&amp;quot;focus&amp;quot;)
	if castName then
	if castName == GetSpellInfo(138559) then return true end
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RejuSymb</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,110505,0) then
for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt; 90

and UnitInRange(members[i])
and PQR_SpellAvailable(113295)
and GCDCheck(113295)
and LineOfSight(members[i])
and not HaveBuff(members[i],113295,1,&amp;quot;PLAYER&amp;quot;) 
and not HaveBuff(&amp;quot;player&amp;quot;,103958,1)
then
  PQR_CustomTarget = members[i]
 	CastSpellByName(GetSpellInfo(113295),PQR_CustomTarget)
  return true
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowfury</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(30283) 
and IsSpellKnown(30283) 
and sfury
 and not GetCurrentKeyBoardFocus()
 and not IsMouselooking() then 

	CastSpellByName(GetSpellInfo(30283))
--	return true
		if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() 
	SpellStopCasting()
	return true
	 end
	end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>IncinerateBacklash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,140076,0)
	 and GCDCheck(29722)
and IsFacing
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
CastSpellByName(GetSpellInfo(29722),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemKill</Name><Default>false</Default><SpellID>77799</SpellID><Actions></Actions><Lua>local typem= UnitCreatureType(&amp;quot;mouseover&amp;quot;)

if UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and typem == &amp;quot;Totem&amp;quot;
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Aura Of COtE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,116202,3)
	 and GCDCheck(126)
and UnitPower(&amp;quot;player&amp;quot;, 15) &amp;gt; 150 
	and HaveBuff(&amp;quot;player&amp;quot;,{103958,114168},1) 
	 then
	
	CastSpellByName(GetSpellInfo(1490), &amp;quot;target&amp;quot;)
	return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HoGMeta</Name><Default>false</Default><SpellID>124916</SpellID><Actions>/use 13</Actions><Lua>if GetSpellCharges(105174) &amp;gt; 0
	 and GCDCheck(126)
and UnitExists(&amp;quot;target&amp;quot;)
and IsFacing
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and LineOfSight(&amp;quot;target&amp;quot;)
 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0)
and HaveBuff(&amp;quot;player&amp;quot;,103958,1)
and LineOfSight(&amp;quot;target&amp;quot;)

then
--CastSpellByName(GetSpellInfo(105174), &amp;quot;target&amp;quot;)
return true 
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Twilight Ward Glyph</Name><Default>false</Default><SpellID>119839</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt; 95 
and not HaveBuff(&amp;quot;player&amp;quot;,119839,0)
then 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Mortal Coil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- MC
local spell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;player&amp;quot;)
if spell then 
 local finish = endTime/1000 - GetTime()
end

if UnitExists(&amp;quot;target&amp;quot;) 
	 and GCDCheck(126)
and sfury
and PQR_SpellAvailable(6789) 
and IsSpellKnown(6789) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0) 
then
if spell
then
SpellStopCasting()
end
PQR_CustomTarget = &amp;quot;target&amp;quot;
	for i = 1, #cTar do
	if UnitExists(cTar[i]) 
	and PQR_SpellAvailable(80240)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not UnitIsDeadOrGhost(cTar[i])
	and not UnitIsUnit(cTar[i],&amp;quot;target&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 39
	and not HaveBuff(cTar[i],iDMG(),0) 
	and not HaveBuff(cTar[i],iSpells(),0) 
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	then
	CastSpellByName(GetSpellInfo(80240),cTar[i])
	end end
		
CastSpellByName(GetSpellInfo(6789),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Immolate ROF</Name><Default>false</Default><SpellID>108686</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
	 and GCDCheck(29722)
	 and not PQR_IsMoving(0.01) then
	if not HaveDebuff(&amp;quot;target&amp;quot;,{108686},4,&amp;quot;player&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(348)
	and IsFacing
	and HaveBuff(&amp;quot;player&amp;quot;,108683,0)
	and ROF
--	and not PQR_IsMoving(1) 
	and LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	then
	return true
	end
end</Lua><RecastDelay>900</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>AutoSleep</Name><Default>false</Default><SpellID>104045</SpellID><Actions></Actions><Lua>--local attentionBuffs() ={107574,51713,114207,1719,51271,49016,114049,31884,12472,12042,113860,113861,113858,102560,102543,34692}
if sleepon == nil then  sleepon = 0 end
if unitsleeped == nil then  unitsleeped = 0 end


for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{104045},0,&amp;quot;Player&amp;quot;)
	then
	 sleepon = 1
	unitsleeped = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitsleeped == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{104045},1.5,&amp;quot;Player&amp;quot;)
	then
	sleepon = 0
	end
end







	
	
	------------------------- Sleep Code
	
	
for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(126)
	 and sleepon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 and HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
     and IsHealer(cTar[j])
     and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 30
     and not UnitCreatureType(cTar[j]) == &amp;quot;undead&amp;quot;
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
		PQR_DelayRotation(1)
	return true
	end
	end
	
	

	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(126)
	 and sleepon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2 
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 	 and  HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
          and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 30
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and HaveBuff(cTar[j],attentionBuffs(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
			PQR_DelayRotation(1)
	return true
	end
	end
	
	

	
		for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(126)
	 and sleepon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 	 and  HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
          and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 30
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
			PQR_DelayRotation(1)
	return true
	end
	end</Lua><RecastDelay>3300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>AutoSeduce</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if seduceon == nil then  seduceon = 0 end
if unitseduced == nil then  unitseduced = 0 end
if spellid == nil then  spellid = 0 end

if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Succubus&amp;quot; or UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Shivarra&amp;quot; then

if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Succubus&amp;quot; then spellid = 6358 end
if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Shivarra&amp;quot; then spellid = 115268 end
local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(&amp;quot;pet&amp;quot;)

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{6358,115268},0,&amp;quot;Player&amp;quot;)
	then
	 seduceon = 1
	unitseduced = UnitGUID(cTar[i])
	end
end



for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitseduced == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{6358,115268},1.5,&amp;quot;Player&amp;quot;)
	then
	seduceon = 0
	end
end



if avgseduce == nil then
	avgseduce = 0
end

if GetTime() - avgseduce &amp;gt; 2 then



for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and seduceon == 0
	-- and IsMoving == 1
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 and not castName
	 and ePet[1].TRange ~= nil
	 and ePet[1].TRange &amp;lt; 30 
--	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 70
     and IsHealer(cTar[j])
     and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 50
     and not UnitCreatureType(cTar[j]) == &amp;quot;undead&amp;quot;
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	CastSpellByName(GetSpellInfo(spellid),cTar[j])

	return true
	end
	end
	
	
	
	

	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and seduceon == 0
--	 and IsMoving == 1
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 and ePet[1].TRange ~= nil
	 and ePet[1].TRange &amp;lt; 30 
 and not castName
	 --	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 70
          and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 50
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and HaveBuff(cTar[j],attentionBuffs(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	CastSpellByName(GetSpellInfo(spellid),cTar[j])
	return true
	end
	end
	
	

	
		for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and seduceon == 0
--	 and IsMoving == 1
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
 and not castName
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 and ePet[1].TRange ~= nil
	 and ePet[1].TRange &amp;lt; 30 
	 --	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 70
          and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 50
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	CastSpellByName(GetSpellInfo(spellid),cTar[j])
	return true

	end
	end
	
	

	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>SoulBurn</Name><Default>false</Default><SpellID>74434</SpellID><Actions></Actions><Lua>if aerage == 1 then
	

for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if not UnitIsDeadOrGhost(cTar[i])
	and GCDCheck(86121)
	and not (GetSpellCooldown(GetSpellInfo(86121))+select(2,GetSpellCooldown(GetSpellInfo(86121)))-GetTime()== 0)
	and UnitPower(&amp;quot;player&amp;quot;, 7) &amp;gt;= 1
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 40
	and	goRage == 1
	and dontswap == 0
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
		and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and not HaveBuff(cTar[i],iDMG(),1)
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),1)
	and LineOfSight(cTar[i]) 
	and not HaveDebuff(cTar[i],30108,0,&amp;quot;player&amp;quot;)
	and not HaveBuff(&amp;quot;player&amp;quot;,{74434,86211},0) 
	
	then
	return true
	end
	end
	
end
	
	
end

dontswap = 0</Lua><RecastDelay>6000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fel Flame DS</Name><Default>false</Default><SpellID>77799</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
	 and GCDCheck(77799)
and IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and (HaveDebuff(&amp;quot;player&amp;quot;,77606,0)
and not HaveBuff(&amp;quot;player&amp;quot;,103958,1)
or HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
or HaveBuff(&amp;quot;target&amp;quot;,iSpells(),0))
then
PQR_DelayRotation(.5)
SpellStopCasting()
 return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoFearAttention</Name><Default>false</Default><SpellID>5782</SpellID><Actions></Actions><Lua>if fearon == nil then  fearon = 0 end
if fearonhealer == nil then  fearonhealer = 0 end
if unitfeared == nil then  unitfeared = 0 end
if GCDCheck(5782) then
for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{5782},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	fearonhealer = 1
	end
	 fearon = 1
	unitfeared = UnitGUID(cTar[i])
	end
end



for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitfeared == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{5782},2,&amp;quot;Player&amp;quot;)
	then
	fearonhealer = 0
	fearon = 0
	end
end




	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(126)
	 and fearon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
		 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
     and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and HaveBuff(cTar[j],attentionBuffs(),1)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(5782)..&amp;quot; on&amp;quot;..UnitName(cTar[j]))
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(126)
	 and fearonhealer == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
		 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and UnitIsPlayer(cTar[j])
	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
     and IsHealer(cTar[j])
     and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 70
     and not UnitCreatureType(cTar[j]) == &amp;quot;Undead&amp;quot;
	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	 	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(5782)..&amp;quot; on&amp;quot;..UnitName(cTar[j]))
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	
		
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(126)
	 and fearon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
		 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
 	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and ( HaveDebuff(cTar[j],dPoisonCC(),0)
 	 or HaveDebuff(cTar[j],dCurseCC(),0)
	 or HaveDebuff(cTar[j],dMagicCC(),0)
	 or HaveDebuff(cTar[j],dSilenceCC(),0)
	 or HaveDebuff(cTar[j],dCC(),0))
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	 	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(5782)..&amp;quot; on&amp;quot;..UnitName(cTar[j]))
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	end</Lua><RecastDelay>1500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Auto Dark Bargain</Name><Default>false</Default><SpellID>110913</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt;= 50 
	 and GCDCheck(126)
and HaveBuff(&amp;quot;player&amp;quot;,dCC(),2)
then 
return true end


if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt;= 30 
	 and GCDCheck(126)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
then 
return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Trinket</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;player&amp;quot;,
{
--115001,		-- Remorseless Winter ( not sure about this, cause it could activate onf 4 or below stacks ....)
110698,		-- Hammer of Justice (Paladin)
117526,		-- Binding Shot
3355,		-- Freezing Trap
118271,		-- Combustion Impact
44572,		-- Deep Freeze
31661,		-- Dragon&amp;apos;s Breath
118,		-- Polymorph
61305,		-- Polymorph: Black Cat
28272,		-- Polymorph: Pig
61721,		-- Polymorph: Rabbit
61780,		-- Polymorph: Turkey
28271,		-- Polymorph: Turtle
82691,		-- Ring of Frost
123393,		-- Breath of Fire (Glyph of Breath of Fire)
115078,		-- Paralysis
105421,		-- Blinding Light
115752,		-- Blinding Light (Glyph of Blinding Light)
105593,		-- Fist of Justice
853,		-- Hammer of Justice
119072,		-- Holy Wrath
20066,		-- Repentance
10326,		-- Turn Evil
64044,		-- Psychic Horror
8122,		-- Psychic Scream
113792,		-- Psychic Terror (Psyfiend)
9484,		-- Shackle Undead
118905,		-- Static Charge (Capacitor Totem)
5782,		-- Fear
118699,		-- Fear
5484,		-- Howl of Terror
6789,		-- Mortal Coil
30283,		-- Shadowfury
104045,		-- Sleep (Metamorphosis)
115268,		-- Mesmerize (Shivarra)
113092,		-- Frost Bomb
6358,		-- Seduction (Succubus)
	108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	102546,		-- Pounce (Incarnation)
	110698,		-- Hammer of Justice (Paladin)
	113004,		-- Intimidating Roar [Fleeing in fear] (Warrior)
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	126451,		-- Clash
	122242,		-- Clash (not sure which one is right)
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	88625,		-- Holy Word: Chastise
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror (Psyfiend)
	1833,		-- Cheap Shot
	408,		-- Kidney Shot
	113953,		-- Paralysis (Paralytic Poison)
	51514,		-- Hex
	118905,		-- Static Charge (Capacitor Totem)
	54786,		-- Demonic Leap (Metamorphosis)
	5782,		-- Fear
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	89766,		-- Axe Toss (Felguard/Wrathguard)
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout (aoe)
	132168,		-- Shockwave
	105771		-- Warbringer
},4)
and (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;gt;= 80
and PQR_SpellAvailable(108482)
 then
	
	CastSpellByName(GetSpellInfo(108482), &amp;quot;player&amp;quot;)
	return true
	end
	
	
	if HaveDebuff(&amp;quot;player&amp;quot;,
{
--115001,		-- Remorseless Winter ( not sure about this, cause it could activate onf 4 or below stacks ....)
110698,		-- Hammer of Justice (Paladin)
117526,		-- Binding Shot
3355,		-- Freezing Trap
118271,		-- Combustion Impact
44572,		-- Deep Freeze
31661,		-- Dragon&amp;apos;s Breath
118,		-- Polymorph
61305,		-- Polymorph: Black Cat
28272,		-- Polymorph: Pig
61721,		-- Polymorph: Rabbit
61780,		-- Polymorph: Turkey
28271,		-- Polymorph: Turtle
82691,		-- Ring of Frost
123393,		-- Breath of Fire (Glyph of Breath of Fire)
115078,		-- Paralysis
105421,		-- Blinding Light
115752,		-- Blinding Light (Glyph of Blinding Light)
105593,		-- Fist of Justice
853,		-- Hammer of Justice
119072,		-- Holy Wrath
20066,		-- Repentance
10326,		-- Turn Evil
64044,		-- Psychic Horror
8122,		-- Psychic Scream
113792,		-- Psychic Terror (Psyfiend)
9484,		-- Shackle Undead
118905,		-- Static Charge (Capacitor Totem)
5782,		-- Fear
118699,		-- Fear
5484,		-- Howl of Terror
6789,		-- Mortal Coil
30283,		-- Shadowfury
104045,		-- Sleep (Metamorphosis)
115268,		-- Mesmerize (Shivarra)
113092,		-- Frost Bomb
6358,		-- Seduction (Succubus)
	108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	102546,		-- Pounce (Incarnation)
	110698,		-- Hammer of Justice (Paladin)
	113004,		-- Intimidating Roar [Fleeing in fear] (Warrior)
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	126451,		-- Clash
	122242,		-- Clash (not sure which one is right)
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	88625,		-- Holy Word: Chastise
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror (Psyfiend)
	1833,		-- Cheap Shot
	408,		-- Kidney Shot
	113953,		-- Paralysis (Paralytic Poison)
	51514,		-- Hex
	118905,		-- Static Charge (Capacitor Totem)
	54786,		-- Demonic Leap (Metamorphosis)
	5782,		-- Fear
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	89766,		-- Axe Toss (Felguard/Wrathguard)
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout (aoe)
	132168,		-- Shockwave
	105771		-- Warbringer
},3)
and (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt;= 60
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 14) == 0
 then
	
	RunMacroText(&amp;quot;/use 14&amp;quot;)
	return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Chaos Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13</Actions><Lua>if (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 20
	 and GCDCheck(126)
and PQR_SpellAvailable(116858)
and IsMoving == 1
and (chaosbolt or UnitPower(&amp;quot;player&amp;quot;, 14)&amp;gt;=3 )
and not ROF
and IsFacing
  then
  	for i = 1, #cTar do
	if UnitExists(cTar[i]) 
	and PQR_SpellAvailable(80240)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not UnitIsDeadOrGhost(cTar[i])
	and not UnitIsUnit(cTar[i],&amp;quot;target&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 39
	and not HaveBuff(cTar[i],iDMG(),0) 
	and not HaveBuff(cTar[i],iSpells(),0) 
	and not HaveBuff(cTar[i],ccCanBreak(),0) 
	then
	CastSpellByName(GetSpellInfo(80240),cTar[i])
	return true
	end end
	
	CastSpellByName(GetSpellInfo(113858),nil)
CastSpellByName(GetSpellInfo(116858),&amp;quot;target&amp;quot;)
return true
end



if (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 20
	 and GCDCheck(126)
and PQR_SpellAvailable(116858)
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 60 
and IsMoving == 1
and (chaosbolt or UnitPower(&amp;quot;player&amp;quot;, 14)&amp;gt;=2 )

and IsFacing
  then
  	for i = 1, #cTar do
	if UnitExists(cTar[i]) 
	and PQR_SpellAvailable(80240)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not UnitIsDeadOrGhost(cTar[i])
	and not UnitIsUnit(cTar[i],&amp;quot;target&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range ~= nil
	and ecTar[i].Range &amp;lt; 39
	and not HaveBuff(cTar[i],iDMG(),0) 
	and not HaveBuff(cTar[i],iSpells(),0) 
	and not HaveBuff(cTar[i],ccCanBreak(),0) 
	then
	CastSpellByName(GetSpellInfo(80240),cTar[i])
	return true
	end end
	
	CastSpellByName(GetSpellInfo(113858),nil)
CastSpellByName(GetSpellInfo(116858),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Dark Regeneration</Name><Default>false</Default><SpellID>108359</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt;= 40
	 and GCDCheck(126)
and
UnitAffectingCombat(&amp;quot;player&amp;quot;)
then 
RunMacroText(&amp;quot;/use &amp;quot;..GetItemInfo(5512))
return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Unending Resolve</Name><Default>false</Default><SpellID>104773</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt;= 30
and
UnitAffectingCombat(&amp;quot;player&amp;quot;)
then 


return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Healthstone</Name><Default>false</Default><SpellID>29893</SpellID><Actions></Actions><Lua>if GetItemCount(GetItemInfo(5512)) == 0
	 and GCDCheck(126)
	 and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not PQR_IsMoving(2) then
--CastSpellByName(GetSpellInfo(), &amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto RoF</Name><Default>false</Default><SpellID>5740</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 75000
	 and GCDCheck(126)

  and not GetCurrentKeyBoardFocus()
  and not IsMouselooking()
  and ((UnitExists(&amp;quot;mouseover&amp;quot;)
   and aoeUnits(2,40,0)
   and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;)) or ROF )
  
  and not HaveBuff(&amp;quot;player&amp;quot;,104232,3)   then 
--	return true
	CastSpellByName(GetSpellInfo(5740))
		if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() 
	return true end  
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blanket Silence</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1,#cTar do

if   UnitExists(cTar[i])
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 20
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and IsHealer(cTar[i])
     and LineOfSight(cTar[i])
     and CokxDRInfo(cTar[i],&amp;quot;silence&amp;quot;) &amp;lt; 1
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and not HaveDebuff(cTar[i],dPoisonCC(),0)
	 and not HaveDebuff(cTar[i],dCurseCC(),0)
	 and not HaveDebuff(cTar[i],dMagicCC(),0)
	 and not HaveDebuff(cTar[i],dSilence(),0)
	 and not HaveDebuff(cTar[i],dSilenceCC(),0)
	 and not HaveDebuff(cTar[i],dCC(),0)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
	 and not HaveBuff(cTar[i],iSpell(),0)
		then
			PQR_CustomTarget = cTar[i]
						if GCDCheck(119898)
						and		(inRange(PQR_CustomTarget,19647)
						or inRange(PQR_CustomTarget,115781)
							or inRange(PQR_CustomTarget,132409)
						or inRange(PQR_CustomTarget,119898))
							then
							if GCDCheck(119898)
							and ecTar[i].Range &amp;lt; 40
							and not UnitExists(&amp;quot;pet&amp;quot;) then
							SpellStopCasting()
							end
							CastSpellByName(GetSpellInfo(115781),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(19647),PQR_CustomTarget)
							CastSpellByName(GetSpellInfo(119898),PQR_CustomTarget)
							return true
						

end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Next Fear Que</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if fearunit == nil  then fearunit = 0 end
if msgsaid == nil  then msgsaid = 0 end
if UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and fearunit ~= UnitGUID(&amp;quot;mouseover&amp;quot;)
and fearmod
then
if IsHealer(&amp;quot;mouseover&amp;quot;)and UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)
end
if UnitIsPlayer(&amp;quot;mouseover&amp;quot;)and not IsHealer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)
end
if not UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)
end
fearunit = UnitGUID(&amp;quot;mouseover&amp;quot;)
end



if nextfear
and fearunit ~= 0
then
fearunit = 0
msgsaid = 2
PQR_WriteToChat(&amp;quot;Primary Fear target cleared! Everything is automated again.&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear target cleared! Everything is automated again.&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary Fear target cleared! Everything is automated again.&amp;quot;)
end


for i = 1,#cTar do
if UnitExists(cTar[i])
and msgsaid == 0
and fearunit == UnitGUID(cTar[i])
and CokxDRInfo(cTar[i],&amp;quot;fear&amp;quot;) &amp;lt; 3 then
PQR_WriteToChat(&amp;quot;We give &amp;quot;..UnitName(cTar[i])..&amp;quot; a pause till DR fades.&amp;quot;)
msgsaid = 1
end
end

for i = 1,#cTar do
if UnitExists(cTar[i])
and msgsaid == 1
and fearunit == UnitGUID(cTar[i])
and CokxDRInfo(cTar[i],&amp;quot;fear&amp;quot;) &amp;lt; 3 then
PQR_WriteToChat(&amp;quot;&amp;quot;..UnitName(cTar[i])..&amp;quot; DR faded.&amp;quot;)
msgsaid = 0
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if warlockpause
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
then return true end

if  GetTime() - getInfos &amp;lt; 0.2 and  GetTime() - getInfos &amp;gt; 0.1 and (GCDCheck(77799) or GCDCheck(1490)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.6 and  GetTime() - getInfos &amp;gt; 0.5 and (GCDCheck(77799) or GCDCheck(1490)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.4 and  GetTime() - getInfos &amp;gt; 0.3 and (GCDCheck(77799) or GCDCheck(1490)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.8 and  GetTime() - getInfos &amp;gt; 0.7 and (GCDCheck(77799) or GCDCheck(1490)) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Horror</Name><Default>false</Default><SpellID>111397</SpellID><Actions></Actions><Lua>if GCDCheck(111397)
and not HaveBuff(&amp;quot;player&amp;quot;,111397,0) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Demonic Breath</Name><Default>false</Default><SpellID>47897</SpellID><Actions></Actions><Lua>for i= 1, #cTar do
if 100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i]) &amp;gt;= 25

 and GCDCheck(47897)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and ecTar[i].Range &amp;lt; 10
and ecTar[i].Facing
and not HaveBuff(cTar[i],iDMG(),0) 
--and UnitIsPlayer(cTar[i]) 
and not HaveDebuff(cTar[i],aSRS(),1)
and not HaveBuff(cTar[i],iSlow(),0)
then 
return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoCC</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if fearon == nil then  fearon = 0 end
if fearonhealer == nil then  fearonhealer = 0 end
if unitfeared == nil then  unitfeared = 0 end
if seduceon == nil then  seduceon = 0 end
if unitseduced == nil then  unitseduced = 0 end
if spellid == nil then  spellid = 0 end
if sleepon == nil then  sleepon = 0 end
if unitsleeped == nil then  unitsleeped = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{5782},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	fearonhealer = 1
	end
	 fearon = 1
	unitfeared = UnitGUID(cTar[i])
	end
end

for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitfeared == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{5782},2,&amp;quot;Player&amp;quot;)
	then
	fearonhealer = 0
	fearon = 0
	end
end


if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Succubus&amp;quot; then spellid = 6358 end
if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Shivarra&amp;quot; then spellid = 115268 end
local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(&amp;quot;pet&amp;quot;)

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{6358,115268},0,&amp;quot;Player&amp;quot;)
	then
	seduceon = 1
	unitseduced = UnitGUID(cTar[i])
	end
end



for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitseduced == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{6358,115268},1.5,&amp;quot;Player&amp;quot;)
	then
	seduceon = 0
	end
end



for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{104045},0,&amp;quot;Player&amp;quot;)
	then
	sleepon = 1
	unitsleeped = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitsleeped == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{104045},1.5,&amp;quot;Player&amp;quot;)
	then
	sleepon = 0
	end
end

	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and CokxDRInfo(cTar[j],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	 then -- FEAR
		 if  GCDCheck(5782)
		 and ecTar[j].Range ~= nil
    	 and ecTar[j].Range &amp;lt; 29
    	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
    	 and fearon == 0
		 and not PQR_IsMoving(0.01)
   	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 	 and (HaveBuff(cTar[j],attentionBuffs(),1)
	 	 or
	 	 (IsHealer(cTar[j])
     	 and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 70)
     	 or
     	 ( HaveDebuff(cTar[j],dPoisonCC(),0)
 		 or HaveDebuff(cTar[j],dCurseCC(),0)
		 or HaveDebuff(cTar[j],dMagicCC(),0)
		 or HaveDebuff(cTar[j],dSilenceCC(),0)
		 or HaveDebuff(cTar[j],dCC(),0)))
     	 then
	 	 PQR_CustomTarget=cTar[j]
		 CastSpellByName(GetSpellInfo(5782),PQR_CustomTarget)
		 return true
		 end
		 -- SEDUCE
		  if UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Succubus&amp;quot; or UnitCreatureFamily(&amp;quot;pet&amp;quot;) == &amp;quot;Shivarra&amp;quot; 
		 and GCDCheck(spellid)
		 and ecTar[j].Range ~= nil
    	 and ecTar[j].Range &amp;lt; 70
    	 and ePet[1].TRange ~= nil
		 and ePet[1].TRange &amp;lt; 30 
    	 and seduceon == 0
    	 and not castName
    	 and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 50
		 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 	 and (HaveBuff(cTar[j],attentionBuffs(),1)
	 	 or
	 	 (IsHealer(cTar[j])
     	 and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 70)
     	 or
     	 ( HaveDebuff(cTar[j],dPoisonCC(),0)
 		 or HaveDebuff(cTar[j],dCurseCC(),0)
		 or HaveDebuff(cTar[j],dMagicCC(),0)
		 or HaveDebuff(cTar[j],dSilenceCC(),0)
		 or HaveDebuff(cTar[j],dCC(),0)))
     	 then
	 	 PQR_CustomTarget=cTar[j]
	CastSpellByName(GetSpellInfo(spellid),PQR_CustomTarget)
		 return true
		 end
		 -- SLEEP
		  if  GCDCheck(5782)
		 and ecTar[j].Range ~= nil
    	 and ecTar[j].Range &amp;lt; 29
    	 and HaveBuff(&amp;quot;player&amp;quot;,114168,0)
    	 and sleepon == 0
		 and not PQR_IsMoving(0.01)
   	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 	 and (HaveBuff(cTar[j],attentionBuffs(),1)
	 	 or
	 	 (IsHealer(cTar[j])
     	 and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 70)
     	 or
     	 ( HaveDebuff(cTar[j],dPoisonCC(),0)
 		 or HaveDebuff(cTar[j],dCurseCC(),0)
		 or HaveDebuff(cTar[j],dMagicCC(),0)
		 or HaveDebuff(cTar[j],dSilenceCC(),0)
		 or HaveDebuff(cTar[j],dCC(),0)))
     	 then
	 	 PQR_CustomTarget=cTar[j]
		 CastSpellByName(GetSpellInfo(5782),PQR_CustomTarget)
		 return true
		 end
	end
	end</Lua><RecastDelay>1500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Soul Swap</Name><Default>false</Default><SpellID>86121</SpellID><Actions></Actions><Lua>if swapneeded == nil then swapneeded = 0 end
if lastSwapGUID == nil then lastSwapGUID = 0 end
if lSwapGUID == nil then lSwapGUID = 0 end
swapneeded = 0
for i=1,#cTar do
if UnitExists(cTar[i]) 
and GCDCheck(86121)
and #cTar &amp;gt; 1
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and ecTar[i].Range &amp;lt; 40
	and lastSwapGUID ~= UnitGUID(cTar[i])
	and LineOfSight(cTar[i])
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not HaveBuff(cTar[i],iDMG(),1)
	and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iSpell(),1)
	 and not HaveDebuff(cTar[i],30108,1,&amp;quot;player&amp;quot;)
 	 then
  	 swapneeded = swapneeded+1
 	end
 end


  for i=1,#cTar do
if  swapneeded &amp;gt; 0
 and GCDCheck(86121)
 	and UnitExists(cTar[i]) 
	and LineOfSight(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(cTar[i],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	and not HaveBuff(&amp;quot;player&amp;quot;,{74434,86211},0)
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iSpell(),0)
	 and HaveDebuff(cTar[i],30108,7,&amp;quot;player&amp;quot;)
	 then
   	 PQR_CustomTarget = cTar[i]
  	 lSwapGUID = UnitGUID(cTar[i])
 	 swapneeded = 0

 	 	 return true
 	end
 end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AfflRota</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1 , #cTar do

	if UnitExists(cTar[i])
	and LineOfSight(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iDMG(),0)
	and not HaveBuff(cTar[i],iSpell(),1)
	 then

	if GCDCheck(30108)
	and not PQR_IsCastingSpell(30108)
	and not PQR_IsMoving(0.01)
	and not HaveDebuff(cTar[i],30108,3,&amp;quot;player&amp;quot;) 
	then
	PQR_CustomTarget = cTar[i]
	CastSpellByName(GetSpellInfo(30108),PQR_CustomTarget)
	return true
	end
	
	 
	if GCDCheck(172)
	and not HaveDebuff(cTar[i],172,3,&amp;quot;player&amp;quot;) 
	then
	PQR_CustomTarget = cTar[i]
	CastSpellByName(GetSpellInfo(172),PQR_CustomTarget)
	return true
	end
	
	if GCDCheck(980)
	and not HaveDebuff(cTar[i],980,3,&amp;quot;player&amp;quot;) 
	then
	PQR_CustomTarget = cTar[i]
	CastSpellByName(GetSpellInfo(980),PQR_CustomTarget)
	return true
	end
	
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FocusBG</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not myFocusID then myFocusID = 0 end
if UnitExists(&amp;quot;focus&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) and UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then ClearFocus() end
if not UnitExists(&amp;quot;focus&amp;quot;)
or UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then
for i = 1, #cTar do
if UnitExists(cTar[i]) and IsHealer(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID = 0
break
end
end

for i = 1, #cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not eHealer()
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID=UnitGUID(cTar[i])
break
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SRG</Name><Default>false</Default><SpellID>77799</SpellID><Actions></Actions><Lua>local spell, _, _, _, _, endTime = UnitChannelInfo(&amp;quot;player&amp;quot;)
for i = 1 , #cTar do
if UnitExists(cTar[i])
and spell == GetSpellInfo(5782) 
and HaveBuff(cTar[i],{114028,23920,8177},0)
then
SpellStopCasting()
PQR_CustomTarget = cTar[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARLOCK>