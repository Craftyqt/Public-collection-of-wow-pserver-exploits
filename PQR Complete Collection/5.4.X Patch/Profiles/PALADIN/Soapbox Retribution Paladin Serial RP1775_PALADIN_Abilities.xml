<?xml version="1.0" encoding="utf-8" ?><PALADIN><Ability><Name>Seal of Truth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Righteousness == 1 then return false end

local Mana = Mana 

if ((Mana &amp;gt;= 40 and GetShapeshiftForm() ~= 4) or (Mana &amp;gt;= 90 and GetShapeshiftForm() == 4))
and GetShapeshiftForm() ~= 1 then
CastShapeshiftForm(1)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Seal of Insight</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Mana = Mana

if Mana &amp;lt;= 30
and GetShapeshiftForm() ~= 4 then
CastShapeshiftForm(4)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inquisition</Name><Default>false</Default><SpellID>84963</SpellID><Actions></Actions><Lua>local HolyPower, Inquisition, Inquisitiontimer = HolyPower, Inquisition, Inquisitiontimer

if ((Inquisition and Inquisitiontimer - GetTime() &amp;lt;= 2) 
or not Inquisition)
and (HolyPower &amp;gt;= 3 or UnitBuffID(&amp;quot;player&amp;quot;, 90174)) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Avenging Wrath</Name><Default>false</Default><SpellID>31884</SpellID><Actions>/cast Lifeblood|/use 10 |/use 13 |/use 14</Actions><Lua>if Nova_Cooldowns ~= 1 or not MeleeRange() then return false end
if BossTime then return false end




local Guardian, Guardiantimer, SanctifiedWrath, Inquisition, GOAKCD = Guardian, Guardiantimer, 
SanctifiedWrath, Inquisition, GOAKCD
if PQI_SoapboxRetribution_BossCooldowns_enable and not SpecialUnit() then return false end
if ((PQI_SoapboxRetribution_ExecutionSentenceHP_enable and (UnitHealth(&amp;quot;target&amp;quot;) &amp;gt; PQI_SoapboxRetribution_ExecutionSentenceHP_value * 1000)) or not PQI_SoapboxRetribution_ExecutionSentenceHP_enable) and IsPlayerSpell(114157) and GetSpellCD(114157) &amp;gt; v1 and GetSpellCD(114157) &amp;lt; v2 and ((Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 31) == false) then return false end


if Inquisition then
	if not IsPlayerSpell(53376) then
		if GOAKCD &amp;gt; 129 then return false end
		if (GOAKCD &amp;gt; 30 and not Guardian)
		or (Guardian and Guardiantimer - GetTime() &amp;lt; 21)
		or (AncientPower and AncientPowercount &amp;gt; 11)
		or (Targethealth &amp;lt; 30 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 31) then
		return true	
		end
	elseif GOAKCD &amp;lt; 1 or (GOAKCD &amp;gt; 30 and not Guardian) or (Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 31) then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Guardian of Ancient Kings</Name><Default>false</Default><SpellID>86698</SpellID><Actions></Actions><Lua>if Nova_Cooldowns ~= 1 or not MeleeRange() then return false end

local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local Inquisition, SanctifiedWrath, AWCD, AvengingWrath = Inquisition, SanctifiedWrath, AWCD, AvengingWrath
if (not PQI_SoapboxRetribution_ExecutionSentenceHP_enable or (PQI_SoapboxRetribution_ExecutionSentenceHP_enable and (UnitHealth(&amp;quot;target&amp;quot;) &amp;gt; PQI_SoapboxRetribution_ExecutionSentenceHP_value * 1000))) and IsPlayerSpell(114157) and GetSpellCD(114157) &amp;gt; 29 and GetSpellCD(114157) &amp;lt; 37 and ((Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 31) == false) then return false end


if PQI_SoapboxRetribution_BossCooldowns_enable and not SpecialUnit() then return false end


	if SanctifiedWrath == true then 
		if AvengingWrath or (NOT2D == true and Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 15) or GetSpellCD(31884) &amp;gt; 30 or BossTime then
		return true
		end
	elseif (AWCD &amp;lt; 10 and Inquisition) or (NOT2D == true and Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 15) or GetSpellCD(31884) &amp;gt; 30 or BossTime then
	return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Execution Sentence</Name><Default>false</Default><SpellID>114157</SpellID><Actions>/use 10</Actions><Lua>--if Nova_AOE == 1 or Nova_Cleave == 1 then return false end

local Inquisition = Inquisition
--if ((PQI_SoapboxRetribution_BossCooldowns_enable and SpecialUnit()) or not PQI_SoapboxRetribution_BossCooldowns_enable) then
--	if not Guardian and not AvengingWrath and GetSpellCD(86698) &amp;lt; 30 then
--	return false
--	end
--end

if PQI_SoapboxRetribution_ExecutionSentenceHP_enable == false
or (PQI_SoapboxRetribution_ExecutionSentenceHP_enable == true 
and UnitHealth(&amp;quot;target&amp;quot;) &amp;gt; PQI_SoapboxRetribution_ExecutionSentenceHP_value * 1000) then
if Inquisition then
	if (AncientPower and AncientPowercount &amp;gt; 11) and AWCD &amp;gt; 3 then
	return true
	elseif not Guardian then
		if AWCD &amp;gt; 30 and not AvengingWrath then
			if StrProc &amp;gt;= 2 then
			return true
			end
		elseif AvengingWrath then
			if StrProc &amp;gt;= 2 or AvengingWrathtimer - GetTime() &amp;lt; 3 or (GOAKCD &amp;gt; 30 and GOAKCD &amp;lt; 35) then
			return true
			end
		end
	end
	if T2D(&amp;quot;target&amp;quot;) &amp;lt; 15 and T2D(&amp;quot;target&amp;quot;) &amp;gt; 12 then 
	return true
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Templars Verdict</Name><Default>false</Default><SpellID>85256</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 or Nova_Cleave == 1 or not MeleeRange() then return false end

local HolyPower = HolyPower

if UnitBuffID(&amp;quot;player&amp;quot;, 144595) then
return false
end

if HolyPower &amp;gt;= 3 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Wrath</Name><Default>false</Default><SpellID>24275</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---HoW Wait---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

local AvengingWrath, HOWCD, HolyPower = AvengingWrath, HOWCD, HolyPower

if Targethealth &amp;lt;= 20 or AvengingWrath then
	if (HOWCD &amp;gt; 0 and HOWCD &amp;lt;= 0.2)
	or (HOWCD &amp;gt; 0 and HOWCD &amp;lt;= 0.5 and HolyPower == 4) then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Exorcism</Name><Default>false</Default><SpellID>879</SpellID><Actions></Actions><Lua>local ExoGlyph, AvengingWrath, HolyPower = ExoGlyph, AvengingWrath, HolyPower

if Exoglyph == true or (UnitBuffID(&amp;quot;player&amp;quot;, 105809) and (HolyPower &amp;gt;= 3 or (HOWCD &amp;lt;= 2 and HolyPower &amp;gt;= 2))) then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Judgement</Name><Default>false</Default><SpellID>20271</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then
	if IsPlayerSpell(122028) then
		if GetSpellCD(122032) &amp;lt; 1 then 
		return false 
		end
	end
end

if (UnitBuffID(&amp;quot;player&amp;quot;, 105809) and (HolyPower &amp;gt;= 3 or (HOWCD &amp;lt;= 2 and HolyPower &amp;gt;= 2))) then return false end
return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Crusader Strike</Name><Default>false</Default><SpellID>35395</SpellID><Actions></Actions><Lua>local AvengingWrath, HolyPower = AvengingWrath, HolyPower

if Nova_AOE == 1 then return false
elseif not MeleeRange() or (UnitBuffID(&amp;quot;player&amp;quot;, 105809) and (HolyPower &amp;gt;= 3 or (HOWCD &amp;lt;= 2 and HolyPower &amp;gt;= 2))) then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Judgement -High-</Name><Default>false</Default><SpellID>20271</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then
	if IsPlayerSpell(122028) then
		if GetSpellCD(122032) &amp;lt; 1 then 
		return false 
		end
	end
end
if (UnitBuffID(&amp;quot;player&amp;quot;, 105809) and (HolyPower &amp;gt;= 3 or (HOWCD &amp;lt;= 2 and HolyPower &amp;gt;= 2))) then return false end

local AvengingWrath = AvengingWrath

local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if Targethealth &amp;lt;= 20
or AvengingWrath then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Templars Verdict -High-</Name><Default>false</Default><SpellID>85256</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 or Nova_Cleave == 1 or not MeleeRange() then return false end

local HolyPower = HolyPower

if HolyPower &amp;gt; 4 
and UnitBuffID(&amp;quot;player&amp;quot;, 144595) then
return false
end

if HolyPower == 5 
or UnitBuffID(&amp;quot;player&amp;quot;, 105809) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Initialize-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or IsMouseButtonDown(3)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
or UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or UnitBuffID(&amp;quot;player&amp;quot;,5384) ~= nil
or UnitDebuffID(&amp;quot;target&amp;quot;,1499)
or (UnitBuffID(&amp;quot;target&amp;quot;,123250) and UnitBuffID(&amp;quot;target&amp;quot;,123181))
or UnitDebuffID(&amp;quot;target&amp;quot;,19503)
then return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sacred Shield</Name><Default>false</Default><SpellID>20925</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-GCD Check-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local JudgementCD, ExorcismCD, HOWCD, AvengingWrath, Execution, ExeCD = JudgementCD, ExorcismCD, HOWCD, 
AvengingWrath, Execution, ExeCD

local Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if JudgementCD &amp;lt;= 1 or (ExorcismCD &amp;lt;= 1 and ((ExoGlyph == true and MeleeRange()) or ExoGlyph == false))
or (HOWCD &amp;lt;= 1 and (AvengingWrath or Targethealth &amp;lt;= 20))
or (Execution == true and ExeCD &amp;lt;= 1) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Storm -High-</Name><Default>false</Default><SpellID>53385</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 and Nova_Cleave ~= 1 then return false end
if not MeleeRange() then return false end

local HolyPower = HolyPower

if HolyPower == 5 
or UnitBuffID(&amp;quot;player&amp;quot;, 105809) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Light&amp;apos;s Hammer</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Light ~= 1 then return false end

if not IsPlayerSpell(114158) then return false end

	if PQR_SpellAvailable(114158) then
			CastSpellByName(GetSpellInfo(114158),nil)
			if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
			return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of the Righteous</Name><Default>false</Default><SpellID>53595</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false
elseif not MeleeRange() or (UnitBuffID(&amp;quot;player&amp;quot;, 105809) and (HolyPower &amp;gt;= 3 or (HOWCD &amp;lt;= 2 and HolyPower &amp;gt;= 2))) then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Storm</Name><Default>false</Default><SpellID>53385</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 and Nova_Cleave ~= 1 then return false end
if not MeleeRange() then return false end

local HolyPower = HolyPower

if HolyPower &amp;gt;= 3 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Word Of Glory</Name><Default>false</Default><SpellID>85673</SpellID><Actions></Actions><Lua>if Nova_WOG ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lay on Hands</Name><Default>false</Default><SpellID>633</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_LayonHands_enable then return false end

local value = tonumber(PQI_SoapboxRetribution_LayonHands_value)
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


--if  Playerhealth &amp;lt;= value then
--return true
--end



	---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if IsSpellInRange(GetSpellInfo(633),member) == 1 then
		if not IsLineOfSight(member, 3) then return false end
		---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then
				if Memberhealth &amp;lt; 10 then
				PQR_CustomTarget = member
				--SpellStopCasting()
				return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_Healthstone_enable then return false end

local value = tonumber(PQI_SoapboxRetribution_Healthstone_value)
local HealthstoneCD = select(2,GetItemCooldown(5512))
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if  Playerhealth &amp;lt;= value
and HealthstoneCD &amp;lt; 1
then
UseItemByName(5512, &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---6. Success!---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
             or (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
		if select(12, ...) == 136494 
		or select(12, ...) == 85673 then
		SetCVar(&amp;quot;Nova_WOG&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Word Of Glory: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 1022 then
		SetCVar(&amp;quot;Nova_HOP&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Hand Of Protection: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 114158 and Nova_Light == 1 then
		SetCVar(&amp;quot;Nova_Light&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Light&amp;apos;s Hammer: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 1044  then
		SetCVar(&amp;quot;Nova_HOF&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Hand Of Freedom: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 853  or select(12, ...) == 105593 then
		SetCVar(&amp;quot;Nova_HOJ&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Hammer Of Justice: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 642 then
		SetCVar(&amp;quot;Nova_DS&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Divine Shield: \124cFFE61515Casted&amp;quot;)
      end
     end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Racials]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_Racials_enable then return false end

local Troll, Goblin, BloodElf, TrollCD, BloodElfCD, GoblinCD = 
Troll, Goblin, BloodElf, TrollCD, BloodElfCD, GoblinCD

--Troll Berserking--
if Troll == true then 
	if TrollCD &amp;lt; 1 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 3045) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
	and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 90355) then
	CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	return true
	end
end


--Blood Elf Arcane Torrent--
if BloodElf == true then 
	if BloodElfCD &amp;lt; 1 
	and Mana &amp;lt; 40 then
	CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
	return true
	end
end

--Goblin Rocket Barrage--
if Goblin == true then 
	if GoblinCD &amp;lt; 1 then
	CastSpellByName(GetSpellInfo(69041),&amp;quot;target&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mass Exorcism</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Exoglyph, ExorcismCD, HolyPower, AvengingWrath = Exoglyph, ExorcismCD, HolyPower, AvengingWrath

if Exoglyph == false or not MeleeRange() or (UnitBuffID(&amp;quot;player&amp;quot;, 105809) and (HolyPower &amp;gt;= 3 or (HOWCD &amp;lt;= 2 and HolyPower &amp;gt;= 2))) then return false end

if ExorcismCD &amp;lt; 1 then
CastSpellByName(GetSpellInfo(879))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Avenger</Name><Default>false</Default><SpellID>105809</SpellID><Actions></Actions><Lua>local AvengingWrath = AvengingWrath

if AvengingWrath then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Salvation</Name><Default>false</Default><SpellID>1038</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_HandofSalvation_enable then return false end

if UnitThreatSituation(&amp;quot;player&amp;quot;) == 3
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;gt; 20
then
return true
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Shield</Name><Default>false</Default><SpellID>642</SpellID><Actions></Actions><Lua>if Nova_DS ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Justice</Name><Default>false</Default><SpellID>853</SpellID><Actions></Actions><Lua>if Nova_HOJ ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand Of Freedom</Name><Default>false</Default><SpellID>1044</SpellID><Actions></Actions><Lua>if Nova_HOF ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand Of Protection</Name><Default>false</Default><SpellID>1022</SpellID><Actions></Actions><Lua>if Nova_HOP ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Seal of Righteousness</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Righteousness ~= 1 then return false end

local Mana = Mana 

if ((Mana &amp;gt;= 40 and GetShapeshiftForm() ~= 4) or (Mana &amp;gt;= 90 and GetShapeshiftForm() == 4))
and GetShapeshiftForm() ~= 2 then
CastShapeshiftForm(2)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3a. Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Cleave&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Righteousness&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;WOG&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;HOP&amp;quot;, 					Var2 = 1		},	
		{	Var1 = 0,	Text = &amp;quot;HOF&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;HOJ&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;DS&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Light&amp;quot;,					Var2 = 1		}
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
			xrn:message(&amp;quot;|cff9933ffCooldowns - Active.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
		else			
			xrn:message(&amp;quot;|cff9933ffCooldowns - Inactive.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
		end
	end
	SLASH_CLEAVE1 = &amp;quot;/cleave&amp;quot;
	function SlashCmdList.CLEAVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cleave&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;)
			xrn:message(&amp;quot;\124cFFFFFFFFCleave Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		else
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
		xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		end
	end		
	
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFArea of Effect Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
			SetCVar(&amp;quot;Nova_Righteousness&amp;quot;, 0)
		end
	end
	SLASH_RIGHTEOUSNESS1 = &amp;quot;/righteousness&amp;quot;
	function SlashCmdList.RIGHTEOUSNESS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Righteousness&amp;quot;) then
			xrn:message(&amp;quot;\124cFF3BB0FFRighteousness Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Righteousness&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFD4D4D4Righteousness Disabled&amp;quot;) 
			SetCVar(&amp;quot;Nova_Righteousness&amp;quot;, 0)
		end
	end
	SLASH_WOG1 = &amp;quot;/wog&amp;quot;
	function SlashCmdList.WOG(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_WOG&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFWord of Glory - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_WOG&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFF0000FFWord of Glory - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_WOG&amp;quot;, 0)
		end
	end
	SLASH_HOP1 = &amp;quot;/hop&amp;quot;
	function SlashCmdList.HOP(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_HOP&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFHand of Protection - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOP&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFF0000FFHand of Protection - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOP&amp;quot;, 0)
		end
	end
	SLASH_HOF1 = &amp;quot;/hof&amp;quot;
	function SlashCmdList.HOF(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_HOF&amp;quot;) then
			xrn:message(&amp;quot;\124cFFCC9900Hand of Freedom - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOF&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC9900Hand of Freedom - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOF&amp;quot;, 0)			
		end
	end
		
	SLASH_HOJ1 = &amp;quot;/hoj&amp;quot;
	function SlashCmdList.HOJ(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_HOJ&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFHammer of Justice - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOJ&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFHammer of Justice - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_HOJ&amp;quot;, 0)
		end
	end
	
	SLASH_DS1 = &amp;quot;/ds&amp;quot;
	function SlashCmdList.DS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_DS&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFDivine Shield - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_DS&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFDivine Shield - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_DS&amp;quot;, 0)
		end
	end
		SLASH_LIGHT1 = &amp;quot;/light&amp;quot;
	function SlashCmdList.LIGHT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Light&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFLight&amp;apos;s Hammer - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Light&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFLight&amp;apos;s Hammer - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Light&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---1. Functions---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
else group = nil
end

  
 
if not IsPlayerSpell(53376) then
v1 = 19
v2 = 27
else
v1 = 29
v2 = 37
end 
  
  
  
  
  
---Procs---
StrProc = 0
FFcount = 0
PRcount = 0
local DancingSteel, _, _, _, _, _, DancingSteelEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 120032) -- 1650int
local Xuen, _, _, _, _, _, XuenEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 128986) -- 3.0k+ int
local PotMogu, _, _, _, _, _, PotMoguEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 105706) -- 4.0k int
local LeiShenTrinket, _, _, _, _, _, LeiShenTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 126582) -- 3.4k int
local LessonsTrinket, _, _, _, _, _, LessonsTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 126519) -- 4.2k int
local DaeloTrinket, _, _, _, _, _, DaeloTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 127577) -- 3.8k int
local PrimordiusTrinket, _, _, _, _, _, PrimordiusTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 138870) -- 1.3k stacking int
local SparkTrinket, _, _, _, _, _, SparkTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 138960) -- 7.3k int
local ThoksTailTrinket, _, _, _, _, _, ThoksTailTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 146250 ) -- 11.7k int
local EvilEyeTrinket, _, _, _, _, _, EvilEyeTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 146245 ) -- 11.7k int
local FusionFireTrinket, _, _, _, _, _, FusionFireTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 148899 ) -- 11.7k int
local FabledFeatherTrinket, _, _, _, _, _, FabledFeatherTrinketEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 138759 ) -- 11.7k int




if UnitBuffID(&amp;quot;player&amp;quot;,120032) then
	StrProc = StrProc + 0.5
end
if UnitBuffID(&amp;quot;player&amp;quot;,128986) then
	StrProc = StrProc + 1.5
end
if UnitBuffID(&amp;quot;player&amp;quot;,105706) then
	StrProc = StrProc + 1.5
end
if UnitBuffID(&amp;quot;player&amp;quot;,126582) then
	StrProc = StrProc + 1.5
end
if UnitBuffID(&amp;quot;player&amp;quot;,126519) then
	StrProc = StrProc + 1.5
end
if UnitBuffID(&amp;quot;player&amp;quot;,127577) then
	StrProc = StrProc + 1.5
end
if UnitBuffID(&amp;quot;player&amp;quot;,138870) then
	local _, _, _, PRcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 138870 )
	StrProc = StrProc + (PRcount * 0.40)
end
if UnitBuffID(&amp;quot;player&amp;quot;,138960) then
	StrProc = StrProc + 1.5
end

if UnitBuffID(&amp;quot;player&amp;quot;,146250) then
	StrProc = StrProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,146245) then
	StrProc = StrProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,148899) then
	StrProc = StrProc + 2
end
if UnitBuffID(&amp;quot;player&amp;quot;,138759) then
	local _, _, _, FFcount, _, _, _ = UnitBuffID(&amp;quot;player&amp;quot;, 138759 )
	StrProc = StrProc + (FFcount * 0.2)
end



-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local PQ_BossUnits = PQ_BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#PQ_BossUnits do
				if PQ_BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end
-- Complete boss unit table (Dungeons/Heroics/Raids)
PQ_BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}

if Nova_AOE ~= 1 and Nova_Righteousness == 1 then
SetCVar(&amp;quot;Nova_Righteousness&amp;quot;, 0)
end
-- GetSpellCD will return actual Timer before we can use the ability, 0 if the ability is ready.
	GetSpellCD = nil
	function GetSpellCD(MySpell)
		if GetSpellCooldown(GetSpellInfo(MySpell)) == nil then
			return 0
		else
			local Start ,CD = GetSpellCooldown(MySpell)
			local MyCD = Start + CD - GetTime()
			return MyCD
		end
	end
	
	---Credits to Bu_ba for the line of code!---
if not IsLineOfSight then
 LoSTable = { }
 function IsLineOfSight(targetCheck, time)
  local time=time or 5
  targetGUID = UnitGUID(targetCheck) or 0 

   for i=1, #LoSTable do
    if time &amp;lt; (GetTime() - LoSTable[i].time) then
     table.remove(LoSTable, i)
     break
    end
  end

   function LoSCheck(self, event, ...)
    local targetGUID = targetGUID
    local Log = {...}
    local AlreadyTabled = false
    if Log[2] and Log[2] == &amp;quot;SPELL_CAST_FAILED&amp;quot; and targetGUID then
     if Log[4] and Log[4]==UnitGUID(&amp;quot;player&amp;quot;) then
      if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
       for j=1, #LoSTable do
        if targetGUID == LoSTable[j].unit then
         AlreadyTabled = true
         break
        end
       end
       if not AlreadyTabled then
        table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
        targetGUID = nil
        _G.NovaLineOfSight:UnregisterAllEvents()
       end
      end
     end
    end
    
   end

  if not NovaLineOfSight then
    frameLOS = CreateFrame(&amp;quot;frame&amp;quot;, &amp;quot;NovaLineOfSight&amp;quot;)
    frameLOS:SetScript(&amp;quot;OnEvent&amp;quot;, LoSCheck)
  end
  
   for k=1, #LoSTable do
     if targetGUID and targetGUID == LoSTable[k].unit then
     return false
    end
  end
  
  
  _G.NovaLineOfSight:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  return true

 end
end

--Dummy 5min DPS Test
	if PQI_SoapboxRetribution_5MinDPSTest_enable then
		if UnitExists(&amp;quot;target&amp;quot;) then
			if cTime &amp;gt;= 300 and cTime &amp;lt; 305 and dummy() then
			StopAttack()
			ClearTarget()
			print(&amp;quot;5 Minute Dummy Test Concluded - Profile Stopped. Leave Combat to Re-Enable or Uncheck 5 Min DPS Test&amp;quot;)
			PQR_StopRotation()
			RunMacroText(&amp;quot;/run Screenshot()&amp;quot;)
			end
		end
	end
	
	-- Time 2 Die
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		
		return timeToDie
	end
end


	
	---No Time to Die---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

NOT2D = false

Target = { 70235, 70247, 70212 }

for i=1, #Target do
   if targetGUID == Target[i] then NOT2D = true
   end
end
end

-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local BossUnits = BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#BossUnits do
				if BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end

-- Aura Information Function
AuraInfo = nil
function AuraInfo(i,unit)
	if i == 1 then
		for x = 1, #buffs.stat do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stat[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 2 then
		for x = 1, #buffs.stamina do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stamina[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 3 then
		for x = 1, #buffs.atkpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 4 then
		for x = 1, #buffs.atkspeed do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkspeed[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 5 then
		for x = 1, #buffs.spllpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 6 then
		for x = 1, #buffs.spllhaste do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllhaste[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 7 then
		for x = 1, #buffs.crit do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.crit[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 8 then
		for x = 1, #buffs.mastery do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.mastery[x])))
			if texture then
				return name, _, texture
			end
		end
	else 
		return nil, nil, nil
	end
end


-- Unerring Vision of Lei-Shen
Vision = {
	95814,	-- LFR
	94524,	-- Normal
	96186,	-- Thunderforged
	96558,	-- Heroic
	96930	-- Heroic Thunderforged
}

-- Warlock Tier set table
warlockT15 = {
	96725,96726,96727,96728,96729,	-- Tier 15: Heroic
	95325,95326,95327,95328,95329,	-- Tier 15: Normal
	95981,95982,95983,95984,95985	-- Tier 15: LFR
}

-- Aura Info function.
buffs = {
	stat 		=	{ 90363, 20217,	115921, 1126 },
	stamina		= 	{ 469, 90364, 109773, 21562},
	atkpwr		= 	{ 19506, 57330,	6673 },
	atkspeed	=	{ 55610, 113742, 30809, 128432, 128433 },
	spllpwr		=	{ 77747, 109773, 126309, 61316, 1459 },
	spllhaste	= 	{ 24907, 15473, 51470, 49868 },
	crit		=	{ 17007, 1459, 61316, 116781, 97229, 24604, 90309, 126373, 126309 },
	mastery		=	{ 116956, 19740, 93435, 128997 },
}
-- Complete boss unit table (Dungeons/Heroics/Raids)
BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---2. Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---Engineer Glove Cooldown---
GloveCD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10)

---Trinket 1 Cooldown---
Trinket1CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

---Trinket 2 Cooldown---
Trinket2CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

---Healthstone Cooldown---
HealthstoneCD = select(2,GetItemCooldown(5512))

---Exorcism CD---
local ExorcismStart, ExorcismDuration = GetSpellCooldown(879)
ExorcismCD = ExorcismStart + ExorcismDuration - GetTime()

---Execution Sentence CD---
local ExeStart, ExeDuration = GetSpellCooldown(114157)
ExeCD = ExeStart + ExeDuration - GetTime()

---Judgement CD---
local JudgementStart, JudgementDuration = GetSpellCooldown(20271)
JudgementCD = JudgementStart + JudgementDuration - GetTime()

---Hammer of Wrath CD---
local AWStart, AWDuration = GetSpellCooldown(31884)
AWCD = AWStart + AWDuration - GetTime()

---Hammer of Wrath CD---
local HOWStart, HOWDuration = GetSpellCooldown(24275)
HOWCD = HOWStart + HOWDuration - GetTime()

---Hammer of Wrath CD---
local GOAKStart, GOAKDuration = GetSpellCooldown(86698)
GOAKCD = GOAKStart + GOAKDuration - GetTime()
--------------------------------------HEALTH/POWER TOOLS------------------------------------------

---Holy Power---
HolyPower = UnitPower(&amp;quot;player&amp;quot;,9)

---Mana---
Mana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

---Player Health---
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

---Target Health---
Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

--Melee Range---
function MeleeRange()
	if IsSpellInRange(GetSpellInfo(35395), &amp;quot;target&amp;quot;) == 1 then 
	return true 
	else 
	return false
	end
end

-------------------------------------BUFFS--------------------------------------------------------

---Avenging Wrath---
Inquisition,_,_,_,_,_,Inquisitiontimer = UnitBuffID(&amp;quot;player&amp;quot;,84963)

---Avenging Wrath---
Guardian,_,_,_,_,_,Guardiantimer = UnitBuffID(&amp;quot;player&amp;quot;,86698)

---Avenging Wrath---
AvengingWrath,_,_,_,_,_,AvengingWrathtimer = UnitBuffID(&amp;quot;player&amp;quot;,31884)

---Seal Of Insight---
SealOfInsight = GetShapeshiftForm(&amp;quot;player&amp;quot;) == 4

---Seal Of Truth---
SealOfInsight = GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1

---Blood Charges---
Charges,_,_,Chargescount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,114851)

AncientPower,_,_,AncientPowercount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,86700)


Selfless,_,_,Selflesscount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,114250)


---Bloodlust Check---
Bloodlust = UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
or UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)

---Disarm Target List---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Grapple = false

Disarm = { 61947, 61240, 61398, 59240, 62405, 62408, 62402, 60396, 64453, 63591, 63589 }

for i=1, #Disarm do
   if targetGUID == Disarm[i] then Grapple = true
   end
end
end

---Is Target Disarmed---
Disarmed = false

Weapons = { 676, 51722, 91644, 64058, 117368 }

for y=1, #Weapons do
   if UnitDebuffID(&amp;quot;target&amp;quot;, Weapons[y]) then Disarmed = true
   end
end

---Trinket Slot Check---
Trinkets = 0

trinketID = { 87495, 86043, 91099, 93253, 93258, 89082, 84934, 91452, 81265, 84344 }

for i=13, 14, 1  do
	 for y=1, #trinketID do
   if GetInventoryItemID(&amp;apos;player&amp;apos;, i) == trinketID[y] then 
     Trinkets = Trinkets + 1
   end
  end
end

---Trinket Buff Check---
Proc = 0 

Buff = { 126649, 126554, 126707, 128984, 127928, 126483, 126489, 105574, 127575, 
126690, 136086, 136086, 126599, 126484, 136088, 118334, 104423, 104510, 105697, 126734 }

for i=1, #Buff do
   if UnitBuffID(&amp;quot;player&amp;quot;, Buff[i]) then Proc = Proc + 1 
   end
end



---Blacklist AoE Targets---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

NoAoE = false

Name = { 62995 }

for i=1, #Name do
   if targetGUID == Name[i] then NoAoE = true
   end
end
end

---AMS Use List---
BossShield = false

Debuff = { 123011, 123012, 111850, 124863 }

for i=1, #Debuff do
	local Dread,_,_,Dreadcount,_,_,expires = UnitDebuffID(&amp;quot;player&amp;quot;,122768) 
	if UnitDebuffID(&amp;quot;player&amp;quot;, Debuff[i]) 
	or UnitCastingInfo(&amp;quot;target&amp;quot;) == &amp;quot;Expel Corruption&amp;quot;
	or UnitChannelInfo(&amp;quot;target&amp;quot;) == &amp;quot;Get Away!&amp;quot;
	or UnitChannelInfo(&amp;quot;target&amp;quot;) == &amp;quot;Lightning Storm&amp;quot;
	or (Dread and Dreadcount &amp;gt; 15) then
	BossShield = true
	end
end



PQ_ImpalingSpearCD = 0
PQ_ImpalingSpear = 122224

PQ_Frame = nil
PQ_CanCast = true
PQ_CanBT = true
PQ_CanImpalingSpear = true
function PQ_Frame_OnEvent(self, event, ...)
	if ... ~= &amp;quot;player&amp;quot; then return end
	
	local spellID = select(5, ...)
	
	if spellID ~= PQ_ImpalingSpear then
		PQ_GCD = GetTime() + 0.7
		PQ_CanCast = false
	end
			
	if spellID == PQ_ImpalingSpear then
		PQ_ImpalingSpearCD = GetTime() + 5
		PQ_CanImpalingSpear = false
	end
end
-----------------------------------------GLYPHS--------------------------------------------------
Exoglyph = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 122028 then Exoglyph = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 122028 then Exoglyph = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 122028 then Exoglyph = true end

HarshWords = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 197 then HarshWords = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 197 then HarshWords = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 197 then HarshWords = true end

----------------------------------------TALENTS----------------------------------------------------
SanctifiedWrath = false
Execution = false

if select(2,GetTalentRowSelectionInfo(6)) == 18 then Execution = true end
if select(2,GetTalentRowSelectionInfo(5)) == 14 then SanctifiedWrath = true end

------------------------------------------RACIALS(Death Knight)--------------------------------------------
---Race Check---
Troll = IsSpellKnown(26297)
Orc = IsSpellKnown(20572)
Goblin = IsSpellKnown(69041)
BloodElf = IsSpellKnown(28730)

---Cooldown Check---
local TrollStart,TrollDuration = GetSpellCooldown(26297)
TrollCD = TrollStart + TrollDuration - GetTime()
local OrcStart,OrcDuration = GetSpellCooldown(20572)
OrcCD = OrcStart + OrcDuration - GetTime()
local BloodElfStart,BloodElfDuration = GetSpellCooldown(28730)
BloodElfCD = BloodElfStart + BloodElfDuration - GetTime()
local GoblinStart,GoblinDuration = GetSpellCooldown(69041)
GoblinCD = GoblinStart + GoblinDuration - GetTime()



------------------------------------------POTIONS--------------------------------------------------
VirmenCD = select(2,GetItemCooldown(76089))
Virmen = GetItemCount(76089)

MoguCD = select(2,GetItemCooldown(76095))
Mogu = GetItemCount(76095)

SharkCD = select(2,GetItemCooldown(77589))
Shark = GetItemCount(77589)

--------------------------------------PVP Tools----------------------------------------------------
function IsSlowed(unit)
local Slows = {
--WARLOCK--
18223,
--WARRIOR--
12323,
1715,
--PALADIN--
110300,                             
--DK--
45524,
50435,
--DRUID--
58180,
102355,
--HUNTER--
5116,
72217,
--MAGE--
7302,
116,
120,
44614,
--PRIEST--
124468,
15407,
--ROGUE--
26679,
3408,
--SHAMAN--
8056,
--MONK--
116095
              }
for i=1,#Slows do
        if UnitDebuffID(unit,Slows[i])
                then
                        return true
                end
        end
end

function SlowImmune(unit)
local Freedom = {
--Hand of Freedom--
1044,
--Dispersion--
47585
             }
for i=1,#Freedom do
        if UnitBuffID(unit,Freedom[i])
                then
                        return true
                end
        end
end

function IsImmune(unit)
local Immunity = {
110700, --Divine Shield
1022, --Hand of Protection
45438, --Ice Block
31224,--Cloak of Shadows
19263, --Deterrence
97417--BrittleBarrier
					}
for i=1,#Immunity do
        if UnitBuffID(unit,Immunity[i])
                then
                        return true
                end
        end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3. Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_RETRIBUTION then return false end

local config = {
	name  = &amp;apos;Retribution&amp;apos;,
	author  = &amp;apos;Soapbox&amp;apos;,
	abilities = {
					{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
		{  name = &amp;quot;Auto Target Next Enemy&amp;quot;,
			enable = false,
			newSection = true,
		},
		{ 	name	= &amp;quot;Raid Buff Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select which raid buff to use.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					values	= {
						&amp;quot;Kings&amp;quot;,
						&amp;quot;Might&amp;quot;,
					},
					width	= 80,
				},
		},
						{  name = &amp;quot;Boss Functions&amp;quot;,
				tooltip = &amp;quot;Enabls the use of special functions on certain raid bosses&amp;quot;,
				enable = false,
				newSection = true,	
				},
		{  name = &amp;quot;Hand of Salvation&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;|cffCC0099When a target dummy is attacked this will stop at exactly 5 mins and take a screenshot&amp;quot;,	
		},	
		{  name = &amp;quot;Racials&amp;quot;,
			enable = false,
			newSection = true,
		},	
		{  name = &amp;quot;Frag Belt&amp;quot;,
			enable = true,
		},	
		{  name = &amp;quot;Potions&amp;quot;,
			enable = true,
		},	
		{  name = &amp;quot;Boss Cooldowns&amp;quot;,
			enable = true,
		},	
		{ 	name	= &amp;quot;Execution Sentence HP&amp;quot;,
			enable	= true,
			widget	= { type = &amp;quot;Txtbox&amp;quot;,
				value	= 300,
				tooltip	= &amp;quot;This is the amount of health (in thousands, for example: 300 = 300k) you want execution sentence to not be used under&amp;quot;,
				},
			},
		{  name = &amp;quot;Selfless Healer Raid Healing&amp;quot;,
			enable = true,
		},
		{  name = &amp;quot;Word of Glory Raid Healing&amp;quot;,
			enable = true,
		},
		{  name = &amp;quot;Lay on Hands&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 10,
				step = 5,
			},
		},
		{  name = &amp;quot;Healthstone&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 65,
				step = 5,
			},
		},
	},
	hotkeys = {
		{ name = &amp;quot;Pause&amp;quot;,  					enable = true, hotkeys = {&amp;apos;ra&amp;apos;}, 
		tooltip	= &amp;quot;|cffCC0099Assign |cffFFFFFFPause |cffCC0099Keybind.&amp;quot;, },					
	},	
}
SOAPBOX_RETRIBUTION = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4. Toggle Key---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false



---Combat Timer Settings---
if not PlayerRegenEnabledFrame_OnEvent then
function PlayerRegenEnabledFrame_OnEvent()
cTime = nil
end
end

if not PlayerRegenDisabledFrame_OnEvent then
function PlayerRegenDisabledFrame_OnEvent()
cTime = GetTime()
end
end
	
if not PlayerRegenEnabled then
local PlayerRegenEnabled = CreateFrame(&amp;quot;Frame&amp;quot;)
PlayerRegenEnabled:RegisterEvent(&amp;quot;PLAYER_REGEN_ENABLED&amp;quot;)
PlayerRegenEnabled:SetScript(&amp;quot;OnEvent&amp;quot;, PlayerRegenEnabledFrame_OnEvent)
	
PlayerRegenEnabled = true

end
	
if not PlayerRegenDisabled then
local PlayerRegenDisabled = CreateFrame(&amp;quot;Frame&amp;quot;)
PlayerRegenDisabled:RegisterEvent(&amp;quot;PLAYER_REGEN_DISABLED&amp;quot;)
PlayerRegenDisabled:SetScript(&amp;quot;OnEvent&amp;quot;, PlayerRegenDisabledFrame_OnEvent)
	
PlayerRegenDisabled = true

end


 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end


  ----------------
  --Nova  Checks--
  ----------------
  if Nova_Cooldowns == 1 then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) end
  if (Nova_AOE == nil or Nova_AOE == 0) and (Nova_Cleave == nil or Nova_Cleave == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_Cleave == 1 then	
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;) end
  
end


if modtime == nil then
	modtime = 0
end

if PQI_SoapboxRetribution_Pause_enable then
	if PQI:IsHotkeys(PQI_SoapboxRetribution_Pause_key) and GetTime() - modtime &amp;gt; 1 
	and GetCurrentKeyBoardFocus() == nil then
	modtime = GetTime()
		if PauseSwap then 
			PauseSwap = nil
		else
			PauseSwap = 1
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---7. Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PauseSwap then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---5. Boss Special---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--abilities lower in the rotation from being cast.
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
		elseif npcID == 62397 then -- Wind Lord Mel&amp;apos;jarak
        
        	if UnitExists(&amp;quot;focus&amp;quot;) then
        		local impalingDebuff = select(7, UnitDebuffID(&amp;quot;focus&amp;quot;, PQ_ImpalingSpear, &amp;quot;player&amp;quot;))
        		
        		if impalingDebuff and impalingDebuff - GetTime() &amp;lt; 7 or IsMouseButtonDown(3) then
        			if PQ_CanCast
        			and PQ_CanImpalingSpear then
        				if GetSpellInfo(PQ_ImpalingSpear) == UnitCastingInfo(&amp;quot;player&amp;quot;) then
        					return true 
        				end
        				RunMacroText(&amp;quot;/target [@focus]&amp;quot;)
        				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
        				RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
        				return true
        			end
        		end
       		end
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end
if not hasEngi then return false end
local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)
if not IsEquippedItem(Belt) then return false end
if GetItemCooldown(Belt) &amp;gt; 0 then return false end



if PQI_SoapboxRetribution_FragBelt_enable then
	if GetCurrentKeyBoardFocus() == nil 
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Potions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_Potions_enable then return false end


if GetItemCount(76095) &amp;lt; 1 then return false end
if GetItemCooldown(76095) ~= 0 then return false end
if not SpecialUnit() then return false end
if not Bloodlust or T2D(&amp;quot;target&amp;quot;) &amp;gt; 20 then return false end
UseItemByName(76095)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_SpellQueueType_enable then return false end
local v=PQI_SoapboxRetribution_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_AutoTargetNextEnemy_enable then return false end

if (UnitExists(&amp;quot;Target&amp;quot;) == nil 
or (UnitExists(&amp;quot;Target&amp;quot;) and UnitIsDead(&amp;quot;Target&amp;quot;)))
and UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local v=PQI_SoapboxRetribution_RaidBuffType_value or 1

if v == 1 then
	if not AuraInfo(1,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(20217),&amp;quot;player&amp;quot;)
	return true
	end
elseif v == 2 then
	if not AuraInfo(8,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(19740),&amp;quot;player&amp;quot;)
	return true
	end
end

if PQI_SoapboxRetribution_RaidBuffType_enable then
	-- Group setting
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Spellpower Multiplier
		if v == 1 and not AuraInfo(1,member) and IsSpellInRange(GetSpellInfo(20217),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
			CastSpellByName(GetSpellInfo(20217),member)
			return true
		end
		
		-- Crit Multiplier
		if v == 2 and not AuraInfo(8,member) and IsSpellInRange(GetSpellInfo(19740),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
			CastSpellByName(GetSpellInfo(19740),member)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Crusader -High-</Name><Default>false</Default><SpellID>53385</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

local HolyPower = HolyPower

if HolyPower &amp;gt; 4 
and UnitBuffID(&amp;quot;player&amp;quot;, 144595) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Crusader</Name><Default>false</Default><SpellID>53385</SpellID><Actions></Actions><Lua>if not MeleeRange() then return false end

local HolyPower = HolyPower

if UnitBuffID(&amp;quot;player&amp;quot;, 144595) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Selfless Healer -High-</Name><Default>false</Default><SpellID>19750</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_SelflessHealerRaidHealing_enable then return false end
if not Selfless or (Selfless and Selflesscount &amp;lt; 3) then return false end

	---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if IsSpellInRange(GetSpellInfo(19750),member) == 1 then
		if not IsLineOfSight(member, 3) then return false end
		---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
				if Memberhealth &amp;lt; 25 then
				PQR_CustomTarget = member
				return true
				end
			elseif Playerhealth &amp;lt; 25 then
			PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
			elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
				if Memberhealth &amp;lt; 25 then
				PQR_CustomTarget = member
				return true
				end
			elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
				if Memberhealth &amp;lt; 25 then
				PQR_CustomTarget = member
				return true
				end
			end
		end
	end
elseif Playerhealth &amp;lt; 25 then
PQR_CustomTarget = &amp;quot;player&amp;quot;
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Selfless Healer</Name><Default>false</Default><SpellID>19750</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_SelflessHealerRaidHealing_enable then return false end
if not Selfless or (Selfless and Selflesscount &amp;lt; 3) then return false end

	---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if IsSpellInRange(GetSpellInfo(19750),member) == 1 then
		if not IsLineOfSight(member, 3) then return false end
		---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
				if Memberhealth &amp;lt; 75 then
				PQR_CustomTarget = member
				return true
				end
			elseif Playerhealth &amp;lt; 75 then
			PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
			elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
				if Memberhealth &amp;lt; 75 then
				PQR_CustomTarget = member
				return true
				end
			elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
				if Memberhealth &amp;lt; 75 then
				PQR_CustomTarget = member
				return true
				end
			end
		end
	end
elseif Playerhealth &amp;lt; 75 then
PQR_CustomTarget = &amp;quot;player&amp;quot;
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WoG Healer</Name><Default>false</Default><SpellID>85673</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_WordofGloryRaidHealing_enable then return false end
if HolyPower &amp;lt; 3 then return false end

	---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if IsSpellInRange(GetSpellInfo(85673),member) == 1 then
		if not IsLineOfSight(member, 3) then return false end
		---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
				if Memberhealth &amp;lt; 75 then
				PQR_CustomTarget = member
				return true
				end
			elseif Playerhealth &amp;lt; 75 then
			PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
			elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
				if Memberhealth &amp;lt; 75 then
				PQR_CustomTarget = member
				return true
				end
			elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
				if Memberhealth &amp;lt; 75 then
				PQR_CustomTarget = member
				return true
				end
			end
		end
	end
elseif Playerhealth &amp;lt; 75 then
PQR_CustomTarget = &amp;quot;player&amp;quot;
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WoG Healer -High-</Name><Default>false</Default><SpellID>85673</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_WordofGloryRaidHealing_enable then return false end
if HolyPower &amp;lt; 3 then return false end

	---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if IsSpellInRange(GetSpellInfo(85673),member) == 1 then
		if not IsLineOfSight(member, 3) then return false end
		---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
				if Memberhealth &amp;lt; 25 then
				PQR_CustomTarget = member
				return true
				end
			elseif Playerhealth &amp;lt; 25 then
			PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
			elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
				if Memberhealth &amp;lt; 25 then
				PQR_CustomTarget = member
				return true
				end
			elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
				if Memberhealth &amp;lt; 25 then
				PQR_CustomTarget = member
				return true
				end
			end
		end
	end
elseif Playerhealth &amp;lt; 25 then
PQR_CustomTarget = &amp;quot;player&amp;quot;
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Boss Func</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxRetribution_BossFunctions_enable then return false end


BossTime = false
--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end

if UnitExists(&amp;quot;target&amp;quot;) then
	if UnitBuffID(&amp;quot;target&amp;quot;, 148452) and PQR_UnitFacing(&amp;quot;target&amp;quot;, &amp;quot;player&amp;quot;) then
	return true
	end
end
--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
	local	 bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		local playerCasting,_,_,_,_,PlayercastEnd = UnitCastingInfo(&amp;quot;player&amp;quot;)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		elseif npcID == 71161 or npcID == 71157 or npcID == 71156 or npcID == 71155 or npcID == 71160 or npcID == 71154 or npcID == 71152 or npcID == 71158 or npcID == 71153 then ---Klaxxi
			if UnitBuffID(&amp;quot;player&amp;quot;,141857) and not UnitBuffID(&amp;quot;player&amp;quot;,143373) then
			BossTime = true
				if PQR_SpellAvailable(143373) then
					if AvengingWrath or AWCD &amp;gt; 29 then
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					---return true
					elseif GetSpellCD(31884) &amp;lt; 1 then
					CastSpellByName(GetSpellInfo(31884))
					return true
					end
				end
			end
			if UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144275) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
				return true
				elseif not UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144276) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton3&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144274) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144181) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton4&amp;quot;)
				return true
				end
			end
					elseif npcID == 71543 then  ---Immersius
			if UnitDebuffID(&amp;quot;target&amp;quot;,143574) then
			local Swelling,_,_,SwellStacks = UnitDebuffID(&amp;quot;player&amp;quot;,143574)
				if UnitDebuffID(&amp;quot;player&amp;quot;, 143579) then
					if SwellStacks &amp;gt;= 3 then
					SpellStopCasting()
					--PetFollow()
					return true
					end
				end
			end
		elseif npcID == 71529 then --Thok: Fixate
			local Fixate = GetSpellInfo(143445)
			local Fixate2 = GetSpellInfo(146581)
			local BossCasting,_,_,_,_,BossCastEnd = UnitCastingInfo(bossCheck)
			local BossChanneling,_,_,_,_,BossChannelEnd = UnitChannelInfo(bossCheck)
			if (BossCasting and BossCasting == Fixate) 
			or (BossChanneling and BossChanneling == Fixate2) then	
				if IsPlayerSpell(54938) and not MeleeRange() then
					if HolyPower &amp;gt; 4 --and TargetValidation(&amp;quot;target&amp;quot;, 85673) 
					then
					CastSpellByName(GetSpellInfo(85673), &amp;quot;target&amp;quot;)
					return true
					end
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>terstr</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>CastSpellByName(GetSpellInfo(19750), &amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DIspell</Name><Default>false</Default><SpellID>4987</SpellID><Actions></Actions><Lua>---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local MemberCursed = UnitDebuffID(member, 143791)
		local PlayerCursed = UnitDebuffID(&amp;quot;player&amp;quot;, 143791)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if IsSpellInRange(GetSpellInfo(4987),member) == 1 then
		if not IsLineOfSight(member, 3) then return false end
		---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
				if MemberCursed then
				PQR_CustomTarget = member
				return true
				end
			elseif PlayerCursed then
			PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
			elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
				if MemberCursed then
				PQR_CustomTarget = member
				return true
				end
			elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
				if MemberCursed then
				PQR_CustomTarget = member
				return true
				end
			end
		end
	end
elseif MemberCursed then
PQR_CustomTarget = &amp;quot;player&amp;quot;
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PALADIN>