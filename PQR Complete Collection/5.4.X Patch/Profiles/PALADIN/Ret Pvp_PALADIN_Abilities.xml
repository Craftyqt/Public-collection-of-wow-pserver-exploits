<?xml version="1.0" encoding="utf-8" ?><PALADIN><Ability><Name>Crusader Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local HA = UnitBuffID(&amp;quot;player&amp;quot;, 105809)
local HP = UnitPower(&amp;quot;player&amp;quot;, 9)

if PQR_SpellAvailable(35395)
and inMelee() then
	--If Holy Avenger is up
	if HA ~= nil and HP &amp;lt;= 2 then
		_castSpell(35395, &amp;quot;target&amp;quot;)
		
	end
	
	
	--if its not up.
	if HA == nil and HP &amp;lt; 5 then
		_castSpell(35395, &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Judgment</Name><Default>false</Default><SpellID>20271</SpellID><Actions></Actions><Lua>local HA = PQR_UnitBuffID(&amp;quot;player&amp;quot;, 105809)
local jdg = PQR_SpellAvailable(20271)
local HP = UnitPower(&amp;quot;player&amp;quot;, 9)


--if Holy Avenger is up
if HA ~= nil and HP &amp;lt;= 2 and jdg == true then
return true
end

-- If its not up
if HA == nil and HP &amp;lt; 5 and jdg == true then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inquisition</Name><Default>false</Default><SpellID>84963</SpellID><Actions></Actions><Lua>local holyPower = UnitPower(&amp;quot;player&amp;quot;, 9)
local divinePurpose = UnitBuffID(&amp;quot;player&amp;quot;, 86172)
local inquisition, _, _, _, _, _, inquisitionEndTime = UnitBuffID(&amp;quot;player&amp;quot;, 84963)
	
if inquisition ~= nil then
	inquisitionEndTime = inquisitionEndTime - GetTime()
end
	
if inquisition == nil or inquisitionEndTime &amp;lt;= 5 then
	if holyPower &amp;gt;= 3 or divinePurpose ~= nil then
		CastSpellByName(GetSpellInfo(84963), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Exorcism</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>MassExoGlyph = false

for i = 1, 6 do
	_, _, _, glyphSpell, _ = GetGlyphSocketInfo(i, nil)
	if glyphSpell == 83107 then
		MassExoGlyph = true		
	end
end

if MassExoGlyph 
  and PQR_SpellAvailable(122032) then 
	CastSpellByName(GetSpellInfo(122032), &amp;quot;target&amp;quot;)
end

if not MassExoGlyph 
  and PQR_SpellAvailable(879) then 
	CastSpellByName(GetSpellInfo(879), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Freedom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoFreedom then
	if PQR_SpellAvailable(1044) then
		for i=1, #members do
 			if hasRoot(members[i].Unit) ~= nil then
				_castSpell(1044, members[i].Unit)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Templars Verdict</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;, 9) &amp;gt;= 3 then
	if PQR_SpellAvailable(20271) == false
	and PQR_SpellAvailable(35395) == false
	and ( PQR_SpellAvailable(879) == false or PQR_SpellAvailable(122032) == false ) then
		CastSpellByName(GetSpellInfo(85256), &amp;quot;target&amp;quot;)	
	end
end


if UnitPower(&amp;quot;player&amp;quot;, 9) == 5 
or UnitBuffID(&amp;quot;player&amp;quot;, 86172)
or ( UnitBuffID(&amp;quot;player&amp;quot;, 105809) and UnitPower(&amp;quot;player&amp;quot;, 9) == 3 ) then
	CastSpellByName(GetSpellInfo(85256), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash of Light</Name><Default>false</Default><SpellID>19750</SpellID><Actions></Actions><Lua>if folKey and UnitExists(&amp;quot;target&amp;quot;) then
	return true
elseif folKey and not UnitExists(&amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(19750), &amp;quot;player&amp;quot;)
	return false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Wrath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local EnemyHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)


if PQR_SpellAvailable(121783) then
	if UnitBuffID(&amp;quot;player&amp;quot;, 31884) or EnemyHP &amp;lt;= 20 then
		if UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5 then
			_castSpell(24275, &amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Word of Glory</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local hp = UnitPower(&amp;quot;player&amp;quot;, 9)
local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if myHp &amp;lt; wogHP 
and hp == 3 then
    CastSpellByName(GetSpellInfo(85673), &amp;quot;player&amp;quot;)
end


if PQR_SpellAvailable(85673) then
	for i=1, #members do
		if UnitDebuffID(members[i].Unit, 33786) then
			return false
		end

		if members[i].HP &amp;lt; wogHP 
		and PQR_IsOutOfSight(members[i].Unit) == false 
		and IsSpellInRange(&amp;quot;Flash of Light&amp;quot;, members[i].Unit) == 1 
		and not UnitIsEnemy(members[i].Unit, &amp;quot;player&amp;quot;)
		and hp == 3 then
			CastSpellByName(GetSpellInfo(85673), members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flag Return (PvP)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetBattlefieldStatus(1)==&amp;apos;active&amp;apos; or GetBattlefieldStatus(2)==&amp;apos;active&amp;apos; then
InteractUnit(&amp;apos;Horde flag&amp;apos;)
InteractUnit(&amp;apos;Alliance flag&amp;apos;)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleanse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(4987) then
	for i=1, #members do
		if ValidDispel(members[i].Unit) then
			_castSpell(4987, members[i].Unit)
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Justice</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _, talent = GetTalentRowSelectionInfo(2)
local hojid = 853 
		
if talent == 4 then 
	hojid = 105593	
	
end

if hojKey then
	if UnitExists(&amp;quot;focus&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil then
		_castSpell(hojid, &amp;quot;focus&amp;quot;)
	end
	
	if UnitExists(&amp;quot;target&amp;quot;) 
	and not UnitExists(&amp;quot;focus&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= nil then
		CastSpellByName(GetSpellInfo(hojid), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if AutoBubble
and PQR_SpellAvailable(642)
and myHealth &amp;lt; BubbleHP then
	_castSpell(642)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Turn Undead</Name><Default>false</Default><SpellID>10326</SpellID><Actions></Actions><Lua>local TU = UnitDebuffID(&amp;quot;mouseover&amp;quot;, 10326)
local HW = UnitDebuffID(&amp;quot;mouseover&amp;quot;, 2812)
local hasFocus = UnitExists(&amp;quot;mouseover&amp;quot;)
local type= UnitCreatureType(&amp;quot;mouseover&amp;quot;)

if UnitIsEnemy(&amp;quot;mouseover&amp;quot;,&amp;quot;player&amp;quot;) == nil then
return false
end

if hasFocus ~= nil then
	if type == &amp;quot;Undead&amp;quot; or type == &amp;quot;Demon&amp;quot; then
		if TU == nil and HW == nil then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Protection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if bopKey then
	if UnitExists(&amp;quot;mouseover&amp;quot;) then
		_castSpell(1022, &amp;quot;mouseover&amp;quot;)
	end
end

if AutoBoP then
	for i = 1, #members do 
		if BopBlind
		and UnitDebuffID(members[i].Unit, 2094) then
			_castSpell(1022, members[i].Unit)
		end
		
		if BoplowHP
		and members[i].HP &amp;lt; BopHP then
			_castSpell(1022, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Prism</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(114165) and UnitBuffID(&amp;quot;player&amp;quot;, 84963) ~= nil then
	_castSpell(114165, &amp;quot;target&amp;quot;)
end

if PQR_SpellAvailable(114157) and UnitBuffID(&amp;quot;player&amp;quot;, 84963) ~= nil then
	_castSpell(114157, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 0 then
	CastShapeshiftForm(1)
end

-- buff
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitBuffID(&amp;quot;player&amp;quot;, 19740) == nil 
	and UnitBuffID(&amp;quot;player&amp;quot;, 116956) == nil then
			CastSpellByName(GetSpellInfo(19740), &amp;quot;player&amp;quot;)
	elseif UnitBuffID(&amp;quot;player&amp;quot;, 116956) then
	  	 if UnitBuffID(&amp;quot;player&amp;quot;, 20217) == nil 
	  	 and UnitBuffID(&amp;quot;player&amp;quot;, 1126) == nil	
	  	 and UnitBuffID(&amp;quot;player&amp;quot;, 90363) == nil 
	  	 and UnitBuffID(&amp;quot;player&amp;quot;, 115921) == nil then
			CastSpellByName(GetSpellInfo(20217), &amp;quot;player&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Init--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_PaladinPvP_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PaladinPvP_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end


			
shHP = PQI_CpoworksRetPvPConfigSettings_FolSelflessHealerHP_value
wogHP = PQI_CpoworksRetPvPConfigSettings_WordofGloryHP_value
DivineProtHP = PQI_CpoworksRetPvPConfigSettings_DivineProtection_value
BubbleHP = PQI_CpoworksRetPvPConfigSettings_Bubble_value
HealthstoneHP = PQI_CpoworksRetPvPConfigSettings_Healthstone_value
BopHP = PQI_CpoworksSacandBopSettings_LowHPBoP_value


AutoFreedom			= PQI_CpoworksRetPvPConfigSettings_AutoFreedom_enable
AutoEmancipate		= PQI_CpoworksRetPvPConfigSettings_AutoEmancipate_enable
AutoInterupt		= PQI_CpoworksRetPvPConfigSettings_AutoInterupt_enable
AutoDivineProt		= PQI_CpoworksRetPvPConfigSettings_DivineProtection_enable
AutoBubble			= PQI_CpoworksRetPvPConfigSettings_Bubble_enable
AutoHealthstone		= PQI_CpoworksRetPvPConfigSettings_Healthstone_enable
AutoSac				= PQI_CpoworksSacandBopSettings_AutoSac_enable
AutoBoP				= PQI_CpoworksSacandBopSettings_AutoBoP_enable
AutoSacName			= PQI_CpoworksSacandBopSettings_SacTarget_enable


SacName = PQI_CpoworksSacandBopSettings_SacTarget_value
SacTrap = PQI_CpoworksSacandBopSettings_Trap_enable
SacSheep = PQI_CpoworksSacandBopSettings_Sheep_enable
SacFear = PQI_CpoworksSacandBopSettings_Fear_enable
SacHoJ = PQI_CpoworksSacandBopSettings_HoJ_enable
BopBlind = PQI_CpoworksSacandBopSettings_Blind_enable
BoplowHP = PQI_CpoworksSacandBopSettings_LowHPBoP_enable

GroupInfo() 


--Keybinds
folKey		= PQI:IsHotkeys(PQI_CpoworksRetPvPConfigSettings_FlashofLight_key)  
pauseKey	= PQI:IsHotkeys(PQI_CpoworksRetPvPConfigSettings_PauseRotation_key) 
bopKey		= PQI:IsHotkeys(PQI_CpoworksRetPvPConfigSettings_BopKey_key)

if not PQI_CpoworksRetPvPConfigSettings_BurstKey_enable then 
	burstKey				= IsMouseButtonDown(3)
else 
 	burstKey				= PQI:IsHotkeys(PQI_CpoworksRetPvPConfigSettings_BurstKey_key)
end
if not PQI_CpoworksRetPvPConfigSettings_HoJKey_enable then 
	hojKey				= IsMouseButtonDown(4)
else 
 	hojKey				= PQI:IsHotkeys(PQI_CpoworksRetPvPConfigSettings_HoJKey_key)
end
if not PQI_CpoworksRetPvPConfigSettings_BlindKey_enable then 
	blindKey			= IsMouseButtonDown(5)
else 
 	blindKey			= PQI:IsHotkeys(PQI_CpoworksRetPvPConfigSettings_BlindKey_key)
end


if not PQI_CpoworksRetPvPConfigSettings_FlashofLight_enable then 
	folKey = false
end
if not PQI_CpoworksRetPvPConfigSettings_PauseRotation_enable then 
	pauseKey = false 
end
if not PQI_CpoworksRetPvPConfigSettings_BopKey_enable then 
	bopKey = false
end


exoID = 879
if GlyphCheck(122028) then exoID = 122032 end

--HOTKEYS --
if pauseKey 
or IsMounted() 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or not UnitExists(&amp;quot;target&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey then

	-- Gloves
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 
			UseInventoryItem(10)
	end
	
	--Trinkets
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
			UseInventoryItem(13)
	end
	
	--Holy Avenger
	CastSpellByName(tostring(GetSpellInfo(105809)))
	
	--Wings
	CastSpellByName(tostring(GetSpellInfo(31884)))
	
	--goak
	CastSpellByName(tostring(GetSpellInfo(86698)))
		
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hand of Sac</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoSac then
	if PQR_SpellAvailable(6940)
	and not AutoSacName then
		for i=1, #members do		
			if SacTrap then
				if SacTraps(members[i].Unit) then
					_castSpell(6940, members[i].Unit)
				end
			end
			if SacSheep then
				if SacSheeps(members[i].Unit) then
					_castSpell(6940, members[i].Unit)
				end
			end
			if SacFear then
				if SacFears(members[i].Unit) then
					_castSpell(6940, members[i].Unit)
				end
			end
			if SacHoj then
				if SacHojs(members[i].Unit) then
					_castSpell(6940, members[i].Unit)
				end
			end	
		end
	end
	
	if PQR_SpellAvailable(6940)
	and AutoSacName 
	and UnitExists(SacName) then		
		if SacTrap then
			if SacTraps(SacName) then
				_castSpell(6940, SacName)
			end
		end
		if SacSheep then
			if SacSheeps(SacName) then
				_castSpell(6940, SacName)
			end
		end
		if SacFear then
			if SacFears(SacName) then
				_castSpell(6940, SacName)
			end
		end
		if SacHoj then
			if SacHojs(SacName) then
				_castSpell(6940, SacName)
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Emancipate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)	
	
if PQR_SpellAvailable(121783)
and AutoEmancipate then
	if hasRoot(&amp;quot;player&amp;quot;) ~= nil
	and myMana &amp;gt; 20 then
		_castSpell(121783)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash of Light Selfless Healer</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local SH, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 114250 )

if PQR_SpellAvailable(19750) then	
	if members[1].HP &amp;lt; shHP 
	and SH
	and Stack == 3 then
		_castSpell(19750, members[1].Unit)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blinding Light</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if blindKey then
	if PQR_SpellAvailable(115750) then
		_castSpell(115750)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Interupts</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 331, 77472, 73920, 8004, 8936, 50464, 5185, 740, 2061, 2060, 32546, 64843, 47540,  19750, 82326, 7328, 54428, 82327, 115175, 124682, 116694, 116694, 51514, 33786, 2637, 5782, 111771, 5232, 710, 605, 9484, 32375, 20066, 118, 61305, 28272, 61721, 61780, 28271, 2641, 1513, 982 }

if PQR_SpellAvailable(96231) then
	for y=1, #cTar do 
		if UnitExists(cTar[y])
		and UnitIsEnemy(cTar[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(57994), cTar[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, cTar[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(cTar[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.3 then
						_castSpell(96231, cTar[y])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PALADIN>