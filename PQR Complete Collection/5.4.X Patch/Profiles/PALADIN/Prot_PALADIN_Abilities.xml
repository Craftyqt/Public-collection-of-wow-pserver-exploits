<?xml version="1.0" encoding="utf-8" ?><PALADIN><Ability><Name>- Initialize -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Keybinds
	PauseKey		 	=IsLeftShiftKeyDown()	
	AoEKey				=IsLeftControlKeyDown()
	Teir6Key			=IsLeftAltKeyDown()
	--					=IsRightShiftKeyDown()
	--					=IsRightControlKeyDown()
	--					=IsRightAltKeyDown()
	--					=IsMouseButtonDown(3)  --When you push down the scroll button on mouse(usually)
	FreedomKey			=IsMouseButtonDown(4)  --MouseButton4 depends on mouse
	SalvKey				=IsMouseButtonDown(5)  --MouseButton5 depends on mouse
	
	--Possable variables
	-- AoEKey
	-- TauntKey
	-- FreedomKey
	-- SalvKey
	-- PauseKey
	-- Teir6Key
	-- SacredShieldKey


if PQR_RotationStarted == true then
	PQR_RotationStarted = false
	
	-- Initalize vars
	single = nil
	aoe = nil
	switch = nil
	hasSeal = nil
	

	
	
	-- Delays (spellID, itemID, delay)
	--                   DS   DP   DA     SS    HOJ  HOJSB    FOJ    REP    TE     EMAN    SOL   HOS    HOF   HOP   HOS   HOPU     BL      LH      ES      HP     EF      HOR
	local delayList = { 642, 498, 31821, 20925, 853, 23302, 105593, 20066, 10326, 121783, 85499, 6940, 1044, 1022, 1038, 114039, 115750, 114158, 114157, 114165, 114163, 62124 }
	for i=1,#delayList do PQR_AddToSpellDelayList(delayList[i], 0, 1) end

	PQR_AddToSpellDelayList(79634, 58146, 1) --Golem&amp;apos;s Strength (spellID, itemID, delay)
	PQR_AddToSpellDelayList(105706, 76095, 1) -- Potion of Mogu Power
	
	-- Functions
	HaveGlyph = nil
	function HaveGlyph(id)
		for i=1,GetNumGlyphSockets() do
			if select(4, GetGlyphSocketInfo(i)) == id then return true end
		end
		return false
	end

function HaveBuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == &amp;quot;number&amp;quot; then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local buff = select(7,UnitBuff(UnitID,spell,rank,Filter)) 
      if buff and ( buff == 0 or buff - GetTime() &amp;gt; TimeLeft ) then return true end
    end
  end
end

function HaveDebuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == &amp;quot;number&amp;quot; then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local debuff = select(7,UnitDebuff(UnitID,spell,rank,Filter)) 
      if debuff and ( debuff == 0 or debuff - GetTime() &amp;gt; TimeLeft ) then return true end
    end
  end
end

function CalculateHP(t)
  incomingheals = UnitGetIncomingHeals(t) or 0
  return 100 * ( UnitHealth(t) + incomingheals ) / UnitHealthMax(t)
end

function CanHeal(t)
  if UnitInRange(t) and UnitCanCooperate(&amp;quot;player&amp;quot;,t) and not UnitIsEnemy(&amp;quot;player&amp;quot;,t) 
  and not UnitIsCharmed(t) and not UnitIsDeadOrGhost(t) and not PQR_IsOutOfSight(t) 
  and UnitExists(t)
  then return true end 
end

function GroupInfo()
  members, group = { { Unit = &amp;quot;player&amp;quot;, HP = CalculateHP(&amp;quot;player&amp;quot;) } }, { low = 0, tanks = { } } 
  group.type = IsInRaid() and &amp;quot;raid&amp;quot; or &amp;quot;party&amp;quot; 
  group.number = GetNumGroupMembers()
  for i=1,group.number do if CanHeal(group.type..i) then 
    local unit, hp = group.type..i, CalculateHP(group.type..i) 
    table.insert( members,{ Unit = unit, HP = hp } ) 
    if hp &amp;lt;= 94 then group.low = group.low + 1 end 
    if UnitGroupRolesAssigned(unit) == &amp;quot;TANK&amp;quot; then table.insert(group.tanks,unit) end 
  end end 
  if group.type == &amp;quot;raid&amp;quot; and #members &amp;gt; 1 then table.remove(members,1) end 
  table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
  local customtarget = CanHeal(&amp;quot;target&amp;quot;) and &amp;quot;target&amp;quot; -- or CanHeal(&amp;quot;mouseover&amp;quot;) and GetMouseFocus() ~= WorldFrame and &amp;quot;mouseover&amp;quot; 
  if customtarget then table.sort(members, function(x) return UnitIsUnit(customtarget,x.Unit) end) end 
end

function CastClick()
  if IsMouseButtonDown(1) and MainMenuBar:IsShown() then 
    local mousefocus = GetMouseFocus() 
    if mousefocus and mousefocus.feedback_action 
    then SpellCancelQueuedSpell() PQR_DelayRotation(1) end
  end
end

GroupInfo() 

	
	function ValidDispel(t)
  		local HasValidDispel = false
  		local i = 1
  		local debuff = UnitDebuff(t, i)
  		while debuff do
  			local debuffType = select(5, UnitDebuff(t, i))
  			if debuffType == &amp;quot;Poison&amp;quot; 
  			or debuffType == &amp;quot;Disease&amp;quot; then
  				HasValidDispel = true
  			end
  			i = i + 1
  			debuff = UnitDebuff(t, i)
  		end
  		return HasValidDispel
 	 end

	function InRange(id, t)
	    if IsSpellInRange(GetSpellInfo(id), t) == 1 then
	        return true
	    end  
	    return false
	end
	
	-- Event
	PQ_EventHandlerFrame, events = CreateFrame(&amp;quot;Frame&amp;quot;), {}; 

	function events:COMBAT_LOG_EVENT(...) 
	    if (select(2, ...) == &amp;quot;SPELL_DAMAGE&amp;quot;) and bit.band(select(6, ...), COMBATLOG_OBJECT_AFFILIATION_MASK) == COMBATLOG_OBJECT_AFFILIATION_MINE and bit.band(select(10, ...), COMBATLOG_OBJECT_AFFILIATION_MASK) == COMBATLOG_OBJECT_AFFILIATION_OUTSIDER then 
	        if select(12, ...) == 20271 then 
	            PQ_LastJudGUID = select(8, ...) 
	        end 
	    end 
	end 
	
	PQ_EventHandlerFrame:SetScript(&amp;quot;OnEvent&amp;quot;, function(self, event, ...) events[event](self, ...); end); 
	
	for k, v in pairs(events) do 
	    PQ_EventHandlerFrame:RegisterEvent(k); 
	end  
		
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Do Not Attack -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local inCombat = UnitAffectingCombat(&amp;quot;player&amp;quot;)
if inCombat == nil then 
	inCombat = UnitAffectingCombat(&amp;quot;pet&amp;quot;)
end

if inCombat == nil or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) or IsMounted() or (PauseKey and not GetCurrentKeyBoardFocus()) then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Boss Special -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (single == true or aoe == false or aoe == true or switch == true) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (single == true or aoe == false or aoe == true or switch == true) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (single == true or aoe == false or aoe == true or switch == true) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Retribution&amp;quot; then
	-- Fading Light
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) and IsRightShiftKeyDown() == nil then
		if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 1.3 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		end
	end
	
	-- Hour of Twilight
	local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
	if HoT == GetSpellInfo(103327) and IsRightShiftKeyDown() == nil then
		if timer/1000 - GetTime() &amp;lt; 1.3 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		end	
	end
end

-- Avoid Fragmentation on Madness
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

-- Spine of Deathwing
if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitAura(&amp;quot;player&amp;quot;, &amp;quot;Parachute&amp;quot;) then
		RunMacroText(&amp;quot;/cancelaura Parachute&amp;quot;)
	end
end

-- Darkmoon Faerie Cannon
if select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) and select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) - GetTime() &amp;lt; 1.07 then 
	CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) 
end

-- Pvp Flag
local flag = { &amp;quot;Alliance Flag&amp;quot;, &amp;quot;Horde Flag&amp;quot;, &amp;quot;Netherstorm Flag&amp;quot; }
for i=1,#flag do InteractUnit(flag[i]) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Utility -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>GroupInfo() 


if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) == nil and not IsMounted() and UnitInVehicle(&amp;quot;player&amp;quot;) == nil then

local playerSeal = GetShapeshiftForm()
local PlayerHP = (100 * (UnitHealth(&amp;quot;player&amp;quot;) + UnitGetIncomingHeals(&amp;quot;player&amp;quot;)) / UnitHealthMax(&amp;quot;player&amp;quot;))
local SelflessHealer = select(4, UnitAura(&amp;quot;player&amp;quot;, &amp;quot;Selfless Healer&amp;quot;))

--- Seal Switching ---

-- Buff seal if none
if ((single == nil and aoe == nil) or switch == nil) and playerSeal == 0 then CastShapeshiftForm(3) end

if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	if PlayerHP &amp;lt;= 50 and playerSeal ~= 3 then
		CastShapeshiftForm(3)	
	elseif switch == false and playerSeal ~= 3  then
		CastShapeshiftForm(3)
	elseif switch == true and playerSeal ~= 2 and PlayerHP &amp;gt;= 60 then
		CastShapeshiftForm(2)
	end
end
----------------------------------------------------------------------------------

--- Buffs ---
if UnitBuffID(&amp;quot;player&amp;quot;, 19740) == nil and UnitBuffID(&amp;quot;player&amp;quot;, 116956) == nil then
	CastSpellByName(GetSpellInfo(19740), &amp;quot;player&amp;quot;)
elseif UnitBuffID(&amp;quot;player&amp;quot;, 116956) then
   	if UnitBuffID(&amp;quot;player&amp;quot;, 20217) == nil and UnitBuffID(&amp;quot;player&amp;quot;, 1126) == nil
   	and UnitBuffID(&amp;quot;player&amp;quot;, 90363) == nil and UnitBuffID(&amp;quot;player&amp;quot;, 115921) == nil then
		CastSpellByName(GetSpellInfo(20217), &amp;quot;player&amp;quot;)
	end
end

if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	if UnitBuffID(&amp;quot;player&amp;quot;, 25780) == nil then
		CastSpellByName(GetSpellInfo(25780))
	end
end
----------------------------------------------------------------------------------

--- Healing ---
if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	-- Ardent Defender
	if PlayerHP &amp;lt;= 15 and PQR_SpellAvailable(31850) then
		CastSpellByName(GetSpellInfo(31850))
	-- Lay on Hands
	elseif PlayerHP &amp;lt;= 20 and PQR_SpellAvailable(633) and not PQR_SpellAvailable(31850) then
		CastSpellByName(GetSpellInfo(633), &amp;quot;player&amp;quot;)
	-- Healthstone
	elseif PlayerHP &amp;lt;= 35 and not PQR_SpellAvailable(633) and GetItemCount(5512,false,false) &amp;gt; 0 and select(3,GetItemCooldown(5512)) == 1 then 
		UseItemByName(5512)
	-- Word of Glory 
	elseif PlayerHP &amp;lt;= 55 and (UnitPower(&amp;quot;player&amp;quot;, 9) &amp;gt;= 3 or UnitBuffID(&amp;quot;player&amp;quot;, 90174)) then
		CastSpellByName(GetSpellInfo(85673), &amp;quot;player&amp;quot;)
	end
end


----------------------------------------------------------------------------------

-- Hand of Freedom ---
local debuffList = { 116281, 105289, 110317, 122254, 118552 }
for i=1,#debuffList do 
	if UnitDebuffID(&amp;quot;player&amp;quot;,debuffList[i]) then
		if PQR_SpellAvailable(1044) then
			CastSpellByName(GetSpellInfo(1044), &amp;quot;player&amp;quot;)
		elseif not PQR_SpellAvailable(1044) then
			CastSpellByName(GetSpellInfo(121783), &amp;quot;player&amp;quot;)
		end
	end
end

if FreedomKey and not GetCurrentKeyBoardFocus() then
	if PQR_SpellAvailable(1044) then
		CastSpellByName(GetSpellInfo(1044), &amp;quot;player&amp;quot;)
	end
end

----------------------------------------------------------------------------------

-- Hand of Salv ---
if SalvKey and not GetCurrentKeyBoardFocus() then
	if PQR_SpellAvailable(1038) then
		CastSpellByName(GetSpellInfo(1038), &amp;quot;player&amp;quot;)
	end
end
----------------------------------------------------------------------------------

--- Sacred Shield ---
if not IsInInstance() or IsInInstance() and select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot; and select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot; then
	if UnitBuffID(&amp;quot;player&amp;quot;, 20925) == nil or UnitBuffID(&amp;quot;player&amp;quot;, 20925) and select(7, UnitBuffID( &amp;quot;player&amp;quot;, 20925)) - GetTime() &amp;lt;= 2 then
		CastSpellByName(GetSpellInfo(20925), &amp;quot;player&amp;quot;)
	elseif SacredShieldKey and not GetCurrentKeyBoardFocus() then
		CastSpellByName(GetSpellInfo(20925), &amp;quot;player&amp;quot;)
	end
end
----------------------------------------------------------------------------------

-- Taunt ---
if TauntKey and not GetCurrentKeyBoardFocus() then
	if PQR_SpellAvailable(62124) then
		CastSpellByName(GetSpellInfo(62124), &amp;quot;target&amp;quot;)
	end
end

----------------------------------------------------------------------------------

--- Holy Prism/Execution Sentence/Light&amp;apos;s Hammer ---
if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if Teir6Key and not GetCurrentKeyBoardFocus() then
	    if IsPlayerSpell(114165) and PQR_SpellAvailable(114165) then         
	        if single == false then
	            CastSpellByName(GetSpellInfo(114165), &amp;quot;target&amp;quot;)
	        elseif single == true or aoe == false or aoe == true then
	            CastSpellByName(GetSpellInfo(114165), &amp;quot;player&amp;quot;)
	        end
	    elseif IsPlayerSpell(114157) and PQR_SpellAvailable(114157) then
	            CastSpellByName(GetSpellInfo(114157), &amp;quot;target&amp;quot;)
	    elseif IsPlayerSpell(114158) and PQR_SpellAvailable(114158) then
	            CastSpellByName(GetSpellInfo(114158))
	        if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	            return true    
	    end
	end
end
----------------------------------------------------------------------------------

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Latency Adjuster -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Combat Mode -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>AoEKey = AoEKey

if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then

	if switch == nil then switch = false PQR_WriteToChat(&amp;quot;Single Mode: \124cFFE61515Truth/Cs/(1-3 Targets)&amp;quot;) end
	
	if modtime == nil then modtime = 0 end
	
	if not IsMounted() then
		if AoEKey and GetTime() - modtime &amp;gt; 1 then
			modtime = GetTime()
			if switch then 
				switch = false
				PQR_WriteToChat(&amp;quot;Single Mode: \124cFFE61515Truth/Cs/(1-3 Targets)&amp;quot;)
			else
				switch = true
				PQR_WriteToChat(&amp;quot;Aoe Mode: \124cFFE61515Sotr/Hotr/(4+ Targets)&amp;quot;)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cs/Hotr</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5 then
	if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
		if UnitDebuffID(&amp;quot;target&amp;quot;, 115798) == nil or select(7, UnitDebuffID( &amp;quot;target&amp;quot;, 115798)) - GetTime() &amp;lt; 2.5 then
			CastSpellByName(GetSpellInfo(53595), &amp;quot;target&amp;quot;)	
		elseif switch == false and UnitDebuffID(&amp;quot;target&amp;quot;, 115798) then
			CastSpellByName(GetSpellInfo(35395), &amp;quot;target&amp;quot;)
		elseif switch == true then
			CastSpellByName(GetSpellInfo(53595), &amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Execution Sentence</Name><Default>false</Default><SpellID>114157</SpellID><Actions></Actions><Lua>if not IsPlayerSpell(114157) then return false end

local goakSTART, goakDURATION = GetSpellCooldown(86698)
local awSTART, awDURATION = GetSpellCooldown(31884)
local haSTART, haDURATION = GetSpellCooldown(105809)
local bossExists = nil
local bossTarget = nil
	
for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i
	if UnitExists(bossCheck) then
		bossExists = true
		if UnitIsUnit(bossCheck, &amp;quot;target&amp;quot;) then
			bossTarget = bossCheck
		end
	end
end
	
if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	if PQR_SpellAvailable(35395) 
	or PQR_SpellAvailable(20271) 
	or PQR_SpellAvailable(31935)
	or (UnitBuffID(&amp;quot;player&amp;quot;, 85416) and UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5)
	or (switch == true and PQR_SpellAvailable(26573)) then return false end
	
	if switch == false then
		if bossExists == nil then
			return true
		elseif bossTarget ~= nil then
			return true
		end
	elseif switch == true then
		if PQR_SpellAvailable(26573) then 
			return false
		elseif not PQR_SpellAvailable(26573) then
			if bossExists == nil then
				return true
			elseif bossTarget ~= nil then
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Wrath</Name><Default>false</Default><SpellID>24275</SpellID><Actions></Actions><Lua>if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	
	if (PQR_SpellAvailable(26573) and switch == true)
	or PQR_SpellAvailable(35395) 
	or PQR_SpellAvailable(20271) 
	or PQR_SpellAvailable(31935) 
	or (IsPlayerSpell(114157) and PQR_SpellAvailable(114157)) 
	or (IsPlayerSpell(114165) and PQR_SpellAvailable(114165))
	or (IsPlayerSpell(114158) and PQR_SpellAvailable(114158)) 
	or (UnitBuffID(&amp;quot;player&amp;quot;, 85416) and UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5) then return false end

	if (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 20 then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Prism</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not IsPlayerSpell(114165) then return false end

if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	if PQR_SpellAvailable(35395) 
	or PQR_SpellAvailable(20271) 
	or PQR_SpellAvailable(31935)
	or (UnitBuffID(&amp;quot;player&amp;quot;, 85416) and UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5)
	or (switch == true and PQR_SpellAvailable(26573)) then return false end
end

if single == false or switch == false then
	CastSpellByName(GetSpellInfo(114165), &amp;quot;target&amp;quot;)
elseif (single == true or aoe == false or aoe == true) or switch == true then
	CastSpellByName(GetSpellInfo(114165), &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Judgment</Name><Default>false</Default><SpellID>20271</SpellID><Actions></Actions><Lua>if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	if PQR_SpellAvailable(35395) then return false end	
end

if PQR_SpellAvailable(20271) then	
	CastSpellByName(GetSpellInfo(20271), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Light&amp;apos;s Hammer</Name><Default>false</Default><SpellID>114158</SpellID><Actions></Actions><Lua>if not IsPlayerSpell(114158) then return false end
	
if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Protection&amp;quot; then
	if PQR_SpellAvailable(35395) 
	or PQR_SpellAvailable(20271) 
	or PQR_SpellAvailable(31935)
	or (UnitBuffID(&amp;quot;player&amp;quot;, 85416) and UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5) 
	or (switch == true and PQR_SpellAvailable(26573)) then return false end
end

if IsPlayerSpell(114158) and PQR_SpellAvailable(114158) and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil then
	CastSpellByName(GetSpellInfo(114158))
if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	return true	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sacred Shield</Name><Default>false</Default><SpellID>20925</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 20925) == nil 
or (UnitBuffID(&amp;quot;player&amp;quot;, 20925) ~= nil and select(7, UnitBuffID( &amp;quot;player&amp;quot;, 20925)) - GetTime() &amp;lt;= 2) then
		CastSpellByName(GetSpellInfo(20925), &amp;quot;player&amp;quot;)
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Consecration</Name><Default>false</Default><SpellID>26573</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(35395) or PQR_SpellAvailable(20271) then return false end

if switch == false then
	if PQR_SpellAvailable(31935) 
	or (IsPlayerSpell(114157) and PQR_SpellAvailable(114157)) 
	or (IsPlayerSpell(114165) and PQR_SpellAvailable(114165))
	or (IsPlayerSpell(114158) and PQR_SpellAvailable(114158)) 
	or (UnitBuffID(&amp;quot;player&amp;quot;, 85416) and UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5) then return false end
end

if switch == false and (UnitBuffID(&amp;quot;player&amp;quot;, 20925) == nil or (UnitBuffID(&amp;quot;player&amp;quot;, 20925) and select(7, UnitBuffID( &amp;quot;player&amp;quot;, 20925)) - GetTime() &amp;lt;= 2)) then
	CastSpellByName(GetSpellInfo(20925), &amp;quot;player&amp;quot;)
else	
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Wrath</Name><Default>false</Default><SpellID>119072</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(26573) 
or PQR_SpellAvailable(35395) 
or PQR_SpellAvailable(20271) 
or PQR_SpellAvailable(31935) 
or (IsPlayerSpell(114157) and PQR_SpellAvailable(114157)) 
or (IsPlayerSpell(114165) and PQR_SpellAvailable(114165))
or (IsPlayerSpell(114158) and PQR_SpellAvailable(114158)) 
or (UnitBuffID(&amp;quot;player&amp;quot;, 85416) and UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5) then return false end

if UnitBuffID(&amp;quot;player&amp;quot;, 20925) == nil or UnitBuffID(&amp;quot;player&amp;quot;, 20925) and select(7, UnitBuffID( &amp;quot;player&amp;quot;, 20925)) - GetTime() &amp;lt;= 2 then
	CastSpellByName(GetSpellInfo(20925), &amp;quot;player&amp;quot;)
else	
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Avenger&amp;apos;s Shield</Name><Default>false</Default><SpellID>31935</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(35395) or PQR_SpellAvailable(20271) then return false end

if switch == false then 
	if (PQR_SpellAvailable(31935) and UnitBuffID(&amp;quot;player&amp;quot;, 85416) == nil) or (UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5 and UnitBuffID(&amp;quot;player&amp;quot;, 85416)) then
		return true
	end
elseif switch == true then
	if PQR_SpellAvailable(31935) and UnitBuffID(&amp;quot;player&amp;quot;, 85416) == nil and PQR_SpellAvailable(26573) then
		return false
	end
	
	if PQR_SpellAvailable(31935) and UnitBuffID(&amp;quot;player&amp;quot;, 85416) == nil and not PQR_SpellAvailable(26573) then
		return true
	elseif UnitPower(&amp;quot;player&amp;quot;, 9) &amp;lt; 5 and UnitBuffID(&amp;quot;player&amp;quot;, 85416) and PQR_SpellAvailable(26573) then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shield of the Righteous</Name><Default>false</Default><SpellID>53600</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;, 9) ~= 5 then
	if PQR_SpellAvailable(35395) or PQR_SpellAvailable(20271) or UnitBuffID(&amp;quot;player&amp;quot;, 85416) then
		return false
	end
end

if UnitPower(&amp;quot;player&amp;quot;, 9) &amp;gt;= 3 or UnitBuffID(&amp;quot;player&amp;quot;, 90174) then
	if UnitPower(&amp;quot;player&amp;quot;, 9) == 5 or UnitBuffID(&amp;quot;player&amp;quot;, 114673) == nil then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleanse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>GroupInfo() 

if PQR_SpellAvailable(4987) then
	for i=1, #members do
		if ValidDispel(members[i].Unit) then
			PQR_CustomTarget = members[i].Unit
			return true
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PALADIN>