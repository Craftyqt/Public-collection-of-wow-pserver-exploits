<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>* Time to Die *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;Target&amp;quot;) then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
	    guid = UnitGUID(&amp;quot;target&amp;quot;)
	    _firstLife = UnitHealth(&amp;quot;target&amp;quot;)
	    _firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
	    _firstTime = GetTime()
	end             
	    
	_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
	_currentTime = GetTime()
	timeDiff = _currentTime - _firstTime
	hpDiff = _firstLife - _currentLife
	    
	if hpDiff &amp;gt; 0 then
	    fullTime = timeDiff*_firstLifeMax/hpDiff
	    pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
	    calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
	    if calcTime &amp;lt; 1 then
	        calcTime = 1
	    end
	    ttd = calcTime
	end
	            
	if hpDiff &amp;lt;= 0 then
	    guid = UnitGUID(&amp;quot;target&amp;quot;)
	    _firstLife = UnitHealth(&amp;quot;target&amp;quot;)
	    _firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
	    _firstTime = GetTime()
	end
	            
	-- Dummy
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
	    ttd = 99
	end
		
	-- If a new add is below a certain HP you dont want to cast Dots on it: Need to change to reflect your raids DPS            
	if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 1500000 then
	    ttd = 1
	end
	            
	if not ttd then
	    ttd = 1
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.02 Recklessness</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--recklessness,if=!talent.blodbath.enabled&amp;((cooldown.colossus_smash.remains&amp;lt;2|debuff.colossus_smash.remains&amp;gt;=5)&amp;(target.time_to_die&amp;gt;(192*buff.cooldown_reduction.value)|target.health.pct&amp;lt;20))
--|buff.bloodbath.up&amp;(target.time_to_die&amp;gt;(192*buff.cooldown_reduction.value)|target.health.pct&amp;lt;20)|target.time_to_die&amp;lt;=12

local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local TARGETHP = (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;))
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if CS_DEBUFF == nil then 
	CS_TIMER = 0
end

if USE_OFF_CDS == true then

	if PQR_SpellAvailable(1719) == true and IsPlayerSpell(1719) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
	
		if (IsPlayerSpell(12292) == false and ((CS_COOLDOWN &amp;lt; 2 or CS_TIMER - GetTime() &amp;gt;= 5) and (ttd &amp;gt; (192 * CD_REDUCTION_VALUE) or TARGETHP &amp;lt; 20)))
			or (BLOODBATH ~= nil and (ttd &amp;gt; (192 * CD_REDUCTION_VALUE) or TARGETHP &amp;lt; 20))
			or ttd &amp;lt;= 12 then
				CastSpellByName(GetSpellInfo(1719))
				return true
		end
	
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.01 Blood fury</Name><Default>false</Default><SpellID>20572</SpellID><Actions></Actions><Lua>local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)
	
if USE_OFF_CDS == true then
	if IsPlayerSpell(20572) then
		if PQR_SpellAvailable(20572) and inRange == 1 then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.01 Ranged Attacks</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(100) and useCharge == true then
	if IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 0 and IsSpellInRange(GetSpellInfo(100), &amp;quot;target&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(100), &amp;quot;target&amp;quot;)
	end
elseif PQR_SpellAvailable(100) == false or IsSpellInRange(GetSpellInfo(100), &amp;quot;target&amp;quot;) == 0 or useCharge == false then
	if IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 0 then
		if PQR_SpellAvailable(57755) and IsSpellInRange(GetSpellInfo(57755), &amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(57755), &amp;quot;target&amp;quot;)
		elseif IsPlayerSpell(107570) then
			if PQR_SpellAvailable(107570) then
				if IsSpellInRange(GetSpellInfo(107570), &amp;quot;target&amp;quot;) == 1 then
					CastSpellByName(GetSpellInfo(107570), &amp;quot;target&amp;quot;)
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Utility *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PLAYERHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local HEALTHSTONECD = select(2,GetItemCooldown(5512))

if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) == nil and not IsMounted() and UnitInVehicle(&amp;quot;player&amp;quot;) == nil then	
	
	--Battle Stance
	if GetShapeshiftForm() == 0 then
		CastShapeshiftForm(1)
	end
	
	--Battle Shout
	if PQR_SpellAvailable(6673) and UnitBuffID(&amp;quot;player&amp;quot;,6673) == nil and PQR_IsMoving(2) then
		CastSpellByName(GetSpellInfo(6673))
	end
	
	--Healthstone
	if GetItemCount(5512) &amp;gt; 0 then
	
		if PQI_MavminsFURYFUNCTIONS_Healthstone_enable == true then
			if PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_Healthstone_value
				and HEALTHSTONECD == 0 then
				UseItemByName(5512, &amp;quot;player&amp;quot;)
			end
		end
	
	end
	
	--Die by the sword
	if PQI_MavminsFURYFUNCTIONS_AutoDieByTheSword_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(118038) == true 
			and PQR_SpellAvailable(118038) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoDieByTheSword_value then
				CastSpellByName(GetSpellInfo(118038))
				return true
		end
	
	end
	
	--Shield Wall
	if PQI_MavminsFURYFUNCTIONS_AutoShieldWall_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(871) == true 
			and PQR_SpellAvailable(871) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoShieldWall_value then
				CastSpellByName(GetSpellInfo(871))
				return true
		end
	
	end
		
	--Rallying Cry
	if PQI_MavminsFURYFUNCTIONS_AutoRallyingCry_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(97462) == true 
			and PQR_SpellAvailable(97462) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoRallyingCry_value then
				CastSpellByName(GetSpellInfo(97462))
				return true
		end
	
	end
	
		--Impending Victory
	if PQI_MavminsFURYFUNCTIONS_EnableSelfHealing_enable == true
		and PQI_MavminsFURYFUNCTIONS_AutoVictoryRush_enable == true then
		
		--victory rush
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(34428) == true 
			and PQR_SpellAvailable(34428) == true
			and IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 1
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoVictoryRush_value then
				CastSpellByName(GetSpellInfo(34428),&amp;quot;target&amp;quot;)
				return true
		end
		
		
		--impending victory
			if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(103840) == true 
			and PQR_SpellAvailable(103840) == true
			and IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 1
			and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoVictoryRush_value then
				CastSpellByName(GetSpellInfo(103840),&amp;quot;target&amp;quot;)
				return true
		end

	end
	
	--Enraged Regeneration
	if PQI_MavminsFURYFUNCTIONS_EnableSelfHealing_enable == true
		and PQI_MavminsFURYFUNCTIONS_AutoEnragedRegeneration_enable == true then
	
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(55694) == true 
			and PQR_SpellAvailable(55694) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoEnragedRegeneration_value then
				CastSpellByName(GetSpellInfo(55694))
				return true
		end
	
	end
	
	--Demoralizing Banner
	if PQI_MavminsFURYFUNCTIONS_AutoDemoralizingBanner_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(114203) == true 
			and PQR_SpellAvailable(114203) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoDemoralizingBanner_value then
				CastSpellByName(GetSpellInfo(114203),nil)
				if SpellIsTargeting() then
					CameraOrSelectOrMoveStart()
					CameraOrSelectOrMoveStop()
				end
		end
	
	end
	
	if PQI_MavminsFURYHOTKEYS_DemoralizingBanner_enable == true 
		and PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_DemoralizingBanner_key)
		and not GetCurrentKeyBoardFocus() then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(114203) == true 
			and PQR_SpellAvailable(114203) == true then
				CastSpellByName(GetSpellInfo(114203),nil)
				if SpellIsTargeting() then
					CameraOrSelectOrMoveStart()
					CameraOrSelectOrMoveStop()
				end
		end
	
	end
	
	--vigilance mouseover
	if PQI_MavminsFURYHOTKEYS_VigilanceMouseover_enable == true 
	and PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_VigilanceMouseover_key)
	and not GetCurrentKeyBoardFocus() then
	
		if IsPlayerSpell(114030) == true
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and PQR_SpellAvailable(114030) == true
			and IsSpellInRange(GetSpellInfo(114030),&amp;quot;mouseover&amp;quot;) == 1 then
			
				CastSpellByName(GetSpellInfo(114030),&amp;quot;mouseover&amp;quot;)
				return true
		end
end
	
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Boss *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local objects = { &amp;quot;Alliance Flag&amp;quot;, &amp;quot;Horde Flag&amp;quot;, &amp;quot;Netherstorm Flag&amp;quot;, &amp;quot;Fizzy Bubble&amp;quot; }
for i=1,#objects do InteractUnit(objects[i]) end

if UnitBuffID(&amp;quot;player&amp;quot;,102116) and select(7, UnitBuffID(&amp;quot;player&amp;quot;, 102116)) - GetTime() &amp;lt;= 1.07 then 
	CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
	if HoT == GetSpellInfo(103327) and IsLeftShiftKeyDown() == nil then
		if timer/1000 - GetTime() &amp;lt; 1.3 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		end	
	end
	
	local debuffs = {116808,106791,105925,116161}
	for i=1,#debuffs do 
		if UnitDebuffID(&amp;quot;player&amp;quot;,debuffs[i]) and select(7, UnitDebuffID(&amp;quot;player&amp;quot;,debuffs[i])) - GetTime() &amp;lt;= 1.5 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		end
	end
	
	if UnitBuffID(&amp;quot;player&amp;quot;,116809) then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
	
	if UnitDebuffID(&amp;quot;player&amp;quot;,111662) then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
	
	if UnitDebuffID(&amp;quot;player&amp;quot;, 122055) == nil then
		InteractUnit(&amp;quot;Amber Prison&amp;quot;)
	end
	
	if UnitAura(&amp;quot;player&amp;quot;, &amp;quot;Parachute&amp;quot;) then
		RunMacroText(&amp;quot;/cancelaura Parachute&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Initialise PQI *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface Settings

if PQI_INITIALISED == nil then

	local keybinds = {
	                name    = &amp;quot;FURY HOTKEYS&amp;quot;,
	                author  = &amp;quot;Mavmins&amp;quot;,
	                hotkeys = {
	                
	           	{	name	= &amp;quot;Increase Targets&amp;quot;,
					enable	= true,
					hotkeys	= {&amp;apos;ls&amp;apos;},
				},
	           	{	name	= &amp;quot;Decrease Targets&amp;quot;,
					enable	= true,
					hotkeys	= {&amp;apos;lc&amp;apos;},
				},
	           	{	name	= &amp;quot;Shout Mode Toggle&amp;quot;,
					enable	= false,
					hotkeys	= {&amp;apos;ls&amp;apos;},
				},
				{	name	= &amp;quot;Pause Rotation&amp;quot;,
					enable	= false,
					hotkeys	= {&amp;apos;ls&amp;apos;},
				},
				{	name	= &amp;quot;Pause Key Hold&amp;quot;,
					enable	= true,
					hotkeys	= {&amp;apos;rs&amp;apos;},
				},
				{	name	= &amp;quot;Offensive CD Toggle&amp;quot;,
					enable	= true,
					hotkeys	= {&amp;apos;rs&amp;apos;},
				},
				{	name	= &amp;quot;Shattering Throw&amp;quot;,
					enable	= false,
					hotkeys	= {&amp;apos;la&amp;apos;},
				},
				{	name	= &amp;quot;Demoralizing Banner&amp;quot;,
					enable	= false,
					hotkeys	= {&amp;apos;rs&amp;apos;},
				},
				{	name	= &amp;quot;Heroic Leap&amp;quot;,
					enable	= true,
					hotkeys	= {&amp;apos;la&amp;apos;},
				},
				{	name	= &amp;quot;Vigilance Mouseover&amp;quot;,
					enable	= true,
					hotkeys	= {&amp;apos;la&amp;apos;},
				},
			},
		}
	
	local functions = {
	                name    = &amp;quot;FURY FUNCTIONS&amp;quot;,
	                author  = &amp;quot;Mavmins&amp;quot;,
	                abilities = {
				{ 	name	= &amp;quot;Chat Notifications&amp;quot;,
					tooltip	= &amp;quot;Show Notifications in Chat Window&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Mouse Click Override&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 3,
						step	= 1,
						tooltip	= &amp;quot;Set mouse button for force cast on spell bar.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Enable Self Healing&amp;quot;,
					tooltip	= &amp;quot;Enables profile using Enraged Regeneration or Impending Victory&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Auto Enraged Regeneration&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 60,
						step	= 5,
						tooltip	= &amp;quot;Set Enraged Regeneration HP threshold.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Auto Victory Rush&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 60,
						step	= 5,
						tooltip	= &amp;quot;Set Impending Victory HP threshold.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Healthstone&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 60,
						step	= 5,
						tooltip	= &amp;quot;Set Healthstone HP threshold.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Auto Die By The Sword&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 60,
						step	= 5,
						tooltip	= &amp;quot;Set Healthstone HP threshold.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Auto Rallying Cry&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 60,
						step	= 5,
						tooltip	= &amp;quot;Set Healthstone HP threshold.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Auto Shield Wall&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 60,
						step	= 5,
						tooltip	= &amp;quot;Set Healthstone HP threshold.&amp;quot;,
					},
				},
				{ 	name	= &amp;quot;Auto Shattering Throw&amp;quot;,
					tooltip	= &amp;quot;Automatic Shattering Throw usage under Heroism.&amp;quot;,
					enable	= false,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Single Target Bladestorm&amp;quot;,
					tooltip	= &amp;quot;Use Bladestorm in single target rotation&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Interrupts&amp;quot;,
					tooltip	= &amp;quot;Auto interrupt spells using Pummel and Disrupting Shout.&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Racials&amp;quot;,
					tooltip	= &amp;quot;Automatic Racial usage under Heroism.&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Potion&amp;quot;,
					tooltip	= &amp;quot;Automatic pot usage under Heroism.&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Engineer CDs&amp;quot;,
					tooltip	= &amp;quot;Automatic use synapse springs.&amp;quot;,
					enable	= false,
				},
				{ 	name	= &amp;quot;Auto Trinkets&amp;quot;,
					tooltip	= &amp;quot;Automatic trinket use.&amp;quot;,
					enable	= false,
				},
				{ 	name	= &amp;quot;Auto Disable CDs OOC&amp;quot;,
					tooltip	= &amp;quot;Disable USE_CDS out of combat.&amp;quot;,
					enable	= false,
				},
	                },
	        }
	        
		MAVMINS_FURY = PQI:AddRotation(keybinds)
		MAVMINS_FURY = PQI:AddRotation(functions)
		
		PQI_INITIALISED = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Initialise Profile *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false

	-- Load required data files
	if PQR_LoadLua ~= nil then
	--	if PQR_LoadLua(&amp;quot;PQR_MavminsElemental2.lua&amp;quot;) == false then
	--		PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_MavminsElemental2_DATA.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
	--		PQR_StopRotation()
	--		return true
	--	end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
	
	single = nil
	aoe = nil
	
	-- Toggle for special abilities
	useCDS = true
	usePot = false
	useGloves = true
	useSkull = true
	useCharge = false
		
	PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025
	
	local delayList = {64382,103840,676,1715,102060,12323,5246}
	for i=1,#delayList do PQR_AddToSpellDelayList(delayList[i], 0, 1) end
	PQR_AddToSpellDelayList(105706, 76095, 1) 
	PQR_AddToSpellDelayList(114203, 0, 2) 
	PQR_AddToSpellDelayList(114192, 0, 2) 
	
end


if FuryInformation == nil then
	FuryInformation = true
	print(&amp;quot;|cffFF0099--------------------------------------------------------------------&amp;quot;)
	print(&amp;quot;|cffFF0099*-*-*-*-*-*Mavmins Fury Warrior Profile v3.0*-*-*-*-*-*-*&amp;quot;)
	print(&amp;quot;|cffFF0099--------------------------------------------------------------------&amp;quot;)

	
	-- Initialize Variables
	if TARGET_MODE == nil then
		TARGET_MODE = &amp;quot;ONE&amp;quot;
	end
	
	if SHOUT_MODE == nil then
		SHOUT_MODE = &amp;quot;BATTLE&amp;quot;
	end
	
	--initialize CDS
	if USE_OFF_CDS == nil then
		USE_OFF_CDS = false
	end
	
	if PAUSE_PROFILE == nil then
		PAUSE_PROFILE = false
	end

end

--initialize PQI text but im sure theres a better way to do this !!
if TARGET_MODE == &amp;quot;ONE&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET - BATTLE SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;ONE&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET - BATTLE SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;ONE&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET - COMMANDING SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;ONE&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;SINGLE TARGET - COMMANDING SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

--initialize PQI text but im sure theres a better way to do this !!
if TARGET_MODE == &amp;quot;TWO&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;TWO TARGETS - BATTLE SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;TWO&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;TWO TARGETS - BATTLE SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;TWO&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;TWO TARGETS - COMMANDING SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;TWO&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;TWO TARGETS - COMMANDING SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

--initialize PQI text but im sure theres a better way to do this !!
if TARGET_MODE == &amp;quot;THREE&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;THREE TARGETS - BATTLE SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;THREE&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;THREE TARGETS - BATTLE SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;THREE&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;THREE TARGETS - COMMANDING SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;THREE&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;THREE TARGETS - COMMANDING SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;FOUR+ TARGETS - BATTLE SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;FOUR&amp;quot; and SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;FOUR+ TARGETS - BATTLE SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;FOUR&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == false then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;FOUR+ TARGETS - COMMANDING SHOUT - NOT USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end
if TARGET_MODE == &amp;quot;FOUR&amp;quot; and SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and USE_OFF_CDS == true then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;FOUR+ TARGETS - COMMANDING SHOUT - USING CDS&amp;quot;, nil, &amp;quot;00FFFF&amp;quot;)
end

------------

ShoutStart, ShoutDuration = GetSpellCooldown(102060)
SHOUT_CD = ShoutStart + ShoutDuration - GetTime()</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Increase Target Toggle *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_IncreaseTargets_enable == true then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_IncreaseTargets_key) and GetTime() - modtime &amp;gt; 0.3 and not GetCurrentKeyBoardFocus() then
	
		modtime = GetTime()
		
		if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	    	TARGET_MODE = &amp;quot;TWO&amp;quot;
	    	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Two Targets&amp;quot;)
	    		return true
	    	else
	    		return true
	    	end
	    end
	    
	    if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	    	TARGET_MODE = &amp;quot;THREE&amp;quot;
	     	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Three Targets&amp;quot;)
	    		return true
	    	else
	    		return true
	    	end
	    end
	    
	    if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	    	TARGET_MODE = &amp;quot;FOUR&amp;quot;
	     	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Four+ Targets&amp;quot;)
	    		return true
	    	else
	    		return true
	    	end
	    end

	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Decrease Target Toggle *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_DecreaseTargets_enable == true then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_DecreaseTargets_key) and GetTime() - modtime &amp;gt; 0.3 and not GetCurrentKeyBoardFocus() then
	
		modtime = GetTime()
		
		if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	    	TARGET_MODE = &amp;quot;THREE&amp;quot;
	    	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Three Targets&amp;quot;)
	    		return true
	    	else
	    		return true
	    	end
	    end
	    
	    if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	    	TARGET_MODE = &amp;quot;TWO&amp;quot;
	    	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Two Targets&amp;quot;)
	    		return true
	    	else
	    		return true
	    	end
	    end
	    
	    if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	    	TARGET_MODE = &amp;quot;ONE&amp;quot;
	    	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;One Target&amp;quot;)
	    		return true
	    	else
	    		return true
	    	end
	    end

	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Mouse Click Overide *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Change &amp;quot;3&amp;quot; to whatever mouse button you&amp;apos;d like.

if PQI_MavminsFURYFUNCTIONS_MouseClickOverride_enable == true then

	if IsMouseButtonDown(PQI_MavminsFURYFUNCTIONS_MouseClickOverride_value) then
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		return true
	end

end

if PQI_MavminsFURYFUNCTIONS_MouseClickOverride_enable == false then

	if IsMouseButtonDown(3) then
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		return true
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Offensive CD Toggle *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_OffensiveCDToggle_enable == true then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_OffensiveCDToggle_key) and GetTime() - modtime &amp;gt; 0.3 and not GetCurrentKeyBoardFocus() then
		modtime = GetTime()
		if USE_OFF_CDS == true then
	    	USE_OFF_CDS = false
	    	if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;OFFENSIVE CDS: \124cFFE61515Disabled&amp;quot;)
	    	end
	    else
	        USE_OFF_CDS = true
	        if PQI_MavminsFURYFUNCTIONS_ChatNotifications_enable then
	  			PQR_WriteToChat(&amp;quot;OFFENSIVE CDS: \124cFF15E615Enabled&amp;quot;)
	  		end
	    end
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Pause Toggle *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_PauseRotation_enable then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_PauseRotation_key) and GetTime() - modtime &amp;gt; 0.3 and not GetCurrentKeyBoardFocus() then
		modtime = GetTime()
		if PAUSE_PROFILE then
	    	PAUSE_PROFILE = false
	    	if PQI_MavminsARMSFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Rotation Pause: \124cFFE61515Disabled&amp;quot;)
	    	end
	    else
	        PAUSE_PROFILE = true
	        if PQI_MavminsARMSFUNCTIONS_ChatNotifications_enable then
	  			PQR_WriteToChat(&amp;quot;Rotation Pause: \124cFF15E615Enabled&amp;quot;)
	  		end
	    end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>**PROFILE PAUSED**</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
	COMBAT_CHECK = 1
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil then

	if PQI_MavminsFURYFUNCTIONS_AutoDisableCDsOOC_enable == true 
		and USE_OFF_CDS ~= false
		and COMBAT_CHECK == 1 then
			USE_OFF_CDS = false
		COMBAT_CHECK = 0
	end
end	

-- Don&amp;apos;t automatically start if we&amp;apos;re mounted.
if IsMounted() then return true end

-- Don&amp;apos;t automatically start if we&amp;apos;re dead or a ghost.
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then return true end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil then return true end

if PQI_MavminsFURYHOTKEYS_PauseKeyHold_enable == true 
	and PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_PauseKeyHold_key)
	and not GetCurrentKeyBoardFocus()
	or PAUSE_PROFILE == true then
	
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Shout Mode Toggle *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_ShoutModeToggle_enable == true then

	if modtime == nil then
		modtime = 0
	end
	
	if  PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_ShoutModeToggle_key) and GetTime() - modtime &amp;gt; 0.3 and not GetCurrentKeyBoardFocus() then
		modtime = GetTime()
		if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; then
	    	SHOUT_MODE = &amp;quot;COMMANDING&amp;quot;
	    	if PQI_MavminsARMSFUNCTIONS_ChatNotifications_enable then
	    		PQR_WriteToChat(&amp;quot;Using COMMANDING shout&amp;quot;)
	    	end
	    else
	        SHOUT_MODE = &amp;quot;BATTLE&amp;quot;
	        if PQI_MavminsARMSFUNCTIONS_ChatNotifications_enable then
	  			PQR_WriteToChat(&amp;quot;using BATTLE shout&amp;quot;)
	  		end
	    end
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Auto Trinkets *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYFUNCTIONS_AutoTrinkets_enable == true 
	and USE_OFF_CDS == true then
	
	if GetInventoryItemCooldown(14)==0 then
		UseInventoryItem(14)
	end
	if GetInventoryItemCooldown(13)==0 then
		UseInventoryItem(13)
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.01 Shattering Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_ShatteringThrow_enable == true 
	and PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_ShatteringThrow_key)
	and not GetCurrentKeyBoardFocus() then
	
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(64382) == true 
			and PQR_SpellAvailable(64382) == true
			and IsSpellInRange(GetSpellInfo(64382),&amp;quot;target&amp;quot;) == 1
			and not PQR_IsMoving(0.3) then
			
				CastSpellByName(GetSpellInfo(64382),&amp;quot;target&amp;quot;)
				return true
		end
end

if PQI_MavminsFURYFUNCTIONS_AutoShatteringThrow_enable == true then
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(64382) == true 
			and PQR_SpellAvailable(64382) == true
			and IsSpellInRange(GetSpellInfo(64382),&amp;quot;target&amp;quot;) == 1
			and not PQR_IsMoving(0.3) then
			
				if UnitBuffID(&amp;quot;player&amp;quot;,32182) ~= nil --Heroism
					or UnitBuffID(&amp;quot;player&amp;quot;,2825) ~= nil --Bloodlust
					or UnitBuffID(&amp;quot;player&amp;quot;,90355) ~= nil --Ancient Hysteria
					or UnitBuffID(&amp;quot;player&amp;quot;,80353) ~= nil then --Timewarp
					
						CastSpellByName(GetSpellInfo(64382),&amp;quot;target&amp;quot;)
						return true
				end
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Interrupts *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYFUNCTIONS_AutoInterrupts_enable == true then
	
	if select(9, UnitCastingInfo(&amp;quot;target&amp;quot;)) == false
	or select(8, UnitChannelInfo(&amp;quot;target&amp;quot;)) == false then
	
		if (IsPlayerSpell(102060) == true and OnCooldown(102060) == false)
		and IsSpellInRange(tostring(GetSpellInfo(6552)), &amp;quot;target&amp;quot;) == 1 then	 	
		    CastSpellByName(GetSpellInfo(102060))
			return true
						    
			elseif (IsPlayerSpell(6552) == true and OnCooldown(6552) == false)
			and IsSpellInRange(tostring(GetSpellInfo(6552)), &amp;quot;target&amp;quot;) == 1
			and ((IsPlayerSpell(102060) == true and SHOUT_CD &amp;lt;= 39 and SHOUT_CD &amp;gt; 0)
				or IsPlayerSpell(102060) == false) then	
				 CastSpellByName(GetSpellInfo(6552),&amp;quot;target&amp;quot;)
				 return true
					 
		end	
	end
end

if select(9, UnitCastingInfo(&amp;quot;target&amp;quot;)) == false 
	or select(8, UnitChannelInfo(&amp;quot;target&amp;quot;)) == false then
		if PQR_SpellAvailable(23920) == true
		 	and IsPlayerSpell(23920) == true
		 	and ((PQR_SpellAvailable(102060) == false and PQR_SpellAvailable(6552) == false)
		 	or IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 0) then
			    CastSpellByName(GetSpellInfo(23920))
			    return true
		 end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* Function GCD check *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-----------------Nerder Spell CD Check---------------

if SpellFunctionLoaded == nil then 

	local level = UnitLevel(&amp;quot;player&amp;quot;)
	
	if level == 90 then
		conversionfactor = 425
	elseif level &amp;gt;= 85 and level &amp;lt; 90 then
		conversionfactor = 128.125
	elseif level &amp;gt;= 80 and level &amp;lt; 85 then
		conversionfactor = 32.79
	elseif level &amp;gt;= 70 and level &amp;lt; 80 then
		conversionfactor = 15.77
	elseif level &amp;lt;= 70 then
		conversionfactor = 10
	end
	
	spellhaste = GetCombatRating(CR_HASTE_SPELL)
	GCD = 1.5 * ( ( 1 + spellhaste / ( conversionfactor * 100 ) ) ^ -1 )
	
	OnCooldown = nil
	function OnCooldown(spell)
		if IsPlayerSpell(spell) == true then
	 		local start, duration = GetSpellCooldown(spell)
			local oncd = ( start &amp;gt; 0 and duration &amp;gt; 0 )
			local cdremains = start + duration - GetTime()
	  
	 		if oncd and cdremains &amp;gt; GCD + 0.01 then
	   			return true --spell is on CD
	  		else
	  			return false --spell is ready within next GCD
	 		end
		end
	end
	
	
	
	SpellFunctionLoaded = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>**SIM 2 TARGET**</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;buff.enrage.up
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;TWO&amp;quot; and IsPlayerSpell(12292) == true then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if ENRAGED ~= nil then
			CastSpellByName(GetSpellInfo(12292))
			return true
		end
	end
end

--cleave,if=(rage&amp;gt;=60&amp;debuff.colossus_smash.up)|rage&amp;gt;90
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; and PQR_SpellAvailable(845) == true then
	if (RAGE &amp;gt;= 60 and CS_DEBUFF ~= nil)
		or RAGE &amp;gt; 90 then
			CastSpellByName(GetSpellInfo(845),&amp;quot;target&amp;quot;)
			return true
	end
end

--heroic_leap,if=buff.enrage.up

--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if PQR_SpellAvailable(118000) == true and inRange == 1 then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if CS_DEBUFF == nil and BLOODBATH ~= nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end

--bladestorm,if=enabled&amp;buff.enrage.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if ENRAGED ~= nil
			and (BLOODBATH ~= nil or IsPlayerSpell(12292) == false then)
				CastSpellByName(GetSpellInfo(46924))
				return true
		end
	end
end

--shockwave,if=enabled
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end

--colossus_smash
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end

--bloodthirst,cycle_targets=1,if=dot.deep_wounds.remains&amp;lt;5
local GT = GetTime()
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)
local DW_TIME = select(7, UnitDeBuffID(&amp;quot;target&amp;quot;, 115767,&amp;quot;player&amp;quot;)) - GT()

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS ~= nil and DW_TIME &amp;lt; 5 then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--bloodthirst,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if PQR_SpellAvailable(23881) == true
	and IsPlayerSpell(23881) == true then
		if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
			return false
		else
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--storm_bolt,if=enabled
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if IsPlayerSpell(107570) == true 
	and PQR_SpellAvailable(107570) == true
	and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
		return true
	end
end

--wait,sec=cooldown.bloodthirst.remains,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)&amp;cooldown.bloodthirst.remains&amp;lt;=1&amp;cooldown.bloodthirst.remains
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
		return false
	else
		if (BT_COOLDOWN &amp;lt;= 1) and BT_COOLDOWN &amp;gt; 0) then
			return true
		end
	end
end

--execute,if=debuff.colossus_smash.up
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(5308) == true and  IsPlayerSpell(5308) == true and RAGE &amp;gt;= 30) then
		if TARGETHP &amp;lt; 20 then
			if CS_DEBUFF ~= nil then
				CastSpellByName(GetSpellInfo(5308),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end

--raging_blow,if=buff.meat_cleaver.up|target.health.pct&amp;lt;20
local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local RB_STACKS = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 131116))
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if PQR_SpellAvailable(85288) and RAGE &amp;gt;= 10 then
		if (RB_STACKS &amp;gt;= 1 and MEATCLEAVER ~= nil and TARGETHP &amp;lt; 20) then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--whirlwind,if=!buff.meat_cleaver.up
local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(1680) and RAGE &amp;gt;= 20 and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if MEATCLEAVER == nil then
			CastSpellByName(GetSpellInfo(1680),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--battle_shout
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; then
			CastSpellByName(GetSpellInfo(6673))
			return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; then
			CastSpellByName(GetSpellInfo(469))
			return true
	end
end

--heroic_throw
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	CastSpellByName(GetSpellInfo(57755),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>**SIM 1 TARGET**</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;(cooldown.colossus_smash.remains&amp;lt;2|debuff.colossus_smash.remains&amp;gt;=5|target.time_to_die&amp;lt;=20)
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local GT = GetTime()
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)

if (TARGET_MODE == &amp;quot;ONE&amp;quot; and IsPlayerSpell(12292) == true) then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if (CS_COOLDOWN &amp;lt; 2 and CS_COOLDOWN &amp;gt; 0)
			or CS_TIMER - GT &amp;gt;= 5
			or ttd &amp;lt;= 20 then
				CastSpellByName(GetSpellInfo(12292))
				return true
		end
	end
end


--heroic_strike,if=((debuff.colossus_smash.up&amp;rage&amp;gt;=40)&amp;target.health.pct&amp;gt;=20)|rage&amp;gt;=100&amp;buff.enrage.up
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(78) == true and RAGE &amp;gt;= 30 then
		if ((CS_DEBUFF ~= nil and RAGE &amp;gt;= 40) and TARGETHP &amp;gt;= 20) 
			or (RAGE &amp;gt;= 100 and ENRAGED ~= nil) then
				CastSpellByName(GetSpellInfo(78),&amp;quot;target&amp;quot;)
				return true
		end
	end
end


--storm_bolt,if=enabled&amp;buff.cooldown_reduction.up&amp;debuff.colossus_smash.up
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105491 -- heroic warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104495 -- heroic
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105242 -- warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 102298 -- normal
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104744 -- flex
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104993) then -- lfr
		CD_REDUCTION = true
end

if (GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105491 -- heroic warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104495 -- heroic
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105242 -- warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 102298 -- normal
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104744 -- flex
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104993) then -- lfr
		CD_REDUCTION = true
end

if CD_REDUCTION == true then
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if IsPlayerSpell(107570) == true 
		and PQR_SpellAvailable(107570) == true
		and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
			if CS_DEBUFF ~= nil then
				CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end

--raging_blow,if=buff.raging_blow.stack=2&amp;debuff.colossus_smash.up&amp;target.health.pct&amp;gt;=20
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local RAGINGBLOW = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 131116))

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(85288) and IsPlayerSpell(85288) == true then
		if RAGINGBLOW == 2 and CS_DEBUFF ~= nil and TARGETHP &amp;gt;= 20 and RAGE &amp;gt;= 10 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end


--storm_bolt,if=enabled&amp;buff.cooldown_reduction.down&amp;debuff.colossus_smash.up
if CD_REDUCTION ~= true then
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if IsPlayerSpell(107570) == true 
		and PQR_SpellAvailable(107570) == true
		and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
			if CS_DEBUFF ~= nil then
				CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end

--bloodthirst,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(23881) == true
	and IsPlayerSpell(23881) == true then
		if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
			return false
		else
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--wild_strike,if=buff.bloodsurge.react&amp;target.health.pct&amp;gt;=20&amp;cooldown.bloodthirst.remains&amp;lt;=1
local BLOODSURGE = UnitBuffID(&amp;quot;player&amp;quot;, 46916)
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (PQR_SpellAvailable(100130) and IsPlayerSpell(100130) and RAGE &amp;gt;= 30) then
		if (BLOODSURGE ~= nil and TARGETHP &amp;gt;= 20 and (BT_COOLDOWN &amp;lt;= 1 and BT_COOLDOWN &amp;gt; 0)) then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--wait,sec=cooldown.bloodthirst.remains,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)&amp;cooldown.bloodthirst.remains&amp;lt;=1&amp;cooldown.bloodthirst.remains
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
		return false
	elseif (BT_COOLDOWN &amp;lt;= 1 and BT_COOLDOWN &amp;gt; 0) then
		return true
	end
end

--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if (PQR_SpellAvailable(118000) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if (CS_DEBUFF == nil and BLOODBATH ~= nil) then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end

--colossus_smash
if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end

--storm_bolt,if=enabled&amp;buff.cooldown_reduction.down
if CD_REDUCTION ~= true then
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if IsPlayerSpell(107570) == true 
		and PQR_SpellAvailable(107570) == true
		and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--execute,if=debuff.colossus_smash.up|rage&amp;gt;70|target.time_to_die&amp;lt;12
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (PQR_SpellAvailable(5308) == true and  IsPlayerSpell(5308) == true and RAGE &amp;gt;= 30) then
		if TARGETHP &amp;lt; 20 then
			if (CS_DEBUFF ~= nil or RAGE &amp;gt;= 70 or ttd &amp;lt; 12) then
				CastSpellByName(GetSpellInfo(5308),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end

--raging_blow,if=target.health.pct&amp;lt;20|buff.raging_blow.stack=2|(debuff.colossus_smash.up|(cooldown.bloodthirst.remains&amp;gt;=1&amp;buff.raging_blow.remains&amp;lt;=3))
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local GT = GetTime()
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local RAGINGBLOW = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 131116))
local RB_TIME = select(7, UnitBuffID(&amp;quot;player&amp;quot;, 131116)) - GT()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(85288) and IsPlayerSpell(85288) == true then
		if (TARGETHP &amp;lt; 20 or RAGINGBLOW == 2)
			or (CS_DEBUFF ~= nil or (BT_COOLDOWN &amp;gt;= 1 and RB_TIME &amp;lt;= 3)) then
				CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
				return true
		end
	end
end

--wild_strike,if=buff.bloodsurge.up
local BLOODSURGE = UnitBuffID(&amp;quot;player&amp;quot;, 46916)
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(100130) and RAGE &amp;gt;= 30 then
		if BLOODSURGE ~= nil then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end


--bladestorm,if=enabled&amp;cooldown.bloodthirst.remains&amp;gt;2
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if BT_COOLDOWN &amp;gt; 2 then
			CastSpellByName(GetSpellInfo(46924))
			return true
		end
	end
end

--raging_blow,if=cooldown.colossus_smash.remains&amp;gt;=3
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(85288) and IsPlayerSpell(85288) == true then
		if CS_COOLDOWN &amp;gt;= 3 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--shockwave,if=enabled
if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end

--heroic_throw,if=debuff.colossus_smash.down&amp;rage&amp;lt;60
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(57755) and IsPlayerSpell(57755) == true then
		if (CS_DEBUFF == nil and RAGE &amp;lt; 60) then
			CastSpellByName(GetSpellInfo(57755),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--battle_shout,if=rage&amp;lt;70&amp;!debuff.colossus_smash.up
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if (RAGE &amp;lt; 70 and CS_DEBUFF == nil) then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; then
		CastSpellByName(GetSpellInfo(6673))
		return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; then
		CastSpellByName(GetSpellInfo(469))
		return true
	end
end

--wild_strike,if=debuff.colossus_smash.up&amp;target.health.pct&amp;gt;=20
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(100130) and RAGE &amp;gt;= 30 then
		if (CS_DEBUFF ~= nil and TARGETHP &amp;gt;= 20) then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--battle_shout,if=rage&amp;lt;70
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if RAGE &amp;lt; 70 then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; then
		CastSpellByName(GetSpellInfo(6673))
		return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; then
		CastSpellByName(GetSpellInfo(469))
		return true
	end
end

--shattering_throw,if=cooldown.colossus_smash.remains&amp;gt;5

--wild_strike,if=cooldown.colossus_smash.remains&amp;gt;=2&amp;rage&amp;gt;=70&amp;target.health.pct&amp;gt;=20
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(100130) and RAGE &amp;gt;= 30 then
		if (CS_COOLDOWN &amp;gt;= 2 and RAGE &amp;gt;= 70 and TARGETHP &amp;gt;= 20) then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--impending_victory,if=enabled&amp;target.health.pct&amp;gt;=20&amp;cooldown.colossus_smash.remains&amp;gt;=2
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (IsPlayerSpell(103840) and PQR_SpellAvailable(103840) and RAGE &amp;gt;= 10) then
		if (TARGETHP &amp;gt;= 20 and CS_COOLDOWN &amp;gt;= 2) then
			CastSpellByName(GetSpellInfo(103840),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>**SIM 3 TARGET**</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;buff.enrage.up
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;THREE&amp;quot; and IsPlayerSpell(12292) == true then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if ENRAGED ~= nil then
			CastSpellByName(GetSpellInfo(12292))
			return true
		end
	end
end

--cleave,if=(rage&amp;gt;=60&amp;debuff.colossus_smash.up)|rage&amp;gt;90
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; and PQR_SpellAvailable(845) == true then
	if (RAGE &amp;gt;= 60 and CS_DEBUFF ~= nil)
		or RAGE &amp;gt; 90 then
			CastSpellByName(GetSpellInfo(845),&amp;quot;target&amp;quot;)
			return true
	end
end

--heroic_leap,if=buff.enrage.up

--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if PQR_SpellAvailable(118000) == true and inRange == 1 then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if CS_DEBUFF == nil and BLOODBATH ~= nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end

--shockwave,if=enabled
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end

--bladestorm,if=enabled&amp;buff.enrage.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if ENRAGED ~= nil
			and (BLOODBATH ~= nil or IsPlayerSpell(12292) == false then)
				CastSpellByName(GetSpellInfo(46924))
				return true
		end
	end
end

--colossus_smash
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end

--storm_bolt,if=enabled
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if IsPlayerSpell(107570) == true 
	and PQR_SpellAvailable(107570) == true
	and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
		return true
	end
end

--raging_blow,if=buff.meat_cleaver.stack=2
local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
local MC_STACKS = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85739))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if PQR_SpellAvailable(85288) and RAGE &amp;gt;= 10 then
		if (MEATCLEAVER ~= nil MC_STACKS == 2) then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--bloodthirst,cycle_targets=1,if=!dot.deep_wounds.ticking
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS == nil then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--whirlwind
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (PQR_SpellAvailable(1680) and RAGE &amp;gt;= 20 and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(1680),&amp;quot;target&amp;quot;)
		return true
	end
end

--raging_blow
local RB_STACKS = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 131116))

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if PQR_SpellAvailable(85288) and RAGE &amp;gt;= 10 then
		if RB_STACKS &amp;gt;= 1 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end


--battle_shout,if=rage&amp;lt;70
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; and RAGE &amp;lt; 70 then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; then
			CastSpellByName(GetSpellInfo(6673))
			return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; then
			CastSpellByName(GetSpellInfo(469))
			return true
	end
end

--heroic_throw
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	CastSpellByName(GetSpellInfo(57755),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>**SIM 4 / AOE**</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;buff.enrage.up
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and IsPlayerSpell(12292) == true then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if ENRAGED ~= nil then
			CastSpellByName(GetSpellInfo(12292))
			return true
		end
	end
end

--cleave,if=rage&amp;gt;110
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and PQR_SpellAvailable(845) == true then
	if RAGE &amp;gt; 110 then
		CastSpellByName(GetSpellInfo(845),&amp;quot;target&amp;quot;)
		return true
	end
end

--heroic_leap,if=buff.enrage.up

--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if PQR_SpellAvailable(118000) == true and inRange == 1 then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if CS_DEBUFF == nil and BLOODBATH ~= nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end


--bladestorm,if=enabled&amp;buff.enrage.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if ENRAGED ~= nil
			and (BLOODBATH ~= nil or IsPlayerSpell(12292) == false then)
				CastSpellByName(GetSpellInfo(46924))
				return true
		end
	end
end

--shockwave,if=enabled
if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end

--bloodthirst,cycle_targets=1,if=!dot.deep_wounds.ticking&amp;buff.enrage.down
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS == nil and ENRAGED == nil then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--raging_blow,if=buff.meat_cleaver.stack=2
local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
local MC_STACKS = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85739))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if PQR_SpellAvailable(85288) and RAGE &amp;gt;= 10 then
		if (MEATCLEAVER ~= nil MC_STACKS == 3) then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--whirlwind
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (PQR_SpellAvailable(1680) and RAGE &amp;gt;= 20 and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(1680),&amp;quot;target&amp;quot;)
		return true
	end
end

--bloodthirst,cycle_targets=1,if=!dot.deep_wounds.ticking
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS == nil then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end

--colossus_smash
if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end

--battle_shout,if=rage&amp;lt;70
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and RAGE &amp;lt; 70 then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; then
			CastSpellByName(GetSpellInfo(6673))
			return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; then
			CastSpellByName(GetSpellInfo(469))
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>**SIM 0 TARGET**</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--mogu_power_potion,if=(target.health.pct&amp;lt;20&amp;buff.recklessness.up)|target.time_to_die&amp;lt;=25
local bossExists = nil
local bossTarget = nil
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)
local TARGETHP = (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;))


for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i
	if UnitExists(bossCheck) then
		bossExists = true
		if UnitIsUnit(bossCheck, &amp;quot;target&amp;quot;) then
			bossTarget = bossCheck
		end
	end
end

if PQI_MavminsFURYFUNCTIONS_AutoPotion_enable == true then
	if bossExists ~= nil and bossTarget ~= nil then
		if ((TARGETHP &amp;lt; 20 and RECKLESSNESS ~= nil) or ttd &amp;lt;= 25) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
			if GetItemCount(76095,false,false) &amp;gt; 0 and select(3,GetItemCooldown(76095)) == 1 then 
				UseItemByName(76095)
			end
		end
	end
end

--recklessness,if=!talent.blodbath.enabled&amp;((cooldown.colossus_smash.remains&amp;lt;2|debuff.colossus_smash.remains&amp;gt;=5)&amp;(target.time_to_die&amp;gt;(192*buff.cooldown_reduction.value)|target.health.pct&amp;lt;20))
--|buff.bloodbath.up&amp;(target.time_to_die&amp;gt;(192*buff.cooldown_reduction.value)|target.health.pct&amp;lt;20)|target.time_to_die&amp;lt;=12

local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local TARGETHP = (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;))
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if IsPlayerSpell(12292) == false and ((CS_COOLDOWN &amp;lt; 2 or TIMER - GetTime() &amp;gt;= 5 and TARGETHP &amp;lt; 20)
	or BLOODBATH ~= nil and (TARGETHP &amp;lt; 20 or ttd &amp;lt;= 12) then
		CastSpellByName(GetSpellInfo(1719))
		return true
end

--avatar,if=enabled&amp;(buff.recklessness.up|target.time_to_die&amp;lt;=25)
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if (IsPlayerSpell(107574) == true and PQR_SpellAvailable(107574) == true and IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 1) then
	if (RECKLESSNESS ~= nil or ttd &amp;lt;= 25) then
		CastSpellByName(GetSpellInfo(107574))
		return true
	end
end

--skull_banner,if=buff.skull_banner.down&amp;(((cooldown.colossus_smash.remains&amp;lt;2|debuff.colossus_smash.remains&amp;gt;=5)&amp;target.time_to_die&amp;gt;192&amp;buff.cooldown_reduction.up)|buff.recklessness.up)
local SKULLBANNER = UnitBuffID(&amp;quot;player&amp;quot;,114207)
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105491 -- heroic warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104495 -- heroic
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105242 -- warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 102298 -- normal
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104744 -- flex
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104993) then -- lfr
		CD_REDUCTION = true
end

if (GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105491 -- heroic warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104495 -- heroic
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105242 -- warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 102298 -- normal
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104744 -- flex
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104993) then -- lfr
		CD_REDUCTION = true
end


if SKULLBANNER == nil and (((CS_COOLDOWN &amp;lt; 2 or CS_TIMER - GetTime() &amp;gt;= 5) and ttd &amp;gt; 192 and CD_REDUCTION == true) or RECKLESSNESS ~= nil) then
	CastSpellByName(GetSpellInfo(114207))
	return true
end

--berserker_rage,if=buff.enrage.remains&amp;lt;1&amp;cooldown.bloodthirst.remains&amp;gt;1
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local ENRAGE_TIME = select(7, UnitBuffID(&amp;quot;player&amp;quot;, 18499,)) - GT()
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)

if ENRAGED ~= nil then
	if ENRAGE_TIME &amp;lt; 1 and BT_COOLDOWN &amp;gt;1 then
		CastSpellByName(GetSpellInfo(18499))
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.03 Storm Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--storm_bolt,if=enabled&amp;buff.cooldown_reduction.up&amp;debuff.colossus_smash.up
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)

if (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105491 -- heroic warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104495 -- heroic
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105242 -- warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 102298 -- normal
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104744 -- flex
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104993) then -- lfr
		CD_REDUCTION = true
end

if (GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105491 -- heroic warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104495 -- heroic
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105242 -- warforged
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 102298 -- normal
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104744 -- flex
	or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104993) then -- lfr
		CD_REDUCTION = true
end

if CD_REDUCTION == true then
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if IsPlayerSpell(107570) == true 
		and PQR_SpellAvailable(107570) == true
		and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
			if CS_DEBUFF ~= nil then
				CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.04 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow,if=buff.raging_blow.stack=2&amp;debuff.colossus_smash.up&amp;target.health.pct&amp;gt;=20
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
--local RAGINGBLOW = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 131116))
local RAGINGBLOW,_,_,RB_COUNT,_,_,RB_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,131116)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(85288) and IsPlayerSpell(85288) == true then
		if RB_COUNT == 2 and CS_DEBUFF ~= nil and TARGETHP &amp;gt;= 20 and RAGE &amp;gt;= 10 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.10 Colossus Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--colossus_smash
if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.11 Storm Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--storm_bolt,if=enabled&amp;buff.cooldown_reduction.down
if CD_REDUCTION == false then
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if IsPlayerSpell(107570) == true 
		and PQR_SpellAvailable(107570) == true
		and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
			CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.12 Execute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--execute,if=debuff.colossus_smash.up|rage&amp;gt;70|target.time_to_die&amp;lt;12
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (PQR_SpellAvailable(5308) == true and  IsPlayerSpell(5308) == true and RAGE &amp;gt;= 30) then
	--	if TARGETHP &amp;lt; 20 then
			if (CS_DEBUFF ~= nil or RAGE &amp;gt;= 70 or ttd &amp;lt; 12) then
				CastSpellByName(GetSpellInfo(5308),&amp;quot;target&amp;quot;)
				return true
--			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.13 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow,if=target.health.pct&amp;lt;20|buff.raging_blow.stack=2|(debuff.colossus_smash.up|(cooldown.bloodthirst.remains&amp;gt;=1&amp;buff.raging_blow.remains&amp;lt;=3))
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local GT = GetTime()
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local RAGINGBLOW,_,_,RB_COUNT,_,_,RB_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,131116)
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(85288) and IsPlayerSpell(85288) == true then
		if (TARGETHP &amp;lt; 20 or RB_COUNT == 2)
			or (CS_DEBUFF ~= nil or (BT_COOLDOWN &amp;gt;= 1 and RB_TIMER - GT &amp;lt;= 3)) then
				CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
				return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.14 Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--wild_strike,if=buff.bloodsurge.up
local BLOODSURGE = UnitBuffID(&amp;quot;player&amp;quot;, 46916)
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(100130) and RAGE &amp;gt;= 30 then
		if BLOODSURGE ~= nil then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.15 Bladestorm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bladestorm,if=enabled&amp;cooldown.bloodthirst.remains&amp;gt;2

if PQI_MavminsFURYFUNCTIONS_SingleTargetBladestorm_enable == true then

	local GT = GetTime()
	local BT_START, BT_DURATION = GetSpellCooldown(23881)
	local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
	
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
			if BT_COOLDOWN &amp;gt; 2 then
				CastSpellByName(GetSpellInfo(46924))
				return true
			end
		end
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.16 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow,if=cooldown.colossus_smash.remains&amp;gt;=3
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(85288) and IsPlayerSpell(85288) == true then
		if CS_COOLDOWN &amp;gt;= 3 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.01 Bloodbath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;(cooldown.colossus_smash.remains&amp;lt;2|debuff.colossus_smash.remains&amp;gt;=5|target.time_to_die&amp;lt;=20)
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local GT = GetTime()
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)

if (TARGET_MODE == &amp;quot;ONE&amp;quot; and IsPlayerSpell(12292) == true) then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if (CS_COOLDOWN &amp;lt; 2 and CS_COOLDOWN &amp;gt; 0)
			or (CS_TIMER - GT &amp;gt;= 5)
			or ttd &amp;lt;= 20 then
				CastSpellByName(GetSpellInfo(12292))
				return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.02 Heroic Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--heroic_strike,if=((debuff.colossus_smash.up&amp;rage&amp;gt;=40)&amp;target.health.pct&amp;gt;=20)|rage&amp;gt;=100&amp;buff.enrage.up
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(78) == true and RAGE &amp;gt;= 30 then
		if ((CS_DEBUFF ~= nil and RAGE &amp;gt;= 40) and TARGETHP &amp;gt;= 20) 
			or (RAGE &amp;gt;= 100 and ENRAGED ~= nil) then
				CastSpellByName(GetSpellInfo(78),&amp;quot;target&amp;quot;)
				return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.05 Storm Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--storm_bolt,if=enabled&amp;buff.cooldown_reduction.down&amp;debuff.colossus_smash.up
if CD_REDUCTION == false then
	if TARGET_MODE == &amp;quot;ONE&amp;quot; then
		if IsPlayerSpell(107570) == true 
		and PQR_SpellAvailable(107570) == true
		and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
			if CS_DEBUFF ~= nil then
				CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.06 Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodthirst,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(23881) == true
	and IsPlayerSpell(23881) == true then
		if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
			return false
		else
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.07 Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--wild_strike,if=buff.bloodsurge.react&amp;target.health.pct&amp;gt;=20&amp;cooldown.bloodthirst.remains&amp;lt;=1
local BLOODSURGE = UnitBuffID(&amp;quot;player&amp;quot;, 46916)
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (PQR_SpellAvailable(100130) and IsPlayerSpell(100130) and RAGE &amp;gt;= 30) then
		if (BLOODSURGE ~= nil and TARGETHP &amp;gt;= 20 and (BT_COOLDOWN &amp;lt;= 1 and BT_COOLDOWN &amp;gt; 0)) then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.08 Bloodthirst Wait</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--wait,sec=cooldown.bloodthirst.remains,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)&amp;cooldown.bloodthirst.remains&amp;lt;=1&amp;cooldown.bloodthirst.remains
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
		return false
	elseif (BT_COOLDOWN &amp;lt;= 1 and BT_COOLDOWN &amp;gt; 0) then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.09 Dragon Roar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if (PQR_SpellAvailable(118000) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if (CS_DEBUFF == nil and BLOODBATH ~= nil) then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.17 Shockwave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--shockwave,if=enabled
if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.18 Heroic Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--heroic_throw,if=debuff.colossus_smash.down&amp;rage&amp;lt;60
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(57755) and IsPlayerSpell(57755) == true then
		if (CS_DEBUFF == nil and RAGE &amp;lt; 60) then
			CastSpellByName(GetSpellInfo(57755),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.19 Battle Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--battle_shout,if=rage&amp;lt;70&amp;!debuff.colossus_smash.up
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (RAGE &amp;lt; 70 and CS_DEBUFF == nil) then
		if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and PQR_SpellAvailable(6673) then
			CastSpellByName(GetSpellInfo(6673))
			return true
		elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and PQR_SpellAvailable(469) then
			CastSpellByName(GetSpellInfo(469))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.20 Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--wild_strike,if=debuff.colossus_smash.up&amp;target.health.pct&amp;gt;=20
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(100130) and RAGE &amp;gt;= 30 then
		if (CS_DEBUFF ~= nil and TARGETHP &amp;gt;= 20) then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.21 Battle Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--battle_shout,if=rage&amp;lt;70
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if RAGE &amp;lt; 70 then
		if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and PQR_SpellAvailable(6673) then
			CastSpellByName(GetSpellInfo(6673))
			return true
		elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and PQR_SpellAvailable(469) then
			CastSpellByName(GetSpellInfo(469))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.22 Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--wild_strike,if=cooldown.colossus_smash.remains&amp;gt;=2&amp;rage&amp;gt;=70&amp;target.health.pct&amp;gt;=20
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if PQR_SpellAvailable(100130) and RAGE &amp;gt;= 30 then
		if (CS_COOLDOWN &amp;gt;= 2 and RAGE &amp;gt;= 70 and TARGETHP &amp;gt;= 20) then
			CastSpellByName(GetSpellInfo(100130),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>1.23 Impending Victory</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--impending_victory,if=enabled&amp;target.health.pct&amp;gt;=20&amp;cooldown.colossus_smash.remains&amp;gt;=2
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)

if TARGET_MODE == &amp;quot;ONE&amp;quot; then
	if (IsPlayerSpell(103840) and PQR_SpellAvailable(103840) and RAGE &amp;gt;= 10) then
		if (TARGETHP &amp;gt;= 20 and CS_COOLDOWN &amp;gt;= 2) then
			CastSpellByName(GetSpellInfo(103840),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.01 Bloodbath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;buff.enrage.up
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;TWO&amp;quot; and IsPlayerSpell(12292) == true then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if ENRAGED ~= nil then
			CastSpellByName(GetSpellInfo(12292))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.02 Cleave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--cleave,if=(rage&amp;gt;=60&amp;debuff.colossus_smash.up)|rage&amp;gt;90
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; and PQR_SpellAvailable(845) == true then
	if (RAGE &amp;gt;= 60 and CS_DEBUFF ~= nil)
		or RAGE &amp;gt; 90 then
			CastSpellByName(GetSpellInfo(845),&amp;quot;target&amp;quot;)
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.03 Dragon Roar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if PQR_SpellAvailable(118000) == true and inRange == 1 then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if CS_DEBUFF == nil and BLOODBATH ~= nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.04 Bladestorm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bladestorm,if=enabled&amp;buff.enrage.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if ENRAGED ~= nil
			and (BLOODBATH ~= nil or IsPlayerSpell(12292) == false) then
				CastSpellByName(GetSpellInfo(46924))
				return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.05 Shockwave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--shockwave,if=enabled
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.06 Colossus Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--colossus_smash
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.07 Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodthirst,cycle_targets=1,if=dot.deep_wounds.remains&amp;lt;5
local GT = GetTime()
--local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)
--local DW_TIME = select(7, UnitDeBuffID(&amp;quot;target&amp;quot;, 115767,&amp;quot;player&amp;quot;)) - GT()
local DW_DEBUFF,_,_,_,_,_,DW_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,115768,&amp;quot;PLAYER&amp;quot;)

if DW_DEBUFF == nil then
	DW_TIMER = 0
end

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if (DW_DEBUFF ~= nil and DW_TIMER - GT &amp;lt; 5) then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.08 Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodthirst,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if PQR_SpellAvailable(23881) == true
	and IsPlayerSpell(23881) == true then
		if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
			return false
		else
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.09 Storm Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--storm_bolt,if=enabled
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if IsPlayerSpell(107570) == true 
	and PQR_SpellAvailable(107570) == true
	and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.10 Bloodthirst Wait</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--wait,sec=cooldown.bloodthirst.remains,if=!(target.health.pct&amp;lt;20&amp;debuff.colossus_smash.up&amp;rage&amp;gt;=30&amp;buff.enrage.up)&amp;cooldown.bloodthirst.remains&amp;lt;=1&amp;cooldown.bloodthirst.remains
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (TARGETHP &amp;lt; 20 and CS_DEBUFF ~= nil and RAGE &amp;gt;= 30 and ENRAGED ~= nil) then
		return false
	elseif (BT_COOLDOWN &amp;lt;= 1 and BT_COOLDOWN &amp;gt; 0) then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.11 Execute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--execute,if=debuff.colossus_smash.up
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(5308) == true and IsPlayerSpell(5308) == true and RAGE &amp;gt;= 30) then
		if TARGETHP &amp;lt; 20 then
			if CS_DEBUFF ~= nil then
				CastSpellByName(GetSpellInfo(5308),&amp;quot;target&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.12 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow,if=buff.meat_cleaver.up|target.health.pct&amp;lt;20
local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local RAGINGBLOW,_,_,RB_COUNT,_,_,RB_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,131116)
local TARGETHP = 100*(UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;))

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(85288) == true and RAGE &amp;gt;= 10) then
		if ((RB_COUNT &amp;gt;= 1 and MEATCLEAVER ~= nil) or TARGETHP &amp;lt; 20) then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.13 Wirlwind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--whirlwind,if=!buff.meat_cleaver.up
local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if (PQR_SpellAvailable(1680) and RAGE &amp;gt;= 20 and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if MEATCLEAVER == nil then
			CastSpellByName(GetSpellInfo(1680),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.14 Battleshout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--battle_shout
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and PQR_SpellAvailable(6673) then
			CastSpellByName(GetSpellInfo(6673))
			return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and PQR_SpellAvailable(469) then
			CastSpellByName(GetSpellInfo(469))
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2.15 Heroic Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--heroic_throw
if TARGET_MODE == &amp;quot;TWO&amp;quot; then
	CastSpellByName(GetSpellInfo(57755),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.01 Bloodbath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;buff.enrage.up
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;THREE&amp;quot; and IsPlayerSpell(12292) == true then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if ENRAGED ~= nil then
			CastSpellByName(GetSpellInfo(12292))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.02 Cleave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--cleave,if=(rage&amp;gt;=60&amp;debuff.colossus_smash.up)|rage&amp;gt;90
local RAGE = UnitPower(&amp;quot;player&amp;quot;)
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; and PQR_SpellAvailable(845) == true then
	if (RAGE &amp;gt;= 60 and CS_DEBUFF ~= nil)
		or RAGE &amp;gt; 90 then
			CastSpellByName(GetSpellInfo(845),&amp;quot;target&amp;quot;)
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.03 Dragon Roar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if PQR_SpellAvailable(118000) == true and inRange == 1 then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if CS_DEBUFF == nil and BLOODBATH ~= nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.04 Shockwave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--shockwave,if=enabled
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.05 Bladestorm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bladestorm,if=enabled&amp;buff.enrage.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if ENRAGED ~= nil
			and (BLOODBATH ~= nil or IsPlayerSpell(12292) == false) then
				CastSpellByName(GetSpellInfo(46924))
				return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.06 Colossus Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--colossus_smash
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.07 Storm Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--storm_bolt,if=enabled
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if IsPlayerSpell(107570) == true 
	and PQR_SpellAvailable(107570) == true
	and IsSpellInRange(GetSpellInfo(107570),&amp;quot;target&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.08 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow,if=buff.meat_cleaver.stack=2

--local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
--local MC_STACKS = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85739))
local MEATCLEAVER,_,_,MC_STACKS,_,_,MC_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,85739)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if MEATCLEAVER == nil then 
	MC_STACKS = 0 
end

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (PQR_SpellAvailable(85288) == true and RAGE &amp;gt;= 10 and MEATCLEAVER ~= nil) then
		if MC_STACKS &amp;gt;= 2 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.10 Whirlwind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--whirlwind
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (PQR_SpellAvailable(1680) and RAGE &amp;gt;= 20 and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(1680),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.09 Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodthirst,cycle_targets=1,if=!dot.deep_wounds.ticking
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS == nil then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.11 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow
local RAGINGBLOW,_,_,RB_COUNT,_,_,RB_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,131116)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if RAGINGBLOW == nil then RB_COUNT = 0 end

if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	if (PQR_SpellAvailable(85288) == true and RAGE &amp;gt;= 10) then
		if RB_COUNT &amp;gt;= 1 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.12 Battleshout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--battle_shout,if=rage&amp;lt;70
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;THREE&amp;quot; and RAGE &amp;lt; 70 then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and PQR_SpellAvailable(6673) then
			CastSpellByName(GetSpellInfo(6673))
			return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and PQR_SpellAvailable(469) then
			CastSpellByName(GetSpellInfo(469))
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3.13 Heroic Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--heroic_throw
if TARGET_MODE == &amp;quot;THREE&amp;quot; then
	CastSpellByName(GetSpellInfo(57755),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.01 Bloodbath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodbath,if=enabled&amp;buff.enrage.up
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and IsPlayerSpell(12292) == true then
	if PQR_SpellAvailable(12292) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
		if ENRAGED ~= nil then
			CastSpellByName(GetSpellInfo(12292))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.02 Cleave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--cleave,if=rage&amp;gt;110
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and PQR_SpellAvailable(845) == true then
	if RAGE &amp;gt; 110 then
		CastSpellByName(GetSpellInfo(845),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.03 Dragon Roar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--dragon_roar,if=enabled&amp;(!debuff.colossus_smash.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled))
local CS_DEBUFF = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if IsPlayerSpell(118000) == true then
		if PQR_SpellAvailable(118000) == true and inRange == 1 then
			if IsPlayerSpell(12292) == false then
				if CS_DEBUFF == nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			elseif IsPlayerSpell(12292) == true then
				if CS_DEBUFF == nil and BLOODBATH ~= nil then
					CastSpellByName(GetSpellInfo(118000),&amp;quot;target&amp;quot;)
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.04 Bladestorm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bladestorm,if=enabled&amp;buff.enrage.up&amp;(buff.bloodbath.up|!talent.bloodbath.enabled)
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)
local BLOODBATH = UnitBuffID(&amp;quot;player&amp;quot;,12292)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (IsPlayerSpell(46924) and PQR_SpellAvailable(46924) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		if ENRAGED ~= nil
			and (BLOODBATH ~= nil or IsPlayerSpell(12292) == false) then
				CastSpellByName(GetSpellInfo(46924))
				return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.05 Shockwave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--shockwave,if=enabled
if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (IsPlayerSpell(46968) and PQR_SpellAvailable(46968) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(46968),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.06 Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodthirst,cycle_targets=1,if=!dot.deep_wounds.ticking&amp;buff.enrage.down
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS == nil and ENRAGED == nil then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.07 Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--raging_blow,if=buff.meat_cleaver.stack=3

--local MEATCLEAVER = UnitBuffID(&amp;quot;player&amp;quot;, 85739)
--local MC_STACKS = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85739))
local MEATCLEAVER,_,_,MC_STACKS,_,_,MC_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,85739)
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if MEATCLEAVER == nil then
	MC_STACKS = 0
end

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (PQR_SpellAvailable(85288) and RAGE &amp;gt;= 10 and MEATCLEAVER ~= nil) then
		if MC_STACKS == 3 then
			CastSpellByName(GetSpellInfo(85288),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.08 Whirlwind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--whirlwind
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (PQR_SpellAvailable(1680) and RAGE &amp;gt;= 20 and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(1680),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.09 Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--bloodthirst,cycle_targets=1,if=!dot.deep_wounds.ticking
local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,12880)
local DEEPWOUNDS = UnitDebuffID(&amp;quot;target&amp;quot;,115767,&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if PQR_SpellAvailable(23881) == true then
		if DEEPWOUNDS == nil then
			CastSpellByName(GetSpellInfo(23881),&amp;quot;target&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.10 Colossus Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--colossus_smash
if TARGET_MODE == &amp;quot;FOUR&amp;quot; then
	if (PQR_SpellAvailable(86346) == true and IsPlayerSpell(86346) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1) then
		CastSpellByName(GetSpellInfo(86346),&amp;quot;target&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>4.11 Battleshout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--battle_shout,if=rage&amp;lt;70
local RAGE = UnitPower(&amp;quot;player&amp;quot;)

if TARGET_MODE == &amp;quot;FOUR&amp;quot; and RAGE &amp;lt; 70 then
	if SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and PQR_SpellAvailable(6673) then
			CastSpellByName(GetSpellInfo(6673))
			return true
	elseif SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and PQR_SpellAvailable(469) then
			CastSpellByName(GetSpellInfo(469))
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.01 Mogu power potion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--mogu_power_potion,if=(target.health.pct&amp;lt;20&amp;buff.recklessness.up)|target.time_to_die&amp;lt;=25
local bossExists = nil
local bossTarget = nil
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)
local TARGETHP = (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;))


for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i
	if UnitExists(bossCheck) then
		bossExists = true
		if UnitIsUnit(bossCheck, &amp;quot;target&amp;quot;) then
			bossTarget = bossCheck
		end
	end
end

if PQI_MavminsFURYFUNCTIONS_AutoPotion_enable == true then
	if bossExists ~= nil and bossTarget ~= nil then
		if ((TARGETHP &amp;lt; 20 and RECKLESSNESS ~= nil) or ttd &amp;lt;= 25) and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
			if GetItemCount(76095,false,false) &amp;gt; 0 and select(3,GetItemCooldown(76095)) == 1 then 
				UseItemByName(76095)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.03 Avatar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--avatar,if=enabled&amp;(buff.recklessness.up|target.time_to_die&amp;lt;=25)
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if USE_OFF_CDS == true then
	if (IsPlayerSpell(107574) == true and PQR_SpellAvailable(107574) == true and IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 1) then
		if (RECKLESSNESS ~= nil or ttd &amp;lt;= 25) then
			CastSpellByName(GetSpellInfo(107574))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.04 Skull Banner</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--skull_banner,if=buff.skull_banner.down&amp;(((cooldown.colossus_smash.remains&amp;lt;2|debuff.colossus_smash.remains&amp;gt;=5)&amp;target.time_to_die&amp;gt;192&amp;buff.cooldown_reduction.up)|buff.recklessness.up)
local SKULLBANNER = UnitBuffID(&amp;quot;player&amp;quot;,114207)
local CS_START, CS_DURATION = GetSpellCooldown(86346)
local CS_COOLDOWN = (CS_START - GetTime() + CS_DURATION)
local CS_DEBUFF,_,_,_,_,_,CS_TIMER = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;PLAYER&amp;quot;)
local RECKLESSNESS = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if CS_DEBUFF == nil then
	CS_TIMER = 0
end

if USE_OFF_CDS == true then
	if PQR_SpellAvailable(114207) == true and IsPlayerSpell(114207) == true and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1 then
	
		if SKULLBANNER == nil and (((CS_COOLDOWN &amp;lt; 2 or CS_TIMER - GetTime() &amp;gt;= 5) and ttd &amp;gt; (192 * CD_REDUCTION_VALUE) and CD_REDUCTION == true) or RECKLESSNESS ~= nil) then
			CastSpellByName(GetSpellInfo(114207))
			return true
		end
		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.05 Berserker Rage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--berserker_rage,if=buff.enrage.remains&amp;lt;1&amp;cooldown.bloodthirst.remains&amp;gt;1
local GT = GetTime()
local BT_START, BT_DURATION = GetSpellCooldown(23881)
local BT_COOLDOWN = (BT_START - GT + BT_DURATION)
--local ENRAGE_TIME = select(7, UnitBuffID(&amp;quot;player&amp;quot;, 18499,)) - GT
--local ENRAGED = UnitBuffID(&amp;quot;player&amp;quot;,13046)
local ENRAGED,_,_,_,_,_,ENRAGE_TIMER = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if ENRAGED ~= nil then
	if (ENRAGE_TIMER - GT &amp;lt; 1) and BT_COOLDOWN &amp;gt; 1 then
		CastSpellByName(GetSpellInfo(18499))
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.00 Battle Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--battle_shout

if IsMounted(&amp;quot;player&amp;quot;) ~= nil then
	return false
end

local BS = UnitBuffID(&amp;quot;player&amp;quot;,6673)
local COM = UnitBuffID(&amp;quot;player&amp;quot;,469)

if (SHOUT_MODE == &amp;quot;BATTLE&amp;quot; and PQR_SpellAvailable(6673) == true and BS == nil) then
	CastSpellByName(GetSpellInfo(6673))
	return true
end

if (SHOUT_MODE == &amp;quot;COMMANDING&amp;quot; and PQR_SpellAvailable(469) == true and COM == nil) then
	CastSpellByName(GetSpellInfo(469))
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>* CD Reduction *</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CD_REDUCTION == nil then

	if (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105491
		or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105491) then -- heroic warforged 47%
			CD_REDUCTION_VALUE = (1 / 1.47)
			CD_REDUCTION = true
			
	elseif (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104495 -- heroic 44%
		or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104495) then
			CD_REDUCTION_VALUE = (1 / 1.44)
			CD_REDUCTION = true
		
	elseif (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 105242 -- warforged 41%
		or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 105242) then
			CD_REDUCTION_VALUE = (1 / 1.41)
			CD_REDUCTION = true
		
	elseif (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 102298  -- normal 39%
		or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 102298) then
			CD_REDUCTION_VALUE = (1 / 1.39)
			CD_REDUCTION = true
		
	elseif (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104744 -- flex 34%
		or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104744) then
			CD_REDUCTION_VALUE = (1 / 1.34)
			CD_REDUCTION = true
		
	elseif (GetInventoryItemID(&amp;quot;player&amp;quot;, 13) == 104993  -- lfr 31%
		or GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 104744) then
			CD_REDUCTION_VALUE = (1 / 1.31)
			CD_REDUCTION = true
	end
	
	if CD_REDUCTION ~= true then
		CD_REDUCTION = false
		CD_REDUCTION_VALUE = 1
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.00 Heroic Leap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_MavminsFURYHOTKEYS_HeroicLeap_enable == true 
	and PQI:IsHotkeys(PQI_MavminsFURYHOTKEYS_HeroicLeap_key)
	and not GetCurrentKeyBoardFocus() then
	
		if PQR_SpellAvailable(6544) == true
			and IsPlayerSpell(6544) == true then
			
				CastSpellByName(GetSpellInfo(6544))
				if SpellIsTargeting() then
					CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop()
				end
				return true
			
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.01 Gloves</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local inRange = IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) 
local cs = UnitDebuffID(&amp;quot;target&amp;quot;,86346)

if IsPlayerSpell(110403) == true then
	if PQI_MavminsFURYFUNCTIONS_EngineerCDs_enable == true then
		if GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10) == 0 and inRange == 1 then
			if (IsPlayerSpell(12292) == false and cs) or (IsPlayerSpell(12292) and UnitBuffID(&amp;quot;player&amp;quot;,12292)) then 
				UseInventoryItem(10)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0.00 Utility Spells</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PLAYERHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local HEALTHSTONECD = select(2,GetItemCooldown(5512))

if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) == nil and not IsMounted() and UnitInVehicle(&amp;quot;player&amp;quot;) == nil then	
	
	--Battle Stance
	if GetShapeshiftForm() == 0 then
		CastShapeshiftForm(1)
	end
	
	--Battle Shout
	if PQR_SpellAvailable(6673) and UnitBuffID(&amp;quot;player&amp;quot;,6673) == nil and PQR_IsMoving(2) then
		CastSpellByName(GetSpellInfo(6673))
	end
	
	--Healthstone
	if GetItemCount(5512) &amp;gt; 0 then
	
		if PQI_MavminsFURYFUNCTIONS_Healthstone_enable == true then
			if PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_Healthstone_value
				and HEALTHSTONECD == 0 then
				UseItemByName(5512, &amp;quot;player&amp;quot;)
			end
		end
	
	end
	
	--Die by the sword
	if PQI_MavminsFURYFUNCTIONS_AutoDieByTheSword_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(118038) == true 
			and PQR_SpellAvailable(118038) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoDieByTheSword_value then
				CastSpellByName(GetSpellInfo(118038))
				return true
		end
	
	end
	
	--Shield Wall
	if PQI_MavminsFURYFUNCTIONS_AutoShieldWall_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(871) == true 
			and PQR_SpellAvailable(871) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoShieldWall_value then
				CastSpellByName(GetSpellInfo(871))
				return true
		end
	
	end
		
	--Rallying Cry
	if PQI_MavminsFURYFUNCTIONS_AutoRallyingCry_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(97462) == true 
			and PQR_SpellAvailable(97462) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoRallyingCry_value then
				CastSpellByName(GetSpellInfo(97462))
				return true
		end
	
	end
	
		--Impending Victory
	if PQI_MavminsFURYFUNCTIONS_EnableSelfHealing_enable == true
		and PQI_MavminsFURYFUNCTIONS_AutoVictoryRush_enable == true then
		
		--victory rush
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(34428) == true 
			and PQR_SpellAvailable(34428) == true
			and IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 1
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoVictoryRush_value then
				CastSpellByName(GetSpellInfo(34428),&amp;quot;target&amp;quot;)
				return true
		end
		
		
		--impending victory
			if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(103840) == true 
			and PQR_SpellAvailable(103840) == true
			and IsSpellInRange(GetSpellInfo(78),&amp;quot;target&amp;quot;) == 1
			and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoVictoryRush_value then
				CastSpellByName(GetSpellInfo(103840),&amp;quot;target&amp;quot;)
				return true
		end

	end
	
	--Enraged Regeneration
	if PQI_MavminsFURYFUNCTIONS_EnableSelfHealing_enable == true
		and PQI_MavminsFURYFUNCTIONS_AutoEnragedRegeneration_enable == true then
	
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(55694) == true 
			and PQR_SpellAvailable(55694) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoEnragedRegeneration_value then
				CastSpellByName(GetSpellInfo(55694))
				return true
		end
	
	end
	
	--Demoralizing Banner
	if PQI_MavminsFURYFUNCTIONS_AutoDemoralizingBanner_enable == true then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(114203) == true 
			and PQR_SpellAvailable(114203) == true
			and PLAYERHP &amp;lt;= PQI_MavminsFURYFUNCTIONS_AutoDemoralizingBanner_value then
				CastSpellByName(GetSpellInfo(114203),nil)
				if SpellIsTargeting() then
					CameraOrSelectOrMoveStart()
					CameraOrSelectOrMoveStop()
				end
		end
	
	end
	
	if PQI_MavminsFURYSHOTKEYS_DemoralizingBanner_enable == true 
		and PQI:IsHotkeys(PQI_MavminsARMSHOTKEYS_DemoralizingBanner_key)
		and not GetCurrentKeyBoardFocus() then
		
		if UnitAffectingCombat(&amp;quot;player&amp;quot;)
			and IsPlayerSpell(114203) == true 
			and PQR_SpellAvailable(114203) == true then
				CastSpellByName(GetSpellInfo(114203),nil)
				if SpellIsTargeting() then
					CameraOrSelectOrMoveStart()
					CameraOrSelectOrMoveStop()
				end
		end
	
	end
	
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>