<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>--InitializePvP--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
  PQR_RotationStarted = false
  if PQR_LoadLua ~= nil
  then
   		if PQR_LoadLua(&amp;quot;PQR_BolochanPVPdata.lua&amp;quot;) == false
   		then 
      			PQR_WriteToChat(&amp;quot;Put PQR_BolochanPVPdata.lua in the data folder.&amp;quot;, &amp;quot;Error&amp;quot;)
      			PQR_StopRotation()
       			return true
  		end
  end
end


--options--
--ALLSPEC--
intPctDelay			= 33	-- Percentage of cast before interrupt.
useDR 				= true	--Automatically Use Dragon Roar
breakFearWithZerk	= true 	--Save Berserker&amp;apos;s Rage to break cc&amp;apos;s
autoDisarm			= true 	--Automatically Disarm
autoShieldWall		= true 	--Automatically Shield Wall
autoSpellReflect	= true 	--Automatically Spell Reflect
autoStance			= true 	--Force you in the correct stance
autoRally			= true 	--Automatic Rallying Cry
autoDieByTheSword	= true 	--Automatic Die By The Sword
autoHealthStone		= true 	--Automatic Healthstone Usage					
chargeInterrupt		= true	--if you&amp;apos;re NOT popping offensive cooldowns, auto charge to interrupt							
eatFocusTraps		= true	--If your focus is set to a friendly player will safeguard/intervene
							--to them when necessary to eat a hunter&amp;apos;s trap.
							
--Arms--
dpsTrinket			= 13	--Dps trinket slot

--PROTONLY--
autoFlag			= true	--Automatically Pickup / Return flags
healthTrinket  		= nil 	--Set to the number of your trinket for auto use. (13 or 14)

-------------------------------------------------------------------------------------------



--Keybinds
demoBannerKey   		= IsLeftShiftKeyDown()
heroicLeapKey		= IsLeftControlKeyDown()
fearKey		    	= IsLeftAltKeyDown()
reflectKey			= IsRightShiftKeyDown()
--					= IsRightControlKeyDown()
pauseKey			= IsRightAltKeyDown()
shockWaveKey		= IsMouseButtonDown(3)  --When you push down the scroll button on mouse(usually)
--				= IsMouseButtonDown(4)  --MouseButton4 depends on mouse
bannerKey				= IsMouseButtonDown(5)  --MouseButton5 depends on mouse

---------------------------------------------
-----------------Keynames--------------------
---------------------------------------------
--mockingBannerKey	(hold to throw mocking banner and safeguard to it to clear roots)
--heroicLeapKey		(hold to heroic leap to mouse)
--demoBannerKey		(hold to throw demo banner and safeguard to it to clear roots)
--fearKey			(hold to intimidating shout.. priority focus, then target, will wait till targets cc is already over)
--shieldWallKey		(hold to force shieldwall)
--disarmKey  		(hold to force disarm on target)
--reflectKey 		(hold to force spell reflect)
--silenceKey		(hold to pummel or heroic throw to blanket silence priority focus, then target will wait till targets cc is already over)
---------------------------------------------
---------------------------------------------
---------------------------------------------
-- *NOTE: If you hold a CC key (Fear or Blanket silence) it will NOT attempt 
-- to CC your target until the target is not CC&amp;apos;ed at all. This makes it safe to keep
-- the fear or silence key held down to chain CC&amp;apos;s together with your partner.

--FixLag
local ping = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000) + .025

if ping &amp;lt; .05
then
ping = .05
elseif ping &amp;gt; .3
then
ping = .3
end
PQR_SpellAvailableTime = ping


--FixStance
if autoStance == true
and ( GetSpecialization() == 1 or GetSpecialization() == 2 )
then
		if inCombat() == nil
		and GetShapeshiftForm() ~= 1
		then
			CastShapeshiftForm(1)
		end

		if inCombat() ~= nil
		and ( getHp(&amp;quot;player&amp;quot;) &amp;gt;= 95 or poppedCDs(&amp;quot;player&amp;quot;) == true )
		and GetShapeshiftForm() ~= 1
			then
				CastShapeshiftForm(1)
			end
		
		if inCombat() ~= nil
		and getHp(&amp;quot;player&amp;quot;) &amp;lt; 95
		and poppedCDs(&amp;quot;player&amp;quot;) == nil
		and GetShapeshiftForm() ~= 2
			then
				CastShapeshiftForm(2)
			end
end

if autoStance == true
and GetSpecialization() == 3
and GetShapeshiftForm() ~= 2
	then
		CastShapeshiftForm(2)
	end




--PauseKey
if pauseKey ~= nil
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Interrupts--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local castingTarget 	= nil
local immuneCastingTar	= nil

for i=1, #custTars do
	if spellReflect(custTars[i]) == nil
	and ( select(9,UnitCastingInfo(custTars[i]))==false 
		or select(8,UnitChannelInfo(custTars[i]))==false )
	then
			castingTarget = custTars[i]
	end
end


for i=1, #custTars do
	if spellReflect(custTars[i]) == nil
	and select(9,UnitCastingInfo(custTars[i]))==true
	then
			immuneCastingTar = custTars[i]
	end
end


--IMMUNE INTERRUPTS--
if immuneCastingTar ~= nil
and spellReflect(immuneCastingTar) == nil
and UnitBuffID(&amp;quot;player&amp;quot;,23920) == nil
then
	local cName, _, _, _, cStart,cEnd = UnitCastingInfo(immuneCastingTar)
	local chName, _, _, _, chStart,chEnd = UnitChannelInfo(immuneCastingTar)
	if chName ~= nil then
		cName = chName
		cStart = chStart
		cEnd = chEnd
	end
	local timeSinceStart = (GetTime() * 1000 - cStart) / 1000
	local timeLeft = ((GetTime() * 1000 - cEnd) * -1) / 1000 
    local castTime = cEnd - cStart 
    local currentPercent = timeSinceStart / castTime * 100000
    
--DisruptingShout--
if cdRemains(102060) == 0
	and CheckInteractDistance(immuneCastingTar,3) ~= nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;,immuneCastingTar) ~= nil
	and ( PQR_IsOnInterruptList(cName) ~= nil or PQR_IsInterruptAll() ~= nil )
	and currentPercent &amp;gt; intPctDelay
			then
			_castSpell(102060)
			PQR_DelayRotation(.5)
		end

--SB--
if (cdRemains(102060) &amp;gt; 0 or CheckInteractDistance(immuneCastingTar,3) == nil)
	and IsPlayerSpell(107570) == true
	and cdRemains(107570) == 0
	and rangeCheck(107570,immuneCastingTar) == true
	and UnitIsUnit(&amp;quot;target&amp;quot;,immuneCastingTar) == nil
	and ( PQR_IsOnInterruptList(cName) ~= nil or PQR_IsInterruptAll() ~= nil )
	and currentPercent &amp;gt; intPctDelay
		then
			_castSpell(107570,immuneCastingTar)
	end	
end
--END IMMUNE INTERRUPTS--



--NORMAL INTERRUPTS--
if castingTarget ~= nil
and spellReflect(castingTarget) == nil
and UnitBuffID(&amp;quot;player&amp;quot;,23920) == nil
then
	local cName, _, _, _, cStart,cEnd = UnitCastingInfo(castingTarget)
	local chName, _, _, _, chStart,chEnd = UnitChannelInfo(castingTarget)
	if chName ~= nil then
		cName = chName
		cStart = chStart
		cEnd = chEnd
	end
	local timeSinceStart = (GetTime() * 1000 - cStart) / 1000
	local timeLeft = ((GetTime() * 1000 - cEnd) * -1) / 1000 
    local castTime = cEnd - cStart 
    local currentPercent = timeSinceStart / castTime * 100000

	
--Pum--
	if cdRemains(6552) == 0
		and rangeCheck(6552,castingTarget) == true
		and ( PQR_IsOnInterruptList(cName) ~= nil or PQR_IsInterruptAll() ~= nil )
		and currentPercent &amp;gt;= intPctDelay
			then
			_castSpell(6552,castingTarget)
			PQR_DelayRotation(.5)
		end
--DS--
	if (cdRemains(6552) &amp;gt; 0 or rangeCheck(6552,castingTarget) == nil)
	and cdRemains(102060) == 0
	and CheckInteractDistance(castingTarget,3) ~= nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;,castingTarget) ~= nil
	and ( PQR_IsOnInterruptList(cName) ~= nil or PQR_IsInterruptAll() ~= nil )
	and currentPercent &amp;gt; intPctDelay
			then
			_castSpell(102060)
			PQR_DelayRotation(.5)
		end
		
--ChargeInterrupt--
	if chargeInterrupt == true
	and (cdRemains(6552) &amp;gt; 0 or rangeCheck(6552,castingTarget) == nil)
	and (cdRemains(102060) &amp;gt; 0 or CheckInteractDistance(castingTarget,3) == nil)
	and cdRemains(100) == 0
	and rangeCheck(100,castingTarget) == true
	and poppedCDs(&amp;quot;player&amp;quot;) == nil
	and ( PQR_IsOnInterruptList(cName) ~= nil or PQR_IsInterruptAll() ~= nil )
	and currentPercent &amp;gt; intPctDelay
		then
			_castSpell(100,castingTarget)
			PQR_DelayRotation(1) --Delay while charging
		end

	
--SB--
	if (cdRemains(6552) &amp;gt; 0 or rangeCheck(6552,castingTarget) == nil)
	and (cdRemains(102060) &amp;gt; 0 or CheckInteractDistance(castingTarget,3) == nil)
	and (cdRemains(100) &amp;gt; 0 or rangeCheck(100,castingTarget) == nil or poppedCDs(&amp;quot;player&amp;quot;) == true or chargeInterrupt == false)
	and IsPlayerSpell(107570) == true
	and cdRemains(107570) == 0
	and UnitIsUnit(&amp;quot;target&amp;quot;,castingTarget) == nil
	and rangeCheck(107570,castingTarget) == true
	and ( PQR_IsOnInterruptList(cName) ~= nil or PQR_IsInterruptAll() ~= nil )
	and currentPercent &amp;gt; intPctDelay
		then
			_castSpell(107570,castingTarget)
	end	
end
--END NORMAL INTERRUPTS--</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms_PvP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--vars
local shieldWall	= false
local sRcheck 		= false
local useDisarm		= false
local useFear		= false
local shouldSlow 	= true
local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)


--BreakFear--
if breakFearWithZerk == true
and hasCC(&amp;quot;player&amp;quot;) == true
	then
		_castSpell(18499)
	elseif breakFearWithZerk == true
	and hasCC(&amp;quot;player&amp;quot;) == true 
	and cdRemains(18499) &amp;gt; 0 and cdRemains(18499) &amp;lt;= 28
	then
		_castSpell(7744)
	end
	
--AvatarBreakRootWhilePoppedCDs--
if	poppedCDs(&amp;quot;player&amp;quot;) == true
and hasRoot(&amp;quot;player&amp;quot;) == true
then
		_castSpell(107574)
end


--IntimidatingShoutKey--
if fearKey == 1
then
	if UnitExists(&amp;quot;focus&amp;quot;) == 1
	and hasCC(&amp;quot;focus&amp;quot;) == nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
	then
		_castSpell(5246,&amp;quot;focus&amp;quot;)
	end
	
	if ( UnitExists(&amp;quot;focus&amp;quot;) == nil or UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == nil )
	and UnitExists(&amp;quot;target&amp;quot;) == 1
	and hasCC(&amp;quot;target&amp;quot;) == nil
	then
		_castSpell(5246,&amp;quot;target&amp;quot;)
	end
end

--ShockWaveKey--
if shockWaveKey == 1
then
	if IsPlayerSpell(46968)
	then
	_castSpell(46968)
	elseif IsPlayerSpell(46924)
	then
	_castSpell(46924)
	end
end


--stormBoltKey--
if stormBoltKey == 1
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and hasCC(&amp;quot;focus&amp;quot;) == nil
and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
then
	_castSpell(107570,&amp;quot;focus&amp;quot;)
end


--HealthStone--
if autoHealthStone == true
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 25
and GetItemCount(5512) &amp;gt; 0 
and select(2,GetItemCooldown(5512)) == 0
then
   UseItemByName(tostring(GetItemInfo(5512)))
end


--RallyingCry--
if inCombat() == true 
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 30
and autoRally == true
then 
_castSpell(97462)
end


--SpellReflect--
for i=1, #custTars do
if (autoSpellReflect == true
and spellReflect(custTars[i]) == true)
or reflectKey == 1
then
	sRcheck = true
end
end
if sRcheck == true
and cdRemains(23920) == 0
and UnitBuffID(&amp;quot;player&amp;quot;,23920) == nil
then
	if UseEquipmentSet(&amp;quot;ShieldSet&amp;quot;) ~= nil
		then
		CastSpellByName(GetSpellInfo(23920),nil)
		return true
	end
end

--ShieldWall--
if ( inCombat() == true 
and cdRemains(871) == 0
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 35
and autoShieldWall == true ) 
or shieldWallKey == 1
then
	shieldWall = true
end

if shieldWall == true
and not UnitBuffID(&amp;quot;player&amp;quot;,871)
then
	if UseEquipmentSet(&amp;quot;ShieldSet&amp;quot;) ~= nil
		then
		CastSpellByName(GetSpellInfo(871),nil)
		return true
	end
end


--Switch Back to 2H--
if ( sRcheck == false or shieldWall == false )
and IsEquippedItemType(&amp;quot;shields&amp;quot;)
and UnitBuffID(&amp;quot;player&amp;quot;,23920) == nil
and UnitBuffID(&amp;quot;player&amp;quot;,871) == nil
then
	if UseEquipmentSet(&amp;quot;2HSet&amp;quot;) ~= nil
		then
		return true
	end
end


--DieByTheSword--
if inCombat()
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 50
and autoDieByTheSword == true
then
_castSpell(118038)
end

--ShatteringThrow--
for i=1, #custTars do
if inCombat() ~= nil
and isImmune(custTars[i]) ~= nil
and IsSpellInRange(GetSpellInfo(57755),custTars[i]) == 1
and UnitExists(custTars[i]) ~= nil
and PQR_IsMoving() == false
	then
		PQR_CustomTarget = custTars[i]
		_castSpell(64382,PQR_CustomTarget)
	end
end

--AutoDisarm--
if autoDisarm == true
then
		for i=1, #custTars do
			if inCombat()
				and autoDisarm == true
				and shouldDisarm(custTars[i]) ~= nil
				and rangeCheck(676,custTars[i]) == true
				then 
					PQR_CustomTarget = custTars[i]
					useDisarm = true
			end
		end
end

--DisarmKey--
if disarmKey == 1
then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	useDisarm = true
end

--Complete the Disarm or Fear--
if useDisarm == true
and hasCC(PQR_CustomTarget) == nil
and isImmune(PQR_CustomTarget) == nil
then
 _castSpell(676,PQR_CustomTarget)
end


--EatTraps--
if eatFocusTraps == true
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
and UnitDebuffID(&amp;quot;focus&amp;quot;,19503) ~= nil
and poppedCDs(&amp;quot;player&amp;quot;) == nil
then
	CastSpellByName(GetSpellInfo(114029),&amp;quot;focus&amp;quot;)
end



--Hamstring--
if inMelee() == true
and ( 
	  isSlowed(&amp;quot;target&amp;quot;) ~= nil
	  or immuneToSlow(&amp;quot;target&amp;quot;) ~= nil
	  or getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	)
then
	shouldSlow = false
end


if shouldSlow == false
and UnitDebuffID(&amp;quot;target&amp;quot;,1715) ~= nil
then
	local hasHamstring, _, _, _, _, _, HendTimer = UnitDebuffID(&amp;quot;target&amp;quot;, 1715)
	if hasHamstring ~= nil then
		if HendTimer - GetTime() &amp;lt; 1 then
			return true
		end
	end
end
		
if inMelee() == true 
and shouldSlow == true
then 
_castSpell(1715) 
end


--Safeguard to banner--
if select(2,GetTotemInfo(1)) ~= nil
and ( mockingBannerKey ~= nil or demoBannerKey ~= nil )
then
TargetUnit(select(2,GetTotemInfo(1)))
_castSpell(3411,&amp;quot;target&amp;quot;)
end

--MockingBanner Throw--
if cdRemains(114192) == 0
and mockingBannerKey ~= nil
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114192))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114192)
end

--DemoBanner Throw--
if cdRemains(114203) == 0
and demoBannerKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114203))
		if SpellIsTargeting() ~= nil
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114203)
end


--Heroic Leap--
if cdRemains(6544) == 0
and heroicLeapKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(6544))
	if SpellIsTargeting() ~= nil
	then 
		CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop()
		end
		_castSpell(6544)
end


if inMelee() == true
then
	--BerserkerRage(DPS cd)--
	if breakFearWithZerk == false
	and UnitBuffID(&amp;quot;player&amp;quot;,12880) == nil
	then
		_castSpell(18499)
	end
	
	--PvP only execute--
	if getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	then 
	_castSpell(5308)
	end
	---------------------

	--VictoryRush--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 80
	and IsUsableSpell(34428) ~= nil
	then
		_castSpell(34428)
	end



	
	--HeroicStrike--
	if getHp(&amp;quot;target&amp;quot;) &amp;gt;= 20
	and UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) ~= nil
		then
			if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 110
			then _castSpell(78)
		 end
	end

	--MortalStrike--
	_castSpell(12294)

	
	--ColossusSmash--
	if ( cs == nil or csExp - GetTime() &amp;lt;= 1.5 )
	then 
	_castSpell(86346)
	end

	--Execute--
	if getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	then 
	_castSpell(5308)
	end

	--OverPower--
	if IsUsableSpell(7384) ~= nil
	then
		_castSpell(7384)
	end
	
	--DragonsRoar--
	if useDR == true
	then
	_castSpell(118000)
	end
	
	--Slam--
	if getHp(&amp;quot;target&amp;quot;) &amp;gt;= 20
	and ( UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 70 or cs ~= nil )
	then
		_castSpell(1464)
	end
end
	


if inMelee() == true
then
	--BattleShout/CommandingShout--
	if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
	and cs == nil
	then
		if hasApBuff() == nil
		then
		_castSpell(6673)
		elseif hasApBuff() ~= nil
		then
		_castSpell(469)
		end
	end
	
	--Slam--
	if getHp(&amp;quot;target&amp;quot;) &amp;gt;= 20
	then 
		_castSpell(1464)
	end
	
	
	--BattleShout/CommandingShout--
	if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
	then
		if hasApBuff() == nil
		then
		_castSpell(6673)
		elseif hasApBuff() ~= nil
		then
		_castSpell(469)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Protection AOE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--vars
local shieldWall	= false
local sRcheck 		= false
local useDisarm		= false
local useFear		= false
local shouldSlow 	= false


--Flag--
if autoFlag == true
then
	local flag = { &amp;quot;Alliance Flag&amp;quot;, &amp;quot;Horde Flag&amp;quot;}
	for i=1,#flag do InteractUnit(flag[i]) end
end

--Defensives--
if inCombat()
then
	--ShieldWall--
	if ( autoShieldWall == true and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 35)
	or shieldWallKey == 1
	then 
	_castSpell(871)
	end
	
	--SpellReflect--
	for i=1, #custTars do
	if (autoSpellReflect == true
	and spellReflect(custTars[i]) == true)
	or reflectKey == 1
	then
		_castSpell(23920)
	end
	end
	
	--ShieldBlock--
	if inMelee()
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 95
	and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60
	then
		_castSpell(2565)
	end
	
	--ShieldBarrier--
	if inMelee() == nil
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 95
	and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60
	then
		_castSpell(112048)
	end
	
	--RallyingCry--
	if autoRally == true
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 25
	then 
	_castSpell(97462)
	end
	
		--HealthTrinket--
	if healthTrinket ~= nil
	and (healthTrinket == 13 or healthTrinket == 14) 
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 20
	and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,healthTrinket)==0
	then
		UseInventoryItem(healthTrinket)
	end
	
	--LastStand--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 15
	then 
	_castSpell(12975)
	end
	
		
end
--EndDefensives--


--MeleeDefensives--
if inMelee()
then
	--Demoralizing Shout--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 50
	then _castSpell(1160)
	end
	
	--VictoryRush--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 80
	and IsUsableSpell(34428)
	then
	_castSpell(34428)
	end
end
--EndMeleeDefensives--


--PvPFunctions--
--BreakFear--
if breakFearWithZerk == true
and hasCC(&amp;quot;player&amp;quot;) == true
	then
		_castSpell(18499)
	end

--IntimidatingShoutKey--
if fearKey == 1
then
	if UnitExists(&amp;quot;focus&amp;quot;) == 1
	and hasCC(&amp;quot;focus&amp;quot;) == nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
	then
		_castSpell(5246,&amp;quot;focus&amp;quot;)
	end
	
	if ( UnitExists(&amp;quot;focus&amp;quot;) == nil or UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == nil )
	and UnitExists(&amp;quot;target&amp;quot;) == 1
	and hasCC(&amp;quot;target&amp;quot;) == nil
	then
		_castSpell(5246,&amp;quot;target&amp;quot;)
	end
end

--ShockWaveKey--
if shockWaveKey == 1
then
	if IsPlayerSpell(46968)
	then
	_castSpell(46968)
	elseif IsPlayerSpell(46924)
	then
	_castSpell(46924)
	end
end


--stormBoltKey--
if stormBoltKey == 1
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and hasCC(&amp;quot;focus&amp;quot;) == nil
and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
then
	_castSpell(107570,&amp;quot;focus&amp;quot;)
end

if silenceKey == 1
and ( UnitExists(&amp;quot;focus&amp;quot;) == nil or UnitIsEnemy(&amp;quot;player&amp;quot;, unit) == nil )
and UnitExists(&amp;quot;target&amp;quot;) == 1
and hasCC(&amp;quot;target&amp;quot;) == nil
then
	_castSpell(107570)
end
	
	
--HealthStone--
if autoHealthStone == true
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 25
and GetItemCount(5512) &amp;gt; 0 
and select(2,GetItemCooldown(5512)) == 0
then
   UseItemByName(tostring(GetItemInfo(5512)))
end

--ShatteringThrow--
for i=1, #custTars do
if inCombat() == true
and isImmune(custTars[i]) ~= nil
and IsSpellInRange(GetSpellInfo(57755),custTars[i]) == 1
and UnitExists(custTars[i]) ~= nil
and PQR_IsMoving() == false
	then
		PQR_CustomTarget = custTars[i]
		_castSpell(64382,PQR_CustomTarget)
	end
end

--AutoDisarm--
if autoDisarm == true
then
		for i=1, #custTars do
			if inCombat()
				and autoDisarm == true
				and shouldDisarm(custTars[i]) ~= nil
				and rangeCheck(676,custTars[i]) == true
				then 
					PQR_CustomTarget = custTars[i]
					useDisarm = true
			end
		end
end

--DisarmKey--
if disarmKey == 1
then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	useDisarm = true
end

--Complete the Disarm or Fear--
if useDisarm == true
and hasCC(PQR_CustomTarget) == nil
and isImmune(PQR_CustomTarget) == nil
then
 _castSpell(676,PQR_CustomTarget)
end


--EatTraps--
if eatFocusTraps == true
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
and UnitDebuffID(&amp;quot;focus&amp;quot;,19503) ~= nil
and poppedCDs(&amp;quot;player&amp;quot;) == nil
then
	_castSpell(3411,&amp;quot;focus&amp;quot;)
end


--Hamstring--
if inMelee() == true
and ( 
	  isSlowed(&amp;quot;target&amp;quot;) ~= nil
	  or immuneToSlow(&amp;quot;target&amp;quot;) ~= nil
	  or getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	)
then
	shouldSlow = false
end


if shouldSlow == false
and UnitDebuffID(&amp;quot;target&amp;quot;,1715) ~= nil
then
	local hasHamstring, _, _, _, _, _, HendTimer = UnitDebuffID(&amp;quot;target&amp;quot;, 1715)
	if hasHamstring ~= nil then
		if HendTimer - GetTime() &amp;lt; 1 then
			return true
		end
	end
end
		
if inMelee() == true 
and shouldSlow == true
then 
_castSpell(1715) 
end


--Safeguard to banner--
if select(2,GetTotemInfo(1)) ~= nil
and ( mockingBannerKey ~= nil or demoBannerKey ~= nil )
then
TargetUnit(select(2,GetTotemInfo(1)))
_castSpell(3411,&amp;quot;target&amp;quot;)
end

--MockingBanner Throw--
if cdRemains(114192) == 0
and mockingBannerKey ~= nil
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114192))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114192)
end

--DemoBanner Throw--
if cdRemains(114203) == 0
and demoBannerKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114203))
		if SpellIsTargeting() ~= nil
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114203)
end


--Heroic Leap--
if cdRemains(6544) == 0
and heroicLeapKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(6544))
	if SpellIsTargeting() ~= nil
	then 
		CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop()
		end
		_castSpell(6544)
end




--OffensiveRotation--
if inMelee()
then
	if ( UnitBuffID(&amp;quot;player&amp;quot;,122510) or UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 90 )
	then
		_castSpell(845)
	end
	
	if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40
	then 
	_castSpell(85730)
	end
	
	_castSpell(6343)
	
	_castSpell(23922)
	
	_castSpell(6572)
	
	if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
	then
		if hasApBuff() == nil
		then
			_castSpell(6673)
		elseif hasApBuff() == true
		then
			_castSpell(469)
		end	
	end
	
	_castSpell(20243)
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Prot FC</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--vars
local shieldWall	= false
local sRcheck 		= false
local useDisarm		= false
local useFear		= false
local shouldSlow 	= false

--Flag--
if autoFlag == true
then
	local flag = { &amp;quot;Alliance Flag&amp;quot;, &amp;quot;Horde Flag&amp;quot;}
	for i=1,#flag do InteractUnit(flag[i]) end
end


--Defensives--
if inCombat()
then
	--ShieldWall--
	if ( autoShieldWall == true and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 35)
	or shieldWallKey == 1
	then 
	_castSpell(871)
	end
	
	--SpellReflect--
	for i=1, #custTars do
	if (autoSpellReflect == true
	and spellReflect(custTars[i]) == true)
	or reflectKey == 1
	then
		_castSpell(23920)
	end
	end
	
	--ShieldBlock--
	if inMelee()
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 95
	and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60
	then
		_castSpell(2565)
	end
	
	--ShieldBarrier--
	if inMelee() == nil
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 95
	and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60
	then
		_castSpell(112048)
	end
	
	--RallyingCry--
	if autoRally == true
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 25
	then 
	_castSpell(97462)
	end
	
		--HealthTrinket--
	if healthTrinket ~= nil
	and (healthTrinket == 13 or healthTrinket == 14) 
	and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 20
	and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,healthTrinket)==0
	then
		UseInventoryItem(healthTrinket)
	end
	
	--LastStand--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 15
	then 
	_castSpell(12975)
	end
end
--EndDefensives--

--MeleeDefensives--
if inMelee()
then
	--Demoralizing Shout--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 50
	then _castSpell(1160)
	end
	
	--VictoryRush--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 80
	and IsUsableSpell(34428)
	then
	_castSpell(34428)
	end
end
--EndMeleeDefensives--


--PvPFunctions--
--BreakFear--
if breakFearWithZerk == true
and hasCC(&amp;quot;player&amp;quot;) == true
	then
		_castSpell(18499)
	end


--IntimidatingShoutKey--
if fearKey == 1
then
	if UnitExists(&amp;quot;focus&amp;quot;) == 1
	and hasCC(&amp;quot;focus&amp;quot;) == nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
	then
		_castSpell(5246,&amp;quot;focus&amp;quot;)
	end
	
	if ( UnitExists(&amp;quot;focus&amp;quot;) == nil or UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == nil )
	and UnitExists(&amp;quot;target&amp;quot;) == 1
	and hasCC(&amp;quot;target&amp;quot;) == nil
	then
		_castSpell(5246,&amp;quot;target&amp;quot;)
	end
end

--ShockWaveKey--
if shockWaveKey == 1
then
	if IsPlayerSpell(46968)
	then
	_castSpell(46968)
	elseif IsPlayerSpell(46924)
	then
	_castSpell(46924)
	end
end


--stormBoltKey--
if stormBoltKey == 1
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and hasCC(&amp;quot;focus&amp;quot;) == nil
and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
then
	_castSpell(107570,&amp;quot;focus&amp;quot;)
end

if silenceKey == 1
and ( UnitExists(&amp;quot;focus&amp;quot;) == nil or UnitIsEnemy(&amp;quot;player&amp;quot;, unit) == nil )
and UnitExists(&amp;quot;target&amp;quot;) == 1
and hasCC(&amp;quot;target&amp;quot;) == nil
then
	_castSpell(107570)
end
	
--HealthStone--
if autoHealthStone == true
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 25
and GetItemCount(5512) &amp;gt; 0 
and select(2,GetItemCooldown(5512)) == 0
then
   UseItemByName(tostring(GetItemInfo(5512)))
end

--ShatteringThrow--
for i=1, #custTars do
if inCombat() == true
and isImmune(custTars[i]) ~= nil
and IsSpellInRange(GetSpellInfo(57755),custTars[i]) == 1
and UnitExists(custTars[i]) ~= nil
and PQR_IsMoving() == false
	then
		PQR_CustomTarget = custTars[i]
		_castSpell(64382,PQR_CustomTarget)
	end
end

--AutoDisarm--
if autoDisarm == true
then
		for i=1, #custTars do
			if inCombat()
				and autoDisarm == true
				and shouldDisarm(custTars[i]) ~= nil
				and rangeCheck(676,custTars[i]) == true
				then 
					PQR_CustomTarget = custTars[i]
					useDisarm = true
			end
		end
end

--DisarmKey--
if disarmKey == 1
then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	useDisarm = true
end

--Complete the Disarm or Fear--
if useDisarm == true
and hasCC(PQR_CustomTarget) == nil
and isImmune(PQR_CustomTarget) == nil
then
 _castSpell(676,PQR_CustomTarget)
end


--EatTraps--
if eatFocusTraps == true
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
and UnitDebuffID(&amp;quot;focus&amp;quot;,19503) ~= nil
and poppedCDs(&amp;quot;player&amp;quot;) == nil
then
	_castSpell(3411,&amp;quot;focus&amp;quot;)
end


--Hamstring--
if inMelee() == true
and ( 
	  isSlowed(&amp;quot;target&amp;quot;) ~= nil
	  or immuneToSlow(&amp;quot;target&amp;quot;) ~= nil
	  or getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	)
then
	shouldSlow = false
end


if shouldSlow == false
and UnitDebuffID(&amp;quot;target&amp;quot;,1715) ~= nil
then
	local hasHamstring, _, _, _, _, _, HendTimer = UnitDebuffID(&amp;quot;target&amp;quot;, 1715)
	if hasHamstring ~= nil then
		if HendTimer - GetTime() &amp;lt; 1 then
			return true
		end
	end
end
		
if inMelee() == true 
and shouldSlow == true
then 
_castSpell(1715) 
end


--Safeguard to banner--
if select(2,GetTotemInfo(1)) ~= nil
and ( mockingBannerKey ~= nil or demoBannerKey ~= nil )
then
TargetUnit(select(2,GetTotemInfo(1)))
_castSpell(3411,&amp;quot;target&amp;quot;)
end

--MockingBanner Throw--
if cdRemains(114192) == 0
and mockingBannerKey ~= nil
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114192))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114192)
end

--DemoBanner Throw--
if cdRemains(114203) == 0
and demoBannerKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114203))
		if SpellIsTargeting() ~= nil
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114203)
end


--Heroic Leap--
if cdRemains(6544) == 0
and heroicLeapKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(6544))
	if SpellIsTargeting() ~= nil
	then 
		CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop()
		end
		_castSpell(6544)
end


--SingleTarProt--
if inMelee()
then
	
	if ( UnitBuffID(&amp;quot;player&amp;quot;,122510) or UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 90 )
	then
		_castSpell(78)
	end
	
	if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40
	then 
	_castSpell(85730)
	end
	
	if UnitDebuffID(&amp;quot;target&amp;quot;,115798) == nil
	then
	_castSpell(6343)
	end
	
	_castSpell(23922)
	
	_castSpell(6572)
	
	if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
	then
		if hasApBuff() == nil
		then
			_castSpell(6673)
		elseif hasApBuff() == true
		then
			_castSpell(469)
		end	
	end
	
	_castSpell(20243)
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms_PVP AOE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--vars
local shieldWall	= false
local sRcheck 		= false
local useDisarm		= false
local useFear		= false
local shouldSlow 	= true
local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)


--BreakFear--
if breakFearWithZerk == true
and hasCC(&amp;quot;player&amp;quot;) == true
	then
		_castSpell(18499)
	elseif breakFearWithZerk == true
	and hasCC(&amp;quot;player&amp;quot;) == true 
	and cdRemains(18499) &amp;gt; 0 and cdRemains(18499) &amp;lt;= 28
	then
		_castSpell(7744)
	end
	
--AvatarBreakRootWhilePoppedCDs--
if	poppedCDs(&amp;quot;player&amp;quot;) == true
and hasRoot(&amp;quot;player&amp;quot;) == true
then
		_castSpell(107574)
end


--IntimidatingShoutKey--
if fearKey == 1
then
	if UnitExists(&amp;quot;focus&amp;quot;) == 1
	and hasCC(&amp;quot;focus&amp;quot;) == nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
	then
		_castSpell(5246,&amp;quot;focus&amp;quot;)
	end
	
	if ( UnitExists(&amp;quot;focus&amp;quot;) == nil or UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == nil )
	and UnitExists(&amp;quot;target&amp;quot;) == 1
	and hasCC(&amp;quot;target&amp;quot;) == nil
	then
		_castSpell(5246,&amp;quot;target&amp;quot;)
	end
end

--ShockWaveKey--
if shockWaveKey == 1
then
	if IsPlayerSpell(46968)
	then
	_castSpell(46968)
	elseif IsPlayerSpell(46924)
	then
	_castSpell(46924)
	end
end


--stormBoltKey--
if stormBoltKey == 1
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and hasCC(&amp;quot;focus&amp;quot;) == nil
and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) ~= nil
then
	_castSpell(107570,&amp;quot;focus&amp;quot;)
end


--HealthStone--
if autoHealthStone == true
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 25
and GetItemCount(5512) &amp;gt; 0 
and select(2,GetItemCooldown(5512)) == 0
then
   UseItemByName(tostring(GetItemInfo(5512)))
end


--RallyingCry--
if inCombat() == true 
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 30
and autoRally == true
then 
_castSpell(97462)
end


--SpellReflect--
for i=1, #custTars do
if (autoSpellReflect == true
and spellReflect(custTars[i]) == true)
or reflectKey == 1
then
	sRcheck = true
end
end
if sRcheck == true
and cdRemains(23920) == 0
and UnitBuffID(&amp;quot;player&amp;quot;,23920) == nil
then
	if UseEquipmentSet(&amp;quot;ShieldSet&amp;quot;) ~= nil
		then
		CastSpellByName(GetSpellInfo(23920),nil)
		return true
	end
end

--ShieldWall--
if ( inCombat() == true 
and cdRemains(871) == 0
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 35
and autoShieldWall == true ) 
or shieldWallKey == 1
then
	shieldWall = true
end

if shieldWall == true
and not UnitBuffID(&amp;quot;player&amp;quot;,871)
then
	if UseEquipmentSet(&amp;quot;ShieldSet&amp;quot;) ~= nil
		then
		CastSpellByName(GetSpellInfo(871),nil)
		return true
	end
end


--Switch Back to 2H--
if ( sRcheck == false or shieldWall == false )
and IsEquippedItemType(&amp;quot;shields&amp;quot;)
and UnitBuffID(&amp;quot;player&amp;quot;,23920) == nil
and UnitBuffID(&amp;quot;player&amp;quot;,871) == nil
then
	if UseEquipmentSet(&amp;quot;2HSet&amp;quot;) ~= nil
		then
		return true
	end
end


--DieByTheSword--
if inCombat()
and getHp(&amp;quot;player&amp;quot;) &amp;lt;= 50
and autoDieByTheSword == true
then
_castSpell(118038)
end

--ShatteringThrow--
for i=1, #custTars do
if inCombat() ~= nil
and isImmune(custTars[i]) ~= nil
and IsSpellInRange(GetSpellInfo(57755),custTars[i]) == 1
and UnitExists(custTars[i]) ~= nil
and PQR_IsMoving() == false
	then
		PQR_CustomTarget = custTars[i]
		_castSpell(64382,PQR_CustomTarget)
	end
end

--AutoDisarm--
if autoDisarm == true
then
		for i=1, #custTars do
			if inCombat()
				and autoDisarm == true
				and shouldDisarm(custTars[i]) ~= nil
				and rangeCheck(676,custTars[i]) == true
				then 
					PQR_CustomTarget = custTars[i]
					useDisarm = true
			end
		end
end

--DisarmKey--
if disarmKey == 1
then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	useDisarm = true
end

--Complete the Disarm or Fear--
if useDisarm == true
and hasCC(PQR_CustomTarget) == nil
and isImmune(PQR_CustomTarget) == nil
then
 _castSpell(676,PQR_CustomTarget)
end


--EatTraps--
if eatFocusTraps == true
and UnitExists(&amp;quot;focus&amp;quot;) ~= nil
and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
and UnitDebuffID(&amp;quot;focus&amp;quot;,19503) ~= nil
and poppedCDs(&amp;quot;player&amp;quot;) == nil
then
	CastSpellByName(GetSpellInfo(114029),&amp;quot;focus&amp;quot;)
end



--Hamstring--
if inMelee() == true
and ( 
	  isSlowed(&amp;quot;target&amp;quot;) ~= nil
	  or immuneToSlow(&amp;quot;target&amp;quot;) ~= nil
	  or getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	)
then
	shouldSlow = false
end


if shouldSlow == false
and UnitDebuffID(&amp;quot;target&amp;quot;,1715) ~= nil
then
	local hasHamstring, _, _, _, _, _, HendTimer = UnitDebuffID(&amp;quot;target&amp;quot;, 1715)
	if hasHamstring ~= nil then
		if HendTimer - GetTime() &amp;lt; 1 then
			return true
		end
	end
end
		
if inMelee() == true 
and shouldSlow == true
then 
_castSpell(1715) 
end


--Safeguard to banner--
if select(2,GetTotemInfo(1)) ~= nil
and ( mockingBannerKey ~= nil or demoBannerKey ~= nil )
then
TargetUnit(select(2,GetTotemInfo(1)))
_castSpell(3411,&amp;quot;target&amp;quot;)
end

--MockingBanner Throw--
if cdRemains(114192) == 0
and mockingBannerKey ~= nil
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114192))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114192)
end

--DemoBanner Throw--
if cdRemains(114203) == 0
and demoBannerKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(114203))
		if SpellIsTargeting() ~= nil
		then 
			CameraOrSelectOrMoveStart()
			CameraOrSelectOrMoveStop()
		end
		_castSpell(114203)
end


--Heroic Leap--
if cdRemains(6544) == 0
and heroicLeapKey ~= nil 
and GetCurrentKeyBoardFocus() == nil
then
	CastSpellByName(GetSpellInfo(6544))
	if SpellIsTargeting() ~= nil
	then 
		CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop()
		end
		_castSpell(6544)
end


if inMelee() == true
then
	--BerserkerRage(DPS cd)--
	if breakFearWithZerk == false
	and UnitBuffID(&amp;quot;player&amp;quot;,12880) == nil
	then
		_castSpell(18499)
	end
	
	--PvP only execute--
	if getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	then 
	_castSpell(5308)
	end
	---------------------

	--VictoryRush--
	if getHp(&amp;quot;player&amp;quot;) &amp;lt;= 80
	and IsUsableSpell(34428) ~= nil
	then
		_castSpell(34428)
	end

	--SweepingStrikes--
	if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 30
	then
		_castSpell(12328)
	end

	
	--HeroicStrike--
	if getHp(&amp;quot;target&amp;quot;) &amp;gt;= 20
	and UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) ~= nil
		then
			if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 110
			then _castSpell(78)
			
		 end
	end

	--MortalStrike--
	_castSpell(12294)

	--Thunderclap--
	_castSpell(6343)
	
	--Cleave--
	_castSpell(845)
	
	--Whirlwind--
	_castSpell(1680)
	
	--ColossusSmash--
	if ( cs == nil or csExp - GetTime() &amp;lt;= 1.5 )
	then 
	_castSpell(86346)
	end

	--Execute--
	if getHp(&amp;quot;target&amp;quot;) &amp;lt; 20
	then 
	_castSpell(5308)
	end

	--OverPower--
	if IsUsableSpell(7384) ~= nil
	then
		_castSpell(7384)
	end
	
	--DragonsRoar--
	if useDR == true
	then
	_castSpell(118000)
	end
	
	--Slam--
	if getHp(&amp;quot;target&amp;quot;) &amp;gt;= 20
	and ( UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 70 or cs ~= nil )
	then
		_castSpell(1464)
	end
end
	


if inMelee() == true
then
	--BattleShout/CommandingShout--
	if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
	and cs == nil
	then
		if hasApBuff() == nil
		then
		_castSpell(6673)
		elseif hasApBuff() ~= nil
		then
		_castSpell(469)
		end
	end
	
	--Slam--
	if getHp(&amp;quot;target&amp;quot;) &amp;gt;= 20
	then 
		_castSpell(1464)
	end
	
	
	--BattleShout/CommandingShout--
	if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
	then
		if hasApBuff() == nil
		then
		_castSpell(6673)
		elseif hasApBuff() ~= nil
		then
		_castSpell(469)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>