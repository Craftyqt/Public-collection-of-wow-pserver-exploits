<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>Bloodthirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(2, GetSpellCooldown(23881)) == 0 then
	CastSpellByName(GetSpellInfo(23881), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Colossus Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(86346) and GetSpellCooldown(86346) == 0
 and vfive ~= &amp;quot;on&amp;quot;
 and not UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(86346), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Execute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local targetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 30 and targetHP &amp;lt;= 20 then
	CastSpellByName(GetSpellInfo(5308), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[] Functions []</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if modtime == nil then
	modtime = 0
end

if Nova_Mod() == CDTog and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if UseCD then
		UseCD = false
		PQR_WriteToChat(&amp;quot;Cooldowns: \124cFFE61515Disabled&amp;quot;)
	else
		UseCD = true
		PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Enabled&amp;quot;)
	end
end

if Nova_Mod() == AoETog and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if AoE then
		AoE = false
		PQR_WriteToChat(&amp;quot;Area of Effect: \124cFFE61515Disabled&amp;quot;)
	else
		AoE = true
		PQR_WriteToChat(&amp;quot;Area of Effect: \124cFF15E615Enabled&amp;quot;)
	end
end

function PQR_status()
	PQR_WriteToChat(&amp;quot;Current Cooldowns/AoE Status&amp;quot;)
	if UseCD then
		PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
	else
		PQR_WriteToChat(&amp;quot;Cooldowns: \124cFFE61515Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)
	end
	if AoE then
		PQR_WriteToChat(&amp;quot;Area of Effect: \124cFF15E615Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Area of Effect: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
	else
		PQR_WriteToChat(&amp;quot;Area of Effect: \124cFFE61515Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Area of Effect: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)
	end
end

--------------------
-- Slash Commands
--------------------
SLASH_STATUS1 = &amp;quot;/status&amp;quot;
SLASH_STATUS2 = &amp;quot;/pqrstatus&amp;quot;
function SlashCmdList.STATUS(msg, editbox)
	PQR_status()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local targetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if not AoE then
	if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10 and UnitBuffID(&amp;quot;player&amp;quot;, 131116) then
		CastSpellByName(GetSpellInfo(85288), &amp;quot;target&amp;quot;)
	end
elseif AoE then
	if WWspam == 1 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10 and UnitBuffID(&amp;quot;player&amp;quot;, 131116) then
		CastSpellByName(GetSpellInfo(85288), &amp;quot;target&amp;quot;)
	elseif WWspam ~= 1 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10 and UnitBuffID(&amp;quot;player&amp;quot;, 131116)
	 and select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85739)) == WWammount then
		CastSpellByName(GetSpellInfo(85288), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local targetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if targetHP &amp;gt; 20 then
	if UnitBuffID(&amp;quot;player&amp;quot;, 46916) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10 then
		CastSpellByName(GetSpellInfo(100130), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ( AoE and cleave ~= 1 ) or not AoE then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 85730) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 80 then
		CastSpellByName(GetSpellInfo(78), &amp;quot;target&amp;quot;)
	elseif UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40 then
		CastSpellByName(GetSpellInfo(78), &amp;quot;target&amp;quot;)
	else
		if select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85730)) == 3 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60 then
			CastSpellByName(GetSpellInfo(78), &amp;quot;target&amp;quot;)
		elseif select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85730)) == 2 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 50 then
			CastSpellByName(GetSpellInfo(78), &amp;quot;target&amp;quot;)
		elseif select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85730)) == 1 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40 then
			CastSpellByName(GetSpellInfo(78), &amp;quot;target&amp;quot;)
		end
	end
elseif AoE and cleave == 1 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 85730) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= cleaveRage then
		CastSpellByName(GetSpellInfo(845), &amp;quot;target&amp;quot;)
	else
		if select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85730)) == 3 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60 then
			CastSpellByName(GetSpellInfo(845), &amp;quot;target&amp;quot;)
		elseif select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85730)) == 2 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 50 then
			CastSpellByName(GetSpellInfo(845), &amp;quot;target&amp;quot;)
		elseif select(4, UnitBuffID(&amp;quot;player&amp;quot;, 85730)) == 1 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40 then
			CastSpellByName(GetSpellInfo(845), &amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[] Pause []</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if pauseCheck == 1 then
	if Nova_Mod() == pause
	or IsMounted()
	or SpellIsTargeting()
	or UnitBuffID(&amp;quot;player&amp;quot;,5384)
	or UnitInVehicle(&amp;quot;player&amp;quot;)
	or UnitIsDead(&amp;quot;target&amp;quot;) 
	or UnitIsDead(&amp;quot;player&amp;quot;)
	or UnitBuffID(&amp;quot;player&amp;quot;, 77769)
	or not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		return true
	end
elseif pauseCheck ~= 1 then
	return false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- idtips --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_LoadLua(&amp;quot;PQR_idTip_core.lua&amp;quot;) then
	PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_idTip_core.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
	PQR_RotationStop()
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Charge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Mod() == charge
 and chargeCheck
 and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(100), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Berserker Rage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local btstart, btduration = GetSpellCooldown(23881)

if not UnitBuffID(&amp;quot;player&amp;quot;, 12880) and ( btstart &amp;gt; 0 and btduration &amp;gt; 1.5 ) then
	if GetSpellCooldown(18499) == 0 then
		CastSpellByName(GetSpellInfo(18499), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Deadly Calm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpellCooldown(85730) == 0 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40 then
	CastSpellByName(GetSpellInfo(85730), &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Avatar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD and ava == 1 then
	if UnitBuffID(&amp;quot;player&amp;quot;, 114206) and GetSpellCooldown(107574) == 0 then
		CastSpellByName(GetSpellInfo(107574), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Skull Banner</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local recklessstart, duration = GetSpellCooldown(1719)

if UseCD and SB == 1 and t14b ~= 1 then
	if ( recklessstart &amp;gt; 0 and duration &amp;gt; 1.5 )
	 and (recklessstart + duration - GetTime()) &amp;gt; 240 then
		if GetSpellCooldown(114207) == 0 then
			CastSpellByName(GetSpellInfo(114207), &amp;quot;player&amp;quot;)
		end
	elseif (recklessstart + duration - GetTime()) &amp;lt;= 60 then
		if GetSpellCooldown(114207) == 0 then
			CastSpellByName(GetSpellInfo(114207), &amp;quot;player&amp;quot;)
		end
	end
elseif UseCD and SB ==1 and t14b == 1 then
	if UnitBuffID(&amp;quot;player&amp;quot;, 1719) then
		CastSpellByName(GetSpellInfo(114207), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Recklessness</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD and reck == 1 and t14b ~= 1 then
	if GetSpellCooldown(1719) == 0 then
		CastSpellByName(GetSpellInfo(1719), &amp;quot;player&amp;quot;)
	end
elseif UseCD and reck == 1 and t14b == 1 then
	if GetSpellCooldown(114207) == 0 then
		CastSpellByName(GetSpellInfo(1719), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Battle Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpellCooldown(6673) == 0 then
	CastSpellByName(GetSpellInfo(6673), &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Leap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Mod() == hl and HLCheck then
	if GetSpellCooldown(6544) == 0 then
		CastSpellByName(GetSpellInfo(6544))
		if SpellIsTargeting() then
			CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop()
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpellCooldown(57755) == 0 then
	CastSpellByName(GetSpellInfo(57755))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bladestorm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BS ~= 1 then
	return false
elseif BS == 1 and AoE then
	if GetSpellCooldown(46924) == 0 then
		CastSpellByName(GetSpellInfo(46924))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Whirlwind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ww, _, _, wwcount, _, _, wwtime = UnitBuffID(&amp;quot;player&amp;quot;, 85739)

if AoE and WW == 1 and WWspam ~= 1 then
	if not ww then
		CastSpellByName(GetSpellInfo(1680), &amp;quot;target&amp;quot;)
	elseif ww and wwcount ~= WWammount then
		CastSpellByName(GetSpellInfo(1680), &amp;quot;target&amp;quot;)
	else
		if ww and wwcount == WWammount and wwtime - GetTime() &amp;lt; 3 then
			CastSpellByName(GetSpellInfo(1680), &amp;quot;target&amp;quot;)
		end
	end
elseif AoE and WWspam == 1 then
	CastSpellByName(GetSpellInfo(1680), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[] Status []</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
	PQR_status()
	PQR_RotationStarted = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[] Nova Frame []</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Load LUA data files.
if PQR_RotationStarted == true then
	PQR_RotationStarted = false

	-- Tables
	Nova_ValueCheck = { 
		[1] =	{ Var1 = nil,		Text = &amp;quot;Survivability&amp;quot;,		Var2 = nil },
		[2] =	{ Var1 = 35,		Text = &amp;quot;Healthstone&amp;quot;,		Var2 = 1 },
		[3] =	{ Var1 = nil,		Text = &amp;quot;Cooldowns&amp;quot;,			Var2 = nil },
		[4] =	{ Var1 = nil,		Text = &amp;quot;Recklessness&amp;quot;,		Var2 = 1 },
		[5] =	{ Var1 = nil,		Text = &amp;quot;Skull Banner&amp;quot;,		Var2 = 1 },
		[6] =	{ Var1 = nil,		Text = &amp;quot;Teir 4 Talent&amp;quot;,		Var2 = nil },
		[7] =	{ Var1 = nil,		Text = &amp;quot;Dragon Roar&amp;quot;,		Var2 = 1 },
		[8] =	{ Var1 = nil,		Text = &amp;quot;Bladestorm&amp;quot;,		Var2 = 0 },
		[9] =	{ Var1 = nil,		Text = &amp;quot;Teir 6 Talent&amp;quot;,		Var2 = nil },
		[10] =	{ Var1 = nil,		Text = &amp;quot;Avatar&amp;quot;,			Var2 = 1 },
		[11] =	{ Var1 = nil,		Text = &amp;quot;Bloodbath&amp;quot;,			Var2 = 0 },	
		[12] =	{ Var1 = nil,		Text = &amp;quot;Area of Effect&amp;quot;,	Var2 = nil },
		[13] =	{ Var1 = 3,			Text = &amp;quot;Whirlwind&amp;quot;,			Var2 = 1 },
		[14] =	{ Var1 = nil,		Text = &amp;quot;Whirlwind Spam&amp;quot;,	Var2 = 0 },
		[15] =	{ Var1 = 80,		Text = &amp;quot;Cleave&amp;quot;,			Var2 = 1 },
		[16] =	{ Var1 = nil,		Text = &amp;quot;Other&amp;quot;,				Var2 = nil },
		[17] =	{ Var1 = nil,		Text = &amp;quot;Trinket 1&amp;quot;,			Var2 = 0 },
		[18] =	{ Var1 = nil,		Text = &amp;quot;Trinket 2&amp;quot;,			Var2 = 0 },
		[19] =	{ Var1 = nil,		Text = &amp;quot;Tinkered Gloves&amp;quot;,	Var2 = 0 },
		[20] =	{ Var1 = nil,		Text = &amp;quot;T14 4PC Bonus&amp;quot;,		Var2 = 0 }
		}
	Nova_CooldownCheck = {
		[1] =	{ Mod = 2,		Text = &amp;quot;Charge&amp;quot;,			Var1 = 1 },
		[2] =	{ Mod = 4,		Text = &amp;quot;Heroic Leap&amp;quot;,		Var1 = 1 },
		[3] =	{ Mod = 32,		Text = &amp;quot;AoE&amp;quot;,				Var1 = 1 },
		[4]	=	{ Mod =	16,		Text = &amp;quot;Cooldown Toggle&amp;quot;,	Var1 = 1 },
		[5] =	{ Mod = 1,		Text = &amp;quot;Pause Rotation&amp;quot;,	Var1 = 1 }
		}
	-- Load LUA files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Nova_Frame.lua&amp;quot;) == true then
			MiniMapCreation()
			-- Slash Commands
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck, &amp;quot;Fury War Options&amp;quot;, &amp;quot;Fury CD Settings&amp;quot;)
				end
				if not Nova_Frame:IsShown() then
					Nova_Frame:Show() else Nova_Frame:Hide()
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[] CVars []</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- CVar Registration
for i=1,#Nova_ValueCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1)
	end
	if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;, Nova_ValueCheck[i].Var2)
	end
end

for i=1,#Nova_CooldownCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;), Nova_CooldownCheck[i].Mod)
	end
	if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
	end
end

	--Cvar Translations
	--Enabled/Disabled
	hsenabled	= GetCVarBool(&amp;quot;Nova_Healthstone_Enabled&amp;quot;)
	reck		= GetCVarBool(&amp;quot;Nova_Recklessness_Enabled&amp;quot;)
	ava			= GetCVarBool(&amp;quot;Nova_Avatar_Enabled&amp;quot;)
	BB			= GetCVarBool(&amp;quot;Nova_Bloodbath_Enabled&amp;quot;)
	SB			= GetCVarBool(&amp;quot;Nova_Skull_Banner_Enabled&amp;quot;)
	DR			= GetCVarBool(&amp;quot;Nova_Dragon_Roar_Enabled&amp;quot;)
	BS			= GetCVarBool(&amp;quot;Nova_Bladestorm_Enabled&amp;quot;)
	WW			= GetCVarBool(&amp;quot;Nova_Whirlwind_Enabled&amp;quot;)
	WWspam		= GetCVarBool(&amp;quot;Nova_Whirlwind_Spam_Enabled&amp;quot;)
	cleave		= GetCVarBool(&amp;quot;Nova_Cleave_Enabled&amp;quot;)
	tr1			= GetCVarBool(&amp;quot;Nova_Trinket_1_Enabled&amp;quot;)
	tr2			= GetCVarBool(&amp;quot;Nova_Trinket_2_Enabled&amp;quot;)
	glove		= GetCVarBool(&amp;quot;Nova_Tinkered_Gloves_Enabled&amp;quot;)
	t14b		= GetCVarBool(&amp;quot;Nova_T14_4PC_Bonus_Enabled&amp;quot;)
	--Thresholds
	hsHealth	= tonumber(GetCVar(&amp;quot;Nova_Healthstone&amp;quot;))
	WWammount	= tonumber(GetCVar(&amp;quot;Nova_Whirlwind&amp;quot;))
	cleaveRage	= tonumber(GetCVar(&amp;quot;Nova_Cleave&amp;quot;))
	-- Cooldowns
	charge		= tonumber(GetCVar(&amp;quot;Nova_Charge&amp;quot;))
	hl			= tonumber(GetCVar(&amp;quot;Nova_Heroic_Leap&amp;quot;))
	AoETog		= tonumber(GetCVar(&amp;quot;Nova_AoE&amp;quot;))
	CDTog		= tonumber(GetCVar(&amp;quot;Nova_Cooldown_Toggle&amp;quot;))
	pause		= tonumber(GetCVar(&amp;quot;Nova_Pause_Rotation&amp;quot;))
	-- Cooldown Checks
	chargeCheck	= GetCVarBool(&amp;quot;Nova_Charge_Enabled&amp;quot;)
	HLCheck		= GetCVarBool(&amp;quot;Nova_Heroic_Leap_Enabled&amp;quot;)
	AoETogCheck	= GetCVarBool(&amp;quot;Nova_AoE_Enabled&amp;quot;)
	CDTogCheck	= GetCVarBool(&amp;quot;Nova_Cooldown_Toggle_Enabled&amp;quot;)
	pauseCheck	= GetCVarBool(&amp;quot;Nova_Pause_Rotation_Enabled&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if hsenabled ~= 1 then
	return false
end

if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; hsHealth
 and select(3,GetItemCooldown(5512)) == 1 then
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[] Nova Mods []</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Nova_Mod = nil
function Nova_Mod()
	total = 0
	if IsLeftShiftKeyDown()
		and not GetCurrentKeyBoardFocus() then
			total = total + 1
	end
	if IsLeftControlKeyDown()
		and not GetCurrentKeyBoardFocus() then
			total = total + 2
	end
	if IsLeftAltKeyDown()
		and not GetCurrentKeyBoardFocus() then
			total = total + 4
	end
	if IsRightShiftKeyDown()
		and not GetCurrentKeyBoardFocus() then
			total = total + 8
	end
	if IsRightControlKeyDown()
		and not GetCurrentKeyBoardFocus() then
			total = total + 16
	end
	if IsRightAltKeyDown()
		and not GetCurrentKeyBoardFocus() then
			total = total + 32
	end
	return total
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if tr1 ~= 1 then
	return false
end

local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 13)

if Cooldown == 0 and
 Ready == 1 and
 UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
 UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
	UseInventoryItem(13)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if tr2 ~= 1 then
	return false
end

local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 14)

if Cooldown == 0 and
 Ready == 1 and
 UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
 UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
	UseInventoryItem(14)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tinkered Gloves</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if glove ~= 1 then
	return false
end

local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10)

if Cooldown == 0 and
 Ready == 1 and
 UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
 UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
	UseInventoryItem(10)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dragon Roar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if DR ~= 1 then
	return false
elseif DR == 1 then
	if GetSpellCooldown(118000) == 0 then
		CastSpellByName(GetSpellInfo(118000))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bloodbath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BB ~= 1 then
	return false
elseif BB == 1 then
	if ( UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) ~= nil
	 or ( ( UnitHealth(&amp;quot;target&amp;quot;)/UnitHealthMax(&amp;quot;target&amp;quot;) * 100 ) &amp;lt; 20 
	 and ( UnitBuffID(&amp;quot;player&amp;quot;,1719) ~= nil or GetSpellCooldown(1719) &amp;gt;=40 ) ) ) then
		CastSpellByName(GetSpellInfo(12292))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>