<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>&amp;lt;Start&amp;gt;</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
PlaySoundFile(&amp;quot;Sound\\\\Creature\\\\Ashbringer\\\\ASH_SPEAK_12.wav&amp;quot;)
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_WarriorSig.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_WarriorSig.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

if not macros then
macros = true
if not GetMacroInfo(&amp;quot;Storm Bolt&amp;quot;) then
CreateMacro(&amp;quot;Storm Bolt&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Storm Bolt\\n/StormB&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Shockwave&amp;quot;) then
CreateMacro(&amp;quot;Shockwave&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Shockwave\\n/ShockW&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;ThunderClap&amp;quot;) then
CreateMacro(&amp;quot;ThunderClap&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Thunder Clap\\n/Thunder&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Shouter&amp;quot;) then
CreateMacro(&amp;quot;Shouter&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Battle Shout\\n/Shouter&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Intervene&amp;quot;) then
CreateMacro(&amp;quot;Intervene&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Intervene\\n/Interveene&amp;quot;, 1)
end
end
	
 
--------------------
	-- Register CVars -- Shouter Interveene
	--------------------
	Nova_ValueCheck = {
		{	Var1 = 0,	Text = &amp;quot;StormB&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Thunder&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Interveene&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;ShoutSelect&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;ShockW&amp;quot;,			Var2 = nil		}		
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end

	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if not slash then
slash = true

-- revive pet
	SLASH_STORM1 = &amp;quot;/StormB&amp;quot;
	function SlashCmdList.STORM(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_StormB&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFStormB Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_StormB&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFStormB Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_StormB&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	SLASH_SHOCKW1 = &amp;quot;/ShockW&amp;quot;
	function SlashCmdList.SHOCKW(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_ShockW&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFShockW Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_ShockW&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFShockW Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_ShockW&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	SLASH_THUNDER1 = &amp;quot;/Thunder&amp;quot;
	function SlashCmdList.THUNDER(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Thunder&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFThunder Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Thunder&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFThunder Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Thunder&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	SLASH_SHOUTER1 = &amp;quot;/Shouter&amp;quot;
	function SlashCmdList.SHOUTER(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_ShoutSelect&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFShout = Command.&amp;quot;)
			SetCVar(&amp;quot;Nova_ShoutSelect&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Shout = Battle.&amp;quot;)
			SetCVar(&amp;quot;Nova_ShoutSelect&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	SLASH_INTERVEEN1 = &amp;quot;/Interveene&amp;quot;
	function SlashCmdList.INTERVEEN(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Interveene&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF On.&amp;quot;)
			SetCVar(&amp;quot;Nova_Interveene&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Off.&amp;quot;)
			SetCVar(&amp;quot;Nova_Interveene&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
end 
if (cdRemains(3411) &amp;gt; 2 or cdRemains(114029) &amp;gt; 2) 
and Nova_Interveene == 1 then
SetCVar(&amp;quot;Nova_Interveene&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF I CAN BREAK THESE CUFFS.&amp;quot;)
end 
if cdRemains(6343) &amp;gt; 2 
and Nova_Thunder == 1 then
SetCVar(&amp;quot;Nova_Thunder&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Thunder Engaged!.&amp;quot;)
end 
if cdRemains(107570) &amp;gt; 2 
and Nova_StormB == 1 then
SetCVar(&amp;quot;Nova_StormB&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF StormB Engaged!.&amp;quot;)
end 
if cdRemains(46968) &amp;gt; 2 
and Nova_ShockW == 1 then
SetCVar(&amp;quot;Nova_ShockW&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF ShockW Engaged!.&amp;quot;)
end  

-- OPTIONS -- 
AutoWallV = PQI_SigWar_AutoWall_value --AutoWall
AutoWallE  = PQI_SigWar_AutoWall_enable --AutoWall
AutoIntervene = PQI_SigWar_AutoIntervene_enable
AutoRallyE     = PQI_SigWar_AutoRally_enable
AutoRallyV     = PQI_SigWar_AutoRally_value
AutoShatterE   = PQI_SigWar_AutoShatter_enable
AutoDisarmE    = PQI_SigWar_AutoDisarm_enable
AutoSpellreflect = PQI_SigWar_AutoSpellreflect_enable
FearAuto         = PQI_SigWar_FocusFear_enable
Fearall2v2     = PQI_SigWar_Fearall3v3_enable
Fearall3v3    = PQI_SigWar_Fearall2v2_enable
FreezingR     = PQI_SigWar_ReflectTrap_enable
AutoFocus     = PQI_SigWar_AutoFocus_enable
AutoStanceE   = PQI_SigWar_AutoStance_enable
AutoStanceV   = PQI_SigWar_AutoStance_value
AutoDieBTSE   = PQI_SigWar_AutoDieBTS_enable
AutoDieBTSV   = PQI_SigWar_AutoDieBTS_value
AutoSlowMelee = PQI_SigWar_AutoSlowMelee_enable
ABerserkerE   = PQI_SigWar_AutoBerserker_enable
SurviveE      = PQI_SigWar_OMGDISARMREFLECT_enable                                 




--------------------------------------
--GroupInfo() 

--Keybinds
HeroKey              = PQI:IsHotkeys(PQI_SigWar_HeroicLeap_key) 
burstKey             = PQI:IsHotkeys(PQI_SigWar_BurstKey_key)
Fear                 = PQI:IsHotkeys(PQI_SigWar_FearKey_key)
shouttoggle          = PQI:IsHotkeys(PQI_SigWar_ShoutToggle_key)
bannerKey            = PQI:IsHotkeys(PQI_SigWar_BannerKey_key)
if not PQI_SigWar_BurstKey_enable then 
	burstKey				= IsMouseButtonDown(5)
else 
 	burstKey				= PQI:IsHotkeys(PQI_SigWar_BurstKey_key)
end
if not PQI_SigWar_FearKey_enable then 
	Fear			= IsMouseButtonDown(4)
else 
 	Fear			= PQI:IsHotkeys(PQI_SigWar_FearKey_key)
end


if not PQI_SigWar_Pause_enable then 
	PauseKey = false
end
if not PQI_SigWar_ShoutToggle_enable then 
	shouttoggle = false 
end


if Nova_ShoutSelect == 1
and shouty ~= 1
then 
shouty = 1
end
if Nova_ShoutSelect == 0
and shouty ~= 0
then
shouty = 0
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>&amp;lt;Start Fight&amp;gt;</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Rage                  = UnitPower(&amp;quot;player&amp;quot;)
PlayerHP              = UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100
TargetHP              = UnitHealth(&amp;quot;Target&amp;quot;) / UnitHealthMax(&amp;quot;Target&amp;quot;) * 100
interrupt()
if PauseKey
or IsMounted() 
--or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
--or Nova_StormB == 1
or (Nova_ShockW == 1 and IsPlayerSpell(46968))
--or UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
--or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
--or not UnitExists(&amp;quot;target&amp;quot;) 
then
	return true
end



local TFT, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 60503 )
if TFT == nil then TFT = 0 end
if Stack == nil then Stack = 0 end


if Stack == 5 then
goRage = 1
end
if Stack &amp;lt; 3 then
goRage = 0
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BattleShout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_ShoutSelect == 1
then
Shouut = 469
elseif Nova_ShoutSelect == 0 then 
Shouut = 6673
end


if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(Shouut)
and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 10 then 
_castSpell(Shouut)
end

if not HaveBuff(&amp;quot;player&amp;quot;,Shouut,0)
and PQR_SpellAvailable(Shouut)
then 
_castSpell(Shouut)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BerserkerRage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Delay = 0.5

if HaveDebuff(&amp;quot;player&amp;quot;,fear(),3)  
--or HaveBuff(&amp;quot;player&amp;quot;,6673,3)
and cdRemains(18499) == 0  then 
if CleanseTime == nil then
CleanseTime = GetTime() + Delay 
elseif GetTime() &amp;gt;= CleanseTime then
_castSpell(18499)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Disarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Delay2 = 0.7
if AutoDisarmE then
for i=1, #cTar do
if UnitExists(cTar[i]) 
and inRange(cTar[i],78)
and UnitIsPlayer(cTar[i])
and HaveBuff(cTar[i],disarmdmg(),3) 
and IsMelee(cTar[i]) 
and PQR_UnitFacing(&amp;quot;player&amp;quot;,cTar[i])
and not HaveBuff(cTar[i],iDMG(),0) 
and not HaveBuff(cTar[i],46924,0) 
and not HaveDebuff(cTar[i],dCC(),0)
then
if CleanseTime2 == nil then
CleanseTime2 = GetTime() + Delay2 
elseif GetTime() &amp;gt;= CleanseTime2 then
_castSpell(676, cTar[i])
end
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: CS</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- CS
local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)
local type= UnitCreatureType(&amp;quot;target&amp;quot;)
--if PQR_SpellAvailable(86346)
if GCDCheck(86346)
--and goRage == 0
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 50
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not (type == &amp;quot;Totem&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0) 
and ( not cs or csExp - GetTime() &amp;lt;= 1.5 ) then 
_castSpell(86346, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: MS</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local type= UnitCreatureType(&amp;quot;target&amp;quot;)
if GCDCheck(12294)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0)  
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitPower(&amp;quot;player&amp;quot;) &amp;lt;= 80
then 
_castSpell(12294, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: OP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GCDCheck(7384)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0)
--and not HaveBuff(&amp;quot;player&amp;quot;,1719) 
then 
_castSpell(7384, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: Slam</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (HaveBuff(&amp;quot;player&amp;quot;,107574) or UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;) ~= nil or Rage &amp;gt;= 80 )
and TargetHP &amp;gt; 20
and GCDCheck(1464)
and (Rage &amp;gt;= 30 or Rage &amp;gt;= 80)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0)
--and goRage == 0
then
_castSpell(1464, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: Heroic Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GCDCheck(78)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 120
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0)
then
    _castSpell(78, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: Execute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i])
and GCDCheck(5308) 
and inRange(cTar[i],78)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and not HaveBuff(cTar[i],iDMG(),0) 
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 20
and not HaveDebuff(cTar[i],iDebuff(),0) 
then
PQR_CustomTarget = cTar[i]
_castSpell(5308, PQR_CustomTarget)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Slow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoSlowMelee then

for i=1, #cTar do
if UnitExists(cTar[i])
and Rage &amp;gt; 10
--and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt;= 25 
and not isCCS(cTar[i])
and inRange(cTar[i],78)
and UnitIsPlayer(cTar[i])
and IsMelee(cTar[i]) 
and not UnitIsDeadOrGhost(cTar[i]) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])
and not HaveBuff(cTar[i],iSlow(),0)
and not HaveBuff(cTar[i],iDMG(),0)
and not HaveDebuff(cTar[i],iDebuff(),0) 
and not HaveDebuff(cTar[i],1715,0)
then 
_castSpell(1715, cTar[i]) 
end
end
end


if GCDCheck(1715)
and inRange(&amp;quot;target&amp;quot;,78)
and Rage &amp;gt; 10
and UnitIsPlayer(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and (not IsMelee(&amp;quot;target&amp;quot;) or not AutoSlowMelee)
and not isCCS(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iSlow(),0)
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0) 
then 
_castSpell(1715, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Heroic leap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMouseButtonDown(3)
or IsLeftAltKeyDown()  then

if IsSpellKnown(6544) 
 and not GetCurrentKeyBoardFocus()
  and not IsMouselooking()
then
	CastSpellByName(GetSpellInfo(6544))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() 
			return true
		end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key: Fear</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Fear then 
for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and CheckInteractDistance(cTar[i],3)
then
_castSpell(5246, cTar[i])
end
end
end

if FearAuto 
then
if UnitExists(&amp;quot;focus&amp;quot;)
and UnitName(&amp;quot;focus&amp;quot;) ~= UnitName(&amp;quot;Target&amp;quot;)
and CheckInteractDistance(&amp;quot;focus&amp;quot;,3)
and not HaveDebuff(&amp;quot;focus&amp;quot;,cccheck(),0)
then
_castSpell(5246, &amp;quot;focus&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Pummel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
	if UnitExists(cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt 
					and castTime &amp;gt;= 0.6 
					then
						PQR_CustomTarget = cTar[i]
							if select(2,GetSpellCooldown(6552)) == 0
							and inRange(cTar[i],6552)
							and not HaveBuff(&amp;quot;player&amp;quot;,46924,0) 
							and not HaveDebuff(PQR_CustomTarget,105771,3)
							then
							CastSpellByName(GetSpellInfo(6552),PQR_CustomTarget)
							PQR_DelayRotation(.5)
							return true
						end
						if (( select(2,GetSpellCooldown(6552)) ~= 0 or HaveBuff(&amp;quot;player&amp;quot;,46924,0))
							or IsSpellInRange(GetSpellInfo(6552),PQR_CustomTarget) == 0) 
							and select(2,GetTalentRowSelectionInfo(3)) == 9
							and not HaveDebuff(PQR_CustomTarget,105771,3)
							and CheckInteractDistance(PQR_CustomTarget,3)
								then
								CastSpellByName(GetSpellInfo(102060),PQR_CustomTarget)
								PQR_DelayRotation(.5)
								return true
								
						end
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
							if select(2,GetSpellCooldown(6552)) == 0
							and inRange(cTar[i],6552)
							and not HaveBuff(&amp;quot;player&amp;quot;,46924,0) 
							then
							CastSpellByName(GetSpellInfo(6552),PQR_CustomTarget)
							PQR_DelayRotation(.5)
							return true
						end
						if (( select(2,GetSpellCooldown(6552)) ~= 0 or HaveBuff(&amp;quot;player&amp;quot;,46924,0))
							or IsSpellInRange(GetSpellInfo(6552),PQR_CustomTarget) == 0)
							and select(2,GetTalentRowSelectionInfo(3)) == 9
							and not HaveDebuff(PQR_CustomTarget,105771,3)
							and CheckInteractDistance(PQR_CustomTarget,3)
								then
								CastSpellByName(GetSpellInfo(102060),PQR_CustomTarget)
								PQR_DelayRotation(.5)
								return true
						end
					end
				end
			end
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Rallying Cry</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoRallyE then

if not PartyTargets
then
	PartyTargets = {&amp;quot;player&amp;quot;,&amp;quot;party1&amp;quot;,&amp;quot;party2&amp;quot;,&amp;quot;party3&amp;quot;,&amp;quot;party4&amp;quot;,&amp;quot;party5&amp;quot;}
end

for j=1 , #PartyTargets do
	if UnitExists(PartyTargets[j])
	and cdRemains(97462) == 0 
	and UnitIsFriend(&amp;quot;player&amp;quot;, PartyTargets[j])
	and getHp(PartyTargets[j]) &amp;lt; AutoRallyV
	and UnitIsPlayer(PartyTargets[j])
    and not UnitIsDeadOrGhost(PartyTargets[j])
    and (CheckInteractDistance(PartyTargets[j],1) or UnitName(PartyTargets[j]) == UnitName(&amp;quot;player&amp;quot;))
	--and (PQR_UnitDistance(&amp;quot;player&amp;quot;, PartyTargets[j])
	then
	_castSpell(97462)
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Shatter</Name><Default>false</Default><SpellID>64382</SpellID><Actions></Actions><Lua>if AutoShatterE then
if UnitExists(&amp;quot;target&amp;quot;)
 and HaveBuff(&amp;quot;target&amp;quot;,iDispel(),1)
and not PQR_IsMoving(0.1)
	then
	return true
	end
	end
	
	--64382</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Shield Wall</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoWallE then
if PlayerHP &amp;lt; AutoWallV
and cdRemains(871) == 0 
and not UnitBuffID(&amp;quot;player&amp;quot;, 118038)
then
_castSpell(871)  
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Stance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoStanceE then

if not IsSpellKnown(12975)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PlayerHP &amp;lt; AutoStanceV
and GetShapeshiftForm() ~= 2
then
	CastShapeshiftForm(2)
end

if not IsSpellKnown(12975)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PlayerHP &amp;gt; AutoStanceV + 10
and GetShapeshiftForm() ~= 1
then
	CastShapeshiftForm(1)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>auto banner charge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not interveneSpell then interveneSpell = 0 end
if IsSpellKnown(114029) then interveneSpell=114029 else interveneSpell = 3411 end

if cdRemains(114192) == 0 
then bannerspell = 114192 
elseif cdRemains(114192) &amp;lt; 170 
then bannerspell = 114203 
end


if bannerKey 
or Nova_Interveene == 1
and cdRemains(interveneSpell) == 0
then
BannerName = &amp;quot;&amp;quot;..GetSpellInfo(bannerspell)
_castSpell(interveneSpell)
InteractUnit(BannerName)
end

if bannerKey
or Nova_Interveene == 1
and UnitName(&amp;quot;target&amp;quot;) == BannerName
and cdRemains(interveneSpell) ~= 0 
then
TargetLastTarget()
end

if PQR_SpellAvailable(bannerspell)
and cdRemains(interveneSpell) == 0
and (bannerKey or Nova_Interveene == 1)
  and not GetCurrentKeyBoardFocus()
    and not IsMouselooking() then 
	CastSpellByName(GetSpellInfo(bannerspell))
	if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop()
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key: CD</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey then


--Trinkets
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 
	and inMelee()
    then  
			UseInventoryItem(13)
			CastSpellByName(GetSpellInfo(20572),nil) 
			RunMacroText(&amp;quot;/use Potion of Mogu Power&amp;quot;) 
			end
	
	--racial
	
--	if PQR_SpellAvailable(20572)
--	and inMelee() 
--	then 
--	_castSpell(20572)  
--	end

    -- avatar
    if IsPlayerSpell(107574)
    and PQR_SpellAvailable(107574)
    and inMelee() 
    then 
		_castSpell(107574)
		end
	if IsPlayerSpell(12292)	
	and PQR_SpellAvailable(12292)
    and inMelee() 
    then 
		_castSpell(12292)
		end


	
	-- Reck
	if PQR_SpellAvailable(1719)
	and inMelee()
	then
		_castSpell(1719)  
	end
	
	--banner
	if PQR_SpellAvailable(114207)
	and inMelee() 
	then 
		_castSpell(114207)
	end
	
	--Dragon Roar
	if IsPlayerSpell(118000)	
		and PQR_SpellAvailable(118000)
		and inMelee() 
	    then 
		_castSpell(118000)
	end
	
	--Blade storm
	if IsPlayerSpell(46924)
		and PQR_SpellAvailable(46924)
		and inMelee() 
		then 
		_castSpell(46924)
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Spellreflect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoSpellreflect then
local InterruptSpells = { 

118,		-- Polymorph
61305,		-- Polymorph: Black Cat
28272,		-- Polymorph: Pig
61721,		-- Polymorph: Rabbit
61780,		-- Polymorph: Turkey
28271,		-- Polymorph: Turtle
33786, 		-- Cyclone
113506, 	-- Cyclone
20066,		-- Repentance
51514,		-- Hex

}





if ( select(2,GetSpellCooldown(114028))) == 0 then
	for y=1, #custTars do 
		if UnitExists(custTars[y]) 
		and not HaveBuff(custTars[y],114107,0) 
		then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName then
					if select(2, Nova_CastingInfo(custTars[y])) &amp;gt;= 50 then
					_castSpell(114028)
					--CastSpellByName(GetSpellInfo(114028))
					end
				end
			end
		end
	end
end
end
if AutoSpellreflect then

local InterruptSpells = { 

116,
118,		-- Polymorph
61305,		-- Polymorph: Black Cat
28272,		-- Polymorph: Pig
61721,		-- Polymorph: Rabbit
61780,		-- Polymorph: Turkey
28271,		-- Polymorph: Turtle
33786, 		-- Cyclone
113506, 	-- Cyclone
20066,		-- Repentance
51514,		-- Hex

}

if ( select(2,GetSpellCooldown(23920))) == 0 then
	for y=1, #custTars do 
		if UnitExists(custTars[y]) 
		and not HaveBuff(custTars[y],114107,0) 
		then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName then
					if select(2, Nova_CastingInfo(custTars[y])) &amp;gt;= 65
					and not UnitBuffID(&amp;quot;player&amp;quot;,114028) then
					_castSpell(23920)
					--CastSpellByName(GetSpellInfo(23920))
					end
				end
			end
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: Victory rush</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(34428) then
_castSpell(34428, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Staggering shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(107566) then
if PQR_SpellAvailable(107566)
and isSlowed(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iSlow(),0)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not CheckInteractDistance(&amp;quot;target&amp;quot;,2)
then 
_castSpell(107566) 
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key: Storm bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_StormB == 1
and IsPlayerSpell(107570)
--and GCDCheck(107570)
and UnitExists(&amp;quot;focus&amp;quot;)
and not LineOfSight(&amp;quot;focus&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;)
and not HaveDebuff(&amp;quot;focus&amp;quot;,cccheck(),0)
then
_castSpell(107570, &amp;quot;focus&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key:Shockwave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_ShockW == 1
and IsPlayerSpell(46968)
then
_castSpell(46968)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TrapBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FreezingR then

if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if cdRemains(114028) == 0 
			then
				local spellId = select(12, ...)
				local listId = {
					1499, --Freezing Trap
					60192 --Freezing Trap
				}
				for j = 1, #listId do
				if listId[j] == spellId then
					for i=1, #cTar do
           			if UnitExists(cTar[i])
            		and UnitGUID(cTar[i]) == sourceGUID
            		and UnitCanAttack(&amp;quot;player&amp;quot;, cTar[i])
            		and PQR_UnitDistance(&amp;quot;player&amp;quot;, cTar[i]) &amp;lt; 20
            		then
					_castSpell(114028)
					end
				end
			end
		end
	end
end
end  
end
JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoFocus
then
for j=1 , #cTar do
if not UnitExists(&amp;quot;focus&amp;quot;) 
and UnitExists(cTar[j])
and not UnitIsDeadOrGhost(cTar[j])
and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
and UnitIsPlayer(cTar[j])
and IsHealer(cTar[j])
and rangeCheck(57755,cTar[j])
then
FocusUnit(cTar[j])
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto DBTS</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoDieBTSE then
if PlayerHP &amp;lt; AutoDieBTSV
and cdRemains(118038) == 0 
then
_castSpell(118038)  
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key:ThunderClap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Thunder == 1
then
_castSpell(6343)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Berserker</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ABerserkerE then
if UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;) ~= nil
and Rage &amp;gt;= 25
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not HaveDebuff(&amp;quot;target&amp;quot;,iDebuff(),0)
then
_castSpell(18499)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Survive</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SurviveE
and PlayerHP &amp;lt;= 55
then
if not GladiusBear then
	GladiusBear = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	GladiusBear:Hide()
end

function GladiusBear_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
					51505,	 	-- Lava Burst
					116858,		--Chaos Bolt
					113092, 	--Frost Bomb
					48181, 		--Haunt
					78674,      -- starsurge
					102051, 		--Frost Jaw
					2944,          --devouring-plague
                    117014,		--Elemental Blast
					12058,       --test
					77160,       --test2
				}
				for i = 1, #listId do
					if listId[i] == spellId 
					and (cdRemains(23920) == 0 or cdRemains(114028) == 0 )
					then
						Helper123 = 1
						end
				end
			end
		end
	end
end

GladiusBear:SetScript(&amp;quot;OnEvent&amp;quot;, GladiusBear_OnEvent)
GladiusBear:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)


if Grondcaster == nil then Grondcaster = 23920 end
if cdRemains(23920) == 0 
then
Grondcaster = 23920
end
if IsPlayerSpell(114028) 
and cdRemains(23920) ~= 0 
then
Grondcaster = 114028
end 
if Helper123 == nil then Helper123 = notset end
if Helper123 == 1
and cdRemains(Grondcaster) == 0 
then
_castSpell(Grondcaster)
end


for i=1, #cTar do
if UnitExists(cTar[i]) 
and inRange(cTar[i],78)
and UnitIsPlayer(cTar[i])
and IsMelee(cTar[i]) 
and PQR_UnitFacing(&amp;quot;player&amp;quot;,cTar[i])
and not HaveBuff(cTar[i],iDMG(),0) 
and not HaveBuff(cTar[i],46924,0) 
and not HaveDebuff(cTar[i],dCC(),0)
then
_castSpell(676, cTar[i])
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TBrain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>function xelperFrame_OnEvent(self,event,...)

    --Combat log events
    if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then    
        local SubEvent = select(2, ...)
        local SourceName = select(5, ...)
        local DestName = select(9, ...)
        local SpellID = select(12, ...)
        local SpellName = select(13, ...)
        local ExtraSpellID = select(15, ...)
        local ExtraSpellName = select(16, ...)
        
        if SubEvent == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
            if SourceName == UnitName(&amp;quot;player&amp;quot;) then
                if SpellID == 23920 
                or SpellID == 114028				
                then
                    Helper123 = 0
                end
                if SpellID == 18499 
				then
				CleanseTime = nil
				end
				if SpellID == 676
				then
				CleanseTime2 = nil
				end
            end 
        end
    end
end

if PQR_LoadEventFrame == nil then
    PQR_LoadEventFrame = true

    xelperFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
    xelperFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
    xelperFrame:SetScript(&amp;quot;OnEvent&amp;quot;, xelperFrame_OnEvent)
    xelperFrame:Show()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>