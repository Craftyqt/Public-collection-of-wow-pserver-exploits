<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>MortalStrike</Name><Default>false</Default><SpellID>12294</SpellID><Actions>/startattack</Actions><Lua>if GCDCheck(7386)
 and inMelee== 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)  
--and UnitIsEnemy(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BerserkerRage</Name><Default>false</Default><SpellID>18499</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;player&amp;quot;,fear(),5)  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemStomp</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local typem= UnitCreatureType(&amp;quot;mouseover&amp;quot;)

if UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and typem == &amp;quot;Totem&amp;quot;
then
	CastSpellByName(GetSpellInfo(12294),&amp;quot;mouseover&amp;quot;)
	CastSpellByName(GetSpellInfo(78),&amp;quot;mouseover&amp;quot;)
	CastSpellByName(GetSpellInfo(7384),&amp;quot;mouseover&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hamstring</Name><Default>false</Default><SpellID>1715</SpellID><Actions>/startattack</Actions><Lua>if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 200000 
and GCDCheck(1715)
and inMelee==1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitIsPlayer(&amp;quot;target&amp;quot;) 
--and HaveDebuff(&amp;quot;player&amp;quot;,aSRS(),0)
and not HaveDebuff(&amp;quot;target&amp;quot;,aSRS(),.9)
and not HaveBuff(&amp;quot;target&amp;quot;,iSlow(),0)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Overpower</Name><Default>false</Default><SpellID>7384</SpellID><Actions>/startattack</Actions><Lua>local type= UnitCreatureType(&amp;quot;target&amp;quot;)
if GCDCheck(7384)
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCreatureType(&amp;quot;target&amp;quot;) == &amp;quot;Totem&amp;quot;
then return true
end
if GCDCheck(7384)
 and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
 and inMelee == 1
and (goRage == 1 or HaveBuff(&amp;quot;player&amp;quot;,139958,0))
and (not HaveDebuff(&amp;quot;target&amp;quot;,86346,0,&amp;quot;player&amp;quot;) or  UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 30  or HaveBuff(&amp;quot;player&amp;quot;,139958,0) or HaveBuff(&amp;quot;target&amp;quot;,5277,0))
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
then return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ThunderClap</Name><Default>false</Default><SpellID>6343</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
 and GCDCheck(7386)
 and UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;totem&amp;quot;
and not UnitDebuffID(&amp;quot;target&amp;quot;,115767)
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt;= 40
and 100 * UnitHealth(&amp;quot;targettarget&amp;quot;) / UnitHealthMax(&amp;quot;targettarget&amp;quot;) &amp;lt;= 65
and UnitPowerMax(&amp;quot;target&amp;quot;) &amp;lt;= 61000) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 

then return true end

if --inMelee == 1
--and
 (Nova_AoE==1 or warrioraoe )
then return true end

for i = 1, #cTar do
if UnitExists(cTar[i])
 and GCDCheck(6343)
  and UnitCreatureType(cTar[i]) ~= &amp;quot;totem&amp;quot;
and ecTar[i].Range &amp;lt; 10
and not HaveBuff(cTar[i],iDMG(),0)
and not HaveDebuff(cTar[i],115767,0)
and not ccUnits(10)
then
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DragonRoar</Name><Default>false</Default><SpellID>118000</SpellID><Actions>/startattack</Actions><Lua>if (drsb or
Nova_SBS == 1)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),-1,1)  then
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HeroicLeap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsSpellKnown(6544)
and GCDCheck(6544)
and heroicleap 
 and not GetCurrentKeyBoardFocus()
  and not IsMouselooking()
then
	CastSpellByName(GetSpellInfo(6544))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() 
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ColossusSmash</Name><Default>false</Default><SpellID>86346</SpellID><Actions>/startattack</Actions><Lua>local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)


if inMelee == 1
 and GCDCheck(7386)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 and (UnitHealth(&amp;quot;target&amp;quot;) == 1 or UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;totem&amp;quot;)
and (UnitIsPlayer(&amp;quot;target&amp;quot;) or UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 200000 or UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 2 )
and ( not cs or csExp - GetTime() &amp;lt;= 1.5 )
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and ( goRage == 1 or (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 20)

then if burstTarget == 0 then
if not IsSpellKnown(46924) then
	CastSpellByName(GetSpellInfo(12292),nil)
	end
	RunMacroText(&amp;quot;/use 13&amp;quot;)
	end
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Demoralizing Banner</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not interveneSpell then interveneSpell = 0 end

if IsSpellKnown(114029) then interveneSpell=114029 else interveneSpell =3411 end



if PQR_SpellAvailable(114192)
and GCDCheck(114192)
and GCDCheck(interveneSpell)
and bannercharge
  and not GetCurrentKeyBoardFocus()
    and not IsMouselooking() then 
	CastSpellByName(GetSpellInfo(114192))
	if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop()
	return true
end
end



if PQR_SpellAvailable(114203)
and GCDCheck(114203)
and GCDCheck(interveneSpell)
and bannercharge
and not GetCurrentKeyBoardFocus()
  and not IsMouselooking() then 
	CastSpellByName(GetSpellInfo(114203))
	if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() 
	return true
end
end

if bannercharge 
then
if GCDCheck(interveneSpell)
then
	RunMacroText(&amp;quot;/cleartarget&amp;quot;)
	RunMacroText(&amp;quot;/tar &amp;quot;..GetSpellInfo(114192))
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget)
	RunMacroText(&amp;quot;/tar &amp;quot;..GetSpellInfo(114203))
	CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget)
	return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HeroicStrike</Name><Default>false</Default><SpellID>78</SpellID><Actions>/startattack</Actions><Lua>local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)



if inMelee == 1
and GCDCheck(78)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)   
and ((UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 90
or ((100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 20 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60))
or HaveBuff(&amp;quot;player&amp;quot;,{122510,122016},0)))

then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Execute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and not HaveBuff(cTar[i],iDMG(),0) 
and GCDCheck(5308)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 30
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 20
and inRange(cTar[i],78)
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(18499),PQR_CustomTarget)
CastSpellByName(GetSpellInfo(5308),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shockwave</Name><Default>false</Default><SpellID>46968</SpellID><Actions>/startattack</Actions><Lua>if drsb or
Nova_SBS == 1
 then
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Slam</Name><Default>false</Default><SpellID>1464</SpellID><Actions>/startattack</Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 20
and GCDCheck(7386)
and inMelee == 1
and (goRage == 1 or HaveBuff(&amp;quot;player&amp;quot;,12328,0))
and not HaveBuff(&amp;quot;target&amp;quot;,5277,0)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 20
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and ( HaveDebuff(&amp;quot;target&amp;quot;,86346,0,&amp;quot;player&amp;quot;) or HaveBuff(&amp;quot;player&amp;quot;,12328,0)or UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 50)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RallyingCry</Name><Default>false</Default><SpellID>97462</SpellID><Actions></Actions><Lua>for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt; 30
and UnitIsPlayer(members[i])
and not HaveBuff(members[i],defBuff(),0.3)
and UnitAffectingCombat(members[i])
and not UnitBuffID(members[i],97462)
and eMembers[i].Range &amp;lt; 31
then
  return true 
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>&amp;gt; RDY</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  ----------------------------------
  -- Load Data Files
  ----------------------------------

	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_DATA.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Datafile loaded!&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_Settings.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Settings loaded!&amp;quot;)
		
	end
	PQR_RotationStarted = false
end

--------------------------

	--  Init --
-------------------------------------------------------------------
-- Credit goes to Team Nova for most of the Init and Frame setup --
-------------------------------------------------------------------
local numglobal,numperchar = GetNumMacros()
if numperchar &amp;lt; 18 then
if not GetMacroInfo(&amp;quot;AvailableMacros&amp;quot;) then
CreateMacro(&amp;quot;AvailableMacros&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;/FearFocus\\n/FearHealer\\n/SBS\\n/InterveneHealer\\n/AoE\\n/ShieldWallStun\\n/Defstance\\n/Battlestance\\n/Shout\\n/BurstTarget\\n/Pause&amp;quot;, 1)
end
end


	--------------------
	-- Register CVars --
	--------------------
--Cokx_ValueCheck={}
--	for i = 1, MAX_SKILLLINE_TABS do
 --  local name, texture, offset, numSpells = GetSpellTabInfo(i)
   
  -- if not name then
   --   break;
   --end
   
  -- for s = offset + 1, offset + numSpells do
   --   local	spell, rank = GetSpellInfo(s, BOOKTYPE_SPELL)
    --  
     -- if rank then
      --    spell = spell
       --   table.insert(Cokx_ValueCheck,{Var1 = 0, Text = spell, Var2=1})
 --     end
--   end
--end
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;FearFocus&amp;quot;,		 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;FearHealer&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;SBS&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;InterveneHealer&amp;quot;,		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AoE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;ShieldWallStun&amp;quot;,		Var2 = 1		}, 
		{	Var1 = 0,	Text = &amp;quot;Defstance&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Battlestance&amp;quot;, 			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Shout&amp;quot;, 				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;, 				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;BurstTarget&amp;quot;,			Var2 = 1		}		
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end



--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true

	
	SLASH_BURST1 = &amp;quot;/bursttarget&amp;quot;
	function SlashCmdList.BURST(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_BurstTarget&amp;quot;) then
		--	xrn:message(&amp;quot;\124cFF0000FFBurst Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFBurst Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	SLASH_FEARFOCUS1 = &amp;quot;/fearfocus&amp;quot;
	function SlashCmdList.FEARFOCUS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_FearFocus&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFFear Focus Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_FearFocus&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_FearHealer&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFFear Focus Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_FearFocus&amp;quot;, 0)
		end
	end
	
		SLASH_FEARHEALER1 = &amp;quot;/FearHealer&amp;quot;
	function SlashCmdList.FEARHEALER(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_FearHealer&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFFear Healer Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_FearHealer&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_FearFocus&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFFear Healer Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_FearHealer&amp;quot;, 0)
		end
	end
	
		SLASH_SBS1 = &amp;quot;/SBS&amp;quot;
	function SlashCmdList.SBS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_SBS&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFSBS Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_SBS&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFSBS Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_SBS&amp;quot;, 0)
		end
	end
	
		SLASH_INTERVENEHEALER1 = &amp;quot;/InterveneHealer&amp;quot;
	function SlashCmdList.INTERVENEHEALER(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_InterveneHealer&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFIntervene Healer Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_InterveneHealer&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFIntervene Healer Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_InterveneHealer&amp;quot;, 0)
		end
	end
	
	
		SLASH_AOE1 = &amp;quot;/AoE&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AoE&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFAoE Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_AoE&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFAoE Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_AoE&amp;quot;, 0)
		end
	end
	
		SLASH_SHIELDWALL1 = &amp;quot;/ShieldWallStun&amp;quot;
	function SlashCmdList.SHIELDWALL(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_ShieldWallStun&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFShield Wall on next Stun Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_ShieldWallStun&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFShield Wall on next Stun Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_ShieldWallStun&amp;quot;, 0)
		end
	end
	
			SLASH_DEF1 = &amp;quot;/Defstance&amp;quot;
	function SlashCmdList.DEF(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Defstance&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFDefstance activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_Defstance&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_Battlestance&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFAutomatic Stance Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_Defstance&amp;quot;, 0)
		end
	end
	
			SLASH_BATTLE1 = &amp;quot;/Battlestance&amp;quot;
	function SlashCmdList.BATTLE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Battlestance&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFBattlestance Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_Battlestance&amp;quot;, 1)
				SetCVar(&amp;quot;Nova_Defstance&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFAutomatic Stance Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_Battlestance&amp;quot;, 0)
		end
	end
	
		SLASH_SHOUT1 = &amp;quot;/Shout&amp;quot;
	function SlashCmdList.SHOUT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Shout&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFCommanding Shout Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_Shout&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFBattle Shout Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_Shout&amp;quot;, 0)
		end
	end
			SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then

			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
end
	
	
--------------------------
if getInfos == nil then
getInfos = 0
end
CastClick()
settings()
checks()
if  GetTime() - getInfos &amp;gt; 1 and (GCDCheck(5308)) then
getInfos = GetTime()
clearCEH()
if cTtimer == nil then cTtimer = 0
end
if GetTime() - cTtimer &amp;gt; 5 then
cTtimer = GetTime()
clearTables()
end
getcTar()
RangeCheckcTar()
clearcTar()
getmembers()
RangeCheckMembers()
clearmembers()
RangeCheckPet()
interrupt()
if GetItemCount(GetItemInfo(80618)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(57287))end

if GetItemCount(GetItemInfo(5512)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(58275))end
RunMacroText(&amp;quot;/run UIErrorsFrame:Clear()&amp;quot;)
end
GroupInfo()
cokxMacros()

if rotationPause == nil then rotationPause = 0 end

if Nova_Pause == 1 then
rotationPause = GetTime()
SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
end
if GetTime() - rotationPause &amp;lt; 0.3 then
if MacroSpellNumber ~= 0 and MacroUnitNumber ~= 0 and GCDCheck(MacroSpellNumber) then
CastSpellByName(GetSpellInfo(MacroSpellNumber),MacroCT)
return true
end
return true
end
SetCVar(&amp;quot;MacroSpell&amp;quot;, 0)
SetCVar(&amp;quot;MacroUnit&amp;quot;, 0)
SetCVar(&amp;quot;MacroHP&amp;quot;, 100)
SetCVar(&amp;quot;MacroDR&amp;quot;,nil)
SetCVar(&amp;quot;MacroBuff&amp;quot;,nil)
SetCVar(&amp;quot;MacroDebuff&amp;quot;,nil)

if not playerdpsinc then playerdpsinc = 0 end
if not playerdpssum then playerdpssum = 0 end
if not playerdpscalc then playerdpscalc = 0 end
if not sumDps then sumDps = 0 end
if not lastplayerhp then lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;) end

if modtime == nil then
	modtime = 0
end

if GetTime() - modtime &amp;gt; 1 then
	modtime = GetTime()
	playerdpsinc = lastplayerhp -UnitHealth(&amp;quot;player&amp;quot;)
	playerdpssum = playerdpssum + playerdpsinc
	lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;)
end

if avgmodtime == nil then
	avgmodtime = 0
end

if GetTime() - avgmodtime &amp;gt; 5 then
	avgmodtime = GetTime()
	sumDps = 0
	playerdpscalc = playerdpssum/5
	sumDps = playerdpscalc
	playerdpscalc = 0
	playerdpssum = 0
end




if numberfriends == 0 or numberfriends &amp;gt; #members then
numberfriends = #members or nil
end

local flag = { &amp;quot;&amp;quot;..GetSpellInfo(23335), &amp;quot;&amp;quot;..GetSpellInfo(23333) }

for _,v in ipairs(flag) do 
InteractUnit(v)end


if not inMelee then
inMelee = 0
end

if UnitExists(&amp;quot;target&amp;quot;) and inRange(&amp;quot;target&amp;quot;,78) then
inMelee = 1
else 
inMelee = 0
end

if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 65 
or (UnitExists(&amp;quot;target&amp;quot;) and CalculateHP(&amp;quot;target&amp;quot;) &amp;lt;= 50 and UnitIsPlayer(&amp;quot;target&amp;quot;))
or HaveBuff(&amp;quot;player&amp;quot;,{1719,114207,12292,107574},0) then
goRage = 1
end
if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 10 
then
goRage = 0
end

---------------

cokx:message(&amp;quot;Fear-F = &amp;quot;..onOff(Nova_FearFocus)..&amp;quot; | Fear-H = &amp;quot;..onOff(Nova_FearHealer)..&amp;quot; | Intervene-H = &amp;quot;..onOff(Nova_InterveneHealer)..&amp;quot; | AoE = &amp;quot;..onOff(Nova_AoE)..&amp;quot; | SW = &amp;quot;..onOff(Nova_ShieldWallStun)..&amp;quot;| Burst =&amp;quot;..onOff(Nova_BurstTarget)..&amp;quot; &amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pummel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
	if UnitExists(cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if GCDCheck(6552)
							and inRange(cTar[i],6552)
							and not HaveDebuff(PQR_CustomTarget,105771,3)
							then
							CastSpellByName(GetSpellInfo(6552),PQR_CustomTarget)
							PQR_DelayRotation(.5)
							return true
						end
						if ( select(2,GetSpellCooldown(6552)) ~= 0
							or IsSpellInRange(GetSpellInfo(6552),PQR_CustomTarget) == 0)
							and select(2,GetTalentRowSelectionInfo(3)) == 9
							and GCDCheck(102060)
							and not HaveDebuff(PQR_CustomTarget,105771,3)
							and CheckInteractDistance(PQR_CustomTarget,3)
								then
								CastSpellByName(GetSpellInfo(102060),PQR_CustomTarget)
								PQR_DelayRotation(.5)
								return true
								
						end
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if GCDCheck(6552)
							and inRange(cTar[i],6552)
							then
							CastSpellByName(GetSpellInfo(6552),PQR_CustomTarget)
							PQR_DelayRotation(.5)
							return true
						end
						if ( select(2,GetSpellCooldown(6552)) ~= 0
							or IsSpellInRange(GetSpellInfo(6552),PQR_CustomTarget) == 0)
							and select(2,GetTalentRowSelectionInfo(3)) == 9
							and GCDCheck(102060)
							and not HaveDebuff(PQR_CustomTarget,105771,3)
							and CheckInteractDistance(PQR_CustomTarget,3)
								then
								CastSpellByName(GetSpellInfo(102060),PQR_CustomTarget)
								PQR_DelayRotation(.5)
								return true
						end
					end
				end
			end
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
 and GCDCheck(676)
and UnitIsPlayer(cTar[i])
and ecTar[i].Facing
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and CokxDRInfo(cTar[i],&amp;quot;disarm&amp;quot;) &amp;lt; 1
and UnitPowerMax(cTar[i]) &amp;lt; 200000
and not HaveBuff(cTar[i],iDMG(),0) 
and HaveBuff(cTar[i],disarmdmg(),3) 
and not HaveBuff(cTar[i],46924,0)
and not HaveDebuff(cTar[i],dCC(),0)
and inRange(cTar[i],78)
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(676),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>VictoryRush</Name><Default>false</Default><SpellID>34428</SpellID><Actions>/startattack</Actions><Lua>local VictoryRushTime, _, _, _, _, _, VictoryRushExpireTime = UnitBuffID(&amp;quot;player&amp;quot;, 32216)

if inMelee == 1
 and GCDCheck(7386)
and IsUsableSpell(34428)
and VictoryRushTime ~= nil then
VictoryRushTime = VictoryRushExpireTime - GetTime()
if VictoryRushTime &amp;lt; 4 then
   return true
end


if inMelee == 1
 and GCDCheck(7386)
and IsUsableSpell(34428)
and UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100 &amp;lt; 75 then
return true
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not IsSpellKnown(12975)
and Nova_Defstance == 1
and Nova_Battlestance == 0
and GetShapeshiftForm() ~= 2
then
	CastShapeshiftForm(2)
end

if not IsSpellKnown(12975)
and GetShapeshiftForm() ~= 1
and Nova_Defstance == 0
and Nova_Battlestance == 1
then
	CastShapeshiftForm(1)
end



if not IsSpellKnown(12975)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 60
and Nova_Defstance == 0
and Nova_Battlestance == 0
and GetShapeshiftForm() ~= 2
then
	CastShapeshiftForm(2)
end

if not IsSpellKnown(12975)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;gt;= 80
and GetShapeshiftForm() ~= 1
and Nova_Defstance == 0
and Nova_Battlestance == 0
and sumDps &amp;lt;= 0
then
	CastShapeshiftForm(1)
end


farestEnemyUnit = farestEnemy(25,15)

if not GladiusBear then
	GladiusBear = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	GladiusBear:Hide()
end

function GladiusBear_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
					110698,		-- Hammer of Justice (Paladin)
					1330,		-- Garrote - Silence
					108194,		-- Asphyxiate
					22570,		-- Maim
					5211,		-- Mighty Bash
					9005,		-- Pounce
					102546,		-- Pounce (Incarnation)
					91800,		-- Gnaw
					91797,		-- Monstrous Blow (Dark Transformation)
					44572,		-- Deep Freeze
					119381,		-- Leg Sweep
					105593,		-- Fist of Justice
					853,		-- Hammer of Justice
					1833,		-- Cheap Shot
					408,		-- Kidney Shot
					30283,		-- Shadowfury
					89766,		-- Axe Toss (Felguard/Wrathguard)
					132168		-- Shockwave
					
				}
				for i = 1, #listId do
					if listId[i] == spellId
					and GetShapeshiftForm() ~= 2 then
									    CastSpellByName(GetSpellInfo(100),cTar[farestEnemyUnit]) 
						CastShapeshiftForm(2)
						if Nova_ShieldWallStun == 1
						and GCDCheck(871) then
						   CastSpellByName(GetSpellInfo(871)) 
						   end
						end
				end
			end
		end
	end
end

GladiusBear:SetScript(&amp;quot;OnEvent&amp;quot;, GladiusBear_OnEvent)
GladiusBear:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BattleShout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if --shouttoggle == nil
Nova_Shout == 0
 and GCDCheck(7386)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(6673)
and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
then CastSpellByName(GetSpellInfo(6673)) 
return true 
end

if -- shouttoggle == 1
Nova_Shout == 1
 and GCDCheck(7386)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(469)
and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
then CastSpellByName(GetSpellInfo(469))
return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>IntimidatingShout</Name><Default>false</Default><SpellID>5246</SpellID><Actions>/stopattack</Actions><Lua>if intishout then
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShatteringThrow</Name><Default>false</Default><SpellID>64382</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
 and GCDCheck(7386)
 and HaveBuff(&amp;quot;target&amp;quot;,iDispel(),1)
and not PQR_IsMoving(0.01)
	then
	return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sweeping Strikes</Name><Default>false</Default><SpellID>12328</SpellID><Actions></Actions><Lua>if Nova_AoE==1 or warrioraoe or (aoeUnits(5,8,0)and not ccUnits(10)) then



if inMelee == 1
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)   
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 30
then
	return true
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CommandingShout</Name><Default>false</Default><SpellID>469</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 70
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Devistate</Name><Default>false</Default><SpellID>0</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
and GCDCheck(20243)
then
	CastSpellByName(GetSpellInfo(20243))
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DemoShout</Name><Default>false</Default><SpellID>1160</SpellID><Actions></Actions><Lua>if inMelee == 1
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PiercingHowl</Name><Default>false</Default><SpellID>12323</SpellID><Actions>/startattack</Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 200000 
and ecTar[1].Range &amp;lt; 17
and not HaveBuff(&amp;quot;target&amp;quot;,iSlow(),0)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not HaveDebuff(&amp;quot;target&amp;quot;,aSRS(),1)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Revenge</Name><Default>false</Default><SpellID>6572</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
 and GCDCheck(7386)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShieldBarrier</Name><Default>false</Default><SpellID>112048</SpellID><Actions>/startattack</Actions><Lua>if select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; or  select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; or  select(2, GetInstanceInfo()) == &amp;quot;scenario&amp;quot; then
 

if( not UnitBuffID(&amp;quot;player&amp;quot;,112048)
and (UnitThreatSituation(&amp;quot;player&amp;quot;) == 3)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60
and inMelee ~= 1)
or ( inMelee == 1 and not UnitBuffID(&amp;quot;player&amp;quot;,112048) and (UnitThreatSituation(&amp;quot;player&amp;quot;) == 3) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60 and UnitBuffID(&amp;quot;player&amp;quot;,132404))
then return true end
end

if select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot; and  select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot; and  select(2, GetInstanceInfo()) ~= &amp;quot;scenario&amp;quot; then
 
if( not UnitBuffID(&amp;quot;player&amp;quot;,112048)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60
and inMelee ~= 1)
or ( inMelee == 1 and not UnitBuffID(&amp;quot;player&amp;quot;,112048)and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60 and UnitBuffID(&amp;quot;player&amp;quot;,132404))
then return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShieldBlock</Name><Default>false</Default><SpellID>2565</SpellID><Actions>/startattack</Actions><Lua>if select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; or  select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; or  select(2, GetInstanceInfo()) == &amp;quot;scenario&amp;quot; then
 
if inMelee == 1
and (UnitThreatSituation(&amp;quot;player&amp;quot;) == 3)
then 
return true
end
end


if select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot; and  select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot; and  select(2, GetInstanceInfo()) ~= &amp;quot;scenario&amp;quot; then
 
if inMelee == 1
then 
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShieldSlam</Name><Default>false</Default><SpellID>23922</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
and GCDCheck(23922)
then
	CastSpellByName(GetSpellInfo(12292),nil)
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TC Tank</Name><Default>false</Default><SpellID>6343</SpellID><Actions>/startattack</Actions><Lua>if ecTar[1].Range &amp;lt; 8
	and UnitCreatureType(cTar[1]) ~= &amp;quot;Totem&amp;quot;
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitPowerMax(&amp;quot;target&amp;quot;) &amp;lt;= 61000
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleave</Name><Default>false</Default><SpellID>845</SpellID><Actions></Actions><Lua>if Nova_AoE==1 or warrioraoe then
local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)



if inMelee == 1
 and GCDCheck(7386)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)   
and goRage == 1 
and ((UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 90
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 90))

then
	return true
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Intervene</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not interveneSpell then interveneSpell = 0 end

if IsSpellKnown(114029) then interveneSpell=114029 else interveneSpell =3411 end

if not TrapBox then
	TrapBox = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	TrapBox:Hide()
end

if dontshoot == 0 or nil then
dontshoot = 0
end

function TrapBox_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
		--	if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
					1499,		-- Freezing Trap
					60192		-- Freezing Trap
					
				}
				for i = 1, #listId do
					if listId[i] == spellId then
					if GCDCheck(interveneSpell) then
				for i = 1, #members do
					if UnitExists(members[i])
					and UnitName(members[i]) == &amp;quot;&amp;quot;..sourceNAME
					then
					dontshoot = 1
					end
				end
				      for i = 1, numberfriends do
				       if UnitInRange(members[i])
				       and dontshoot == 0
				       and GCDCheck(interveneSpell)
				       and eMembers[i].Range &amp;lt; 30
				       and not HaveBuff(&amp;quot;player&amp;quot;,114028,0)
				       and not UnitCanAttack(&amp;quot;player&amp;quot;,members[i]) 
				       and not UnitBuffID(members[i],interveneSpell)
				       and not UnitIsUnit(members[i],&amp;quot;player&amp;quot;)
				       and IsHealer(members[i])
				       and HaveDebuff(members[i],{
				       	115001,		-- Remorseless Winter
						91800,		-- Gnaw
						91797,		-- Monstrous Blow (Dark Transformation)
						102795,		-- Bear Hug
						5211,		-- Mighty Bash
						110698,		-- Hammer of Justice (Paladin)
						44572,		-- Deep Freeze
						1833,		-- Cheap Shot
						408,		-- Kidney Shot
						113953,		-- Paralysis (Paralytic Poison)
						30283,		-- Shadowfury
						89766,		-- Axe Toss (Felguard/Wrathguard)
						132168,		-- Shockwave
						105771,		-- Warbringer
						50245,		-- Pin (Crab)
						54706,		-- Venom Web Spray (Silithid)
						4167,		-- Web (Spider)
						19503,		-- Scatter Shot
						126246,		-- Lullaby
						109298,		-- Narrow Escape
						96201		-- Web Wrap
						},1)

				       then
				      
				         PQR_CustomTarget = members[i]
				         CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget) 
				         PQR_WriteToChat(&amp;quot;TRAP-INTERVENE on &amp;quot;..UnitName(PQR_CustomTarget))
				         	return true
				         end
				        
				      end
				     
				      end
				end
					end
						for i = 1, #listId do
					if listId[i] == spellId then
					if not GCDCheck(interveneSpell) then
				for i = 1, #members do
					if UnitExists(members[i])
					and UnitName(members[i]) == &amp;quot;&amp;quot;..sourceNAME
					then
					dontshoot = 1
					end
				end
				      for i = 1, numberfriends do
				       if UnitInRange(members[i])
				       and dontshoot == 0
				       and IsSpellKnown(114028)
				       and GCDCheck(114028) 
				       and eMembers[i].Range &amp;lt; 20
				       and not UnitCanAttack(&amp;quot;player&amp;quot;,members[i]) 
				      -- and not UnitBuffID(members[i],interveneSpell)
				       and not UnitIsUnit(members[i],&amp;quot;player&amp;quot;)
				       and IsHealer(members[i])
				       and HaveDebuff(members[i],{
				       	115001,		-- Remorseless Winter
						91800,		-- Gnaw
						91797,		-- Monstrous Blow (Dark Transformation)
						102795,		-- Bear Hug
						5211,		-- Mighty Bash
						110698,		-- Hammer of Justice (Paladin)
						44572,		-- Deep Freeze
						1833,		-- Cheap Shot
						408,		-- Kidney Shot
						113953,		-- Paralysis (Paralytic Poison)
						30283,		-- Shadowfury
						89766,		-- Axe Toss (Felguard/Wrathguard)
						132168,		-- Shockwave
						105771,		-- Warbringer
						50245,		-- Pin (Crab)
						54706,		-- Venom Web Spray (Silithid)
						4167,		-- Web (Spider)
						19503,		-- Scatter Shot
						126246,		-- Lullaby
						109298,		-- Narrow Escape
						96201		-- Web Wrap
						},1)

				       then
				      
				         PQR_CustomTarget = members[i]
				         CastSpellByName(GetSpellInfo(114028),PQR_CustomTarget) 
				         PQR_WriteToChat(&amp;quot;Mass Spell Reflection on &amp;quot;..UnitName(PQR_CustomTarget))
				         	return true
				         end
				        
				      end
				     
				      end
				
					end
			--	end
			end
		end
	end
end

TrapBox:SetScript(&amp;quot;OnEvent&amp;quot;, TrapBox_OnEvent)
TrapBox:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

dontshoot = 0


for i = 1, numberfriends do
if UnitInRange(members[i])
and IsHealer(members[i])
and Nova_InterveneHealer == 1
and eMembers[i].Range &amp;lt; 30
   and not UnitCanAttack(&amp;quot;player&amp;quot;,members[i]) 
and UnitAffectingCombat(members[i])
and GCDCheck(interveneSpell)
and not UnitBuffID(members[i],interveneSpell)
and not UnitIsUnit(members[i],&amp;quot;player&amp;quot;)
then
PQR_CustomTarget = members[i]
  CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget) 
  return true
  end
end

if GCDCheck(interveneSpell) and IsSpellKnown(114029) then


for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt; 50
and UnitInRange(members[i])
and eMembers[i].Range &amp;lt; 30
   and not UnitCanAttack(&amp;quot;player&amp;quot;,members[i]) 
and UnitAffectingCombat(members[i])
and GCDCheck(interveneSpell)
and not UnitBuffID(members[i],interveneSpell)
and not UnitIsUnit(members[i],&amp;quot;player&amp;quot;)
then
PQR_CustomTarget = members[i]
  CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget) 
  return true
  end
end
end


-----



if not ChargeBox then
	ChargeBox = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	ChargeBox:Hide()
end




function ChargeBox_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
								110698,		-- Hammer of Justice (Paladin)
					1330,		-- Garrote - Silence
					108194,		-- Asphyxiate
					22570,		-- Maim
					5211,		-- Mighty Bash
					9005,		-- Pounce
					102546,		-- Pounce (Incarnation)
					91800,		-- Gnaw
					91797,		-- Monstrous Blow (Dark Transformation)
					44572,		-- Deep Freeze
					119381,		-- Leg Sweep
					105593,		-- Fist of Justice
					853,		-- Hammer of Justice
					1833,		-- Cheap Shot
					408,		-- Kidney Shot
					30283,		-- Shadowfury
					89766,		-- Axe Toss (Felguard/Wrathguard)
					132168		-- Shockwave
					
				}
			
			
			
				for i = 1, #listId do
					if listId[i] == spellId 
					then
				if GCDCheck(100) then
					farestEnemyUnit = farestEnemy(25,15)
				    PQR_CustomTarget = cTar[farestEnemyUnit]
				    CastSpellByName(GetSpellInfo(100),PQR_CustomTarget) 
				     PQR_WriteToChat(&amp;quot;Safe Charge&amp;quot;)
				     	return true
				    end
				    if GCDCheck(interveneSpell) then
				    	farestHealerUnit = farestHealer(25,10)
				    PQR_CustomTarget = members[farestHealerUnit].Unit
				    CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget) 
				    	PQR_WriteToChat(&amp;quot;Safe Intervene&amp;quot;)
				    		return true
				    end
				    if GCDCheck(interveneSpell) then
				    	farestFriendUnit = farestFriend(25,10)
				    PQR_CustomTarget = members[farestFriendUnit].Unit
					CastSpellByName(GetSpellInfo(interveneSpell),PQR_CustomTarget)
				   	PQR_WriteToChat(&amp;quot;Safe Intervene&amp;quot;)
				   		return true
				   	end	
	
					end
				end
			end
		end
	end
end

ChargeBox:SetScript(&amp;quot;OnEvent&amp;quot;, ChargeBox_OnEvent)
ChargeBox:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spell Reflect</Name><Default>false</Default><SpellID>23920</SpellID><Actions></Actions><Lua>if GCDCheck(23920)
and not HaveBuff(&amp;quot;player&amp;quot;,114028,0)
and GetTime()-spTime &amp;gt; 1 then

for i = 1, #cTar do
if UnitExists(cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(reflectSpellsDMG()) do
				if GetSpellInfo(v) == castName then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSsrb
					and currentPercent &amp;lt; minMSsrb
     and UnitIsUnit(cTar[i]..&amp;quot;target&amp;quot;,&amp;quot;player&amp;quot;)
     and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
     then

     return true
     end
    end
   end
 

	--------------------------------------------
	

			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(reflectSpells()) do
				if GetSpellInfo(v) == castName  then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSsrb
					and currentPercent &amp;lt; minMSsrb
					and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
					and ecTar[i].Range ~= nil
					and ecTar[i].Range &amp;lt;33
					and  100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;gt;= 70
					then
				
					return true
					end
				end
			end
		end
	end

		---- fuck of mages
	
for i=1, #cTar do
local class = select(2, UnitClass(cTar[i]))
if UnitExists(cTar[i]) 
and LineOfSight(cTar[i])
and (class==&amp;quot;MAGE&amp;quot;)
and not CokxCDTracker(cTar[i],44572)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and UnitIsUnit(cTar[i]..&amp;quot;target&amp;quot;,&amp;quot;player&amp;quot;)
and HaveDebuff(&amp;quot;player&amp;quot;,reflectSpellsMage(),-1,1)
then

	return true				
end
end
end



if UnitExists(&amp;quot;target&amp;quot;) 
and inMelee == 1
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and HaveBuff(&amp;quot;target&amp;quot;,reflectInstantSpells(),0)
then

	return true				
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bladestorm</Name><Default>false</Default><SpellID>46924</SpellID><Actions>/startattack</Actions><Lua>if (drsb or
Nova_SBS == 1)
 then
 if IsSpellKnown(46924) then
 	CastSpellByName(GetSpellInfo(12292),nil)
	end
		CastSpellByName(GetSpellInfo(107566),nil)
		CastSpellByName(GetSpellInfo(6343),nil)
		CastSpellByName(GetSpellInfo(12328),nil)
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Whirlwind</Name><Default>false</Default><SpellID>1680</SpellID><Actions></Actions><Lua>if Nova_AoE==1 or warrioraoe then



if inMelee == 1
and goRage == 1
 and GCDCheck(7386)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)   
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 20

then
	return true
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wild Strike</Name><Default>false</Default><SpellID>100130</SpellID><Actions>/startattack</Actions><Lua>local type= UnitCreatureType(&amp;quot;target&amp;quot;)

if 
(not (GetSpellCooldown(GetSpellInfo(86346))+select(2,GetSpellCooldown(GetSpellInfo(86346)))-GetTime()&amp;lt;2) or UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) or not (type == &amp;quot;Totem&amp;quot;))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
 and GCDCheck(7386)
and HaveBuff(&amp;quot;player&amp;quot;,46916)
--and UnitIsEnemy(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raging Blow</Name><Default>false</Default><SpellID>85288</SpellID><Actions>/startattack</Actions><Lua>local type= UnitCreatureType(&amp;quot;target&amp;quot;)
local _,_,_,RBcount,_,_,RBtimer = UnitBuffID(&amp;quot;player&amp;quot;,131116) 
local _,_,_,Whirlcount,_,_,Whirltimer = UnitBuffID(&amp;quot;player&amp;quot;,85739) 
if 
(not (GetSpellCooldown(GetSpellInfo(86346))+select(2,GetSpellCooldown(GetSpellInfo(86346)))-GetTime()&amp;lt;2) or UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) or not (type == &amp;quot;Totem&amp;quot;))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)  
 and GCDCheck(7386)
--and UnitIsEnemy(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and (HaveDebuff(&amp;quot;target&amp;quot;,86346,1,&amp;quot;player&amp;quot;) or not HaveBuff(&amp;quot;player&amp;quot;,131116,3) or RBcount == 2 or Whirlcount == 3)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bloodthirst</Name><Default>false</Default><SpellID>23881</SpellID><Actions>/startattack</Actions><Lua>local type= UnitCreatureType(&amp;quot;target&amp;quot;)

if 
(not (GetSpellCooldown(GetSpellInfo(86346))+select(2,GetSpellCooldown(GetSpellInfo(86346)))-GetTime()&amp;lt;2) or UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;) or not (type == &amp;quot;Totem&amp;quot;))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)  
--and UnitIsEnemy(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HeroicStrikeFury</Name><Default>false</Default><SpellID>78</SpellID><Actions>/startattack</Actions><Lua>local cs,_,_,_,_,_,csExp = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)



if inMelee == 1
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and GCDCheck(78)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)   
and ((UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 90
or ((100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 40 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 80))
or ((100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 20 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 60))
or HaveBuff(&amp;quot;player&amp;quot;,122510,0))
or (cs and UnitPower(&amp;quot;player&amp;quot;)&amp;gt;= 40))

then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if warriorpause
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
then return true end

if  GetTime() - getInfos &amp;lt; 0.2 and  GetTime() - getInfos &amp;gt; 0.1 and (GCDCheck(5308)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.6 and  GetTime() - getInfos &amp;gt; 0.5 and (GCDCheck(5308)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.4 and  GetTime() - getInfos &amp;gt; 0.3 and (GCDCheck(5308)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.8 and  GetTime() - getInfos &amp;gt; 0.7 and (GCDCheck(5308)) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Totem Psyfiend Kill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not TotemBox then
	TotemBox = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	TotemBox:Hide()
end

if dontshoot == nil then
dontshoot = 0
end
if destroy == nil then
destroy = 0
end

function TotemBox_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
		--	if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
				108921,  -- Psyfiend
     				108280,  -- Healing Tide
       				 98008,  -- Spirit Link
     				120668,
    				 16190,
      					  108269 --Capacitor
				}
				for i = 1, #members do
					if UnitExists(members[i])
					and UnitGUID(members[i]) == sourceGUID
					then
					dontshoot = 1
					end
				end
				for i = 1, #listId do
					if listId[i] == spellId then
					if dontshoot == 0
					then
					destroy = &amp;quot;&amp;quot;..GetSpellInfo(spellId)
					InteractUnit(destroy)
				    end
				      	
					end
			--	end
			end
		end
	end
end
TotemBox:SetScript(&amp;quot;OnEvent&amp;quot;, TotemBox_OnEvent)
TotemBox:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)


					InteractUnit(destroy)
	
if UnitName(&amp;quot;target&amp;quot;) == destroy then
destroy = 0
end



				        
dontshoot = 0</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ((not UnitExists(&amp;quot;target&amp;quot;)) or ( not UnitIsPlayer(&amp;quot;target&amp;quot;) and (not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) or inMelee == 0))) 
then TargetNearestEnemyPlayer()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enraged Regeneration</Name><Default>false</Default><SpellID>55694</SpellID><Actions></Actions><Lua>if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt;= 65 then
if not HaveBuff(&amp;quot;player&amp;quot;,12880)
and GCDCheck(18499)
then
CastSpellByName(GetSpellInfo(18499))
return true
end
return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstTarget == nil then burstTarget=0 end
if Nova_BurstTarget == 1
and UnitExists(&amp;quot;target&amp;quot;)
and burstTarget == 0
then
burstTarget = UnitGUID(&amp;quot;target&amp;quot;)
xrn:message(&amp;quot;\124cFFCC99FFBurst on &amp;quot;..UnitName(&amp;quot;target&amp;quot;))
--SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
end
if Nova_BurstTarget == 0
then
burstTarget = 0
end


if inMelee == 1
and UnitExists(&amp;quot;target&amp;quot;)
and burstTarget == UnitGUID(&amp;quot;target&amp;quot;)
and goRage == 1
and GCDCheck(114207)
and GCDCheck(1719)
and (IsSpellKnown(107574) and GCDCheck(107574) or IsSpellKnown(12292) and GCDCheck(12292)or IsSpellKnown(107570) )
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not (type == &amp;quot;Totem&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 75
then
	RunMacroText(&amp;quot;/use 13&amp;quot;)
	CastSpellByName(GetSpellInfo(12292),nil)
	CastSpellByName(GetSpellInfo(107574),nil)
	CastSpellByName(GetSpellInfo(114207),nil)
	CastSpellByName(GetSpellInfo(1719),nil)
	CastSpellByName(GetSpellInfo(20572),nil)
	burstTarget = 0
	xrn:message(&amp;quot;\124cFFCC99FFBurst is Running&amp;quot;)
	SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Success</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not SuccessSpell then
	SuccessSpell = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	SuccessSpell:Hide()
end
if spTime==nil then spTime= 0 end
function SuccessSpell_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot;
		or type == &amp;quot;SPELL_CAST_START&amp;quot; then
			if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
					46968,		-- Shockwave
					46942,		-- Dragon Roar
					46924		-- Bladestorm
				}
				for i = 1, #listId do
				if listId[i] == spellId then
					xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(listId[i])..&amp;quot; Success.&amp;quot;)
				SetCVar(&amp;quot;Nova_SBS&amp;quot;, 0)
				end
				end
				local listId = {
					23920,		-- Spell Reflection
					114028		-- Mass Spell Reflection

				}
				for i = 1, #listId do
				if listId[i] == spellId then
				spTime = GetTime()
				end
				end
				local listId = {
					114029,		-- Intervene
					3411		-- Intervene
				}
				for i = 1, #listId do
				if listId[i] == spellId then
					xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(listId[i])..&amp;quot; Success.&amp;quot;)
				SetCVar(&amp;quot;Nova_InterveneHealer&amp;quot;, 0)
				end
				end
				
				local listId = {
					5246		-- Fear
				}
				for i = 1, #listId do
				if listId[i] == spellId then
					xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(listId[i])..&amp;quot; Success.&amp;quot;)
				SetCVar(&amp;quot;Nova_FearFocus&amp;quot;, 0)
				SetCVar(&amp;quot;Nova_FearHealer&amp;quot;, 0)
				end
				end
			end
		end
	end
end
SuccessSpell:SetScript(&amp;quot;OnEvent&amp;quot;, SuccessSpell_OnEvent)
SuccessSpell:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inti Fear</Name><Default>false</Default><SpellID>5246</SpellID><Actions></Actions><Lua>for i=1,#cTar do
if UnitExists(cTar[i])
	 and ((Nova_FearFocus == 1 and UnitExists(&amp;quot;focus&amp;quot;) and UnitIsUnit(cTar[i],&amp;quot;focus&amp;quot;))
	 or (Nova_FearHealer == 1 and IsHealer(cTar[i])))
	 and GCDCheck(5246)
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and LineOfSight(cTar[i])
	 and CokxDRInfo(cTar[i],&amp;quot;fear&amp;quot;) &amp;lt; 2
	 and ecTar[i].Range &amp;lt; 10
	 and not HaveDebuff(cTar[i],dPoisonCC(),2)
	 and not HaveDebuff(cTar[i],dCurseCC(),2)
	 and not HaveDebuff(cTar[i],dMagicCC(),2)
	 and not HaveDebuff(cTar[i],dSilence(),2)
	 and not HaveDebuff(cTar[i],dSilenceCC(),2)
	 and not HaveDebuff(cTar[i],dCC(),2)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
then
PQR_CustomTarget = cTar[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Target PVE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
then TargetNearestEnemy()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mass Spell Reflect</Name><Default>false</Default><SpellID>114028</SpellID><Actions></Actions><Lua>if IsSpellKnown(114028)
and GCDCheck(114028) 
and not HaveBuff(&amp;quot;player&amp;quot;,23920,0)
and GetTime()-spTime &amp;gt; 2 then

for i = 1, #cTar do
if UnitExists(cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(reflectSpellsDMG()) do
				if GetSpellInfo(v) == castName then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSsrb
					and currentPercent &amp;lt; minMSsrb
     and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
     and ecTar[i].Range &amp;lt; 30
     then
     return true
     end
    end
   end
 

	--------------------------------------------
	

			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(reflectSpells()) do
				if GetSpellInfo(v) == castName  then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSsrb
					and currentPercent &amp;lt; minMSsrb
					and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
					and ecTar[i].Range ~= nil
					and ecTar[i].Range &amp;lt; 40
					then
				
					return true
					end
				end
			end
		end
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stormbolt</Name><Default>false</Default><SpellID>107570</SpellID><Actions></Actions><Lua>if IsSpellKnown(107570) then
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(107570)
	 and not UnitIsDeadOrGhost(cTar[j]) 
		 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 and CokxDRInfo(cTar[j],&amp;quot;stun&amp;quot;) &amp;lt; 1
	 and not HaveDebuff(cTar[j],dPoisonCC(),1)
	 and LineOfSight(cTar[j])
		 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
     and ecTar[j].Facing
     and not HaveDebuff(cTar[j],dCurseCC(),1)
	 and not HaveDebuff(cTar[j],dMagicCC(),1)
	 and not HaveDebuff(cTar[j],dSilence(),1)
	 and not HaveDebuff(cTar[j],dSilenceCC(),1)
	 and not HaveDebuff(cTar[j],dCC(),1)
	 and HaveBuff(cTar[j],attentionBuffs(),1)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(107570)
	 and not UnitIsDeadOrGhost(cTar[j]) 
		 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),1)
	 and LineOfSight(cTar[j])
	 and CokxDRInfo(cTar[j],&amp;quot;stun&amp;quot;) &amp;lt; 1
	 and UnitIsPlayer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
      and ecTar[j].Facing
     and IsHealer(cTar[j])
     and CalculateHP(&amp;quot;target&amp;quot;) &amp;lt; 50
  	 and not HaveDebuff(cTar[j],dCurseCC(),1)
	 and not HaveDebuff(cTar[j],dMagicCC(),1)
	 and not HaveDebuff(cTar[j],dSilence(),1)
	 and not HaveDebuff(cTar[j],dSilenceCC(),1)
	 and not HaveDebuff(cTar[j],dCC(),1)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	
		
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and GCDCheck(107570)
	 and not UnitIsDeadOrGhost(cTar[j]) 
		 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[j])
	 and not HaveDebuff(cTar[j],dPoisonCC(),1)
	 and LineOfSight(cTar[j])
	 and CokxDRInfo(cTar[j],&amp;quot;stun&amp;quot;) &amp;lt; 1
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
     and ecTar[j].Facing
	 and not HaveDebuff(cTar[j],dPoisonCC(),1.5)
 	 and not HaveDebuff(cTar[j],dCurseCC(),1.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),1.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),1.5)
	 and not HaveDebuff(cTar[j],dCC(),1.5)
	 and ( HaveDebuff(cTar[j],dPoisonCC(),0)
 	 or HaveDebuff(cTar[j],dCurseCC(),0)
	 or HaveDebuff(cTar[j],dMagicCC(),0)
	 or HaveDebuff(cTar[j],dSilenceCC(),0)
	 or HaveDebuff(cTar[j],dCC(),0))
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)

	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	
	if UnitExists(&amp;quot;target&amp;quot;)
	and (HaveDebuff(&amp;quot;target&amp;quot;,86346,1,&amp;quot;player&amp;quot;) or IsSpellKnown(12975))
	and UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 2000000
	then
	PQR_CustomTarget=&amp;quot;target&amp;quot;
	return true
	end
	
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>eventRA</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not CokxLog then
    Cokx_CokxLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    Cokx_CokxLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCokxLog(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;target&amp;quot;) then
       			targetPhysRA = EphysRA()
       			for i=1,#targetPhysRA do
       				if select(12, ...) == targetPhysRA[i] then
       					if IsSpellKnown(107570) 
       					and GCDCheck(107570)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 15 then
						CastSpellByName(GetSpellInfo(107570),&amp;quot;target&amp;quot;)
						return true
						end
       				end
       			end
       			end
	     		
	     		if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
       			targetSpellRA = EspellRA()
       			for i=1,#targetSpellRA do
       				if select(12, ...) == targetSpellRA[i] then
       					if IsSpellKnown(114028) 
       					and GCDCheck(114028)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 40 then
						CastSpellByName(GetSpellInfo(114028))
						return true
						end
       				end
       			end
	     		end
	     		
	     		for i = 1, #cTar do
                if sourceGUID == UnitGUID(cTar[i])
                and ecTar[i].Range &amp;lt; 25 then
       				if select(12, ...) == 19503	then
       					if IsSpellKnown(107570)
       					and GCDCheck(107570)
       					then
						CastSpellByName(GetSpellInfo(107570),cTar[i])
						return true
						end
						if IsSpellKnown(676)
       					and GCDCheck(676)
       					then
						CastSpellByName(GetSpellInfo(676),cTar[i])
						return true
						end
       				end
	     		end
	     		end
	     		     		
	     		for j = 1, #members do
                if destGUID == UnitGUID(members[j])
                and eMembers[j].Range &amp;lt; 20 then
       			allSpellRA = spellRA()
       			for i=1,#allSpellRA do
       				if select(12, ...) == allSpellRA[i] then
       					if IsSpellKnown(114028)
       					and GCDCheck(114028)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,destGUID) &amp;lt; 25 then
						CastSpellByName(GetSpellInfo(114028))
						return true
						end
       				end
       			end
	     		end
	     		end
	     		
	     	
	     		
	     	   		
		    end
  end
 end

 Cokx_CokxLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCokxLog)

    CokxLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 30
   and GetItemCount(GetItemInfo(5512)) ~= 0
  and select(2,GetItemCooldown(5512)) == 0 
  then 
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Execute Prot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and not HaveBuff(cTar[i],iDMG(),0) 
and CalculateHP(&amp;quot;player&amp;quot;) &amp;gt; 80
and GCDCheck(5308)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 30
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 20
and inRange(cTar[i],78)
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(18499),PQR_CustomTarget)
CastSpellByName(GetSpellInfo(5308),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not myFocusID then myFocusID = 0 end

if not UnitExists(&amp;quot;focus&amp;quot;)
or UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then
for i = 1, #cTar do
if UnitExists(cTar[i]) and IsHealer(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID = 0
break
end
end

for i = 1, #cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not eHealer()
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID=UnitGUID(cTar[i])
break
end
end
end

if UnitExists(&amp;quot;focus&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) and UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then ClearFocus() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vigilance</Name><Default>false</Default><SpellID>114030</SpellID><Actions></Actions><Lua>for i = 1, #members do
if select(2,GetTalentRowSelectionInfo(5)) == 15
and CalculateHP(members[i]) &amp;lt; 60 
and GCDCheck(114030)
and eMembers[i].Range &amp;lt;= 40
and LineOfSight(members[i])
and UnitIsPlayer(members[i])
and not UnitIsUnit(&amp;quot;player&amp;quot;,members[i])
and not HaveBuff(members[i],defBuff(),0)
    
and UnitAffectingCombat(members[i])
then
  PQR_CustomTarget = members[i]
  --	CastSpellByName(GetSpellInfo(114030),PQR_CustomTarget)
  return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Staggering Shout</Name><Default>false</Default><SpellID>107566</SpellID><Actions>/startattack</Actions><Lua>for i = 1 ,#cTar do
if select(2,GetTalentRowSelectionInfo(3)) == 7
and GCDCheck(107566)
and not HaveBuff(cTar[i],iDMG(),0) 
and UnitIsPlayer(cTar[i]) 
and CokxDRInfo(cTar[i],&amp;quot;root&amp;quot;) &amp;lt; 2
and GetUnitSpeed(cTar[i]) &amp;gt; 0
and ecTar[i].Range &amp;lt; 20
and CalculateHP(cTar[i]) &amp;lt; 70
and HaveDebuff(cTar[i],aSRS(),0)
and not HaveBuff(cTar[i],iSlow(),0)
then
PQR_CustomTarget = cTar[i]
return true 
end
end

for i = 1 ,#cTar do
if select(2,GetTalentRowSelectionInfo(3)) == 7
and GCDCheck(107566)
and not HaveBuff(cTar[i],iDMG(),0) 
and ecTar[i].Range &amp;lt; 20
and CokxDRInfo(cTar[i],&amp;quot;root&amp;quot;) &amp;lt; 2
and UnitIsPlayer(cTar[i]) 
and GetUnitSpeed(cTar[i]) &amp;gt; 0
and CalculateHP(cTar[i]..&amp;quot;target&amp;quot;) &amp;lt; 70
and HaveDebuff(cTar[i],aSRS(),0)
and not HaveBuff(cTar[i],iSlow(),0)
then
PQR_CustomTarget = cTar[i]
return true 
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>