<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>E - Blood Thirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = BloodThirst
local TargetValidationRub = TargetValidationRub
local CS = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and EnemyHP &amp;lt; 20
and CS
and PlayerRage &amp;gt;= 30
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>J - Execute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = Execute
local TargetValidationRub = TargetValidationRub

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and EnemyHP &amp;lt;= 20
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>D - Heroic Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HeroicStrike
local TargetValidationRub = TargetValidationRub
local CS = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and (((CS and PlayerRage &amp;gt;= 40) or (DC and PlayerRage &amp;gt;= 30)) and EnemyHP &amp;gt;= 20) or PlayerRage&amp;gt;=110
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 0 - Spell List</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>PlayerSpells = {
57755, -- Heroic Throw
112048, -- ShieldBarrier
2565, -- ShieldBlock
}

PlayerShouts = {
6673, -- Battle
469, -- Commanding

}
-- RAGE GENERATION
ShieldSlam = 23922
Revenge = 6572

--FREE
BloodThirst = 23881
WildStrike = 100130
ColossusSmash = 86346
HeroicThrow = 57755
VictoryRush = 34428

-- DEBUFFS
Devastate = 20243
ThunderClap = 6343

-- RAGE SPEND
HeroicStrike = 78
Execute = 5308
Cleave = 845
RagingBlow = 85288

-- SHOUT
BattleShout = 6673
CommandingShout = 469

-- BUFFS
BerserkerRage = 18499
DeadlyClam = 85730

-- TALENT
ImpendingVictory = 103840

--
nss = tostring(GetSpellInfo(ShieldSlam))</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0 - Auto Cast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #PlayerSpells do
	if CheckSpell == PlayerSpells[i]
	then
		CastSpellByName(GetSpellInfo(CheckSpell))
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;,112048) ~= nil then
	CheckSpell = 0
end

if UnitBuffID(&amp;quot;player&amp;quot;,132404) ~= nil then
	CheckSpell = 0
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 2 - Console Commands</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------
-- ShowVar --
------------
function getVar(var,var2)
	if var2 == &amp;quot;on&amp;quot; then
		print(var .. &amp;quot; = |cFF00FF00ON&amp;quot;)
	end
	
	if var2 == &amp;quot;off&amp;quot; then
		print(var .. &amp;quot; = |cFFFF0000OFF&amp;quot;)
	end
	
	if var2 == &amp;quot;boss&amp;quot; then
		print(var .. &amp;quot; = |CFFFFFF01Boss Only&amp;quot;)
	end	
	
end

------------
-- CAST --
------------
SLASH_rcast1 = &amp;quot;/rcast&amp;quot;
function SlashCmdList.rcast(rcast, editbox)
	if rcast == &amp;quot;shieldblock&amp;quot; then
		CheckSpell = 2565
	elseif rcast == &amp;quot;shieldbarrier&amp;quot; then
		CheckSpell = 112048
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	print(&amp;quot;|cff00ffffCasting: |r&amp;quot; .. CheckSpell)
end



------------
-- SHOUT --
------------
SLASH_rshout1 = &amp;quot;/rshout&amp;quot;
function SlashCmdList.rshout(rshout, editbox)
	if rshout == &amp;quot;battle&amp;quot; then
		argument = &amp;quot;&amp;quot;
		vshout = BattleShout
		nshout = tostring(GetSpellInfo(BattleShout))
	elseif rshout == &amp;quot;commanding&amp;quot; then
		argument = &amp;quot;&amp;quot;
		vshout = CommandingShout
		nshout = tostring(GetSpellInfo(CommandingShout))
	else argument = &amp;quot; |CFFFF0303(No arguments)|R&amp;quot;
	end
	print(&amp;quot;|cff00ffffShout: |r&amp;quot; .. nshout .. argument)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>H - Colossus Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--H
local SPELL = ColossusSmash
local TargetValidationRub = TargetValidationRub

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>F - Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = WildStrike
local TargetValidationRub = TargetValidationRub
local BS,_,_,BScount,_,_,BStimer = UnitBuffID(&amp;quot;player&amp;quot;,46916)

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and BS ~= nil
and EnemyHP &amp;gt;= 20
and BStimer - GetTime() &amp;lt;= 1
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 3 - Non Combat Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PlayerCombat
and not IsMounted() then

	if vshout == PlayerShouts[1]
	and PQ_AuraInfo(3) == nil
	then
		CastSpellByName(GetSpellInfo(vshout))
	elseif vshout == PlayerShouts[2]
	and PQ_AuraInfo(2) == nil
	then
		CastSpellByName(GetSpellInfo(vshout))
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 1 - Globals</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------
-- SetVar --
------------
function setVar()
	--VARIABLES
	vshout = BattleShout
	CheckSpell = 0
	-- NAMES	
	nshout = tostring(GetSpellInfo(BattleShout))
	--
	argument = &amp;quot;&amp;quot;
end


-- Load LUA data files.
if PQR_RotationStarted then
	setVar()
	PQR_RotationStarted = false
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data_Rubim.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Nova_Data_Rubim.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

-- Cooldown Check
function CdCheck(spellid)
	Sstart, Sduration, Senabled = GetSpellCooldown(spellid)
	Scooldown = (Sstart + Sduration - GetTime())
	if Sstart == 0
	then
		Scooldown = 0
	end
	return Scooldown
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

--Player Info
PlayerRage			= select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;))
PlayerHP			= Nova_UnitInfo(&amp;quot;player&amp;quot;)
PlayerCombat		= UnitAffectingCombat(&amp;quot;player&amp;quot;)
	
--PQR Functions
isMoving			= PQR_IsMoving()

--Key Mods
lShift				= Nova_Pause(1)
lCtrl				= Nova_Pause(2)
lAlt				= Nova_Pause(3)
rShift				= Nova_Pause(4)
rCtrl				= Nova_Pause(5)
rAlt				= Nova_Pause(6)

--Target Info
EnemyHP				= select(1, Nova_UnitInfo(&amp;quot;target&amp;quot;))
EnemyLevel			= UnitLevel(&amp;quot;target&amp;quot;)

-----------------
-- Time to die --
-----------------
TimeToDie = 99
if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PlayerCombat then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end             
_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
_currentTime = GetTime()
timeDiff = _currentTime - _firstTime
hpDiff = _firstLife - _currentLife
	if hpDiff &amp;gt; 0 then
		fullTime = timeDiff*_firstLifeMax/hpDiff
		pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
		calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
		if calcTime &amp;lt; 1 then
			calcTime = 1
		end
   	TimeToDie = calcTime
	end
	if hpDiff &amp;lt;= 0 then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end

-- dummy
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
		TimeToDie = 99
	end
end

-------------
-- WARRIOR --
-------------

-- At this point, everything should have loaded perfectly!
if PQ_WRProtection == nil then
	PQ_WRProtection = true
	print(&amp;quot;OK - Loaded&amp;quot;)
	setVar()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] 99 - PAUSE</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Code by Crystal_tech
---General Pause for Spells that cast in combat without mod key press
if lAlt
or lShift
or lCtrl
or IsMounted()
or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or not PlayerCombat then
	return true
end

---Clear Target
if rAlt then
	ClearTarget()
end
--End Code by Crystal_tech</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>T - Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = WildStrike
local TargetValidationRub = TargetValidationRub

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and CdCheck(ColossusSmash) &amp;gt;= 1.0
and PlayerRage &amp;gt;= 80
and EnemyHP &amp;gt;= 20
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>S - Impending Victory</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = ImpendingVictory
local TargetValidationRub = TargetValidationRub

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and IsSpellKnown(SPELL)
and EnemyHP &amp;gt;= 20
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>R - WildStrike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = WildStrike
local TargetValidationRub = TargetValidationRub
local CS = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and CS
and EnemyHP &amp;gt;= 20
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>O - Heroic Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = HeroicThrow
local TargetValidationRub = TargetValidationRub

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>M - Wild Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = WildStrike
local TargetValidationRub = TargetValidationRub
local BS = UnitBuffID(&amp;quot;player&amp;quot;,46916)

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and BS ~= nil
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>L - Raging Blow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = RagingBlow
local TargetValidationRub = TargetValidationRub
local RB,_,_,RBcount,_,_,RBtimer = UnitBuffID(&amp;quot;player&amp;quot;,131116)
local CS,_,_,_,_,_,CStimer = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)
local BB = UnitBuffID(&amp;quot;player&amp;quot;,12292)
local RN = UnitBuffID(&amp;quot;player&amp;quot;,1719)

if RB == nil then
	RBcount = 0
	RBTimer = GetTime()
end

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and RBcount == 2 or (RB and (EnemyHP &amp;lt;= 20 or CS or BB or RN or CdCheck(ColossusSmash) &amp;gt;= 6 or (CdCheck(BloodThirst) &amp;gt;= 1 and RBtimer - GetTime() &amp;lt;=6 )))
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>U = Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = vshout
local TargetValidationRub = TargetValidationRub

if PlayerCombat
and PQR_SpellAvailable(SPELL)
and PlayerRage &amp;lt;= 70
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>P - Battle Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = vshout
local TargetValidationRub = TargetValidationRub
local CS = UnitDebuffID(&amp;quot;target&amp;quot;,86346,&amp;quot;player&amp;quot;)

if PlayerCombat
and PQR_SpellAvailable(SPELL)
and PlayerRage &amp;lt;= 70
and not CS
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>A - Berserker Rage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = BerserkerRage
local RB,_,_,RBcount = UnitBuffID(&amp;quot;player&amp;quot;,131116)
local RN,_,_,_,_,_,RNtimer = UnitBuffID(&amp;quot;player&amp;quot;,1719)
local ER = UnitBuffID(&amp;quot;player&amp;quot;,12880)

if RB == nil then
	RBcount = 0
end

if RNtimer == nil then
	RNtimer = GetTime()
end

if PlayerCombat
and PQR_SpellAvailable(SPELL)
and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1
and not (ER or (RBcount == 2 and EnemyHP &amp;gt;= 20)) or (RNtimer - GetTime() &amp;gt;= 10 and not RB)
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Z - Blood Thirst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = BloodThirst
local TargetValidationRub = TargetValidationRub

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
--and CdCheck(ColossusSmash) &amp;gt;= 4.5
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0 - Impending Victory</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidationRub = TargetValidationRub
local VR,_,_,BCcharge,_,_,_,_,_,_,_ = UnitAura(&amp;quot;player&amp;quot;,GetSpellInfo(32216))

if IsSpellKnown(ImpendingVictory)
then
	SPELL = ImpendingVictory
else
	SPELL = VictoryRush
end

if TargetValidationRub(&amp;quot;target&amp;quot;,SPELL)
and VR
--and UnitBuffID(&amp;quot;player&amp;quot;,32216)
and PlayerHP &amp;lt;= 95
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>B - Deadly Calm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = DeadlyClam
local RB,_,_,RBcount = UnitBuffID(&amp;quot;player&amp;quot;,131116)

if PlayerCombat
and PQR_SpellAvailable(SPELL)
and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1
and PlayerRage &amp;gt;= 40
then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>