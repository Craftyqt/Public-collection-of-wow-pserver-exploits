<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false

PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Resto Druid Profile Verion - 2.0.12&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
PQR_SwapCheckTimer = 0
			
--------------------
-- Register CVars
--------------------

Nova_ValueCheck = {
	{	Var1 = nil,	Text = &amp;quot;Healing Values&amp;quot;,			Var2 = nil		},
	{	Var1 = 60,	Text = &amp;quot;VHealingTouch&amp;quot;,				Var2 = 1		},	
	{	Var1 = 80,	Text = &amp;quot;VOmenHealingTouch&amp;quot;,			Var2 = 1		},	
	{	Var1 = 80,	Text = &amp;quot;VNourish&amp;quot;,					Var2 = 1		},	
	{	Var1 = 40,	Text = &amp;quot;VRegrowth&amp;quot;,					Var2 = 1		},	
	{	Var1 = 75,	Text = &amp;quot;VOmenRegrowth&amp;quot;,				Var2 = 1		},	
	{	Var1 = 80,	Text = &amp;quot;VRejuvenation&amp;quot;,				Var2 = 1		},	
	{	Var1 = 90,	Text = &amp;quot;VRejuvenationTank&amp;quot;,			Var2 = 1		},	
	{	Var1 = 85,	Text = &amp;quot;VSwiftmend&amp;quot;,				Var2 = 1		},	
	{	Var1 = 2,	Text = &amp;quot;VSwiftmendLimit&amp;quot;,			Var2 = 1		},	
	{	Var1 = 85,	Text = &amp;quot;VWildGrowth&amp;quot;,				Var2 = 1		},	
	{	Var1 = 3,	Text = &amp;quot;VWildGrowthLimit&amp;quot;,			Var2 = 1		},	
	{	Var1 = nil,	Text = &amp;quot;Cooldown Values&amp;quot;,			Var2 = nil		},
	{	Var1 = 20,	Text = &amp;quot;VIronbark&amp;quot;,					Var2 = 1		},	
	--{	Var1 = 40,	Text = &amp;quot;VNatureSwiftness&amp;quot;,			Var2 = 1		},		
	{	Var1 = 40,	Text = &amp;quot;VSpiritWalkerGrace&amp;quot;,		Var2 = 1		},	
	{	Var1 = 60,	Text = &amp;quot;VCooldowns&amp;quot;,				Var2 = 1		},	
	{	Var1 = 4,	Text = &amp;quot;VCooldownsLimit&amp;quot;,			Var2 = 1		},	
	{	Var1 = 0,	Text = &amp;quot;VTalent90Auto&amp;quot;,				Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VIncarnationAuto&amp;quot;,			Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VTranquilityAuto&amp;quot;,			Var2 = 1		},	
	{	Var1 = nil,	Text = &amp;quot;Misc Values&amp;quot;,				Var2 = nil		},			
	{	Var1 = 90,	Text = &amp;quot;VDPS&amp;quot;,						Var2 = 0		},	
	{	Var1 = 0,	Text = &amp;quot;VAutoTarget&amp;quot;,				Var2 = 1		},	
	{	Var1 = 20,	Text = &amp;quot;VLowMana&amp;quot;,					Var2 = 1		},
	{	Var1 = 60,	Text = &amp;quot;VNaturesCure&amp;quot;,				Var2 = 1		},
	{	Var1 = 80,	Text = &amp;quot;VInnervate&amp;quot;,				Var2 = 1		},	
	--{	Var1 = 0,	Text = &amp;quot;VSmart&amp;quot;,					Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VSymbiosis&amp;quot;,				Var2 = 1		},	
	{	Var1 = 0,	Text = &amp;quot;Racials&amp;quot;,					Var2 = 1		},						
	{	Var1 = 0,	Text = &amp;quot;NewEvents&amp;quot;,					Var2 = 1		},		
	{	Var1 = 0,	Text = &amp;quot;OldEvents&amp;quot;,					Var2 = 0		}		
	--{	Var1 = 80,	Text = &amp;quot;LowHPThreshold&amp;quot;, 			Var2 = nil		}
}		

Nova_CooldownCheck = {
	{	Mod = 8,	Text = &amp;quot;VIncarnation&amp;quot;,				Var1 = 1		}, --IsRightShiftKeyDown
	{	Mod = 1,	Text = &amp;quot;VPauseRotation&amp;quot;,			Var1 = 1		}, --IsLeftShiftKeyDown
	{	Mod = 2,	Text = &amp;quot;VWildMushroom&amp;quot;,				Var1 = 1		}, --IsLeftControlKeyDown
	--{	Mod = 4,	Text = &amp;quot;VDispelRaid&amp;quot;,				Var1 = 1		}, --IsLeftAltKeyDown		
	{	Mod = 4,	Text = &amp;quot;VWildMushroomBloom&amp;quot;,		Var1 = 1		}, --IsLeftAltKeyDown		
	{	Mod = 32,	Text = &amp;quot;VMTranquility&amp;quot;,				Var1 = 1		}, --IsRightAltKeyDown
	{	Mod = 16,	Text = &amp;quot;VTalent90&amp;quot;,					Var1 = 1		}  --IsRightControlKeyDown
	--{	Mod = 2,	Text = &amp;quot;RemoveFromCustomTable&amp;quot;,	Var1 = 1		}, --IsLeftControlKeyDown
	--{	Mod = 4,	Text = &amp;quot;AddToCustomTable&amp;quot;,			Var1 = 1		}  --IsLeftAltKeyDown			
}
	
if GetCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_OverRide&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_OverRide&amp;quot;, 0) end
if GetCVar(&amp;quot;PQ_UseCustomT&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_Recording&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Recording&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_DisableCD&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1) end
if GetCVar(&amp;quot;Nova_Mouseover&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Mouseover&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_LowHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_LowHP&amp;quot;, 80) end
if GetCVar(&amp;quot;Nova_ActualHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_ActualHP&amp;quot;, 0) end
-- Registering the CVars for the CustomFrame
for i=1, #Nova_ValueCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
	end
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
	end
end
for i=1, #Nova_CooldownCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text, Nova_CooldownCheck[i].Mod)
	end	
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
	end
end

--------------------
-- Slash Commands
--------------------
SLASH_WIPETABLE1 = &amp;quot;/wipetable&amp;quot;
SLASH_WIPETABLE2 = &amp;quot;/wipecustomtable&amp;quot;
SLASH_WIPETABLE3 = &amp;quot;/wt&amp;quot;
function SlashCmdList.WIPETABLE(msg, editbox)
	Nova_CustomT = { }
	if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then 
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean, and reverting to Normal Table.&amp;quot;)
		end
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean.&amp;quot;)
		end
	end
end

SLASH_USECUSTOMT1 = &amp;quot;/usecustomt&amp;quot;
SLASH_USECUSTOMT2 = &amp;quot;/uct&amp;quot;
SLASH_USECUSTOMT3 = &amp;quot;/usecustomtable&amp;quot;
function SlashCmdList.USECUSTOMT(msg, editbox)
	if not GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) and #Nova_CustomT &amp;gt; 0 then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Custom Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Normal Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
	end
end

SLASH_RECORDING1 = &amp;quot;/recording&amp;quot;
SLASH_RECORDING2 = &amp;quot;/recraid&amp;quot;
SLASH_RECORDING3 = &amp;quot;/recordingraid&amp;quot;
function SlashCmdList.RECORDING(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 1)
		for i=1, 20 do ChatFrame1:AddMessage(&amp;quot; &amp;quot;) end
	else
		PQR_WriteToChat(&amp;quot;Silent Mode Disabled&amp;quot;)
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 0)
	end
end

SLASH_DISABLECD1 = &amp;quot;/disablecd&amp;quot;
function SlashCmdList.DISABLECD(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableCD&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 0)
	end
end

SLASH_CLEARCHAT1 = &amp;quot;/clearchat&amp;quot;
function SlashCmdList.CLEARCHAT(msg, editbox)
	for i=1, 20 do
		ChatFrame1:AddMessage(&amp;quot; &amp;quot;)
	end
end

SLASH_DISABLEMOUSEOVER1 = &amp;quot;/mouseoverheal&amp;quot;
SLASH_DISABLEMOUSEOVER2 = &amp;quot;/mh&amp;quot;
function SlashCmdList.DISABLEMOUSEOVER(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableMouseover&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 0)
	end		
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)
PQR_AddToSpellDelayList(18562, 0, 1) -- Swiftmend
PQR_AddToSpellDelayList(44203, 0, 1) -- Tranquility

-----------------------------
-- Create the CVar Macros
-----------------------------

	if PQR_LoadLua ~= nil then
		-- Load Data File
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Vachiusa_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Frame.lua&amp;quot;) == true then
			if not mmC then
				mmC = true
				MiniMapCreation()
			end
		
			-- Setup the Slash Commands for the Frame
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck)
				end
			
				if not Nova_Frame:IsShown() then
					Nova_Frame:Show()
				else
					Nova_Frame:Hide()
				end
			end
		else
			print(&amp;quot;Failed to load Frame&amp;quot;)
		end
	end
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 4 then
		PQR_WriteToChat(&amp;quot;You must be in Resto Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Healing Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActulHP)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true


if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then
	members = Nova_CustomT
	lowhpmembers = 0
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].HP &amp;lt; 80 then
			lowhpmembers = lowhpmembers + 1
		end
	end
	
	table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- ToInteger --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- To Integer from String
Nova_LowHP 							= tonumber( GetCVar(&amp;quot;Nova_LowHP&amp;quot;) )
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)		
	end
end

-- To Integer for Cooldowns
Nova_VIncarnation					= tonumber(	GetCVar(&amp;apos;Nova_VIncarnation&amp;apos;) )
Nova_VWildMushroomBloom				= tonumber(	GetCVar(&amp;apos;Nova_VWildMushroomBloom&amp;apos;) )
--Nova_VDispelRaid					= tonumber(	GetCVar(&amp;apos;Nova_VDispelRaid&amp;apos;) )
Nova_VMTranquility					= tonumber(	GetCVar(&amp;apos;Nova_VMTranquility&amp;apos;) )
Nova_VWildMushroom					= tonumber(	GetCVar(&amp;apos;Nova_VWildMushroom&amp;apos;) )
Nova_VTalent90						= tonumber(	GetCVar(&amp;apos;Nova_VTalent90&amp;apos;) )
--Nova_RemoveCT						= tonumber(	GetCVar(&amp;apos;Nova_RemoveFromCustomTable&amp;apos;) )
--Nova_AddCT						= tonumber(	GetCVar(&amp;apos;Nova_AddToCustomTable&amp;apos;) )

-- To Boolean from String
Nova_Mouseover 						= GetCVarBool(&amp;quot;Nova_Mouseover&amp;quot;)
Nova_VIncarnationCheck				= GetCVarBool(&amp;apos;Nova_VIncarnation_Enabled&amp;apos;) 
Nova_VWildMushroomBloomCheck		= GetCVarBool(&amp;apos;Nova_VWildMushroomBloom_Enabled&amp;apos;) 
--Nova_VDispelRaidCheck				= GetCVarBool(&amp;apos;Nova_VDispelRaid_Enabled&amp;apos;) 
Nova_VMTranquilityCheck				= GetCVarBool(&amp;apos;Nova_VMTranquility_Enabled&amp;apos;) 
Nova_VWildMushroomCheck				= GetCVarBool(&amp;apos;Nova_VWildMushroom_Enabled&amp;apos;) 
Nova_VTalent90Check					= GetCVarBool(&amp;apos;Nova_VTalent90_Enabled&amp;apos;) 
--Nova_RemoveCTCheck				= GetCVarBool(&amp;apos;Nova_RemoveFromCustomTable_Enabled&amp;apos;)
--Nova_AddCTCheck					= GetCVarBool(&amp;apos;Nova_AddToCustomTable_Enabled&amp;apos;)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Stop Casting
local boss,bossid = bossid()

if SpellIsTargeting() then
	SpellStopCasting()
elseif UnitBuffID(&amp;quot;player&amp;quot;, 100977) --Harmony
and ((UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(50464)) --Nourish 
or (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(5176))) --Wrath
and (CalStop(members[1].Unit) &amp;lt; 40 or (lowhpmembers &amp;gt; 3 and CalStop(members[1].Unit) &amp;lt; 70)) 
and IsUsableSpell(8936) --prevent stop loop
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 12
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellStopCasting() 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting Nourish/Wrath - HP: &amp;quot; ..members[1].HP) 		
		return true 
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(50464)) --Nourish
and UnitBuffID(&amp;quot;player&amp;quot;, 100977) --Harmony
and IsSpellInRange(GetSpellInfo(50464),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and CalStop(members[1].Unit) &amp;gt; Nova_VNourish and CalStop(members[1].Unit) &amp;gt; 95 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if (select(7, UnitBuffID(&amp;quot;player&amp;quot;, 100977)) - GetTime() &amp;gt; 2) then
		SpellStopCasting() 	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast Nourish - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit)..&amp;quot; - overheal: &amp;quot;..select(2, CalStop(members[1].Unit)))	
		return true 
	end
elseif UnitAffectingCombat(&amp;quot;player&amp;quot;)
and (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(5185)) --HealingTouch
and IsSpellInRange(GetSpellInfo(5185),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and bossid ~= 62442 --Tsulong 
and bossid ~= nil
and CalStop(members[1].Unit) &amp;gt; Nova_VHealingTouch and CalStop(members[1].Unit) &amp;gt; Nova_VDPS then 
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting HealingTouch - HP: &amp;quot; ..members[1].HP..&amp;quot; - npcid :&amp;quot;..bossid) 		
	return true 
elseif UnitAffectingCombat(&amp;quot;player&amp;quot;)
and (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(8936)) --Regrowth 
and IsSpellInRange(GetSpellInfo(8936),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and bossid ~= 62442 --Tsulong 
and bossid ~= nil
and CalStop(members[1].Unit) &amp;gt; Nova_VRegrowth and CalStop(members[1].Unit) &amp;gt; Nova_VDPS then 
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting Regrowth - HP: &amp;quot; ..members[1].HP..&amp;quot; - npcid :&amp;quot;..bossid)	
	return true 	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoTarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoTarget
if Nova_VAutoTargetCheck then
	if (not UnitExists(&amp;quot;focus&amp;quot;)
		or UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		or not UnitInRange(&amp;quot;focus&amp;quot;) 
		or not UnitIsConnected(&amp;quot;focus&amp;quot;)
		or not UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))	
	and #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
			and CanHeal(Nova_Tanks[i].Unit) then			
	   			TargetUnit(Nova_Tanks[i].Unit)             		
	            --if not UnitIsDeadOrGhost(&amp;quot;targettarget&amp;quot;)			
				--and UnitExists(&amp;quot;targettarget&amp;quot;)
				--and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;targettarget&amp;quot;)
				--and UnitInRange(&amp;quot;targettarget&amp;quot;) 
				--and not PQR_IsOutOfSight(&amp;quot;targettarget&amp;quot;)
				--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;) --Elegon not work
				--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
					--TargetUnit(&amp;quot;targettarget&amp;quot;)
					--AttackTarget()
					--return true 	
				--end                		
	    		RunMacroText(&amp;quot;/focus&amp;quot;)			
	            RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)			
			end
		end
	end
	
	if UnitExists(&amp;quot;focus&amp;quot;)
	--and not Nova_Moving
	--and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;) or (UnitExists(&amp;quot;target&amp;quot;) and not UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) and not (IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1 )))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))
	and not UnitIsDeadOrGhost(&amp;quot;focustarget&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	and UnitExists(&amp;quot;focustarget&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;)
	and IsSpellInRange(GetSpellInfo(8921),&amp;quot;focustarget&amp;quot;) == 1
	and not PQR_IsOutOfSight(&amp;quot;focustarget&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;) --Elegon not work
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		TargetUnit(&amp;quot;focustarget&amp;quot;)
		--AttackTarget()
		return true 	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Trinket spirit 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 80
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
then UseInventoryItem(14)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- SelfSurvival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 20 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if GetItemCount(5512,false,true) &amp;gt; 0	
	and PQR_SpellAvailable(5512) --Healthstone		
	and GetItemCooldown(5512) == 0 then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end	
		UseItemByName(5512)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealthstone - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	--elseif GetInventoryItemCooldown(6)==0 --Grounded Plasma Shield 	
	--then 
		--UseInventoryItem(6) 
		--return true
	elseif PQR_SpellAvailable(22812)	
	--and select(2,GetTalentRowSelectionInfo(5)) == 14
	--and IsUsableSpell(22812) 	
	and select(2,GetSpellCooldown(22812)) &amp;lt; 2 then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end			
		CastSpellByName(tostring(GetSpellInfo(22812),nil))	 			
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFBarkskin - My HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;))		
		return true		
	elseif PQR_SpellAvailable(106922)	
	and select(2,GetSpellCooldown(106922)) &amp;lt; 2 
	--and IsUsableSpell(115203) 	
	and not UnitBuffID(&amp;quot;player&amp;quot;,22812) then --Barkskin
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end			
		CastSpellByName(tostring(GetSpellInfo(106922),nil))	 	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMight of Ursoc - My HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;))	
		return true		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Custom Table --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--------------------------------------
-- Adding Players to Custom Table
--------------------------------------

 if IsLeftShiftKeyDown()
 and IsLeftAltKeyDown()
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) ) then  
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			return false
		end
	end
	
	table.insert(Nova_CustomT, { GUID = UnitGUID(&amp;quot;mouseover&amp;quot;) } )
	
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		PQR_WriteToChat(&amp;quot;We just added &amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; to the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
	end
	return true

end


--------------------------------------
-- Removing Players from Custom Table
--------------------------------------

if IsLeftShiftKeyDown()
 and IsLeftControlKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) )then
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;We just removed &amp;quot;..UnitName(Nova_CustomT[i].Unit)..&amp;quot; from the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
			end
			table.remove(Nova_CustomT, i)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TsulongHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then	
	local bossCheck = &amp;quot;boss1&amp;quot; 
	
	if UnitExists(bossCheck) then 
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16) 	        
		if npcID ~= 62442 
		and not UnitAffectingCombat(&amp;quot;player&amp;quot;) then --Tsulong	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug NPCID: &amp;quot; ..npcID) 
			return false
		end
	end
	
	if PQR_SpellAvailable(5185)  	
	 and IsUsableSpell(5185) 
	 and IsSpellInRange(GetSpellInfo(5185),&amp;quot;boss1&amp;quot;) == 1
	 and not Nova_Moving then
		if Nova_UnitInfo(&amp;quot;boss1&amp;quot;) &amp;lt; 99 then
			--if GetInventoryItemCooldown(10)==0 then
			--if select(2,GetInventoryItemCooldown(10)) &amp;lt; 2 then
				--UseInventoryItem(10)
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGloves Engineer buff!&amp;quot;)			
			--end	 			

			if PQR_SpellAvailable(33763)  
			and IsUsableSpell(33763) 
			and UnitBuffID(&amp;quot;boss1&amp;quot;, 33763, &amp;quot;PLAYER&amp;quot;) then	
				if select(7, UnitBuffID(&amp;quot;boss1&amp;quot;, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;lt;= 2 
				and select(4, UnitBuffID(&amp;quot;boss1&amp;quot;, 33763, &amp;quot;PLAYER&amp;quot;)) &amp;lt; 3	
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			 		CastSpellByName(tostring(GetSpellInfo(33763)),&amp;quot;boss1&amp;quot;)	 
			 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Lifebloom Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
			 		return true			 	
			 	end
			elseif PQR_SpellAvailable(33763)  
			and IsUsableSpell(33763) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;, 33763, &amp;quot;PLAYER&amp;quot;) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(33763)),&amp;quot;boss1&amp;quot;)	 
			 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Lifebloom Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
			 	return true			 				 				
			end
			
		 	if PQR_SpellAvailable(774) 
		 	and IsUsableSpell(774) 	 		 	
		 	and not UnitBuffID(&amp;quot;boss1&amp;quot;, 774, &amp;quot;PLAYER&amp;quot;) 
		 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 		
		 		CastSpellByName(tostring(GetSpellInfo(774)),&amp;quot;boss1&amp;quot;)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Rejuvenation Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 
		 		return true						 			 	
		 	end
		 	
			if PQR_SpellAvailable(18562) 
			and IsUsableSpell(18562)		
			and select(2,GetSpellCooldown(18562)) &amp;lt; 2 
			and UnitBuffID(&amp;quot;boss1&amp;quot;, 774)
			and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(18562)),&amp;quot;boss1&amp;quot;)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Swiftmend Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 
		 		return true			
			end	 	

			--NatureSwiftness 
			if not UnitBuffID(&amp;quot;player&amp;quot;,132158)
			and PQR_SpellAvailable(132158)
			and select(2,GetTalentRowSelectionInfo(2)) == 4
			and select(2,GetSpellCooldown(132158)) &amp;lt; 2
			and (UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(132158)),&amp;quot;player&amp;quot;)
				CastSpellByName(tostring(GetSpellInfo(5185)),&amp;quot;boss1&amp;quot;)	 			
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HealingTouch with NatureSwiftness on Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))	 		
		 		return true									
			end	
			
		 	if PQR_SpellAvailable(8936) 		 
			 and IsUsableSpell(8936) 
			 and not UnitBuffID(&amp;quot;player&amp;quot;, 132158) --NatureSwiftness
			 and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
			 --and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitIsUnit(&amp;quot;mouseover&amp;quot;, &amp;quot;boss1&amp;quot;)) then --Mouseover		 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(8936)),&amp;quot;boss1&amp;quot;)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Regrowth Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 
		 		return true
			end
			
			if members[1].HP &amp;gt; 30 --Prevent raid wipe
			and lowhpmembers &amp;lt; 10 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 					
				CastSpellByName(tostring(GetSpellInfo(5185)),&amp;quot;boss1&amp;quot;)	 			
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HealingTouch Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))	 		
		 		return true
			else		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFNOOOOOOOOOOOOOOOOOT Cast HealingTouch Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
				return false
			end		
	
		end
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>NaturesCure Mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--NaturesCure Mouseover
if PQR_SpellAvailable(88423) 
and select(2,GetSpellCooldown(88423)) &amp;lt; 2
and UnitExists(&amp;quot;mouseover&amp;quot;)
and IsUsableSpell(88423)
and IsSpellInRange(GetSpellInfo(88423),&amp;quot;mouseover&amp;quot;) == 1
then
	if ValidDispel(&amp;quot;mouseover&amp;quot;) 
	and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;)
	and CanHeal(&amp;quot;mouseover&amp;quot;) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto dispeled!&amp;quot;)
		CastSpellByName(tostring(GetSpellInfo(88423)),&amp;quot;mouseover&amp;quot;)
		return true	
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ironbark</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Ironbark
if Nova_VIronbarkCheck then
	if PQR_SpellAvailable(102342) 	  	 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and select(2,GetSpellCooldown(102342)) &amp;lt; 2
	 --and GetSpellCooldown(33206) == 0
	 and UnitThreatSituation(members[1].Unit) == 3
	 and IsUsableSpell(102342)
	 and CanHeal(members[1].Unit)
	 --and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	 and IsSpellInRange(GetSpellInfo(102342),members[1].Unit) == 1 then
		if members[1].HP &amp;lt; Nova_VIronbark
		and UnitIsPlayer(members[1].Unit)
		then 
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end
		 	--PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFIronbark - HP: &amp;quot; ..members[1].HP) 	
		 	CastSpellByName(tostring(GetSpellInfo(102342)),members[1].Unit)	
		 	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ( Nova_Mod() == tonumber(GetCVar(&amp;apos;Nova_VPauseRotation&amp;apos;))
 and GetCVarBool(&amp;apos;Nova_VPauseRotation_Enabled&amp;apos;) )
 or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
 or IsMounted() 
 or (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(740)) --Tranquility
 or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
 and Nova_CheckLastCast(6, 2) then
	-- If we are in a 5 man instance
	if IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Party (VachiusaResto)&amp;quot;)	
	-- If we are in a 10m raid 
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid10 (VachiusaResto)&amp;quot;)
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid25 (VachiusaResto)&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VRejuvenation&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_VCooldowns&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VCooldownsLimit&amp;quot;, 4)	
	SetCVar(&amp;quot;Nova_VSwiftmend&amp;quot;, 85)
	SetCVar(&amp;quot;Nova_VSwiftmendLimit&amp;quot;, 2)
	SetCVar(&amp;quot;Nova_VWildGrowth&amp;quot;, 85)
	SetCVar(&amp;quot;Nova_VWildGrowthLimit&amp;quot;, 3)	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaResto)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true		
	SetCVar(&amp;quot;Nova_VRejuvenation&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_VCooldowns&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VCooldownsLimit&amp;quot;, 4)	
	SetCVar(&amp;quot;Nova_VSwiftmend&amp;quot;, 85)
	SetCVar(&amp;quot;Nova_VSwiftmendLimit&amp;quot;, 2)
	SetCVar(&amp;quot;Nova_VWildGrowth&amp;quot;, 85)
	SetCVar(&amp;quot;Nova_VWildGrowthLimit&amp;quot;, 3)		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) 
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaResto)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VRejuvenation&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_VCooldowns&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VCooldownsLimit&amp;quot;, 8)	
	SetCVar(&amp;quot;Nova_VSwiftmend&amp;quot;, 85)
	SetCVar(&amp;quot;Nova_VSwiftmendLimit&amp;quot;, 2)
	SetCVar(&amp;quot;Nova_VWildGrowth&amp;quot;, 80)
	SetCVar(&amp;quot;Nova_VWildGrowthLimit&amp;quot;, 5)	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VRejuvenation&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_VCooldowns&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VCooldownsLimit&amp;quot;, 16)
	SetCVar(&amp;quot;Nova_VSwiftmend&amp;quot;, 85)
	SetCVar(&amp;quot;Nova_VSwiftmendLimit&amp;quot;, 2)
	SetCVar(&amp;quot;Nova_VWildGrowth&amp;quot;, 80)
	SetCVar(&amp;quot;Nova_VWildGrowthLimit&amp;quot;, 5)		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5)
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaResto)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>NaturesCure</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--NaturesCure
if Nova_VDispelRaidCheck then	
	if Nova_Mod() == Nova_VDispelRaid then
		if PQR_SpellAvailable(88423)
		and select(2,GetSpellCooldown(88423)) &amp;lt; 2
		--and IsLeftAltKeyDown() 
		--and not IsLeftShiftKeyDown() 
		and IsUsableSpell(88423)
		and not GetCurrentKeyBoardFocus() 		
		and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
			if members[1].HP &amp;gt; Nova_VNaturesCure then --Nova_NaturesCure
				for i=1, #members do
					if ValidDispel(members[i].Unit) 
					and CanHeal(members[i].Unit)
					and IsSpellInRange(GetSpellInfo(88423),members[i].Unit) == 1 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						PQR_CustomTarget = members[i].Unit
						CastSpellByName(tostring(GetSpellInfo(88423)),members[i].Unit)
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft alt key down - Auto dispeled!&amp;quot;)
						return true
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rejuvenation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VRejuvenationTankCheck then
	if PQR_SpellAvailable(774) 	
	and IsUsableSpell(774) 
	and Nova_CheckLastCast(774, 2.0) then
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
		if #Nova_Tanks &amp;gt; 0 then
			for i=1, #Nova_Tanks do
				if UnitThreatSituation(Nova_Tanks[i].Unit)
				 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 15
				 and Nova_Tanks[i].HP &amp;lt;= Nova_VRejuvenationTank
				 and CanHeal(Nova_Tanks[i].Unit)
				 and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
				 and IsSpellInRange(GetSpellInfo(774),Nova_Tanks[i].Unit) == 1 then
					if UnitBuffID(Nova_Tanks[i].Unit, 774, &amp;quot;PLAYER&amp;quot;) then
						if (select(7, UnitBuffID(Nova_Tanks[i].Unit, 774, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;lt;= 2) 
						and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
							--PQR_CustomTarget = Nova_Tanks[i].Unit
							CastSpellByName(tostring(GetSpellInfo(774)),Nova_Tanks[i].Unit)					
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRejuvenation soon expired on tank!&amp;quot;)	
							return true
						end
					else
						--PQR_CustomTarget = Nova_Tanks[i].Unit
						CastSpellByName(tostring(GetSpellInfo(774)),Nova_Tanks[i].Unit)
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRejuvenation tank!&amp;quot;)	
						return true
					end				
				end
			end
		end
			
		--if UnitThreatSituation(members[1].Unit)	== 3
		if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 20
		--and not UnitBuffID(members[1].Unit, 774, &amp;quot;PLAYER&amp;quot;)
		and not UnitBuffID(members[1].Unit, 774)
		and members[1].HP &amp;lt; Nova_VRejuvenation
		and CanHeal(members[1].Unit)
		and IsSpellInRange(GetSpellInfo(774),members[1].Unit) == 1 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 	--PQR_CustomTarget = members[1].Unit
		 	CastSpellByName(tostring(GetSpellInfo(774)),members[1].Unit)
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRejuvenation high threat member!&amp;quot;)	
		 	return true
		end
		
		--for i=1, #members do
			--if not UnitBuffID(members[i].Unit, 774)
			 --and members[i].HP &amp;lt; Nova_Rejuvenation 
			 --and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 20
			 --and CanHeal(members[i].Unit)
		     --and IsSpellInRange(GetSpellInfo(774),members[i].Unit) == 1 then
			 	--PQR_CustomTarget = members[i].Unit
			 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRejuvenation member!&amp;quot;)	
			 	--return true
			--end
		--end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tranquility</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Tranquility (TC)
if Nova_VMTranquilityCheck then	
	if Nova_Mod() == Nova_VMTranquility then
		if PQR_SpellAvailable(740)	
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)		
		and IsUsableSpell(740)		
		and select(2,GetSpellCooldown(740)) &amp;lt; 2 then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end
			CastSpellByName(tostring(GetSpellInfo(740),nil))		   
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Alt Key Down - Tranquility!&amp;quot;)
			return true
		end
	end		
end
--Tranquility 
if Nova_VTranquilityAutoCheck then
	if PQR_SpellAvailable(740)	
	and select(2,GetSpellCooldown(740)) &amp;lt; 2
	and not UnitBuffID(&amp;quot;player&amp;quot;, 108288)
	and IsUsableSpell(740) 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and not stopcasting 
	and not LLdebuff then
		--if AverageHealth(Nova_VCooldownsLimit) &amp;lt;= Nova_VCooldowns then
		if UnitBuffID(&amp;quot;player&amp;quot;, 106731) then --Incarnation: Tree of Life
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end
			
			if Nova_VSpiritWalkerGraceCheck then
				if IsUsableSpell(110806) --druid spell id 79206
				--and PQR_IsMoving(1) 
				and PQR_SpellAvailable(110806) then 
					CastSpellByName(tostring(GetSpellInfo(110806)),&amp;quot;player&amp;quot;)	
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSpirit walker grace then Tranquility&amp;quot;)
					--return true 
				end
			end		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFTranquility - Raid HP: &amp;quot;..AverageHealth(Nova_TranquilityLimit))		
			CastSpellByName(tostring(GetSpellInfo(740)),&amp;quot;player&amp;quot;)	
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>MarkOfTheWild</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--MarkOfTheWild
if not UnitBuffID(&amp;quot;player&amp;quot;,1126)
and not UnitBuffID(&amp;quot;player&amp;quot;,20217)
and not UnitBuffID(&amp;quot;player&amp;quot;,90363)
and not UnitBuffID(&amp;quot;player&amp;quot;,115921) 
and PQR_SpellAvailable(1126)
and IsUsableSpell(1126) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
then
	CastSpellByName(tostring(GetSpellInfo(1126)),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpiritWalkerGrace</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Symn SpiritWalker&amp;apos;s Grace from Shaman (work good with Tranquility) or Cleanse from Pally
if Nova_VSpiritWalkerGraceCheck then
	if members[1].HP &amp;lt; Nova_VSpiritWalkerGrace 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)	
	and IsUsableSpell(110806) --druid spell id 79206
	and PQR_IsMoving(1) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and PQR_SpellAvailable(110806)
	then 
		CastSpellByName(tostring(GetSpellInfo(110806),nil))
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSpirit walker grace - HP: &amp;quot;..members[1].HP)
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lifebloom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Lifebloom - ToL support - need test
local CLifebloom = false

for i=1, #members do	
	if ((UnitBuffID(members[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;)
	and select(7, UnitBuffID(members[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;gt; 2 
	and select(4, UnitBuffID(members[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;)) &amp;gt;= 3
	and UnitThreatSituation(members[i].Unit) == 3)
	or UnitBuffID(&amp;quot;boss1&amp;quot;, 33763))
	and not UnitBuffID(&amp;quot;player&amp;quot;, 106731) --Tree of Life
	then
		CLifebloom = true
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom on: &amp;quot;..UnitName(members[i].Unit))
	end
end

if not CLifebloom 
and PQR_SpellAvailable(33763) 
and IsUsableSpell(33763) then
--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	if #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			 
			 and CanHeal(Nova_Tanks[i].Unit)
			 and IsSpellInRange(GetSpellInfo(33763),Nova_Tanks[i].Unit) == 1 then
			 	if not UnitBuffID(&amp;quot;player&amp;quot;, 106731) 
			 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				 	CastSpellByName(tostring(GetSpellInfo(33763)),Nova_Tanks[i].Unit)	
					--PQR_CustomTarget = Nova_Tanks[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom tank!&amp;quot;)	
					return true				
				else
					if UnitBuffID(Nova_Tanks[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;)
					and (select(7, UnitBuffID(Nova_Tanks[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;lt; 2 
					or select(4, UnitBuffID(Nova_Tanks[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;)) &amp;lt; 3)
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(33763)),Nova_Tanks[i].Unit)	
						--PQR_CustomTarget = Nova_Tanks[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom tank!&amp;quot;)	
						return true				
					elseif not UnitBuffID(Nova_Tanks[i].Unit, 33763, &amp;quot;PLAYER&amp;quot;) 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(33763)),Nova_Tanks[i].Unit)	
						--PQR_CustomTarget = Nova_Tanks[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom tank!&amp;quot;)	
						return true									
					end
				end
			end
		end
	end
	
	if UnitThreatSituation(members[1].Unit) == 3	 
	 and members[1].HP &amp;lt; 30 
	 --and not UnitIsUnit(members[1].Unit, &amp;quot;player&amp;quot;)
	 and CanHeal(members[1].Unit)
	 and IsSpellInRange(GetSpellInfo(33763),members[1].Unit) == 1 then
	 	if not UnitBuffID(&amp;quot;player&amp;quot;, 106731) 
	 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	 		--PQR_CustomTarget = members[1].Unit
	 		CastSpellByName(tostring(GetSpellInfo(33763)),members[1].Unit)	
	 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom high threat member!&amp;quot;)	
	 		return true				
		else
			if UnitBuffID(members[1].Unit, 33763, &amp;quot;PLAYER&amp;quot;)
			and (select(7, UnitBuffID(members[1].Unit, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;lt; 2 
			or select(4, UnitBuffID(members[1].Unit, 33763, &amp;quot;PLAYER&amp;quot;)) &amp;lt; 3)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	 			--PQR_CustomTarget = members[1].Unit
	 			CastSpellByName(tostring(GetSpellInfo(33763)),members[1].Unit)	
	 			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom high threat member!&amp;quot;)	
	 			return true				
			elseif not UnitBuffID(members[1].Unit, 33763, &amp;quot;PLAYER&amp;quot;) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	 			--PQR_CustomTarget = members[1].Unit
	 			CastSpellByName(tostring(GetSpellInfo(33763)),members[1].Unit)	
	 			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifebloom high threat member!&amp;quot;)	
	 			return true							
			end
		end	 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nourish</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VNourishCheck then
	if PQR_SpellAvailable(50464) 	 
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and IsUsableSpell(50464) 
	 and not Nova_Moving 	 
	 and (UnitBuffID(members[1].Unit, 774, &amp;quot;PLAYER&amp;quot;) --Rejuvenation
	 or UnitBuffID(members[1].Unit, 8936, &amp;quot;PLAYER&amp;quot;) --Regrowth
	 or UnitBuffID(members[1].Unit, 33763, &amp;quot;PLAYER&amp;quot;) --Lifebloom
	 or UnitBuffID(members[1].Unit, 48438, &amp;quot;PLAYER&amp;quot;)) --Wild Growth
	 and CanHeal(members[1].Unit)	 
	 and IsSpellInRange(GetSpellInfo(50464),members[1].Unit) == 1 
	 and not stopcasting then				
		if members[1].HP &amp;lt;= Nova_VNourish
		and lowhpmembers &amp;lt; 3 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			--PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(50464)),members[1].Unit)									
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting Nourish - HP: &amp;quot; ..members[1].HP) 
			return true
		elseif not UnitBuffID(&amp;quot;player&amp;quot;, 100977) --Harmony 77495
		and (members[1].HP &amp;lt; (Nova_VNourish+10)) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			--PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(50464)),members[1].Unit)									
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting Nourish for Harmony - HP: &amp;quot; ..members[1].HP) 
			return true				
		elseif UnitBuffID(&amp;quot;player&amp;quot;, 100977) --Harmony 77495
		and (members[1].HP &amp;lt; (Nova_VNourish+10)) then
			if (select(7, UnitBuffID(&amp;quot;player&amp;quot;, 100977)) - GetTime() &amp;lt;= 2) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				--PQR_CustomTarget = members[1].Unit	
				CastSpellByName(tostring(GetSpellInfo(50464)),members[1].Unit)					
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting Nourish for Harmony - HP: &amp;quot; ..members[1].HP) 
				return true							
			end		
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WildMushroomBloom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--WildMushroom (TC)
if Nova_VWildMushroomBloomCheck then	
	if Nova_Mod() == Nova_VWildMushroomBloom then
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		--and IsSpellKnown(102791) 
		and PQR_SpellAvailable(102791)		
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
		and GetSpellCooldown(102791) == 0		
		then
		  CastSpellByName(tostring(GetSpellInfo(102791),nil))		   
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft Alt Key Down - WildMushroomBloom!&amp;quot;)
		  return true
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingTouch</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--HealingTouch
if Nova_VHealingTouchCheck then
	if PQR_SpellAvailable(5185) 
	 and IsSpellInRange(GetSpellInfo(5185),members[1].Unit) == 1
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(5185) 	 
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_VHealingTouch and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 20 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
			--NatureSwiftness 
			if not UnitBuffID(&amp;quot;player&amp;quot;,132158)
			and PQR_SpellAvailable(132158)
			and select(2,GetTalentRowSelectionInfo(2)) == 4
			and select(2,GetSpellCooldown(132158)) &amp;lt; 2
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
				CastSpellByName(tostring(GetSpellInfo(132158)),&amp;quot;player&amp;quot;)					
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast NatureSwiftness. HP: &amp;quot;..members[1].HP)
			end				
			CastSpellByName(tostring(GetSpellInfo(5185)),members[1].Unit)	
		 	--PQR_CustomTarget = members[1].Unit
		 	return true
		elseif not UnitCastingInfo(&amp;quot;player&amp;quot;) 
		and UnitBuffID(&amp;quot;player&amp;quot;, 16870) and members[1].HP &amp;lt;= Nova_VOmenHealingTouch then --Omen of Clarity buff cost no mana
			CastSpellByName(tostring(GetSpellInfo(5185)),members[1].Unit)	
		 	--PQR_CustomTarget = members[1].Unit
		 	return true			
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Regrowth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Regrowth - duration automatically refreshes to 6 sec each time Regrowth heals targets at or below 50% health.
--ToL support
if Nova_VRegrowthCheck then	
	if PQR_SpellAvailable(8936) 
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and IsSpellInRange(GetSpellInfo(8936),members[1].Unit) == 1
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(8936)	 
	 --and not UnitBuffID(members[1].Unit, 48504, &amp;quot;PLAYER&amp;quot;) --Living Seed
	 and not Nova_Moving 
	 and not stopcasting then	 	
		if members[1].HP &amp;lt; Nova_VRegrowth and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 20 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
			--NatureSwiftness 
			if not UnitBuffID(&amp;quot;player&amp;quot;,132158)
			and PQR_SpellAvailable(132158)
			and select(2,GetTalentRowSelectionInfo(2)) == 4
			and select(2,GetSpellCooldown(132158)) &amp;lt; 2
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
			then
				CastSpellByName(tostring(GetSpellInfo(132158)),&amp;quot;player&amp;quot;)	
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast NatureSwiftness. HP: &amp;quot;..members[1].HP)			
			end		
			CastSpellByName(tostring(GetSpellInfo(8936)),members[1].Unit)					
		 	--PQR_CustomTarget = members[1].Unit
		 	return true
		elseif UnitBuffID(&amp;quot;player&amp;quot;, 16870) 
		and Nova_CheckLastCast(8936, 0.5)
		and members[1].HP &amp;lt;= Nova_VOmenRegrowth 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Omen of Clarity buff cost no mana		
			CastSpellByName(tostring(GetSpellInfo(8936)),members[1].Unit)					
		 	--PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast OmenRegrowth. HP: &amp;quot;..members[1].HP)			
		 	return true		
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WildMushroom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--WildMushroom (TC)
if Nova_VWildMushroomCheck then	
	if Nova_Mod() == Nova_VWildMushroom then
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		--and IsSpellKnown(88747) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
		and PQR_SpellAvailable(88747)
		--and select(2,GetSpellCooldown(88747)) &amp;lt; 2 
		and GetSpellCooldown(88747) == 0		
		then
		  CastSpellByName(tostring(GetSpellInfo(88747),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft Control Key Down - WildMushroom!&amp;quot;)
		  return true
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- DruidForm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitBuffID(&amp;quot;player&amp;quot;,5487) 
	and UnitThreatSituation(&amp;quot;player&amp;quot;) == 3 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		return true		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Innervate</Name><Default>false</Default><SpellID>29166</SpellID><Actions></Actions><Lua>--Innervate
if Nova_VInnervateCheck then
	--if IsRightControlKeyDown() 
	if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_VInnervate
	and GetSpellCooldown(29166) == 0
	--and not UnitBuffID(&amp;quot;player&amp;quot;, 44203) --Tranquility
	--and select(2,GetSpellCooldown(64901)) &amp;lt; 2
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and PQR_SpellAvailable(29166) then	
		--CastSpellByName(tostring(GetSpellInfo(29166)),&amp;quot;player&amp;quot;)	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Control Key Down - Innervate!&amp;quot;)	
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WildGrowth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--WildGrowth - ToL support
--if Nova_VSmartCheck then	
	if Nova_VWildGrowthCheck then
		if PQR_SpellAvailable(48438) 
		and IsUsableSpell(48438)			
		and select(2,GetSpellCooldown(48438)) &amp;lt; 2 
		and not LLdebuff then
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
			--if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= Nova_LowMana 
			--and members[1].HP &amp;lt;= Nova_WildGrowth 
			--and lowhpmembers &amp;gt;= Nova_WildGrowthLimit then 
			if AverageHealth(Nova_VWildGrowthLimit) &amp;lt;= Nova_VWildGrowth then
				PRGetDistanceTable((Nova_VWildGrowth+5), 30, (Nova_VWildGrowthLimit-1))	
				PRGetDistanceTablebyHP(Nova_VWildGrowth,(Nova_VWildGrowthLimit-1))					
													
				if IsSpellInRange(GetSpellInfo(48438),prdistancebyhp[1].Unit) 
				and CanHeal(prdistancebyhp[1].Unit)
				and (prdistancebyhp[1].PD &amp;gt;= (Nova_VWildGrowthLimit-1))
				and prdistancebyhp[1].HP &amp;lt;= Nova_VWildGrowth 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then					 	
					CastSpellByName(tostring(GetSpellInfo(48438)),prdistancebyhp[1].Unit)
					--PQR_CustomTarget = prdistancebyhp[1].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast WildGrowth - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - PD: &amp;quot;..prdistancebyhp[1].PD) 
					return true
				end
										
			end		
		end
	end
--end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incarnation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Incarnation (TC)
if (Nova_VIncarnationCheck and Nova_Mod() == Nova_VIncarnation)
or (Nova_VIncarnationAutoCheck and AverageHealth(Nova_VCooldownsLimit) &amp;lt;= Nova_VCooldowns and not UnitBuffID(&amp;quot;player&amp;quot;, 124974) and not UnitBuffID(&amp;quot;player&amp;quot;, 108288)) then
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	--and IsSpellKnown(106731) 
	and PQR_SpellAvailable(106731)	
	and select(2,GetTalentRowSelectionInfo(4)) == 11
	and not UnitBuffID(&amp;quot;player&amp;quot;, 106731)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 	
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetSpellCooldown(106731) == 0 then
	  --CastSpellByName(tostring(GetSpellInfo(33891),nil))	--old spellid	   
	  CastSpellByName(tostring(GetSpellInfo(106731),nil))		   
	  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Shift Key Down - Incarnation!&amp;quot;)
	  return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HeartOfTheWild</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--HeartOfTheWild (TC)
if (Nova_VTalent90Check and Nova_Mod() == Nova_VTalent90) 
or (Nova_VTalent90AutoCheck and AverageHealth(Nova_VCooldownsLimit) &amp;lt;= Nova_VCooldowns and not UnitBuffID(&amp;quot;player&amp;quot;, 106731)) then
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	--and IsSpellKnown(108288) 
	and PQR_SpellAvailable(108288)		
	and select(2,GetTalentRowSelectionInfo(6)) == 16
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetSpellCooldown(108288) == 0 then
	  CastSpellByName(tostring(GetSpellInfo(108288),nil))		   
	  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Control Key Down - HeartOfTheWild!&amp;quot;)
	  return true
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>NatureSwiftness</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--NatureSwiftness 
if Nova_VNatureSwiftnessCheck then	
	if not UnitBuffID(&amp;quot;player&amp;quot;,132158)
	and PQR_SpellAvailable(132158)
	and select(2,GetTalentRowSelectionInfo(2)) == 4
	and select(2,GetSpellCooldown(132158)) &amp;lt; 2
	then
		if members[1].HP &amp;lt;= Nova_VNatureSwiftness 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(132158)),&amp;quot;player&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>NatureVigil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--NatureVigil (TC)
if (Nova_VTalent90Check and Nova_Mod() == Nova_VTalent90) 
or (Nova_VTalent90AutoCheck and AverageHealth(Nova_VCooldownsLimit) &amp;lt;= Nova_VCooldowns and not UnitBuffID(&amp;quot;player&amp;quot;, 106731)) then
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	--and IsSpellKnown(124974) 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and PQR_SpellAvailable(124974)		
	and select(2,GetTalentRowSelectionInfo(6)) == 18
	and GetSpellCooldown(124974) == 0 then
	  CastSpellByName(tostring(GetSpellInfo(124974),nil))		   
	  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Control Key Down - NatureVigil!&amp;quot;)
	  return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Moonfire
if (Nova_VDPSCheck and members[1].HP &amp;gt;= Nova_VDPS)
or UnitBuffID(&amp;quot;player&amp;quot;, 124974) --Nature&amp;apos;s Vigil
or UnitBuffID(&amp;quot;player&amp;quot;, 108288) then --HoTW
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)		
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 80
	and PQR_SpellAvailable(8921) 
	and UnitExists(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and IsSpellInRange(GetSpellInfo(8921),&amp;quot;target&amp;quot;) == 1
	and GetSpellCooldown(8921) == 0
	--and select(2,GetSpellCooldown(8921)) &amp;lt; 2
	and IsUsableSpell(8921)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)	
	and not LineOfSight(&amp;quot;target&amp;quot;)	
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		local MF,_,_,_,_,_,MFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;)
		if MF == nil 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(8921)),&amp;quot;target&amp;quot;)	
			return true 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wrath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Moonfire
if (Nova_VDPSCheck and members[1].HP &amp;gt;= Nova_VDPS)
or UnitBuffID(&amp;quot;player&amp;quot;, 124974) --Nature&amp;apos;s Vigil
or UnitBuffID(&amp;quot;player&amp;quot;, 108288) then --HoTW
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)	
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 80
	and PQR_SpellAvailable(5176) 
	and UnitExists(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and IsSpellInRange(GetSpellInfo(5176),&amp;quot;target&amp;quot;) == 1
	and GetSpellCooldown(5176) == 0
	--and select(2,GetSpellCooldown(8921)) &amp;lt; 2
	and IsUsableSpell(5176)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not stopcasting then
		CastSpellByName(tostring(GetSpellInfo(5176)),&amp;quot;target&amp;quot;)
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Symbiosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Symbiosis 
if Nova_VSymbiosisCheck then
	if PQR_SpellAvailable(110309)
	and select(2,GetSpellCooldown(110309)) &amp;lt; 2
	and IsUsableSpell(110309) 	
	and not UnitBuffID(&amp;quot;player&amp;quot;, 110309)
	and not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
												
	    for i=1,40 do
			local unitCheck = &amp;quot;raid&amp;quot;..i
		    if UnitExists(unitCheck) then
		    	local _, unitClass = UnitClass(unitCheck)
		    	--local symbiosis = UnitBuffID(unitCheck, 110309, &amp;quot;PLAYER&amp;quot;)
		        if unitClass == &amp;quot;SHAMAN&amp;quot; and not UnitBuffID(unitCheck, 110309) then		        	
		        	SymSHAMAN = unitCheck
		            break
		        end
		        
		        if unitClass == &amp;quot;PALADIN&amp;quot; and not UnitBuffID(unitCheck, 110309) then		        	
		        	SymPALADIN = unitCheck
		        end
		        
		        if unitClass == &amp;quot;DEATHKNIGHT&amp;quot; and not UnitBuffID(unitCheck, 110309) then		        	
		        	SymDEATHKNIGHT = unitCheck
		        end
		        
		        if unitClass == &amp;quot;HUNTER&amp;quot; and not UnitBuffID(unitCheck, 110309) then		        	
		        	SymHUNTER = unitCheck
		        end
		        
		        if unitClass == &amp;quot;MAGE&amp;quot; and not UnitBuffID(unitCheck, 110309) then		        	
		        	SymMAGE = unitCheck		           
		        end		        
		    end
		end
		
		if Nova_CheckLastCast(110309, 5) then		
			--if UnitExists(SymSHAMAN) and (UnitClass(SymSHAMAN) == &amp;quot;SHAMAN&amp;quot;) then			
			if UnitExists(SymSHAMAN) then			
				if IsSpellInRange(GetSpellInfo(110309),SymSHAMAN) == 1
		 		and CanHeal(SymSHAMAN) 
		 		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 			TargetUnit(SymSHAMAN)
		            CastSpellByName(tostring(GetSpellInfo(110309)),SymSHAMAN)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting SymSHAMAN - Name: &amp;quot; ..UnitName(SymSHAMAN)) 
					--PQR_CustomTarget = SymSHAMAN
					return true
				end
			elseif UnitExists(SymPALADIN) and not SymSHAMAN then
				if IsSpellInRange(GetSpellInfo(110309),SymPALADIN) == 1
		 		and CanHeal(SymPALADIN) 
		 		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
		 			TargetUnit(SymPALADIN)
					CastSpellByName(tostring(GetSpellInfo(110309)),SymPALADIN)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting SymPALADIN - Name: &amp;quot; ..UnitName(SymPALADIN)) 
					--PQR_CustomTarget = SymPALADIN
					return true		
				end
			elseif UnitExists(SymDEATHKNIGHT) and not SymSHAMAN then
				if IsSpellInRange(GetSpellInfo(110309),SymDEATHKNIGHT) == 1
		 		and CanHeal(SymDEATHKNIGHT) 
		 		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
		 			TargetUnit(SymDEATHKNIGHT)
					CastSpellByName(tostring(GetSpellInfo(110309)),SymDEATHKNIGHT)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting SymDEATHKNIGHT - Name: &amp;quot; ..UnitName(SymDEATHKNIGHT)) 
					--PQR_CustomTarget = SymDEATHKNIGHT
					return true		
				end
			elseif UnitExists(SymHUNTER) and not SymSHAMAN then
				if IsSpellInRange(GetSpellInfo(110309),SymHUNTER) == 1
		 		and CanHeal(SymHUNTER)	
		 		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
		 			TargetUnit(SymHUNTER)
					CastSpellByName(tostring(GetSpellInfo(110309)),SymHUNTER)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting SymHUNTER - Name: &amp;quot; ..UnitName(SymHUNTER)) 
					--PQR_CustomTarget = SymHUNTER
					return true		
				end
			elseif UnitExists(SymMAGE) and not SymSHAMAN then
				if IsSpellInRange(GetSpellInfo(110309),SymMAGE) == 1
		 		and CanHeal(SymMAGE) 
		 		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
		 			TargetUnit(SymMAGE)
					CastSpellByName(tostring(GetSpellInfo(110309)),SymMAGE)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting SymMAGE - Name: &amp;quot; ..UnitName(SymMAGE)) 
					--PQR_CustomTarget = SymMAGE
					return true
				end
			end		
		end
		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SwiftmendSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SwiftmendSmart
if Nova_VSwiftmendCheck 
and not LLdebuff then	
	--if Nova_VSmartCheck then	
		--if UnitAffectingCombat(&amp;quot;player&amp;quot;)		
		--and PQR_SpellAvailable(18562) 									
		--and IsUsableSpell(18562)	
		if #RejuSM &amp;gt; 0 then			
			if GetSpellCooldown(18562) == 0 then					
				if UnitBuffID(RejuSM[1].RSMUnit, 8936)
				or UnitBuffID(RejuSM[1].RSMUnit, 774) then				
					if IsSpellInRange(GetSpellInfo(18562),RejuSM[1].RSMUnit) 
					and CanHeal(RejuSM[1].RSMUnit) then
						if (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(50464)) --Nourish					
						then
							SpellStopCasting()
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStopCast Nourish for RejuSM &amp;quot;)
						end
						CastSpellByName(tostring(GetSpellInfo(18562)),RejuSM[1].RSMUnit) 						
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast SwiftmendSmart - Name: &amp;quot; ..UnitName(RejuSM[1].RSMUnit))						
						return true						
					end	
				end
			end
				
			if ((GetTime() - RejuSM[1].RSMCastTime) &amp;gt;= 7) then							
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFClear RejuSM 2&amp;quot;)							
				table.wipe(RejuSM)
				RejuSM = { }
				return true				
			end
		end
	--end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RejuSwiftmendSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RejuSwiftmendSmart
if Nova_VSwiftmendCheck then	
	--if Nova_VSmartCheck then	
		--if UnitAffectingCombat(&amp;quot;player&amp;quot;)
		if not RejuSM then
			RejuSM = { }
		end
		
		if PQR_SpellAvailable(774) 									
		and IsUsableSpell(774)					
		--and Nova_CheckLastCast(774, 1.0)	
		--and select(2,GetSpellCooldown(18562)) &amp;lt; 2 
		and select(2,GetSpellCooldown(774)) &amp;lt; 2 then		
			if #RejuSM &amp;lt; 1 then
				if AverageHealth(Nova_VSwiftmendLimit) &amp;lt;= Nova_VSwiftmend then	
					PRGetDistanceTable((Nova_VSwiftmend+10), 10, (Nova_VSwiftmendLimit-1))	
					PRGetDistanceTablebyHP(Nova_VSwiftmend,(Nova_VSwiftmendLimit-1))		
					if IsSpellInRange(GetSpellInfo(774),prdistancebyhp[1].Unit) 
					and CanHeal(prdistancebyhp[1].Unit)
					and (prdistancebyhp[1].PD &amp;gt;= (Nova_VSwiftmendLimit-1))
					and prdistancebyhp[1].HP &amp;lt;= Nova_VSwiftmend 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
						if UnitBuffID(prdistancebyhp[1].Unit, 8936)
						and not UnitBuffID(prdistancebyhp[1].Unit, 774) 
						and not UnitCastingInfo(&amp;quot;player&amp;quot;) then						
							table.insert(RejuSM, { RSMUnit = prdistancebyhp[1].Unit, RSMCastTime = GetTime(), RSMHP = prdistancebyhp[1].HP, RSMPD = prdistancebyhp[1].PD  } )					
							CastSpellByName(tostring(GetSpellInfo(774)),prdistancebyhp[1].Unit)
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Reju then SM - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD) 											
							return true
						else
							table.insert(RejuSM, { RSMUnit = prdistancebyhp[1].Unit, RSMCastTime = GetTime(), RSMHP = prdistancebyhp[1].HP, RSMPD = prdistancebyhp[1].PD  } )					
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInsert member to SM - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD) 											
							return true								
						end	
					end
				end
			else
				if Nova_UnitInfo(RejuSM[1].RSMUnit) &amp;gt; 95 and ((GetTime() - RejuSM[1].RSMCastTime) &amp;gt;= 3) then
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFClear RejuSM 1&amp;quot;)							
					table.wipe(RejuSM)
					RejuSM = { }
					return true	
				end
				
				if not UnitBuffID(RejuSM[1].RSMUnit, 8936)
				and not UnitBuffID(RejuSM[1].RSMUnit, 774)
				and IsSpellInRange(GetSpellInfo(774),RejuSM[1].RSMUnit) 
				and CanHeal(RejuSM[1].RSMUnit) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
					CastSpellByName(tostring(GetSpellInfo(774)),RejuSM[1].RSMUnit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew Reju then SM - Name: &amp;quot; ..UnitName(RejuSM[1].RSMUnit))
					return true
				end
			end
		end
	--end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BresOrRes</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--BresOrRes
if UnitExists(&amp;quot;mouseover&amp;quot;) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)    
and IsSpellInRange(GetSpellInfo(20484),&amp;quot;mouseover&amp;quot;) == 1
and GetSpellCooldown(20484) == 0 
and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil then
	CastSpellByName(tostring(GetSpellInfo(20484)),&amp;quot;mouseover&amp;quot;)	
	return false
elseif not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitIsConnected(&amp;quot;mouseover&amp;quot;)
and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 	
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and not UnitHasIncomingResurrection(&amp;quot;mouseover&amp;quot;) then		
	if PQR_SpellAvailable(83968) 		
	and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(95223)) ----Mass Resurrection debuff
	--and (IsSpellInRange(GetSpellInfo(83968),&amp;quot;mouseover&amp;quot;) == 1) - not work?
	--and UnitInRange(&amp;quot;mouseover&amp;quot;) 
	and Nova_CheckLastCast(83968, 2.0)		
	then
		if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
		end
		local deadnum = 0
		if group then
			for i = 1, GetNumGroupMembers() do 
				local member = group..i
				if UnitIsDeadOrGhost(member) then
					if not UnitDebuff(member, GetSpellInfo(95223)) then ----Mass Resurrection debuff 
						deadnum = deadnum + 1
					end
				end
			end
		end		
		if deadnum &amp;gt;= 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(83968),nil)) --Mass Resurrection	 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto MasRes!&amp;quot;)
			return false		
		end
	end
	
	if PQR_SpellAvailable(115178)
	and IsUsableSpell(115178) 		
	and (IsSpellInRange(GetSpellInfo(115178),&amp;quot;mouseover&amp;quot;) == 1) 
	and Nova_CheckLastCast(115178, 2.0)		
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 
		CastSpellByName(tostring(GetSpellInfo(115178)),&amp;quot;mouseover&amp;quot;) --Resurrection	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto Res!&amp;quot;)
		return false			
	end			
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Drink</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
--and GetItemCount(80618,false,true) &amp;gt; 0	
and PQR_SpellAvailable(80618) --Mage cookies	
and not UnitBuffID(&amp;quot;player&amp;quot;, 104269)
and not Nova_Moving 
and GetItemCooldown(80618) == 0 then
	UseItemByName(80618)
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMage cookies - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- NewEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then
	local boss,bossid = bossid()
	local dispelid = 88423		
	local buff = { }
	stopcasting = false
	stopfade = false
	LLdebuff = false
	LLdebuffunit = false	
	if UnitExists(boss) then
		local _, _, rdifficulty = GetInstanceInfo()
		--TFT raid		
		if bossid == 69465 and (rdifficulty == 5 or rdifficulty ==6) then --Jin&amp;apos;rokh the Breaker
			local buff = { 138732 } --Ionization 
			local fluiditydebuff  = 138002 --Fluidity
			RaidJBDispel(dispelid,buff,fluiditydebuff,5)
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 
			if LLdebuff
			and UnitBuffID(LLdebuffunit, 33763, &amp;quot;PLAYER&amp;quot;) 
			and PQR_SpellAvailable(33763) 
			and IsUsableSpell(33763) then
				CastSpellByName(tostring(GetSpellInfo(33763)),&amp;quot;player&amp;quot;)	
				return true
			end
		elseif bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68476 then --Horridon
			--local buff  = { 136708, 136719, 136587, 136710, 136512 } --Magic, Magic, Poison, Disease, Curse
			local buff  = { 136708, 136719, 136587, 136512 }
			RaidDispel(dispelid,buff) 
		elseif bossid == 68065 or bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head 
		-- Players affected by  Cinders should be quick to run over any existing  Icy Ground void zones, and then move to a safe location (out of the way of the raid) to be dispelled.		
			local buff  = { 139822 } 	
			RaidRangeDispel(dispelid,buff,10) 		
		elseif bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispelDelay(dispelid,buff,5)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then 
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff) --Protectors of the Endless, Lightning Prison
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		--else
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFBossid: &amp;quot;..bossid..&amp;quot; - boss: &amp;quot;..boss)
		end		
		
		if bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- OldEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_OldEventsCheck then --Old raid
	local boss,bossid = bossid()
	if UnitExists(boss) then					
		if bossid == 55294 then
			local PQ_SN = PQ_Shrapnel
			local PQ_FL = PQ_FadingLight
			local PQ_HOT = PQ_HourOfTwilight				
		
			-- Fading Light Debuff
			for i=1,#PQ_FL do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
			
			-- Hour of Twilight
			--if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() then	
			if false then
				if PQR_SpellAvailable(115176)
				and select(2,GetSpellCooldown(115176)) &amp;lt; 2
				then SpellStopCasting() CastSpellByName(tostring(GetSpellInfo(115176)),&amp;quot;player&amp;quot;) return true end
			else
				local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(boss) 
				for i=1,#PQ_HOT do
					if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					end
				end
			end
		end
		
		if bossid == 56173 then
			-- Target for Shrapnel
			for i=1,#PQ_SN do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i])) - GetTime() &amp;lt; 2 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RacialsCheck
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then

	local PQ_Class = select(2, UnitClass(&amp;quot;player&amp;quot;)) 
	
	--Draenei 
	local GiftOfTheNaaru = 59542	
	--Blood Elf
	local ArcaneTorrent = 28730 --mana regen
	
	if PQ_Class == &amp;quot;PALADIN&amp;quot; then
		GiftOfTheNaaru = 59542	
	elseif PQ_Class == &amp;quot;MONK&amp;quot; then 
		GiftOfTheNaaru = 121093
		ArcaneTorrent = 129597 --chi regen
	elseif PQ_Class == &amp;quot;PRIEST&amp;quot; then  
		GiftOfTheNaaru = 59544
	elseif PQ_Class == &amp;quot;SHAMAN&amp;quot; then 
		GiftOfTheNaaru = 59547
	end

	--Troll 
	local Berserking = 26297 
	--Undead
	local WillOfTheForsaken = 7744  
	--Dwarven 
	local Stoneform = 20594 
	--Human 
	local EveryManForHimself = 59752
	--Undead 
	--local Cannibalize = 20577 --not much helpful
	--Orc 
	local BloodFury = 33702
	--Gloves Engineer
	local _, GECooldown, GEReady = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10)
			
	--HP
	if IsSpellKnown(GiftOfTheNaaru) 
	and GetSpellCooldown(GiftOfTheNaaru) == 0 
	and PQR_SpellAvailable(GiftOfTheNaaru)
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30	
	then		
		CastSpellByName(tostring(GetSpellInfo(GiftOfTheNaaru),nil))	 
		return true 
	end
	
	--Mana
	if IsSpellKnown(ArcaneTorrent) 
	and PQ_Class ~= &amp;quot;MONK&amp;quot;
	and GetSpellCooldown(ArcaneTorrent) == 0 
	and PQR_SpellAvailable(ArcaneTorrent)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80	
	then		
		CastSpellByName(tostring(GetSpellInfo(ArcaneTorrent),nil))	 
		return true 
	end	
  	
  	--CDs
  	if not racialcds then
	  	function racialcds()
			if IsSpellKnown(BloodFury) 
			and GetSpellCooldown(BloodFury) == 0 
			and PQR_SpellAvailable(BloodFury)	
			then		
				CastSpellByName(tostring(GetSpellInfo(BloodFury),nil))	 
				return true 
			elseif IsSpellKnown(Berserking) 
			and GetSpellCooldown(Berserking) == 0 
			and PQR_SpellAvailable(Berserking)	
			then		
				CastSpellByName(tostring(GetSpellInfo(Berserking),nil))	 
				return true 
			elseif GECooldown == 0 
			and GEReady == 1 then
				UseInventoryItem(10)
			end
		end
	end
  	
  	if lowhpmembers &amp;gt;=5 then
  		racialcds()
  	end
  	
  	--Removes any Charm, Fear and Sleep effect
	if not GotFear then
		function GotFear(t) 
			local debuff = { 10326, 8122, 2094, 5782, 5484, 6358, 5246 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end
	if IsSpellKnown(WillOfTheForsaken) 
	and GetSpellCooldown(WillOfTheForsaken) == 0 
	and PQR_SpellAvailable(WillOfTheForsaken)	
	and GotFear(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(WillOfTheForsaken),nil))	 
		return true 
	end  
	
	--Removes all poison, disease and bleed effects and reduces all damage taken by 10% for 8 sec
	if not GotPoison then
		function GotPoison(t)
			local i, debuff = 1, select(5,UnitDebuff(t, 1)) 
			while debuff do
				if debuff == &amp;quot;Poison&amp;quot; or debuff == &amp;quot;Disease&amp;quot; then return true end
				i = i + 1 debuff = select(5,UnitDebuff(t, i)) 
			end
		end
	end	
	if IsSpellKnown(Stoneform) 
	and GetSpellCooldown(Stoneform) == 0 
	and PQR_SpellAvailable(Stoneform)	
	and GotPoison(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(Stoneform),nil))	 
		return true 
	end    	
	
	--Removes all movement impairing effects and all effects which cause loss of control of your character
	if not LostControl then
		function LostControl(t) 
			local debuff = { 122, 10326, 8122, 2094, 5782, 5484, 6358, 5246, 408 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end  
	if IsSpellKnown(EveryManForHimself) 
	and GetSpellCooldown(EveryManForHimself) == 0 
	and PQR_SpellAvailable(EveryManForHimself)	
	and LostControl(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(EveryManForHimself),nil))	 
		return true 
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DRUID>