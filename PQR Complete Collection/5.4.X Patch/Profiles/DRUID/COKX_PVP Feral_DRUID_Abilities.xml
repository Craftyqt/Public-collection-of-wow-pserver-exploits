<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>Mark of the Wild</Name><Default>false</Default><SpellID>1126</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not HaveBuff(&amp;quot;player&amp;quot;,5215,0)  then
  for i=1,numberfriends do 
    if UnitExists(members[i])
    and UnitInRange(members[i])
      and not UnitAffectingCombat(members[i])
    and not HaveBuff(&amp;quot;player&amp;quot;,5215,0) 
    and not HaveBuff(members[i],{115921,20217,1126,90363},0) 
    
    then return true end
  end
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Savage Roar</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,127538,1) 
and HaveBuff(&amp;quot;player&amp;quot;,768,0) 
then 
 CastSpellByName(GetSpellInfo(52610),nil) 
 return true
 end
 
 if UnitExists(&amp;quot;target&amp;quot;)
 and UnitExists(cTar[1])
 and HaveBuff(&amp;quot;player&amp;quot;,5215)
 and not HaveBuff(&amp;quot;player&amp;quot;,127538,11) 
 and (inMelee == 1 or ecTar[1].Range &amp;lt; 15)
 then 
  CastSpellByName(GetSpellInfo(52610),nil) 
 return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Shred / Mangle</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if  PQR_UnitFacing(&amp;quot;target&amp;quot;, &amp;quot;player&amp;quot;,180) then
SpellID=33876
else
SpellID=5221
end
if IsUsableSpell(SpellID) 
and (IsSpellInRange(GetSpellInfo(33876),&amp;quot;target&amp;quot;) == 1 )
and GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt;= 4
and not UnitBuffID(&amp;quot;player&amp;quot;,102543)
and goRage == 1
then 
  CastSpellByName(GetSpellInfo(SpellID),nil)
   return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rip</Name><Default>false</Default><SpellID>1079</SpellID><Actions>/use 10 |/use 13</Actions><Lua>if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;gt;= 4
and inMelee == 1
and not HaveDebuff(&amp;quot;target&amp;quot;,1079,2,&amp;quot;PLAYER&amp;quot;) 
and UnitHealth(&amp;quot;target&amp;quot;)&amp;gt; 50000 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rake</Name><Default>false</Default><SpellID>1822</SpellID><Actions></Actions><Lua>if not HaveDebuff(&amp;quot;target&amp;quot;,1822,2,&amp;quot;PLAYER&amp;quot;) 
and inMelee == 1
and GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 5
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ferocious Bite</Name><Default>false</Default><SpellID>22568</SpellID><Actions></Actions><Lua>if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;gt;= 4
and inMelee == 1
and (UnitPower(&amp;quot;player&amp;quot;) &amp;gt;=50 or UnitHealth(&amp;quot;target&amp;quot;)&amp;lt; 100000 or UnitBuffID(&amp;quot;player&amp;quot;,106951) )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Faerie Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,{102355,770},1) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and ecTar[1].Range &amp;lt; 35
and not HaveBuff(&amp;quot;player&amp;quot;,5215,3) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitHealth(&amp;quot;target&amp;quot;)&amp;gt; 100000
then CastSpellByName(GetSpellInfo(770),&amp;quot;target&amp;quot;)
CastSpellByName(GetSpellInfo(102355),&amp;quot;target&amp;quot;)
return true end


for i=1, #cTar do
local class = select(2, UnitClass(cTar[i]))
if not HaveDebuff(cTar[i],{102355,770},3) 
and UnitExists(cTar[i]) 
and ecTar[i].Range &amp;lt; 35
and LineOfSight(cTar[i])
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and (class==&amp;quot;DRUID&amp;quot; or class==&amp;quot;ROGUE&amp;quot;)
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(770),PQR_CustomTarget)
CastSpellByName(GetSpellInfo(102355),PQR_CustomTarget)
return true
end
end

for i=1, #cTar do
local class = select(2, UnitClass(cTar[i]))
if not HaveDebuff(cTar[i],{102355,770},3) 
and UnitExists(cTar[i]) 
and ecTar[i].Range &amp;lt; 35
and LineOfSight(cTar[i])
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(770),PQR_CustomTarget)
CastSpellByName(GetSpellInfo(102355),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Tiger&amp;apos;s Fury</Name><Default>false</Default><SpellID>5217</SpellID><Actions></Actions><Lua>local powerType, powerToken, altR, altG, altB = UnitPowerType(&amp;quot;player&amp;quot;)

if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 35
and inMelee == 1
and (IsSpellInRange(GetSpellInfo(33876),&amp;quot;target&amp;quot;) == 1 )
and powerType == 3
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Thrash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if swipe
and inMelee == 1
then 
  if IsUsableSpell(106830) then CastSpellByName(GetSpellInfo(106830),nil) end
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Swipe</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if swipe
and HaveDebuff(&amp;quot;target&amp;quot;,106830,0) 
and IsUsableSpell(62078) 
and inMelee == 1
then 
  CastSpellByName(GetSpellInfo(62078),nil) 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ravage!</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--local name, rank, icon, count, debuffType, duration, expirationTime, unitCaster, isStealable, 
--shouldConsolidate, spellId = UnitBuff(&amp;quot;player&amp;quot;)


if (UnitBuffID(&amp;quot;player&amp;quot;,81022,&amp;quot;EXACT&amp;quot;) or UnitBuffID(&amp;quot;player&amp;quot;,102543))
and UnitBuffID(&amp;quot;player&amp;quot;,768)
and inMelee == 1
and GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 5
and goRage == 1
 then 
RunMacroText(&amp;quot;/cast &amp;quot;..GetSpellInfo(102545))
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stealth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if  HaveBuff(&amp;quot;player&amp;quot;,5215,0) 
and not HaveBuff(&amp;quot;player&amp;quot;,5487,0)
and (IsSpellInRange(GetSpellInfo(33876),&amp;quot;target&amp;quot;) == 1 )
and not UnitBuffID(&amp;quot;player&amp;quot;,102543) 
then  CastSpellByName(GetSpellInfo(9005),nil)
 end

if  HaveBuff(&amp;quot;player&amp;quot;,102547,0) 
and not HaveBuff(&amp;quot;player&amp;quot;,5487,0)
and (IsSpellInRange(GetSpellInfo(33876),&amp;quot;target&amp;quot;) == 1 )
and UnitBuffID(&amp;quot;player&amp;quot;,102543) 
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;gt; 60 
then  CastSpellByName(GetSpellInfo(102546),nil) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stealth go</Name><Default>false</Default><SpellID>5215</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not HaveBuff(&amp;quot;player&amp;quot;,5487,0)
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;gt; 50 
and not UnitBuffID(&amp;quot;player&amp;quot;,783) 
and not UnitBuffID(&amp;quot;player&amp;quot;,102543) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Instant</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if  100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 15 
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 70 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and UnitBuffID(&amp;quot;target&amp;quot;,1022)
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;target&amp;quot;)
saveinstant = 0
return true
 end
 
if hibernatemod 
and UnitCreatureType(&amp;quot;mouseover&amp;quot;) == &amp;quot;Beast&amp;quot;
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and CokxDRInfo(&amp;quot;mouseover&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
and UnitExists(&amp;quot;mouseover&amp;quot;)
then
CastSpellByName(GetSpellInfo(2637),&amp;quot;mouseover&amp;quot;)
saveinstant = 0
return true
 end

if hibernatemod 
and UnitCreatureType(&amp;quot;focus&amp;quot;) == &amp;quot;Beast&amp;quot;
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
and UnitExists(&amp;quot;focus&amp;quot;)
then
CastSpellByName(GetSpellInfo(2637),&amp;quot;focus&amp;quot;)
saveinstant = 0
return true
 end
 
 if hibernatemod 
and UnitCreatureType(&amp;quot;target&amp;quot;) == &amp;quot;Beast&amp;quot;
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitExists(&amp;quot;focus&amp;quot;)
and not UnitExists(&amp;quot;mouseover&amp;quot;)
then
CastSpellByName(GetSpellInfo(2637),&amp;quot;Target&amp;quot;)
saveinstant = 0
return true
 end

----------------------------------------

if  cyclonemod 
and UnitExists(&amp;quot;mouseover&amp;quot;)
and CokxDRInfo(&amp;quot;mouseover&amp;quot;,&amp;quot;cyclone&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;mouseover&amp;quot;)
saveinstant = 0
return true
 end

if  cyclonemod 
and UnitExists(&amp;quot;focus&amp;quot;)
and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;cyclone&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;focus&amp;quot;)
saveinstant = 0
return true
 end
 
 if  cyclonemod 
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitExists(&amp;quot;focus&amp;quot;)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;cyclone&amp;quot;) &amp;lt; 3
and not UnitExists(&amp;quot;mouseover&amp;quot;)
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;target&amp;quot;)
saveinstant = 0
return true
 end

---------Roots--------------

if  rootmod 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)

and UnitExists(&amp;quot;mouseover&amp;quot;)
and CokxDRInfo(&amp;quot;mouseover&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(339),&amp;quot;mouseover&amp;quot;)
saveinstant = 0
return true
 end


if  rootmod 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)

and UnitExists(&amp;quot;focus&amp;quot;)
and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(339),&amp;quot;focus&amp;quot;)
saveinstant = 0
return true
 end

 if  rootmod 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitExists(&amp;quot;focus&amp;quot;)
and not UnitExists(&amp;quot;mouseover&amp;quot;)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(339),&amp;quot;target&amp;quot;)
saveinstant = 0
return true
 end

------------------------------------</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti Root</Name><Default>false</Default><SpellID>768</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;PLAYER&amp;quot;,aRoots(),0)
and not HaveBuff(&amp;quot;player&amp;quot;,5487,0) then return true end

if GetUnitSpeed(&amp;quot;Player&amp;quot;) &amp;gt; 0
and GetUnitSpeed(&amp;quot;Player&amp;quot;) ~= 4.5 and GetUnitSpeed(&amp;quot;Player&amp;quot;) &amp;lt; 7
and not HaveBuff(&amp;quot;player&amp;quot;,5487,0)
and not (IsSpellInRange(&amp;quot;Mangle&amp;quot;, &amp;quot;target&amp;quot;) == 1 )
and not HaveBuff(&amp;quot;player&amp;quot;,5215,0) 
and not IsSwimming()
then return true end

if (select(4,UnitDebuffID(&amp;quot;player&amp;quot;,108200)))==3 or (select(4,UnitDebuffID(&amp;quot;player&amp;quot;,108200)))==4  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bear Mangle</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,5487)
 and IsUsableSpell(33878)
 and inMelee == 1
 then 
   	CastSpellByName(tostring(GetSpellInfo(33878)))
   	return true
  	
  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bear Lacerate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,5487)
and IsUsableSpell(33745)
and inMelee == 1
 then 
   	CastSpellByName(tostring(GetSpellInfo(33745)))
   	return true
  end
  
  if UnitBuffID(&amp;quot;player&amp;quot;,5487)
  and IsUsableSpell(77758)
  and inMelee == 1
 then 
   	CastSpellByName(tostring(GetSpellInfo(77758)))
   	return true
  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bear Heal</Name><Default>false</Default><SpellID>22842</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,5487)
 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;=20
 then 
  	return true
  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bear Maul</Name><Default>false</Default><SpellID>6807</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,5487)
 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;=90
 and inMelee == 1
 then 
  	return true
  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>&amp;gt; RDY</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  ----------------------------------
  -- Load Data Files
  ----------------------------------

	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_DATA.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Datafile loaded!&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_Settings.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Settings loaded!&amp;quot;)
		
	end
	
	
	PQR_RotationStarted = false
end
local numglobal,numperchar = GetNumMacros()
if numperchar &amp;lt; 18 then
if not GetMacroInfo(&amp;quot;AvailableMacros&amp;quot;) then
CreateMacro(&amp;quot;AvailableMacros&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;/Pause&amp;quot;, 1)
end
end


	--------------------
	-- Register CVars --
	--------------------

	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;, 				Var2 = 1		}	
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end



--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true

	
		SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
	
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
end
	

if getInfos == nil then
getInfos = 0
end
CastClick()
settings()
checks()
if  GetTime() - getInfos &amp;gt; 1 and (GCDCheck(33876)) then
getInfos = GetTime()
clearCEH()
if cTtimer == nil then cTtimer = 0
end
if GetTime() - cTtimer &amp;gt; 5 then
cTtimer = GetTime()
clearTables()
end
getcTar()
RangeCheckcTar()
clearcTar()
getmembers()
RangeCheckMembers()
clearmembers()
RangeCheckPet()
interrupt()
if GetItemCount(GetItemInfo(80618)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(57287))end

if GetItemCount(GetItemInfo(5512)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(58275))end
RunMacroText(&amp;quot;/run UIErrorsFrame:Clear()&amp;quot;)
end
GroupInfo()

cokxMacros()

if rotationPause == nil then rotationPause = 0 end

if Nova_Pause == 1 then
rotationPause = GetTime()
SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
end
if GetTime() - rotationPause &amp;lt; 0.3 then
if MacroSpellNumber ~= 0 and MacroUnitNumber ~= 0 and GCDCheck(MacroSpellNumber) then
CastSpellByName(GetSpellInfo(MacroSpellNumber),MacroCT)
return true
end
return true
end
SetCVar(&amp;quot;MacroSpell&amp;quot;, 0)
SetCVar(&amp;quot;MacroUnit&amp;quot;, 0)
SetCVar(&amp;quot;MacroHP&amp;quot;, 100)
SetCVar(&amp;quot;MacroDR&amp;quot;,nil)
SetCVar(&amp;quot;MacroBuff&amp;quot;,nil)
SetCVar(&amp;quot;MacroDebuff&amp;quot;,nil)


if inMelee == nil then inMelee = 0 end

if UnitExists(&amp;quot;target&amp;quot;) and
IsSpellInRange(GetSpellInfo(33876),&amp;quot;target&amp;quot;) == 1
then
inMelee = 1
else
inMelee = 0
end

if druidpause
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
then return true end


if  GetTime() - getInfos &amp;lt; 0.2 and  GetTime() - getInfos &amp;gt; 0.1 and (GCDCheck(33876)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.6 and  GetTime() - getInfos &amp;gt; 0.5 and (GCDCheck(33876)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.4 and  GetTime() - getInfos &amp;gt; 0.3 and (GCDCheck(33876)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.8 and  GetTime() - getInfos &amp;gt; 0.7 and (GCDCheck(33876))  then
return true
end


if numberfriends == 0 or numberfriends &amp;gt; #members then
numberfriends = #members or nil
end
if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 50 then
goRage = 1
end
if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 10 then
goRage = 0
end


mySymbiosis = 0
for i=1, #members do
if HaveBuff(members[i],110490,0,&amp;quot;player&amp;quot;) then
mySymbiosis = 1 -- Warlock
end
if HaveBuff(members[i],110484,0,&amp;quot;player&amp;quot;) then
mySymbiosis = 2 -- Paladin
end
if HaveBuff(members[i],110486,0,&amp;quot;player&amp;quot;) then
mySymbiosis = 3 -- Rogue
end
if HaveBuff(members[i],110485,0,&amp;quot;player&amp;quot;) then
mySymbiosis = 4 -- Priest
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti Hibernate</Name><Default>false</Default><SpellID>0</SpellID><Actions>/cancelaura Cat Form</Actions><Lua>local InterruptSpells = { 2637,1513 }

if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 5 then
	for y=1, 5 do
		local aTarget = &amp;quot;arena&amp;quot;..tostring(y)
		if UnitExists(aTarget) then
			local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(aTarget)
			for _, v in ipairs(InterruptSpells) do
				if GetSpellInfo(v) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
						
						return true
					end
				end
			end
		end
	end
	local fTarget = &amp;quot;focus&amp;quot;
	if UnitExists(fTarget) then
		local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(fTarget)
		for _, v in ipairs(InterruptSpells) do
			if GetSpellInfo(v) == spellName and canInterrupt == false then
				if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
					
					return true
				end
			end
		end
	end
	local tTarget = &amp;quot;target&amp;quot;
	if UnitExists(tTarget) then
		local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(tTarget)
		for _, v in ipairs(InterruptSpells) do
			if GetSpellInfo(v) == spellName and canInterrupt == false then
				if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
					
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Instant save</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not saveinstant then saveinstant = 0 end

if qnps
and saveinstant == 0
then
saveinstant = 1
PQR_WriteToChat(&amp;quot;Next Predatory Swiftness is saved for you!&amp;quot;)
end

local PrdSwift = select(7, UnitBuffID(&amp;quot;player&amp;quot;, 69369))
if saveinstant == 1
and UnitBuffID(&amp;quot;player&amp;quot;, 69369)
and PrdSwift - GetTime() &amp;lt; 2 then
saveinstant = 0
PQR_WriteToChat(&amp;quot;Next Predatory Swiftness is CANCELED!&amp;quot;)
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Not in Combat</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
or (UnitExists(&amp;quot;target&amp;quot;) and  HaveBuff(&amp;quot;target&amp;quot;,{642,45438},0)) then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Maim</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if  maimmod and not HaveDebuff(&amp;quot;target&amp;quot;,dCC())
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;stun&amp;quot;) &amp;lt; 3
and inMelee == 1
then 
if IsSpellKnown(5211) and GetSpellCooldown(GetSpellInfo(5211))== 0 then CastSpellByName(GetSpellInfo(5211),&amp;quot;target&amp;quot;)
else
if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;gt; 2
 then
CastSpellByName(GetSpellInfo(22570),&amp;quot;target&amp;quot;)
return true
 end
 end
 end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CC and bad Curses</Name><Default>false</Default><SpellID>2782</SpellID><Actions></Actions><Lua>for i=1,numberfriends do 
    if UnitInRange(members[i])
    
     and HaveDebuff(members[i],{51514,80240},0) 
    and LineOfSight(members[i])
    then
      PQR_CustomTarget = members[i]  
       return true
       end
    end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Reju Selfheal</Name><Default>false</Default><SpellID>774</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 80 
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 20 
and inMelee == 0
and not UnitBuffID(&amp;quot;player&amp;quot;,774) 
and  not UnitBuffID(&amp;quot;player&amp;quot;,5487)
and (not UnitExists(&amp;quot;target&amp;quot;) or (UnitExists(cTar[1])
and ecTar[1].Range &amp;gt; 15))
then
return true
 end</Lua><RecastDelay>5000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incarnation Prowl</Name><Default>false</Default><SpellID>0</SpellID><Actions>/cast Prowl</Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not UnitBuffID(&amp;quot;player&amp;quot;,783) 
and not UnitBuffID(&amp;quot;player&amp;quot;,102547) 
and UnitBuffID(&amp;quot;player&amp;quot;,102543) 
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 50 
then return true end</Lua><RecastDelay>10000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SkullBash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for j=1 , #cTar do
	 if  UnitExists(cTar[j])
     and (100 * UnitHealth(cTar[j]) / UnitHealthMax(cTar[j])) &amp;lt; 60
     then
     ddislow = 1
    
     
     end
  end
  
  for j=1 , #cTar do
	 if  UnitExists(cTar[j])
     and IsHealer(cTar[j])
     then
     interrupthealer = 1
     end
  end
  
  for i=1, numberfriends do
  if UnitExists(members[i])
  and CalculateHP(members[i]) &amp;lt; 60 then
  interrupthealer = 0
  end
  end
  


for i=1, #cTar do
	if UnitExists(cTar[i])
	  and IsHealer(cTar[i])
	  and ddislow == 1
	  and interrupthealer == 1
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])
	 then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(80965)) == 0
							and inRange(cTar[i],80965)
							and ecTar[i].Facing
							and LineOfSight(cTar[i])
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(80965),PQR_CustomTarget)
					--		PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(80965)) == 0
							and inRange(cTar[i],80965)
							and ecTar[i].Facing
							and LineOfSight(cTar[i])
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(80965),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
		end
	end






for i=1, #cTar do
	if UnitExists(cTar[i])
	 and (interrupthealer == 0 or (ddislow == 0 and interrupthealer == 1))
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(80965)) == 0
							and inRange(cTar[i],80965)
							and ecTar[i].Facing
							and LineOfSight(cTar[i])
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(80965),PQR_CustomTarget)
					--		PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
	
	

---------------------------------------------




	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(80965)) == 0
							and inRange(cTar[i],80965)
							and ecTar[i].Facing
							and LineOfSight(cTar[i])
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(80965),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
		end
	end



ddislow = 0
interrupthealer = 0</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Touch</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not IsRightShiftKeyDown() 
or not IsRightAltKeyDown() 
or not IsRightControlKeyDown() 
then

if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 90
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and saveinstant == 0
then
CastSpellByName(GetSpellInfo(5185),&amp;quot;player&amp;quot;)
return true
end



for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt; 85
and UnitInRange(members[i])
and HaveBuff(&amp;quot;player&amp;quot;,69369,0) 
and LineOfSight(members[i])
and saveinstant == 0
then
  PQR_CustomTarget = members[i]
 CastSpellByName(GetSpellInfo(5185),PQR_CustomTarget)
 return true
   end
end

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>IMMUN</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 
UnitBuffID(&amp;quot;target&amp;quot;,45438)
or
UnitBuffID(&amp;quot;target&amp;quot;,642)
or
UnitBuffID(&amp;quot;target&amp;quot;,19263)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Natures Grasp</Name><Default>false</Default><SpellID>16689</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitPowerMax(cTar[i]) &amp;lt; 200000
and CokxDRInfo(cTar[i],&amp;quot;root&amp;quot;) &amp;lt; 2
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 70
and LineOfSight(cTar[i])
and (IsSpellInRange(GetSpellInfo(33876),cTar[i]) == 1 )
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
then
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stun/Blind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ccDebuffs = {108194,115001,91800,91797,33786,99,2637,22570,5211,9005,102546,81261,110698,113004,113056,126458,47476,1513,19503,19386,34490,90337,24394,126355,118271,44572,31661,118,55021,126451,122242,119392,119381,115078,117368,116709,105421,115752,105593,853,119072,20066,10326,113506,605,88625,64044,8122,113792,87204,15487,64058,2094,1833,1776,408,113953,6770,1330,51722,51514,113287,5782,118699,5484,6789,30283,104045,89766,7922,118895,5246,20511,132168,105771}

for i=1, #cTar do
if 
UnitExists(cTar[i])
and IsSpellKnown(99)
and LineOfSight(cTar[i])
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and select(2,GetSpellCooldown(99)) == 0
and HaveBuff(cTar[i],attentionBuffs(),2) 
and not HaveDebuff(cTar[i],ccDebuffs,1)

then
if ecTar[i].Range &amp;lt;13 then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(99),PQR_CustomTarget)
return true
end
end
end

for i=1, #cTar do
if UnitExists(cTar[i]) 
and IsSpellKnown(5211)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and select(2,GetSpellCooldown(5211)) == 0
and HaveBuff(cTar[i],attentionBuffs(),1) 
and not HaveDebuff(cTar[i],ccDebuffs,1)

then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(5211),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CatForm</Name><Default>false</Default><SpellID>768</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not HaveBuff(&amp;quot;player&amp;quot;,5487,0)
and (not UnitBuffID(&amp;quot;player&amp;quot;,768) and not UnitBuffID(&amp;quot;player&amp;quot;,783) and not UnitBuffID(&amp;quot;player&amp;quot;,5487))
then return true

end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Cyclone</Name><Default>false</Default><SpellID>33786</SpellID><Actions></Actions><Lua>if cycloneon == nil then  cycloneon = 0 end
if cycloneonhealer == nil then  cycloneonhealer = 0 end
if unitcycloneed == nil then  unitcycloneed = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{33786},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	cycloneonhealer = 1
	end
	 cycloneon = 1
	unitcycloneed = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitcycloneed == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{33786},2,&amp;quot;Player&amp;quot;)
	then
	cycloneonhealer = 0
	cycloneon = 0
	end
end







for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and cycloneon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;cyclone&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),0.5)
	 and LineOfSight(cTar[j])
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and not primaryTarget(cTar[j])
	 and (UnitInRange(members[1]) or eMembers[1].Range &amp;lt; 40)
	 and members[1].HP &amp;lt; 40
	 and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 30
	 and UnitIsPlayer(cTar[j])
	 and not IsHealer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 25
     and not HaveDebuff(cTar[j],dCurseCC(),0.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),0.5)
	 and not HaveDebuff(cTar[j],dSilence(),0.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0.5)
	 and not HaveDebuff(cTar[j],dCC(),0.5)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	
		 PQR_CustomTarget=cTar[j]
		 return true

	
	
	end
	end




for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and cycloneon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;cyclone&amp;quot;) &amp;lt; 3
	 and UnitBuffID(&amp;quot;player&amp;quot;,69369)
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),0.5)
	 and LineOfSight(cTar[j])
	 and not primaryTarget(cTar[j])
	 and UnitIsPlayer(cTar[j])
	 and IsHealer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 25
     and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 60
     and not HaveDebuff(cTar[j],dCurseCC(),0.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),0.5)
	 and not HaveDebuff(cTar[j],dSilence(),0.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0.5)
	 and not HaveDebuff(cTar[j],dCC(),0.5)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	
	 
		 PQR_CustomTarget=cTar[j]
		 return true
	 
	 
	--

	end
	end












-----------------------------

for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and cycloneon == 0
	 and not PQR_IsMoving(0.01)
	 and UnitBuffID(&amp;quot;player&amp;quot;,69369)
	 and CokxDRInfo(cTar[j],&amp;quot;cyclone&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),0.5)
	 and LineOfSight(cTar[j])
	 and not primaryTarget(cTar[j])
	 and UnitIsPlayer(cTar[j])
---	 and IsHealer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 25
     and not HaveDebuff(cTar[j],dCurseCC(),0.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),0.5)
	 and not HaveDebuff(cTar[j],dSilence(),0.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0.5)
	 and not HaveDebuff(cTar[j],dCC(),0.5)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(33786)cTar[j])
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Reju Friendly</Name><Default>false</Default><SpellID>774</SpellID><Actions></Actions><Lua>for i = 1, numberfriends do
if UnitExists(members[i])
and CalculateHP(members[i]) &amp;lt; 80
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 20 
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and UnitExists(cTar[1])
and inMelee == 0
and ecTar[1].Range &amp;gt; 15
and not HaveBuff(members[i],774,0,&amp;quot;PLAYER&amp;quot;) 
and LineOfSight(members[i])
then
  PQR_CustomTarget = members[i]
 return true
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ((not UnitExists(&amp;quot;target&amp;quot;)) or ( not UnitIsPlayer(&amp;quot;target&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)))  or (UnitExists(cTar[1])and not UnitIsPlayer(&amp;quot;target&amp;quot;) and ecTar[1].Range &amp;gt; 15)
then TargetNearestEnemyPlayer()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Totem/Psyfiend Kill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not TrapBox then
	TrapBox = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	TrapBox:Hide()
end

if dontshoot == nil then
dontshoot = 0
end
if destroy == nil then
destroy = 0
end

function TrapBox_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
		--	if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
				108921,  -- Psyfiend
     				108280,  -- Healing Tide
    				 8143,  -- Tremor
    				 98008,  -- Spirit Link
     				120668,
    				 16190,
      					  108269 --Capacitor
				}
				for i = 1, #members do
					if UnitExists(members[i])
					and UnitName(members[i]) == &amp;quot;&amp;quot;..sourceNAME
					then
					dontshoot = 1
					end
				end
				for i = 1, #listId do
					if listId[i] == spellId then
					if dontshoot == 0
					then
					destroy = &amp;quot;&amp;quot;..GetSpellInfo(spellId)
					InteractUnit(destroy)
				    end
				      	
					end
			--	end
			end
		end
	end
end
TrapBox:SetScript(&amp;quot;OnEvent&amp;quot;, TrapBox_OnEvent)
TrapBox:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)


					InteractUnit(destroy)
	
if UnitName(&amp;quot;target&amp;quot;) == destroy then
destroy = 0
end



				        
dontshoot = 0</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Redirect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if mySymbiosis == 3 then 
for i=1,#cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 40
and GetComboPoints(&amp;quot;player&amp;quot;, cTar[i]) &amp;gt;= 1
and GCDCheck(110730)
and not UnitIsUnit(&amp;quot;target&amp;quot;, cTar[i])
then
CastSpellByName(GetSpellInfo(110730),&amp;quot;target&amp;quot;)
return true end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Swap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if mySymbiosis == 1 then 
for i=1,#cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 40
and HaveDebuff(cTar[i],1822,0,&amp;quot;PLAYER&amp;quot;) 
and HaveDebuff(cTar[i],1079,0,&amp;quot;PLAYER&amp;quot;) 
and GCDCheck(110810)
and not UnitIsUnit(&amp;quot;target&amp;quot;, cTar[i])
then
CastSpellByName(GetSpellInfo(110309),&amp;quot;target&amp;quot;)
return true end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Hibernate</Name><Default>false</Default><SpellID>2637</SpellID><Actions></Actions><Lua>if hibernateon == nil then  hibernateon = 0 end
if hibernateonhealer == nil then  hibernateonhealer = 0 end
if unithibernateed == nil then  unithibernateed = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{2637},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	hibernateonhealer = 1
	end
	 hibernateon = 1
	unithibernateed = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and unithibernateed == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{2637},2,&amp;quot;Player&amp;quot;)
	then
	hibernateonhealer = 0
	hibernateon = 0
	end
end





	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and hibernateon == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	and UnitCreatureType(cTar[j]) == &amp;quot;Beast&amp;quot;
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Root</Name><Default>false</Default><SpellID>339</SpellID><Actions></Actions><Lua>if rooton == nil then  rooton = 0 end
if rootonhealer == nil then  rootonhealer = 0 end
if unitrooted == nil then  unitrooted = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{339},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	rootonhealer = 1
	end
	 rooton = 1
	unitrooted = UnitGUID(cTar[i])
	end
end



for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitrooted == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{339},2,&amp;quot;Player&amp;quot;)
	then
	rootonhealer = 0
	rooton = 0
	end
end






	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and rooton == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;root&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],aRoots(),2)
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 35
 	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and HaveBuff(cTar[j],attentionBuffs(),1)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	

	
	
		for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and rooton == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;root&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 	 and not HaveDebuff(cTar[j],aRoots(),2)
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 and IsHealer(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 35
     and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	

	
	---------------------------3
			for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and rooton == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;root&amp;quot;) &amp;lt; 3 
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 	 and not HaveDebuff(cTar[j],aRoots(),2)
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 and UnitPowerMax(cTar[j]) &amp;lt; 100000
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 35
     and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>eventRA</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not mushroomtimer then mushroomtimer = 0 end
if not CokxLog then
    Cokx_CokxLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    Cokx_CokxLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;target&amp;quot;) then
       			targetPhysRA = EphysRA()
       			for i=1,#targetPhysRA do
       				if select(12, ...) == targetPhysRA[i] then
       					if IsSpellKnown(99) 
       					and GCDCheck(99)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 10 then
						CastSpellByName(GetSpellInfo(99),&amp;quot;target&amp;quot;)
						return true
						end
						if IsSpellKnown(5211) 
       					and GCDCheck(5211)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 8 then
						CastSpellByName(GetSpellInfo(5211),&amp;quot;target&amp;quot;)
						return true
						end
       				end
       			end
       			end
	     		
	     		if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
	     		if select(12, ...) == 145205 then
	     		mushroomtimer=GetTime()
	     		end
       			targetSpellRA = EspellRA()
       			for i=1,#targetSpellRA do
       				if select(12, ...) == targetSpellRA[i] then
       					if IsSpellKnown(783) 
       					and GCDCheck(783)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 40 then
						CastSpellByName(GetSpellInfo(783))
						return true
						end
       				end
       			end
	     		end
	     		
	     		for i = 1, #cTar do
                if sourceGUID == UnitGUID(cTar[i])
                and ecTar[i].Range &amp;lt; 25 then
       				if select(12, ...) == 19503	then
       				if IsSpellKnown(99) 
       					and GCDCheck(99)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 10 then
						CastSpellByName(GetSpellInfo(99),cTar[i])
						return true
						end
						if IsSpellKnown(5211) 
       					and GCDCheck(5211)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 8 then
						CastSpellByName(GetSpellInfo(5211),cTar[i])
						return true
						end
       				end
	     		end
	     		end
	     		     		
   		
	     
                if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
                then
       			allHSpellRA = HealerphysRA()
       			for i=1,#allHSpellRA do
       				if select(12, ...) == allHSpellRA[i] then
       					if GCDCheck(102280) then
						CastSpellByName(GetSpellInfo(102280))
						return true
						end
       				end
       			end
	     		end
	     	
	     		
	     	   		
		    end
  end
 end

 Cokx_CokxLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CokxLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not myFocusID then myFocusID = 0 end

if not UnitExists(&amp;quot;focus&amp;quot;)
or UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then
for i = 1, #cTar do
if UnitExists(cTar[i]) and IsHealer(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID = 0
break
end
end

for i = 1, #cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not eHealer()
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID=UnitGUID(cTar[i])
break
end
end
end
if UnitExists(&amp;quot;focus&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) and UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then ClearFocus() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DRUID>