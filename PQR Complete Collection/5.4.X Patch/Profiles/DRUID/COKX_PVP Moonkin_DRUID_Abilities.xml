<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>Solar Beam</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(133899)
 and vortexbeam
  and UnitExists(&amp;quot;Mouseover&amp;quot;) then 
	CastSpellByName(GetSpellInfo(133899),&amp;quot;Mouseover&amp;quot;)

	return true 
	
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wrath</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 10</Actions><Lua>if (EclipseDirection == &amp;quot;moon&amp;quot; or Solar ) and UnitExists(&amp;quot;target&amp;quot;) 
and PQR_SpellAvailable(5176)
and not PQR_IsMoving(0.1)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;) then

	    CastSpellByName(tostring(GetSpellInfo(5176)))
	    return true
	end
	
	
		
	if not PQR_SpellAvailable(2912)
	and UnitExists(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and not PQR_IsMoving(0.1) then
        CastSpellByName(tostring(GetSpellInfo(5176)))
	    return true
	end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starfire</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 10</Actions><Lua>if (EclipseDirection == &amp;quot;sun&amp;quot; or Lunar)
and PQR_SpellAvailable(2912)
and UnitExists(&amp;quot;target&amp;quot;)
and not PQR_IsMoving(0.1)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(2912), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
        CastSpellByName(tostring(GetSpellInfo(2912)))
	    return true
	end
	
	
	if not PQR_SpellAvailable(5176)
	and UnitExists(&amp;quot;target&amp;quot;)
	and not PQR_IsMoving(0.1) 
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(2912), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;) then
        CastSpellByName(tostring(GetSpellInfo(2912)))
	    return true
	end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 10</Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and PQR_SpellAvailable(2912)
and	PQR_SpellAvailable(5176)
and	PQR_SpellAvailable(78674)
and
not PQR_IsMoving(0.1)and UnitExists(&amp;quot;target&amp;quot;)  
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
	return true
	  end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starfall</Name><Default>false</Default><SpellID>48505</SpellID><Actions>/use 10</Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;target&amp;quot;)and not UnitBuffID(&amp;quot;player&amp;quot;,48505)
and PQR_SpellAvailable(2912)
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;) 
  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>MoonfireSunfire</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 10</Actions><Lua>if  UnitExists(&amp;quot;target&amp;quot;)
and MoonfireTimeLeft &amp;lt; 2
and PQR_SpellAvailable(2912)
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and LineOfSight(&amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(8921), &amp;quot;target&amp;quot;)
	return true
	end

if  UnitExists(&amp;quot;target&amp;quot;)
and SunfireTimeLeft &amp;lt; 2
and PQR_SpellAvailable(5176)
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
	return true
	end


---------------------



for i=1, #cTar do
if UnitExists(cTar[i]) then
	local Moonfire, _, _, _, _, _, CTMoonfireEndTime = UnitDebuffID(cTar[i], 8921, &amp;quot;player&amp;quot;)
		if not CTMoonfireEndTime then
		CTMoonfireEndTime = 0
		else
		CTMoonfireEndTime = CTMoonfireEndTime - GetTime()
	end

	local Sunfire, _, _, _, _, _, CTSunfireEndTime = UnitDebuffID(cTar[i], 93402, &amp;quot;player&amp;quot;)
		if not CTSunfireEndTime then
		CTSunfireEndTime = 0
		else
		CTSunfireEndTime = CTSunfireEndTime - GetTime()
	end


	if  CTMoonfireEndTime &amp;lt; 2
	and PQR_SpellAvailable(2912)
	and ecTar[i].Facing
	and ecTar[i].Range &amp;lt; 43
	and not HaveBuff(cTar[i],iDMG())
	and not HaveDebuff(cTar[i],ccCanBreak())
	and LineOfSight(cTar[i])
	then
	PQR_CustomTarget=cTar[i]
	CastSpellByName(GetSpellInfo(8921),PQR_CustomTarget)
	return true
		end

	if  CTSunfireEndTime &amp;lt; 2
	and PQR_SpellAvailable(5176)
	and ecTar[i].Facing
	and ecTar[i].Range &amp;lt; 43
	and not HaveBuff(cTar[i],iDMG())
	and not HaveDebuff(cTar[i],ccCanBreak())
	and LineOfSight(cTar[i])
	 then
	 PQR_CustomTarget=cTar[i]
	CastSpellByName(GetSpellInfo(93402),PQR_CustomTarget)
	return true

	end
end
end







---------------------
-- MOVING --
if Lunar
and SunfireTimeLeft &amp;lt; 2
and PQR_SpellAvailable(5176)
and PQR_IsMoving(0.1) 
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;) then
	CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
	return true

end

if Lunar
and PQR_IsMoving(0.1)
and PQR_SpellAvailable(2912)
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(8921), &amp;quot;target&amp;quot;)
	return true

end

if Solar
and MoonfireTimeLeft &amp;lt; 2
and PQR_IsMoving(0.1)
and PQR_SpellAvailable(2912)
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(8921), &amp;quot;target&amp;quot;)
	return true

end

if Solar
and PQR_SpellAvailable(5176)
and PQR_IsMoving(0.1)
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
	return true

end

if  SunfireTimeLeft &amp;lt; MoonfireTimeLeft 
and PQR_SpellAvailable(5176)
and PQR_IsMoving(0.1)
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
	return true

end

if MoonfireTimeLeft &amp;lt; SunfireTimeLeft 
and PQR_SpellAvailable(2912)
and PQR_IsMoving(0.1) 
	and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(8921), &amp;quot;target&amp;quot;)
	return true

end

	if not PQR_SpellAvailable(2912)
	and PQR_IsMoving(0.1)
		and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
		and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
        return true
	   
	end
	
		if not PQR_SpellAvailable(5176)
	and PQR_IsMoving(0.1)
		and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
		and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
        CastSpellByName(GetSpellInfo(8921), &amp;quot;target&amp;quot;)
        return true
	
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge Instant</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 10</Actions><Lua>local ShootingStar = UnitBuffID(&amp;quot;Player&amp;quot;, 93400) and UnitExists(&amp;quot;target&amp;quot;) 
if ShootingStar
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG())
	and IsSpellInRange(GetSpellInfo(8921), &amp;quot;target&amp;quot;) == 1
	and LineOfSight(&amp;quot;target&amp;quot;)  then
	CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Astral Communion</Name><Default>false</Default><SpellID>127663</SpellID><Actions></Actions><Lua>if not  Lunar
and not  Solar
and not HaveBuff(&amp;quot;player&amp;quot;,102560) 
then return true end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CycloneRoots</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if  100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 15 
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 70 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and UnitBuffID(&amp;quot;target&amp;quot;,1022)
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;target&amp;quot;)
saveinstant = 0
return true
 end
 
if hibernatemod 
and UnitCreatureType(&amp;quot;mouseover&amp;quot;) == &amp;quot;Beast&amp;quot;
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and CokxDRInfo(&amp;quot;mouseover&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
and UnitExists(&amp;quot;mouseover&amp;quot;)
then
CastSpellByName(GetSpellInfo(2637),&amp;quot;mouseover&amp;quot;)
saveinstant = 0
return true
 end

if hibernatemod 
and UnitCreatureType(&amp;quot;focus&amp;quot;) == &amp;quot;Beast&amp;quot;
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
and UnitExists(&amp;quot;focus&amp;quot;)
then
CastSpellByName(GetSpellInfo(2637),&amp;quot;focus&amp;quot;)
saveinstant = 0
return true
 end
 
 if hibernatemod 
and UnitCreatureType(&amp;quot;target&amp;quot;) == &amp;quot;Beast&amp;quot;
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitExists(&amp;quot;focus&amp;quot;)
and not UnitExists(&amp;quot;mouseover&amp;quot;)
then
CastSpellByName(GetSpellInfo(2637),&amp;quot;Target&amp;quot;)
saveinstant = 0
return true
 end

----------------------------------------

if  cyclonemod 
and UnitExists(&amp;quot;mouseover&amp;quot;)
and CokxDRInfo(&amp;quot;mouseover&amp;quot;,&amp;quot;cyclone&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;mouseover&amp;quot;)
saveinstant = 0
return true
 end

if  cyclonemod 
and UnitExists(&amp;quot;focus&amp;quot;)
and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;cyclone&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;focus&amp;quot;)
saveinstant = 0
return true
 end
 
 if  cyclonemod 
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitExists(&amp;quot;focus&amp;quot;)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;cyclone&amp;quot;) &amp;lt; 3
and not UnitExists(&amp;quot;mouseover&amp;quot;)
then
CastSpellByName(GetSpellInfo(33786),&amp;quot;target&amp;quot;)
saveinstant = 0
return true
 end

---------Roots--------------

if  rootmod 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)

and UnitExists(&amp;quot;mouseover&amp;quot;)
and CokxDRInfo(&amp;quot;mouseover&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(339),&amp;quot;mouseover&amp;quot;)
saveinstant = 0
return true
 end


if  rootmod 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)

and UnitExists(&amp;quot;focus&amp;quot;)
and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(339),&amp;quot;focus&amp;quot;)
saveinstant = 0
return true
 end

 if  rootmod 
and UnitBuffID(&amp;quot;player&amp;quot;,69369)
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitExists(&amp;quot;focus&amp;quot;)
and not UnitExists(&amp;quot;mouseover&amp;quot;)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 3
then
CastSpellByName(GetSpellInfo(339),&amp;quot;target&amp;quot;)
saveinstant = 0
return true
 end

------------------------------------</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>&amp;gt; RDY</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  ----------------------------------
  -- Load Data Files
  ----------------------------------

	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_DATA.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Datafile loaded!&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_Settings.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Settings loaded!&amp;quot;)
		
	end
	
	
	PQR_RotationStarted = false
end
local numglobal,numperchar = GetNumMacros()
if numperchar &amp;lt; 18 then
if not GetMacroInfo(&amp;quot;AvailableMacros&amp;quot;) then
CreateMacro(&amp;quot;AvailableMacros&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;/Pause&amp;quot;, 1)
end
end


	--------------------
	-- Register CVars --
	--------------------

	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;, 				Var2 = 1		}	
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end



--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true

	
		SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
	
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
end
	

if getInfos == nil then
getInfos = 0
end
CastClick()
settings()
checks()
if  GetTime() - getInfos &amp;gt; 1 and (GCDCheck(33876)) then
getInfos = GetTime()
clearCEH()
if cTtimer == nil then cTtimer = 0
end
if GetTime() - cTtimer &amp;gt; 5 then
cTtimer = GetTime()
clearTables()
end
getcTar()
RangeCheckcTar()
clearcTar()
getmembers()
RangeCheckMembers()
clearmembers()
RangeCheckPet()
interrupt()
if GetItemCount(GetItemInfo(80618)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(57287))end

if GetItemCount(GetItemInfo(5512)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(58275))end
RunMacroText(&amp;quot;/run UIErrorsFrame:Clear()&amp;quot;)
end
GroupInfo()
cokxMacros()

if rotationPause == nil then rotationPause = 0 end

if Nova_Pause == 1 then
rotationPause = GetTime()
SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
end
if GetTime() - rotationPause &amp;lt; 0.3 then
if MacroSpellNumber ~= 0 and MacroUnitNumber ~= 0 and GCDCheck(MacroSpellNumber) then
CastSpellByName(GetSpellInfo(MacroSpellNumber),MacroCT)
return true
end
return true
end
SetCVar(&amp;quot;MacroSpell&amp;quot;, 0)
SetCVar(&amp;quot;MacroUnit&amp;quot;, 0)
SetCVar(&amp;quot;MacroHP&amp;quot;, 100)
SetCVar(&amp;quot;MacroDR&amp;quot;,nil)
SetCVar(&amp;quot;MacroBuff&amp;quot;,nil)
SetCVar(&amp;quot;MacroDebuff&amp;quot;,nil)

if  GetTime() - getInfos &amp;lt; 0.2 and  GetTime() - getInfos &amp;gt; 0.1 and (GCDCheck(33876)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.6 and  GetTime() - getInfos &amp;gt; 0.5 and (GCDCheck(33876)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.4 and  GetTime() - getInfos &amp;gt; 0.3 and (GCDCheck(33876)) then
return true
end
if  GetTime() - getInfos &amp;lt; 0.8 and  GetTime() - getInfos &amp;gt; 0.7 and (GCDCheck(33876))  then
return true
end

if druidpause
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
or UnitBuffID(&amp;quot;player&amp;quot;,5215)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
then return true end





if numberfriends == 0 or numberfriends &amp;gt; #members then
numberfriends = #members or nil
end






EclipseDirection = GetEclipseDirection()
EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
Solar = UnitBuffID(&amp;quot;player&amp;quot;, 48517)
Lunar = UnitBuffID(&amp;quot;player&amp;quot;, 48518)


local Moonfire, _, _, _, _, _, MoonfireEndTime = UnitDebuffID(&amp;quot;target&amp;quot;, 8921, &amp;quot;player&amp;quot;)
if not MoonfireEndTime then
	MoonfireTimeLeft = 0
else
	MoonfireTimeLeft = MoonfireEndTime - GetTime()
end

local Sunfire, _, _, _, _, _, SunfireEndTime = UnitDebuffID(&amp;quot;target&amp;quot;, 93402, &amp;quot;player&amp;quot;)
if not SunfireEndTime then
	SunfireTimeLeft = 0
else
	SunfireTimeLeft = SunfireEndTime - GetTime()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CC and Bad Curses</Name><Default>false</Default><SpellID>2782</SpellID><Actions></Actions><Lua>for i=1,numberfriends do 
    if UnitExists(members[i])
    and HaveDebuff(members[i],{51514,80240,109466,1490}) 
    and UnitInRange(members[i])
    and LineOfSight(members[i])
    then
      PQR_CustomTarget = members[i]
       return true end
    end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Reju Self</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 70 
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 20 
and not UnitBuffID(&amp;quot;player&amp;quot;,774,&amp;quot;player&amp;quot;) 
and not UnitBuffID(&amp;quot;player&amp;quot;,5215) 
then
CastSpellByName(GetSpellInfo(774),&amp;quot;player&amp;quot;)
return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Reju Other</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, numberfriends do
if UnitExists(members[i])
and CalculateHP(members[i]) &amp;lt; 30
and UnitInRange(members[i])
and not HaveBuff(members[i],774,0,&amp;quot;PLAYER&amp;quot;) 
and LineOfSight(members[i])
then
  PQR_CustomTarget = members[i]
 CastSpellByName(GetSpellInfo(774),PQR_CustomTarget)
 return true
   end
end</Lua><RecastDelay>5000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HT Self</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 20 
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 20 
and not UnitBuffID(&amp;quot;player&amp;quot;,5215) 
and (UnitBuffID(&amp;quot;player&amp;quot;,132158) or  not PQR_IsMoving(1))
then
CastSpellByName(GetSpellInfo(5185),&amp;quot;player&amp;quot;)
return true
 end
 
 for i = 1, numberfriends do
if UnitExists(members[i])
and CalculateHP(members[i]) &amp;lt; 30
and (UnitBuffID(&amp;quot;player&amp;quot;,132158) or  not PQR_IsMoving(1))
and UnitInRange(members[i])
and LineOfSight(members[i])
then
  PQR_CustomTarget = members[i]
  CastSpellByName(GetSpellInfo(5185),members[i])
  return true
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FF</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
local class = select(2, UnitClass(cTar[i]))
if not HaveDebuff(cTar[i],770,1) 
and UnitExists(cTar[i]) 
and ecTar[i].Range &amp;lt; 40
and LineOfSight(cTar[i])
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and (class==&amp;quot;DRUID&amp;quot; or class==&amp;quot;ROGUE&amp;quot;)
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(770),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti Root</Name><Default>false</Default><SpellID>24858</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;PLAYER&amp;quot;,{339,102359,122,96294,91807, 19975, 128405, 45334,102359,110693, 50245,54706,4167,111340,116706,113275,123407,113275,87194,114404,115197,64695,63685,107566}) then return true end

if not HaveBuff(&amp;quot;PLAYER&amp;quot;,{1066,768,783,24858}) then return true end
if HaveDebuff(&amp;quot;player&amp;quot;,108200,0) then
if (select(4,UnitDebuffID(&amp;quot;player&amp;quot;,108200)))==3 or (select(4,UnitDebuffID(&amp;quot;player&amp;quot;,108200)))==4  then return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>MOTW</Name><Default>false</Default><SpellID>1126</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
  for i=1,numberfriends do 
    if UnitExists(members[i])
    and not HaveBuff(members[i],{115921,20217,1126,90363}) 
    and UnitInRange(members[i])
    then 
    PQR_CustomTarget = members[i]
    return true end
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemStomp</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>local typem= UnitCreatureType(&amp;quot;mouseover&amp;quot;)

if UnitExists(&amp;quot;mouseover&amp;quot;)
and typem == &amp;quot;Totem&amp;quot;
then
	CastSpellByName(GetSpellInfo(8921),&amp;quot;mouseover&amp;quot;)
	CastSpellByName(GetSpellInfo(93402),&amp;quot;mouseover&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Natures Grasp</Name><Default>false</Default><SpellID>16689</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitPowerMax(cTar[i]) &amp;lt; 200000
and not PQR_IsOutOfSight(cTar[i])
and (IsSpellInRange(&amp;quot;Mangle&amp;quot;, cTar[i]) == 1 )
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
then
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stun/Blind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ccDebuffs = {108194,115001,91800,91797,33786,99,2637,22570,5211,9005,102546,81261,110698,113004,113056,126458,47476,1513,19503,19386,34490,90337,24394,126355,118271,44572,31661,118,55021,126451,122242,119392,119381,115078,117368,116709,105421,115752,105593,853,119072,20066,10326,113506,605,88625,64044,8122,113792,87204,15487,64058,2094,1833,1776,408,113953,6770,1330,51722,51514,113287,5782,118699,5484,6789,30283,104045,89766,7922,118895,5246,20511,132168,105771}
local attentionBuffs ={107574,51713,114207,1719,51271,49016,114049,31884,12472,12042,113860,113861,113858,102560,102543,34692}

for i=1, #cTar do
if 
UnitExists(cTar[i])
and IsSpellKnown(99)
and select(2,GetSpellCooldown(99)) == 0
and HaveBuff(cTar[i],attentionBuffs) 
and not HaveDebuff(cTar[i],ccDebuffs)
and LineOfSight(cTar[i])
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
then
if ecTar[i].Range &amp;lt;13 then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(99),PQR_CustomTarget)
return true
end
end
end

for i=1, #cTar do
if UnitExists(cTar[i]) 
and IsSpellKnown(5211)
and select(2,GetSpellCooldown(5211)) == 0
and HaveBuff(cTar[i],attentionBuffs) 
and LineOfSight(cTar[i])
and not HaveDebuff(cTar[i],ccDebuffs)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(5211),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>UrsolsVortex</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(102793)
and IsSpellKnown(102793)
 and vortexbeam
  and not GetCurrentKeyBoardFocus() then 
	CastSpellByName(GetSpellInfo(102793))
	if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() end  
	return true 
	
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JukeBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
			and not HaveBuff(&amp;quot;player&amp;quot;,104773,0) then
				local spellId = select(12, ...)
				local listId = {
					6552, --Pummel
					1766, --Kick
					47528, --Mind Freeze
					47476, --Strangulate
					96231, --Rebuke
					57994, --Wind Shear
					2139, --Counterspell
					19647, --Spell Lock
					80965 --Skull Bash
				}
				for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						SpellStopCasting()
						SpellStopCasting()
						PQR_DelayRotation(.5)
						return true
					end
				end
			end
		end
	end
end

JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Hibernate</Name><Default>false</Default><SpellID>2637</SpellID><Actions></Actions><Lua>if hibernateon == nil then  hibernateon = 0 end
if hibernateonhealer == nil then  hibernateonhealer = 0 end
if unithibernateed == nil then  unithibernateed = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{2637},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	hibernateonhealer = 1
	end
	 hibernateon = 1
	unithibernateed = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and unithibernateed == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{2637},2,&amp;quot;Player&amp;quot;)
	then
	hibernateonhealer = 0
	hibernateon = 0
	end
end





	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and hibernateon == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	and UnitCreatureType(cTar[j]) == &amp;quot;Beast&amp;quot;
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Cyclone</Name><Default>false</Default><SpellID>33786</SpellID><Actions></Actions><Lua>if cycloneon == nil then  cycloneon = 0 end
if cycloneonhealer == nil then  cycloneonhealer = 0 end
if unitcycloneed == nil then  unitcycloneed = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{33786},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	cycloneonhealer = 1
	end
	 cycloneon = 1
	unitcycloneed = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitcycloneed == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{33786},2,&amp;quot;Player&amp;quot;)
	then
	cycloneonhealer = 0
	cycloneon = 0
	end
end







for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and cycloneon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;cyclone&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),0.5)
	 and LineOfSight(cTar[j])
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and not primaryTarget(cTar[j])
	 and (UnitInRange(members[1]) or eMembers[1].Range &amp;lt; 40)
	 and members[1].HP &amp;lt; 40
	 and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 30
	 and UnitIsPlayer(cTar[j])
	 and not IsHealer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 25
     and not HaveDebuff(cTar[j],dCurseCC(),0.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),0.5)
	 and not HaveDebuff(cTar[j],dSilence(),0.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0.5)
	 and not HaveDebuff(cTar[j],dCC(),0.5)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	
		 PQR_CustomTarget=cTar[j]
		 return true

	
	
	end
	end




for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and cycloneon == 0
	 and not PQR_IsMoving(0.01)
	 and CokxDRInfo(cTar[j],&amp;quot;cyclone&amp;quot;) &amp;lt; 3
	 and UnitBuffID(&amp;quot;player&amp;quot;,69369)
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),0.5)
	 and LineOfSight(cTar[j])
	 and not primaryTarget(cTar[j])
	 and UnitIsPlayer(cTar[j])
	 and IsHealer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 25
     and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 60
     and not HaveDebuff(cTar[j],dCurseCC(),0.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),0.5)
	 and not HaveDebuff(cTar[j],dSilence(),0.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0.5)
	 and not HaveDebuff(cTar[j],dCC(),0.5)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	
	 
		 PQR_CustomTarget=cTar[j]
		 return true
	 
	 
	--

	end
	end












-----------------------------

for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 	 and cycloneon == 0
	 and not PQR_IsMoving(0.01)
	 and UnitBuffID(&amp;quot;player&amp;quot;,69369)
	 and CokxDRInfo(cTar[j],&amp;quot;cyclone&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),0.5)
	 and LineOfSight(cTar[j])
	 and not primaryTarget(cTar[j])
	 and UnitIsPlayer(cTar[j])
---	 and IsHealer(cTar[j])
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 25
     and not HaveDebuff(cTar[j],dCurseCC(),0.5)
	 and not HaveDebuff(cTar[j],dMagicCC(),0.5)
	 and not HaveDebuff(cTar[j],dSilence(),0.5)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0.5)
	 and not HaveDebuff(cTar[j],dCC(),0.5)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(33786)cTar[j])
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Root</Name><Default>false</Default><SpellID>336</SpellID><Actions></Actions><Lua>if rooton == nil then  rooton = 0 end
if rootonhealer == nil then  rootonhealer = 0 end
if unitrooted == nil then  unitrooted = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{339},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	rootonhealer = 1
	end
	 rooton = 1
	unitrooted = UnitGUID(cTar[i])
	end
end



for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitrooted == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{339},2,&amp;quot;Player&amp;quot;)
	then
	rootonhealer = 0
	rooton = 0
	end
end






	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and rooton == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;root&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],aRoots(),2)
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 35
 	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and HaveBuff(cTar[j],attentionBuffs(),1)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	

	
	
		for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and rooton == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;root&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 	 and not HaveDebuff(cTar[j],aRoots(),2)
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 and IsHealer(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 35
     and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end
	
	

	
	---------------------------3
			for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and rooton == 0
	 and HaveBuff(&amp;quot;player&amp;quot;,69369,0)
	 and CokxDRInfo(cTar[j],&amp;quot;root&amp;quot;) &amp;lt; 3 
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 	 and not HaveDebuff(cTar[j],aRoots(),2)
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],605,0) 
	 	 and not HaveBuff(cTar[j],{49039,18499},1.3)
	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
	 and LineOfSight(cTar[j])
	 and UnitPowerMax(cTar[j]) &amp;lt; 100000
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 35
     and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilence(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1.5)
	 and not HaveBuff(cTar[j],iSpell(),1.5)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SRG</Name><Default>false</Default><SpellID>33786</SpellID><Actions></Actions><Lua>local spell, _, _, _, _, endTime = UnitChannelInfo(&amp;quot;player&amp;quot;)
for i = 1 , #cTar do
if UnitExists(cTar[i])
and spell == GetSpellInfo(33786) 
and HaveBuff(cTar[i],{114028,23920,8177},0)
then
SpellStopCasting()
PQR_CustomTarget = cTar[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>eventRA</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not mushroomtimer then mushroomtimer = 0 end
if not CokxLog then
    Cokx_CokxLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    Cokx_CokxLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;target&amp;quot;) then
       			targetPhysRA = EphysRA()
       			for i=1,#targetPhysRA do
       				if select(12, ...) == targetPhysRA[i] then
       					if IsSpellKnown(99) 
       					and GCDCheck(99)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 10 then
						CastSpellByName(GetSpellInfo(99),&amp;quot;target&amp;quot;)
						return true
						end
						if IsSpellKnown(5211) 
       					and GCDCheck(5211)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 8 then
						CastSpellByName(GetSpellInfo(5211),&amp;quot;target&amp;quot;)
						return true
						end
       				end
       			end
       			end
	     		
	     		if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
	     		if select(12, ...) == 145205 then
	     		mushroomtimer=GetTime()
	     		end
       			targetSpellRA = EspellRA()
       			for i=1,#targetSpellRA do
       				if select(12, ...) == targetSpellRA[i] then
       					if IsSpellKnown(783) 
       					and GCDCheck(783)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 40 then
						CastSpellByName(GetSpellInfo(783))
						return true
						end
       				end
       			end
	     		end
	     		
	     		for i = 1, #cTar do
                if sourceGUID == UnitGUID(cTar[i])
                and ecTar[i].Range &amp;lt; 25 then
       				if select(12, ...) == 19503	then
       				if IsSpellKnown(99) 
       					and GCDCheck(99)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 10 then
						CastSpellByName(GetSpellInfo(99),cTar[i])
						return true
						end
						if IsSpellKnown(5211) 
       					and GCDCheck(5211)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 8 then
						CastSpellByName(GetSpellInfo(5211),cTar[i])
						return true
						end
       				end
	     		end
	     		end
	     		     		
   		
	     
                if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
                then
       			allHSpellRA = HealerphysRA()
       			for i=1,#allHSpellRA do
       				if select(12, ...) == allHSpellRA[i] then
       					if GCDCheck(102280) then
						CastSpellByName(GetSpellInfo(102280))
						return true
						end
       				end
       			end
	     		end
	     	
	     		
	     	   		
		    end
  end
 end

 Cokx_CokxLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CokxLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not myFocusID then myFocusID = 0 end

if not UnitExists(&amp;quot;focus&amp;quot;)
or UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then
for i = 1, #cTar do
if UnitExists(cTar[i]) and IsHealer(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID = 0
break
end
end

for i = 1, #cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not eHealer()
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID=UnitGUID(cTar[i])
break
end
end
end
if UnitExists(&amp;quot;focus&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) and UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then ClearFocus() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DRUID>