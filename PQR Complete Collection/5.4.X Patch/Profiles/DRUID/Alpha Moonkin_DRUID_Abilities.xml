<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>Starfall</Name><Default>false</Default><SpellID>48505</SpellID><Actions></Actions><Lua>local Starfall = UnitBuffID(&amp;quot;player&amp;quot;, 48505)

if PQI_AlphaMoonkin_Starfall_enable then
	if Starfall == nil then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>local MF,_,_,_,_,_,MFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;)
local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
local Starfall = UnitBuffID(&amp;quot;player&amp;quot;, 48505)
local Iwin = UnitBuffID(&amp;quot;player&amp;quot;, 124974)

if (EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower == -75 and Starfall) then
return false
	else
	if EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= 100 and EclipsePower &amp;gt; -70 then
		if MF == nil 
		or MFtimer - GetTime() &amp;lt; 3 then
	    return true
		end
	end
end

if (EclipseDirection == &amp;quot;sun&amp;quot; and (EclipsePower == -20 or EclipsePower == -40) and Iwin) then
return false
	else
	if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= -100 then
		if MF == nil 
		or MFtimer - GetTime() &amp;lt; 3 then
	    return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>local SF,_,_,_,_,_,SFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;)
local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
local Starfall = UnitBuffID(&amp;quot;player&amp;quot;, 48505)
local Iwin = UnitBuffID(&amp;quot;player&amp;quot;, 124974)

if (EclipseDirection == &amp;quot;sun&amp;quot; and (EclipsePower == -20 or EclipsePower == -40) and Iwin) then
return false
else
	if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= -100 and EclipsePower &amp;lt; 20 then
		if SF == nil 
		or SFtimer - GetTime() &amp;lt; 3 then
	   	 return true
		end
	end
end


if (EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower == -75 and Starfall) then
return false
	else
	if EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= 100 then
		if SF == nil 
		or SFtimer - GetTime() &amp;lt; 3 then
	    return true
		end
	end
end

if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower == 40
	and (CurrentCast == &amp;quot;Starfire&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
	return false
	else 
	if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 0 and EclipsePower &amp;lt; 80 then
		if SF == nil 
		or SFtimer - GetTime() &amp;lt; 3 then
	   	return true
	   	end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starfire</Name><Default>false</Default><SpellID>2912</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
local Iwin = UnitBuffID(&amp;quot;player&amp;quot;, 124974)

if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower == -20 and Iwin and 
	(CurrentCast == &amp;quot;Starfire&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
	return false
	else
	if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;lt; 60 then
	return true
	end    
end


if EclipseDirection == &amp;quot;none&amp;quot; then
	if  EclipsePower &amp;gt;= 80 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wrath</Name><Default>false</Default><SpellID>5176</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if EclipseDirection == &amp;quot;moon&amp;quot; then
	if EclipsePower &amp;gt; -70 then
	return true
	end    
end

if EclipseDirection == &amp;quot;none&amp;quot; then
	if  EclipsePower &amp;lt;= 79 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incarnation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_Incarnation_enable then
	if select(2,GetTalentRowSelectionInfo(4)) == 11
		and IsUsableSpell(102560)
		and select(2,GetSpellCooldown(102560)) &amp;lt; 2 then
		if UnitBuffID(&amp;quot;player&amp;quot;, 48518) or UnitBuffID(&amp;quot;player&amp;quot;, 48517) then	
			CastSpellByName(tostring(GetSpellInfo(102560)))
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Celestial Alignment</Name><Default>false</Default><SpellID>112071</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_CelestialAlignment_enable then
	if PQR_SpellAvailable(112071) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 102560) then
			if (select(7, UnitBuffID(&amp;quot;player&amp;quot;, 102560)) - GetTime()) &amp;lt;= 15 then
				CastSpellByName(GetSpellInfo(112071))
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rebirth</Name><Default>false</Default><SpellID>20484</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_RebirthMouseover_enable then
	if UnitExists(&amp;quot;mouseover&amp;quot;) and
	   UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) and
	   UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) and
	   IsSpellInRange(&amp;quot;Rebirth&amp;quot;, &amp;quot;mouseover&amp;quot;) and 
	   GetSpellCooldown(20484) == 0 and
	   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
	then
	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Barkskin</Name><Default>false</Default><SpellID>22812</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_Barkskin_enable then 
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; PQI_AlphaMoonkin_Barkskin_value then
		return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonkin</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then
CastShapeshiftForm(5)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renewal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_Renewal_enable then
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; PQI_AlphaMoonkin_Renewal_value
	and select(2,GetTalentRowSelectionInfo(2)) == 5
	and IsUsableSpell(108238)
	and GetSpellCooldown(108238) == 0
	then
	CastSpellByName(GetSpellInfo(108238))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mark of the Wild</Name><Default>false</Default><SpellID>1126</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_MarkoftheWild_enable then
	if not UnitBuffID(&amp;quot;player&amp;quot;,1126)
	and not UnitBuffID(&amp;quot;player&amp;quot;,20217)
	and not UnitBuffID(&amp;quot;player&amp;quot;,90363)
	and not UnitBuffID(&amp;quot;player&amp;quot;,115921)
	then
	return true
	end
end</Lua><RecastDelay>5000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wild Mushroom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_WildMushroom_enable 
and PQI:IsHotkeys( PQI_AlphaMoonkin_WildMushroom_key  ) then
	if IsUsableSpell(88747)
	and select(2,GetSpellCooldown(88747)) &amp;lt; 2
	then 
	  CastSpellByName(GetSpellInfo(88747)) 
	  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
	  return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire (Focus)</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>local MF,_,_,_,_,_,MFtimer = UnitDebuffID(&amp;quot;focus&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;)

if PQI_AlphaMoonkin_MoonfireFocus_enable then
	if UnitExists(&amp;quot;focus&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		and not PQR_IsOutOfSight(&amp;quot;focus&amp;quot;, 1)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == 1
		and IsSpellInRange(GetSpellInfo(8921), &amp;quot;focus&amp;quot;) == 1
	then
		if MF then
			if MFtimer - GetTime() &amp;lt; 2 then 
				return true 
			end
		else 
			return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Focus</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire (Focus)</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>local SF,_,_,_,_,_,SFtimer = UnitDebuffID(&amp;quot;focus&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;)

if  PQI_AlphaMoonkin_SunfireFocus_enable then
	if UnitExists(&amp;quot;focus&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		and not PQR_IsOutOfSight(&amp;quot;focus&amp;quot;, 1)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == 1
		and IsSpellInRange(GetSpellInfo(93402), &amp;quot;focus&amp;quot;) == 1
	then
		if SF then
			if SFtimer - GetTime() &amp;lt; 2 then 
				return true 
			end
		else 
			return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Focus</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone &amp; Lightwell</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = (100 * (UnitHealth(&amp;quot;player&amp;quot;) + UnitGetIncomingHeals(&amp;quot;player&amp;quot;)) / UnitHealthMax(&amp;quot;player&amp;quot;))

if PQI_AlphaMoonkin_HealthStone_enable then
	-- Healthstone
	if PlayerHP &amp;lt;= PQI_AlphaMoonkin_HealthStone_value and GetItemCount(5512,false,false) &amp;gt; 0 and select(3,GetItemCooldown(5512)) == 1 then 
		UseItemByName(5512)
	end
end
	
if PQI_AlphaMoonkin_Lightwell_enable then	
	-- Lightwell
	if PQR_LightwellTimeout == nil then PQR_LightwellTimeout = 0 end
	if PlayerHP &amp;lt; PQI_AlphaMoonkin_Lightwell_value and UnitBuffID(&amp;quot;player&amp;quot;, 7001) == nil then
	    if PQR_LightwellTimeout &amp;lt; GetTime() then
	        if UnitDebuffID(&amp;quot;player&amp;quot;, 108220) == nil then
	            PQR_LightwellTimeout = GetTime() + 1
	            InteractUnit(&amp;quot;Lightwell&amp;quot;)
	        end
	    end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Do Not Attack -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Do not attack while not in combat.
local inCombat = UnitAffectingCombat(&amp;quot;player&amp;quot;)
if inCombat == nil then 
	inCombat = UnitAffectingCombat(&amp;quot;pet&amp;quot;)
end

if inCombat == nil or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) or IsMounted() then 
	return true
end

if PQI_AlphaMoonkin_PauseRotation_enable == true
and PQI:IsHotkeys( PQI_AlphaMoonkin_PauseRotation_key  ) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--[PQI - Config]--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Moonkin then return false end


local config = {
	name	= &amp;apos;Moonkin&amp;apos;,
	author	= &amp;apos;Alpha&amp;apos;,
	abilities = {
		{	name = &amp;quot;Mark of the Wild&amp;quot;,
			tooltip = &amp;quot;Enables the use of Mark of the Wild&amp;quot;,
			enable = true,
		},
		{	name = &amp;quot;Boss Special&amp;quot;,
			tooltip = &amp;quot;Enables the use of Xelpers boss specific mechanics&amp;quot;,
			enable = true,
		},
		{ 	name = &amp;quot;Burst!&amp;quot;,		
			newSection = true,
			enable = true,
			tooltip = &amp;quot;Enables the use of ALL selected cool downs at the start of the fight&amp;quot;,
		},
		{ 	name = &amp;quot;Celestial Alignment&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Celestial Alignment&amp;quot;,
		},
		{ 	name = &amp;quot;Incarnation&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Incarnation&amp;quot;,
		},
		{ 	name = &amp;quot;Natures Vigil&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Natures Vigil&amp;quot;,
		},
		{ 	name = &amp;quot;Berserking&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Berserking with Natures Vigil if you have Berserking&amp;quot;,
		},
		{ 	name = &amp;quot;Lifeblood&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Lifeblood with Natures Vigil if you have Lifeblood&amp;quot;,
		},
		{ 	name = &amp;quot;Trinket 1&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of your 1st Trinket on CD&amp;quot;,
		},
		{ 	name = &amp;quot;Trinket 2&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of your 2nd Trinket on CD&amp;quot;,
		},
		{ 	name = &amp;quot;Starfall&amp;quot;,		
			newSection = true,
			enable = true,
			tooltip = &amp;quot;Enables the use of Starfall&amp;quot;,
		},
		{ 	name = &amp;quot;Moonfire Focus&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Moonfire on your Focus&amp;quot;,
		},
--		{ 	name = &amp;quot;Moonfire Mouseover&amp;quot;,
--			enable = true,
--			tooltip = &amp;quot;Enables the use of Moonfire on Mouseover&amp;quot;,
--		},
		{ 	name = &amp;quot;Sunfire Focus&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Sunfire on your Focus&amp;quot;,
		},
--		{ 	name = &amp;quot;Sunfire Mouseover&amp;quot;,
--			enable = true,
--			tooltip = &amp;quot;Enables the use of Sunfire on Mouseover&amp;quot;,
--		},
		{ 	name = &amp;quot;HealthStone&amp;quot;,
			newSection = true,
			enable = true,
			tooltip = &amp;quot;Enables the use of healthStones&amp;quot;,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 60,
				step = 5,
				max = 95,
				min = 5,
				tooltip = &amp;quot;The percent of HP to use HealthStones at&amp;quot;,
			},
		},
		{ 	name = &amp;quot;Lightwell&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Lightwell&amp;quot;,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 70,
				step = 5,
				max = 95,
				min = 5,
				tooltip = &amp;quot;The percent of HP to use the Lightwell at&amp;quot;,
			},
		},
		{ 	name = &amp;quot;Rebirth Mouseover&amp;quot;,
			newSection = true,
			enable = true,
			tooltip = &amp;quot;Enables the use of Rebirth on Mouseover&amp;quot;,
		},
		{ 	name = &amp;quot;Renewal&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Renewal&amp;quot;,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
				max = 70,
				min = 5,
				tooltip = &amp;quot;The percent of HP to use Renewal at&amp;quot;,
			},
		},
		{ 	name = &amp;quot;Barkskin&amp;quot;,
			enable = true,
			tooltip = &amp;quot;Enables the use of Barkskin&amp;quot;,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 50,
				step = 5,
				max = 95,
				min = 5,
				tooltip = &amp;quot;The percent of HP to use Barkskin at&amp;quot;,
			},
		},
		{ 	name = &amp;quot;Anti Root&amp;quot;,
			enable = true,
			tooltip = &amp;quot;re-Shapeshift Moonkin to avoid being rooted&amp;quot;,
		},
	},
	hotkeys = {
		{	name = &amp;quot;Pause Rotation&amp;quot;,	enable = true,	hotkeys = {&amp;apos;rs&amp;apos;},	},
		{	name = &amp;quot;Astral Communion&amp;quot;,	enable = false,	hotkeys = {		},
			tooltip = &amp;quot;Enables the use of Astral Communion when out of combat. Will require the hotkey/s to use if selected else if left blank will not.&amp;quot;,	},
		{	name = &amp;quot;Tranquility&amp;quot;,	enable = true,	hotkeys = {&amp;apos;ra&amp;apos;},
			tooltip = &amp;quot;Enables the use of Tranquility&amp;quot;,	},
		{	name = &amp;quot;Wild Mushroom&amp;quot;,	enable = true,	hotkeys = {&amp;apos;la&amp;apos;},
			tooltip = &amp;quot;If enabled will place Wild Mushrooms at your mouse position&amp;quot;,	},
		{	name = &amp;quot;Hurricane&amp;quot;,	enable = true,	hotkeys = {&amp;quot;ls&amp;quot;},
			tooltip = &amp;quot;If enabled will place a Hurricane at your mouse position&amp;quot;,	},
		{	name = &amp;quot;Solar Beam&amp;quot;,	enable = true,	hotkeys = {&amp;quot;lc&amp;quot;},
			tooltip = &amp;quot;Enables the use of Solar Beam on Mouseover&amp;quot;,	},
		{	name = &amp;quot;Moonfire Mouseover&amp;quot;,		enable = true,	hotkeys = {		},
			tooltip = &amp;quot;Enables the use of Moonfire on Mouseover. Will require the hotkey/s to use if selected else if left blank will not.&amp;quot;,	},
		{	name = &amp;quot;Sunfire Mouseover&amp;quot;,	enable = true,	hotkeys = {		},
			tooltip = &amp;quot;Enables the use of Sunfire on Mouseover. Will require the hotkey/s to use if selected else if left blank will not.&amp;quot;,	},
	},
}
Moonkin = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--[PQI Global Variables]--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--  --  Alpha Utilities Notify Frame  --  --
if PQI_Alpha_Utilities_NotifyFrame == nil then
	PQI_Alpha_Utilities_NotifyFrame = true
	Alpha_Utilities_NotifyFrame = nil
	function Alpha_Utilities_NotifyFrame_OnUpdate()
		if (Alpha_Utilities_NotifyFrameTime &amp;lt; GetTime()) then
			local alpha = Alpha_Utilities_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Alpha_Utilities_NotifyFrame:SetAlpha(alpha - .000001) end
			if (aplha == 0) then Alpha_Utilities_NotifyFrame:Hide() end
		end
	end
	
	-- messages.
	function Alpha_Utilities_Notify_Long(message)
		Alpha_Utilities_NotifyFrame.text:SetText(message)
		Alpha_Utilities_NotifyFrame:SetAlpha(1)
		Alpha_Utilities_NotifyFrame:Show()
		Alpha_Utilities_NotifyFrameTime = (GetTime() + 15)
	end
	function Alpha_Utilities_Notify_Short(message)
		Alpha_Utilities_NotifyFrame.text:SetText(message)
		Alpha_Utilities_NotifyFrame:SetAlpha(1)
		Alpha_Utilities_NotifyFrame:Show()
		Alpha_Utilities_NotifyFrameTime = (GetTime() + 2)
	end
		
	-- Notification Frame
	Alpha_Utilities_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Alpha_Utilities_NotifyFrame:ClearAllPoints()
	Alpha_Utilities_NotifyFrame:SetHeight(300)
	Alpha_Utilities_NotifyFrame:SetWidth(650)
	Alpha_Utilities_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Alpha_Utilities_NotifyFrame_OnUpdate)
	Alpha_Utilities_NotifyFrame:Hide()
	Alpha_Utilities_NotifyFrame.text = Alpha_Utilities_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Alpha_Utilities_NotifyFrame.text:SetAllPoints()
	Alpha_Utilities_NotifyFrame:SetPoint(&amp;apos;CENTER&amp;apos;, 0, 200)
	Alpha_Utilities_NotifyFrameTime = 0
	
	Alpha_Utilities_NotifyFrame2 = nil
	function Alpha_Utilities_NotifyFrame2_OnUpdate()
		if (Alpha_Utilities_NotifyFrame2Time &amp;lt; GetTime()) then
			local alpha = Alpha_Utilities_NotifyFrame2:GetAlpha()
			if (alpha ~= 0) then Alpha_Utilities_NotifyFrame2:SetAlpha(alpha - .000001) end
			if (aplha == 0) then Alpha_Utilities_NotifyFrame2:Hide() end
		end
	end
	
	-- messages.
	function Alpha_Utilities_Notify2_Long(message)
		Alpha_Utilities_NotifyFrame2.text:SetText(message)
		Alpha_Utilities_NotifyFrame2:SetAlpha(1)
		Alpha_Utilities_NotifyFrame2:Show()
		Alpha_Utilities_NotifyFrame2Time = (GetTime() + 15)
	end
	function Alpha_Utilities_Notify2_Short(message)
		Alpha_Utilities_NotifyFrame2.text:SetText(message)
		Alpha_Utilities_NotifyFrame2:SetAlpha(1)
		Alpha_Utilities_NotifyFrame2:Show()
		Alpha_Utilities_NotifyFrame2Time = (GetTime() + 2)
	end
		
	-- Notification Frame
	Alpha_Utilities_NotifyFrame2 = CreateFrame(&amp;apos;Frame&amp;apos;)
	Alpha_Utilities_NotifyFrame2:ClearAllPoints()
	Alpha_Utilities_NotifyFrame2:SetHeight(300)
	Alpha_Utilities_NotifyFrame2:SetWidth(650)
	Alpha_Utilities_NotifyFrame2:SetScript(&amp;apos;OnUpdate&amp;apos;, Alpha_Utilities_NotifyFrame2_OnUpdate)
	Alpha_Utilities_NotifyFrame2:Hide()
	Alpha_Utilities_NotifyFrame2.text = Alpha_Utilities_NotifyFrame2:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Alpha_Utilities_NotifyFrame2.text:SetAllPoints()
	Alpha_Utilities_NotifyFrame2:SetPoint(&amp;apos;CENTER&amp;apos;, 0, 180)
	Alpha_Utilities_NotifyFrame2Time = 0
	
	Alpha_Utilities_NotifyFrame3 = nil
	function Alpha_Utilities_NotifyFrame3_OnUpdate()
		if (Alpha_Utilities_NotifyFrame3Time &amp;lt; GetTime()) then
			local alpha = Alpha_Utilities_NotifyFrame3:GetAlpha()
			if (alpha ~= 0) then Alpha_Utilities_NotifyFrame3:SetAlpha(alpha - .000001) end
			if (aplha == 0) then Alpha_Utilities_NotifyFrame3:Hide() end
		end
	end
	
	-- messages.
	function Alpha_Utilities_Notify3_Long(message)
		Alpha_Utilities_NotifyFrame3.text:SetText(message)
		Alpha_Utilities_NotifyFrame3:SetAlpha(1)
		Alpha_Utilities_NotifyFrame3:Show()
		Alpha_Utilities_NotifyFrame3Time = (GetTime() + 15)
	end
	function Alpha_Utilities_Notify3_Short(message)
		Alpha_Utilities_NotifyFrame3.text:SetText(message)
		Alpha_Utilities_NotifyFrame3:SetAlpha(1)
		Alpha_Utilities_NotifyFrame3:Show()
		Alpha_Utilities_NotifyFrame3Time = (GetTime() + 2)
	end
		
	-- Notification Frame
	Alpha_Utilities_NotifyFrame3 = CreateFrame(&amp;apos;Frame&amp;apos;)
	Alpha_Utilities_NotifyFrame3:ClearAllPoints()
	Alpha_Utilities_NotifyFrame3:SetHeight(300)
	Alpha_Utilities_NotifyFrame3:SetWidth(650)
	Alpha_Utilities_NotifyFrame3:SetScript(&amp;apos;OnUpdate&amp;apos;, Alpha_Utilities_NotifyFrame3_OnUpdate)
	Alpha_Utilities_NotifyFrame3:Hide()
	Alpha_Utilities_NotifyFrame3.text = Alpha_Utilities_NotifyFrame3:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Alpha_Utilities_NotifyFrame3.text:SetAllPoints()
	Alpha_Utilities_NotifyFrame3:SetPoint(&amp;apos;CENTER&amp;apos;, 0, 160)
	Alpha_Utilities_NotifyFrame3Time = 0
	
	Alpha_Utilities_NotifyFrame4 = nil
	function Alpha_Utilities_NotifyFrame4_OnUpdate()
		if (Alpha_Utilities_NotifyFrame4Time &amp;lt; GetTime()) then
			local alpha = Alpha_Utilities_NotifyFrame4:GetAlpha()
			if (alpha ~= 0) then Alpha_Utilities_NotifyFrame4:SetAlpha(alpha - .000001) end
			if (aplha == 0) then Alpha_Utilities_NotifyFrame4:Hide() end
		end
	end
	
	-- messages.
	function Alpha_Utilities_Notify4_Long(message)
		Alpha_Utilities_NotifyFrame4.text:SetText(message)
		Alpha_Utilities_NotifyFrame4:SetAlpha(1)
		Alpha_Utilities_NotifyFrame4:Show()
		Alpha_Utilities_NotifyFrame4Time = (GetTime() + 15)
	end
	function Alpha_Utilities_Notify4_Short(message)
		Alpha_Utilities_NotifyFrame4.text:SetText(message)
		Alpha_Utilities_NotifyFrame4:SetAlpha(1)
		Alpha_Utilities_NotifyFrame4:Show()
		Alpha_Utilities_NotifyFrame4Time = (GetTime() + 2)
	end
		
	-- Notification Frame
	Alpha_Utilities_NotifyFrame4 = CreateFrame(&amp;apos;Frame&amp;apos;)
	Alpha_Utilities_NotifyFrame4:ClearAllPoints()
	Alpha_Utilities_NotifyFrame4:SetHeight(300)
	Alpha_Utilities_NotifyFrame4:SetWidth(650)
	Alpha_Utilities_NotifyFrame4:SetScript(&amp;apos;OnUpdate&amp;apos;, Alpha_Utilities_NotifyFrame4_OnUpdate)
	Alpha_Utilities_NotifyFrame4:Hide()
	Alpha_Utilities_NotifyFrame4.text = Alpha_Utilities_NotifyFrame4:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Alpha_Utilities_NotifyFrame4.text:SetAllPoints()
	Alpha_Utilities_NotifyFrame4:SetPoint(&amp;apos;CENTER&amp;apos;, 0, 140)
	Alpha_Utilities_NotifyFrame4Time = 0
end
	
--  --  PQI is Required  --  --
if PQR_InterruptStarted then
	PQR_InterruptStarted = false

	if (IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;)) == 1 then
		PQInterfaceNotLoaded = true
		PQInterfaceVersion = (tonumber(GetAddOnMetadata(&amp;quot;PQInterface&amp;quot;, &amp;quot;Version&amp;quot;)))
		if PQInterfaceVersion &amp;gt;= 2.22 then
			PQInterfaceNotUpdated = true
		else PQInterfaceNotUpdated = nil end
	else PQInterfaceNotLoaded = nil end
	if PQInterfaceNotLoaded == nil or PQInterfaceNotUpdated == nil then
		PQI_AlphaUtilities_Stop = true
		Alpha_Utilities_Notify_Long(&amp;quot;|cff00ffff&amp;lt;|cff00aaffMoonkin Error|cff00ffff&amp;gt; |cffb048f8You don&amp;apos;t have PQInterface installed or it is not up to date&amp;quot;)
		Alpha_Utilities_Notify2_Long(&amp;quot;|cffb048f8PQInterface is now Required! The Rotation has been halted.&amp;quot;)
		Alpha_Utilities_Notify3_Long(&amp;quot;|cffb048f8You can download the latest version from:&amp;quot;)
		Alpha_Utilities_Notify4_Long(&amp;quot;|cffffffffhttp://PQRotation.wikia.com/wiki/PQInterface&amp;quot;)
		print(format(&amp;quot;|cff00ffff&amp;lt;|cff00aaffMoonkin Error|cff00ffff&amp;gt; |cffb048f8You don&amp;apos;t have PQInterface installed or it is not up to date - PQInterface is now Required! The Rotation has been halted. You can download the latest version from: |cffffffffhttp://PQRotation.wikia.com/wiki/PQInterface&amp;quot;))
		return true		
	end	
end
if PQI_AlphaUtilities_Stop == true then 
	PQR_StopRotation()
	return true
end

--  --  Initialized  --  --
if PQI_AlphaMoonkinInit == nil then
	PQI_AlphaMoonkinInit = true
	--  --  PQI Settings   --  --
	RunMacroText(&amp;quot;/PQI show&amp;quot;)
	RunMacroText(&amp;quot;/PQI config show&amp;quot;)
	RunMacroText(&amp;quot;/PQI config width 200&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nature&amp;apos;s Vigil</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_NaturesVigil_enable then
	if PQR_SpellAvailable(124974) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 102560) then
			CastSpellByName(tostring(GetSpellInfo(124974)))
			if PQR_SpellAvailable(26297)
			and  PQI_AlphaMoonkin_Berserking_enable == true then
				CastSpellByName(tostring(GetSpellInfo(26297)))
			end
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Solar Beam</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_SolarBeam_enable
and PQI:IsHotkeys(PQI_AlphaMoonkin_SolarBeam_key) then
	CastSpellByName(GetSpellInfo(78675), &amp;quot;mouseover&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hurricane</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_Hurricane_enable 
and PQI:IsHotkeys(PQI_AlphaMoonkin_Hurricane_key) then
	CastSpellByName(GetSpellInfo(16914))
	if SpellIsTargeting() then
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tranquility</Name><Default>false</Default><SpellID>740</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_Tranquility_enable
and PQI:IsHotkeys(PQI_AlphaMoonkin_Tranquility_key) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire Lunar</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower == -100 then

	if (CurrentCast == &amp;quot;Starfire&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
		return false
	else
	    CastSpellByName(tostring(GetSpellInfo(8921)))
	    return true
	end
end</Lua><RecastDelay>4000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire Lunar Eclipse Phase</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>local MF,_,_,_,_,_,MFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;)
local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
local Starfall = UnitBuffID(&amp;quot;player&amp;quot;, 48505)
local Iwin = UnitBuffID(&amp;quot;player&amp;quot;, 124974)

if (EclipseDirection == &amp;quot;sun&amp;quot; and (EclipsePower == -20 or EclipsePower == -40) and Iwin) then
return false
	else
	if EclipseDirection == &amp;quot;sun&amp;quot; and (EclipsePower &amp;gt;= -100 and EclipsePower &amp;lt; 0) then
		if MF == nil 
		or MFtimer - GetTime() &amp;lt; 7 then
	   	return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moving Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)

if PQR_IsMoving(1) then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
	CastSpellByName(tostring(GetSpellInfo(93402)))
	else 
	CastSpellByName(tostring(GetSpellInfo(8921)))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moving Starsurge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SS,_,_,_,_,_,SStimer = UnitBuffID(&amp;quot;player&amp;quot;,93400)

if PQR_IsMoving(1) then
	if SS then
	CastSpellByName(tostring(GetSpellInfo(78674)))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starfire End</Name><Default>false</Default><SpellID>2912</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 60 then
	if (CurrentCast == &amp;quot;Starfire&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
		return false
	else
	    CastSpellByName(tostring(GetSpellInfo(2912)))
	    return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge &amp;gt; Lunar</Name><Default>false</Default><SpellID>78674</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
if EclipseDirection == &amp;quot;moon&amp;quot; then
	local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
	local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
	if EclipsePower &amp;gt;= -60 then
	    return true
	end    
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge &amp;gt; Lunar End</Name><Default>false</Default><SpellID>78674</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
if EclipseDirection == &amp;quot;moon&amp;quot; then
	local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
	local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
	if EclipsePower &amp;lt;= -60 and (CurrentCast == &amp;quot;wrath&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
	return false
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge &amp;gt; Solar</Name><Default>false</Default><SpellID>78674</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
local Stars = UnitBuffID(&amp;quot;player&amp;quot;, 93399)
local Iwin = UnitBuffID(&amp;quot;player&amp;quot;, 124974)


if (EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower == -20 and Iwin) then 
	return false
	else
	if EclipseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;lt; 60 then
		return true
		end    
	end
end


if EclipseDirection == &amp;quot;none&amp;quot; then
	local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
	if  EclipsePower &amp;gt;= 80 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge &amp;gt; Solar End</Name><Default>false</Default><SpellID>78674</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
if EclipseDirection == &amp;quot;sun&amp;quot; then
	local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
	local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
	if EclipsePower &amp;gt; 60 and (CurrentCast == &amp;quot;Starfire&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
		return false
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire Solar</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower == 100 then

	if (CurrentCast == &amp;quot;Wrath&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
		return false
	else
	    CastSpellByName(tostring(GetSpellInfo(93402)))
	    return true
	end
end</Lua><RecastDelay>4000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire Solar Eclipse Phase</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>local SF,_,_,_,_,_,SFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;)
local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)

if EclipseDirection == &amp;quot;moon&amp;quot; and (EclipsePower &amp;lt;= 100 and EclipsePower &amp;gt; 0) then
	if SF == nil 
	or SFtimer - GetTime() &amp;lt; 7 then
	   return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wrath End</Name><Default>false</Default><SpellID>5176</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection()
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= -70 then
	if (CurrentCast == &amp;quot;Wrath&amp;quot; or CurrentCast == &amp;quot;Starsurge&amp;quot;) then
	return false
	else
	CastSpellByName(tostring(GetSpellInfo(5176)))
	return true
	end
end

if EclipseDirection == &amp;quot;none&amp;quot; then
	local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
	if  EclipsePower &amp;lt;= 79 then
	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Astral Communion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local EclipseDirection = GetEclipseDirection(&amp;quot;player&amp;quot;)
local EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
local channel = UnitChannelInfo(&amp;quot;player&amp;quot;)

if PQI_AlphaMoonkin_AstralCommunion_enable
and PQI:IsHotkeys( PQI_AlphaMoonkin_AstralCommunion_key  ) then
	if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and not PQR_IsMoving(2) then
		if channel ~= &amp;quot;Astral Communion&amp;quot; then
			if EclipseDirection == &amp;quot;moon&amp;quot; then
				if EclipsePower &amp;gt; -75 then
					CastSpellByName(GetSpellInfo(127663))
				end
			elseif EclipseDirection ~= &amp;quot;moon&amp;quot; then
				CastSpellByName(GetSpellInfo(127663))
			end
		elseif channel == &amp;quot;Astral Communion&amp;quot; then
			if EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= -75 then
				SpellStopCasting()
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Boss Special -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_BossSpecial_enable == true then

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end

--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					CastSpellByID(122395)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					CastSpellByID(122395)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					CastSpellByID(122389)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				if PQR_SpellAvailable(122389) then
					CastSpellByID(122389)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
				end	

				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (single == true or aoe == false or aoe == true or switch == true) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (single == true or aoe == false or aoe == true or switch == true) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (single == true or aoe == false or aoe == true or switch == true) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local PlayerHP = (100 * (UnitHealth(&amp;quot;player&amp;quot;) + UnitGetIncomingHeals(&amp;quot;player&amp;quot;)) / UnitHealthMax(&amp;quot;player&amp;quot;))
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 5 then 
--if returnSoul and PlayerHP &amp;lt;= 20 then 
	CastSpellByID(123060)
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end

if (select(2, GetSpecializationInfo(GetSpecialization()))) == &amp;quot;Retribution&amp;quot; then
	-- Fading Light
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) and IsRightShiftKeyDown() == nil then
		if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 1.3 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		end
	end
	
	-- Hour of Twilight
	local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
	if HoT == GetSpellInfo(103327) and IsRightShiftKeyDown() == nil then
		if timer/1000 - GetTime() &amp;lt; 1.3 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		end	
	end
end

-- Avoid Fragmentation on Madness
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

-- Spine of Deathwing
if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitAura(&amp;quot;player&amp;quot;, &amp;quot;Parachute&amp;quot;) then
		RunMacroText(&amp;quot;/cancelaura Parachute&amp;quot;)
	end
end

-- Darkmoon Faerie Cannon
if select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) and select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) - GetTime() &amp;lt; 1.07 then 
	CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) 
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Celestial Alignment Burst</Name><Default>false</Default><SpellID>112071</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_CelestialAlignment_enable
and PQI_AlphaMoonkin_Burst_enable == true
and CD_Burst then
	Celestial_Alignment_Burst = true
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incarnation Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_Incarnation_enable
and PQI_AlphaMoonkin_Burst_enable == true
and CD_Burst then
	if select(2,GetTalentRowSelectionInfo(4)) == 11
	and IsUsableSpell(102560)
	and select(2,GetSpellCooldown(102560)) &amp;lt; 2 then
		CastSpellByName(tostring(GetSpellInfo(102560)))
		Incarnation_Burst = true
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nature&amp;apos;s Vigil Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_AlphaMoonkin_NaturesVigil_enable
and PQI_AlphaMoonkin_Burst_enable == true
and CD_Burst then
	if PQR_SpellAvailable(124974) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 102560) then
			CastSpellByName(tostring(GetSpellInfo(124974)))
			Natures_Vigil_Burst = true
			if PQR_SpellAvailable(26297)
			and  PQI_AlphaMoonkin_Berserking_enable == true then
				CastSpellByName(tostring(GetSpellInfo(26297)))
			end
			if PQR_SpellAvailable(121279)
			and PQI_AlphaMoonkin_Lifeblood_enable == true then
				CastSpellByName(tostring(GetSpellInfo(121279)))
			end
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local inCombat = UnitAffectingCombat(&amp;quot;player&amp;quot;)

if PQI_AlphaMoonkin_Burst_enable == true then
	if inCombat == nil then
		CD_Burst = true
	end
	
	if Celestial_Alignment_Burst 
	and Incarnation_Burst
	and Natures_Vigil_Burst then
		Celestial_Alignment_Burst = false
		Incarnation_Burst = false
		Natures_Vigil_Burst = false
		CD_Burst = false
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_AlphaMoonkin_Trinket1_enable then return false end 

local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 13)

if Cooldown == 0 and
 Ready == 1 and
 UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
 UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
	UseInventoryItem(13)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_AlphaMoonkin_Trinket2_enable then return false end

local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 14)

if Cooldown == 0 and
 Ready == 1 and
 UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
 UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
	UseInventoryItem(14)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LossOfControl</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_AlphaMoonkin_AntiRoot_enable then return false end 

--code by deadpanstiffy 
for i = 1, 5 do
	local loc = { C_LossOfControl.GetEventInfo(i) }
	if loc[3] == &amp;quot;Rooted&amp;quot; then
		CastShapeshiftForm(5)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DRUID>