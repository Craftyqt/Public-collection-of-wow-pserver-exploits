<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>---Success---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnGainBuff(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_AURA_APPLIED&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
					if select(12, ...) == 48518 then
					Lunar = true
					LunarSun = true
					NoWrath = true
					NoStarfire = false
					ShootingStars = true
					EarlyMoon = true
					LunarMoon = true
					Starfall = true
					NewSun = false
					SolarStar = false
					elseif select(12, ...) == 48517 then
					Solar = true
					SolarMoon = true
					NoWrath = false
					NoStarfire = true
					ShootingStars = true
					EarlySun = true
					SolarSun = true
					NewSun = true
					elseif select(12, ...) == 112071 then
					Celestial = true
					Starfall = true
					elseif select(12, ...) == 740 then
      				print(1)
      				PQR_DelayRotation(2)
      				SetCVar(&amp;quot;Nova_Tranq&amp;quot;, 0)
					elseif select(12, ...) == 102560 then
						if Nova_Open == 1 then
						SetCVar(&amp;quot;Nova_Open&amp;quot;, 0)
						OpenGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
						PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
						end
					IncarnationReady = false
					Alignment = true
					IncarnationSun = true
					IncarnationMoon = true
					Lunar = false
					EarlyMoon = false
					LunarSun = false
					LunarMoon = false
					Solar = false
					EarlySun = false
					SolarMoon = false
					SolarSun = false
					end
     			end
			elseif (type==&amp;quot;SPELL_AURA_REMOVED&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
					if select(12, ...) == 48518 then
					Lunar = false
					EarlyMoon = false
					LunarSun = false
					LunarMoon = false
					Starfall = false
					end	
					if select(12, ...) == 48517 then
					Solar = false
					EarlySun = false
					SolarMoon = false
					SolarSun = false
					end
					if select(12, ...) == 112071 then
					Celestial = false
					SolarMoon = false
					SolarSun = false
					LunarSun = false
					LunarMoon = false
					Alignment = false
					end
					if select(12, ...) == 108291 then
						if Nova_Move == 1 then
						xrn:message(&amp;quot;\124cFFCC99FFMoonCatting Finished&amp;quot;)
						SetCVar(&amp;quot;Nova_Move&amp;quot;, 0)
						end
						if Nova_Heal == 1 then
						SetCVar(&amp;quot;Nova_Heal&amp;quot;, 0)
						end
					end
				end
     		elseif (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
					if select(12, ...) == 8921 then
						if Celestial == true then
						IncarnationMoon = false
						IncarnationSun = false
						Celestial = false
						SolarMoon = false
						SolarSun = false
						LunarSun = false
						LunarMoon = false
						else
						LunarSun = false
						IncarnationMoon = false
						LunarMoon = false
						SolarMoon = false
						end
					elseif select(12, ...) == 93402 then
						SolarMoon = false
						IncarnationSun = false
						LunarSun = false
						SolarSun = false
					elseif select(12, ...) == 78674 and SolarStar == true then
					SolarStar = false
					NewSun = false
					elseif select(12, ...) == 124974 then
						if not IsPlayerSpell(106731) or not PQR_SpellAvailable(106731) then
							if NatureOnce == true then
							NatureOnce = false
							end
						end 
					elseif select(12, ...) == 740 and Nova_Tranq == 1 then
					SetCVar(&amp;quot;Nova_Tranq&amp;quot;, 0)
					PQR_DelayRotation(0.5)
					elseif select(12, ...) == 102793 and Nova_Solar == 1 then
					Ursols = true
					elseif select(12, ...) == 78675 and Nova_Solar == 1 then
					SetCVar(&amp;quot;Nova_Solar&amp;quot;, 0)
					elseif select(12, ...) == 132469 then
					SetCVar(&amp;quot;Nova_Knockback&amp;quot;, 0)
					end
				end
			elseif (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
				if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
      				if select(12, ...) == 740 then
      				print(1)
      				PQR_DelayRotation(2)
      				SetCVar(&amp;quot;Nova_Tranq&amp;quot;, 0)
    			 	end
    			end
    		end
   		end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnGainBuff)
    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
if Nova_SolarHold == 1 then
	if EclipseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;gt;= 80 then
			if CurrentCast == GetSpellInfo(2912) or CurrentCast == GetSpellInfo(78674) then
			SpellStopCasting()
			return true
			else
			CastSpellByName(GetSpellInfo(5176),&amp;quot;target&amp;quot;) return true
			end
		end
	end
end

if Nova_AOE == 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; and not UnitBuffID(&amp;quot;player&amp;quot;, 48517) and not Celest then
	CastSpellByName(GetSpellInfo(5176),&amp;quot;target&amp;quot;)
	return true
	elseif EclipseDirection == &amp;quot;sun&amp;quot; and (not UnitBuffID(&amp;quot;player&amp;quot;,48518) or PQI_SoapboxOffensiveSettings_ForceSolarAOE_enable) or Celest then
	CastSpellByName(GetSpellInfo(2912),&amp;quot;target&amp;quot;)
	return true
	end
elseif EclipseDirection == &amp;quot;sun&amp;quot; or Celest then
CastSpellByName(GetSpellInfo(2912),&amp;quot;target&amp;quot;)
else
CastSpellByName(GetSpellInfo(5176),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Eclipse Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end
if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
local SUN = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))
local MOON = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
if cTime &amp;lt; 1 then return false end

if Incarnation then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if IncarnationMoon == true then
	    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
        return true
        elseif IncarnationSun == true then
		CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
    	return true
    	end
    elseif IncarnationSun == true then
    CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
    return true
    elseif IncarnationMoon == true then
    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
    return true
    end
elseif LunarSun == true then
	if SUN then
    	if (LunarMoon == true and SUN - GetTime() &amp;lt; 7) or SUN - GetTime() &amp;lt; 5 then
        	if TargetValidation(&amp;quot;target&amp;quot;,93402) then
            CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
            return true
            end
        end
    elseif TargetValidation(&amp;quot;target&amp;quot;,93402) then
    CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
    return true
    end
end
if LunarMoon == true then
	if LunarSun == false then
	  	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
        CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
        return true
        end
	elseif MOON then
		if MOON - GetTime() &amp;lt; 3 then
			if TargetValidation(&amp;quot;target&amp;quot;,8921) then
			CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
			return true
			end
		elseif MOON - GetTime() &amp;lt; 10 then
        	if EclipsePower &amp;gt;= -40 or (NG and NGtimer - GetTime() &amp;lt; 4) then
            	if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(2912) then
                	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
                    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
                    return true
                    end
                elseif EclipsePower &amp;gt; -40 and (Alignment == false or Alignment == nil) then
                	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
                    SpellStopCasting()
                    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
                    return true
                    end
                elseif NG and NGtimer - GetTime() &amp;lt; 4 then
                	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
                    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
                    return true
                    end
                elseif NG and NGtimer - GetTime() &amp;lt; 2 then
                	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
                    SpellStopCasting()
                    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
                    return true
                    end
                end
            end
        end
    end
 end
if SolarMoon == true then
	if MOON then
    	if (SolarSun == true and MOON - GetTime() &amp;lt; 7) or MOON - GetTime() &amp;lt; 5 then
        	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
            CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
            return true
            end
        end
    elseif TargetValidation(&amp;quot;target&amp;quot;,8921) then
    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
    return true
    end
end

if SolarSun == true then
	if SolarMoon == false then
	  	if TargetValidation(&amp;quot;target&amp;quot;,93402) then
        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
        return true
        end
        elseif SUN then
                if SUN - GetTime() &amp;lt; 3 then
                        if TargetValidation(&amp;quot;target&amp;quot;,93402) then
                        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
                        return true
                        end
                elseif SUN - GetTime() &amp;lt; 10 then
                        if EclipsePower &amp;lt;= 30 or (NG and NGtimer - GetTime() &amp;lt; 4) then
                                if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) then
                                        if TargetValidation(&amp;quot;target&amp;quot;,93402) then
                                        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
                                        return true
                                        end
                                elseif EclipsePower &amp;lt; 30  then
                                        if TargetValidation(&amp;quot;target&amp;quot;,93402) then
                                        SpellStopCasting()
                                        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
                                        return true
                                        end
                                elseif NG and NGtimer - GetTime() &amp;lt; 4 then
                                        if TargetValidation(&amp;quot;target&amp;quot;,93402) then
                                        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
                                        return true
                                        end
                                elseif NG and NGtimer - GetTime() &amp;lt; 2 then
                                        if TargetValidation(&amp;quot;target&amp;quot;,93402) then
                                        SpellStopCasting()
                                        CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
                                        return true
                                        end
                                end
                        end
                end
        end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Celestial Fire</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Celestial == true then
SpellStopCasting()
return true
elseif Celest then
	if Celesttimer - GetTime() &amp;lt; 3 then
		if Moon and Moontimer - GetTime() &amp;lt; 9 then
		return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Celestial Alignment</Name><Default>false</Default><SpellID>112071</SpellID><Actions>/cast Berserking |/cast Bloord Fury</Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end
local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
if IsPlayerSpell(108373) and not DoC then return false end

if Nova_Cooldowns ~= 1 then return false end
if TargetValidation(&amp;quot;target&amp;quot;,8921) then
if IsPlayerSpell(106731) then
	if Incarnation then
		if Incarnationtimer - GetTime() &amp;lt; 16 or cTime &amp;lt; 10 then
		SpellStopCasting()
	 	return true
	    end
	end
elseif Nova_Cooldowns == 1 then
	if PQI_SoapboxOffensiveSettings_BossCooldowns_enable and not SpecialUnit() then return false end
	if UVLS then
		if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
		SpellStopCasting() 
		return true
		end
	elseif EclipsePower &amp;gt;= 0 then
	if CurrentCast == GetSpellInfo(78674) then return false end
	SpellStopCasting()
	return true
	end
	---if Nova_Open == 1 then
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
			---if Proc &amp;gt; 2 then
				---if CurrentChannel == GetSpellInfo(112071) then
				---SpellStopCasting()
				---return true
				---end
			---else
			---return true
			---end
		---end
	---end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Moon,_,_,_,_,_,Moontimer = UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;)
---Rapid Fire CD---
local IStart, IDuration = GetSpellCooldown(102560)
ICD = IStart + IDuration - GetTime()
Sun,_,_,_,_,_,Suntimer = UnitDebuffID(&amp;quot;target&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;)
Incarnation,_,_,_,_,_,Incarnationtimer = UnitBuffID(&amp;quot;player&amp;quot;,102560)
Celest,_,_,_,_,_,Celesttimer = UnitBuffID(&amp;quot;player&amp;quot;,112071)
HoTW,_,_,_,_,_,HoTWtimer = UnitBuffID(&amp;quot;player&amp;quot;,108291)
NG,_,_,_,_,_,NGtimer = UnitBuffID(&amp;quot;player&amp;quot;,16886)
Rake,_,_,_,_,_,Raketimer = UnitDebuffID(&amp;quot;target&amp;quot;,1822,&amp;quot;PLAYER&amp;quot;)
EclipseDirection = GetEclipseDirection()
EclipsePower = UnitPower(&amp;quot;player&amp;quot;, 8)
Energy = UnitPower(&amp;quot;player&amp;quot;, 3)
CP = GetComboPoints(&amp;quot;player&amp;quot;)

DoC,_,_,_,_,_,DoCtimer = UnitBuffID(&amp;quot;player&amp;quot;, 145151) 
Playermana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nature&amp;apos;s Vigil</Name><Default>false</Default><SpellID>124974</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

---Dont use of cooldowns are disabled---
if Nova_Cooldowns ~= 1 then return false end

---Dont use on trash if we only want to use on bosses---
if PQI_SoapboxOffensiveSettings_BossCooldowns_enable and not SpecialUnit() then return false end


if not IsPlayerSpell(106731) then
return true
end

if NatureOnce == false or NatureOnce == nil then return false end

if not UnitBuffID(&amp;quot;player&amp;quot;,106731) then 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starfall</Name><Default>false</Default><SpellID>48505</SpellID><Actions></Actions><Lua>if Nova_SolarHold == 1 then return false end
if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end


	if not UnitBuffID(&amp;quot;player&amp;quot;, 48505) then
	if TargetValidation(&amp;quot;target&amp;quot;, 8921) then
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Starsurge</Name><Default>false</Default><SpellID>78674</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end
if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
if cTime &amp;lt; 1 then return false end

if Nova_SolarHold == 1 and EclipseDirection == &amp;quot;sun&amp;quot; and (EclipsePower &amp;gt;= 80 or (EclipsePower &amp;gt;= 40 and UnitBuffID(&amp;quot;player&amp;quot;, 93400))) then
return false end

---if EclipseDirection == &amp;quot;moon&amp;quot; then
	---if SolarStar == true or Celest or (Nova_AOE == 1 and EclipsePower &amp;gt; 20) then
	---return true
	---elseif (EclipsePower &amp;lt;= 5 or (EclipsePower &amp;lt;= 20 and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(5176))) and not Celest then
	---return true
	---end
---else
UseInventoryItem(10)
return true
---end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 145138) then return false end
if Celestial == true then return false end
if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
local MOON = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))

if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt; 80 then 
	return false
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48518) then
	if not Sun then 
	return false 
	end
end



	if EclpiseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -70 then
		return false
		end
	end


if TargetValidation(&amp;quot;target&amp;quot;, 8921) then
if not MOON then
return true
elseif MOON - GetTime() &amp;lt; 2 then
return true
end
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Functions---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>----------------------------------------------------------------------------------------------------------------------------------------------
----------------Credits to Mentally for below Trackers, coding used to track DoTs and UVLS----------------------------------------------------
--http://www.ownedcore.com/forums/world-of-warcraft/world-of-warcraft-bots-programs/wow-bot-maps-profiles/405521-pqr-mentallys-hysteria.html--
----------------------------------------------------------------------------------------------------------------------------------------------

	
---Credits to Bu_ba for the line of code!---
if not IsLineOfSight then
 LoSTable = { }
 function IsLineOfSight(targetCheck, time)
  local time=time or 5
  targetGUID = UnitGUID(targetCheck) or 0 

   for i=1, #LoSTable do
    if time &amp;lt; (GetTime() - LoSTable[i].time) then
     table.remove(LoSTable, i)
     break
    end
  end

   function LoSCheck(self, event, ...)
    local targetGUID = targetGUID
    local Log = {...}
    local AlreadyTabled = false
    if Log[2] and Log[2] == &amp;quot;SPELL_CAST_FAILED&amp;quot; and targetGUID then
     if Log[4] and Log[4]==UnitGUID(&amp;quot;player&amp;quot;) then
      if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
       for j=1, #LoSTable do
        if targetGUID == LoSTable[j].unit then
         AlreadyTabled = true
         break
        end
       end
       if not AlreadyTabled then
        table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
        targetGUID = nil
        _G.NovaLineOfSight:UnregisterAllEvents()
       end
      end
     end
    end
    
   end

  if not NovaLineOfSight then
    frameLOS = CreateFrame(&amp;quot;frame&amp;quot;, &amp;quot;NovaLineOfSight&amp;quot;)
    frameLOS:SetScript(&amp;quot;OnEvent&amp;quot;, LoSCheck)
  end
  
   for k=1, #LoSTable do
     if targetGUID and targetGUID == LoSTable[k].unit then
     return false
    end
  end
  
  
  _G.NovaLineOfSight:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  return true

 end
end


Bloodlust = nil
function Bloodlust()
	local lust = {2825, 32182, 80353, 90355}
	
	for i=1,#lust do
		if UnitBuffID(&amp;quot;player&amp;quot;,lust[i]) then return true, lust[i] end
	end
	return false
end

Hasted = nil
function Hasted()
	local haste = {2825, 32182, 80353, 90355}
	
	for i=1,#haste do
		if UnitBuffID(&amp;quot;player&amp;quot;,haste[i]) then return true, haste[i] end
	end
	return false
end

if sTimer == nil then
  sTimer = 0
 end
 if cTime == nil then
  cTime = 0
 end
 if UnitAffectingCombat(&amp;quot;player&amp;quot;) and sTimer == 0 then
   sTimer = GetTime()
 end
 if sTimer &amp;gt; 0 then
   cTime = (GetTime() - sTimer)
 end
 if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not UnitExists(&amp;quot;target&amp;quot;) then
  sTimer = 0
  cTime = 0
 end

Flying = nil
function Flying()
	local flight = {98734, 98619, 133755}
	
	for i=1,#flight do
		if UnitBuffID(&amp;quot;player&amp;quot;,flight[i]) then return true, flight[i] end
	end
	return false
end

	GetSpellCD = nil
	function GetSpellCD(MySpell)
		if GetSpellCooldown(GetSpellInfo(MySpell)) == nil then
			return 0
		else
			local Start ,CD = GetSpellCooldown(MySpell)
			local MyCD = Start + CD - GetTime()
			return MyCD
		end
	end
function dummy()
	dummies = {
		31146, --Raider&amp;apos;s Training Dummy - Lvl ??
		67127, --Training Dummy - Lvl 90
		46647, --Training Dummy - Lvl 85
		32546, --Ebon Knight&amp;apos;s Training Dummy - Lvl 80
		31144, --Training Dummy - Lvl 80
		32667, --Training Dummy - Lvl 70
		32542, --Disciple&amp;apos;s Training Dummy - Lvl 65
		32666, --Training Dummy - Lvl 60
		32545, --Initiate&amp;apos;s Training Dummy - Lvl 55 
		32541, --Initiate&amp;apos;s Training Dummy - Lvl 55 (Scarlet Enclave) 
	}
	for i=1, #dummies do
		if UnitExists(&amp;quot;target&amp;quot;) then
			dummyID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(-13, -9), 16)
		else
			dummyID = 0
		end
		if dummyID == dummies[i] then
			return true
		end	
	end
end


-- Aura Info function.
buffs = {
	stat 		=	{ 90363, 20217,	115921, 1126 },
	stamina		= 	{ 469, 90364, 109773, 21562},
	atkpwr		= 	{ 19506, 57330,	6673 },
	atkspeed	=	{ 55610, 113742, 30809, 128432, 128433 },
	spllpwr		=	{ 77747, 109773, 126309, 61316, 1459 },
	spllhaste	= 	{ 24907, 15473, 51470, 49868 },
	crit		=	{ 17007, 1459, 61316, 116781, 97229, 24604, 90309, 126373, 126309 },
	mastery		=	{ 116956, 19740, 93435, 128997 },
}

-- Trinket Proc list
buffList = {104423, 104509, 104510, 128985, 33702, 126577, 126659, 126478, 125487, 136082, 126605, 126734, 126476, 136089, 138898, 139133, 138786, 138703, 137590, 26297, 32182, 90355, 80353, 2825, 104993, 105702}
critProcs = {104509, 126605, 126476}
hasteProcs = {104423, 126659, 136089, 138703, 137590, 26297, 32182, 90355, 80353, 2825}
masteryProcs = {104510}
intellectProcs = {128985, 126577, 126478, 136082, 138898, 139133, 138786, 104993, 105702, 33702, 126734, 125487}



-- Calculate accumulated power of procs
SoapboxPower = nil
function SoapboxPower(spellID)
	-- Fetch our current stats.
	local mastery, haste, crit, spd, sorbs = GetMastery(), UnitSpellHaste(&amp;quot;player&amp;quot;), GetSpellCritChance(6), GetSpellBonusDamage(6), UnitPower(&amp;quot;player&amp;quot;,13)
	
	-- Calculate potential damage buffs.
	dmg_buff = 1
	local fluidity, tricks, fearless, nutriment, shadowform, pi, tof = UnitBuffID(&amp;quot;player&amp;quot;,138002), UnitBuffID(&amp;quot;player&amp;quot;,57934), UnitBuffID(&amp;quot;player&amp;quot;,118977), select(4,UnitBuffID(&amp;quot;player&amp;quot;,138002)), UnitBuffID(&amp;quot;player&amp;quot;,15473), UnitBuffID(&amp;quot;player&amp;quot;,10060), UnitBuffID(&amp;quot;player&amp;quot;,123254)
	if fluidity		then dmg_buff = dmg_buff * 1.4		end
	if fearless		then dmg_buff = dmg_buff * 1.6		end
	if tricks		then dmg_buff = dmg_buff * 1.15		end
	if nutriment	then dmg_buff = 2+(nutriment-1)*0.1	end
	if shadowform	then dmg_buff = dmg_buff * 1.25		end
	if pi			then dmg_buff = dmg_buff * 1.05		end
	if tof			then dmg_buff = dmg_buff * 1.15		end
	
	-- Skull Banner
	if crit &amp;gt;= 100	then
		if skullbanner then dmg_buff = dmg_buff * 1.20	end
	end
	
	-- If Unerring proceed, take it into account.
	if crit &amp;gt; 100 then crit = 100 end
	
	-- Class/spec detection
	if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;DRUID&amp;quot; then
		if GetSpecialization() == 1 then
			damage_bonus 		= (1+crit/100)*(1+(mastery*1.92)/100)
			tick_every 			= 2/(1+(haste/100))
			
			-- Shadow Word: Pain
			if spellID == 8921 then
				ticks		= PowerRound(14/tick_every)
				duration	= ticks * tick_every
				damage		= ticks * (623+spd*0.293) * damage_bonus
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end
			
			-- Shadow Word: Pain
			if spellID == 93402 then
				ticks		= PowerRound(14/tick_every)
				duration	= ticks * tick_every
				damage		= ticks * (623+spd*0.293) * damage_bonus
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end	
			
			
			-- Fail-safe
			return 0
		else return 0 end
	elseif select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;WARLOCK&amp;quot; then
		if GetSpecialization() == 2 then
			-- Doom
			if spellID == 603 then
				bonus		= (1+crit/100)*(1+(mastery*3)/100)
				tick_every	= 15/(1+(haste/100))
				ticks		= PowerRound(60/tick_every)
				duration	= ticks * tick_every
				damage		= (5340/ticks+spd*1.25)*bonus*ticks*dmg_buff
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end
			
			-- Fail-safe
			return 0
		else return 0 end
	else return 0 end
end

-- Unerring Vision of Lei-Shen
Vision = {
	95814,	-- LFR
	94524,	-- Normal
	96186,	-- Thunderforged
	96558,	-- Heroic
	96930	-- Heroic Thunderforged
}

-- Complete boss unit table (Dungeons/Heroics/Raids)
BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}

-- Combat log event reader
function AptheosisFrame_OnEvent(self,event,...)

	
	-- Clear the DOT tracker whenever we leave or enter combat!
	if event == &amp;quot;PLAYER_REGEN_ENABLED&amp;quot; or event == &amp;quot;PLAYER_REGEN_DISABLED&amp;quot; then
		if #DoTs &amp;gt; 0 then DoTs = {} end
	end
	
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		local subEvent		= select(2, ...)
		local source		= select(5, ...)
		local destGUID		= select(8, ...)
		local destination	= select(9, ...)
		local spellID		= select(12, ...)
		local spell			= select(13, ...)
		local damage		= select(15, ...)
		local critical		= select(21, ...)
		local doom_tick_every = Round(15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local moon_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local sun_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local swp_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local vt_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		
		-- Unit Death events
		if subEvent == &amp;quot;UNIT_DIED&amp;quot; then
			-- A unit has died, is it in our tracker?
			if #DoTs &amp;gt; 0 then
				for i=1,#DoTs do
					if DoTs[i].guid == destGUID then tremove(DoTs, i) return true end
				end
			end
		end
		
		-- Successfull Spell Casts
		if subEvent == &amp;quot;SPELL_CAST_START&amp;quot; then end
		
		
		-- Refreshed Aura Events
		if subEvent == &amp;quot;SPELL_AURA_REFRESH&amp;quot; then			
			-- Moonfire  was refreshed on an enemy, update our table.
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 8921 then
				if #DoTs &amp;gt; 0 then
					for i=1,#DoTs do
						if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then
							DoTs[i].moonPower = SoapboxPower(8921)
							DoTs[i].moon_tick_every = moon_tick_every
							DoTs[i].spellID = spellID
							if UnitBuffID(&amp;quot;player&amp;quot;,138963) then DoTs[i].crit = true else DoTs[i].crit = false end
						end
					end
				end
			end
			-- Sunfire  was refreshed on an enemy, update our table.
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 93402 then
				if #DoTs &amp;gt; 0 then
					for i=1,#DoTs do
						if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then
							DoTs[i].sunPower = SoapboxPower(93402)
							DoTs[i].sun_tick_every = sun_tick_every
							DoTs[i].spellID = spellID
							if UnitBuffID(&amp;quot;player&amp;quot;,138963) then DoTs[i].crit = true else DoTs[i].crit = false end
						end
					end
				end
			end
		end
		
		-- Removed Aura Events
		if subEvent == &amp;quot;SPELL_AURA_REMOVED&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source then				
				-- Moonfire fell of a unit, remove unit from tracker.
				if spellID == 8921 then
					if #DoTs &amp;gt; 0 then
						for i=1,#DoTs do
							if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then tremove(DoTs, i) return true end
						end
					end
				end
				
				-- Sunfire fell of a unit, remove unit from tracker.
				if spellID ==93402 then
					if #DoTs &amp;gt; 0 then
						for i=1,#DoTs do
							if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then tremove(DoTs, i) return true end
						end
					end
				end			
			end
		end
		
		-- Applied Aura Events
		if subEvent == &amp;quot;SPELL_AURA_APPLIED&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source then
				
				-- Moonfire applied to a unit, add unit to tracker
				if spellID == 8921 then
					for i=1,#DoTs do if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then return false end end
					
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						table.insert(DoTs, {guid = destGUID, moonPower = SoapboxPower(8921), moon_tick_every = moon_tick_every, spellID = spellID, crit = true})
					else
						table.insert(DoTs, {guid = destGUID, moonPower = SoapboxPower(8921), moon_tick_every = moon_tick_every, spellID = spellID, crit = false})
					end
				end
				
				-- Sunfire applied to a unit, add unit to tracker
				if spellID == 93402 then
					for i=1,#DoTs do if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then return false end end
					
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						table.insert(DoTs, {guid = destGUID, sunPower = SoapboxPower(93402), sun_tick_every = sun_tick_every, spellID = spellID, crit = true})
					else
						table.insert(DoTs, {guid = destGUID, sunPower = SoapboxPower(93402), sun_tick_every = sun_tick_every, spellID = spellID, crit = false})
					end
				end
			end
		end
	end
end

-- Function to check if buff.duration &amp;gt; spell.cast_time
Soapbox_CastCheck = nil
function Soapbox_CastCheck(spell, buff)
	-- Someone forgot to input something, return false by default.
	if buff == nil then return false end
	if spell == nil then return false end
	
	-- Variables and functions we need to make this work.
	local Round = Round
	local buffName,_,_,_,_,_,buffTime = UnitBuffID(&amp;quot;player&amp;quot;,buff)
	
	if buffName then
		-- It&amp;apos;s an instant spell, return true no matter what.
		if select(7,GetSpellInfo(spell)) == 0 then return true end
		
		-- Check the cast time
		if buffTime - GetTime() &amp;gt; Round(select(7,GetSpellInfo(spell))/1000,2) + 0.8 then return true
			else return false end
	end
	return false
end


-- Returns the number of items currently equipped from the given table.
itemCheck = nil
function itemCheck(tbl)
	local itemCount = 0
	for i=1,#tbl do
		if IsEquippedItem(tbl[i]) then itemCount = itemCount + 1 end
	end
	return itemCount
end

-- Aura Information Function
AuraInfo = nil
function AuraInfo(i,unit)
	if i == 1 then
		for x = 1, #buffs.stat do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stat[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 2 then
		for x = 1, #buffs.stamina do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stamina[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 3 then
		for x = 1, #buffs.atkpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 4 then
		for x = 1, #buffs.atkspeed do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkspeed[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 5 then
		for x = 1, #buffs.spllpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 6 then
		for x = 1, #buffs.spllhaste do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllhaste[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 7 then
		for x = 1, #buffs.crit do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.crit[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 8 then
		for x = 1, #buffs.mastery do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.mastery[x])))
			if texture then
				return name, _, texture
			end
		end
	else 
		return nil, nil, nil
	end
end

-- Rounding Function
Round = nil
function Round(number, decimal)
	local multiplier = 10^(decimal or 0)
	return math.floor(number * multiplier + 0.5) / multiplier
end
PowerRound = nil
function PowerRound(num) return math.floor(num+.5) end



-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local BossUnits = BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#BossUnits do
				if BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end

----------------------------------------------------------------------------------------------------------------------------------------------
----------------Credits to Mentally for Amazinlgly accurate T2D Function----------------------------------------------------------------------
--http://www.ownedcore.com/forums/world-of-warcraft/world-of-warcraft-bots-programs/wow-bot-maps-profiles/405521-pqr-mentallys-hysteria.html--
----------------------------------------------------------------------------------------------------------------------------------------------


-- Time 2 Die
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		
		return timeToDie
	end
end

-- DoT Mind Control Function
MindControlled = nil
function MindControlled(unit)
	if UnitDebuffID(unit, 145832) 
	or UnitDebuffID(unit, 145171) 
	or UnitDebuffID(unit, 145065) 
	or UnitDebuffID(unit, 145071) then
	return true
	else
	return false
	end
end


-- Target Validation Function
TargetValidation = nil
function TargetValidation(unit, spell)
	if UnitExists(unit)
		and IsPlayerSpell(spell)
		and UnitCanAttack(&amp;quot;player&amp;quot;, unit) == 1
		and not UnitIsDeadOrGhost(unit)
		and IsLineOfSight(unit, 3) then
			if IsSpellKnown(spell) then
				if PQR_SpellAvailable(spell) then
					if IsSpellInRange(GetSpellInfo(spell), unit) == 1 then return true else return false end
				else
					if spell == 8092 or spell == 32379 then
						local spellCD = select(2,GetSpellCooldown(spell)) + GetSpellCooldown(spell) - GetTime()
						if spellCD &amp;lt;= 0 then spellCD = 0 end
						if spellCD &amp;lt;= 0.5 then return true end
					end
					return false
				end
			else
				if select(2, GetSpellCooldown(spell)) == 0 then return true end
			end
	end
end




TreeProcs = {
---Original---
104423, 104509, 128985, 33702, 126577, 126659, 126478, 125487, 136082, 126605, 126734, 126476, 136089, 
---TOT---
138898, 139133, 138786, 138703, 137590, 26297, 32182, 90355, 80353, 2825, 104993, 105702,
---SoO---
148897, 146046, 148906, 146184, 146218
}

SuperMeta = { 137590, 26297, 16886, 2825, 32182, 80353, 90355 }
---Trinket Buff Check---
Procs = 0 

for i=1, #TreeProcs do
   if UnitBuffID(&amp;quot;player&amp;quot;, TreeProcs[i]) then Procs = Procs + 1 
   end
end

MetaProcs = 0 

for i=1, #SuperMeta do
   if UnitBuffID(&amp;quot;player&amp;quot;, SuperMeta[i]) then MetaProcs = MetaProcs + 1 
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---init---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then


	PQR_RotationStarted = false

		 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
	



	if not SoapboxBalanceFirstStart then
		local Aptheosis = CreateFrame(&amp;quot;Frame&amp;quot;)
		Aptheosis:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
		Aptheosis:SetScript(&amp;quot;OnEvent&amp;quot;, AptheosisFrame_OnEvent)
		Aptheosis:Show()
		
		Trinket = 0
		
		if not DoTs then DoTs = {} end
		
		SoapboxBalanceFirstStart = true
	end
	
	SolarGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
	CDGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
	OpenGlobal = &amp;quot; |cffb73737OFF   &amp;quot;

  if Nova_Cooldowns == 1 then
  CDGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) end
  if Nova_SolarHold == 1 then
  SolarGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot; end
  if Nova_Open == 1 then
  OpenGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot; end
  if (Nova_AOE == nil or Nova_AOE == 0) and (Nova_Cleave == nil or Nova_Cleave == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_Cleave == 1 then	
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;) end
  if Nova_Move == 1 then	
  SetCVar(&amp;quot;Nova_Move&amp;quot;, 0) 
  PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Solar Phase: &amp;quot;..SolarGlobal..&amp;quot;|cffFFBE69Opener: &amp;quot;..OpenGlobal)
  end
  
end



PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

local itemCheck = itemCheck
local Vision = Vision
if itemCheck(Vision) == 1 then UVLS = true else UVLS = false end


if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and #DoTs &amp;gt; 0 then
	DoTs = {}
end


if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and NoWrath ~= nil then
NoWrath = nil
end


	if EclipseDirection == &amp;quot;moon&amp;quot; and NoWrath == true then
	NoWrath = false
	end
	
	if EclipseDirection == &amp;quot;sun&amp;quot; and NoWrath == false then
	NoWrath = true
	end
	

if EclipsePower &amp;lt; 100 and NewSun == true and SolarStar == false then
SolarStar = true
end
				


if IsMounted() or GetShapeshiftForm(&amp;quot;player&amp;quot;) == 6 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 145138) then return false end

if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
if Celestial == true then return false end

local SUN = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))
if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt;= 80 then 
	return false
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48505) then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -75 then
		return false
		end
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48517) then
	if not Moon then 
	return false 
	end
end
if SUN then
	if EclpiseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;gt;= 60 then
	return false
	end	
end
end
if TargetValidation(&amp;quot;target&amp;quot;, 8921) then
if not SUN then
return true
elseif SUN - GetTime() &amp;lt; 2 then
return true
end
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rejuvenation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Heal ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 3 then return false end

local v = PQI_SoapboxDefensiveSettings_HeartHealing_value or 50
local v2 = PQI_SoapboxDefensiveSettings_HeartHealingMoving_value or 75




---Don&amp;apos;t use without Heart of the Wild activated---
if not UnitBuffID(&amp;quot;player&amp;quot;, 108288) then return false end

if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
else return false end

---When we&amp;apos;re in a party/raid with more than 1 member...---
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
		-- Stop out of combat---
		---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
		if UnitIsDeadOrGhost(member) then return false end
		if PQR_SpellAvailable(774)
		and IsSpellInRange(GetSpellInfo(774),member) == 1 then
			if not IsLineOfSight(member, 3) then return false end
			---Tanks and Healers take priority---
			if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
				---Make sure they dont have our buffed Rejuvenation---
				if not UnitBuffID(member,774,&amp;quot;PLAYER&amp;quot;) then	
					---Is their health lower than the value we set? ---
					if PQI_SoapboxDefensiveSettings_HeartHealing_enable then
						if Memberhealth &amp;lt; v then
						CastSpellByName(GetSpellInfo(774),member) return true
						end
					end
					if PQI_SoapboxDefensiveSettings_HeartHealingMoving_enable then
						if Memberhealth &amp;lt; v2 then
						CastSpellByName(GetSpellInfo(774),member) return true
						end
					end
				end
			---and now DPS---
			elseif not UnitBuffID(member,774,&amp;quot;PLAYER&amp;quot;) then	
			---Is their health lower than the value we set? ---
				if PQI_SoapboxDefensiveSettings_HeartHealing_enable then
					if Memberhealth &amp;lt; v then
					CastSpellByName(GetSpellInfo(774),member) return true
					end
				end
				if PQI_SoapboxDefensiveSettings_HeartHealingMoving_enable then
					if Memberhealth &amp;lt; v2 then
					CastSpellByName(GetSpellInfo(774),member) return true
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shooting Stars</Name><Default>false</Default><SpellID>78674</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
if IsPlayerSpell(108373) then
if IsPlayerSpell(106731) then
	if PQR_SpellAvailable(102560) then
		if IncarnationReady == true then
		return false
		end
	end
end
end
if Nova_AOE == 1 then return false end
if ShootingStars == false then return false end

---if Nova_SolarHold == 1 and EclipseDirection == &amp;quot;sun&amp;quot; and (EclipsePower &amp;gt;= 80 or (EclipsePower &amp;gt;= 40 and UnitBuffID(&amp;quot;player&amp;quot;, 93400))) then
---return false end 


if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 60 and EclipsePower &amp;lt; 100 and (CurrentCast == GetSpellInfo(2912) or CurrentCast == GetSpellInfo(78674)) then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;,93400) then return false end
if PQR_SpellAvailable(112071) and Nova_Cooldowns == 1 then
	if EclipseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;lt; 0 and EclipsePower &amp;gt;= -20 then
		SpellStopCasting()
		end
	end
end

if PQR_SpellAvailable(102560) and Nova_Cooldowns == 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -75 then
		SpellStopCasting()
		end
	end
end


if EclipseDirection == &amp;quot;moon&amp;quot; then
	if SolarStar == true or Celest then
	return true
	elseif (EclipsePower &amp;lt;= 5 or (EclipsePower &amp;lt;= 20 and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(5176))) and not Celest then
	return true
	end
else
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incarnation</Name><Default>false</Default><SpellID>106731</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

---Dont use of cooldowns are disabled---
if Nova_Cooldowns ~= 1 or Nova_Move == 1 then return false end

---Dont use on trash if we only want to use on bosses---
if PQI_SoapboxOffensiveSettings_BossCooldowns_enable and not SpecialUnit() then return false end

if SolarSun == true or LunarMoon == true or (Nova_AOE == 1 and UnitBuffID(&amp;quot;player&amp;quot;,48517)) then
IncarnationReady = true
	if IsPlayerSpell(108373) then
		if not UnitBuffID(&amp;quot;player&amp;quot;, 145151) then
			if PQR_SpellAvailable(132158) and not UnitBuffID(&amp;quot;player&amp;quot;, 132158) then
			CastSpellByName(GetSpellInfo(132158))
			elseif UnitBuffID(&amp;quot;player&amp;quot;, 132158) then
			CastSpellByName(GetSpellInfo(5185))
			end
		elseif DoC and DoCtimer - GetTime() &amp;gt; 27 then
		return true
		end
	elseif IsPlayerSpell(124974) then
		if PQR_SpellAvailable(124974) then
		CastSpellByName(GetSpellInfo(124974))
		NatureOnce = true
		end
		return true
	else
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Status Frame---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
if not SoapboxFrame then

SoapboxFrame = true
_Chat = PQR_WriteToChat

--Notify Frame
PQ_NotifyFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
PQ_NotifyFrame:ClearAllPoints()
PQ_NotifyFrame:SetHeight(12)
PQ_NotifyFrame:SetWidth(600)
PQ_NotifyFrame:Show()
PQ_NotifyFrame.text = PQ_NotifyFrame:CreateFontString(nil, &amp;quot;OVERLAY&amp;quot;, &amp;quot;MovieSubtitleFont&amp;quot;)
PQ_NotifyFrame.text:SetAllPoints()
PQ_NotifyFrame:SetPoint(&amp;quot;CENTER&amp;quot;, -620, -150)
PQ_NotifyFrame:SetScale(.75)
PQ_NotifyFrame:SetScript(&amp;quot;OnUpdate&amp;quot;, PQ_NotifyFrame_OnUpdate)
PQ_NotifyFrame:EnableMouse(true)
PQ_NotifyFrame:SetMovable(true)
PQ_NotifyFrame:RegisterForDrag(&amp;quot;LeftButton&amp;quot;)
PQ_NotifyFrame:SetScript(&amp;quot;OnDragStart&amp;quot;, PQ_NotifyFrame.StartMoving)
PQ_NotifyFrame:SetScript(&amp;quot;OnDragStop&amp;quot;, PQ_NotifyFrame.StopMovingOrSizing)
PQ_NotifyFrame.text:SetText(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
function PQ_Notify(message)
 	if PQ_NotifyFrame:IsShown() then
 		PQ_NotifyFrame.text:SetText(message) 	
 	end
end

SlashCmdList[&amp;apos;DEBUG&amp;apos;] = function()
if PQ_NotifyFrame:IsShown() then
		PQ_NotifyFrame:Hide()
	else
		PQ_NotifyFrame:Show()
	end
end
SLASH_DEBUG1 = &amp;quot;/pqd&amp;quot;

_Chat(&amp;quot;Setup Done!&amp;quot;)
end

	if Bal == false or Bal == nil then
	PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
	Bal = true
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_BALANCE_DEF then return false end
if SOAPBOX_BALANCE_OFF then return false end

-- PQInterface Settings
	local Defensive = {
		name	= &amp;quot;Defensive Settings&amp;quot;,
		author	= &amp;quot;Soapbox&amp;quot;,
		abilities = {
			{ 	name	= &amp;quot;Rebirth&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to select how you want Rebirth usage to be.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select Rebirth logic. Use on Raid or Party Members, or only on Tanks/Healers (Requires Roles to be set!)&amp;quot;,
					values	= {
						&amp;quot;Raid/Party&amp;quot;,
						&amp;quot;Tank/Healer&amp;quot;,
					},
					width	= 100,
				},
			},
			{ 	name	= &amp;quot;Healthstone&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control automatic usage of healthstone at set health %.&amp;quot;,
				enable	= true,
				widget	= {	type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Healthstone to be used at.&amp;quot;,
					value	= 50,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Heart Healing&amp;quot;,
				tooltip = &amp;quot;&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % of Raid Members (Tanks and Healers have priority over DPS excludng yourself) you want to use Heart of the Wild Buffed Rejuvs on.&amp;quot;,
					value	= 35,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Heart Healing Moving&amp;quot;,
				tooltip = &amp;quot;&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % of Raid Members (Tanks and Healers have priority over DPS excludng yourself) you want to use Heart of the Wild Buffed Rejuvs on while moving.&amp;quot;,
					value	= 75,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Symbiosis&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control when and how the profile casts Symbiosis on you and your pet.&amp;quot;,
				enable	= true,
				widget	= { type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Symbiosis to be cast at.&amp;quot;,
					value	= 25,
					step	= 5,
				},
			},
			{ 	name	= &amp;quot;Raid Buffing&amp;quot;,
				tooltip = &amp;quot;When enabled; Will automatically try to buff your raid or party.&amp;quot;,
				enable	= true,
			},
		},
	}
	local Offensive = {
		name	= &amp;quot;Offensive Settings&amp;quot;,
		author	= &amp;quot;Soapbox&amp;quot;,
		abilities = {
			{ 	name	= &amp;quot;Combat Pause&amp;quot;,
			    tooltip = &amp;quot;Toggle the profile to pause automatically when not engaged in combat.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
			{ 	name	= &amp;quot;Auto Target Next Enemy&amp;quot;,
					enable	= true,
				},
			{ 	name	= &amp;quot;Legendary Meta&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Force Solar AOE&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Auto Potion&amp;quot;,
			    tooltip = &amp;quot;Toggle the use of Potion of the Jade Serpent under the effects of Bloodlust/Heroism/Time Warp/Ancient Hysteria.&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Auto Racials&amp;quot;,
			    tooltip = &amp;quot;Toggle the automatic usage of Racials.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Frag Belt&amp;quot;,
			    tooltip = &amp;quot;Toggle the automatic usage of Frag Belt during Metamorphosis (Mouseover).&amp;quot;,
				enable	= true,
			},		
			{ 	name	= &amp;quot;Synapse Springs&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Boss Cooldowns&amp;quot;,
			    tooltip = &amp;quot;Toggle the use of cooldowns on boss targets only.&amp;quot;,
				enable	= true,
				newSection  = true,
			},
			{ 	name	= &amp;quot;Focus Dotting&amp;quot;,
			    tooltip = &amp;quot;Toggle Automatic dotting of the focus target.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Boss Dotting&amp;quot;,
			    tooltip = &amp;quot;Toggle the Automatic dotting of all feasible boss targets you&amp;apos;re currently engaged with.&amp;quot;,
				enable	= true,
			},
			{ 	name	= &amp;quot;Mouseover Dotting&amp;quot;,
			    tooltip = &amp;quot;Toggle Automatic dotting of the mouseover target.&amp;quot;,
				enable	= true,
			},
		},
	
	}
	SOAPBOX_BALANCE_DEF = PQI:AddRotation(Defensive)
	SOAPBOX_BALANCE_OFF = PQI:AddRotation(Offensive)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Cleave&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;SolarHold&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;, 					Var2 = 1		},	
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Move&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Storm&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Tranq&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Solar&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Heal&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Knockback&amp;quot;,				Var2 = 1		}
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
		SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
		CDGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
		else			
		SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
		CDGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
		end
	end
		
	SLASH_HOLD1 = &amp;quot;/hold&amp;quot;
	function SlashCmdList.HOLD(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_SolarHold&amp;quot;) then
		SetCVar(&amp;quot;Nova_SolarHold&amp;quot;, 1)
		SolarGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
		else
		SetCVar(&amp;quot;Nova_SolarHold&amp;quot;, 0)
		SolarGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
		end
	end	
	SLASH_CLEAVE1 = &amp;quot;/cleave&amp;quot;
	function SlashCmdList.CLEAVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cleave&amp;quot;) then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;)
		xrn:message(&amp;quot;\124cFFFFFFFFCleave Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 1)
		SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		else
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
		xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		end
	end		
	SLASH_OPEN1 = &amp;quot;/opener&amp;quot;
	function SlashCmdList.OPEN(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Open&amp;quot;) then
		SetCVar(&amp;quot;Nova_Open&amp;quot;, 1)
		OpenGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
		else
		SetCVar(&amp;quot;Nova_Open&amp;quot;, 0)
		OpenGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Hold Pre-Solar: &amp;quot;..SolarGlobal)
		end
	end		
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFArea of Effect Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		end
	end
	SLASH_PAUSE1 = &amp;quot;/pause&amp;quot;
	function SlashCmdList.PAUSE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFRotation Paused.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFRotation Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
		end
	end
	SLASH_MOVE1 = &amp;quot;/move&amp;quot;
	function SlashCmdList.MOVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Move&amp;quot;) then
			if not IsPlayerSpell(108288) or (not PQR_SpellAvailable(108288) and not UnitBuffID(&amp;quot;player&amp;quot;, 108291)) then return false end
			xrn:message(&amp;quot;\124cFFFFFFFFMoonCatting Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Move&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFMoonCatting Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Move&amp;quot;, 0)
		end
	end
	SLASH_STORM1 = &amp;quot;/storm&amp;quot;
	function SlashCmdList.STORM(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Storm&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFAOE Storm Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Storm&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFAOE Storm Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Storm&amp;quot;, 0)
		end
	end
	SLASH_TRANQ1 = &amp;quot;/tranq&amp;quot;
	function SlashCmdList.TRANQ(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Tranq&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFTranquility - Queued&amp;quot;)
			SetCVar(&amp;quot;Nova_Tranq&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFTranquility - Canceled&amp;quot;)
			SetCVar(&amp;quot;Nova_Tranq&amp;quot;, 0)
		end
	end
	SLASH_SOLAR1 = &amp;quot;/solar&amp;quot;
	function SlashCmdList.SOLAR(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Solar&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFSolar Beam - Queued&amp;quot;)
			SetCVar(&amp;quot;Nova_Solar&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFSolar Beam - Canceled&amp;quot;)
			SetCVar(&amp;quot;Nova_Solar&amp;quot;, 0)
		end
	end
		SLASH_HEAL1 = &amp;quot;/heal&amp;quot;
	function SlashCmdList.HEAL(msg, editbox)
		if not IsPlayerSpell(108288) then return false end
		if not GetCVarBool(&amp;quot;Nova_Heal&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFHoTW Healing - Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Heal&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFHoTW Healing - Canceled&amp;quot;)
			SetCVar(&amp;quot;Nova_Heal&amp;quot;, 0)
		end
	end
			SLASH_KNOCKBACK1 = &amp;quot;/knockback&amp;quot;
	function SlashCmdList.KNOCKBACK(msg, editbox)
		if not IsPlayerSpell(132469) then return false end
		if not GetCVarBool(&amp;quot;Nova_Knockback&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFKnockback - Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Knockback&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFKnockback - Canceled&amp;quot;)
			SetCVar(&amp;quot;Nova_Knockback&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Force of Nature</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if not IsPlayerSpell(106737) then return false end
if not PQR_SpellAvailable(106737) then return false end


if Nova_Cooldowns ~= 1 then return false end




if Nova_Cooldowns == 1 then
	if UVLS then
		if UnitBuffID(&amp;quot;player&amp;quot;, 138963) and (not PQR_SpellAvailable(112071) or UnitBuffID(&amp;quot;player&amp;quot;, 112071)) then
		CastSpellByName(GetSpellInfo(106737),&amp;quot;target&amp;quot;)
		return true
		end
	elseif PQI_SoapboxOffensiveSettings_LegendaryMeta_enable then
		if MetaProcs &amp;gt; 1 then
		CastSpellByName(GetSpellInfo(106737),&amp;quot;target&amp;quot;)
		return true
		end
	elseif Procs &amp;gt; 2 then
	CastSpellByName(GetSpellInfo(106737),&amp;quot;target&amp;quot;)
	return true
	end
end

if Nova_Open ~= 1 then
if GetSpellCharges(106737) &amp;gt; 2 then
CastSpellByName(GetSpellInfo(106737),&amp;quot;target&amp;quot;)
PQR_DelayRotation(0.5)
return true
end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul of the Forest</Name><Default>false</Default><SpellID>127663</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if IsPlayerSpell(108373) and not UnitBuffID(&amp;quot;player&amp;quot;,145151) then return false end

if ShootingStars == false then return false end

if not UnitBuffID(&amp;quot;player&amp;quot;, 145138) then return false end

if UnitBuffID(&amp;quot;player&amp;quot;,112071) or UnitBuffID(&amp;quot;player&amp;quot;,102560) then return false end
if EclipseDirection == &amp;quot;sun&amp;quot; and Nova_SolarHold == 1 then return false end

if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;lt;= 80 and EarlyMoon == false and LunarMoon == false then SpellStopCasting() return true end
if EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;gt;= -80 and EarlySun == false and SolarSun == false then SpellStopCasting() return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Eclipsefire -UVLS-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local SoapboxPower = SoapboxPower
local TargetValidation = TargetValidation
local MOON = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))
local MOON2 = Round(PowerRound(18/(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))))*(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))),2)
local SUN = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))
local SUN2 = Round(PowerRound(18/(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))))*(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))),2)

if EarlyMoon == true then
if PQR_SpellAvailable(8921) then
if TargetValidation(&amp;quot;target&amp;quot;,8921) then
	local id = UnitGUID(&amp;quot;target&amp;quot;)
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) then	
		if MOON then
			for i=1,#DoTs do
				if DoTs[i].guid == id and DoTs[i].spellID == 8921 then
					---if Nova_Cleave == 1 then CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == false then CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == true then	
						if EarlyMoon == true or EarlySun == true then
							if (MOON - GetTime() &amp;lt;= MOON2 / 2) 
							or (MOON - GetTime() &amp;lt; 10 and Hasted()) then
							CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true
							end
						end
					end
				end
			end
		else CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true end
	end	
end
end


elseif EarlySun == true then
if PQR_SpellAvailable(93402) then
if TargetValidation(&amp;quot;target&amp;quot;,8921) then
	local id = UnitGUID(&amp;quot;target&amp;quot;)
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) then	
		if SUN then
			for i=1,#DoTs do
				if DoTs[i].guid == id and DoTs[i].spellID == 93402 then
					---if Nova_Cleave == 1 then CastSpellByName(GetSpellInfo(893402),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == false then CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == true then
						if EarlyMoon == true or EarlySun == true then
							if (SUN - GetTime() &amp;lt;= SUN2 / 2) 
							or (SUN - GetTime() &amp;lt; 10 and Hasted()) then
							CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;) return true
							end
						end
					end
				end
			end
		else CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;) return true end
	end	
end
end
elseif EarlyMoon == false then
if PQR_SpellAvailable(8921) then
if TargetValidation(&amp;quot;target&amp;quot;,8921) then
	local id = UnitGUID(&amp;quot;target&amp;quot;)
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) then	
		if MOON then
			for i=1,#DoTs do
				if DoTs[i].guid == id and DoTs[i].spellID == 8921 then
					---if Nova_Cleave == 1 then CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == false then CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == true then	
						if EarlyMoon == true or EarlySun == true then
							if (MOON - GetTime() &amp;lt;= MOON2 / 2) 
							or (MOON - GetTime() &amp;lt; 10 and Hasted()) then
							CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true
							end
						end
					end
				end
			end
		else CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;) return true end
	end	
end
end
elseif EarlySun == false then
if PQR_SpellAvailable(93402) then
if TargetValidation(&amp;quot;target&amp;quot;,8921) then
	local id = UnitGUID(&amp;quot;target&amp;quot;)
	if UnitBuffID(&amp;quot;player&amp;quot;,138963) then	
		if SUN then
			for i=1,#DoTs do
				if DoTs[i].guid == id and DoTs[i].spellID == 93402 then
					---if Nova_Cleave == 1 then CastSpellByName(GetSpellInfo(893402),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == false then CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;) return true end
					if DoTs[i].crit == true then
						if EarlyMoon == true or EarlySun == true then
							if (SUN - GetTime() &amp;lt;= SUN2 / 2) 
							or (SUN - GetTime() &amp;lt; 10 and Hasted()) then
							CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;) return true
							end
						end
					end
				end
			end
		else CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;) return true end
	end	
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shooting Stars Logic</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if ShootingStars == true then
if EclipseDirection == &amp;quot;moon&amp;quot; then
	if EclipsePower &amp;lt;= -60 then
		if EarlyMoon == false then
			if CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(78674) then
			ShootingStars = false
			end
			if EclipsePower &amp;lt; -60 then
			ShootingStars = false
			end
		end
	end
end

if EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 80 and EarlySun == false then
	if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(2912) then
	ShootingStars = false
	end
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Eclipse Fire -OLD-</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if cTime &amp;lt; 1 then return false end

---if SolarMoon == true then
---SpellStopCasting()
---CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
---return true
---elseif LunarSun == true or IncarnationSun == true then
---SpellStopCasting()
---CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
---return true
if SolarSun == true then
SpellStopCasting()
CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
return true
elseif Solar == true and EclipsePower &amp;lt; 40 then
	if Sun then
		if Suntimer - GetTime() &amp;lt; 8 then
		CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
		return true
		end
	end
elseif LunarMoon == true or IncarnationMoon == true then
SpellStopCasting()
CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
return true
elseif Lunar == true and EclipsePower &amp;gt; -40 then
	if Moon then
		if Moontimer - GetTime() &amp;lt; 8 then
		CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stopcast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)

if Nova_SolarHold == 1 then return false end


if EclipsePower == -100 then
	if NoWrath == true then
		if CurrentCast == GetSpellInfo(5176) then
		SpellStopCasting()
		end
	end
end

if EclipsePower == 100 then
	if NoWrath == false and not Celest then
		if CurrentCast == GetSpellInfo(2912) then
		SpellStopCasting()
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Combat Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---if not UnitExists(&amp;quot;target&amp;quot;) then return true end


if (not UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;boss1&amp;quot;))
	or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonkin Form</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if UnitBuffID(&amp;quot;player&amp;quot;, 1850) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 3 then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 106922) and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 then return false end

if Nova_Move ~= 1 then
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then
	CastShapeshiftForm(5)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[HOTW] Rake</Name><Default>false</Default><SpellID>1822</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 3 then return false end

if HoTW then
	if HoTWtimer - GetTime() &amp;gt; 6 then
		if CP &amp;lt; 5 then
			if not UnitDebuffID(&amp;quot;target&amp;quot;,1822,&amp;quot;PLAYER&amp;quot;) then
			return true
			end
		end
	elseif not UnitDebuffID(&amp;quot;target&amp;quot;,1822,&amp;quot;PLAYER&amp;quot;) or (CP &amp;lt; 5 and HoTWtimer - GetTime() &amp;lt; 4) then
	return true
	end
elseif CP &amp;lt; 5 then
	if Rake then
		if Raketimer - GetTime() &amp;lt; 3 then
		return true
		end
	else 
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[HOTW] Mangle</Name><Default>false</Default><SpellID>33917</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 3 then return false end

if HoTW then
	if HoTWtimer - GetTime() &amp;gt; 6 then
		if CP &amp;lt; 5 then
		return true
		end
	elseif CP &amp;lt; 4 then
	return true
	end
elseif CP &amp;lt; 5 then
	if Rake then
		if CP &amp;gt; 3 then
			if Raketimer - GetTime() &amp;gt; 6 then
			return true
			end
		else
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[HOTW] Cat Form</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not UnitBuffID(&amp;quot;player&amp;quot;,108291) or Nova_Move ~= 1 then 
	if not UnitBuffID(&amp;quot;player&amp;quot;, 1850) then
		if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 3 then 
		CastShapeshiftForm(5)
		end
	end
end

if Nova_Move ~= 1 then return false end
if HoTW then
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 3 then
		if Energy &amp;gt; 90 or HoTWtimer - GetTime() &amp;lt; 7 then
			if IsSpellInRange(GetSpellInfo(1822), &amp;quot;target&amp;quot;) == 1 then 
			CastShapeshiftForm(3)
			PQR_DelayRotation(0.3)
			return true
			end
		end
	end
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then
		if (Energy &amp;lt; 50 and CP == 5) and HoTWtimer - GetTime() &amp;gt; 10 then
		CastShapeshiftForm(5)
		PQR_DelayRotation(0.3)
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[HOTW] Ferocious Bite</Name><Default>false</Default><SpellID>22568</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 3 then return false end

if HoTW then
	if (HoTWtimer - GetTime() &amp;gt; 11 and Energy &amp;gt; 50) or (HoTWtimer - GetTime() &amp;gt; 3 and HoTWtimer - GetTime() &amp;lt; 12 and Energy &amp;gt; 90) then
		if CP &amp;gt; 4 then
		return true
		end
	elseif HoTWtimer - GetTime() &amp;lt; 2 then
	return true 
	end
elseif CP &amp;gt; 4 and Energy &amp;gt; 50 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Movement</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if PQR_IsMoving(0.3) or Nova_Move == 1 then 

if UnitBuffID(&amp;quot;player&amp;quot;, 145138) then
	if UnitBuffID(&amp;quot;player&amp;quot;, 48517) and Nova_AOE == 1 and EclipsePower &amp;lt; 40 then return false end
	if not UnitBuffID(&amp;quot;player&amp;quot;, 48517) and not UnitBuffID(&amp;quot;player&amp;quot;,48518) and not Celest then
	CastSpellByName(GetSpellInfo(127663))
	return true
	end
end

if MindControlled(&amp;quot;target&amp;quot;) then return false end

if Nova_Move == 1 then
if Energy &amp;gt; 75 or HoTWtimer - GetTime() &amp;lt; 10 then
	if HoTWtimer - GetTime() &amp;lt; 10 then	
		if Sun then
			if Suntimer - GetTime() &amp;lt; 10 then
				if TargetValidation(&amp;quot;target&amp;quot;,93402) then
   				 CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
    			 return true
   				 end
   			end
   		end
   	elseif Energy &amp;gt; 75 then
   		if Sun then
   			if Suntimer - GetTime() &amp;lt; 9 then
   				if TargetValidation(&amp;quot;target&amp;quot;,93402) then
   				 CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
   				 return true
   				 end
   			end
   		end
   	end
end

if Energy &amp;gt; 75 or HoTWtimer - GetTime() &amp;lt; 10 then
	if HoTWtimer - GetTime() &amp;lt; 10 then	
		if Moon then
			if Moontimer - GetTime() &amp;lt; 10 then
				if TargetValidation(&amp;quot;target&amp;quot;,8921) then
   				 CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
    			 return true
   				 end
   			end
   		end
   	elseif Energy &amp;gt; 75 then
   		if Moon then
   			if Moontimer - GetTime() &amp;lt; 9 then
   				if TargetValidation(&amp;quot;target&amp;quot;,8921) then
   				 CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
   				 return true
   				 end
   			end
   		end
	end
end
end

if TargetValidation(&amp;quot;target&amp;quot;, 78674) then
	if UnitBuffID(&amp;quot;player&amp;quot;,93400) then
    	if MoTW then
        	if MoTWtimer - GetTime() &amp;gt; 20 then	
        		if UnitBuffID(&amp;quot;player&amp;quot;, 48517) then
        			if EclipsePower &amp;gt; 20 then
        			CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
        			return true
        			end
        		elseif UnitBuffID(&amp;quot;player&amp;quot;,48518) then
        			if EclipsePower &amp;lt; - 20 then
        			CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
        			return true
        			end
        		else
        		CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
        		return true
        		end
        	else
        	CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
        	return true
        	end
        else
        CastSpellByName(GetSpellInfo(78674),&amp;quot;target&amp;quot;)
        return true
        end
    end
end

if not Sun then
	if TargetValidation(&amp;quot;target&amp;quot;,93402) then
    CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
    return true
    end
end

if not Moon then
	if TargetValidation(&amp;quot;target&amp;quot;,8921) then
    CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
    return true
    end
end

if EclipseDirection == &amp;quot;sun&amp;quot; then
        if not UnitBuffID(&amp;quot;player&amp;quot;,48518) then
                if TargetValidation(&amp;quot;target&amp;quot;,93402) then
                CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
                return true
                end
        elseif TargetValidation(&amp;quot;target&amp;quot;,8921) then
        CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
        return true
        end
elseif not UnitBuffID(&amp;quot;player&amp;quot;, 48517) then
        if TargetValidation(&amp;quot;target&amp;quot;,8921) then
        CastSpellByName(GetSpellInfo(8921),&amp;quot;target&amp;quot;)
        return true
        end
elseif TargetValidation(&amp;quot;target&amp;quot;,93402) then
CastSpellByName(GetSpellInfo(93402),&amp;quot;target&amp;quot;)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[HOTW] Heart</Name><Default>false</Default><SpellID>108288</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Nova_Move == 1 or Nova_Heart == 1 then

return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dream of Cenarius</Name><Default>false</Default><SpellID>5185</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
if not IsPlayerSpell(108373) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 3 then return false end
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 132158) and not PQR_SpellAvailable(132158) then return false end
if Celest then return false end
if EarlySun == true or EarlyMoon == true then return false end
if UnitBuffID(&amp;quot;player&amp;quot;,145151) then return false end

if (EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= 0)
or (EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 0)   
or (not UnitBuffID(&amp;quot;player&amp;quot;, 48517) and not UnitBuffID(&amp;quot;player&amp;quot;, 48518) and UnitBuffID(&amp;quot;player&amp;quot;, 145138)) then

if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
end

		



	---When we&amp;apos;re in a party/raid with more than 1 member...---
	if GetNumGroupMembers() &amp;gt; 0 then
		for i=1,GetNumGroupMembers() do
			local member = group..i
			local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
			-- Stop out of combat---
			---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
			if UnitIsDeadOrGhost(member) then return false end
			if IsSpellInRange(GetSpellInfo(5185),member) == 1 then
				if not IsLineOfSight(member, 3) then return false end
				---Tanks and Healers take priority---
				if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
					if Memberhealth &amp;lt; 75 then
						if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
						SpellStopCasting()
						end
					PQR_CustomTarget = member
					return true
					end
				elseif Playerhealth &amp;lt; 75 then
					if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
					SpellStopCasting()
					end
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				return true
				elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
					if Memberhealth &amp;lt; 75 then
						if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
						SpellStopCasting()
						end
					PQR_CustomTarget = member
					return true
					end
				elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
					if Memberhealth &amp;lt; 75 then
						if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
						SpellStopCasting()
						end
					PQR_CustomTarget = member
					return true
					end
				elseif CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
				SpellStopCasting()
				end
				if PQR_SpellAvailable(5185) then
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				return true
				end
			end
		end
	elseif GetNumGroupMembers() &amp;lt; 1 then
		if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
		SpellStopCasting()
		end
	PQR_CustomTarget = &amp;quot;player&amp;quot;
	return true
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rebirth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Soulstone Settings
if not PQI_SoapboxDefensiveSettings_Rebirth_enable then return false end
local v=PQI_SoapboxDefensiveSettings_Rebirth_value or 2

-- Don&amp;apos;t try to cast if we&amp;apos;re moving.
if PQR_IsMoving(0.3) then return false end

-- Stop accessing if we&amp;apos;re casting Soulstone already.
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(20484) then return false end


-- Battle Res.
if IsInRaid() then group = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end

-- When we&amp;apos;re in a party/raid with more than 1 member...
if GetNumGroupMembers() &amp;gt; 0 then
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Stop out of combat
		if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

		if PQR_SpellAvailable(20484)
			and UnitIsDeadOrGhost(member)
			and IsSpellInRange(GetSpellInfo(20484),member) == 1 then
				if not IsLineOfSight(member, 3) then return false end
				-- Soulstone: Raid
				if v == 1 then CastSpellByName(GetSpellInfo(20484),member) return true end
				
				-- Soulstone: Tanks &amp; Healers
				if v == 2 then
					if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
						CastSpellByName(GetSpellInfo(20484),member) return true
					end
				end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mark of the Wild</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,104934)
or UnitBuffID(&amp;quot;player&amp;quot;,104269) then
return false
end

if IsPlayerSpell(1126) then 	
	if not AuraInfo(1,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(1126),&amp;quot;player&amp;quot;)
	return true
	end
end





if PQI_SoapboxDefensiveSettings_RaidBuffing_enable then
	-- Group setting
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Stats Multiplier
		if not AuraInfo(1,member) and IsSpellInRange(GetSpellInfo(1126),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
			CastSpellByName(GetSpellInfo(1126),member)
			return true
		end
		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Symbiosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---if IsPlayerSpell(110621) then
	if not PQR_SpellAvailable(110621) then return false end
		if Nova_Cooldowns ~= 1 then return false end
		CastSpellByName(GetSpellInfo(110621))</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire-Mouseover-</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_MouseoverDotting_enable then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Nova_Storm == 1 then return false end
if Celestial == true then return false end

if Nova_Cleave == 1 or Nova_AOE == 1 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 48517) then
	return false
	end
end

local MOON = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))
local SUN = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))
if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt;= 80 then 
	return false
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48505) then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -75 then
		return false
		end
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48517) and Nova_Cleave ~= 1 then
	if not Moon then 
	return false 
	end
end
if SUN then
	if EclpiseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;gt;= 60 then
	return false
	end	
end
end

 if TargetValidation(&amp;quot;mouseover&amp;quot;,8921) then
	if not SUN then
	return true
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire-Mouseover-</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_MouseoverDotting_enable then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Celestial == true then return false end
if Nova_Storm == 1 then return false end
local MOON = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))
local SUN = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))

if Nova_Cleave == 1 or Nova_AOE == 1 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 48518) and not Celest then
	return false
	end
end

if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt; 80 then 
	return false
	end
end

if MOON then
	if EclpiseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -70 then
		return false
		end
	end
end
if UnitBuffID(&amp;quot;player&amp;quot;, 48518) and Nova_Cleave ~= 1 then
	if not SUN then 
	return false 
	end
end
 if TargetValidation(&amp;quot;mouseover&amp;quot;,8921) then
	if not MOON 
	or (Celest and MOON and MOON - GetTime() &amp;lt; 5) then
	return true
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Channeling---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(16914) 
or UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(106996)
or UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(740) 
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Storm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Nova_Storm ~= 1 then return false end

if IsPlayerSpell(16914) then
	if PQR_SpellAvailable(16914) then
		CastSpellByName(GetSpellInfo(16914),nil)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
	end
end

if IsPlayerSpell(106996) then
	if PQR_SpellAvailable(106996) then
		CastSpellByName(GetSpellInfo(106996),nil)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Click</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tranquility</Name><Default>false</Default><SpellID>740</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end


if Nova_Tranq ~= 1 then return false end

if IsPlayerSpell(108288) then
	if PQR_SpellAvailable(108288) then
	CastSpellByName(GetSpellInfo(108288))
	end
	if HoTW then
	return true
	end
else
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Quick Storm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Nova_Storm ~= 1 then return false end
if Nova_AOE == 1 then return false end
if IsPlayerSpell(16914) then
	if PQR_SpellAvailable(16914) then
		CastSpellByName(GetSpellInfo(16914),nil)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
	end
end

if IsPlayerSpell(106996) then
	if PQR_SpellAvailable(106996) then
		CastSpellByName(GetSpellInfo(106996),nil)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Click</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Solar Beam</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end
if Nova_Solar ~= 1 then return false end 
if IsPlayerSpell(102793) then
	if PQR_SpellAvailable(102793) then
		---if UnitExists(&amp;quot;mouseover&amp;quot;) and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) == 1 then
	CastSpellByName(GetSpellInfo(102793),nil)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
	---end
	end
end

if PQR_SpellAvailable(78675) then
	if (IsPlayerSpell(102793) and Ursols == true) or not IsPlayerSpell(102793) then
		if TargetValidation(&amp;quot;mouseover&amp;quot;, 78675) then
		CastSpellByName(GetSpellInfo(78675),&amp;quot;mouseover&amp;quot;)
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire - BOSS-</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_BossDotting_enable then return false end

local TargetValidation = TargetValidation
local MOON2 = Round(PowerRound(18/(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))))*(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))),2)

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Celestial == true then return false end

if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt; 80 then 
	return false
	end
end


	




for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	local Moon2,_,_,_,_,_,Moon2timer = UnitDebuffID(bossUnit,8921,&amp;quot;PLAYER&amp;quot;)
	local Sun2,_,_,_,_,_,Sun2timer = UnitDebuffID(bossUnit,93402,&amp;quot;PLAYER&amp;quot;)
	if Moon2 then
		if EclpiseDirection == &amp;quot;moon&amp;quot; then
			if EclipsePower &amp;lt;= -70 then
			return false
			end
		end
	end
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,8921) then
		local id = UnitGUID(bossUnit)
		
		if Moon2 and Moon2timer - GetTime() &amp;gt; 3 then
		return false
			---for i=1,#DoTs do
				---if DoTs[i].guid == id and DoTs[i].spellID == 8921 then
					---if DoTs[i].crit == false then
						---if SoapboxPower(8921) &amp;gt; DoTs[i].moonPower then
							---if MOON - GetTime() &amp;lt;= MOON2 / 2 then
							---PQR_CustomTarget = bossUnit
							---return true
							---end
						---end
						---if MOON - GetTime() &amp;lt;= DoTs[i].moon_tick_every then
						---PQR_CustomTarget = bossUnit
						---return true
						---end
				---	end
					---if DoTs[i].crit == true then
					---	if MOON - GetTime() &amp;lt;= DoTs[i].moon_tick_every then
					---	PQR_CustomTarget = bossUnit
					    ---return true
					---	end
					---end
			---	end
		---	end
		else PQR_CustomTarget = bossUnit
		return true end
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire - BOSS-</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_BossDotting_enable then return false end

local TargetValidation = TargetValidation
local SUN2 = Round(PowerRound(18/(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))))*(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))),2)

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Celestial == true then return false end

if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt;= 80 then 
	return false
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48505) then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -75 then
		return false
		end
	end
end




	



for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
		local Moon2,_,_,_,_,_,Moon2timer = UnitDebuffID(bossUnit,8921,&amp;quot;PLAYER&amp;quot;)
	local Sun2,_,_,_,_,_,Sun2timer = UnitDebuffID(bossUnit,93402,&amp;quot;PLAYER&amp;quot;)
	if Sun2 then
	if EclpiseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;gt;= 60 then
	return false
	end	
end
end
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,8921) then
		local id = UnitGUID(bossUnit)
		
		if Sun2 and Sun2timer - GetTime() &amp;gt; 3 then
		return false
			---for i=1,#DoTs do
				---if DoTs[i].guid == id and DoTs[i].spellID == 93402 then
					---if DoTs[i].crit == false then
						---if SoapboxPower(93402) &amp;gt; DoTs[i].sunPower then
							---if SUN - GetTime() &amp;lt;= SUN2 / 2 then
							---PQR_CustomTarget = bossUnit
							---return true
							---end
						---end
						---if SUN - GetTime() &amp;lt;= DoTs[i].sun_tick_every then
						---PQR_CustomTarget = bossUnit
						---return true
						---end
					---end
					---if DoTs[i].crit == true then
						---if SUN - GetTime() &amp;lt;= DoTs[i].sun_tick_every then
					---	PQR_CustomTarget = bossUnit
					   --- return true
					---	end
				---	end
			---	end
			---end
		else PQR_CustomTarget = bossUnit
		return true end
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxOffensiveSettings_AutoTargetNextEnemy_enable then return false end

if (UnitExists(&amp;quot;Target&amp;quot;) == nil 
or (UnitExists(&amp;quot;Target&amp;quot;) and UnitIsDead(&amp;quot;Target&amp;quot;)))
and UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Celestial - BOSS-</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_BossDotting_enable then return false end

local TargetValidation = TargetValidation
local SUN2 = Round(PowerRound(18/(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))))*(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100))),2)

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if not Celest then return false end


for i=1,4 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	local Moon2,_,_,_,_,_,Moon2timer = UnitDebuffID(bossUnit,8921,&amp;quot;PLAYER&amp;quot;)
	local Sun2,_,_,_,_,_,Sun2timer = UnitDebuffID(bossUnit,93402,&amp;quot;PLAYER&amp;quot;)
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
	
	if TargetValidation(bossUnit,8921) then
		local id = UnitGUID(bossUnit)
		
		if not Moon2 or not Sun2
		or (Moon2 and Moon2timer - GetTime() &amp;lt; 5) then
			---for i=1,#DoTs do
				---if DoTs[i].guid == id and DoTs[i].spellID == 93402 then
					---if DoTs[i].crit == false then
						---if SoapboxPower(93402) &amp;gt; DoTs[i].sunPower then
							---if SUN - GetTime() &amp;lt;= SUN2 / 2 then
							---PQR_CustomTarget = bossUnit
							---return true
							---end
						---end
						---if SUN - GetTime() &amp;lt;= DoTs[i].sun_tick_every then
						---PQR_CustomTarget = bossUnit
						---return true
						---end
					---end
					---if DoTs[i].crit == true then
						---if SUN - GetTime() &amp;lt;= DoTs[i].sun_tick_every then
					---	PQR_CustomTarget = bossUnit
					   --- return true
					---	end
				---	end
			---	end
			---end
		PQR_CustomTarget = bossUnit
		return true end
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sunfire-Mouseover Move-</Name><Default>false</Default><SpellID>93402</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_MouseoverDotting_enable then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Nova_Storm == 1 then return false end
if Celestial == true then return false end

if Nova_Cleave == 1 or Nova_AOE == 1 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 48517) then
	return false
	end
end
if PQR_IsMoving(0.3) or Nova_Move == 1 then 
local MOON = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))
local SUN = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))
if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt;= 80 then 
	return false
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48505) then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -75 then
		return false
		end
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 48517) and Nova_Cleave ~= 1 then
	if not Moon then 
	return false 
	end
end
if SUN then
	if EclpiseDirection == &amp;quot;sun&amp;quot; then
		if EclipsePower &amp;gt;= 60 then
	return false
	end	
end
end

 if TargetValidation(&amp;quot;mouseover&amp;quot;,8921) then
	if not SUN then
	return true
	end
end
end</Lua><RecastDelay>1000</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Moonfire-Mouseover Move-</Name><Default>false</Default><SpellID>8921</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

if not PQI_SoapboxOffensiveSettings_MouseoverDotting_enable then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 5 then return false end

if Celestial == true then return false end
if Nova_Storm == 1 then return false end
local MOON = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,8921,&amp;quot;PLAYER&amp;quot;))
local SUN = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,93402,&amp;quot;PLAYER&amp;quot;))
if Nova_Cleave == 1 or Nova_AOE == 1 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 48518) and not Celest then
	return false
	end
end
if PQR_IsMoving(0.3) or Nova_Move == 1 then 
if cTime &amp;lt; 1 then return false end
if Nova_SolarHold ~= 1 then
	if EclipseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt; -60 then
		return false
		end
	elseif EclipsePower &amp;gt; 80 then 
	return false
	end
end

if MOON then
	if EclpiseDirection == &amp;quot;moon&amp;quot; then
		if EclipsePower &amp;lt;= -70 then
		return false
		end
	end
end
if UnitBuffID(&amp;quot;player&amp;quot;, 48518) and Nova_Cleave ~= 1 then
	if not SUN then 
	return false 
	end
end
 if TargetValidation(&amp;quot;mouseover&amp;quot;,8921) then
	if not MOON then
	return true
	end
end
end</Lua><RecastDelay>1000</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Detonate</Name><Default>false</Default><SpellID>88751</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local Mushrooms = GetTotemInfo(1)


if UnitBuffID(&amp;quot;player&amp;quot;, 112071) then
	if Mushrooms then
	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_SoapboxDefensiveSettings_Healthstone_enable then return false end

local v=PQI_SoapboxDefensiveSettings_Healthstone_value

if GetItemCount(5512) &amp;gt; 0
	and Playerhealth &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and GetItemCooldown(5512) == 0
then UseItemByName(5512) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Typhoon</Name><Default>false</Default><SpellID>132469</SpellID><Actions></Actions><Lua>if Nova_Knockback ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Triage</Name><Default>false</Default><SpellID>5185</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
if not IsPlayerSpell(108373) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 3 then return false end
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 132158) and not PQR_SpellAvailable(132158) then return false end
if Celest then return false end
if EarlySun == true or EarlyMoon == true then return false end
if UnitBuffID(&amp;quot;player&amp;quot;,145151) then return false end

if (EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= 0)
or (EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 0)   
or (not UnitBuffID(&amp;quot;player&amp;quot;, 48517) and not UnitBuffID(&amp;quot;player&amp;quot;, 48518) and UnitBuffID(&amp;quot;player&amp;quot;, 145138)) then

if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
end

		



	---When we&amp;apos;re in a party/raid with more than 1 member...---
	if GetNumGroupMembers() &amp;gt; 0 then
		for i=1,GetNumGroupMembers() do
			local member = group..i
			local Memberhealth = 100 * UnitHealth(member) / UnitHealthMax(member)
			-- Stop out of combat---
			---if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
			if UnitIsDeadOrGhost(member) then return false end
			if IsSpellInRange(GetSpellInfo(5185),member) == 1 then
				if not IsLineOfSight(member, 3) then return false end
				---Tanks and Healers take priority---
				if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; then
					if Memberhealth &amp;lt; 75 then
						if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
						SpellStopCasting()
						end
					PQR_CustomTarget = member
					return true
					end
				elseif Playerhealth &amp;lt; 75 then
					if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
					SpellStopCasting()
					end
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				return true
				elseif UnitGroupRolesAssigned(member) == &amp;quot;DAMAGER&amp;quot; then
					if Memberhealth &amp;lt; 75 then
						if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
						SpellStopCasting()
						end
					PQR_CustomTarget = member
					return true
					end
				elseif UnitGroupRolesAssigned(member) == &amp;quot;NONE&amp;quot; then
					if Memberhealth &amp;lt; 75 then
						if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
						SpellStopCasting()
						end
					PQR_CustomTarget = member
					return true
					end
				elseif CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
				SpellStopCasting()
				end
				if PQR_SpellAvailable(5185) then
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				return true
				end
			end
		end
	elseif GetNumGroupMembers() &amp;lt; 1 then
		if CurrentCast == GetSpellInfo(78674) or CurrentCast == GetSpellInfo(5176) or CurrentCast == GetSpellInfo(2912) then
		SpellStopCasting()
		end
	PQR_CustomTarget = &amp;quot;player&amp;quot;
	return true
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nature&amp;apos;s Swiftness</Name><Default>false</Default><SpellID>132158</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end

local CurrentCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
if not IsPlayerSpell(108373) then return false end
if GetShapeshiftForm(&amp;quot;player&amp;quot;) == 3 then return false end
if Celest then return false end
if EarlySun == true or EarlyMoon == true then return false end
if UnitBuffID(&amp;quot;player&amp;quot;,145151) then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 132158) then return false end
if (EclipseDirection == &amp;quot;moon&amp;quot; and EclipsePower &amp;lt;= 0)
or (EclipseDirection == &amp;quot;sun&amp;quot; and EclipsePower &amp;gt;= 0)   
or (not UnitBuffID(&amp;quot;player&amp;quot;, 48517) and not UnitBuffID(&amp;quot;player&amp;quot;, 48518) and UnitBuffID(&amp;quot;player&amp;quot;, 145138)) then


		

if IsPlayerSpell(106731) then
	if ICD &amp;gt; 59 then
	return true
	end
else
return true
end
end</Lua><RecastDelay>60000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Boss Special---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		elseif npcID == 71529 then --Thok: Deafening
		---Stop Casting When Deafing goes off---
			local Deaf = GetSpellInfo(143343)
			if (bossCasting and bossCasting == Deaf) then
				if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;DRUID&amp;quot; then	
				if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then return false end
					if GetEclipseDirection() == &amp;quot;moon&amp;quot; then
						if UnitBuffID(&amp;quot;player&amp;quot;, 48517) then
						SpellStopCasting()
						CastSpellByName(GetSpellInfo(93402))
						return true
						else
						SpellStopCasting()
						CastSpellByName(GetSpellInfo(8921))
						return true
						end
					elseif UnitBuffID(&amp;quot;player&amp;quot;, 48518) then
					SpellStopCasting()
					CastSpellByName(GetSpellInfo(8921))
					return true
					else
					SpellStopCasting()
					CastSpellByName(GetSpellInfo(93402))
					return true
					end
				elseif UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
				return true
				end
			end	
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>No Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;Target&amp;quot;) == nil then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>a. Rake</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Targethealth&amp;lt;25 and Rip and Riptimer - GetTime() &amp;lt; 4 and Energy &amp;lt; 60 then return false end


if UnitBuffID(&amp;quot;player&amp;quot;,cf) and check(rk) and (srr &amp;gt; 1 or srg==false) and pow&amp;gt;=35 and cp&amp;lt;5 then 
	if (HaveBuff(p,{139121,139117,139120}) and rkr&amp;lt;9 and rrr &amp;lt;= 1.5) then
		cast(gsi(rk))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DRUID>