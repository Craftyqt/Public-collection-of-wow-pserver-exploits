<?xml version="1.0" encoding="utf-8" ?><HUNTER><Ability><Name>[TALENT] Dire Beast</Name><Default>false</Default><SpellID>120679</SpellID><Actions>/cast Lifeblood |/use 13 |/use 14</Actions><Lua>if Nova_Hold == 1 then return false end
if Beast then return false end

if GetSpecialization() == 3 then
	if PQR_SpellAvailable(53301) and (UnitBuffID(&amp;quot;player&amp;quot;, 56453) or Focus &amp;gt; 24) then return false end
end
return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[BM] Kill Command</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() ~= 1 then return false end
if GetSpellCD(34026) &amp;gt; 0.1 then return false end
if Nova_Hold == 1 then return false end
if Nova_AOE == 1 then return false end
---if NoKC == true then return false end
local CurrentCast = UnitCastingInfo(&amp;quot;target&amp;quot;)

if not KC() then return false end
if GetSpellCD(19574) &amp;lt; 0.1 
and (Burn == true or cTime &amp;lt; 10)
and Nova_Cooldowns == 1 then 
return false end

if UnitExists(&amp;quot;pet&amp;quot;) 
and not UnitIsDead(&amp;quot;pet&amp;quot;) then
	if Focus &amp;gt; 39 then
		if TargetValidation(&amp;quot;target&amp;quot;, 34026) then
		CastSpellByName(GetSpellInfo(34026))
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] Lynx Rush</Name><Default>false</Default><SpellID>120697</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end


	if  IsSpellInRange(GetSpellInfo(2649), &amp;quot;target&amp;quot;) == 1 
	  and not UnitDebuffID(&amp;quot;target&amp;quot;, 120699, &amp;quot;PLAYER&amp;quot;) then
		return true
	end</Lua><RecastDelay>4000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] Binding Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Binding ~= 1 then return false end

if not IsPlayerSpell(109248) then return false end


if PQR_SpellAvailable(109248) then 
  CastSpellByName(tostring(GetSpellInfo(109248)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Cobra Shot</Name><Default>false</Default><SpellID>56641</SpellID><Actions></Actions><Lua>local SpellCast = select(1,UnitCastingInfo(&amp;quot;player&amp;quot;))
if Nova_Hold == 1 then return true end

if GetSpecialization() == 1 then
Cobra = select(7,GetSpellInfo(56641))/1000+.01

if Cobra &amp;gt; KCCD and Focus &amp;gt;= 39 then return false end
	if KC() and Nova_AOE ~= 1 and UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 37 then
		return false
	end
	
	if SpellCast == GetSpellInfo(77767) and Nova_AOE ~= 1
	  and ((Focus &amp;gt; 24 and (GetSpellCD(34026) &amp;lt; 0.7 and KC1())) or Focus &amp;gt; 65) then
	  	StopCobra = true
	end
	
	if StopCobra
	  and ((GetSpellCD(34026) &amp;lt; 1.4 and Focus &amp;lt; 35 and KC1())
	  or (GetSpellCD(34026) &amp;gt; 1.3 and Focus &amp;lt; 60 and KC1())) then
	  	StopCobra = false
	end
	
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	  and not StopCobra
	  and Focus &amp;lt; 79 
	  and ((KC1() and GetSpellCD(34026) &amp;gt; 1.7) or Focus &amp;lt; 37) then
		return true
	end
end

if GetSpecialization() == 3 then

Cobra = select(7,GetSpellInfo(56641))/1000+.01
	if Cobra &amp;gt; GetSpellCD(53301) and Focus &amp;gt;= 25 then return false end
	if Cobra &amp;gt; GetSpellCD(3674) and BlackArrow() and Focus &amp;gt;= 35 and not QuickKill() then return false end

	---if SpellCast == GetSpellInfo(77767) and Nova_AOE ~= 1
---	  and (UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 45 or (GetSpellCD(3674) &amp;lt; 0.7 and GetSpellCD(53301) &amp;lt; 0.7 and UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 50)) then
---	  	StopCobra = true
---	end
	
---	if StopCobra
---	  and UnitPower(&amp;quot;player&amp;quot;,2) &amp;lt; 40 then
---	  	StopCobra = false
---	end
	
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
---	  and not StopCobra
	  and UnitPower(&amp;quot;player&amp;quot;,2) &amp;lt; 59 then
		return true
	end
end

if GetSpecialization() == 2 then
return true
end</Lua><RecastDelay>200</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Mend Pet</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxHunter_MastersCall_enable then return false end

if not IsLineOfSight(&amp;quot;pet&amp;quot;, 3) then return false end

if UnitExists(&amp;quot;pet&amp;quot;) 
and not UnitIsDead(&amp;quot;pet&amp;quot;) 
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;lt; 65 
and not UnitBuffID(&amp;quot;pet&amp;quot;,136)
and IsSpellInRange(GetSpellInfo(136), &amp;quot;pet&amp;quot;) 
then CastSpellByName(GetSpellInfo(136),nil)
return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] Powershot</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petstartattack</Actions><Lua>if not IsPlayerSpell(109259) then return false end
if not PQR_SpellAvailable(109259) then return false end
if Nova_Hold == 1 then return false end

if not PQR_IsMoving(1) then
	if Focus &amp;gt; 14 then
	if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
	CastSpellByName(GetSpellInfo(109259))
	return true
	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Serpent Sting</Name><Default>false</Default><SpellID>1978</SpellID><Actions></Actions><Lua>if GetSpecialization() == 2 then return false end

if MindControlled(&amp;quot;target&amp;quot;) then return false end

if GetSpecialization() == 1 and KC() then
	return false
end

if LastSS == nil then LastSS = GetTime() end
if T2D(&amp;quot;target&amp;quot;) &amp;lt; 10 then return false end

if SerpentSting == nil then
return true
elseif SerpentSting and SerpentStingtimer - GetTime() &amp;lt; 1.5 then
return true
end

if SerpentSting and SerpentStingtimer - GetTime() &amp;lt; 6.5
  and not UnitBuffID(&amp;quot;player&amp;quot;, 34692) 
  and UnitDebuffID(&amp;quot;target&amp;quot;, 1978, &amp;quot;EXACT|PLAYER&amp;quot;) then
  	if Focus &amp;lt; 79 then
    	CastSpellByName(GetSpellInfo(56641), &amp;quot;target&amp;quot;)
  	end
end</Lua><RecastDelay>1500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Disable ability if we disabled it in PQI
if not PQI_SoapboxHunter_Healthstone_enable then return false end

local v=PQI_SoapboxHunter_Healthstone_value

if GetItemCount(5512) &amp;gt; 0
	and Playerhealth &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and GetItemCooldown(5512) == 0
then UseItemByName(5512) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Hunter&amp;apos;s Mark</Name><Default>false</Default><SpellID>1130</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) and not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not IsMounted() then
	if TargetValidation(&amp;quot;target&amp;quot;, 1130)
 	 and not IsMounted()
  	and not UnitDebuffID(&amp;quot;target&amp;quot;, 1130)
  	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Tranq Shot</Name><Default>false</Default><SpellID>19801</SpellID><Actions></Actions><Lua>for i = 1, 40 do
	local buff = { UnitBuffID(&amp;quot;target&amp;quot;, i) }
	if buff[9] then
		return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Intimidation</Name><Default>false</Default><SpellID>19577</SpellID><Actions></Actions><Lua>if Nova_Intimidation ~= 1 then return false end


return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Scatter Shot</Name><Default>false</Default><SpellID>19503</SpellID><Actions></Actions><Lua>if Nova_Scatter ~= 1 then return false end

if IsMounted() then
return false
end


if UnitExists(&amp;quot;mouseover&amp;quot;) then 
	if TargetValidation(&amp;quot;mouseover&amp;quot;, 19503) then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Aspect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and not UnitBuffID(&amp;quot;player&amp;quot;, 136461) 
  and not IsMounted()
  and PQR_IsMoving(4)
  and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
  and PQI_SoapboxHunter_AutoAspect_enable
  and GetShapeshiftForm() ~= 2 then
    CastShapeshiftForm(2)
end


if UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and not UnitBuffID(&amp;quot;player&amp;quot;, 136461)
  and GetShapeshiftForm() ~= 1 then
  	CastShapeshiftForm(1)
  	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Feign Death</Name><Default>false</Default><SpellID>5384</SpellID><Actions></Actions><Lua>if Nova_Feign ~= 1 then return false end

return true</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Disengage</Name><Default>false</Default><SpellID>781</SpellID><Actions></Actions><Lua>if Nova_Disengage ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Exhilaration</Name><Default>false</Default><SpellID>109304</SpellID><Actions></Actions><Lua>if Nova_Exhilaration ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3.Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---Bestial Wrath CD---
local BWStart, BWDuration = GetSpellCooldown(19574)
BWCD = BWStart + BWDuration - GetTime()
---Kill Command CD---
local KCStart, KCDuration = GetSpellCooldown(34026)
KCCD = KCStart + KCDuration - GetTime()
---Murder of Crows CD---
local CROWStart, CROWDuration = GetSpellCooldown(131894)
CROWCD = CROWStart + CROWDuration - GetTime()
---Rapid Fire CD---
local RFStart, RFDuration = GetSpellCooldown(3045)
RFCD = RFStart + RFDuration - GetTime()

Playermana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
Pethealth = 100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)
---Focus = UnitPower(&amp;quot;player&amp;quot;)

boss = UnitExists(&amp;quot;boss1&amp;quot;) or UnitLevel(&amp;quot;target&amp;quot;) == -1
SteadyBuff,_,_,_,_,_,SteadyBufftimer = UnitBuffID(&amp;quot;player&amp;quot;, 53220)
SerpentSting,_,_,_,_,_,SerpentStingtimer = UnitDebuffID(&amp;quot;target&amp;quot;,1978,&amp;quot;PLAYER&amp;quot;)
Mark,_,_,_,_,_,Crowstimer = UnitDebuffID(&amp;quot;target&amp;quot;,1130)
Protect,_,_,_,_,_,Protecttimer = UnitBuffID(&amp;quot;target&amp;quot;,123250)
Cleave,_,_,_,_,_,Cleavetimer = UnitBuffID(&amp;quot;pet&amp;quot;,118455)
Crows,_,_,_,_,_,Crowstimer = UnitDebuffID(&amp;quot;target&amp;quot;,131894,&amp;quot;PLAYER&amp;quot;)
Beast,_,_,_,_,_,Beasttimer = UnitBuffID(&amp;quot;player&amp;quot;,34471)
Thrill,_,_,_,_,_,Thrilltimer = UnitBuffID(&amp;quot;player&amp;quot;,34720)
---Kill Command Range Check---
KillCommand = IsSpellInRange(tostring(GetSpellInfo(2649)), &amp;quot;pettarget&amp;quot;) == 1</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---2. Functions---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>QuickKill = nil
function QuickKill()
	local Quickness = Quickness
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		-- Dungeons &amp; Raids
		for i=1,#Quickness do
			if Quickness[i] == npcID then 
			return true
			end
		end
		return false
	else return false end
end

BlackArrow = nil
function BlackArrow()
---local T2D() = T2D()
---local QuickKill() = QuickKill()
local Black,_,_,_,_,_,Blacktimer = UnitDebuffID(&amp;quot;target&amp;quot;,3674,&amp;quot;PLAYER&amp;quot;)
	if T2D(&amp;quot;target&amp;quot;) &amp;gt;= 8 and not QuickKill() and (not Black or (Black and Blacktimer - GetTime() &amp;lt; 2)) then
	return true
	else
	return false 
	end
end


 --Dummy 5min DPS Test
if UnitExists(&amp;quot;target&amp;quot;) then
if cTime &amp;gt;= 600 and dummy() then  
	StopAttack()
	ClearTarget()
	print(&amp;quot;5 Minute Dummy Test Concluded - Profile Stopped&amp;quot;)
	RunMacroText(&amp;quot;/run Screenshot()&amp;quot;)
	--PQR_StopRotation()
end
end
function dummy()
	dummies = {
		31146, --Raider&amp;apos;s Training Dummy - Lvl ??
		67127, --Training Dummy - Lvl 90
		46647, --Training Dummy - Lvl 85
		32546, --Ebon Knight&amp;apos;s Training Dummy - Lvl 80
		31144, --Training Dummy - Lvl 80
		32667, --Training Dummy - Lvl 70
		32542, --Disciple&amp;apos;s Training Dummy - Lvl 65
		32666, --Training Dummy - Lvl 60
		32545, --Initiate&amp;apos;s Training Dummy - Lvl 55 
		32541, --Initiate&amp;apos;s Training Dummy - Lvl 55 (Scarlet Enclave) 
	}
	for i=1, #dummies do
		if UnitExists(&amp;quot;target&amp;quot;) then
			dummyID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(-13, -9), 16)
		else
			dummyID = 0
		end
		if dummyID == dummies[i] then
			return true
		end	
	end
end
Quickness = {
--71606, --Deactivated Missile Turrets
--71751, --Deactivated Laser Turrets - 
--71694, --Deactivated Electromagnets - 
74009, --Crawler Mines
--71790, --Disassembled Crawler Mines - 
72172, --Reflections - 
71946, --Manifestation of Pride - 
71603, --Sha Puddles - 
71642, --Congealed Sha - 
71977, --Manifestation of Corruption - 
71976, --Essences of Corruption - 
72263, --Unleashed Essences of Corruption - 
72353, --Dragonmaw Flameslingers - 
72352, --Dragonmaw Ebon Stalkers - 
71825, --Foul Slimes - 
71519, --Kor&amp;apos;kron Warshamans - 
71517, --Kor&amp;apos;kron Arcweavers - 
71518, --Kor&amp;apos;kron Assassins - 
71433, --Sparks of Life - 
71378, --Quilen Guardians - 
71383, --Kor&amp;apos;thik Warcallers - 
71385, --Sri&amp;apos;thik Bombardiers - 
71397, --Zar&amp;apos;thik Amber Priests - 
71405, --Set&amp;apos;thik Wind Wielders - 
71427, --Ancient Brewmaster Spirits - 
71428, --Wise Mistweaver Spirits - 
71430, --Nameless Windwalker Spirits - 
71658, --Kor&amp;apos;kron Jailer - 
71425, --Mature Kunchongs - 
71420, --Hungry Kunchongs - 
71407, --Amber - 
71979, --Kor&amp;apos;kron Warbringer - 
71984, --Siege Engineers - 
72237, --Embodied Fears - 
72238, --Embodied Doubts - 
72236, --Embodied Despairs - 
72272  --Minions of Y&amp;apos;Shaarj - 
}


-- Thanks Gabbz for Spellcheck, TargetCheck, HaveBuff and HaveDebuff functions!
-- Thanks also to Nova Team for many great functions they did!
if GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then
	if not UnitBuffID(&amp;quot;player&amp;quot;,34471) and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(77767) then 
	Focus = UnitPower(&amp;quot;player&amp;quot;)+14
	elseif UnitBuffID(&amp;quot;player&amp;quot;,34471) then
	Focus = UnitPower(&amp;quot;player&amp;quot;)*2
	else 
	Focus = UnitPower(&amp;quot;player&amp;quot;)
	end	
elseif UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(56641) then 
Focus = UnitPower(&amp;quot;player&amp;quot;)+14
else
Focus = UnitPower(&amp;quot;player&amp;quot;)
end

	-- GetSpellCD will return actual Timer before we can use the ability, 0 if the ability is ready.
	GetSpellCD = nil
	function GetSpellCD(MySpell)
		if GetSpellCooldown(GetSpellInfo(MySpell)) == nil then
			return 0
		else
			local Start ,CD = GetSpellCooldown(MySpell)
			local MyCD = Start + CD - GetTime()
			return MyCD
		end
	end
if UnitBuffID(&amp;quot;player&amp;quot;, 5384) and Nova_Feign == 1 then
SetCVar(&amp;quot;Nova_Feign&amp;quot;, 0)
	end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= 1 then
	if Burn == false or Burn == nil then
	Burn = true
	end
end
if UnitExists(&amp;quot;target&amp;quot;) then
local TargetID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)

NoKC = false

Target = { 71790, 71606, 71694, 71751 } ---Siege Mines/Missile/Magnet/Laser

for i=1, #Target do
   if TargetID == Target[i] then NoKC = true
   end
end
end

if NoKC == true and
Nova_Hold == 1 then
xrn:message(&amp;quot;\124cFFCC99FFBURST ABILITIES ENABLED&amp;quot;)
SetCVar(&amp;quot;Nova_Hold&amp;quot;, 0)
end
---Credits to Bu_ba for the line of code!---
if not IsLineOfSight then
 LoSTable = { }
 function IsLineOfSight(targetCheck, time)
  local time=time or 5
  targetGUID = UnitGUID(targetCheck) or 0 

   for i=1, #LoSTable do
    if time &amp;lt; (GetTime() - LoSTable[i].time) then
     table.remove(LoSTable, i)
     break
    end
  end

   function LoSCheck(self, event, ...)
    local targetGUID = targetGUID
    local Log = {...}
    local AlreadyTabled = false
    if Log[2] and Log[2] == &amp;quot;SPELL_CAST_FAILED&amp;quot; and targetGUID then
     if Log[4] and Log[4]==UnitGUID(&amp;quot;player&amp;quot;) then
      if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
       for j=1, #LoSTable do
        if targetGUID == LoSTable[j].unit then
         AlreadyTabled = true
         break
        end
       end
       if not AlreadyTabled then
        table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
        targetGUID = nil
        _G.NovaLineOfSight:UnregisterAllEvents()
       end
      end
     end
    end
    
   end

  if not NovaLineOfSight then
    frameLOS = CreateFrame(&amp;quot;frame&amp;quot;, &amp;quot;NovaLineOfSight&amp;quot;)
    frameLOS:SetScript(&amp;quot;OnEvent&amp;quot;, LoSCheck)
  end
  
   for k=1, #LoSTable do
     if targetGUID and targetGUID == LoSTable[k].unit then
     return false
    end
  end
  
  
  _G.NovaLineOfSight:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  return true

 end
end
if sTimer == nil then
  sTimer = 0
 end
 if cTime == nil then
  cTime = 0
 end
 if UnitAffectingCombat(&amp;quot;player&amp;quot;) and sTimer == 0 then
   sTimer = GetTime()
 end
 if sTimer &amp;gt; 0 then
   cTime = (GetTime() - sTimer)
 end
 if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not UnitExists(&amp;quot;target&amp;quot;) then
  sTimer = 0
  cTime = 0
 end
if not T2D then
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		if NOT2D == true then timeToDie = 1000 end
		return timeToDie
	end
end
end



-- DoT Mind Control Function
MindControlled = nil
function MindControlled(unit)
	if UnitDebuffID(unit, 145832) 
	or UnitDebuffID(unit, 145171) 
	or UnitDebuffID(unit, 145065) 
	or UnitDebuffID(unit, 145071) then
	return true
	else
	return false
	end
end


KC1 = nil
function KC1()
	if GetSpecialization() == 1 then
		if not UnitExists(&amp;quot;pet&amp;quot;) then return false end
		if UnitIsDead(&amp;quot;pet&amp;quot;) then return false end
		if UnitExists(&amp;quot;pettarget&amp;quot;) then
			if IsSpellInRange(GetSpellInfo(2649), &amp;quot;pettarget&amp;quot;) == 1 then
			return true
			elseif PQR_UnitDistance(&amp;quot;pet&amp;quot;, &amp;quot;pettarget&amp;quot;) ~= nil then
				if PQR_UnitDistance(&amp;quot;pet&amp;quot;, &amp;quot;pettarget&amp;quot;) &amp;lt; 29 then ---Unit Distance May cause FPS issues
				return true
				else
				return false
				end
			else
			return false
			end
		elseif UnitExists(&amp;quot;target&amp;quot;) then
			if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) ~= nil then
				if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 29 then ---Unit Distance May cause FPS issues
				return true
				else
				return false
				end
			else
			return false
			end
		else
		return false
		end
	end
end

KC = nil
function KC()
	if GetSpecialization() == 1 then
	if not UnitExists(&amp;quot;pet&amp;quot;) then return false end
	if UnitIsDead(&amp;quot;pet&amp;quot;) then return false end
		if (UnitBuffID(&amp;quot;player&amp;quot;, 19574, 2) and GetSpellCooldown(34026) &amp;lt; 0.5) or (not UnitBuffID(&amp;quot;player&amp;quot;, 19574) and GetSpellCD(34026) &amp;lt; 0.7) then ---Unit Distance May cause FPS issues	
			if UnitExists(&amp;quot;pettarget&amp;quot;) then
				if IsSpellInRange(GetSpellInfo(2649), &amp;quot;pettarget&amp;quot;) == 1 then
				return true
				elseif PQR_UnitDistance(&amp;quot;pet&amp;quot;, &amp;quot;pettarget&amp;quot;) ~= nil then
					if PQR_UnitDistance(&amp;quot;pet&amp;quot;, &amp;quot;pettarget&amp;quot;) &amp;lt; 29 then
					return true
					else
					return false
					end
				else
				return false
				end
			elseif UnitExists(&amp;quot;target&amp;quot;) then
				if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) ~= nil then
					if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 29 then
					return true
					else
					return false
					end
				else
				return false
				end
			else
			return false
			end
		end
	end
end


if UnitExists(&amp;quot;boss&amp;quot;..1) then
local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)

NOT2D = false

Target = { 70235, 70247, 70212, 69134, 69078, 69131, 69132, 68078, 71543 }

for i=1, #Target do
   if BossID == Target[i] then NOT2D = true
   end
end
end

-- Target Validation Function
TargetValidation = nil
function TargetValidation(unit, spell)
	if UnitExists(unit)
		and IsPlayerSpell(spell)
		and UnitCanAttack(&amp;quot;player&amp;quot;, unit) == 1
		and not UnitIsDeadOrGhost(unit)
		and IsLineOfSight(unit, 5) then
			if IsSpellKnown(spell) then
				if PQR_SpellAvailable(spell) then
					if IsSpellInRange(GetSpellInfo(spell), unit) == 1 then return true else return false end
				else
					if spell == 8092 or spell == 32379 then
						local spellCD = select(2,GetSpellCooldown(spell)) + GetSpellCooldown(spell) - GetTime()
						if spellCD &amp;lt;= 0 then spellCD = 0 end
						if spellCD &amp;lt;= 0.5 then return true end
					end
					return false
				end
			else
				if select(2, GetSpellCooldown(spell)) == 0 then return true end
			end
	end
end

	-- Nova Heroism Function.
	PQ_HasHero = nil
	function PQ_HasHero()
		if UnitBuffID(&amp;quot;player&amp;quot;,2825) -- Blood Lust
		  or UnitBuffID(&amp;quot;player&amp;quot;,32182) -- Heroism
		  or UnitBuffID(&amp;quot;player&amp;quot;,80353) -- Time Warp
		  or UnitBuffID(&amp;quot;player&amp;quot;,90355) then -- Ancient Hysteria 
			return true 
		else 
			return false 
		end
	end
	
	Nova_Tranq = nil
	function Nova_Tranq()
		local i = 1
		local buff,_,_,_,bufftype = UnitBuffID(&amp;quot;target&amp;quot;, i)
		while buff do
			if bufftype == &amp;quot;Magic&amp;quot; or buff == &amp;quot;Enrage&amp;quot; then
			  	if Focus &amp;gt; 20 then
	  		  		return true
	  		  	end
	  		end
	 	 i = i + 1;
	 	 buff,_,_,_,bufftype = UnitBuffID(&amp;quot;target&amp;quot;, i)
		end
	end
	
-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local PQ_BossUnits = PQ_BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#PQ_BossUnits do
				if PQ_BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end
-- Complete boss unit table (Dungeons/Heroics/Raids)
PQ_BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}

	AoC = nil
	function AoC()
	
		local Trinket1 = GetInventoryItemID(&amp;quot;player&amp;quot;, 13)
		local Trinket2 = GetInventoryItemID(&amp;quot;player&amp;quot;, 14)
		local Assurance = {
		105472, 104476, 105223, 102292, 104725, 104974
						}
		
		for i = 1, #Assurance do
			if Trinket1 == Assurance[i] or Trinket2 == Assurance[i] then
				return true, Assurance[i]
			end
		end
		
		return false, nil
		
	end
	
	
-- Tier 16 Item Count
if GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99157 or  GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99402 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99660 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99080 then
	t16head = 1
else
	t16head = 0
end
if GetInventoryItemID(&amp;quot;player&amp;quot;,3)==99159 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99404 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99574 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99082 then
	t16shoulder = 1
else
	t16shoulder = 0
end
if GetInventoryItemID(&amp;quot;player&amp;quot;,5)==99405 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99167 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99577 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99085 then
	t16chest = 1
else
	t16chest = 0
end
if GetInventoryItemID(&amp;quot;player&amp;quot;,7)==99158 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99403 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99573 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99081 then
	t16leg = 1
else
	t16leg = 0
end
if GetInventoryItemID(&amp;quot;player&amp;quot;,10)==99168 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99406 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99578 or GetInventoryItemID(&amp;quot;player&amp;quot;,1)==99086 then
	t16hand = 1
else 
	t16hand = 0
end
t16count = t16head + t16shoulder + t16chest + t16leg + t16hand</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---7. Toggle Key---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface
if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
		PQR_WriteToChat(&amp;quot;|cff9482C9The AddOn PQInterface is not loaded or installed!|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9Version 2.22+ is required to run the profile.|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9You can get the latest version at this location:|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9http://pqrotation.wikia.com/wiki/PQInterface|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_StopRotation()
		return true
else
	local PQIver = tonumber(GetAddOnMetadata(&amp;quot;PQInterface&amp;quot;,&amp;quot;Version&amp;quot;))
	if PQIver &amp;lt; 2.22 then
		PQR_WriteToChat(&amp;quot;|cff9482C9Your PQInterface version is outdated!|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9Version 2.22+ is required to run the profile, you have version &amp;quot;..PQIver..&amp;quot;!|cffffffff&amp;quot;,&amp;quot;Warning&amp;quot;)
		PQR_WriteToChat(&amp;quot;&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9You can get the latest version at this location:|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_WriteToChat(&amp;quot;|cff9482C9http://pqrotation.wikia.com/wiki/PQInterface|cffffffff&amp;quot;,&amp;quot;Notice&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if PQR_RotationStarted then
	-- Load Data Files
	PQR_RotationStarted = false
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737PQR_PQI.lua failed to load. Make sure it&amp;apos;s in your Data folder!|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	if Nova_Hold == 1 then
	PQR_WriteToChat(&amp;quot;HOLD IS ENABLED, PRESS /HOLD TO DISABLE IT: \124cFF15E615&amp;quot;) 
	end
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
	



  ----------------
  --Nova  Checks--
  ----------------
  if Nova_Cooldowns == 1 then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) end
  if (Nova_AOE == nil or Nova_AOE == 0) and (Nova_Cleave == nil or Nova_Cleave == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_Cleave == 1 then	
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;) end
		  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[RACIALS]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_SoapboxHunter_BossCooldowns_enable and not SpecialUnit() then return false end
  	
  	
  	
  	if Nova_Hold == 1 then return false end
--Blood Elf Arcane Torrent--
if BloodElf == true then 
	if BloodElfCD &amp;lt; 1 
	and Playerfocus &amp;lt; 80 then
	CastSpellByName(GetSpellInfo(80483),&amp;quot;player&amp;quot;)
	return true
	end
end

--Goblin Rocket Barrage--
if Goblin == true then 
	if GoblinCD &amp;lt; 1 then
	CastSpellByName(GetSpellInfo(69041),&amp;quot;target&amp;quot;)
	return true
	end
end

if GetSpecialization() ~= 1 then 
	-- Berserking
	if PQR_SpellAvailable(26297)
	and Burn == true 
	and PQI_SoapboxHunter_AutoRacials_enable
	  and Nova_Cooldowns == 1 then 
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;) 
	end	 
	
	-- Blood Fury
	if PQR_SpellAvailable(20572) 
	and PQI_SoapboxHunter_AutoRacials_enable
	and Burn == true
	  and Nova_Cooldowns == 1 then 
		CastSpellByName(GetSpellInfo(20572),&amp;quot;player&amp;quot;) 
	end
	
	if PQR_SpellAvailable(53401) then
	RunMacroText(&amp;quot;/cast &amp;quot;..GetSpellInfo(53401))  
    end
    
 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4a. Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Cleave&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Hold&amp;quot;,			 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;,			 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Feign&amp;quot;,			 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Exhilaration&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Disengage&amp;quot;,			 	Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Scatter&amp;quot;,			 	Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Freezing&amp;quot;,			 	Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Explosive&amp;quot;,			 	Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Snake&amp;quot;,			 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Ice&amp;quot;,			 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Intimidation&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Deter&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Camoflage&amp;quot;,				Var2 = 1		}
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
			xrn:message(&amp;quot;|cff9933ffCooldowns - Active.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
		else			
			xrn:message(&amp;quot;|cff9933ffCooldowns - Inactive.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
		end
	end	
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFArea of Effect Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		end
	end
	SLASH_CLEAVE1 = &amp;quot;/cleave&amp;quot;
	function SlashCmdList.CLEAVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cleave&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFCleave Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		end
	end
	SLASH_PAUSE1 = &amp;quot;/pause&amp;quot;
	function SlashCmdList.PAUSE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
			xrn:message(&amp;quot;\124cFFCC9900Rotation Paused&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC9900Rotation Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)			
		end
	end
		
	SLASH_FEIGN1 = &amp;quot;/feign&amp;quot;
	function SlashCmdList.FEIGN(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Feign&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFFeign Death - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Feign&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFFeign Death - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Feign&amp;quot;, 0)
		end
	end
	SLASH_EXHIL1 = &amp;quot;/exhilaration&amp;quot;
	function SlashCmdList.EXHIL(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Exhilaration&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFExhilaration - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Exhilaration&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFExhilaration - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Exhilaration&amp;quot;, 0)
		end
	end
		SLASH_DIS1 = &amp;quot;/disengage&amp;quot;
	function SlashCmdList.DIS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Disengage&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFDisengage - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Disengage&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFDisengage - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Disengage&amp;quot;, 0)
		end
	end
		SLASH_SCAT1 = &amp;quot;/scatter&amp;quot;
	function SlashCmdList.SCAT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Scatter&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFScatter - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Scatter&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFScatter - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Scatter&amp;quot;, 0)
		end
	end
		SLASH_FREE1 = &amp;quot;/freezing&amp;quot;
	function SlashCmdList.FREE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Freezing&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFFreezing Trap - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Freezing&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFFreezing Trap - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Freezing&amp;quot;, 0)
		end
	end
		SLASH_EXP1 = &amp;quot;/explosive&amp;quot;
	function SlashCmdList.EXP(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Explosive&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFExplosive Trap - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Explosive&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFExplosive Trap - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Explosive&amp;quot;, 0)
		end
	end
		SLASH_SNAKE1 = &amp;quot;/snake&amp;quot;
	function SlashCmdList.SNAKE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Snake&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFSnake Trap - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Snake&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFSnake Trap - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Snake&amp;quot;, 0)
		end
	end
		SLASH_ICE1 = &amp;quot;/ice&amp;quot;
	function SlashCmdList.ICE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Ice&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFIce Trap - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Ice&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFIce Trap - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Ice&amp;quot;, 0)
		end
	end
		SLASH_INT1 = &amp;quot;/intimidation&amp;quot;
	function SlashCmdList.INT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Intimidation&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFIntimidation - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Intimidation&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFIntimidation - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Intimidation&amp;quot;, 0)
		end
	end
		SLASH_HOLD1 = &amp;quot;/hold&amp;quot;
	function SlashCmdList.HOLD(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Hold&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFHOLDING FOR BURST.&amp;quot;)
			SetCVar(&amp;quot;Nova_Hold&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFBURST ABILITIES ENABLED&amp;quot;)
			SetCVar(&amp;quot;Nova_Hold&amp;quot;, 0)
		end
	end
			SLASH_CAMO1 = &amp;quot;/camoflage&amp;quot;
	function SlashCmdList.CAMO(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Camoflage&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFCamoflage ON&amp;quot;)
			SetCVar(&amp;quot;Nova_Camoflage&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFCamoflage OFF&amp;quot;)
			SetCVar(&amp;quot;Nova_Camoflage&amp;quot;, 0)
		end
	end
				SLASH_DET1 = &amp;quot;/deterrance&amp;quot;
	function SlashCmdList.DET(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Deter&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFDeterrance - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Deter&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFDeterrance - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Deter&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---5. Success---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
  			if (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
  				if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
  					if select(12, ...) == 120360 then
  					PQR_DelayRotation(1)
  					end
  				end
            elseif (type==&amp;quot;SPELL_AURA_APPLIED&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
					if select(12, ...) == 53220 and SteadyFocus == true then
					SteadyFocus = false
					end
				end
			elseif (type==&amp;quot;SPELL_AURA_REFRESH&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
					if select(12, ...) == 53220 and SteadyFocus == true then
					SteadyFocus = false
					end
				end
			elseif (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
		if select(12, ...) == 3045 and Nova_Rapid == 1 then
		SetCVar(&amp;quot;Nova_Rapid&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Rapid Fire: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 56641 then
		SteadyFocus = true
		elseif select(12, ...) == 1978 or select(12, ...) == 34490 or select(12, ...) == 53351 or select(12, ...) == 19503 or select(12, ...) == 5116 or select(12, ...) == 120679
		or select(12, ...) == 117050 or select(12, ...) == 109259 or select(12, ...) == 120360 or select(12, ...) == 20736 or select(12, ...) == 2643 or select(12, ...) == 3044
		or select(12, ...) == 53209 or select(12, ...) == 19801 or select(12, ...) == 19434 or select(12, ...) == 131894 and (SteadyFocus == nil or SteadyFocus == false) and SteadyFocus == true then
		SteadyFocus = false
		elseif select(12, ...) == 19577 and Nova_Intimidation == 1 then
		SetCVar(&amp;quot;Nova_Intimidation&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Intimidation: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 82941 and Nova_Ice == 1 then
		SetCVar(&amp;quot;Nova_Ice&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Ice Trap: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 60192 and Nova_Freezing == 1 then
		SetCVar(&amp;quot;Nova_Freezing&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Freezing Trap: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 82948 and Nova_Snake == 1 then
		SetCVar(&amp;quot;Nova_Snake&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Snake Trap: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 82939 and Nova_Explosive == 1 then
		SetCVar(&amp;quot;Nova_Explosive&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Explosive Trap: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 109304 and Nova_Exhilaration == 1 then
		SetCVar(&amp;quot;Nova_Exhilaration&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Exhilaration: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 781 and Nova_Disengage == 1 then
		SetCVar(&amp;quot;Nova_Disengage&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Disengage: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 19263 and Nova_Deter == 1 then
		SetCVar(&amp;quot;Nova_Deter&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Deterrance: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 19503 and Nova_Scatter == 1 then
		SetCVar(&amp;quot;Nova_Scatter&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Scatter Shot: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 3045 and (OpenSerpent == false or OpenSerpent == nil) and cTime &amp;lt; 11 then
		OpenSerpent = true
		elseif (select(12, ...) == 982 
		or select(12, ...) == 883
		or select(12, ...) == 83242
		or select(12, ...) == 83243
		or select(12, ...) == 83244
		or select(12, ...) == 83245
		or select(12, ...) == 55709) and Dead == true then
		Dead = false
      end
     end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Combat Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions>/stopattack</Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) ~= 1 then return true end 

if (not UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;boss1&amp;quot;))
	or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[BM] Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() == 1
and not UnitBuffID(&amp;quot;player&amp;quot;, 34692) then
    if cTime &amp;lt; 10 then
    	if IsPlayerSpell(120679) then
    		if PQR_SpellAvailable(120679) then
    		CastSpellByName(GetSpellInfo(120679))
    		end
   	 	end
   	end
   	if t16count &amp;gt; 1 and AoC() and GetSpellCD(3045) &amp;lt; 0.1 then
		if Nova_Cooldowns == 1 
		and Burn == true
		and PQI_SoapboxHunter_AutoRapidFire_enable
	  	and not UnitBuffID(&amp;quot;player&amp;quot;, 3045) then 
		CastSpellByName(GetSpellInfo(3045))
		end
	end
  	if not PQI_SoapboxHunter_BossCooldowns_enable 
  	or SpecialUnit() then
  	-- Rapid Fire
  	if cTime &amp;lt; 10 then
  		if IsPlayerSpell(120679) then
  			if PQR_SpellAvailable(120679) then
  			return false
  			end
  		end
  	end
	if Nova_Cooldowns == 1 
	and Burn == true
	and PQI_SoapboxHunter_AutoRapidFire_enable
	and (t16count &amp;gt; 1 or not PQ_HasHero())
	  and not UnitBuffID(&amp;quot;player&amp;quot;, 3045)
	  and GetSpellCD(3045) &amp;lt; 0.1 then 
		CastSpellByName(GetSpellInfo(3045))
	end
  	-- Stampede
	if GetSpellCD(121818) &amp;lt; 0.1
	and PQI_SoapboxHunter_AutoStampede_enable
	and Burn == true
	  and Nova_Cooldowns == 1 then
	  	CastSpellByName(GetSpellInfo(121818))
	end 
	
	-- Berserking
	if PQR_SpellAvailable(26297)
	and Burn == true 
	and PQI_SoapboxHunter_AutoRacials_enable
	  and Nova_Cooldowns == 1 then 
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;) 
	end	 
	
	-- Blood Fury
	if PQR_SpellAvailable(20572) 
	and PQI_SoapboxHunter_AutoRacials_enable
	and Burn == true
	  and Nova_Cooldowns == 1 then 
		CastSpellByName(GetSpellInfo(20572),&amp;quot;player&amp;quot;) 
	end	 
	end
	  	-- Focus Fire
	local _,_,_,frenzycount,_,_,_ = UnitBuffID(&amp;quot;player&amp;quot;,19615)
	if frenzycount == 5 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 3045) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
	and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 90355) then
  		CastSpellByName(GetSpellInfo(82692))
	end
	end
  	--Bestial Wrath
  	if GetSpellCooldown(19574) &amp;lt; 0.1 
  	and (Burn == true or cTime &amp;lt; 10)
	  and ( Nova_Cooldowns == 1 ) then
	  	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	  	  and ( UnitPower(&amp;quot;player&amp;quot;,2) &amp;lt; ( 55 ) and ( UnitBuffID(&amp;quot;player&amp;quot;, 3045, 2) or UnitBuffID(&amp;quot;player&amp;quot;, 82692, 2)))
	  	  or ( UnitPower(&amp;quot;player&amp;quot;,2) &amp;lt; 75 and not ( UnitBuffID(&amp;quot;player&amp;quot;, 3045, 2) or UnitBuffID(&amp;quot;player&amp;quot;, 82692, 2))) then
			CastSpellByName(GetSpellInfo(56641),&amp;quot;target&amp;quot;)
		end
		if GetSpellCooldown(34026) &amp;lt; 3 
		  ---and ( GetSpellCD(3045) &amp;gt; 6 or select(1, GetPowerRegen()) &amp;gt; 6 ) 
		  ---and not ( PQR_SpellAvailable(121818) and PQI_SoapboxHunter_AutoStampede_enable ) 
		  and ( UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 75 or ( UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; ( 55 ) and ( UnitBuffID(&amp;quot;player&amp;quot;, 3045, 2) or UnitBuffID(&amp;quot;player&amp;quot;, 82692, 2)))) then 
		  	CastSpellByName(GetSpellInfo(19574)) 
	        RunMacroText(&amp;quot;/cast &amp;quot;..GetSpellInfo(53401)) 
	        UseInventoryItem(10)  	        
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] A Murder of Crows</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end
if Nova_Cooldowns ~= 1 then return false end
if Burn == false then return false end
if PQI_SoapboxHunter_BossCooldowns_enable and not SpecialUnit() then return false end

if GetSpecialization() == 1 and KC() and Nova_AOE ~= 1 then
	return false
end

if IsPlayerSpell(131894) 
and PQR_SpellAvailable(131894) then
  if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
  	  and ( Focus &amp;lt; 60 and GetSpecialization() == 1 )
	  or ( Focus &amp;lt; 60 and GetSpecialization() ~= 1 ) 
	  then
		CastSpellByName(GetSpellInfo(56641),&amp;quot;target&amp;quot;)
	end
	if not UnitDebuffID(&amp;quot;target&amp;quot;, 131894, &amp;quot;PLAYER&amp;quot;)
	  and ( Focus &amp;gt;= 60 and GetSpecialization() == 1 )
	  or ( Focus&amp;gt;= 60 and GetSpecialization() ~= 1 ) 
	  then
	  	if TargetValidation(&amp;quot;target&amp;quot;, 131894) then
		CastSpellByName(GetSpellInfo(131894),&amp;quot;target&amp;quot;)
		end
	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4. Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_HUNTER then return false end

local config = {
	name  = &amp;apos;Hunter&amp;apos;,
	author  = &amp;apos;Soapbox&amp;apos;,
	abilities = {
		{  name = &amp;quot;Boss Functions&amp;quot;,
			tooltip = &amp;quot;Enabls the use of special functions on certain raid bosses&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Auto Target Next Enemy&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Boss Cooldowns&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Auto Aspect&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{ 	name	= &amp;quot;Call Pet&amp;quot;,
			    tooltip = &amp;quot;Select the pet slot that you would like to be automatically summoned&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select the pet slot that you would like the profile to summon.&amp;quot;,
					values	= {
						&amp;quot;1&amp;quot;,
						&amp;quot;2&amp;quot;,
						&amp;quot;3&amp;quot;,
						&amp;quot;4&amp;quot;,
						&amp;quot;5&amp;quot;,
					},
					width	= 100,
				},
		},
 		{  name = &amp;quot;Masters Call&amp;quot;,
			enable = false,
			newSection = true,	
		},
			{ 	name	= &amp;quot;Healthstone&amp;quot;,
				tooltip = &amp;quot;When enabled; Allows you to control automatic usage of healthstone at set health %.&amp;quot;,
				enable	= true,
				widget	= {	type = &amp;quot;numBox&amp;quot;,
					tooltip = &amp;quot;Set the health % value you want Healthstone to be used at.&amp;quot;,
					value	= 50,
					step	= 5,
				},
			},
		{  name = &amp;quot;Mend Pet&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Auto Stampede&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Auto Rapid Fire&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Auto Racials&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Potions&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Misdirection&amp;quot;,
			enable = false,
			newSection = true,	
		},
		{  name = &amp;quot;Mouseover Serpent Sting&amp;quot;,
			enable = false,
			newSection = true,	
		},
	},	
}
SOAPBOX_HUNTER = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Raid Boss Functions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;boss&amp;quot;..1) then
	local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)
   	if BossID == 69465 then -- Jin&amp;apos;Rokh
	local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)	
		if not Fluidity then
			if Burn == true or Burn == nil then
			Burn = false
			end
		elseif Burn == false or Burn == nil then
		Burn = true
		end			
	elseif Burn == false or Burn == nil then
	Burn = true
	end
elseif Burn == false or Burn == nil then
Burn = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Revive Pet</Name><Default>false</Default><SpellID>982</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDead(&amp;quot;pet&amp;quot;)
and Dead == true then
Dead = false end
if UnitExists(&amp;quot;pet&amp;quot;) and not UnitIsDead(&amp;quot;pet&amp;quot;) and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(982) then
Dead = false
SpellStopCasting()
end
if (UnitIsDead(&amp;quot;pet&amp;quot;) or Dead == true)
and not IsMounted() then
Dead = true
	---if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
  		if UnitIsDead(&amp;quot;pet&amp;quot;) and PQR_SpellAvailable(55709) then
  		RunMacroText(&amp;quot;/cast &amp;quot;..GetSpellInfo(55709))  
  		else
  		return true
  		end
	---else
	---return true
	---end
end</Lua><RecastDelay>0</RecastDelay><Target>Pet</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Call Pet</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Dead == true then return false end

if not PQI_SoapboxHunter_CallPet_enable then return false end
local v=PQI_SoapboxHunter_CallPet_value or 5

if not UnitExists(&amp;quot;pet&amp;quot;) 
  and not IsMounted() 
  and not UnitIsDead(&amp;quot;pet&amp;quot;) then 
  	if v == 1 then
		CastSpellByName(GetSpellInfo(883))
	elseif v == 2 then
		CastSpellByName(GetSpellInfo(83242))
	elseif v == 3 then
		CastSpellByName(GetSpellInfo(83243))
	elseif v == 4 then
		CastSpellByName(GetSpellInfo(83244))
	elseif v == 5 then
		CastSpellByName(GetSpellInfo(83245))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Arcane Shot</Name><Default>false</Default><SpellID>3044</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end
if Nova_AOE == 1 then return false end
local PlayerSpec = GetSpecialization()

if GetSpecialization() == 1 and KC() and NoKC == false then
	return false
end

if PlayerSpec == 1 then
	if UnitBuffID(&amp;quot;player&amp;quot;, 34720) then
		if NoKC == false then
			if KCCD &amp;lt; 1 then 
			return false
			elseif Focus &amp;gt; 35 then
				if Focus &amp;lt; 50 and GetSpellCD(34026) &amp;lt; Cobra then return false end
			elseif T2D(&amp;quot;target&amp;quot;) &amp;gt; GetSpellCD(34026) then
			return false	
			end
		end
	elseif NoKC == false then
		if KCCD &amp;lt; 1.5 then 
		return false
		elseif Focus &amp;gt; 55 then
			if Focus &amp;lt; 70 and GetSpellCD(34026) &amp;lt; Cobra then return false end
		elseif T2D(&amp;quot;target&amp;quot;) &amp;gt; GetSpellCD(34026) then
		return false	
		end
	end
 	if Nova_Cleave == 1 and not Cleave then return false end
 	
	--if UnitBuffID(&amp;quot;player&amp;quot;, 109306) or UnitBuffID(&amp;quot;player&amp;quot;, 34471) then
    return true
  	--elseif (Focus &amp;gt; 61 and GetSpellCD(34026) &amp;gt; 1.5) or NoKC == true then
    --return true
   -- end
end


if PlayerSpec == 3
  and Nova_AOE ~= 1 
  and Nova_Cleave ~= 1 then
	if (UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 45 and UnitBuffID(&amp;quot;player&amp;quot;, 109306))
	or (UnitBuffID(&amp;quot;player&amp;quot;, 56453) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 25) then
	return true
	elseif Focus &amp;gt; 66 and Focus &amp;lt; 90 then
		if GetSpellCD(3674) &amp;lt; 2 and BlackArrow() and not QuickKill() then return false end
		if GetSpellCD(53301) &amp;lt; 1 then return false end
   	return true
	elseif Focus &amp;gt; 89 then
	return true
	end
end

if PlayerSpec == 2 then
if Targethealth &amp;gt; 80 and not PQR_IsMoving(0.3) then return false end
local Steady = select(7,GetSpellInfo(56641))/1000+.01

if Focus &amp;gt;= 60
or ((Focus &amp;gt;= 43 and (GetSpellCD(53209) &amp;gt;= Steady)) and not UnitBuffID(&amp;quot;player&amp;quot;, 3045) and not PQ_HasHero()) then
return true
end
end</Lua><RecastDelay>150</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV] Black Arrow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end 
if not BlackArrow() then return false end
if Nova_Hold == 1 then return false end
if not PQR_SpellAvailable(3674) then return false end
if PQR_SpellAvailable(53301) and not UnitBuffID(&amp;quot;player&amp;quot;, 56453) then return false end
if GetSpecialization() ~= 3 then return false end

if Focus &amp;gt; 34 then
	if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
	CastSpellByName(GetSpellInfo(3674))
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV] Explosive Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then 
if Targethealth &amp;lt;= 50 then return false end end
if not PQR_SpellAvailable(53301) then return false end

if Nova_Hold == 1 then return false end
if Nova_AOE == 1 then return false end

if GetSpecialization() == 3 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 56453) then
		if Focus &amp;gt; 24 then
			if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
			UseInventoryItem(10)
			CastSpellByName(GetSpellInfo(53301))
			return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV] Lock N&amp;apos; Load</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then 
if Targethealth &amp;lt;= 50 then return false end end
if not PQR_SpellAvailable(53301) then return false end
if Nova_Hold == 1 then return false end

if GetSpecialization() == 3 then
	if UnitBuffID(&amp;quot;player&amp;quot;, 56453) then
		if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
			if Focus &amp;gt;= 90 then
			CastSpellByName(GetSpellInfo(3044))
			else
			UseInventoryItem(10)
			CastSpellByName(GetSpellInfo(53301))
			return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] Fervor</Name><Default>false</Default><SpellID>82726</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 56453) and not PQR_SpellAvailable(3674) then return false end


	if Focus &amp;lt; 65
	  and not UnitBuffID(&amp;quot;player&amp;quot;, 82726) 
	  and not UnitBuffID(&amp;quot;player&amp;quot;, 34692) then
		return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] Glaive Toss</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petstartattack</Actions><Lua>if not IsPlayerSpell(117050) then return false end
if not PQR_SpellAvailable(117050) then return false end

if Nova_Hold == 1 then return false end

if GetSpecialization() == 1 then
	if Nova_AOE ~= 1 then
		if NoKC == false then
			if KCCD &amp;lt; 1 then 
			return false
			elseif Focus &amp;gt; 40 then
				if Focus &amp;lt; 55 and GetSpellCD(34026) &amp;lt; Cobra then 
				return false 
				end
			elseif T2D(&amp;quot;target&amp;quot;) &amp;gt; GetSpellCD(34026) then
			return false	
			end
		end
	end
  --and KC() 
 -- and Nova_AOE ~= 1 then
--	return false
end
if GetSpecialization() == 3 then
if PQR_SpellAvailable(53301) and not UnitBuffID(&amp;quot;player&amp;quot;, 56453) then return false end
end

if Focus &amp;gt; 14 then
if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
CastSpellByName(GetSpellInfo(117050))
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TALENT] Barrage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false end
if not IsPlayerSpell(120360) then return false end
if not PQR_SpellAvailable(120360) then return false end
if Nova_Hold == 1 then return false end


if Focus &amp;gt; 29 then
if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
CastSpellByName(GetSpellInfo(120360))
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV] Opener</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if cTime &amp;gt; 10 then return false end

if GetSpecialization() == 3 then
	if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
  	if not PQI_SoapboxHunter_BossCooldowns_enable 
  	or SpecialUnit() then
  	-- Rapid Fire
	if Nova_Cooldowns == 1 
	and Burn == true
	and PQI_SoapboxHunter_AutoRapidFire_enable
	  and not UnitBuffID(&amp;quot;player&amp;quot;, 3045)
	  and GetSpellCD(3045) &amp;lt; 0.1 then 
		CastSpellByName(GetSpellInfo(3045))
	end
  	-- Stampede
	if PQR_SpellAvailable(121818) 
	and PQI_SoapboxHunter_AutoStampede_enable
	and Burn == true
	  and Nova_Cooldowns == 1 then
	  	CastSpellByName(GetSpellInfo(121818))
	end 
	
	-- Berserking
	if PQR_SpellAvailable(26297)
	and Burn == true 
	and PQI_SoapboxHunter_AutoRacials_enable
	  and Nova_Cooldowns == 1 then 
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;) 
	end	 
	
	-- Blood Fury
	if PQR_SpellAvailable(20572) 
	and PQI_SoapboxHunter_AutoRacials_enable
	and Burn == true
	  and Nova_Cooldowns == 1 then 
		CastSpellByName(GetSpellInfo(20572),&amp;quot;player&amp;quot;) 
	end	 
	end
	-- Explosive Shot
	if PQR_SpellAvailable(53301) then
  		CastSpellByName(GetSpellInfo(53301))
	end
		-- Dire Beast
	if IsPlayerSpell(120679) then
		if PQR_SpellAvailable(120679) then
  		CastSpellByName(GetSpellInfo(120679))
  		RunMacroText(&amp;quot;/cast &amp;quot;..GetSpellInfo(53401)) 
	    UseInventoryItem(10)
  		end
	end
	-- Black Arrow
	if PQR_SpellAvailable(3674) then
  		CastSpellByName(GetSpellInfo(3674))
	end
	-- AMoC
		if Nova_Cooldowns == 1 
	and Burn == true then
	if IsPlayerSpell(131894) then
		if PQR_SpellAvailable(131894) then
  		CastSpellByName(GetSpellInfo(131894))
  		end
	end
	end
	-- Glaive Toss
	if IsPlayerSpell(117050) then
		if PQR_SpellAvailable(117050) then
  		CastSpellByName(GetSpellInfo(117050))
  		end
	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[BM] Kill Shot</Name><Default>false</Default><SpellID>53351</SpellID><Actions>/petstartattack</Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end 

if GetSpecialization() == 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV] Kill Shot</Name><Default>false</Default><SpellID>53351</SpellID><Actions>/petstartattack</Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end 

if Nova_Hold == 1 then return false end

if GetSpecialization() == 3 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Pause == 1 then
   	Nova_Notify(&amp;quot;\124cFFFFFFFFRotation Paused&amp;quot;)
   	SpellStopCasting()
	PetFollow()
	ClearTarget()
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Misc---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 
   UnitBuffID(&amp;quot;player&amp;quot;,104934) -- Eating (Feast)
  or UnitBuffID(&amp;quot;player&amp;quot;,80169) -- Eating
  or UnitBuffID(&amp;quot;player&amp;quot;,87959) -- Drinking
  or UnitBuffID(&amp;quot;player&amp;quot;,11392) -- 18 sec Invis Pot
  or UnitBuffID(&amp;quot;player&amp;quot;,3680) -- 15 sec Invis pot  
  or UnitChannelInfo(&amp;quot;player&amp;quot;) 
  or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
  or IsMounted() then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Master&amp;apos;s Call</Name><Default>false</Default><SpellID>53271</SpellID><Actions></Actions><Lua>local Snared = { 116,120,122,339,1715,3408,3409,3600,4167,5116,6136,8034,8056,11113,12323,13099, 
13810,15407,18223,19185,19975,20164,20170,25809,26679,31589,33395,35101,39965,44614, 
45334,45524,48484,50041,50245,50433,54644,54706,55536,59638,61391,61394,63311,63529,
63685,64695,81140,87194,96294,102359,107566,108200,110300,110693,110694,111340,113092,113275,   
113506,113792,114404,116095,116706,118585,118905,119696,123407,123586,123727,128405,140207 } 

if PQI_SoapboxHunter_MastersCall_enable  then
	for i=1,#Snared do 
		if UnitDebuffID(&amp;quot;player&amp;quot;,Snared[i]) 
		  and IsUsableSpell(53271) then 
			if PQR_SpellAvailable(53271) then
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Misdirection</Name><Default>false</Default><SpellID>34477</SpellID><Actions></Actions><Lua>if NoKC == true then return false end

if GetSpecialization() == 1 and KC() then
	return false
end


if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil then
  	local cThreat = UnitThreatSituation(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
	
	 -- Set Target for misdirection
	if UnitExists(&amp;quot;focus&amp;quot;)
	  and MisdirectionCheck
	  and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	  and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;) == false then
		PQR_CustomTarget = &amp;quot;focus&amp;quot;
	elseif UnitExists(&amp;quot;pet&amp;quot;)
	  and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;)
	  and PQR_IsOutOfSight(&amp;quot;pet&amp;quot;) == false then
	    PQR_CustomTarget = &amp;quot;pet&amp;quot;
	else
		PQR_CustomTarget = &amp;quot;player&amp;quot;
	end

  -- Cast Misdirection
  	if cThreat == nil or PQR_CustomTarget == &amp;quot;player&amp;quot; then
		return false
  	elseif cThreat &amp;gt;= 1
  	  and PQR_SpellAvailable(34477) 
  	  and PQI_SoapboxHunter_Misdirection_enable then	
		return true
  	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TRAP] Freezing</Name><Default>false</Default><SpellID>1499</SpellID><Actions></Actions><Lua>if Nova_Freezing ~= 1 then return false end

if IsMounted() then
return false
end

if not UnitBuffID(&amp;quot;player&amp;quot;, 77769) then 
CastSpellByID(77769, &amp;quot;player&amp;quot;)
end

if IsUsableSpell(1499)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(1499)))
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TRAP] Explosive</Name><Default>false</Default><SpellID>13813</SpellID><Actions></Actions><Lua>if Nova_Explosive ~= 1 then return false end

if IsMounted() then
return false
end

if not UnitBuffID(&amp;quot;player&amp;quot;, 77769) then 
CastSpellByID(77769, &amp;quot;player&amp;quot;)
end

if IsUsableSpell(13813)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(13813)))
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TRAP] Ice</Name><Default>false</Default><SpellID>13809</SpellID><Actions></Actions><Lua>if Nova_Ice ~= 1 then return false end

if IsMounted() then
return false
end

if not UnitBuffID(&amp;quot;player&amp;quot;, 77769) then 
CastSpellByID(77769, &amp;quot;player&amp;quot;)
end

if IsUsableSpell(13809)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(13809)))
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[TRAP] Snake</Name><Default>false</Default><SpellID>34600</SpellID><Actions></Actions><Lua>if Nova_Snake ~= 1 then return false end

if IsMounted() then
return false
end

if not UnitBuffID(&amp;quot;player&amp;quot;, 77769) then 
CastSpellByID(77769, &amp;quot;player&amp;quot;)
end

if IsUsableSpell(34600)
and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(34600)))
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Camouflage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 51755) then
	CastCamo = nil
end

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
  and not UnitBuffID(&amp;quot;player&amp;quot;, 51755) 
  and not UnitBuffID(&amp;quot;player&amp;quot;, 126554) 
  and CastCamo == nil then
	CastCamo = GetTime()
end

if Nova_Camoflage == 1
  and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
  and CastCamo ~= nil 
  and CastCamo &amp;lt; GetTime() - 1 then
	CastSpellByName(GetSpellInfo(51753))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Potions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not IsInRaid() then return false end 
if not PQI_SoapboxHunter_Potions_enable then return false end


if GetItemCount(76089) &amp;lt; 1 then return false end
if GetItemCooldown(76089) ~= 0 then return false end
if not SpecialUnit() then return false end

if cTime &amp;lt; 60 then return false end


if not PQ_HasHero() then return false end
---if not PQR_SpellAvailable(121818) then return false end

UseItemByName(76089)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MACRO] Deterrance</Name><Default>false</Default><SpellID>19263</SpellID><Actions></Actions><Lua>if Nova_Deter ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Boss Special: Hunter---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxHunter_BossFunctions_enable then return false end

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		elseif npcID == 71161 or npcID == 71157 or npcID == 71156 or npcID == 71155 or npcID == 71160 or npcID == 71154 or npcID == 71152 or npcID == 71158 or npcID == 71153 then ---Klaxxi
			if UnitBuffID(&amp;quot;player&amp;quot;,141857) and not UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if PQR_SpellAvailable(143373) then
				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				return true
				end
			end
			if UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144275) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
				return true
				elseif not UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144276) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton3&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144274) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144181) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton4&amp;quot;)
				return true
				end
			end
		elseif npcID == 71515 then  ---General Nazgrim
			if UnitBuffID(&amp;quot;target&amp;quot;,71) then
			SpellStopCasting()
			PetFollow()
			return true
			end
		--elseif npcID == 71543 then  ---Immersius
		--	if UnitBuffID(&amp;quot;target&amp;quot;,143574) then
		--	SpellStopCasting()
		--	PetFollow()
		--	return true
		--	end
		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end
-- Fading Light
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) then
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 1.3 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end
	
-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
if HoT == GetSpellInfo(103327) then
	if timer/1000 - GetTime() &amp;lt; 1.3 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end	
end

-- Avoid Fragmentation on Madness
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791)) - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

-- Spine of Deathwing
if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitAura(&amp;quot;player&amp;quot;, &amp;quot;Parachute&amp;quot;) then
		RunMacroText(&amp;quot;/cancelaura Parachute&amp;quot;)
	end
end

-- Darkmoon Faerie Cannon
if select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) and select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116)) - GetTime() &amp;lt; 1.07 then 
	CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) 
end

-- Bloody Knives Boss Horde Krassarang Wilds.
local BloodyKnives = UnitDebuffID(&amp;quot;player&amp;quot;,135343)
if BloodyKnives then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end

-- Pvp Flag
local flag = { &amp;quot;Alliance Flag&amp;quot;, &amp;quot;Horde Flag&amp;quot;, &amp;quot;Netherstorm Flag&amp;quot; }
for i=1,#flag do InteractUnit(flag[i]) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---No Target---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;Target&amp;quot;) == nil 
or UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) ~= 1
or UnitIsDead(&amp;quot;target&amp;quot;)

then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxHunter_AutoTargetNextEnemy_enable then return false end

if (UnitExists(&amp;quot;Target&amp;quot;) == nil 
or (UnitExists(&amp;quot;Target&amp;quot;) and UnitIsDead(&amp;quot;Target&amp;quot;)))
and UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>No Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;Target&amp;quot;) == nil then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Serpent Sting (Mouseover)</Name><Default>false</Default><SpellID>1978</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end

if not PQI_SoapboxHunter_MouseoverSerpentSting_enable then return false end

if GetSpecialization() == 1 and KC() then
	return false
end

if TargetValidation(&amp;quot;mouseover&amp;quot;,1978) then
---if T2D(&amp;quot;mouseover&amp;quot;) &amp;lt; 10 then return false end
	if not UnitDebuffID(&amp;quot;mouseover&amp;quot;, 1978, &amp;quot;PLAYER&amp;quot;) then
  	return true
	end
end</Lua><RecastDelay>1000</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV] Explosive Shot (Mouseover)</Name><Default>false</Default><SpellID>53301</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end


if not UnitDebuffID(&amp;quot;target&amp;quot;, 53301, &amp;quot;PLAYER&amp;quot;) then return false end
if not PQI_SoapboxHunter_MouseoverSerpentSting_enable then return false end



if TargetValidation(&amp;quot;mouseover&amp;quot;,1978) then
---if T2D(&amp;quot;mouseover&amp;quot;) &amp;lt; 10 then return false end
	if not UnitDebuffID(&amp;quot;mouseover&amp;quot;, 53301, &amp;quot;PLAYER&amp;quot;) then
  	return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Aimed Shot</Name><Default>false</Default><SpellID>19434</SpellID><Actions></Actions><Lua>if Targethealth &amp;gt; 80 then return false end
if Nova_AOE == 1 then return false end
if Nova_Hold == 1 then return false end

local PlayerSpec = GetSpecialization()
local Aimed = select(7,GetSpellInfo(19434))/1000+.01
if PlayerSpec == 2 then
	if Aimed &amp;lt; 1.6 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKs] ToTH</Name><Default>false</Default><SpellID>3044</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return false end

if Nova_Hold == 1 then return false end

local PlayerSpec = GetSpecialization()

if PlayerSpec == 2 then

if UnitBuffID(&amp;quot;player&amp;quot;, 34720) then
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Fire!</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end

local PlayerSpec = GetSpecialization()

if PlayerSpec == 2 then

if UnitBuffID(&amp;quot;player&amp;quot;, 82926) then
CastSpellByName(GetSpellInfo(19434))
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] AOE</Name><Default>false</Default><SpellID>2643</SpellID><Actions></Actions><Lua>if IsPlayerSpell(120360) and PQR_SpellAvailable(120360) then return false end

if Nova_Hold == 1 then return false end
if Nova_AOE ~= 1 then return false end

if GetSpecialization() == 1 then
if Nova_Cooldowns == 1 and PQR_SpellAvailable(19574) then return false end
end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ALL] Cleave</Name><Default>false</Default><SpellID>2643</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end
if Nova_Cleave ~= 1 then return false end



if GetSpecialization() == 1 then 
if IsPlayerSpell(131894) and PQR_SpellAvailable(131894) and Nova_Cooldowns == 1 and Burn == true and (not PQI_SoapboxHunter_BossCooldowns_enable or SpecialUnit()) then return false end
if Nova_Cooldowns == 1 and PQR_SpellAvailable(19574) then return false end

if Cleave then
	if Cleavetimer - GetTime() &amp;lt; 1.5 then
	return true
	end
else
return true
end
elseif GetSpecialization() == 3 then 


	if (UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 55 and UnitBuffID(&amp;quot;player&amp;quot;, 109306))
	  or (UnitBuffID(&amp;quot;player&amp;quot;, 56453) and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 55) then
    	return true
	elseif GetSpellCD(3674) &amp;lt; 1.5 and GetSpellCD(53301) &amp;lt; 1.5 and UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 90 then
	return true
	elseif UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 76 then
    	return true
	end
else
return false
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Kill Shot</Name><Default>false</Default><SpellID>53351</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end 

if GetSpecialization() == 2 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Steady Focus -low-</Name><Default>false</Default><SpellID>56641</SpellID><Actions></Actions><Lua>if Targethealth &amp;gt; 80 then return false end
if GetSpecialization() ~= 2 then return false end

local Steady = select(7,GetSpellInfo(56641))/1000+.01

if SteadyFocus == true and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(56641) then return false end


if SteadyBuff then
	if SteadyBufftimer - GetTime() &amp;lt; Steady+1 then
	return true
	end
else
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Chimera Shot</Name><Default>false</Default><SpellID>53209</SpellID><Actions></Actions><Lua>if Nova_Hold == 1 then return false end
if Nova_AOE == 1 then return false end

if GetSpecialization() == 2 then
UseInventoryItem(10)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Serpent Sting</Name><Default>false</Default><SpellID>1978</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return false end

if GetSpecialization() == 2 then 

if MindControlled(&amp;quot;target&amp;quot;) then return false end


if T2D(&amp;quot;target&amp;quot;) &amp;lt; 10 then return false end

if SerpentSting == nil then
return true
end
end</Lua><RecastDelay>1500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MARKS] Steady Focus -high-</Name><Default>false</Default><SpellID>56641</SpellID><Actions></Actions><Lua>if GetSpecialization() ~= 2 then return false end

local Steady = select(7,GetSpellInfo(56641))/1000+.01


if SteadyFocus == true and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(56641) then return false end
if SteadyFocus == false then return false end


if SteadyBuff then
	if SteadyBufftimer - GetTime() &amp;lt;= 4 then
	return true
	end
else
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Serpent Sting</Name><Default>false</Default><SpellID>1978</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return false end
if Targethealth &amp;lt;= 80 then return false end

if GetSpecialization() == 2 then 

if MindControlled(&amp;quot;target&amp;quot;) then return false end


if T2D(&amp;quot;target&amp;quot;) &amp;lt; 10 then return false end

if SerpentSting == nil then
return true
end
end</Lua><RecastDelay>1500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Chimera Shot</Name><Default>false</Default><SpellID>53209</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return false end
if Targethealth &amp;lt;= 80 then return false end

if Nova_Hold == 1 then return false end
if Nova_AOE == 1 then return false end

if GetSpecialization() == 2 then
UseInventoryItem(10)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Steady Focus</Name><Default>false</Default><SpellID>56641</SpellID><Actions></Actions><Lua>if Targethealth &amp;lt;= 80 then return false end

if GetSpecialization() ~= 2 then return false end

local Steady = select(7,GetSpellInfo(56641))/1000+.01

if SteadyFocus == true and UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(56641) then return false end
if SteadyFocus == false then return false end


if SteadyBuff then
	if SteadyBufftimer - GetTime() &amp;lt; 6 then
	return true
	end
else
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Aimed Shot</Name><Default>false</Default><SpellID>19434</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(56641) and not SteadyBuff then return false end

if not SteadyBuff and SteadyFocus == true then return false end


if Targethealth &amp;lt;= 80 then return false end

if Nova_Hold == 1 then return false end

local PlayerSpec = GetSpecialization()

if PlayerSpec == 2 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Glaive Toss</Name><Default>false</Default><SpellID>117050</SpellID><Actions></Actions><Lua>if Targethealth &amp;lt;= 80 then return false end

if Nova_Hold == 1 then return false end

if GetSpecialization() == 2 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Steady Shot</Name><Default>false</Default><SpellID>56641</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 then return false end
if Targethealth &amp;lt;= 80 then return false end

if GetSpecialization() == 2 then
return true
end</Lua><RecastDelay>150</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV/MARKS] Stampede</Name><Default>false</Default><SpellID>121818</SpellID><Actions></Actions><Lua>if GetSpecialization() == 1 then return false end
if Nova_Hold == 1 then return false end
if Nova_Cooldowns ~= 1 then return false end
if Burn == false then return false end
if not PQI_SoapboxHunter_AutoStampede_enable then return false end
if PQI_SoapboxHunter_BossCooldowns_enable and not SpecialUnit() then return false end

if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SURV/MARKS] Rapid Fire</Name><Default>false</Default><SpellID>3045</SpellID><Actions></Actions><Lua>if GetSpecialization() == 1 then return false end

if Nova_Hold == 1 then return false end
if Nova_Cooldowns ~= 1 then return false end

if not PQI_SoapboxHunter_AutoRapidFire_enable then return false end

   	if t16count &amp;gt; 1 and AoC() then
		if Nova_Cooldowns == 1 
		and Burn == true
		and PQI_SoapboxHunter_AutoRapidFire_enable
	  	and not UnitBuffID(&amp;quot;player&amp;quot;, 3045)
	  	and GetSpellCD(3045) &amp;lt; 0.1 then 
	  		if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
			return true
			end
		end
	end
if PQI_SoapboxHunter_BossCooldowns_enable and not SpecialUnit() then return false end

if Burn == false then return false end

	if not UnitBuffID(&amp;quot;player&amp;quot;, 3045) 
	and (t16count &amp;gt; 1 or not PQ_HasHero()) then
		if TargetValidation(&amp;quot;target&amp;quot;, 1978) then
		return true
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CAREFUL] Fire!</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Targethealth &amp;lt;= 80 then return false end

if Nova_Hold == 1 then return false end

local PlayerSpec = GetSpecialization()

if PlayerSpec == 2 then

if UnitBuffID(&amp;quot;player&amp;quot;, 82926) then
CastSpellByName(GetSpellInfo(19434))
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>test</Name><Default>false</Default><SpellID>56641</SpellID><Actions></Actions><Lua>local SpellCast = select(1,UnitCastingInfo(&amp;quot;player&amp;quot;))
if Nova_Hold == 1 then return true end

if GetSpecialization() == 1 then


	if KC() and Nova_AOE ~= 1 and UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 37 then
		return false
	end
	
	if SpellCast == GetSpellInfo(77767) and Nova_AOE ~= 1
	  and ((Focus &amp;gt; 24 and (GetSpellCD(34026) &amp;lt; 0.7 and KC1())) or Focus &amp;gt; 65) then
	  	StopCobra = true
	end
	
	if StopCobra
	  and ((GetSpellCD(34026) &amp;lt; 1.4 and Focus &amp;lt; 35 and KC1())
	  or (GetSpellCD(34026) &amp;gt; 1.3 and Focus &amp;lt; 60 and KC1())) then
	  	StopCobra = false
	end
	
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	  and not StopCobra
	  and Focus &amp;lt; 79 
	  and ((KC1() and GetSpellCD(34026) &amp;gt; 1.7) or Focus &amp;lt; 37) then
		return true
	end
end

if GetSpecialization() == 3 then
Cobra = select(7,GetSpellInfo(56641))/1000+.01
	---if Cobra &amp;gt; GetSpellCD(53301)+0.2 and Focus &amp;gt;= 25 then return false end
	---if Cobra &amp;gt; GetSpellCD(3674)+0.2 and T2D(&amp;quot;target&amp;quot;) &amp;gt;= 8 and Focus &amp;gt;= 35 then return false end

	---if SpellCast == GetSpellInfo(77767) and Nova_AOE ~= 1
---	  and (UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 45 or (GetSpellCD(3674) &amp;lt; 0.7 and GetSpellCD(53301) &amp;lt; 0.7 and UnitPower(&amp;quot;player&amp;quot;,2) &amp;gt; 50)) then
---	  	StopCobra = true
---	end
	
---	if StopCobra
---	  and UnitPower(&amp;quot;player&amp;quot;,2) &amp;lt; 40 then
---	  	StopCobra = false
---	end
	
	if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
---	  and not StopCobra
	  and Cobra &amp;lt; GetSpellCD(53301) then
		return true
	end
end

if GetSpecialization() == 2 then
return true
end</Lua><RecastDelay>150</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></HUNTER>