<?xml version="1.0" encoding="utf-8" ?><HUNTER><Ability><Name>--Int</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
PlaySoundFile(&amp;quot;Sound\\\\CREATURE\\\\OokOok\\\\VO_SB_OOK-OOK_SPELL_03.OGG&amp;quot;)
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_HunterPvPss.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PallyPvP.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end
if not StartMsg then
StartMsg = true
xrn:message(&amp;quot;\124cFFCC99FF IT RUBS THE OIL ON THE SKIN OR ELSE IT GETS THE HOSE AGAIN.&amp;quot;)
end

if not macros then
macros = true
if not GetMacroInfo(&amp;quot;RevivePet&amp;quot;) then
CreateMacro(&amp;quot;RevivePet&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Revive Pet\\n/Pett&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Flare&amp;quot;) then
CreateMacro(&amp;quot;Flare&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Flare\\n/Flare&amp;quot;, 1)
end

if not GetMacroInfo(&amp;quot;FreezingTrap&amp;quot;) then
CreateMacro(&amp;quot;FreezingTrap&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Freezing Trap\\n/Freezing&amp;quot;, 1)
end

if not GetMacroInfo(&amp;quot;ExplosiveTrap&amp;quot;) then
CreateMacro(&amp;quot;ExplosiveTrap&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Explosive Trap\\n/Firetrap&amp;quot;, 1)
end

if not GetMacroInfo(&amp;quot;BindingShot&amp;quot;) then
CreateMacro(&amp;quot;BindingShot&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Binding Shot\\n/Bshot&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;WyvernSting&amp;quot;) then
CreateMacro(&amp;quot;WyvernSting&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Wyvern Sting\\n/Wyvern&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Disengage&amp;quot;) then
CreateMacro(&amp;quot;Disengage&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Disengage\\n/diseng&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Web Wrap&amp;quot;) then
CreateMacro(&amp;quot;Web Wrap&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Web Wrap\\n/Webwrap&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Snake Trap&amp;quot;) then
CreateMacro(&amp;quot;Snake Trap&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Snake Trap\\n/Snaketrap&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Deterrence&amp;quot;) then
CreateMacro(&amp;quot;Deterrence&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Deterrence\\n/Detter&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;AoEES&amp;quot;) then
CreateMacro(&amp;quot;AoEES&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Binding Shot\\n/AoEES&amp;quot;, 1)
end
end
	
 
--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = 0,	Text = &amp;quot;pett&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;AoEES&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Wyvern&amp;quot;,		 		Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Webwrap&amp;quot;,		 		Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Diseng&amp;quot;,		 		Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Flare&amp;quot;,		 		Var2 = nil		},	
		{	Var1 = 0,	Text = &amp;quot;Firetrap&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Snaketrap&amp;quot;,		 		Var2 = nil		},	
		{	Var1 = 0,	Text = &amp;quot;Bshot&amp;quot;,		 		Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Detter&amp;quot;,		 		Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Freezing&amp;quot;,			Var2 = nil		}		
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end

	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if not slash then
slash = true

-- revive pet
	SLASH_BURST1 = &amp;quot;/pett&amp;quot;
	function SlashCmdList.BURST(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_pett&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFPet Revive Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_pett&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFPet Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_pett&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
-- flare	
	SLASH_FEARFOCUS1 = &amp;quot;/Flare&amp;quot;
	function SlashCmdList.FEARFOCUS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Flare&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFlare Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Flare&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFFlare Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Flare&amp;quot;, 0)
		end
	end


--freezing trap
SLASH_FREEZING1 = &amp;quot;/Freezing&amp;quot;
	function SlashCmdList.FREEZING(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Freezing&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF freezing Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Freezing&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF freezing Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Freezing&amp;quot;, 0)
		end
	end


--fire trap
SLASH_FIRETRAP1 = &amp;quot;/Firetrap&amp;quot;
	function SlashCmdList.FIRETRAP(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Firetrap&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Firetrap Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Firetrap&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Firetrap Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Firetrap&amp;quot;, 0)
		end
	end


--Blinding shot
SLASH_BSHOT1 = &amp;quot;/Bshot&amp;quot;
	function SlashCmdList.BSHOT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Bshot&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Bullshit shot Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Bshot&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Bullshit shot Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Bshot&amp;quot;, 0)
		end
	end

SLASH_WYVERN1 = &amp;quot;/Wyvern&amp;quot;
	function SlashCmdList.WYVERN(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Wyvern&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Wyvern sting focus Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Wyvern&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Wyvern Sting focus Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Wyvern&amp;quot;, 0)
		end
	end
	
SLASH_DISENG1 = &amp;quot;/Diseng&amp;quot;
	function SlashCmdList.DISENG(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Diseng&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Diseng Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Diseng&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Diseng Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Diseng&amp;quot;, 0)
		end
	end

SLASH_WEBWRAP1 = &amp;quot;/Webwrap&amp;quot;
	function SlashCmdList.WEBWRAP(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Webwrap&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Webwrap Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Webwrap&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Webwrap Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Webwrap&amp;quot;, 0)
		end
	end
	SLASH_SNAKE1 = &amp;quot;/Snaketrap&amp;quot;
	function SlashCmdList.SNAKE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Snaketrap&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Snaketrap Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Snaketrap&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Snaketrap Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Snaketrap&amp;quot;, 0)
		end
	end
	SLASH_DETTER1 = &amp;quot;/Detter&amp;quot;
	function SlashCmdList.DETTER(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Detter&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Deterrence Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Detter&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Deterrence Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Detter&amp;quot;, 0)
		end
	end
	SLASH_AOEES1 = &amp;quot;/AoEES&amp;quot;
	function SlashCmdList.AOEES(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AoEES&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF AOE IS ON.&amp;quot;)
			SetCVar(&amp;quot;Nova_AoEES&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF AOE IS OFF.&amp;quot;)
			SetCVar(&amp;quot;Nova_AoEES&amp;quot;, 0)
		end
	end

end



-- Detter AoEES Nova_AoEES == 1
if UnitBuffID(&amp;quot;player&amp;quot;, 19263) 
and Nova_Detter == 1 then
SetCVar(&amp;quot;Nova_Detter&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF HAHA Engaged!.&amp;quot;)
end
-- Disengage
if cdRemains(781) &amp;gt; 2 
and Nova_Diseng == 1 then
SetCVar(&amp;quot;Nova_Diseng&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Diseng Engaged!.&amp;quot;)
end
--Explosive trap
if cdRemains(82939) &amp;gt; 2 
and Nova_Firetrap == 1 then
SetCVar(&amp;quot;Nova_Firetrap&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Firetrap Engaged!.&amp;quot;)
end
-- Freezing trap
if cdRemains(60192) &amp;gt; 2 
and Nova_Freezing == 1 then
SetCVar(&amp;quot;Nova_Freezing&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Freezing Trap Engaged!.&amp;quot;)
end
-- Snake trap
if cdRemains(82948) &amp;gt; 2 
and Nova_Snaketrap == 1 then
SetCVar(&amp;quot;Nova_Snaketrap&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Snaketrap Engaged!.&amp;quot;)
end
-- Flare
if cdRemains(1543) &amp;gt; 2 
and Nova_Flare == 1 then
SetCVar(&amp;quot;Nova_Flare&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FFI herd you like X, so I put an X in your Y .&amp;quot;)
end
-- OPTIONS -- 
--DetV = PQI_SigHunter_Deterrence_value --Deterrence
--DetE = PQI_SigHunter_Deterrence_enable --Deterrence
HealthstoneV = PQI_SigHunter_Healthstone_value --Heal others value
HealthstoneE = PQI_SigHunter_Healthstone_enable --Heal others enable
MBW            = PQI_SigHunter_ManualBeastw_enable
FullPikk     = PQI_SigHunter_FullPikk_enable
AutoTarget   = PQI_SigHunter_AutoTarget_enable
AutoBeast    = PQI_SigHunter_AutoBeast_enable
PetF         = PQI_SigHunter_PetFollow_value
WyvernStingV = PQI_SigHunter_WyvernSting_value
AutoWyvern   = PQI_SigHunter_AutoWyvern_enable
AutoFocus    = PQI_SigHunter_AutoFocus_enable

--Keybinds
Tier2Key        	= PQI:IsHotkeys(PQI_SigHunter_Tier_key) 
AoeKey              = PQI:IsHotkeys(PQI_SigHunter_AoeKey_key)



if not PQI_SigHunter_BurstKey_enable then 
	burstKey				= IsMouseButtonDown(3)
else 
 	burstKey				= PQI:IsHotkeys(PQI_SigHunter_BurstKey_key)
end



if not PQI_SigRet_Pause_enable then 
	PauseKey = false
end
if not PQI_SigRet_BlindingLightkey_enable then 
	DefenciveKey = false 
end


if PauseKey
or IsMounted() then
	return true
end

if not UnitBuffID(&amp;quot;player&amp;quot;,77769)
then
CastSpellByName(GetSpellInfo(77769))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Start</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PauseKey
or IsMounted() 
--or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;)
or UnitBuffID(&amp;quot;player&amp;quot;, 19263)
or UnitDebuffID(&amp;quot;target&amp;quot;, 1499)
or UnitDebuffID(&amp;quot;target&amp;quot;, 19503) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or Nova_pett == 1 
or Nova_Detter == 1 
--or not UnitExists(&amp;quot;target&amp;quot;) 
then
	return true
end

if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 70 then
goRage = 1
end
if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 30 
and not UnitBuffID(&amp;quot;player&amp;quot;, 34471) then
goRage = 0
end
--local start, duration, enable = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 13)
--if goRage == 1
--and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0
--and GetTime() - start &amp;lt; 50
--and Focus &amp;gt; 60 
--then
--UseInventoryItem(10) 
--end


	PlayerHP				= Nova_UnitInfo(&amp;quot;player&amp;quot;) 
	PlayerPetHP             = Nova_UnitInfo(&amp;quot;pet&amp;quot;) 
	PlayerCombat 			= UnitAffectingCombat(&amp;quot;player&amp;quot;)
	Focus                   = UnitPower(&amp;quot;player&amp;quot;)
	Frenzy                  = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 19615))
	EnemyHP                 = Nova_TargetInfo(&amp;quot;target&amp;quot;)
	
	-- Target Related
    ssdot                   = select(7, UnitDebuffID(&amp;quot;target&amp;quot;, 1978, &amp;quot;PLAYER&amp;quot;))
    
    

if PlayerPetHP &amp;gt; PetF 
--and PQR_UnitDistance(&amp;quot;player&amp;quot;,&amp;quot;pet&amp;quot;) &amp;lt; 60 
then
	if (UnitIsUnit(&amp;quot;pettarget&amp;quot;, &amp;quot;target&amp;quot;)) == nil 
	then
		if UnitExists(&amp;quot;target&amp;quot;)
		and PQR_IsOutOfSight(&amp;quot;target&amp;quot;) == false
		and not UnitDebuffID(&amp;quot;target&amp;quot;, 1499)
		and not UnitDebuffID(&amp;quot;target&amp;quot;, 19503)
		and not UnitBuffID(&amp;quot;player&amp;quot;, 5384)
		then 
		--print(PQR_UnitDistance(&amp;quot;player&amp;quot;,&amp;quot;pet&amp;quot;))
		PetAttack() 
	elseif (UnitIsUnit(&amp;quot;playertarget&amp;quot;, &amp;quot;target&amp;quot;)) == nil 
    	then 
        	if UnitExists(&amp;quot;pettarget&amp;quot;)
        	and PQR_IsOutOfSight(&amp;quot;pettarget&amp;quot;) == false
        	and not UnitDebuffID(&amp;quot;pettarget&amp;quot;, 1499)
        	and not UnitDebuffID(&amp;quot;pettarget&amp;quot;, 19503)
        	and not UnitBuffID(&amp;quot;player&amp;quot;, 5384) 
        	then 
        	TargetUnit(&amp;quot;PetTarget&amp;quot;)
        	AttackTarget()
end
end
end
elseif PlayerPetHP &amp;lt; PetF 
--or PQR_UnitDistance(&amp;quot;player&amp;quot;,&amp;quot;pet&amp;quot;) &amp;gt; 60
then
	if UnitExists(&amp;quot;pet&amp;quot;) 
	and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
	then
	PetFollow()
end
end

if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 70 then
goRage2 = 1
end
if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 40 then
goRage2 = 0
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Arcane Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local EXPLOSIVE = PQR_SpellAvailable(53301)

local SI = 3044
if AoeKey 
or Nova_AoEES == 1
then
SI = 2643
end



if (goRage == 1 or UnitBuffID(&amp;quot;player&amp;quot;, 34720)) 
--and IsFacing
and Focus &amp;gt; 10
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not ImmuneCC(&amp;quot;target&amp;quot;)
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
then
_castSpell(SI, &amp;quot;target&amp;quot;) 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: Cobra Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if goRage == 0
--and IsFacing
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not ImmuneCC(&amp;quot;target&amp;quot;)
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
then
_castSpell(56641,&amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Kill Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if EnemyHP &amp;lt;= 20
--and IsFacing
and PQR_SpellAvailable(53351)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
and not ImmuneCC(&amp;quot;target&amp;quot;)
then
SpellStopCasting()
_castSpell(53351, &amp;quot;target&amp;quot;) 

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Kill Command</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;)
and GCDCheck(34026)
and IsSpellInRange(tostring(GetSpellInfo(2649)), &amp;quot;pettarget&amp;quot;) == 1
and not UnitIsDead(&amp;quot;pet&amp;quot;)
and PQR_IsOutOfSight(&amp;quot;pettarget&amp;quot;) == false
--and goRage == 1
and Focus &amp;gt;= 40
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not ImmuneCC(&amp;quot;target&amp;quot;)
and (cdRemains(19574) &amp;gt; 6 or AutoBeast)
--and UnitBuffID(&amp;quot;player&amp;quot;, 34471)
then
_castSpell(34026, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Serpent&amp;apos;s Sting</Name><Default>false</Default><SpellID>1978</SpellID><Actions></Actions><Lua>if not ssdot
--and IsFacing
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not ImmuneCC(&amp;quot;target&amp;quot;)
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
then
_castSpell(1978,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD: Bestial Wrath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 34692)
and not AutoBeast
and Focus &amp;gt; 60
and IsSpellInRange(tostring(GetSpellInfo(2649)), &amp;quot;pettarget&amp;quot;) == 1
and goRage == 1
and PQR_SpellAvailable(19574)
and UnitExists(&amp;quot;target&amp;quot;)
and UnitExists(&amp;quot;pet&amp;quot;)
and not UnitIsDead(&amp;quot;pet&amp;quot;)
and not ImmuneCC(&amp;quot;target&amp;quot;)
and ssdot
then
UseInventoryItem(13)
_castSpell(19574)
end

--if ooker == 3 then
--if UnitBuffID(&amp;quot;player&amp;quot;, 34471)
--then
--ooker = 1
--if ooker == 1
--then
--ooker = 0
--local Saff = &amp;quot;Sound\\\\CREATURE\\\\OokOok\\\\VO_SB_OOK-OOK_AGGRO_01.OGG&amp;quot;
--PlaySoundFile (Saff)
--end
--end
--end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD: Focus Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Frenzy == 5 
and Focus &amp;lt; 20
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(82692)
then
_castSpell(82692) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pet: Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;)
    and not UnitIsDead(&amp;quot;pet&amp;quot;)
	and PlayerPetHP &amp;lt; 95
	and not UnitIsDeadOrGhost(&amp;quot;pet&amp;quot;) 
	and PQR_IsOutOfSight(&amp;quot;pet&amp;quot;) == false 
	and not UnitBuffID(&amp;quot;pet&amp;quot;, 136)
then
_castSpell(136, &amp;quot;pet&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trap:Freexing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local FreezingTrap = GetSpellInfo(1499)
local targetName = UnitName(&amp;quot;mouseover&amp;quot;)
if FreezingTrapkey 
or Nova_Freezing == 1
and UnitExists(&amp;quot;mouseover&amp;quot;)
and PQR_SpellAvailable(19503)
and not UnitIsUnit(&amp;quot;mouseover&amp;quot;,&amp;quot;target&amp;quot;) 
and not ImmuneCC(&amp;quot;mouseover&amp;quot;)
--and not HaveDebuff(&amp;quot;mouseover&amp;quot;,cccheck(),3)
--and UnitIsPlayer(&amp;quot;mouseover&amp;quot;) 
then
SpellStopCasting()
_castSpell(19503, &amp;quot;mouseover&amp;quot;)
end
if FreezingTrapkey
or Nova_Freezing == 1
and cdRemains(19503) &amp;gt; 15 --or HaveDebuff(&amp;quot;mouseover&amp;quot;,cccheck(),2) )
then
SpellStopCasting()
RunMacroText(&amp;quot;/cast &amp;quot;..FreezingTrap)
if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trap:Explosive</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--if GetSpellCooldown(82939) == 0 then
--trapcast = 82939
--else
--trapcast = 82948
--end

if Nova_Firetrap == 1 then
    SpellStopCasting()  
	CastSpellByName(tostring(GetSpellInfo(82939)))
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD: Deterrence</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>PlayerHP1 = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
if Nova_Detter == 1 
or PlayerHP1 &amp;lt; 25
then
SpellStopCasting()
_castSpell(19263)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD:Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HealthstoneE then
if PlayerHP &amp;lt;= HealthstoneV
	and GetItemCount(5512) == 1 
	and select(3,GetItemCooldown(5512)) == 1
then 
	UseItemByName(5512)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target tank</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoTarget then
if UnitInRaid(&amp;quot;player&amp;quot;) or UnitInParty(&amp;quot;player&amp;quot;) then

local InParty = GetNumSubgroupMembers()
if InParty &amp;gt; 0 then
for i = 1, InParty, 1 do
if UnitGroupRolesAssigned(&amp;quot;party&amp;quot;..tostring(i)) == &amp;quot;TANK&amp;quot; then heisthetank = &amp;quot;party&amp;quot;..tostring(i) end
end
if not UnitExists(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;target&amp;quot;) ~= nil
then
if heisthetank --and UnitExists(&amp;quot;target&amp;quot;) == nil
and UnitAffectingCombat(heisthetank) 
and UnitAffectingCombat(heisthetank..&amp;quot;target&amp;quot;) 
and UnitIsDead(heisthetank..&amp;quot;target&amp;quot;) == nil
and UnitCanAttack(&amp;quot;player&amp;quot;,heisthetank..&amp;quot;target&amp;quot;)
then 
TargetUnit(heisthetank..&amp;quot;target&amp;quot;)
PetAttack()
AttackTarget()
end
end
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Aspect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm() ~= 1
and PlayerCombat 
then 
    CastShapeshiftForm(1)
end

if GetShapeshiftForm() ~= 2
and not PlayerCombat 
then
CastShapeshiftForm(2)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Talent 4</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(82726) then
if Focus &amp;lt;= 65
and not UnitBuffID(&amp;quot;player&amp;quot;, 82726)
and not UnitBuffID(&amp;quot;player&amp;quot;, 34692)
then
_castSpell(82726)
end
elseif IsPlayerSpell(120679) 
and goRage == 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not ImmuneCC(&amp;quot;target&amp;quot;)
then
_castSpell(120679, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Talent 5</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(131894) 
then
if goRage == 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not ImmuneCC(&amp;quot;target&amp;quot;) 
then 
_castSpell(131894, &amp;quot;target&amp;quot;)
end

elseif IsPlayerSpell(120697)
then
if goRage == 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not ImmuneCC(&amp;quot;target&amp;quot;)
then 
_castSpell(120697, &amp;quot;target&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Talent 6</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Glaive Toss
if IsPlayerSpell(117050) 
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
then
if Focus &amp;gt;= 15
--goRage == 1
and (cdRemains(19574) &amp;gt; 15 or AutoBeast)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not ImmuneCC(&amp;quot;target&amp;quot;)
then 
_castSpell(117050, &amp;quot;target&amp;quot;)
end
--Powershot 
elseif IsPlayerSpell(109259)
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
then
if goRage == 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not ImmuneCC(&amp;quot;target&amp;quot;)
then 
_castSpell(109259, &amp;quot;target&amp;quot;)
end
--Barrage
elseif IsPlayerSpell(120360)
and IsLineOfSight(&amp;quot;target&amp;quot;, 1)
then
if goRage == 1
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not ImmuneCC(&amp;quot;target&amp;quot;)
then 
_castSpell(120360, &amp;quot;target&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD: Full Pikk</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey 
or (FullPikk and goRage == 1 and UnitBuffID(&amp;quot;player&amp;quot;, 34471) ) 
then
goRage = 1
--Trinkets
if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 
then 
UseInventoryItem(13) 
end
	
--Orc
if PQR_SpellAvailable(33697) 
then
--_castSpell(20572)
CastSpellByName(tostring(GetSpellInfo(33697)))  
end
-- Rapid fire
if PQR_SpellAvailable(3045) 
then
_castSpell(3045) 
end

--BW
if PQR_SpellAvailable(19574) 
then
_castSpell(19574) 
end
if PQR_SpellAvailable(121818) 
then
_castSpell(121818)
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Beast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local getOutofCC = {	
						44572,		-- Deep Freeze
						110698,		-- Hammer of Justice 
						105593,		-- Fist of Justice
						853,		    -- Hammer of Justice
						108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	33786,		-- Cyclone
	2637,		-- Hibernate
	22570,		-- Maim
	5211,		-- Mighty Bash
	110698,		-- Hammer of Justice 
	113004,		-- Intimidating Roar 
	113056,		-- Intimidating Roar 
	117526,		-- Binding Shot
	3355,		-- Freezing Trap
	19503,		-- Scatter Shot
	19386,		-- Wyvern Sting
	90337,		-- Bad Manner 
	24394,		-- Intimidation
	50519,		-- Sonic Blast 
	56626,		-- Sting 
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	31661,		-- Dragon&amp;apos;s Breath
	118,		-- Polymorph
	61305,		-- Polymorph: Black Cat
	28272,		-- Polymorph: Pig
	61721,		-- Polymorph: Rabbit
	61780,		-- Polymorph: Turkey
	28271,		-- Polymorph: Turtle
	82691,		-- Ring of Frost
	123393,		-- Breath of Fire 
	119381,		-- Leg Sweep
	115078,		-- Paralysis
	105421,		-- Blinding Light
	115752,		-- Blinding Light 
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	20066,		-- Repentance
	10326,		-- Turn Evil
	113506,		-- Cyclone 
	605,		-- Dominate Mind
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror 
	9484,		-- Shackle Undead
	87204,		-- Sin and Punishment
	2094,		-- Blind
	1833,		-- Cheap Shot
	1776,		-- Gouge
	408,		-- Kidney Shot
	113953,		-- Paralysis 
	76780,		-- Bind Elemental
	77505,		-- Earthquake
	51514,		-- Hex
	118905,		-- Static Charge 
	118345,		-- Pulverize
	5782,		-- Fear 
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	104045,		-- Sleep 
	89766,		-- Axe Toss 
	115268,		-- Mesmerize 
	6358,		-- Seduction 
	5246,		-- Intimidating Shout 
	20511,		-- Intimidating Shout 
	132168,		-- Shockwave
}

if AutoBeast then
	if PQR_SpellAvailable(19574) then
		for i = 1, #getOutofCC do
			if UnitDebuffID(&amp;quot;player&amp;quot;, getOutofCC[i]) then
			_castSpell(19574)
			end
		end
	end                         
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pet: Revive</Name><Default>false</Default><SpellID>982</SpellID><Actions></Actions><Lua>--if Petspell == nil then
--Petspell = 883
--end

--
--if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
--if PetV == 1
--then Petspell = 883
--elseif PetV == 2
--then Petspell = 83242
--elseif PetV == 3
--then Petspell = 83243
--elseif PetV == 4
--then Petspell = 83244
--elseif PetV == 5
--then Petspell = 83245
--end
--end

if UnitExists(&amp;quot;pet&amp;quot;)
and Nova_pett == 1  
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
then
xrn:message(&amp;quot;\124cFFCC99FF Den leve &amp;quot;)
SetCVar(&amp;quot;Nova_pett&amp;quot;, 0)
end


if Nova_pett == 1 
then
_castSpell(982) 
SetCVar(&amp;quot;Nova_pett&amp;quot;, 0)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Talent 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Bshot == 1 then
if IsPlayerSpell(109248)
then
SpellStopCasting()  
CastSpellByName(tostring(GetSpellInfo(109248)))
if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Key:Flare</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Flare == 1 then
    SpellStopCasting()  
	_castSpell(1543)
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoFocus 
then
for j=1 , #cTar do
if not UnitExists(&amp;quot;focus&amp;quot;) 
and UnitExists(cTar[j])
and not UnitIsDeadOrGhost(cTar[j])
and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
and UnitIsPlayer(cTar[j])
and IsHealer(cTar[j])
and rangeCheck(1978,cTar[j])
then
FocusUnit(cTar[j])
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key disengage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Diseng == 1 
then
SpellStopCasting()
_castSpell(781)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trap:Snake</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Snaketrap == 1 then
    SpellStopCasting()  
	CastSpellByName(tostring(GetSpellInfo(82948)))
	if SpellIsTargeting() then 
		CameraOrSelectOrMoveStart()
		CameraOrSelectOrMoveStop()
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></HUNTER>