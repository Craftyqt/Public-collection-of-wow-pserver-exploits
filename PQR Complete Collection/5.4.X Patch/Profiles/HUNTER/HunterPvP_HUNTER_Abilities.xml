<?xml version="1.0" encoding="utf-8" ?><HUNTER><Ability><Name>PetHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;) 
and not UnitIsDead(&amp;quot;pet&amp;quot;)
and not LineOfSight(&amp;quot;pet&amp;quot;)
and ePet[1].PRange &amp;lt; 40
and PQR_SpellAvailable(136)
and not HaveBuff(&amp;quot;pet&amp;quot;,136)
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;lt; 95 then 
	CastSpellByName(GetSpellInfo(136))
end
 
 
if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 90
and UnitExists(&amp;quot;pet&amp;quot;)
and not UnitIsDead(&amp;quot;pet&amp;quot;)
and UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
and GetSpellCooldown(90361) == 0
and IsSpellInRange(tostring(GetSpellInfo(90361)), &amp;quot;player&amp;quot;) == 1 then
	CastSpellByID(90361, &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Pet</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Interrupt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 	
							-- SHAMAN
							77472, -- Greater Healing Wave
							8004, -- Healing Surge
							51514, -- Hex
							
							-- DRUID
							8936, -- Regrowth 
							5185, -- Healing Touch
							740, -- Tranquility
							33786, -- Cyclone
							2637, -- Hibernate
							
							--PRIEST
							2061, -- Flash Heal
							2060, -- Greater Heal
							32546, -- Binding Heal
							64843, -- Divine Hymn
							47540,  -- Penance
							605, -- Dominate Mind
							9484, -- Shackle Undead
							32375, -- Mass Dispel
							
							--PALADIN
							19750, -- Flash of Light
							82326, -- Divine Light
							7328,  -- Redemption
							54428, -- Divine Plea
							20066, -- Repentance
							
							--MONK
							124682, -- Enveloping Mist
							116694, -- Surging Mist
							
							-- WARLOCK
							5782, -- Fear
							710, -- Banish
							
							-- MAGE
							118, -- Polymorph
							61305, -- Polymorph
							28272, -- Polymorph
							61721, -- Polymorph
							61780, -- Polymorph
							28271, -- Polymorph
							}

interuptID = 147362
if IsSpellKnown(34490) then
	interuptID = 34490
end


if PQR_SpellAvailable(interuptID) then
	for y=1, #cTar do 
		if UnitExists(cTar[y])
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, cTar[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(cTar[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.3 then
						_castSpell(interuptID, cTar[y])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PetControle</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and ((100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;lt; 30
or  ePet[1].PRange &amp;gt; 70)
then
RunMacroText(&amp;quot;/petfollow&amp;quot;)
end


if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
then
RunMacroText(&amp;quot;/petattack target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemKill</Name><Default>false</Default><SpellID>3044</SpellID><Actions></Actions><Lua>local typem= UnitCreatureType(&amp;quot;mouseover&amp;quot;)

if UnitExists(&amp;quot;mouseover&amp;quot;)
and typem == &amp;quot;Totem&amp;quot;
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Serpent Sting</Name><Default>false</Default><SpellID>1978</SpellID><Actions></Actions><Lua>if  UnitExists(&amp;quot;target&amp;quot;) then
	if not HaveDebuff(&amp;quot;target&amp;quot;,1978,3,&amp;quot;player&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and PQR_SpellAvailable(1978)
	 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	and UnitExists(&amp;quot;target&amp;quot;)
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	 then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
--	CastSpellByName(GetSpellInfo(1978), &amp;quot;target&amp;quot;)
	return true
	end
	end</Lua><RecastDelay>1100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Kill Command</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pettarget&amp;quot;)
and PQR_SpellAvailable(34026)
and not LineOfSight(&amp;quot;pettarget&amp;quot;)
and ePet[1].TRange ~= nil
and ePet[1].TRange &amp;lt; 25 
	 then CastSpellByName(GetSpellInfo(34026),&amp;quot;pettarget&amp;quot;)
	 return true
	 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Teir 6 Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Glave Toss
if IsSpellKnown(117050) then
	if IsFacing
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(117050)
	and goRage == 1 then
	_castSpell(117050,&amp;quot;target&amp;quot;)
	end
end

--Power Shot
if IsSpellKnown(109259) then
	if IsFacing
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(109259)
	and goRage == 1 then
	_castSpell(109259,&amp;quot;target&amp;quot;)
	end
end

--Barrage
if IsSpellKnown(120360) then
	if IsFacing
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(120360)
	and goRage == 1 then
	_castSpell(120360,&amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;)
and PQR_SpellAvailable(3044)
and (goRage == 1 or HaveBuff(&amp;quot;player&amp;quot;,34720)) then
	_castSpell(3044,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cobra Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;) then
	_castSpell(77767)
	--CastSpellByName(GetSpellInfo(77767), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Kill Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local spell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;player&amp;quot;)


for i=1, #cTar do
if UnitExists(cTar[i]) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and not UnitIsDeadOrGhost(cTar[i])
and not LineOfSight(cTar[i])
--and UnitInRange(cTar[i])
and not HaveBuff(cTar[i],iDMG(),0) 
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 20
then
if spell
then
SpellStopCasting()
end
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(53351),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Explosive Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;)
and PQR_SpellAvailable(53301)
and not HaveDebuff(&amp;quot;target&amp;quot;,53301,1) 
then
	_castSpell(53301, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Black Arrow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;)
and PQR_SpellAvailable(3674) then
	_castSpell(3674,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or not UnitExists(&amp;quot;target&amp;quot;) then
	return true
end

local ImmuneSpell = {
	-- Death Knight
	-- Druid Symbiosis
	110617, -- Deterrence (Hunter)
	110715, -- Dispersion (Priest)
	110700, -- Divine Shield (Paladin)
	110696, -- Ice Block (Mage)
		-- Hunter
	19263,  -- Deterrence
	-- Hunter Pets
	19574,  -- Bestial Wrath
	-- Mage
	45438,  -- Ice Block
	115760, -- Glyph of Ice Block
	-- Monk
	131523, -- Zen Meditation
	-- Paladin
	642,    -- Divine Shield
	-- Priest
	47585,  -- Dispersion
	114239, -- Phantasm
	-- Rogue
	-- Shaman
	-- Warrior
}


for i=1, #ImmuneSpell do
	if UnitBuffID(&amp;quot;target&amp;quot;,ImmuneSpell[i])
	then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_HunterPvP.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_HunterPvP.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end


-- OPTIONS -- 
FocusPool = PQI_CpoworksHunterPvP_FocusPool_value
HealstoneHP = PQI_CpoworksHunterPvP_Healthstone_value
DeteranceHP = PQI_CpoworksHunterPvP_Deterance_value

UseHealthstone = PQI_CpoworksHunterPvP_Healthstone_enable
AutoDeterance = PQI_CpoworksHunterPvP_Deterance_enable
AutoDisengage = PQI_CpoworksHunterPvP_AutoDisengage_enable
AccecptQueues = PQI_CpoworksHunterPvP_AutoAccecptQueues_enable



--Keybinds
PauseKey			= PQI:IsHotkeys(PQI_CpoworksHunterPvP_PauseRotation_key)
DeteranceKey		= PQI:IsHotkeys(PQI_CpoworksHunterPvP_DeteranceKey_key)
ScatterTrapKey		= PQI:IsHotkeys(PQI_CpoworksHunterPvP_ScatterTrapKey_key)
ExplosiveTrapKey	= PQI:IsHotkeys(PQI_CpoworksHunterPvP_ExplosiveTrapKey_key)

if not PQI_CpoworksHunterPvP_BurstKey_enable then 
	burstKey				= IsMouseButtonDown(3)
else 
 	burstKey				= PQI:IsHotkeys(PQI_CpoworksHunterPvP_BurstKey_key)
end
if not PQI_CpoworksHunterPvP_BindingShotKey_enable then 
	BindingShotKey				= IsMouseButtonDown(4)
else 
 	BindingShotKey				= PQI:IsHotkeys(PQI_CpoworksHunterPvP_BindingShotKey_key)
end
if not PQI_CpoworksHunterPvP_FlareKey_enable then 
	FlareKey				= IsMouseButtonDown(5)
else 
 	FlareKey				= PQI:IsHotkeys(PQI_CpoworksHunterPvP_FlareKey_key)
end


if not PQI_CpoworksHunterPvP_PauseRotation_enable then 
	PauseKey = false
end
if not PQI_CpoworksHunterPvP_DeteranceKey_enable then 
	DeteranceKey = false 
end


GroupInfo()
FaceFunc()


if PauseKey
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
then return true end



if rangefaceMtime == nil then
	rangefaceMtime = 0
end

if  GetTime() - rangefaceMtime &amp;gt; 1 then
	rangefaceMtime = GetTime()
	RangeCheckPet()
end




if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= FocusPool then
goRage = 1
end
if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 20 then
goRage = 0
end


if AccecptQueues then
	local status = GetBattlefieldStatus(1)
	if status == &amp;quot;confirm&amp;quot; then
		AcceptBattlefieldPort(1, 1)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tranq Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness

12472,  -- Icy Veins

1022,   -- Hand of Protection

11426,   -- Ice Barrier

20925,  -- Sacred Shield

114250,   -- Selfless Healer

17,    -- Power Word: Shield

110909	--Alter time

}

if PQR_SpellAvailable(19801) then
	for i = 1, #cTar do
		if UnitExists(cTar[i]) then
			for j = 1, #purgeThis2 do
				if UnitBuffID(cTar[i], purgeThis2[j]) ~= nil
				and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) ~= nil
				and not LineOfSight(cTar[i]) then
					_castSpell(19801, cTar[i])
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Teir 5 Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Crows
if IsSpellKnown(131894) then
	if IsFacing
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(131894)
	and goRage == 1 then
	_castSpell(131894,&amp;quot;target&amp;quot;)
	end
end

--Lynx Rush
if IsSpellKnown(120697) then
	if UnitExists(&amp;quot;pettarget&amp;quot;)
	and PQR_SpellAvailable(120697)
	and not LineOfSight(&amp;quot;pettarget&amp;quot;)
	and ePet[1].TRange ~= nil
	and ePet[1].TRange &amp;lt; 40 then 
		_castSpell(120697,&amp;quot;pettarget&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey then
	-- Gloves
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 		
		UseInventoryItem(10)
	end
	
	--Top Trinket Trinket
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
	end
	
	--Orc
	if PQR_SpellAvailable(33697) then
		CastSpellByName(tostring(GetSpellInfo(33697)))  
	end
	
	--Troll
	if PQR_SpellAvailable(26297) then 
		CastSpellByName(tostring(GetSpellInfo(26297))) 
	end
	
	--Rapid Fire
	if PQR_SpellAvailable(3045) then 
		CastSpellByName(tostring(GetSpellInfo(3045))) 
	end
	
	--Bestial Wrath
	if PQR_SpellAvailable(19574) then 
		CastSpellByName(tostring(GetSpellInfo(19574))) 
	end
	
	--Stampeed
	if PQR_SpellAvailable(121818) then 
		CastSpellByName(tostring(GetSpellInfo(121818))) 
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Focus Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Frenzy = select(4,UnitBuffID(&amp;quot;player&amp;quot;,19615))

if Frenzy == 5
and not UnitBuffID(&amp;quot;player&amp;quot;,34471) then
	_castSpell(82692)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chimera Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;)
and PQR_SpellAvailable(53209) then
	_castSpell(53209, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Steady Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;) then
	_castSpell(56641)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Aimed Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 82926) then
	_castSpell(82928, &amp;quot;target&amp;quot;)
	CastSpellByName(GetSpellInfo(82928),&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Aspects</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 
then CastShapeshiftForm(1) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Call Pet</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>CallPetVal = PQI_CpoworksHunterPvP_PetSecector_value

if CallPetVal == 1 then
	CallPetID = 883
elseif CallPetVal == 2 then
	CallPetID = 83242
elseif CallPetVal == 3 then
	CallPetID = 83243
elseif CallPetVal == 4 then
	CallPetID = 83244
elseif CallPetVal == 5 then
	CallPetID = 83245
end

if UnitExists(&amp;quot;pet&amp;quot;) == nil
and not UnitIsDead(&amp;quot;pet&amp;quot;) then 
	_castSpell(CallPetID)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hunters Mark</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ams = UnitBuffID(&amp;quot;target&amp;quot;,48707)
local cloak = UnitBuffID(&amp;quot;target&amp;quot;,31224)

if UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
and ams == nil
and cloak == nil
and not UnitDebuffID(&amp;quot;target&amp;quot;,1130) then 
	_castSpell(1130, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Scatter Trap Mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Code provided by Xelper
local targetTrapped = UnitDebuffID(&amp;quot;mouseover&amp;quot;, 1499)
local _, FreezingTrapCD = GetSpellCooldown(1499)
if targetTrapped then
	return true
end


if FreezingTrapTimeout ~= nil and FreezingTrapTimeout &amp;gt; GetTime() then
	local targetName = UnitName(&amp;quot;target&amp;quot;)
	if targetName == FreezingTrapTarget and FreezingTrapTarget ~= nil then
		if FreezingTrapCD &amp;gt; 3 then
			return true
		end
	end
else
	FreezingTrapTimeout = nil
	FreezingTrapTarget = nil
end


if ScatterTrapKey and GetCurrentKeyBoardFocus() == nil then
	local ScatterShot = GetSpellInfo(19503)
	local TrapLauncher = GetSpellInfo(77769)
	local FreezingTrap = GetSpellInfo(1499)
	local ScatterShotCD, ScatterDuration = GetSpellCooldown(19503)
	ScatterShotCD = ScatterShotCD - GetTime() + ScatterDuration
	local TrapLauncherBuff = UnitBuffID(&amp;quot;player&amp;quot;, 77769)
	
	if ScatterShotCD &amp;lt; 3 and FreezingTrapCD &amp;lt; 3 then
		CastSpellByName(ScatterShot, &amp;quot;mouseover&amp;quot;)
		return true
	end


	if ScatterShotCD &amp;gt; 20 and FreezingTrapCD &amp;lt; 3 and TrapLauncherBuff == nil then
		CastSpellByName(TrapLauncher)
		return true
	end


	if ScatterShotCD &amp;gt; 20 and FreezingTrapCD &amp;lt; 3 and TrapLauncherBuff then
		RunMacroText(&amp;quot;/cast &amp;quot;..FreezingTrap)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flare</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FlareKey then
	if IsSpellKnown(1543) then
		CastSpellByName(GetSpellInfo(1543))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Binding Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BindingShotKey then
	if IsSpellKnown(109248) then
		CastSpellByName(GetSpellInfo(109248))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Widow Venom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ams = UnitBuffID(&amp;quot;target&amp;quot;,48707)
local cloak = UnitBuffID(&amp;quot;target&amp;quot;,31224)
local reflect = UnitBuffID(&amp;quot;target&amp;quot;,23920)
local massreflect = UnitBuffID(&amp;quot;target&amp;quot;,114028)

if not UnitDebuffID(&amp;quot;target&amp;quot;, 82654)
and ams == nil
and cloak == nil
and reflect == nil	
and massreflect == nil then 
	_castSpell(82654, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Feign Death</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local FeignCast		= { 
					-- DEATH KNIGHT
					-- DRUID
						33786,		-- Cyclone 
					-- HUNTER
					-- MAGE
						28272,		-- Pig
						118,		-- Sheep
						61305,		-- Cat
						61721,		-- Rabbit
						61780,		-- Turkey
						28271,		-- Turtle  
					-- MONK
					-- PALADIN
						20066,		-- Repentance 
					-- PRIEST  
					-- ROGUE
					-- SHAMAN
						51514,		-- Hex  
					-- WARLOCK
						5782,		-- Fear
						118699,		-- Fear
						116858		-- Chaos Bolt 
					-- WARRIOR
}

interuptID = 147362
if IsSpellKnown(34490) then
	interuptID = 34490
end
	
	
if cdRemains(interuptID) &amp;gt; 2 then
	for i = 1, #cTar do
		if UnitCastingInfo(cTar[i]) ~= nil
		and UnitIsEnemy(&amp;quot;player&amp;quot;, cTar[i]) ~= nil  
		and select(2,GetSpellCooldown(5384)) == 0  then
			for i=1, #FeignCast do
				if UnitCastingInfo(cTar[i]) == GetSpellInfo(FeignCast[i]) then
					_castSpell(5384)
				end
			end 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disengage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoDisengage then
	if IsFacing
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)  
	and CheckInteractDistance(&amp;quot;target&amp;quot;, 3) == 1 then 
		_castSpell(781)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Deterance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if DeteranceKey
and PQR_SpellAvailable(19263) then
	_castSpell(19263)
end


if AutoDeterance
and PQR_SpellAvailable(19263)
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; DeteranceHP
and UnitBuffID(&amp;quot;player&amp;quot;, 53480) == nil
and UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
and not UnitBuffID (&amp;quot;player&amp;quot;, 19574)
and not UnitBuffID (&amp;quot;player&amp;quot;, 3045) then 
	_castSpell(19263)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Teir 4 Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Dire Beast
if IsSpellKnown(120679)
and PQR_SpellAvailable(120679) then
	_castSpell(120679)
end

--Fervor
if IsSpellKnown(82726)
and PQR_SpellAvailable(82726) then
	if goRage == 0 then
		_castSpell(82726)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Masters Call</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;pet&amp;quot;)
and not UnitIsDead(&amp;quot;pet&amp;quot;) then
	if HaveDebuff(&amp;quot;player&amp;quot;, dRoot()) then
		_castSpell(53271)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Concussive Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local cansnare = true
local freedom = UnitBuffID(&amp;quot;target&amp;quot;,1044)
local bladestorm = UnitBuffID(&amp;quot;target&amp;quot;,46924)



if IsFacing
and UnitDebuffID(&amp;quot;target&amp;quot;, 5116) == nil
and freedom == nil
and bladestorm == nil
and UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; UnitHealthMax(&amp;quot;player&amp;quot;) * 3 then
	
	if HaveDebuff(&amp;quot;target&amp;quot;, aRoots(), 0) ~= nil
	or HaveDebuff(&amp;quot;target&amp;quot;, aSRS(), 0) ~= nil then
		cansnare = false
	end
	
	
	if cansnare == true then
		_castSpell(5116, &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Explosive Trap</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ExplosiveTrapKey and GetCurrentKeyBoardFocus() == nil then 
	local TrapLauncher = GetSpellInfo(77769)
	local ExplosiveTrap = GetSpellInfo(82939)
	local TrapLauncherBuff = UnitBuffID(&amp;quot;player&amp;quot;, 77769)
	
	
	if TrapLauncherBuff == nil then
		CastSpellByName(TrapLauncher)
		return true
	end


	if TrapLauncherBuff then
		RunMacroText(&amp;quot;/cast &amp;quot;..ExplosiveTrap)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></HUNTER>