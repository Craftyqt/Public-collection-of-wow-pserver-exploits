<?xml version="1.0" encoding="utf-8" ?><INTERRUPT><Ability><Name>Cleanse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Paladin Retribution/Protection/Holy
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;PALADIN&amp;quot; 
  and PQR_SpellAvailable(4987) then
	for i=1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Disease&amp;quot; 
	  	  or (GetSpecialization() == 1 and CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot;) then
			CastSpellByName(GetSpellInfo(4987), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispel Engine</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not DispEngine then

	CantHealDebuffs = {
		104451, -- Ice Tomb
		76577, -- Smoke Bomb
		121949, -- Parasistic Growth
		122784, -- Reshape Life
		122370, -- Reshape Life 2
		123184, -- Dissonance Field
		123255, -- Dissonance Field 2
		123596, -- Dissonance Field 3 
		128353 -- Dissonance Field 4 
	}
	
	-- Function to test if target is valid.
	function CanHeal(t)
		if UnitInRange(t) ~= nil
		  and UnitCanCooperate(&amp;quot;player&amp;quot;,t) ~= nil
		  and not UnitIsCharmed(t) ~= nil
		  and not UnitIsDeadOrGhost(t) ~= nil
		  and not PQR_IsOutOfSight(t) 
		  and UnitIsConnected(t) ~= nil then
		  	for i=1, #CantHealDebuffs do
		  		if UnitDebuffID(t,CantHealDebuffs[i]) ~= nil then
		  			return false
		  		end
		  	end
		  	return true 
		else 
			return false 
		end 
	end
	
	-- Checks if our Cleanse will have a valid Debuff and store Debuff infos.
	function ValidDispel(t)
		local HasValidDispel = false
		local i = 1
		local debuff = UnitDebuff(t, i)
		while debuff do
			local debuffType = select(5, UnitDebuff(t, i))
			local stacks = select(4, UnitDebuff(t, i))
			local HasValidDispel = true
			if HasValidDispel then
	  			return HasValidDispel, debuff, debuffType, stacks
	  		end
			i = i + 1
			debuff = UnitDebuff(t, i)
		end
		return false
	end
	
	-- Function to check debuffs on self/party/raid.
	function DispelEngine()
		
		-- Create Table
		CanDispel = { }
		
		-- /run print(&amp;quot;Valid Dispel&amp;quot;..ValidDispel(&amp;quot;player&amp;quot;)..&amp;quot; &amp;quot;..select(2,ValidDispel(&amp;quot;player&amp;quot;))..&amp;quot; &amp;quot;..select(3,ValidDispel(&amp;quot;player&amp;quot;))..&amp;quot; &amp;quot;..select(4,ValidDispel(&amp;quot;player&amp;quot;)))
		
		-- Add player to table if Valid Dispel.
		local member = &amp;quot;player&amp;quot;
		if ValidDispel(&amp;quot;player&amp;quot;) == true then
			local debuff 		= select(2,ValidDispel(&amp;quot;player&amp;quot;))
			local debufftype 	= select(3,ValidDispel(&amp;quot;player&amp;quot;))
			local stacks 		= select(4,ValidDispel(&amp;quot;player&amp;quot;))	
			table.insert( CanDispel,{ Unit = &amp;quot;player&amp;quot;, Debuff = debuff, DebuffType = debufftype, Stacks = stacks } ) 
		end	
		
		-- Check if the Player is in a group and define wich kind of group.
		if GetNumGroupMembers() &amp;gt; 1 then
			if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
			elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
			end
			
			-- Add members that have Valid Dispels to table.
			for i = 1, GetNumGroupMembers()  do 
				local member = group..i
				if ValidDispel(member) 
				  and CanHeal(member) then
					local debuff 		= select(2,ValidDispel(member))
					local debufftype 	= select(3,ValidDispel(member))
					local stacks 		= select(4,ValidDispel(member))
					if CanHeal(member) then 						
						table.insert( CanDispel,{ Unit = member, Debuff = debuff, DebuffType = debufftype, Stacks = stacks } ) 
					end 
				end			
			end 
			
			-- Sort table by most stacks.
			if #CanDispel &amp;gt; 1 then
				table.sort(CanDispel, function(x,y) return x.Stacks &amp;gt; y.Stacks end)
			end
		end
	end
	DispEngine = true
end

DispelEngine()</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purify Spirit</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Shaman Resto
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;SHAMAN&amp;quot; 
  and GetSpecialization() == 3 
  and PQR_SpellAvailable(77130) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot;
	  	  or CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot;  then
			CastSpellByName(GetSpellInfo(77130), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Remove Corruption</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Druid Balance/Feral/Guardian
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;DRUID&amp;quot;  
  and GetSpecialization() ~= 4
  and PQR_SpellAvailable(2782) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(2782), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purify</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Priest Disc/Holy
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;PRIEST&amp;quot; 
  and PQR_SpellAvailable(527) 
  and GetSpecialization() ~= 3 then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Disease&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot; then
			CastSpellByName(GetSpellInfo(527), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Detox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Monk Brew/Wind/Mist
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;MONK&amp;quot; 
  and PQR_SpellAvailable(115450) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Disease&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or ( GetSpecialization() == 2 and CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot; ) then
			CastSpellByName(GetSpellInfo(115450), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Remove Curse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Mage
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;MAGE&amp;quot; 
  and PQR_SpellAvailable(475) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(475), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleanse Spirit</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Shaman Enhancement/Elemental
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;SHAMAN&amp;quot;
  and GetSpecialization() ~= 3 
  and PQR_SpellAvailable(51886) then
	for i=1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(51886), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Natures Cure</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Druid Resto
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;DRUID&amp;quot;  
  and GetSpecialization() == 4
  and PQR_SpellAvailable(88423) then
	for i=1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot; then
			CastSpellByName(GetSpellInfo(88423), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AllSpells</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not DispEngine then

	CantHealDebuffs = {
		104451, -- Ice Tomb
		76577, -- Smoke Bomb
		121949, -- Parasistic Growth
		122784, -- Reshape Life
		122370, -- Reshape Life 2
		123184, -- Dissonance Field
		123255, -- Dissonance Field 2
		123596, -- Dissonance Field 3 
		128353 -- Dissonance Field 4 
	}
	
	-- Function to test if target is valid.
	function CanHeal(t)
		if UnitInRange(t) ~= nil
		  and UnitCanCooperate(&amp;quot;player&amp;quot;,t) ~= nil
		  and not UnitIsCharmed(t) ~= nil
		  and not UnitIsDeadOrGhost(t) ~= nil
		  and not PQR_IsOutOfSight(t) 
		  and UnitIsConnected(t) ~= nil then
		  	for i=1, #CantHealDebuffs do
		  		if UnitDebuffID(t,CantHealDebuffs[i]) ~= nil then
		  			return false
		  		end
		  	end
		  	return true 
		else 
			return false 
		end 
	end
	
	-- Checks if our Cleanse will have a valid Debuff and store Debuff infos.
	function ValidDispel(t)
		local HasValidDispel = false
		local i = 1
		local debuff = UnitDebuff(t, i)
		while debuff do
			local debuffType = select(5, UnitDebuff(t, i))
			local stacks = select(4, UnitDebuff(t, i))
			local HasValidDispel = true
			if HasValidDispel then
	  			return HasValidDispel, debuff, debuffType, stacks
	  		end
			i = i + 1
			debuff = UnitDebuff(t, i)
		end
		return false
	end
	
	-- Function to check debuffs on self/party/raid.
	function DispelEngine()
		
		-- Create Table
		CanDispel = { }
		
		-- Add player to table if Valid Dispel.
		local member = &amp;quot;player&amp;quot;
		if ValidDispel(&amp;quot;player&amp;quot;) == true then
			local debuff 		= select(2,ValidDispel(&amp;quot;player&amp;quot;))
			local debufftype 	= select(3,ValidDispel(&amp;quot;player&amp;quot;))
			local stacks 		= select(4,ValidDispel(&amp;quot;player&amp;quot;))	
			table.insert( CanDispel,{ Unit = &amp;quot;player&amp;quot;, Debuff = debuff, DebuffType = debufftype, Stacks = stacks } ) 
		end	
		
		-- Check if the Player is in a group and define wich kind of group.
		if GetNumGroupMembers() &amp;gt; 1 then
			if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
			elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
			end
			
			-- Add members that have Valid Dispels and that we can heal to table.
			for i = 1, GetNumGroupMembers()  do 
				local member = group..i
				if ValidDispel(member) 
				  and CanHeal(member) then
					local debuff 		= select(2,ValidDispel(member))
					local debufftype 	= select(3,ValidDispel(member))
					local stacks 		= select(4,ValidDispel(member))
					if CanHeal(member) then 						
						table.insert( CanDispel,{ Unit = member, Debuff = debuff, DebuffType = debufftype, Stacks = stacks } ) 
					end 
				end			
			end 
			
			-- Sort table by most stacks.
			if #CanDispel &amp;gt; 1 then
				table.sort(CanDispel, function(x,y) return x.Stacks &amp;gt; y.Stacks end)
			end
		end
	end
	DispEngine = true
end

DispelEngine()

-- Druid Balance/Feral/Guardian
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;DRUID&amp;quot;  
  and GetSpecialization() ~= 4
  and PQR_SpellAvailable(2782) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(2782), CanDispel[i].Unit)
		end
	end
end

-- Druid Resto
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;DRUID&amp;quot;  
  and GetSpecialization() == 4
  and PQR_SpellAvailable(88423) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot; then
			CastSpellByName(GetSpellInfo(88423), CanDispel[i].Unit)
		end
	end
end

-- Mage
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;MAGE&amp;quot; 
  and PQR_SpellAvailable(475) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(475), CanDispel[i].Unit)
		end
	end
end

-- Monk Brew/Wind/Mist
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;MONK&amp;quot; 
  and PQR_SpellAvailable(115450) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Disease&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or (GetSpecialization() == 2 and CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot;) then
			CastSpellByName(GetSpellInfo(115450), CanDispel[i].Unit)
		end
	end
end

-- Paladin Retribution/Protection/Holy
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;PALADIN&amp;quot; 
  and PQR_SpellAvailable(4987) then
	for i=1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Poison&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Disease&amp;quot; 
	  	  or (GetSpecialization() == 1 and CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot;) then
			CastSpellByName(GetSpellInfo(4987), CanDispel[i].Unit)
		end
	end
end

-- Priest Disc/Holy
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;PRIEST&amp;quot; 
  and PQR_SpellAvailable(527) 
  and GetSpecialization() ~= 3 then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Disease&amp;quot; 
	  	  or CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot; then
			CastSpellByName(GetSpellInfo(527), CanDispel[i].Unit)
		end
	end
end

-- Shaman Enhancement/Elemental
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;SHAMAN&amp;quot;
  and GetSpecialization() ~= 3 
  and PQR_SpellAvailable(51886) then
	for i=1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(51886), CanDispel[i].Unit)
		end
	end
end

-- Shaman Resto
if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;SHAMAN&amp;quot; 
  and GetSpecialization() == 3 
  and PQR_SpellAvailable(77130) then
	for i = 1, #CanDispel do
		if CanDispel[i].DebuffType == &amp;quot;Curse&amp;quot;
	  	  or CanDispel[i].DebuffType == &amp;quot;Magic&amp;quot;  then
			CastSpellByName(GetSpellInfo(77130), CanDispel[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></INTERRUPT>