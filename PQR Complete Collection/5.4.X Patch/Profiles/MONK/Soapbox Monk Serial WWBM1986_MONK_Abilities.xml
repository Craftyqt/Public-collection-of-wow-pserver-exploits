<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>--Initialize--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or IsMouseButtonDown(3)
or UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
or UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or (UnitBuffID(&amp;quot;target&amp;quot;,123250) and UnitBuffID(&amp;quot;target&amp;quot;,123181))
or UnitDebuffID(&amp;quot;target&amp;quot;,1499)
or UnitDebuffID(&amp;quot;target&amp;quot;,115078)
or UnitDebuffID(&amp;quot;target&amp;quot;,19503) then 
return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Racials]</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Brewmaster == true then
	if not PQI_SoapboxBrewmaster_Racials_enable then
	return false
	end
elseif Windwalker == true then
	if not PQI_SoapboxWindwalker_Racials_enable then
	return false
	end
end

local Troll, Orc, Goblin, BloodElf, TrollCD, OrcCD, BloodElfCD, GoblinCD, Energy = 
Troll, Orc, Goblin, BloodElf, TrollCD, OrcCD, BloodElfCD, GoblinCD, Energy

--Troll Berserking--
if Troll == true then 
	if TrollCD &amp;lt; 1 
	and UnitBuffID(&amp;quot;player&amp;quot;,116740)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 3045) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
	and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 90355) then
	CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	return true
	end
end

--Orc Blood Fury--
if Orc == true then 
	if (UnitLevel(&amp;quot;target&amp;quot;) == -1 or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;boss1&amp;quot;))
	and OrcCD &amp;lt; 1 
	and UnitBuffID(&amp;quot;player&amp;quot;,116740) then
	CastSpellByName(GetSpellInfo(33697),&amp;quot;player&amp;quot;)
	return true
	end
end

--Blood Elf Arcane Torrent--
if BloodElf == true then 
	if BloodElfCD &amp;lt; 1 
	and Energy &amp;lt; 40 then
	CastSpellByName(GetSpellInfo(25046),&amp;quot;player&amp;quot;)
	return true
	end
end

--Goblin Rocket Barrage--
if Goblin == true then 
	if GoblinCD &amp;lt; 1 then
	CastSpellByName(GetSpellInfo(69041),&amp;quot;target&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Blackout Kick</Name><Default>false</Default><SpellID>100784</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

local FOFCD, Energy, RSKCD, Energizing, Power, Powertimer = FOFCD, Energy, RSKCD, Energizing, 
Power, Powertimer

---if cTime &amp;gt; 10 then
---if Rune then
---	if not Tiger or (Tiger and Tigertimer - GetTime() &amp;lt; 10) then
	---	if Runetimer - GetTime() &amp;lt; 7 then
		---	if (UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 1)) and EnergyCap &amp;gt; (2) then
	---		return false
	---		end
	---	end
---	end
---end
---end

if UnitBuffID(&amp;quot;player&amp;quot;,116847) then
	if Nova_FistsOfFury == 1 then
		if not Energizing and not PQR_IsMoving(1) 
		and ((RSKCD &amp;gt; 1 and Chi &amp;lt; UnitPowerMax(&amp;quot;player&amp;quot;,12)) or RSKCD &amp;gt; 1)
		and EnergyCap &amp;gt; (2) and Power and Powertimer - GetTime() &amp;gt; (4) 
		and FOFCD &amp;lt; 1 then
		return false
		end
	end
elseif Nova_FistsOfFury == 1 then
	if not Energizing and not PQR_IsMoving(1) 
	and ((RSKCD &amp;gt; 1 and Chi &amp;lt; UnitPowerMax(&amp;quot;player&amp;quot;,12)) or RSKCD &amp;gt; 2)
	and EnergyCap &amp;gt; (2) and Power and Powertimer - GetTime() &amp;gt; (4)
	and FOFCD &amp;lt; 1 
	and not Rune then
	return false
	end
end


	if ((Energy + (EnergyRegen * (RSKCD))) &amp;gt;= 40) then
		if (UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 1)) then
			if EnergyCap &amp;gt; (1) then
				if RSKCD &amp;gt; 2 then
				return true
				end
			end
		else
		return true
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Touch of Death</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitIsPlayer(&amp;quot;target&amp;quot;) then return false end

local Chi, TODCD, GlyphTouch, DeathBoss, Blacklist = Chi, TODCD, GlyphTouch, DeathBoss, Blacklist
if UnitExists(&amp;quot;target&amp;quot;) then
if GlyphTouch == true then
	if (DeathBoss and (UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*3)) 
	or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 2 and IsInInstance() and IsInGroup() and UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*2)
	or (UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)) then
		if TODCD &amp;lt; 1 then
			CastSpellByName(GetSpellInfo(115080), &amp;quot;target&amp;quot;)
		end
	end
end

if GlyphTouch == false then
	if (DeathBoss and (UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*3.5)) 
	or (BlackList == false and IsInInstance() and IsInGroup() 
	and UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*3)
	or (UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)) then
		if TODCD &amp;lt; 1 and Chi &amp;gt; 2 then
			CastSpellByName(GetSpellInfo(115080), &amp;quot;target&amp;quot;)
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Extra Button</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Spear,_,_,_,_,_,Speartimer = UnitDebuffID(&amp;quot;focus&amp;quot;,122224,&amp;quot;PLAYER&amp;quot;)

if UnitExists(&amp;quot;focus&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) == 1 then
	if IsUsableSpell(122224)
	and not UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;)
	and (Spear == nil
	or Speartimer - GetTime() &amp;lt; 20) then
	RunMacroText(&amp;quot;/target focus&amp;quot;)
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Channeling--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CurrentChannel == &amp;quot;Crackling Jade Lightning&amp;quot; 
or CurrentChannel == &amp;quot;Fists of Fury&amp;quot; then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>!!GET IN MELEE RANGE!!</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsSpellInRange(tostring(GetSpellInfo(100780)), &amp;quot;target&amp;quot;) == 0 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxWindwalker_AutoTargetNextEnemy_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxBrewmaster_AutoTargetNextEnemy_enable then return false end

if (UnitExists(&amp;quot;Target&amp;quot;) == nil 
or (UnitExists(&amp;quot;Target&amp;quot;) and UnitIsDead(&amp;quot;Target&amp;quot;)))
and UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Tortos---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local CurrentChannel = UnitChannelInfo(&amp;quot;player&amp;quot;)
local Crystal = UnitDebuffID(&amp;quot;player&amp;quot;, 137633)

if Crystal then
	if CurrentChannel == &amp;quot;Crackling Jade Lightning&amp;quot; then
	SpellStopCasting(GetSpellInfo(117952))
	end
end

if CurrentChannel == &amp;quot;Crackling Jade Lightning&amp;quot; then
return true
end

if UnitExists(&amp;quot;focus&amp;quot;) then 
local focusGUID = tonumber((UnitGUID(&amp;quot;focus&amp;quot;)):sub(-12, -9), 16)
local Crystal = UnitDebuffID(&amp;quot;player&amp;quot;, 137633)
local Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
	if focusGUID == 69639 then
		if not Crystal then
			if Playerhealth &amp;gt;= 85 and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) and PQR_SpellAvailable(117952) then
			CastSpellByName(GetSpellInfo(117952), &amp;quot;focus&amp;quot;)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---1.Functions---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
else group = nil
end

---Credits to Bu_ba for the line of code!---
if not IsLineOfSight then
 LoSTable = { }
 function IsLineOfSight(targetCheck, time)
  local time=time or 5
  targetGUID = UnitGUID(targetCheck) or 0 

   for i=1, #LoSTable do
    if time &amp;lt; (GetTime() - LoSTable[i].time) then
     table.remove(LoSTable, i)
     break
    end
  end

   function LoSCheck(self, event, ...)
    local targetGUID = targetGUID
    local Log = {...}
    local AlreadyTabled = false
    if Log[2] and Log[2] == &amp;quot;SPELL_CAST_FAILED&amp;quot; and targetGUID then
     if Log[4] and Log[4]==UnitGUID(&amp;quot;player&amp;quot;) then
      if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
       for j=1, #LoSTable do
        if targetGUID == LoSTable[j].unit then
         AlreadyTabled = true
         break
        end
       end
       if not AlreadyTabled then
        table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
        targetGUID = nil
        _G.NovaLineOfSight:UnregisterAllEvents()
       end
      end
     end
    end
    
   end

  if not NovaLineOfSight then
    frameLOS = CreateFrame(&amp;quot;frame&amp;quot;, &amp;quot;NovaLineOfSight&amp;quot;)
    frameLOS:SetScript(&amp;quot;OnEvent&amp;quot;, LoSCheck)
  end
  
   for k=1, #LoSTable do
     if targetGUID and targetGUID == LoSTable[k].unit then
     return false
    end
  end
  
  
  _G.NovaLineOfSight:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  return true

 end
end

if UnitExists(&amp;quot;boss&amp;quot;..1) then
local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)

NOT2D = false

Target = { 70235, 70247, 70212, 69134, 69078, 69131, 69132, 68078, 71543 }

for i=1, #Target do
   if BossID == Target[i] then NOT2D = true
   end
end
end

if sTimer == nil then
  sTimer = 0
 end
 if cTime == nil then
  cTime = 0
 end
 if UnitAffectingCombat(&amp;quot;player&amp;quot;) and sTimer == 0 then
   sTimer = GetTime()
 end
 if sTimer &amp;gt; 0 then
   cTime = (GetTime() - sTimer)
 end
 if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not UnitExists(&amp;quot;target&amp;quot;) then
  sTimer = 0
  cTime = 0
 end
 
--Dummy 5min DPS Test
if GetSpecialization(&amp;quot;player&amp;quot;) == 3  then
	if PQI_SoapboxWindwalker_5MinDPSTest_enable then
	if PQI_SoapboxWindwalker_AutoTargetNextEnemy_enable then return false end
		if UnitExists(&amp;quot;target&amp;quot;) then
			if cTime &amp;gt; 300 and dummy() then
			StopAttack()
			ClearTarget()
			print(&amp;quot;5 Minute Dummy Test Concluded - Profile Stopped. Leave Combat to Re-Enable or Uncheck 5 Min DPS Test&amp;quot;)
			PQR_StopRotation()
			RunMacroText(&amp;quot;/run Screenshot()&amp;quot;)
			end
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
	if PQI_SoapboxBrewmaster_5MinDPSTest_enable then
	if PQI_SoapboxBrewmaster_AutoTargetNextEnemy_enable then return false end
		if UnitExists(&amp;quot;target&amp;quot;) then
			if cTime &amp;gt; 300 then
			StopAttack()
			ClearTarget()
			print(&amp;quot;5 Minute Dummy Test Concluded - Profile Stopped. Leave Combat to Re-Enable or Uncheck 5 Min DPS Test&amp;quot;)
			PQR_StopRotation()
			RunMacroText(&amp;quot;/run Screenshot()&amp;quot;)
			end
		end
	end
end
if not dummy then
function dummy()
	dummies = {
		31146, --Raider&amp;apos;s Training Dummy - Lvl ??
		67127, --Training Dummy - Lvl 90
		46647, --Training Dummy - Lvl 85
		32546, --Ebon Knight&amp;apos;s Training Dummy - Lvl 80
		31144, --Training Dummy - Lvl 80
		32667, --Training Dummy - Lvl 70
		32542, --Disciple&amp;apos;s Training Dummy - Lvl 65
		32666, --Training Dummy - Lvl 60
		32545, --Initiate&amp;apos;s Training Dummy - Lvl 55 
		32541, --Initiate&amp;apos;s Training Dummy - Lvl 55 (Scarlet Enclave) 
	}
	for i=1, #dummies do
		if UnitExists(&amp;quot;target&amp;quot;) then
			dummyID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(-13, -9), 16)
		else
			dummyID = 0
		end
		if dummyID == dummies[i] then
			return true
		end	
	end
end
end

-- Aura Information Function
AuraInfo = nil
function AuraInfo(i,unit)
	if i == 1 then
		for x = 1, #buffs.stat do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stat[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 2 then
		for x = 1, #buffs.stamina do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stamina[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 3 then
		for x = 1, #buffs.atkpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 4 then
		for x = 1, #buffs.atkspeed do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkspeed[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 5 then
		for x = 1, #buffs.spllpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 6 then
		for x = 1, #buffs.spllhaste do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllhaste[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 7 then
		for x = 1, #buffs.crit do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.crit[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 8 then
		for x = 1, #buffs.mastery do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.mastery[x])))
			if texture then
				return name, _, texture
			end
		end
	else 
		return nil, nil, nil
	end
end
---Disarm Target List---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Grapple = false

Disarm = { 61947, 61240, 61398, 59240, 62405, 62408, 62402, 60396, 64453, 63591, 63589 }

for i=1, #Disarm do
   if targetGUID == Disarm[i] then Grapple = true
   end
end
end

---Is Target Disarmed---
Disarmed = false

Weapons = { 676, 51722, 91644, 64058, 117368 }

for y=1, #Weapons do
   if UnitDebuffID(&amp;quot;target&amp;quot;, Weapons[y]) then Disarmed = true
   end
end

---Trinket Slot Check---
Trinkets = 0

trinketID = { 96546, 95802, 94532 }

for i=13, 14, 1  do
	 for y=1, #trinketID do
   if GetInventoryItemID(&amp;apos;player&amp;apos;, i) == trinketID[y] then 
     Trinkets = Trinkets + 1
   end
  end
end

Active = IsMounted() 
or UnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Food&amp;quot;) 
or UnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Drink&amp;quot;) 
or UnitInVehicle(&amp;quot;player&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;) 
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitCastingInfo(&amp;quot;player&amp;quot;)
---Trinket Buff Check---
Proczzz = 0 

Buff = { 126649, 126554, 126707, 128984, 127928, 126483, 126489, 105574, 127575, 
126690, 136086, 136086, 126599, 126484, 136088, 105697, 126734, 138756, 138939, 138895, 138699  }

for i=1, #Buff do
local Agi,_,_,_,_,_,Agitimer = UnitBuffID(&amp;quot;player&amp;quot;, Buff[i])
   if Agi and Agitimer - GetTime() &amp;gt;= 10 then Proczzz = Proczzz + 1 
   end
end

---Dancing Steel / Juju Check---
Proc = false

Buffs = { 138938, 118334  }

for i=1, #Buffs do
local Fun,_,_,_,_,_,Funtimer = UnitBuffID(&amp;quot;player&amp;quot;, Buffs[i])
   if Fun then Proc = true
   end
end


---Touch of Death Target Check---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

DeathBoss = false

BossName = { 60047, 60051, 60043, 59915, 60009, 60143, 60701, 60708, 60709, 60710, 60410, 60400, 60399,
62980, 62543, 62164, 62397, 62511, 62711, 62837, 60583, 60586, 60585, 62442, 62983, 60999, 60491 }

for i=1, #BossName do
   if targetGUID == BossName[i] then DeathBoss = true
   end
end
end

---Blacklist ToD Targets---
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)

Blacklist = false

BossName = { 60913 }

for i=1, #BossName do
   if targetGUID == BossName[i] then Blacklist = true
   end
end
end

---------------------------- Get Spell Cooldown -------------------------
	
	GetSpellCD = nil
	function GetSpellCD(SpellID)
	
		if GetSpellCooldown(GetSpellInfo(SpellID)) == nil 
		or GetSpellCooldown(GetSpellInfo(SpellID)) == 0 then
			return 0
		else	
			local Start, Duration = GetSpellCooldown(GetSpellInfo(SpellID))
			return Start + Duration - GetTime()
		end
		
	end


---Magic Debuff Check---
MagicDebuff = false 


for i=1, 8 do
   local name,_,_,_,type=UnitDebuff(&amp;quot;player&amp;quot;,i)
   if type == &amp;quot;Magic&amp;quot; then MagicDebuff = true
   end
end

PQ_ImpalingSpearCD = 0
PQ_ImpalingSpear = 122224

PQ_Frame = nil
PQ_CanCast = true
PQ_CanBT = true
PQ_CanImpalingSpear = true
function PQ_Frame_OnEvent(self, event, ...)
	if ... ~= &amp;quot;player&amp;quot; then return end
	
	local spellID = select(5, ...)
	
	if spellID ~= PQ_ImpalingSpear then
		PQ_GCD = GetTime() + 0.7
		PQ_CanCast = false
	end
			
	if spellID == PQ_ImpalingSpear then
		PQ_ImpalingSpearCD = GetTime() + 5
		PQ_CanImpalingSpear = false
	end
end
----------------------- Rune of Re-Origination -----------------------
	
	RuneTriknet = nil
	function RuneTrinket()
	
		local Trinket1 = GetInventoryItemID(&amp;quot;player&amp;quot;, 13)
		local Trinket2 = GetInventoryItemID(&amp;quot;player&amp;quot;, 14)
		local RoROids = {
		95802,	-- 502 item level
		94532,	-- 522 item level
		96174,	-- 528 item level
		96546,	-- 535 item level
		96918	-- 541 item level
						}
		
		for i = 1, #RoROids do
			if Trinket1 == RoROids[i] or Trinket2 == RoROids[i] then
				return true, RoROids[i]
			end
		end
		
		return false, nil
		
	end
	
---------------------------- Trinkets timers ---------------------------
	
	TrinketProc = nil
	function TrinketProc()
	
		local t = 1
		local TrinketsTimers = {0, 0}

		---Trinket IDs go here---
		local TrinketsBuffID = {
		138699,	--Vicious Talisman of the Shado-Pan Assault---
		138938,	--Juju Madness---
		138756,	--Blades of Renataki---
		148896, --Ferocity---
		146310, --Restless Agility---
		148903, --Vicious---
		146308  --Dextrous---
							   }

		for i = 1, #TrinketsBuffID do
			if UnitBuffID(&amp;quot;player&amp;quot;, TrinketsBuffID[i]) then
				TrinketsTimers[t] = select(7,UnitBuffID(&amp;quot;player&amp;quot;, TrinketsBuffID[i])) - GetTime()
				if t == 1 then t = 2 end
			end
		end	
	
		return TrinketsTimers[1], TrinketsTimers[2]
		
	end
	
---------------------------- Check Bloodlust Timer --------------------------------
	
	Lust = nil
	function Lust()
		
		local BLid = {
					 	2825, 	--	Bloodlust
					 	32182,	--	Heroism
					 	80353,	--	Time Warp
					 	90355	--	Ancient Hysteria
					 }
					
		for i = 1, #BLid do 
			if UnitBuffID(&amp;quot;player&amp;quot;, BLid[i]) then
				local _, _, _, _, _, _, BLtime = UnitBuffID(&amp;quot;player&amp;quot;, BLid[i])
				local BLexpire = BLtime - GetTime()
				return BLexpire
			end 
		end
		
		return 0
		
	end
	
	
	
-----------------------------------------GLYPHS--------------------------------------------------
GlyphTouch = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 123391 then GlyphTouch = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 123391 then GlyphTouch = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 123391 then GlyphTouch = true end



----------------------------------------TALENTS----------------------------------------------------
TigersLust = false
ChiWave = false
ZenSphere = false
ChiBurst = false
PowerStrikes = false
Ascension = false
ChiBrew = false
OxWave = false
LegSweep = false
DiffuseMagic = false
DampeHarm = false
Jade = false
White = false
Torpedo = false

local enabled
if select(2,GetTalentRowSelectionInfo(1)) == 2 then TigersLust = true end

local enabled
if select(2,GetTalentRowSelectionInfo(2)) == 4 then ChiWave = true end

local enabled
if select(2,GetTalentRowSelectionInfo(2)) == 5 then ZenSphere = true end

local enabled
if select(2,GetTalentRowSelectionInfo(2)) == 6 then ChiBurst = true end

local enabled
if select(2,GetTalentRowSelectionInfo(3)) == 7 then PowerStrikes = true end

local enabled
if select(2,GetTalentRowSelectionInfo(3)) == 8 then Ascension = true end

local enabled
if select(2,GetTalentRowSelectionInfo(3)) == 9 then ChiBrew = true end

local enabled
if select(2,GetTalentRowSelectionInfo(4)) == 11 then OxWave = true end

local enabled
if select(2,GetTalentRowSelectionInfo(4)) == 12 then LegSweep = true end

local enabled
if select(2,GetTalentRowSelectionInfo(5)) == 14 then DampenHarm = true end

local enabled
if select(2,GetTalentRowSelectionInfo(5)) == 15 then DiffuseMagic = true end

local enabled
if select(2,GetTalentRowSelectionInfo(6)) == 16 then Jade = true end

local enabled
if select(2,GetTalentRowSelectionInfo(6)) == 17 then White = true end

local enabled
if select(2,GetTalentRowSelectionInfo(6)) == 18 then Torpedo = true end



------------------------------------------RACIALS(MONK)--------------------------------------------
---Race Check---
Troll = IsSpellKnown(26297)
Orc = IsSpellKnown(33697)
Goblin = IsSpellKnown(69041)
BloodElf = IsSpellKnown(25046)

---Cooldown Check---
local TrollStart,TrollDuration = GetSpellCooldown(26297)
TrollCD = TrollStart + TrollDuration - GetTime()
local OrcStart,OrcDuration = GetSpellCooldown(33697)
OrcCD = OrcStart + OrcDuration - GetTime()
local BloodElfStart,BloodElfDuration = GetSpellCooldown(25046)
BloodElfCD = BloodElfStart + BloodElfDuration - GetTime()
local GoblinStart,GoblinDuration = GetSpellCooldown(69041)
GoblinCD = GoblinStart + GoblinDuration - GetTime()



if not T2D then
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		if NOT2D == true then timeToDie = 1000 end
		return timeToDie
	end
end
end

RuneTrink, RoROid = RuneTrinket()

-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local PQ_BossUnits = PQ_BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#PQ_BossUnits do
				if PQ_BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end
-- Complete boss unit table (Dungeons/Heroics/Raids)
PQ_BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}

-- Aura Info function.
buffs = {
	stat 		=	{ 90363, 20217,	115921, 1126 },
	stamina		= 	{ 469, 90364, 109773, 21562},
	atkpwr		= 	{ 19506, 57330,	6673 },
	atkspeed	=	{ 55610, 113742, 30809, 128432, 128433 },
	spllpwr		=	{ 77747, 109773, 126309, 61316, 1459 },
	spllhaste	= 	{ 24907, 15473, 51470, 49868 },
	crit		=	{ 17007, 1459, 61316, 116781, 97229, 24604, 90309, 126373, 126309 },
	mastery		=	{ 116956, 19740, 93435, 128997 },
}</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---2.Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------COOLDOWNS-----------------------------------------------
---Engineer Glove Cooldown---
GloveCD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10)

---Trinket 1 Cooldown---
Trinket1CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

---Trinket 2 Cooldown---
Trinket2CD = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

---Invoke Xuen Cooldown---
local GStart, GDuration = GetSpellCooldown(115295)
GCD = GStart + GDuration - GetTime()


---Invoke Xuen Cooldown---
local XuenStart, XuenDuration = GetSpellCooldown(123904)
XuenCD = XuenStart + XuenDuration - GetTime()

---Expel Harm Cooldown---
local EStart, EDuration = GetSpellCooldown(115072)
ECD = EStart + EDuration - GetTime()

---Jab Cooldown---
local JabStart, JabDuration = GetSpellCooldown(100780)
JabCD = JabStart + JabDuration - GetTime()

---Fists of Fury Cooldown---
local FOFStart, FOFDuration = GetSpellCooldown(113656)
FOFCD = FOFStart + FOFDuration - GetTime()

---Rising Sun Kick Cooldown---
local RSKStart, RSKDuration = GetSpellCooldown(107428)
RSKCD = RSKStart + RSKDuration - GetTime()

---Touch of Death Cooldown---
local TODStart, TODDuration = GetSpellCooldown(115080)
TODCD = TODStart + TODDuration - GetTime()

---Keg Smash Cooldown---
local KSStart, KSDuration = GetSpellCooldown(121253)
KSCD = KSStart + KSDuration - GetTime() 

---Healthstone Cooldown---
HealthstoneCD = select(2,GetItemCooldown(5512))

---Fortifying Brew Cooldown---
local BrewStart, BrewDuration = GetSpellCooldown(115203)
BrewCD = BrewStart + BrewDuration - GetTime()

---Touch of Karma Cooldown---
local KarmaStart, KarmaDuration = GetSpellCooldown(124280)
KarmaCD = KarmaStart + KarmaDuration - GetTime()

---Dampen Harm Cooldown---
local HarmStart, HarmDuration = GetSpellCooldown(122278)
HarmCD = HarmStart + HarmDuration - GetTime()

---Diffuse Magic Cooldown---
local MagicStart, MagicDuration = GetSpellCooldown(122783)
MagicCD = MagicStart + MagicDuration - GetTime()

---Chi Wave Cooldown---
local WaveStart, WaveDuration = GetSpellCooldown(115098)
WaveCD = WaveStart + WaveDuration - GetTime()

---Zen Sphere Cooldown---
local ZenStart, ZenDuration = GetSpellCooldown(124081)
ZenCD = ZenStart + ZenDuration - GetTime()




--------------------------------------HEALTH/POWER TOOLS------------------------------------------
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

---Energy---
Energy = UnitPower(&amp;quot;player&amp;quot;)

---Chi---
Chi = UnitPower(&amp;quot;player&amp;quot;,12)

-------------------------------------BUFFS--------------------------------------------------------
---Rising Sun Kick Debuff---
Kick,_,_,_,_,_,Kicktimer = UnitDebuffID(&amp;quot;target&amp;quot;,107428)

---Power Strikes Buff---
Strikes,_,_,_,_,_,Strikestimer = UnitBuffID(&amp;quot;player&amp;quot;,129914)

---Rune Buff---
Rune,_,_,_,_,_,Runetimer = UnitBuffID(&amp;quot;player&amp;quot;,139120) ---Mastery---


---Max Chi to Power Strike---
StrikeChi = UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt;= (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 3)

---Combo Breaker: Tiger Palm---
CBTP,_,_,_,_,_,CBTPtimer = UnitBuffID(&amp;quot;player&amp;quot;,118864)

---Combo Breaker: Blackout Kick---
CBBOK,_,_,_,_,_,CBBOKtimer = UnitBuffID(&amp;quot;player&amp;quot;,116768)

---Power Strikes Buff---
Strikes,_,_,_,_,_,Strikestimer = UnitBuffID(&amp;quot;player&amp;quot;,129914)


---Cleave---
Element,_,_,Elementcount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,137639)

---Tigereye Brew Charges---
Charges,_,_,Chargescount,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,125195)

---Tigereye Brew Active---
Tiger,_,_,_,_,_,Tigertimer = UnitBuffID(&amp;quot;player&amp;quot;, 116740, &amp;quot;EXACT|PLAYER&amp;quot;)

---Tiger Power Buff---
Power,_,_,_,_,_,Powertimer = UnitBuffID(&amp;quot;player&amp;quot;,125359)

---Zen Sphere---
Sphere,_,_,_,_,_,Spheretimer = UnitBuffID(&amp;quot;player&amp;quot;,124081)

---Zen Sphere---
Energizing,_,_,_,_,_,Energizingtimer = UnitBuffID(&amp;quot;player&amp;quot;,115288)

---Fort Brew---
FortBrew,_,_,_,_,_,FortBrewtimer = UnitBuffID(&amp;quot;player&amp;quot;,115203)

---Blackout Kick---
Blackout,_,_,_,_,_,Blackouttimer = UnitBuffID(&amp;quot;player&amp;quot;,115307)

---Breath of Fire---
Breath,_,_,_,_,_,Breathtimer = UnitDebuffID(&amp;quot;target&amp;quot;,115181)

---Dizzying Haze---
Haze,_,_,_,_,_,Hazetimer = UnitDebuffID(&amp;quot;target&amp;quot;,115180)


---Bloodlust Check---
Bloodlust = UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
or UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)

Windwalker = false
Brewmaster = false
Mistweaver = false

	if IsSpellKnown(113656) then
	Windwalker = true
	elseif IsSpellKnown(115295) then
	Brewmaster = true
	elseif IsSpellKnown(115175) then
	Mistweaver = true
	end
	

------------------------------------------POTIONS--------------------------------------------------
VirmenCD = select(2,GetItemCooldown(76089))
Virmen = GetItemCount(76089)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---5.Boss Special---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end

--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.


for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
		elseif npcID == 62397 then -- Wind Lord Mel&amp;apos;jarak
        
        	if UnitExists(&amp;quot;focus&amp;quot;) then
        		local impalingDebuff = select(7, UnitDebuffID(&amp;quot;focus&amp;quot;, PQ_ImpalingSpear, &amp;quot;player&amp;quot;))
        		
        		if impalingDebuff and impalingDebuff - GetTime() &amp;lt; 7 or IsMouseButtonDown(3) then
        			if PQ_CanCast
        			and PQ_CanImpalingSpear then
        				if GetSpellInfo(PQ_ImpalingSpear) == UnitCastingInfo(&amp;quot;player&amp;quot;) then
        					return true 
        				end
        				RunMacroText(&amp;quot;/target [@focus]&amp;quot;)
        				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
        				RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
        				return true
        			end
        		end
       		end
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end


		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---6.Success!---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
             or (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
		if select(12, ...) == 137639 then
		SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Storm, Earth, and Fire: \124cFFE61515Casted&amp;quot;) 
		elseif select(12, ...) == 115181 and Nova_Breath == 1 then
		SetCVar(&amp;quot;Nova_Breath&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Storm, Earth, and Fire: \124cFFE61515Casted&amp;quot;) 
		elseif select(12, ...) == 115078 then
		SetCVar(&amp;quot;Nova_ParalysisMouseoverQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Paralysis: \124cFFE61515Casted&amp;quot;)
		elseif (select(12, ...) == 115295 or select(12, ...) == 123402) and Nova_GuardQueue == 1 then
		SetCVar(&amp;quot;Nova_GuardQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Guard: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 122470 and Nova_OhShitButtonQueue == 1 then
		SetCVar(&amp;quot;Nova_OhShitButtonQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Fortifying Brew and Touch of Karma: \124cFFE61515Casted&amp;quot;)
		elseif (select(12, ...) == 115203 or select(12, ...) == 120954) and Nova_FortBrewQueue == 1 then
		SetCVar(&amp;quot;Nova_FortBrewQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Fortifying Brew: \124cFFE61515Casted&amp;quot;)
		elseif select(12, ...) == 115315 and Nova_BlackQueue == 1 then
		SetCVar(&amp;quot;Nova_BlackQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Summon Black Ox Statue: \124cFFE61515Casted&amp;quot;)
		elseif (select(12, ...) == 116844 or select(12, ...) == 119392 or select(12, ...) == 119381) and Nova_Tier4TalentQueue == 1 then
		SetCVar(&amp;quot;Nova_Tier4TalentQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Tier 4 Talent: \124cFFE61515Casted&amp;quot;)
		elseif (select(12, ...) == 122783 or select(12, ...) == 122278) and Nova_Tier5TalentQueue == 1 then
		SetCVar(&amp;quot;Nova_Tier5TalentQueue&amp;quot;, 0)
		PQR_WriteToChat(&amp;quot;Tier 5 Talent: \124cFFE61515Casted&amp;quot;)
      end
     end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3a.Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Cleave&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;BMCleave&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;FistsOfFury&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;, 					Var2 = 1		},	
		{	Var1 = 0,	Text = &amp;quot;OhShitButtonQueue&amp;quot;,		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;FortBrewQueue&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Tier5TalentQueue&amp;quot;,		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Tier4TalentQueue&amp;quot;,		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;GuardQueue&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;BlackQueue&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;ParalysisMouseoverQueue&amp;quot;,	Var2 = 1	},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Hold&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Breath&amp;quot;,					Var2 = 1		}
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
			if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
				xrn:message(&amp;quot;|cff9933ffCooldowns - Active.&amp;quot;)
				SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
				CDGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
				PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: |&amp;quot;..CDGlobal)
			else			
				xrn:message(&amp;quot;|cff9933ffCooldowns - Inactive.&amp;quot;)
				SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
				CDGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
				PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: |&amp;quot;..CDGlobal)
			end
		elseif not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
				xrn:message(&amp;quot;|cff9933ffCooldowns - Active.&amp;quot;)
				SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
				CDGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
				PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Fists Of Fury: &amp;quot;..FOFGlobal)
			else			
				xrn:message(&amp;quot;|cff9933ffCooldowns - Inactive.&amp;quot;)
				SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
				CDGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
				PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Fists Of Fury: &amp;quot;..FOFGlobal)
			end
	end
		
	SLASH_CLEAVE1 = &amp;quot;/cleave&amp;quot;
	function SlashCmdList.CLEAVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cleave&amp;quot;) then
			if Windwalker == true then
			xrn:message(&amp;quot;\124cFFFF78A0Storm, Earth, and Fire Queued&amp;quot;) 
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 1)
			end
		elseif Windwalker == true then
			xrn:message(&amp;quot;\124cFFD4D4D4Storm, Earth, and Fire Disabled&amp;quot;) 
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		elseif Brewmaster == true then
			xrn:message(&amp;quot;\124cFFD4D4D4Storm, Earth, and Fire Disabled&amp;quot;) 
			SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
		end
	end	
	SLASH_BMCLEAVE1 = &amp;quot;/bmcleave&amp;quot;
	function SlashCmdList.BMCLEAVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_BMCleave&amp;quot;) then
			if Brewmaster == true then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;)
			xrn:message(&amp;quot;\124cFFFFFFFFCleave Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_BMCleave&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
			end
		elseif Brewmaster == true then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
		xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_BMCleave&amp;quot;, 0)
		elseif Windwalker == true then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
		xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_BMCleave&amp;quot;, 0)
		end
	end		
	SLASH_FISTSOFFURY1 = &amp;quot;/fistsoffury&amp;quot;
	function SlashCmdList.FISTSOFFURY(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_FistsOfFury&amp;quot;) then
			if Windwalker == true then
			xrn:message(&amp;quot;|cffFF78A0Fists Of Fury - Active.&amp;quot;)
			SetCVar(&amp;quot;Nova_FistsOfFury&amp;quot;, 1)
			FOFGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
			PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Fists Of Fury: &amp;quot;..FOFGlobal)
			end
		elseif Windwalker == true then
		xrn:message(&amp;quot;|cffFF78A0Fists Of Fury - Inactive.&amp;quot;)
		SetCVar(&amp;quot;Nova_FistsOfFury&amp;quot;, 0)
		FOFGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
		PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Fists Of Fury: &amp;quot;..FOFGlobal)
		end
	end	
	SLASH_GUARD1 = &amp;quot;/guard&amp;quot;
	function SlashCmdList.GUARD(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_GuardQueue&amp;quot;) then
			if Brewmaster == true then
			xrn:message(&amp;quot;|cffFF78A0Guard - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_GuardQueue&amp;quot;, 1)
			end
		elseif Brewmaster == true then
		xrn:message(&amp;quot;|cffFF78A0Guard - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_GuardQueue&amp;quot;, 0)
		elseif Windwalker == true then
		xrn:message(&amp;quot;|cffFF78A0Guard - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_GuardQueue&amp;quot;, 0)
		end
	end	
		SLASH_BLACK1 = &amp;quot;/black&amp;quot;
	function SlashCmdList.BLACK(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_BlackQueue&amp;quot;) then
			if Brewmaster == true then
			xrn:message(&amp;quot;|cffFF78A0Summon Black Ox Statue - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_BlackQueue&amp;quot;, 1)
			end
		elseif Brewmaster == true then
		xrn:message(&amp;quot;|cffFF78A0Summon Black Ox Statue - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_BlackQueue&amp;quot;, 0)
		elseif Windwalker == true then
		xrn:message(&amp;quot;|cffFF78A0Summon Black Ox Statue - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_BlackQueue&amp;quot;, 0)
		end
	end		
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;)
			xrn:message(&amp;quot;\124cFF3BB0FFArea of Effect Rotation&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_BMCleave&amp;quot;, 0)
		else
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
			xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;) 
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		end
	end
	SLASH_OHSHIT1 = &amp;quot;/ohshitbutton&amp;quot;
	function SlashCmdList.OHSHIT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_OhShitButtonQueue&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFOh Shit Button - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_OhShitButtonQueue&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFF0000FFOh Shit Button - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_OhShitButtonQueue&amp;quot;, 0)
		end
	end
	SLASH_FORT1 = &amp;quot;/fortifying&amp;quot;
	function SlashCmdList.FORT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_FortBrewQueue&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFFortifying Brew - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_FortBrewQueue&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFF0000FFFortifying Brew - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_FortBrewQueue&amp;quot;, 0)
		end
	end
	SLASH_TIERFIVE1 = &amp;quot;/tierfive&amp;quot;
	function SlashCmdList.TIERFIVE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Tier5TalentQueue&amp;quot;) then
			xrn:message(&amp;quot;\124cFFCC9900Tier 5 Talent Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Tier5TalentQueue&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC9900Tier 5 Talent Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Tier5TalentQueue&amp;quot;, 0)			
		end
	end
		
	SLASH_TIERFOUR1 = &amp;quot;/tierfour&amp;quot;
	function SlashCmdList.TIERFOUR(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Tier4TalentQueue&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFTier 4 Talent Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Tier4TalentQueue&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFTier 4 Talent Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Tier4TalentQueue&amp;quot;, 0)
		end
	end
	
	SLASH_PARALYSISQUEUE1 = &amp;quot;/paralysis&amp;quot;
	function SlashCmdList.PARALYSISQUEUE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_ParalysisMouseoverQueue&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFParalysis on Mouseover Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_ParalysisMouseoverQueue&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFParalysis Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_ParalysisMouseoverQueue&amp;quot;, 0)
		end
	end
		SLASH_PAUSE1 = &amp;quot;/pause&amp;quot;
	function SlashCmdList.PAUSE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFRotation Paused.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFRotation Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
		end
	end
		SLASH_BREATH1 = &amp;quot;/breath&amp;quot;
	function SlashCmdList.BREATH(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Breath&amp;quot;) then
			if Brewmaster == true then
			xrn:message(&amp;quot;|cffFF78A0Breath of Fire - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Breath&amp;quot;, 1)
			end
		elseif Brewmaster == true then
		xrn:message(&amp;quot;|cffFF78A0Breath of Fire - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_Breath&amp;quot;, 0)
		elseif Windwalker == true then
		xrn:message(&amp;quot;|cffFF78A0Breath of Fire - Canceled.&amp;quot;)
		SetCVar(&amp;quot;Nova_Breath&amp;quot;, 0)
		end
	end	
			SLASH_HOLD1 = &amp;quot;/hold&amp;quot;
	function SlashCmdList.HOLD(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Hold&amp;quot;) then
			xrn:message(&amp;quot;\124cFFFFFFFFKeg Smash Paused.&amp;quot;)
			SetCVar(&amp;quot;Nova_Hold&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFKeg Smash Enabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Hold&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---7.Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Pause ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Tiger Palm</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>if  UnitBuffID (&amp;quot;player&amp;quot;,118636) == nil
			then 
			return true
		elseif UnitBuffID (&amp;quot;player&amp;quot;,125359) == nil
			then 
			return true
		elseif UnitPower (&amp;quot;player&amp;quot;) &amp;lt;= 30
			then 
			return true
		end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Dizzying Haze</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if PQI_SoapboxBrewmaster_DizzyingHaze_enable then
	if PQI:IsHotkeys(PQI_SoapboxBrewmaster_DizzyingHaze_key) and not GetCurrentKeyBoardFocus() 
	and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	and not IsMounted()
	and IsSpellKnown(115180) 
	and UnitPower (&amp;quot;player&amp;quot;) &amp;gt;= 25
	then 
 	 SpellCancelQueuedSpell() 
 	 CastSpellByName(GetSpellInfo(115180),nil) 
 	 if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  	return true 
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Black Ox Statue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end


if Nova_BlackQueue == 1
then
	CastSpellByName(GetSpellInfo(115315))
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Guard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if UnitBuffID (&amp;quot;player&amp;quot;,118636) ~= nil then
	if not IsInRaid()
	and (100*(UnitHealth(&amp;quot;player&amp;quot;)/UnitHealthMax(&amp;quot;player&amp;quot;))) &amp;lt; 75
	then 
		CastSpellByName(GetSpellInfo(115295))
	end
	
	if Nova_GuardQueue == 1
	then
		CastSpellByName(GetSpellInfo(115295))
	end
	
	if (100*(UnitHealth(&amp;quot;player&amp;quot;)/UnitHealthMax(&amp;quot;player&amp;quot;))) &amp;lt; 35
	then
		CastSpellByName(GetSpellInfo(115295))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Desperate Measures</Name><Default>false</Default><SpellID>115072</SpellID><Actions></Actions><Lua>local Playerhealth = Playerhealth

if Playerhealth &amp;lt; 35 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Purifying Brew</Name><Default>false</Default><SpellID>119582</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end
local v = tonumber(PQI_SoapboxBrewmaster_EmergencyBrew_value)
local Blackout, Blackouttimer, Chi = Blackout, Blackouttimer, Chi
	if UnitDebuffID(&amp;quot;player&amp;quot;, 124273) 
	or (PQI_SoapboxBrewmaster_EmergencyBrew_enable and UnitDebuffID(&amp;quot;player&amp;quot;, 124274) and Playerhealth &amp;lt; v) then
		return true
	end
	if UnitDebuffID(&amp;quot;player&amp;quot;, 124274) and (Blackout and Blackouttimer - GetTime() &amp;gt; 4 or Chi &amp;gt; 3) then
		return true
	end		
	if UnitDebuffID(&amp;quot;player&amp;quot;, 124275) and (Blackout and Blackouttimer - GetTime() &amp;gt; 10 or Chi &amp;gt; 3) then
		return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Elusive Brew</Name><Default>false</Default><SpellID>115308</SpellID><Actions></Actions><Lua>if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,128939)

if name
and (count &amp;gt; 9 or (count &amp;gt; 1 and expires - GetTime() &amp;lt; 4)) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Breath of Fire</Name><Default>false</Default><SpellID>115181</SpellID><Actions></Actions><Lua>if not PQI_SoapboxBrewmaster_AutoBreathOfFire_enable then return false end

if Nova_BMCleave == 1 
or (Nova_AOE == 1 and IsPlayerSpell(116847)) then 
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Haze then
if Blackout then
	if Blackouttimer - GetTime() &amp;gt; 10 then
	return true
	end
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Blackout Kick</Name><Default>false</Default><SpellID>100784</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

local Blackout, Blackouttimer, Chi = Blackout, Blackouttimer, Chi

if not Blackout then 
return true
elseif Blackouttimer - GetTime() &amp;lt; 10 then
return true
elseif Chi &amp;gt; 3 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Keg Smash</Name><Default>false</Default><SpellID>121253</SpellID><Actions>/use 10</Actions><Lua>if Nova_Hold == 1 then return false end

if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then return false end

if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Expel Harm</Name><Default>false</Default><SpellID>115072</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

local Playerhealth = Playerhealth

if Playerhealth &amp;lt; 85 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Jab</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

	local KStart, KDuration = GetSpellCooldown(121253)
	local KCD = KStart + KDuration - GetTime() 
	local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
	local CurrentEnergy = UnitPower(&amp;quot;player&amp;quot;)
	Keg = CurrentEnergy - 40 + (KCD * EnergyRegen)
	if PQR_SpellAvailable(100780)
	and IsSpellKnown(100780)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and UnitPower (&amp;quot;player&amp;quot;) &amp;gt;= 40 then
		if (Keg &amp;gt;= 30 and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1) or GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then
			CastSpellByName(GetSpellInfo(100780))
			return true
		end
		if (Keg &amp;lt; 30 and GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1) or GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then
			CastSpellByName(GetSpellInfo(100787))
			return true
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4a.Spec Check---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Windwalker == true then
	if Nova_BMCleave == 1 then
	 PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)			
 	 SetCVar(&amp;quot;Nova_BMCleave&amp;quot;, 0)
 	end  
elseif Brewmaster == true then
	if Nova_Cleave == 1 then		
 	 SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
 	end  
 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Cleave Spinning Crane Kick</Name><Default>false</Default><SpellID>101546</SpellID><Actions></Actions><Lua>if IsPlayerSpell(116847) then return false end
if Nova_BMCleave ~= 1 then return false end

local KSCD = KSCD

if Breath or (not Breath and not Haze) then
if (GetShapeshiftForm(&amp;quot;player&amp;quot;) == 1 and KSCD &amp;gt; 3) or GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then
return true
end
end</Lua><RecastDelay>2010</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Cancel Cleave</Name><Default>false</Default><SpellID>137639</SpellID><Actions></Actions><Lua>if Nova_Cleave ~= 1 then return false end

local Element, Elementcount = Element, Elementcount

if Element and Elementcount&amp;gt;1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Charging Ox Wave</Name><Default>false</Default><SpellID>119392</SpellID><Actions></Actions><Lua>if Nova_Tier4TalentQueue == 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Chi Brew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Chi = Chi

local TB_, _, _, TBS = UnitBuffID(&amp;quot;player&amp;quot;,125195) -- Tigereye Brew Stacks 

if TB then
	if TBS &amp;gt; 18 then return false 
	end
end

if IsPlayerSpell(115399) then 
	if PQR_SpellAvailable(115399) then 
		if cTime &amp;lt; 10 or Energy &amp;lt; 60 then 
			if Chi &amp;lt; 3 then
			CastSpellByName(GetSpellInfo(115399))
			PQR_DelayRotation(0.5)
			return true
			end
		end
	end
end</Lua><RecastDelay>15000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- CB: BOK</Name><Default>false</Default><SpellID>100784</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end


local CBBOK = CBBOK

if CBBOK then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Energizing Brew</Name><Default>false</Default><SpellID>115288</SpellID><Actions></Actions><Lua>local Energy = Energy

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)


if EnergyCap &amp;gt; (5) and not CBBOK and not Rune
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Fists of Fury</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end
local Energizing, EnergyCap, Power, Powertimer = Energizing, EnergyCap, Power, Powertimer

if Nova_FistsOfFury ~= 1 or Energizing then return false end

local FFT = select(7,GetSpellInfo(113656))/1000

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

if EnergyCap &amp;lt; (3) then return false end

---if Rune then
---return false
---end



if UnitBuffID(&amp;quot;player&amp;quot;, 116847) then
	if FOFCD &amp;lt; 1 and Chi &amp;gt; 2 then
		if not PQR_IsMoving(1) 
		and ((RSKCD &amp;gt; 1 and Chi == 5) or RSKCD &amp;gt; 1) and EnergyCap &amp;gt;= (3) and Power and Powertimer - GetTime() &amp;gt; (4) and not Energizing then
		CastSpellByName(GetSpellInfo(113656), &amp;quot;target&amp;quot;)
		return true
		end
	end
elseif FOFCD &amp;lt; 1 and Chi &amp;gt; 2 then
	if not PQR_IsMoving(1) 
	and ((RSKCD &amp;gt; 1 and Chi == 5) or RSKCD &amp;gt; 2) and EnergyCap &amp;gt;= (3) and Power and Powertimer - GetTime() &amp;gt; (4) and not Energizing then
	CastSpellByName(GetSpellInfo(113656), &amp;quot;target&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Grapple Weapon</Name><Default>false</Default><SpellID>117368</SpellID><Actions></Actions><Lua>local Grapple, Disarmed = Grapple, Disarmed

if Grapple == true and Disarmed == false then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Invoke Xuen, the White Tiger</Name><Default>false</Default><SpellID>123904</SpellID><Actions></Actions><Lua>if Nova_Cooldowns ~= 1 then return false end

if GetSpecialization() == 1 then 
	if PQI_SoapboxBrewmaster_BossCooldowns_enable then
	if not SpecialUnit() then
	return false end
	end
elseif GetSpecialization() == 3 then
	if PQI_SoapboxWindwalker_BossCooldowns_enable then
	if not SpecialUnit() then
	return false end
	end
end

if UnitExists(&amp;quot;boss&amp;quot;..1) then
local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)

if BossID == 69465	
or BossID == 69712 then
    if BossID == 69465 then -- Jin&amp;apos;Rokh
	local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)	
		if Fluidity then
		return true
		end					
    elseif BossID == 69712 then -- Ji-Kun
  	local TargetID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
  	local Feed = UnitBuffID(&amp;quot;player&amp;quot;, 140741)
   		if TargetID == BossID then
			if Feed then
			return true 
			end
		end
	end
else
return true
end -- boss fights without damage buff effects
else
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Jab</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

local Playerhealth, ECD, JabCD = 
Playerhealth, ECD, JabCD

local value = tonumber(PQI_SoapboxWindwalker_ExpelHarm_value)
 ---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)
if Nova_FistsOfFury == 1 then SoftCap = 3 else SoftCap = 2 end

if PQI_SoapboxWindwalker_ExpelHarm_enable then
	if ECD &amp;lt; 1 and UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 1) 
	and (Playerhealth &amp;lt;= value or JabCD &amp;gt; 1) then	
		if Chi &amp;lt; SoftCap or EnergyCap &amp;lt; (3) 
		or PQR_SpellAvailable(113656) and Nova_FistsOfFury == 1 then
		CastSpellByName(GetSpellInfo(115072), &amp;quot;player&amp;quot;)
		end
	end
end

if not PQR_SpellAvailable(100780) then return false end
if (UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 1)) then
	if Chi &amp;lt; SoftCap or EnergyCap &amp;lt; (3) 
	or PQR_SpellAvailable(113656) and Nova_FistsOfFury == 1 then
	CastSpellByName(GetSpellInfo(100780))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Jab: Touch of Death</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

local TODCD, ECD, Playerhealth, JabCD, GlyphTouch, Chi, DeathBoss = TODCD, ECD, Playerhealth, 
JabCD, GlyphTouch, Chi, DeathBoss
local value = tonumber(PQI_SoapboxWindwalker_ExpelHarm_value)

if GlyphTouch == false and Chi &amp;lt; 3 and TODCD &amp;lt; 1
and ((DeathBoss and (UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*6)) 
or (IsInInstance() and IsInGroup() and UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*4.5) 
or (UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealthMax(&amp;quot;player&amp;quot;)*1.5)) then
	if PQI_SoapboxWindwalker_ExpelHarm_enable then
		if (Playerhealth &amp;lt;= value or JabCD &amp;gt; 1) and ECD &amp;lt; 1 then
			CastSpellByName(GetSpellInfo(115072), &amp;quot;player&amp;quot;)
		end
	end
	
	if ((PQI_SoapboxWindwalker_ExpelHarm_enable and Playerhealth &amp;gt; value) or not PQI_SoapboxWindwalker_ExpelHarm_enable or ECD &amp;gt;= 1) 
	then
		CastSpellByName(GetSpellInfo(100780), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Leg Sweep</Name><Default>false</Default><SpellID>119381</SpellID><Actions></Actions><Lua>if Nova_Tier4TalentQueue == 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Paralysis</Name><Default>false</Default><SpellID>115078</SpellID><Actions></Actions><Lua>if IsMounted() then
return false
end

if Nova_ParalysisMouseoverQueue == 1 then
	if UnitExists(&amp;quot;mouseover&amp;quot;) then 
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Ring of Peace</Name><Default>false</Default><SpellID>116844</SpellID><Actions></Actions><Lua>if Nova_Tier4TalentQueue == 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Rising Sun Kick</Name><Default>false</Default><SpellID>107428</SpellID><Actions></Actions><Lua>---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

---if Rune then
---	if Runetimer - GetTime() &amp;lt; 2 and EnergyCap &amp;gt; (2) then 
---	return false 
---	end
---end



return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Rising Sun Kick -Debuff-</Name><Default>false</Default><SpellID>107428</SpellID><Actions></Actions><Lua>local Kick, Kicktimer = Kick, Kicktimer

if not Kick then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Rune of Reorigination</Name><Default>false</Default><SpellID>116740</SpellID><Actions>/use 13|/use 14|/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>if RuneTrink then 
	if UnitExists(&amp;quot;target&amp;quot;) and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and IsSpellInRange(GetSpellInfo(100780), &amp;quot;target&amp;quot;) == 1 then
	
	local TigereyeBrewBuff = UnitBuffID(&amp;quot;player&amp;quot;, 116740, &amp;quot;EXACT|PLAYER&amp;quot;)
    local _, _, _, TBS = UnitBuffID(&amp;quot;player&amp;quot;,125195) -- Tigereye Brew Stacks 
	local Rune, _, _, _, _, _, RuneTimer = UnitBuffID(&amp;quot;player&amp;quot;, 139120) -- Mastery Proc
	local TBT1, TBT2 = TrinketProc() -- Trinkets Buff Timers
	local BLT = Lust() -- Bludlust timer
	
	if Rune then RuneTimer = RuneTimer - GetTime() else RuneTimer = 0 end
			
	if UnitExists(&amp;quot;boss&amp;quot;..1) then
    	
		local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)
 		local BossHP =  UnitHealth(&amp;quot;boss1&amp;quot;)*100/UnitHealthMax(&amp;quot;boss1&amp;quot;)
    	
    	if (BossID == 69465	-- Jin&amp;apos;Rokh
    	or BossID == 69712)	-- Ji-Kun
    	and BossHP &amp;gt;= 10 then
			
    		if BossID == 69465 then -- Jin&amp;apos;Rokh
				
				local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)
				
				if Rune then					
					if RuneTimer &amp;lt; 1.5 then return true end
				elseif TBS &amp;gt;= 10 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 12 or TBT2 &amp;gt;= 12) 
				and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) and Fluidity then
					return true
				elseif TBS &amp;gt;= 15 and not TigereyeBrewBuff and Fluidity
				and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
					return true 
				end
							
    		elseif BossID == 69712 then -- Ji-Kun
    		
  				local TargetID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
  				local Feed = UnitBuffID(&amp;quot;player&amp;quot;, 140741)
		
   				if TargetID == BossID then
					if Rune then
						if RuneTimer &amp;lt; 1.5 then return true end
					elseif not TigereyeBrewBuff and Feed then
						return true
					elseif TBS &amp;gt;= 14 and not TigereyeBrewBuff 
					and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 12 or TBT2 &amp;gt;= 12) 
					and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
						return true
					elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
					and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
						return true 
					end
				end
				
			end
				
		elseif BossHP &amp;gt;= 10 then -- boss fights without damage buff effects
			
			if Rune then
				if RuneTimer &amp;lt; 1.5 then return true end
			elseif TBS &amp;gt;= 14 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 12 or TBT2 &amp;gt;= 12) 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
					 return true
			elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
			 return true 
			end 
			
		elseif BossHP &amp;lt; 10 then	
			if Rune then
				if RuneTimer &amp;lt; 1.5 then return true end
			elseif TBS &amp;gt;= 14 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 12 or TBT2 &amp;gt;= 12) 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
				return true
			elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
			return true  
			elseif not TigereyeBrewBuff and T2D(&amp;quot;target&amp;quot;) &amp;lt; 17  then return true end
			
		end
	elseif Rune then
			if RuneTimer &amp;lt; 1.5 then  return true end
	elseif TBS &amp;gt;= 14 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 12 or TBT2 &amp;gt;= 12) 
	and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
	return true
	elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
	and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
	return true 
	end		
end
end</Lua><RecastDelay>2000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Rushing Jade Wind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
if Blackout then
	if Blackouttimer - GetTime() &amp;lt; 5 then
	return false
	end
else
return false
end
	if Nova_AOE ~= 1 and Nova_BMCleave ~= 1 then 
	return false
	end
elseif Nova_AOE ~= 1 then
return false
end


if not IsPlayerSpell(116847) then return false end
if PQR_SpellAvailable(116847) then
CastSpellByName(GetSpellInfo(116847))
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Spinning Crane Kick</Name><Default>false</Default><SpellID>101546</SpellID><Actions></Actions><Lua>if IsPlayerSpell(116847) then return false end
if Nova_AOE ~= 1 then return false end

return true</Lua><RecastDelay>2010</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Stance of the Sturdy Ox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQI_SoapboxBrewmaster_StanceoftheSturdyOx_enable then
	if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 1 then
	CastShapeshiftForm(1)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Stop FSK</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(123586)
	and not spellSucced then
 	 spellSucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
 	 spellSucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
 	 spellSucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==101545 then Flying=true end end)
	end

	if Flying == true
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(100780), &amp;quot;target&amp;quot;) == 1
	then
		CastSpellByName(GetSpellInfo(123586))
		Flying = false
		return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Storm, Earth, and Fire</Name><Default>false</Default><SpellID>137639</SpellID><Actions></Actions><Lua>if Element then
	if Nova_Cleave == 1 and UnitIsUnit(&amp;quot;mouseover&amp;quot;, &amp;quot;target&amp;quot;) then
	RunMacroText(&amp;quot;/cancelaura Storm, Earth, and Fire&amp;quot;)
	PQR_WriteToChat(&amp;quot;Storm, Earth, and Fire: \124cFFE61515Canceled&amp;quot;)
	SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0)
	end
end

if Nova_Cleave == 1 then
if UnitExists(&amp;quot;mouseover&amp;quot;)
and not UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;)
and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;, 1)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) == 1 then
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Tiger Palm</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end
local CBTP, CBTPtimer = CBTP, CBTPtimer

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

if (CBTP and EnergyCap &amp;gt; 2) or (CBTP and CBTPtimer - GetTime() &amp;lt; 2) then 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Tiger Power</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>local Power, Kick, Kicktimer = Power, Kick, Kicktimer

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

if not Power then
return true
end</Lua><RecastDelay>15000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Tiger Power -Refresh-</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>local Power, Powertimer = Power, Powertimer
---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

if Power and ((Powertimer - GetTime() &amp;lt; 3 and EnergyCap &amp;gt; (0.5))  or Powertimer - GetTime() &amp;lt; 2) then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Tigereye Brew</Name><Default>false</Default><SpellID>116740</SpellID><Actions>/use 13|/use 14|/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>---if not RuneTrink then 
if UnitExists(&amp;quot;target&amp;quot;) and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and IsSpellInRange(GetSpellInfo(100780), &amp;quot;target&amp;quot;) == 1 then
	
	local TigereyeBrewBuff = UnitBuffID(&amp;quot;player&amp;quot;, 116740, &amp;quot;EXACT|PLAYER&amp;quot;)
    local _, _, _, TBS = UnitBuffID(&amp;quot;player&amp;quot;,125195) -- Tigereye Brew Stacks 
	local TBT1, TBT2 = TrinketProc() -- Trinkets Buff Timers
	local BLT = Lust() -- Bludlust timer
	
			
	if UnitExists(&amp;quot;boss&amp;quot;..1) then
    	
		local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)
 		local BossHP =  UnitHealth(&amp;quot;boss1&amp;quot;)*100/UnitHealthMax(&amp;quot;boss1&amp;quot;)
    	
    	if (BossID == 69465	-- Jin&amp;apos;Rokh
    	or BossID == 69712)	-- Ji-Kun
    	and BossHP &amp;gt;= 10 then
			
    		if BossID == 69465 then -- Jin&amp;apos;Rokh
				
				local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)
				if cTime &amp;lt; 12 and not TigereyeBrewBuff and TBS &amp;gt;= 4 then
				return true
				elseif TBS &amp;gt;= 10 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 5 or TBT2 &amp;gt;= 5) 
				and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) and Fluidity then
					return true
				elseif TBS &amp;gt;= 15 and not TigereyeBrewBuff and Fluidity
				and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
					return true 
				end
							
    		elseif BossID == 69712 then -- Ji-Kun
    		
  				local TargetID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
  				local Feed = UnitBuffID(&amp;quot;player&amp;quot;, 140741)
		
   				if TargetID == BossID then				
   					if cTime &amp;lt; 12 and not TigereyeBrewBuff and TBS &amp;gt;= 4 then
					return true
					elseif not TigereyeBrewBuff and Feed then
						return true
					elseif TBS &amp;gt;= 10 and not TigereyeBrewBuff 
					and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 5 or TBT2 &amp;gt;= 5) 
					and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
						return true
					elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
					and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
						return true 
					end
				end
				
			end
				
		elseif BossHP &amp;gt;= 10 then -- boss fights without damage buff effects
			if cTime &amp;lt; 12 and not TigereyeBrewBuff and TBS &amp;gt;= 4 then
				return true
			elseif TBS &amp;gt;= 10 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 5 or TBT2 &amp;gt;= 5) 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
					return true
			elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
				return true 
			end
			
		elseif BossHP &amp;lt; 50 then
			if cTime &amp;lt; 12 and not TigereyeBrewBuff and TBS &amp;gt;= 4 then
				return true
			elseif TBS &amp;gt;= 10 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 5 or TBT2 &amp;gt;= 5) 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
					return true
			elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
			and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
				return true 
			elseif not TigereyeBrewBuff and T2D(&amp;quot;target&amp;quot;) &amp;lt; 10 then return true end
			
		end
	else -- not a raid boss fight
		if cTime &amp;lt; 12 and not TigereyeBrewBuff and TBS &amp;gt;= 4 then
				return true
		elseif TBS &amp;gt;= 10 and not TigereyeBrewBuff and (BLT &amp;gt;= 10 or TBT1 &amp;gt;= 5 or TBT2 &amp;gt;= 5) 
		and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then
				return true
		elseif TBS &amp;gt;= 17 and not TigereyeBrewBuff 
		and (GetSpellCD(107428) &amp;lt; 1 or (Nova_FOF == 1 and GetSpellCD(113656) &amp;lt; 5)) then 
			return true 
		end
		
	end
	
end
---end</Lua><RecastDelay>15000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Blackout Kick TeB</Name><Default>false</Default><SpellID>100784</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)

local FOFCD, Energy, RSKCD, Energizing, Power, Powertimer = FOFCD, Energy, RSKCD, Energizing, 
Power, Powertimer

---if cTime &amp;gt; 10 then
---if Rune then
	---if not Tiger or (Tiger and Tigertimer - GetTime() &amp;lt; 10) then
		---if Runetimer - GetTime() &amp;lt; 7 then
			---if (UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 1)) and EnergyCap &amp;gt; (2) then
		---	return false
		---	end
		---end
---	end
---end
---end

if UnitBuffID(&amp;quot;player&amp;quot;,116847) then
	if Nova_FistsOfFury == 1 then
		if not Energizing and not PQR_IsMoving(1) 
		and ((RSKCD &amp;gt; 1 and Chi &amp;lt; UnitPowerMax(&amp;quot;player&amp;quot;,12)) or RSKCD &amp;gt; 1)
		and EnergyCap &amp;gt; (2) and Power and Powertimer - GetTime() &amp;gt; (4) 
		and FOFCD &amp;lt; 1 then
		return false
		end
	end
elseif Nova_FistsOfFury == 1 then
	if not Energizing and not PQR_IsMoving(1) 
	and ((RSKCD &amp;gt; 1 and Chi &amp;lt; UnitPowerMax(&amp;quot;player&amp;quot;,12)) or RSKCD &amp;gt; 2)
	and EnergyCap &amp;gt; (2) and Power and Powertimer - GetTime() &amp;gt; (4)
	and FOFCD &amp;lt; 1 
	and not Rune then
	return false
	end
end

if Tiger then
	if ((Energy + (EnergyRegen * (RSKCD))) &amp;gt;= 40) then
		if (UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; (UnitPowerMax(&amp;quot;player&amp;quot;,12) - 1)) then
			if EnergyCap &amp;gt; (1) then
				if RSKCD &amp;gt; 2 then
				return true
				end
			end
		else
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Pre-Combat</Name><Default>false</Default><SpellID>115072</SpellID><Actions></Actions><Lua>if PQI_SoapboxWindwalker_ChiCapPreCombat_enable then 
	if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if not Active then
		return true
    	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4. BM Toggle Key---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false
 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
	





  ----------------
  --Nova  Checks--
  ----------------
  

  ---Status Frame Defaults---
  CDGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
  
  if Nova_Cooldowns == 1 then
  CDGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot;
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) end
  if (Nova_AOE == nil or Nova_AOE == 0) and (Nova_BMCleave == nil or Nova_BMCleave == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_BMCleave == 1 then	
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cleave&amp;quot;,nil,&amp;quot;0fffff&amp;quot;) end
  if Nova_Cleave == 1 then	
  SetCVar(&amp;quot;Nova_Cleave&amp;quot;, 0) end	
  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4. WW Toggle Key---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false



 ---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
	
	
FOFGlobal = &amp;quot; |cffb73737OFF   &amp;quot;
CDGlobal = &amp;quot; |cffb73737OFF   &amp;quot;

  ----------------
  --Nova  Checks--
  ----------------
  if Nova_Cooldowns == 1 then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) 
  CDGlobal =   &amp;quot; |cFF00FF00ON  &amp;quot; end
  if Nova_FistsOfFury == 1 then
  PQR_WriteToChat(&amp;quot;Fists Of Fury: \124cFF15E615Active&amp;quot;) 
  FOFGlobal = &amp;quot;  |cFF00FF00ON  &amp;quot; end
  if (Nova_AOE == nil or Nova_AOE == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_BMCleave == 1 then	
  SetCVar(&amp;quot;Nova_BMCleave&amp;quot;, 0) end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---0. Rotation Check---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() == 1 then
	Spec = &amp;quot;Brewmaster&amp;quot;
	PQR_SwapRotation(&amp;quot;Brewmaster (Soapbox Monk Serial WWBM1986)&amp;quot;) 
elseif GetSpecialization() == 2 then
	Spec = &amp;quot;Mistweaver&amp;quot;
	PQR_SwapRotation(&amp;quot;Windwalker (Soapbox Monk Serial WWBM1986)&amp;quot;)
elseif GetSpecialization() == 3 then
	Spec = &amp;quot;Windwalker&amp;quot;
	PQR_SwapRotation(&amp;quot;Windwalker (Soapbox Monk Serial WWBM1986)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3. BM Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_BREWMASTER then return false end

local config = {
	name  = &amp;apos;Brewmaster&amp;apos;,
	author  = &amp;apos;Soapbox&amp;apos;,
	abilities = {
		{  name = &amp;quot;5 Min DPS Test&amp;quot;,
			enable = false,
			newSection = true,
		},	
						{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
		{  name = &amp;quot;Auto Target Next Enemy&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;When Enabled, will atuomatically target the next enem once your target has died&amp;quot;,
		},
		{  name = &amp;quot;Raid Buffing&amp;quot;,
			enable = false,
			newSection = true,
		},
		{  name = &amp;quot;Boss Cooldowns&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;When Enabled, will only use cooldowns on boss targets&amp;quot;,
		},
		{  name = &amp;quot;Auto Breath Of Fire&amp;quot;,
			enable = true,
			newSection = true,
		},	
		{  name = &amp;quot;Stance of the Sturdy Ox&amp;quot;,
			enable = true,
			newSection = true,
		},	
		{  name = &amp;quot;Racials&amp;quot;,
			enable = false,
			newSection = true,
		},	
		{  name = &amp;quot;Frag Belt&amp;quot;,
			enable = false,
		},
		{  name = &amp;quot;Emergency Brew&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;Will over-ride pre-existing settings for &amp;apos;Moderate&amp;apos; Brew and use Purifying Brew when you drop below this health %&amp;quot;,
				widget = { type = &amp;apos;numBox&amp;apos;,
				value = 25,
				step = 5,
			},
		},
		{  name = &amp;quot;Zen Sphere&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 40,
				step = 5,
			},
		},
		{  name = &amp;quot;Fortifying Brew&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 40,
				step = 5,
			},
		},
		{  name = &amp;quot;Diffuse Magic&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
			},
		},
		{  name = &amp;quot;Dampen Harm&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
			},
		},
		{  name = &amp;quot;Healthstone&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 65,
				step = 5,
			},
		},
	},
	hotkeys = {
		{ name = &amp;quot;Dizzying Haze&amp;quot;,  			enable = true, hotkeys = {&amp;apos;lc&amp;apos;}, 
		tooltip	= &amp;quot;|cffCC0099Cast Dizzying Haze on Mouseover&amp;quot;, },						
	},	
}
SOAPBOX_BREWMASTER = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3. WW Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_WINDWALKER then return false end

local config = {
	name  = &amp;apos;Windwalker&amp;apos;,
	author  = &amp;apos;Soapbox&amp;apos;,
	abilities = {
		{  name = &amp;quot;5 Min DPS Test&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;|cffCC0099When a target dummy is attacked this will stop at exactly 5 mins and take a screenshot&amp;quot;,	
		},	
						{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
		{  name = &amp;quot;Auto Target Next Enemy&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;When Enabled, will atuomatically target the next enem once your target has died&amp;quot;,
		},
		{  name = &amp;quot;Raid Buffing&amp;quot;,
			enable = false,
			newSection = true,
		},
		{  name = &amp;quot;Chi Cap Pre Combat&amp;quot;,
			enable = false,
			newSection = true,
			tooltip	= &amp;quot;|cffCC0099Enable this when Raiding/Heroics this will stack chi when you are out of combat to be used in combat&amp;quot;,
		},
		{  name = &amp;quot;Racials&amp;quot;,
			enable = false,
			newSection = true,
		},	
		{  name = &amp;quot;Frag Belt&amp;quot;,
			enable = true,
		},	
		{  name = &amp;quot;Synapse Springs&amp;quot;,
			enable = true,
		},
		{  name = &amp;quot;Potions&amp;quot;,
			enable = true,
		},		
		{  name = &amp;quot;Boss Cooldowns&amp;quot;,
			enable = true,
			newSection = true,
			tooltip	= &amp;quot;When Enabled, will only use cooldowns on boss targets.&amp;quot;,
			
		},
		{  name = &amp;quot;Expel Harm&amp;quot;,			
			newSection = true,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 80,
				step = 5,
			},
		},
		{  name = &amp;quot;Zen Sphere&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 40,
				step = 5,
			},
		},
		{  name = &amp;quot;Touch of Karma&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 40,
				step = 5,
			},
		},
		{  name = &amp;quot;Fortifying Brew&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 40,
				step = 5,
			},
		},
		{  name = &amp;quot;Diffuse Magic&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
			},
		},
		{  name = &amp;quot;Dampen Harm&amp;quot;,
			enable = false,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 30,
				step = 5,
			},
		},
		{  name = &amp;quot;Healthstone&amp;quot;,
			enable = true,
			widget = { type = &amp;apos;numBox&amp;apos;,
				value = 65,
				step = 5,
			},
		},
	},	
}
SOAPBOX_WINDWALKER = PQI:AddRotation(config)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Chi Wave</Name><Default>false</Default><SpellID>115098</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

if Playerhealth &amp;lt; 80 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Chi Wave</Name><Default>false</Default><SpellID>115098</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

---if cTime &amp;lt; 10 then return false end


---if Rune then
---	if not Tiger then
---	return false
---	elseif Tiger and Tigertimer - GetTime() &amp;lt; 8 then
---	return false
---	end
---end


 ---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)


	if EnergyCap &amp;gt; 2 then
		if Chi &amp;lt; 4 then
			if Chi &amp;gt; 1 or RSKCD &amp;lt; 2 then
			return true
			end
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Chi Burst</Name><Default>false</Default><SpellID>123986</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

if not PQR_IsMoving(1) then
	if Playerhealth &amp;lt; 75 then
	return true
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Chi Burst</Name><Default>false</Default><SpellID>123986</SpellID><Actions></Actions><Lua>if Nova_AOE == 1 and not IsPlayerSpell(116847) then return false end

local RSKCD = RSKCD

---Energy Regen Calculator---
local MaxEnergy = UnitPowerMax(&amp;quot;player&amp;quot;)
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyCap = (MaxEnergy - Energy) * (1.0 / EnergyRegen)


if PQR_IsMoving(0.3) then return false end
if EnergyCap &amp;lt; (1) then return false end
if RSKCD &amp;lt; 1 then return false end

	return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Dampen Harm</Name><Default>false</Default><SpellID>122278</SpellID><Actions></Actions><Lua>local value2 = tonumber(PQI_SoapboxBrewmaster_DampenHarm_value)

if Nova_Tier5TalentQueue == 1 then
return true
elseif PQI_SoapboxBrewmaster_DampenHarm_enable then
	if Playerhealth &amp;lt;= value2 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Dampen Harm</Name><Default>false</Default><SpellID>122278</SpellID><Actions></Actions><Lua>local value = tonumber(PQI_SoapboxWindwalker_DampenHarm_value)

if Nova_Tier5TalentQueue == 1 then
return true
elseif PQI_SoapboxWindwalker_DampenHarm_enable then
	if Playerhealth &amp;lt;= value then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Diffuse Magic</Name><Default>false</Default><SpellID>122783</SpellID><Actions></Actions><Lua>local value2 = tonumber(PQI_SoapboxBrewmaster_DiffuseMagic_value)

if Nova_Tier5TalentQueue == 1 then
return true
elseif PQI_SoapboxBrewmaster_DiffuseMagic_enable then
	if Playerhealth &amp;lt;= value2 and MagicDebuff then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Diffuse Magic</Name><Default>false</Default><SpellID>122783</SpellID><Actions></Actions><Lua>local value = tonumber(PQI_SoapboxWindwalker_DiffuseMagic_value)

if Nova_Tier5TalentQueue == 1 then
return true
elseif PQI_SoapboxWindwalker_DiffuseMagic_enable then
	if Playerhealth &amp;lt;= value and MagicDebuff then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Fortifying Brew</Name><Default>false</Default><SpellID>115203</SpellID><Actions></Actions><Lua>local value2 = tonumber(PQI_SoapboxBrewmaster_FortifyingBrew_value)

if Nova_FortBrewQueue == 1 then
return true
elseif PQI_SoapboxBrewmaster_FortifyingBrew_enable then 
	if Playerhealth &amp;lt;= value2 then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Fortifying Brew</Name><Default>false</Default><SpellID>115203</SpellID><Actions></Actions><Lua>local value = tonumber(PQI_SoapboxWindwalker_FortifyingBrew_value)

if Nova_OhShitButtonQueue == 1 then
return true
elseif PQI_SoapboxWindwalker_FortifyingBrew_enable then 
	if Playerhealth &amp;lt;= value then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local value = tonumber(PQI_SoapboxWindwalker_Healthstone_value)
if PQI_SoapboxWindwalker_Healthstone_enable then
	if  Playerhealth &amp;lt;= value and HealthstoneCD &amp;lt; 1 then
	UseItemByName(5512, &amp;quot;player&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local value = tonumber(PQI_SoapboxBrewmaster_Healthstone_value)
if PQI_SoapboxBrewmaster_Healthstone_enable then
	if  Playerhealth &amp;lt;= value and HealthstoneCD &amp;lt; 1 then
	UseItemByName(5512, &amp;quot;player&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Touch of Karma</Name><Default>false</Default><SpellID>122470</SpellID><Actions></Actions><Lua>local value = tonumber(PQI_SoapboxWindwalker_TouchofKarma_value)

if Nova_OhShitButtonQueue == 1 then
	if FortBrew then
	return true
	end
elseif PQI_SoapboxWindwalker_TouchofKarma_enable then
	if Playerhealth &amp;lt;= value then
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Zen Sphere</Name><Default>false</Default><SpellID>124081</SpellID><Actions></Actions><Lua>if not PQI_SoapboxBrewmaster_ZenSphere_enable or Sphere then return false end

local value2 = tonumber(PQI_SoapboxBrewmaster_ZenSphere_value)

if Playerhealth &amp;lt;= value2 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Zen Sphere</Name><Default>false</Default><SpellID>124081</SpellID><Actions></Actions><Lua>if not PQI_SoapboxWindwalker_ZenSphere_enable or Sphere then return false end

local value = tonumber(PQI_SoapboxWindwalker_ZenSphere_value)

if Playerhealth &amp;lt;= value then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end
if not hasEngi then return false end
local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)
if not IsEquippedItem(Belt) then return false end
if GetItemCooldown(Belt) &amp;gt; 0 then return false end


if Windwalker == true then
	if PQI_SoapboxWindwalker_FragBelt_enable then
	if GetCurrentKeyBoardFocus() == nil 
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end
end
elseif Brewmaster == true then
	if PQI_SoapboxBrewmaster_FragBelt_enable then 
		if GetCurrentKeyBoardFocus() == nil 
	and UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;)
then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Potions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local T2D = T2D

	if not PQI_SoapboxWindwalker_Potions_enable then return false end



-- Disable if we have no potions left
if GetItemCount(76089) &amp;lt; 1 then return false end

-- Disable if Potion is on cooldown
if GetItemCooldown(76089) ~= 0 then return false end

-- Disable if we&amp;apos;re not targeting a boss
if not SpecialUnit() then return false end

-- Disable if we don&amp;apos;t have Heroism or T2D is greater than 20 seconds
if not Bloodlust and T2D(&amp;quot;target&amp;quot;) &amp;gt; 20 then return false end

-- At this point, we should just use the potion if all of the above is true
UseItemByName(76089)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxBrewmaster_SpellQueueType_enable then return false end
local v=PQI_SoapboxBrewmaster_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Windwalker- Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxWindwalker_SpellQueueType_enable then return false end
local v=PQI_SoapboxWindwalker_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All Spec- Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,104934)
or UnitBuffID(&amp;quot;player&amp;quot;,104269) then
return false
end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
	if IsPlayerSpell(116781) then 	
		if not AuraInfo(7,&amp;quot;player&amp;quot;) then
		CastSpellByName(GetSpellInfo(116781),&amp;quot;player&amp;quot;)
		return true
		end
	end
end
		


if IsPlayerSpell(115921) then 	
	if not AuraInfo(1,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(115921),&amp;quot;player&amp;quot;)
	return true
	end
end





if (GetSpecialization(&amp;quot;player&amp;quot;) == 1 and PQI_SoapboxBrewmaster_RaidBuffing_enable) 
or (GetSpecialization(&amp;quot;player&amp;quot;) == 3 and PQI_SoapboxWindwalker_RaidBuffing_enable) then
	-- Group setting
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Stats Multiplier
		if not AuraInfo(1,member) and IsSpellInRange(GetSpellInfo(115921),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
			CastSpellByName(GetSpellInfo(115921),member)
			return true
		end
		
		-- Crit Multiplier
		if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
			if not AuraInfo(7,member) and IsSpellInRange(GetSpellInfo(116781),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
				CastSpellByName(GetSpellInfo(116781),member)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spear Hand Strike</Name><Default>false</Default><SpellID>116705</SpellID><Actions></Actions><Lua>if  IsSpellInRange(tostring(GetSpellInfo(116705)), &amp;quot;target&amp;quot;) == 1 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4a. Status Frame---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
if not SoapboxFrame then

SoapboxFrame = true
_Chat = PQR_WriteToChat

--Notify Frame
PQ_NotifyFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
PQ_NotifyFrame:ClearAllPoints()
PQ_NotifyFrame:SetHeight(12)
PQ_NotifyFrame:SetWidth(600)
PQ_NotifyFrame:Show()
PQ_NotifyFrame.text = PQ_NotifyFrame:CreateFontString(nil, &amp;quot;OVERLAY&amp;quot;, &amp;quot;MovieSubtitleFont&amp;quot;)
PQ_NotifyFrame.text:SetAllPoints()
PQ_NotifyFrame:SetPoint(&amp;quot;CENTER&amp;quot;, -680, -150)
PQ_NotifyFrame:SetScale(.75)
PQ_NotifyFrame:SetScript(&amp;quot;OnUpdate&amp;quot;, PQ_NotifyFrame_OnUpdate)
PQ_NotifyFrame:EnableMouse(true)
PQ_NotifyFrame:SetMovable(true)
PQ_NotifyFrame:RegisterForDrag(&amp;quot;LeftButton&amp;quot;)
PQ_NotifyFrame:SetScript(&amp;quot;OnDragStart&amp;quot;, PQ_NotifyFrame.StartMoving)
PQ_NotifyFrame:SetScript(&amp;quot;OnDragStop&amp;quot;, PQ_NotifyFrame.StopMovingOrSizing)
PQ_NotifyFrame.text:SetText(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Fists Of Fury: &amp;quot;..FOFGlobal)
function PQ_Notify(message)
 	if PQ_NotifyFrame:IsShown() then
 		PQ_NotifyFrame.text:SetText(message) 	
 	end
end

SlashCmdList[&amp;apos;DEBUG&amp;apos;] = function()
if PQ_NotifyFrame:IsShown() then
		PQ_NotifyFrame:Hide()
	else
		PQ_NotifyFrame:Show()
	end
end
SLASH_DEBUG1 = &amp;quot;/pqd&amp;quot;

_Chat(&amp;quot;Setup Done!&amp;quot;)
end

if modtime == nil then
	modtime = 0
end
 

	if WW == false or WW == nil then
	PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: &amp;quot;..CDGlobal..&amp;quot;|cffFFBE69Fists Of Fury: &amp;quot;..FOFGlobal)
	WW = true
	return true
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
if not SoapboxFrame then

SoapboxFrame = true
_Chat = PQR_WriteToChat

--Notify Frame
PQ_NotifyFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
PQ_NotifyFrame:ClearAllPoints()
PQ_NotifyFrame:SetHeight(12)
PQ_NotifyFrame:SetWidth(600)
PQ_NotifyFrame:Show()
PQ_NotifyFrame.text = PQ_NotifyFrame:CreateFontString(nil, &amp;quot;OVERLAY&amp;quot;, &amp;quot;MovieSubtitleFont&amp;quot;)
PQ_NotifyFrame.text:SetAllPoints()
PQ_NotifyFrame:SetPoint(&amp;quot;CENTER&amp;quot;, -680, -150)
PQ_NotifyFrame:SetScale(.75)
PQ_NotifyFrame:SetScript(&amp;quot;OnUpdate&amp;quot;, PQ_NotifyFrame_OnUpdate)
PQ_NotifyFrame:EnableMouse(true)
PQ_NotifyFrame:SetMovable(true)
PQ_NotifyFrame:RegisterForDrag(&amp;quot;LeftButton&amp;quot;)
PQ_NotifyFrame:SetScript(&amp;quot;OnDragStart&amp;quot;, PQ_NotifyFrame.StartMoving)
PQ_NotifyFrame:SetScript(&amp;quot;OnDragStop&amp;quot;, PQ_NotifyFrame.StopMovingOrSizing)
PQ_NotifyFrame.text:SetText(&amp;quot;|cffFFBE69Cooldowns: |&amp;quot;..CDGlobal)
function PQ_Notify(message)
 	if PQ_NotifyFrame:IsShown() then
 		PQ_NotifyFrame.text:SetText(message) 	
 	end
end

SlashCmdList[&amp;apos;DEBUG&amp;apos;] = function()
if PQ_NotifyFrame:IsShown() then
		PQ_NotifyFrame:Hide()
	else
		PQ_NotifyFrame:Show()
	end
end
SLASH_DEBUG1 = &amp;quot;/pqd&amp;quot;

_Chat(&amp;quot;Setup Done!&amp;quot;)
end


	if WW == true or WW == nil then
	PQ_Notify(&amp;quot;|cffFFBE69Cooldowns: |&amp;quot;..CDGlobal)
    WW = false
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Brewmaster- Breath of Fire(MACRO)</Name><Default>false</Default><SpellID>115181</SpellID><Actions></Actions><Lua>if Nova_Breath ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>