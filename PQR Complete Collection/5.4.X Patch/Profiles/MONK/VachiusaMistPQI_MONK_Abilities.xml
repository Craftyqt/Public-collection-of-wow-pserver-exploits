<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Queue System
SLASH_VQUEUE1 = &amp;quot;/vqueue&amp;quot;
function SlashCmdList.VQUEUE(msg, editbox)		
	local spellid, unit = msg:match(&amp;quot;^(%S*)%s*(.-)$&amp;quot;);
	if tonumber(spellid) ~= nil and unit ~= &amp;quot;&amp;quot; then 			
		if not UnitExists(tostring(unit)) and unit ~= &amp;quot;tank&amp;quot; and unit ~= &amp;quot;low&amp;quot; and unit ~= &amp;quot;aoe5&amp;quot; and unit ~= &amp;quot;aoe10&amp;quot; and unit ~= &amp;quot;aoe15&amp;quot; and unit ~= &amp;quot;aoe20&amp;quot; and unit ~= &amp;quot;aoe25&amp;quot; and unit ~= &amp;quot;aoe30&amp;quot; then			
			PQR_WriteToChat(&amp;quot;unit not exist&amp;quot;);
		elseif not IsSpellKnown(tonumber(spellid)) then
			PQR_WriteToChat(&amp;quot;spell unknown&amp;quot;);
		else
			if not Queue_Spell then
				Queue_Spell = { }	
			end				
			table.insert(Queue_Spell, { Unit = unit, SpellID = spellid, Time = GetTime() } )
		end
	else
		PQR_WriteToChat(&amp;quot;Syntax: /vqueue spellid unit&amp;quot;);
	end
end	

if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false

	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Mist Monk Profile Verion - 2.2.11&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
	PQR_SwapCheckTimer = 0

	--Begin PQI
--	if (IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;)) == 1 then
		PQInterfaceLoaded = true
--		PQInterfaceVersion = (2.22)
--		if PQInterfaceVersion &amp;gt;= 2.22 then
			PQInterfaceUpdated = true
--		else 
--			PQInterfaceUpdated = nil 
--			PQR_WriteToChat(&amp;quot;Your PQI is not up to date. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
--			PQR_StopRotation()
--			return true					
--		end
--	else 
--		PQInterfaceLoaded = nil 
--		PQR_WriteToChat(&amp;quot;Please download the latest version of PQI. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
--		PQR_StopRotation()
--		return true				
--	end
		-- Load Data File
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Vachiusa_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == true then
			PQInterfaceDataLoaded = true
		else 
			PQInterfaceDataLoaded = false 
			PQR_WriteToChat(&amp;quot;You are missing PQR_PQI.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true		
		end		
	end	
	
	if not PQI_General_Mist_Monk_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 	
		local config = {
			name	= &amp;apos;General Mist Monk&amp;apos;,
			author	= &amp;apos;Vachiusa&amp;apos;,
			abilities = {
				-- General --
				{	name = &amp;quot;Auto Open PQI Options&amp;quot;,
					tooltip = &amp;quot;Auto Opens PQI Options for you, will only happen once per login.&amp;quot;,
					enable = true,
				},
				{	name = &amp;quot;54 Events&amp;quot;,
					tooltip = &amp;quot;Enables the use of 5.4 boss specific mechanics&amp;quot;,
					enable = true,
				},				
				{	name = &amp;quot;53 Events&amp;quot;,
					tooltip = &amp;quot;Enables the use of 5.3 boss specific mechanics&amp;quot;,
					enable = false,
				},
				{ 	name = &amp;quot;4x Events&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of 4.x boss specific mechanics&amp;quot;,
				},
				{ 	name = &amp;quot;Special Events&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of special events mechanics (Providing Ground...)&amp;quot;,
				},	
				{ 	name = &amp;quot;Auto Event Dispel&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of dispel on special events mechanics&amp;quot;,
				},								
				{ 	name = &amp;quot;Queue Sys&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of auto dispel for Queue System&amp;quot;,
				},					
				{ 	name = &amp;quot;Auto Target&amp;quot;,
					enable = true,
					tooltip = &amp;quot;If you dont have a target it will target your focus target&amp;quot;,
				},
				{ 	name = &amp;quot;Low Mana&amp;quot;,	
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 20,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of Mana to not use some high mana skills at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;DPS&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables DPS&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 0,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of minimum raid members HP to DPS at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Detox&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Detox&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 50,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Detox at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Spam Expel Harm&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Will use Expel Harm on CD&amp;quot;,
				},
				{ 	name = &amp;quot;Spam Renewing Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Will use Renewing Mist on CD&amp;quot;,
				},				
				{ 	name = &amp;quot;Racials&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Racials&amp;quot;,
				},								
				{ 	name = &amp;quot;Target Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Target Heal priority&amp;quot;,
				},											
				{ 	name = &amp;quot;Mouseover Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Mouseover Heal priority&amp;quot;,
				},		
				{ 	name = &amp;quot;NPC Mouseover Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of NPC Mouseover Heal priority&amp;quot;,
				},			
				{ 	name = &amp;quot;Pet Heal&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Pet Heal&amp;quot;,
				},			
				{ 	name = &amp;quot;V debug&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Vachiusa debug&amp;quot;,
				},				
			},
			hotkeys = {
			},
		}
		PQI_General_Mist_Monk_GUI_Loaded = PQI:AddRotation(config)
	end

	if not PQI_CD_Mist_Monk_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 
		local config = {
			name	= &amp;apos;CD Mist Monk&amp;apos;,
			author	= &amp;apos;Vachiusa&amp;apos;,
			abilities = {									
				-- CD&amp;apos;s --
				{ 	name = &amp;quot;Life Cocoon&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Life Cocoon&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 20,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Life Cocoon at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Chi Burst&amp;quot;,
					enable = false,
					tooltip = &amp;quot;NO USE - Enables the use of Chi Burst&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 85,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Cascade at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Chi Burst Limit&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 4,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Chi Burst at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;VSpinning CKick&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the auto use of Spinning CKick&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 70,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Spinning CKick at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;VSpinning CKick Limit&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Spinning CKick at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Rushing Jade Wind&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the auto use of Rushing Jade Wind&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 80,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Rushing Jade Wind at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Rushing Jade Wind Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Rushing Jade Wind at&amp;quot;,
					},
				},							
				{ 	name = &amp;quot;Revival&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Revival&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 60,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Revival at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Revival Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 4,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Revival at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Chi Wave&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Chi Wave&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 85,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Chi Wave at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Chi Wave Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 2,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Chi Wave at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Zen Sphere&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Zen Sphere&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 100,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Zen Sphere at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Zen Sphere Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 1,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Zen Sphere at&amp;quot;,
					},
				},		
			},
			hotkeys = {
			},
		}
		PQI_CD_Mist_Monk_GUI_Loaded = PQI:AddRotation(config)
	end
	
	if not PQI_Healing_Mist_Monk_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 
		local config = {
			name	= &amp;apos;Healing Mist Monk&amp;apos;,
			author	= &amp;apos;Vachiusa&amp;apos;,
			abilities = {																	
				-- Healing --
				{ 	name = &amp;quot;Enveloping Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Enveloping Mist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 60,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Enveloping Mist at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Mana Tea&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Mana Tea&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 90,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of Mana to use Mana Tea at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Mana Tea Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 5,
						step = 1,
						max = 20,
						min = 0,
						tooltip = &amp;quot;The number of stacks to use Mana Tea at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Renewing Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Renewing Mist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 95,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Renewing Mist at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Renewing Mist Tank&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Renewing Mist on Tanks&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 99,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Renewing Mist on Tanks at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Soothing Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Soothing Mist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 71,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Soothing Mist at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Soothing Mist 4 Chi&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Soothing Mist 4 gen Chi&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 95,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Soothing Mist 4 gen Chi at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Surging Mist Instant&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Surging Mist Instant&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 70,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Surging Mist Instant at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Surging Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Surging Mist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 20,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Surging Mist at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;TFTea Surging Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of TFTea + Surging Mist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 15,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use TFTea + Surging Mist at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Uplift&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Uplift&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 90,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Uplift at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Uplift Count&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of ReMs to use Uplift at&amp;quot;,
					},
				},				
				{ 	name = &amp;quot;TFTea Uplift&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of TFTea + Uplift&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 4,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use TFTea + Uplift at&amp;quot;,
					},
				},		
				{ 	name = &amp;quot;TFT ReM&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of TFT + ReM&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 6,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use TFT + ReM at&amp;quot;,
					},
				},										
			},
			hotkeys = {
				{	name = &amp;quot;Pause Rotation&amp;quot;,		enable = true,	hotkeys = {&amp;apos;ls&amp;apos;},	},
				{	name = &amp;quot;Crackling Jade Lightning&amp;quot;,			enable = true,	hotkeys = {&amp;apos;rs&amp;apos;},	
					tooltip = &amp;quot;Crackling Jade Lightning&amp;quot;, },
				{	name = &amp;quot;Jade Serpent Statue&amp;quot;,		enable = true,	hotkeys = {&amp;apos;lc&amp;apos;},
					tooltip = &amp;quot;Use Jade Serpent Statue at mouseover&amp;quot;, },
				{	name = &amp;quot;Healing Sphere&amp;quot;,			enable = true,	hotkeys = {&amp;apos;ra&amp;apos;},	
					tooltip = &amp;quot;Use Healing Sphere at mouseover&amp;quot;, },
				{	name = &amp;quot;Spinning Crane Kick&amp;quot;,		enable = true,	hotkeys = {&amp;apos;rc&amp;apos;},	
					tooltip = &amp;quot;Spinning Crane Kick&amp;quot;, },	
				{	name = &amp;quot;Chi Burst&amp;quot;,				enable = true,	hotkeys = {&amp;apos;ls&amp;apos;,&amp;apos;rs&amp;apos;},	
					tooltip = &amp;quot;Pop Chi Burst&amp;quot;, },						
				{	name = &amp;quot;Zen Meditation&amp;quot;,		enable = true,	hotkeys = {&amp;apos;ls&amp;apos;,&amp;apos;ra&amp;apos;},	
					tooltip = &amp;quot;Pop Zen Meditation&amp;quot;, },						
				{	name	= &amp;quot;Adding Players CT&amp;quot;,		enable	= true,	hotkeys	= {&amp;apos;ls&amp;apos;, &amp;apos;la&amp;apos;},
					tooltip = &amp;quot;Adding Players to Custom Table&amp;quot;, },	
				{	name	= &amp;quot;Removing Players CT&amp;quot;,		enable	= true,	hotkeys	= {&amp;apos;ls&amp;apos;, &amp;apos;lc&amp;apos;},
					tooltip = &amp;quot;Removing Players from Custom Table&amp;quot;, },						
			},
		}
		PQI_Healing_Mist_Monk_GUI_Loaded = PQI:AddRotation(config)
	end
	--End PQI
		
	--------------------
	-- Slash Commands
	--------------------
	if GetCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;, 0) end
	if GetCVar(&amp;quot;PQ_UseCustomT&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0) end
	if GetCVar(&amp;quot;Nova_Recording&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Recording&amp;quot;, 0) end
	
	SLASH_WIPETABLE1 = &amp;quot;/wipetable&amp;quot;
	SLASH_WIPETABLE2 = &amp;quot;/wipecustomtable&amp;quot;
	SLASH_WIPETABLE3 = &amp;quot;/wt&amp;quot;
	function SlashCmdList.WIPETABLE(msg, editbox)
		Nova_CustomT = { }
		if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then 
			SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Wiped Custom Table clean, and reverting to Normal Table.&amp;quot;)
			end
		else
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Wiped Custom Table clean.&amp;quot;)
			end
		end
	end
	
	SLASH_USECUSTOMT1 = &amp;quot;/usecustomt&amp;quot;
	SLASH_USECUSTOMT2 = &amp;quot;/uct&amp;quot;
	SLASH_USECUSTOMT3 = &amp;quot;/usecustomtable&amp;quot;
	function SlashCmdList.USECUSTOMT(msg, editbox)
		if not GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) and #Nova_CustomT &amp;gt; 0 then
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Enabling Custom Table&amp;quot;)
			end
			SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 1)
		else
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Enabling Normal Table&amp;quot;)
			end
			SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
		end
	end	
			
	-- Variables
	PQR_ResetMovementTime = 0.3
	PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 2 then
		PQR_WriteToChat(&amp;quot;You must be in Mist Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Healing Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Healing Engine --
if Nova_54EventsCheck then
	if not UnitDebuffID(&amp;quot;player&amp;quot;,144850) --Test of Reliance
	and not UnitDebuffID(&amp;quot;player&amp;quot;,142861) then --Ancient Miasma
		SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_SpecialEvents, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true
	end
else
	SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_SpecialEvents, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true	
end

if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then
	members = Nova_CustomT
	lowhpmembers = 0
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].HP &amp;lt; 80 then
			lowhpmembers = lowhpmembers + 1
		end
	end
	
	table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- PQI Variables --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Variables
if PQInterfaceLoaded and PQInterfaceUpdated and PQInterfaceDataLoaded then
	--They have PQI and its up-to-date use PQI
	
	PQI_Variables_Loaded = PQI_VachiusaGeneralMistMonk_AutoOpenPQIOptions_enable
	VachiusaMistMonk_AutoOpenPQIOptions_enable = PQI_VachiusaGeneralMistMonk_AutoOpenPQIOptions_enable

	Nova_EnvelopingMistCheck = PQI_VachiusaHealingMistMonk_EnvelopingMist_enable
	Nova_EnvelopingMist = PQI_VachiusaHealingMistMonk_EnvelopingMist_value
	Nova_ManaTeaCheck = PQI_VachiusaHealingMistMonk_ManaTea_enable
	Nova_ManaTea = PQI_VachiusaHealingMistMonk_ManaTea_value
	Nova_ManaTeaLimitCheck = PQI_VachiusaHealingMistMonk_ManaTeaLimit_enable
	Nova_ManaTeaLimit = PQI_VachiusaHealingMistMonk_ManaTeaLimit_value		
	Nova_RenewingMistCheck = PQI_VachiusaHealingMistMonk_RenewingMist_enable
	Nova_RenewingMist = PQI_VachiusaHealingMistMonk_RenewingMist_value
	Nova_RenewingMistTankCheck = PQI_VachiusaHealingMistMonk_RenewingMistTank_enable
	Nova_RenewingMistTank = PQI_VachiusaHealingMistMonk_RenewingMistTank_value
	Nova_SoothingMistCheck = PQI_VachiusaHealingMistMonk_SoothingMist_enable
	Nova_SoothingMist = PQI_VachiusaHealingMistMonk_SoothingMist_value
	Nova_SoothingMist4ChiCheck = PQI_VachiusaHealingMistMonk_SoothingMist4Chi_enable
	Nova_SoothingMist4Chi = PQI_VachiusaHealingMistMonk_SoothingMist4Chi_value
	Nova_SurgingMistInstantCheck = PQI_VachiusaHealingMistMonk_SurgingMistInstant_enable
	Nova_SurgingMistInstant = PQI_VachiusaHealingMistMonk_SurgingMistInstant_value
	Nova_SurgingMistCheck = PQI_VachiusaHealingMistMonk_SurgingMist_enable
	Nova_SurgingMist = PQI_VachiusaHealingMistMonk_SurgingMist_value
	Nova_TFTeaSurgingMistCheck = PQI_VachiusaHealingMistMonk_TFTeaSurgingMist_enable
	Nova_TFTeaSurgingMist = PQI_VachiusaHealingMistMonk_TFTeaSurgingMist_value
	Nova_UpliftCheck = PQI_VachiusaHealingMistMonk_Uplift_enable
	Nova_Uplift = PQI_VachiusaHealingMistMonk_Uplift_value
	Nova_UpliftCountCheck = PQI_VachiusaHealingMistMonk_UpliftCount_enable
	Nova_UpliftCount = PQI_VachiusaHealingMistMonk_UpliftCount_value	
	Nova_TFTeaUpliftCheck = PQI_VachiusaHealingMistMonk_TFTeaUplift_enable
	Nova_TFTeaUplift = PQI_VachiusaHealingMistMonk_TFTeaUplift_value
	Nova_TFTReMCheck = PQI_VachiusaHealingMistMonk_TFTReM_enable
	Nova_TFTReM = PQI_VachiusaHealingMistMonk_TFTReM_value
	
	Nova_LifeCocoonCheck = PQI_VachiusaCDMistMonk_LifeCocoon_enable
	Nova_LifeCocoon = PQI_VachiusaCDMistMonk_LifeCocoon_value
	Nova_ChiBurstCheck = PQI_VachiusaCDMistMonk_ChiBurst_enable
	Nova_ChiBurst = PQI_VachiusaCDMistMonk_ChiBurst_value	
	Nova_ChiBurstLimitCheck = PQI_VachiusaCDMistMonk_ChiBurstLimit_enable
	Nova_ChiBurstLimit = PQI_VachiusaCDMistMonk_ChiBurstLimit_value
	Nova_SpinningCKickCheck = PQI_VachiusaCDMistMonk_VSpinningCKick_enable
	Nova_SpinningCKick = PQI_VachiusaCDMistMonk_VSpinningCKick_value
	Nova_SpinningCKickLimitCheck = PQI_VachiusaCDMistMonk_VSpinningCKickLimit_enable
	Nova_SpinningCKickLimit = PQI_VachiusaCDMistMonk_VSpinningCKickLimit_value
	Nova_RushingJadeWindCheck = PQI_VachiusaCDMistMonk_RushingJadeWind_enable
	Nova_RushingJadeWind = PQI_VachiusaCDMistMonk_RushingJadeWind_value
	Nova_RushingJadeWindLimitCheck = PQI_VachiusaCDMistMonk_RushingJadeWindLimit_enable
	Nova_RushingJadeWindLimit = PQI_VachiusaCDMistMonk_RushingJadeWindLimit_value		
	Nova_RevivalCheck = PQI_VachiusaCDMistMonk_Revival_enable
	Nova_Revival = PQI_VachiusaCDMistMonk_Revival_value
	Nova_RevivalLimitCheck = PQI_VachiusaCDMistMonk_RevivalLimit_enable
	Nova_RevivalLimit = PQI_VachiusaCDMistMonk_RevivalLimit_value	
	Nova_ChiWaveCheck = PQI_VachiusaCDMistMonk_ChiWave_enable
	Nova_ChiWave = PQI_VachiusaCDMistMonk_ChiWave_value
	Nova_ChiWaveLimitCheck = PQI_VachiusaCDMistMonk_ChiWaveLimit_enable
	Nova_ChiWaveLimit = PQI_VachiusaCDMistMonk_ChiWaveLimit_value	
	Nova_ZenSphereCheck = PQI_VachiusaCDMistMonk_ZenSphere_enable
	Nova_ZenSphere = PQI_VachiusaCDMistMonk_ZenSphere_value
	Nova_ZenSphereLimitCheck = PQI_VachiusaCDMistMonk_ZenSphereLimit_enable
	Nova_ZenSphereLimit = PQI_VachiusaCDMistMonk_ZenSphereLimit_value	
		
	Nova_AutoTargetCheck = PQI_VachiusaGeneralMistMonk_AutoTarget_enable
	Nova_AutoTarget = PQI_VachiusaGeneralMistMonk_AutoTarget_value
	Nova_LowManaCheck = PQI_VachiusaGeneralMistMonk_LowMana_enable
	Nova_LowMana = PQI_VachiusaGeneralMistMonk_LowMana_value
	Nova_DPSCheck = PQI_VachiusaGeneralMistMonk_DPS_enable
	Nova_DPS = PQI_VachiusaGeneralMistMonk_DPS_value
	Nova_DetoxCheck = PQI_VachiusaGeneralMistMonk_Detox_enable
	Nova_Detox = PQI_VachiusaGeneralMistMonk_Detox_value
	Nova_SpamExpelHarmCheck = PQI_VachiusaGeneralMistMonk_SpamExpelHarm_enable
	Nova_SpamExpelHarm = PQI_VachiusaGeneralMistMonk_SpamExpelHarm_value
	Nova_SpamRenewingMistCheck = PQI_VachiusaGeneralMistMonk_SpamRenewingMist_enable
	Nova_SpamRenewingMist = PQI_VachiusaGeneralMistMonk_SpamRenewingMist_value	
	Nova_RacialsCheck = PQI_VachiusaGeneralMistMonk_Racials_enable
	Nova_Racials = PQI_VachiusaGeneralMistMonk_Racials_value
	Nova_4xEventsCheck = PQI_VachiusaGeneralMistMonk_4xEvents_enable
	Nova_4xEvents = PQI_VachiusaGeneralMistMonk_4xEvents_value
	Nova_53EventsCheck = PQI_VachiusaGeneralMistMonk_53Events_enable
	Nova_53Events = PQI_VachiusaGeneralMistMonk_53Events_value
	Nova_54EventsCheck = PQI_VachiusaGeneralMistMonk_54Events_enable
	Nova_54Events = PQI_VachiusaGeneralMistMonk_54Events_value	
	Nova_SpecialEvents = PQI_VachiusaGeneralMistMonk_SpecialEvents_enable	
	Nova_AutoEventDispel = PQI_VachiusaGeneralMistMonk_AutoEventDispel_enable
	Nova_QueueSysCheck = PQI_VachiusaGeneralMistMonk_QueueSys_enable
	Nova_QueueSys = PQI_VachiusaGeneralMistMonk_QueueSys_value		
	Nova_Mouseover = PQI_VachiusaGeneralMistMonk_MouseoverHeal_enable
	Nova_TargetHeal = PQI_VachiusaGeneralMistMonk_TargetHeal_enable
	Nova_NPCMouseoverHeal = PQI_VachiusaGeneralMistMonk_NPCMouseoverHeal_enable
	Nova_PetHeal = PQI_VachiusaGeneralMistMonk_PetHeal_enable
	Vdebug = PQI_VachiusaGeneralMistMonk_Vdebug_enable
	
	if Nova_LowHP == nil then Nova_LowHP = 80 end
	if Nova_ActualHP == nil or Nova_ActualHP then Nova_ActualHP = false end
	
	-- Hotkeys
	if not PQI_Hotkeys_Functions_Set then
		function PQI_PauseRotation()
			if PQI_VachiusaHealingMistMonk_PauseRotation_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_PauseRotation_key) then
			return true else return false 
		end	end
		function PQI_CracklingJadeLightning()
			if PQI_VachiusaHealingMistMonk_CracklingJadeLightning_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_CracklingJadeLightning_key) then
			return true else return false
		end	end		
		function PQI_JadeSerpentStatue()
			if PQI_VachiusaHealingMistMonk_JadeSerpentStatue_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_JadeSerpentStatue_key) then
			return true else return false
		end	end			
		function PQI_HealingSphere()
			if PQI_VachiusaHealingMistMonk_HealingSphere_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_HealingSphere_key) then
			return true else return false
		end	end	
		function PQI_SpinningCraneKick()
			if PQI_VachiusaHealingMistMonk_SpinningCraneKick_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_SpinningCraneKick_key) then
			return true else return false
		end	end		
		function PQI_ZenMeditation()
			if PQI_VachiusaHealingMistMonk_ZenMeditation_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_ZenMeditation_key) then
			return true else return false
		end	end		
		function PQI_ChiBurst()
			if PQI_VachiusaHealingMistMonk_ChiBurst_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_ChiBurst_key) then
			return true else return false
		end	end					
		function PQI_AddingPlayersCT()
			if PQI_VachiusaHealingMistMonk_AddingPlayersCT_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_AddingPlayersCT_key) then
			return true else return false
		end	end	
		function PQI_RemovingPlayersCT()
			if PQI_VachiusaHealingMistMonk_RemovingPlayersCT_enable and PQI:IsHotkeys(PQI_VachiusaHealingMistMonk_RemovingPlayersCT_key) then
			return true else return false
		end	end			
	end	
	
	Nova_PauseRotationCheck = PQI_VachiusaHealingMistMonk_PauseRotation_enable
	Nova_CracklingJadeLightningCheck = PQI_VachiusaHealingMistMonk_CracklingJadeLightning_enable
	Nova_JadeSerpentStatueCheck = PQI_VachiusaHealingMistMonk_JadeSerpentStatue_enable
	Nova_HealingSphereCheck = PQI_VachiusaHealingMistMonk_HealingSphere_enable
	Nova_SpinningCraneKickCheck = PQI_VachiusaHealingMistMonk_SpinningCraneKick_enable
	Nova_ZenMeditationCheck = PQI_VachiusaHealingMistMonk_ZenMeditation_enable
	Nova_ChiBurstModCheck = PQI_VachiusaHealingMistMonk_ChiBurst_enable
	Nova_AddingPlayersCTCheck = PQI_VachiusaHealingMistMonk_AddingPlayersCT_enable
	Nova_RemovingPlayersCTCheck = PQI_VachiusaHealingMistMonk_RemovingPlayersCT_enable
	
	VachiusaMistMonk_PauseRotation_key = PQI_PauseRotation()
	VachiusaMistMonk_CracklingJadeLightning_key = PQI_CracklingJadeLightning()
	VachiusaMistMonk_JadeSerpentStatue_key = PQI_JadeSerpentStatue()
	VachiusaMistMonk_HealingSphere_key = PQI_HealingSphere()
	VachiusaMistMonk_SpinningCraneKick_key = PQI_SpinningCraneKick()
	VachiusaMistMonk_ZenMeditation_key = PQI_ZenMeditation()
	VachiusaMistMonk_ChiBurst_key = PQI_ChiBurst()
	VachiusaMistMonk_AddingPlayersCT_key = PQI_AddingPlayersCT()
	VachiusaMistMonk_RemovingPlayersCT_key = PQI_RemovingPlayersCT()	

	--Set PQI
	if not PQI_VachiusaMistMonk_Set and VachiusaMistMonk_AutoOpenPQIOptions_enable ~= nil then
		RunMacroText(&amp;quot;/PQI show&amp;quot;)
		RunMacroText(&amp;quot;/PQI config show&amp;quot;)
		RunMacroText(&amp;quot;/PQI config width 220&amp;quot;)
		if not VachiusaMistMonk_AutoOpenPQIOptions_enable then
		RunMacroText(&amp;quot;/PQI config hide&amp;quot;) end
		PQI_VachiusaMistMonk_Set = true
	end
end

--PQI is not loading variables instantly any more ?_? need to delay till they are loaded to avoid errors!
if PQI_Variables_Loaded == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Stop Casting
if SpellIsTargeting() then
	SpellStopCasting()
elseif (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4 
then
	for i=1, #members do
		if UnitBuffID(members[i].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist	
		and not UnitIsUnit(&amp;quot;boss1&amp;quot;, members[i].Unit)
		and (not IsSpellInRange(GetSpellInfo(115151),members[i].Unit) == 1 or CalStop(members[i].Unit) &amp;gt; Nova_SoothingMist4Chi) then 
			if not UnitBuffID(&amp;quot;player&amp;quot;,137331) --Lucidity
			then
				SpellStopCasting()
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast Soothing Mist - Name: &amp;quot; ..UnitName(members[i].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[i].Unit)..&amp;quot; - overheal: &amp;quot;..select(2, CalStop(members[i].Unit)))				
				return true
			else
				if PQR_SpellAvailable(116694) 
				then
					if CalStop(members[i].Unit) &amp;lt;= 99 then
					 	PQR_CustomTarget = members[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSurging Mist Lucidity - Name: &amp;quot; ..UnitName(members[i].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[i].Unit))			
						CastSpellByName(tostring(GetSpellInfo(116694)),members[i].Unit)						
					else
						SpellStopCasting()						
						return true
					end
				end
			end
		end		
	end
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116694)) then --SurgingMist
	SpellStopCasting()
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast SurgingMist&amp;quot;)	
	return true
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(124682)) then --EnvelopingMist
	SpellStopCasting()
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast EnvelopingMist&amp;quot;)	
	return true	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Trinket spirit 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 80
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then UseInventoryItem(14)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- SelfSurvival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 20 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if GetItemCount(5512,false,true) &amp;gt; 0	
	and PQR_SpellAvailable(5512) --Healthstone		
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and GetItemCooldown(5512) == 0 then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end	
		UseItemByName(5512)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealthstone - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	--elseif GetInventoryItemCooldown(6)==0 --Grounded Plasma Shield 	
	--then 
		--UseInventoryItem(6) 
		--return true
	--The next 3 attacks within 45 sec that deal damage equal to 20% or more of your total health are reduced in half.
	elseif PQR_SpellAvailable(122278)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation	
	and select(2,GetTalentRowSelectionInfo(5)) == 14
	and select(2,GetSpellCooldown(122278)) &amp;lt; 2 then
	--and IsUsableSpell(115176) 	
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(122278),nil))	 			
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDampen Harm!&amp;quot;)	
		return true		
	elseif PQR_SpellAvailable(115203)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation		
	and select(2,GetSpellCooldown(115203)) &amp;lt; 2 
	and not UnitBuffID(&amp;quot;player&amp;quot;,122278) then --Dampen Harm
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(115203),nil))	 	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFFortifying Brew - My HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;))	
		return true		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Custom Table --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--------------------------------------
-- Adding Players to Custom Table
--------------------------------------
if Nova_AddingPlayersCTCheck then
	if VachiusaMistMonk_AddingPlayersCT_key
	and not GetCurrentKeyBoardFocus()
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
	or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) ) then  
		for i=1, #Nova_CustomT do
			if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
				return false
			end
		end
		
		table.insert(Nova_CustomT, { GUID = UnitGUID(&amp;quot;mouseover&amp;quot;) } )
		
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;We just added &amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; to the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
		end
		return true
	
	end
end

--------------------------------------
-- Removing Players from Custom Table
--------------------------------------
if Nova_RemovingPlayersCTCheck then
	if VachiusaMistMonk_RemovingPlayersCT_key
	and not GetCurrentKeyBoardFocus() 
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
	or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) )then
		for i=1, #Nova_CustomT do
			if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
				if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
					PQR_WriteToChat(&amp;quot;We just removed &amp;quot;..UnitName(Nova_CustomT[i].Unit)..&amp;quot; from the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
				end
				table.remove(Nova_CustomT, i)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TsulongHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--TsulongHeal 
if Nova_53EventsCheck then	
	local bossCheck = &amp;quot;boss1&amp;quot; 
	local tsulongboss = false
	if UnitExists(bossCheck) then 
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16) 	        
		if npcID == 62442 
		and UnitAffectingCombat(&amp;quot;player&amp;quot;) then --Tsulong	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug NPCID: &amp;quot; ..npcID) 
			tsulongboss = true
		end
	end	
	
	if tsulongboss
	and PQR_SpellAvailable(115175)  	
	and IsUsableSpell(115175) 
	and IsSpellInRange(GetSpellInfo(115175),&amp;quot;boss1&amp;quot;) == 1
	then
		if Nova_UnitInfo(&amp;quot;boss1&amp;quot;) &amp;lt; 100 then
			local prepairBIL = false
			local BathedInLight = GetSpellInfo(122858) --Sun Breath 122855
	 		if (bossCasting == BathedInLight) then
	 			prepairBIL = true
	 		end
	 				
			--LifeCocoon
			if PQR_SpellAvailable(116849) 
			 and ((UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Омовение светом&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
			 	or prepairBIL)
			 and select(2,GetSpellCooldown(116849)) &amp;lt; 2		 		 
			 and IsUsableSpell(116849)		 
			 and not UnitBuffID(&amp;quot;boss1&amp;quot;,116849) --LifeCocoon
			 and not UnitBuffID(&amp;quot;boss1&amp;quot;,47788)	--Guardian Spirit
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			 and IsSpellInRange(GetSpellInfo(116849),&amp;quot;boss1&amp;quot;) == 1 then
				CastSpellByName(tostring(GetSpellInfo(116849)),&amp;quot;boss1&amp;quot;)	 
			end
	
			--RenewingMist
			if PQR_SpellAvailable(115151) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;,115151,&amp;quot;player&amp;quot;)
			and IsSpellInRange(GetSpellInfo(115151),&amp;quot;boss1&amp;quot;) == 1
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and IsUsableSpell(115151) then
				CastSpellByName(tostring(GetSpellInfo(115151)),&amp;quot;boss1&amp;quot;)	 
			end		
			
			--EnvelopingMist
			if PQR_SpellAvailable(124682) 		 
			 and IsSpellInRange(GetSpellInfo(124682),members[1].Unit) == 1		 
			 and (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
			 and IsUsableSpell(124682) then 	
				if UnitBuffID(&amp;quot;boss1&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
				and not UnitBuffID(&amp;quot;boss1&amp;quot;,124682,&amp;quot;player&amp;quot;) --Enveloping Mist
				then					
					if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(124682)),&amp;quot;boss1&amp;quot;)	 
				 	elseif select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) == 0 
				 	and select(2,GetTalentRowSelectionInfo(3)) == 9 
				 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		 		
				 		CastSpellByName(tostring(GetSpellInfo(115399)),&amp;quot;player&amp;quot;)	 
						CastSpellByName(tostring(GetSpellInfo(124682)),&amp;quot;boss1&amp;quot;)	 
					end		 			 		
				end
			end
			
			--ZenSphereSmart
			if PQR_SpellAvailable(124081) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;,124081,&amp;quot;player&amp;quot;)
			and IsSpellInRange(GetSpellInfo(124081),&amp;quot;boss1&amp;quot;) 		
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then									
				CastSpellByName(tostring(GetSpellInfo(124081)),&amp;quot;boss1&amp;quot;)			
			end	
								
			--SurgingMist - need Thunder Focus Tea?
			if PQR_SpellAvailable(116694) 
			and IsUsableSpell(116694) 		
			and IsSpellInRange(GetSpellInfo(116694),&amp;quot;boss1&amp;quot;) == 1 then		
				if UnitBuffID(&amp;quot;player&amp;quot;,118674) then --Vital Mists
					if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(116694)),&amp;quot;boss1&amp;quot;)
					end
				end
				
				if (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Омовение светом&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
				then		
					if (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
					 then 	
						if UnitBuffID(&amp;quot;boss1&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
						and not UnitCastingInfo(&amp;quot;player&amp;quot;)
						then		
							if PQR_SpellAvailable(116680) --Thunder Focus Tea
							and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then
								if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
								and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
								and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
									CastSpellByName(tostring(GetSpellInfo(116680),&amp;quot;player&amp;quot;))	 								
								end					
							end								
							CastSpellByName(tostring(GetSpellInfo(116694)),&amp;quot;boss1&amp;quot;)
						end
					end
				end
			end
	
			if members[1].HP &amp;gt; 30 --Prevent raid wipe
			and lowhpmembers &amp;lt; 10 then 
				--SoothingMist
				if PQR_SpellAvailable(115175) 
				 and IsUsableSpell(115175) 
				 and not Nova_Moving 			 
				 and IsSpellInRange(GetSpellInfo(115175),&amp;quot;boss1&amp;quot;) == 1 
				 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
					CastSpellByName(tostring(GetSpellInfo(115175)),&amp;quot;boss1&amp;quot;)
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JadeSerpentStatue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--JadeSerpentStatue
if Nova_JadeSerpentStatueCheck then	
	if (VachiusaMistMonk_JadeSerpentStatue_key and not GetCurrentKeyBoardFocus()) then
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		and IsUsableSpell(115313) 
		and PQR_SpellAvailable(115313)
		and select(2,GetSpellCooldown(115313)) &amp;lt; 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
		  CastSpellByName(tostring(GetSpellInfo(115313),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft Control Key Down - Summon Jade Serpent Statue!&amp;quot;)
		  return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpinningCraneKick (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SpinningCraneKick (TC)
if Nova_SpinningCraneKickCheck then	
	if (VachiusaMistMonk_SpinningCraneKick_key and not GetCurrentKeyBoardFocus()) then
		if PQR_SpellAvailable(101546) 
		and IsUsableSpell(101546) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(101546)),nil)
			return true 
		end
	end
end

if Nova_SpinningCKickCheck then
	if PQR_SpellAvailable(101546) 
	and IsUsableSpell(101546) 
	and not UnitBuffID(&amp;quot;player&amp;quot;,139597) --Muscle Memory
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 20
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and not stopcasting then
		 if AverageHealth(Nova_SpinningCKickLimit) &amp;lt;= Nova_SpinningCKick then		 	
			local real_b = 0
			if #members &amp;gt; 1 then
				for i=1,#members do		
					if PQR_UnitDistance(&amp;quot;player&amp;quot;,members[i].Unit) and members[i].HP then
						if PQR_UnitDistance(&amp;quot;player&amp;quot;,members[i].Unit) &amp;lt;= 8 
						and not UnitIsUnit(&amp;quot;player&amp;quot;,members[i].Unit) 
						and members[i].HP &amp;lt;= Nova_SpinningCKick then
							real_b = real_b + 1					
							if real_b &amp;gt;= Nova_SpinningCKickLimit then
								break
							end									
						end
					end
				end
				if real_b &amp;gt;= Nova_SpinningCKickLimit 
				and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 3 then
					CastSpellByName(tostring(GetSpellInfo(101546)),nil)
					return true					
				end
			end	
		end
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CracklingJadeLightning (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--CracklingJadeLightning (TC)
if Nova_CracklingJadeLightningCheck then	
	if (VachiusaMistMonk_CracklingJadeLightning_key and not GetCurrentKeyBoardFocus()) then
		if PQR_SpellAvailable(117952) 
		and IsUsableSpell(117952) 
		and UnitExists(&amp;quot;target&amp;quot;) 
		and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		and not Nova_Moving
		and IsSpellInRange(GetSpellInfo(117952),&amp;quot;target&amp;quot;) == 1
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(117952)),&amp;quot;target&amp;quot;)
			return true 
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LifeCocoon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--LifeCocoon
if Nova_LifeCocoonCheck then
	if PQR_SpellAvailable(116849) 	 
 	 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation	 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and select(2,GetSpellCooldown(116849)) &amp;lt; 2
	 and UnitThreatSituation(members[1].Unit) == 3
	 and IsUsableSpell(116849)
	 and IsSpellInRange(GetSpellInfo(116849),members[1].Unit) == 1 then
		if members[1].HP &amp;lt; Nova_LifeCocoon 		
		and UnitGroupRolesAssigned(members[1].Unit) ~= &amp;quot;NONE&amp;quot; then --Nova_LifeCocoon 
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end			
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifeCocoon - HP: &amp;quot; ..members[1].HP) 	
		 	CastSpellByName(tostring(GetSpellInfo(116849)),members[1].Unit)	
		 	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Revival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Revival
if Nova_RevivalCheck then
	if PQR_SpellAvailable(115310)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation	
	and select(2,GetSpellCooldown(115310)) &amp;lt; 2
	and IsUsableSpell(115310) 	
	and not LLdebuff 	
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	then
		if AverageHealth(Nova_RevivalLimit) &amp;lt;= Nova_Revival then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end			
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRevival - Raid HP: &amp;quot;..AverageHealth(4))		
			CastSpellByName(tostring(GetSpellInfo(115310)),&amp;quot;player&amp;quot;)					
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ManaTea</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ManaTea
if Nova_ManaTeaCheck then
	if PQR_SpellAvailable(115294)
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning 
	then
		if UnitBuffID(&amp;quot;player&amp;quot;, 115867) then --Mana Tea buff
			if (select(4, UnitBuffID(&amp;quot;player&amp;quot;, 115867)) &amp;gt;= Nova_ManaTeaLimit --Nova_ManaTeaLimit
			 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ManaTea) --Nova_ManaTea		 
			 or UnitBuffID(&amp;quot;player&amp;quot;,64904) --Hymm of Hope
			 or select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_LowMana 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			 	if GlyphCheck(123763) then --124450					
					if select(2,GetSpellCooldown(123761)) &amp;lt; 2												
					then
					 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FF ManaTea&amp;quot;)
				 		CastSpellByName(tostring(GetSpellInfo(115294)),&amp;quot;player&amp;quot;)	
				 		return true
				 	end			 	
			 	else					
				 	CastSpellByName(tostring(GetSpellInfo(115294)),&amp;quot;player&amp;quot;)	
				 	return true			 	
			 	end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LegacyOfTheEmperor</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--LegacyOfTheEmperor
if not UnitBuffID(&amp;quot;player&amp;quot;,1126)
and not UnitBuffID(&amp;quot;player&amp;quot;,20217)
and not UnitBuffID(&amp;quot;player&amp;quot;,90363)
and not UnitBuffID(&amp;quot;player&amp;quot;,115921) 
and PQR_SpellAvailable(115921)
and IsUsableSpell(115921) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then
	CastSpellByName(tostring(GetSpellInfo(115921)),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingSphere (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--HealingSphere (TC)
if Nova_HealingSphereCheck then	
	if (VachiusaMistMonk_HealingSphere_key and not GetCurrentKeyBoardFocus()) then
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		and PQR_SpellAvailable(115460)
		and GetSpellCooldown(115460) == 0
		and IsUsableSpell(115460)
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
		  CastSpellByName(tostring(GetSpellInfo(115460),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Alt Key Down - Healing Sphere!&amp;quot;)
		  return true
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SoothingMist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SoothingMist
local mdps = false
if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and Nova_DPSCheck
and UnitExists(&amp;quot;target&amp;quot;) 
and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and IsSpellInRange(GetSpellInfo(100787),&amp;quot;target&amp;quot;) == 1	
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
	mdps = true
end
	
if Nova_SoothingMistCheck and not mdps then
	 if PQR_SpellAvailable(115175) 
	 and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning	 
	 and IsUsableSpell(115175) 
	 and not Nova_Moving 
	 and not UnitBuffID(&amp;quot;player&amp;quot;,131523) --Zen Meditation
	 and not UnitBuffID(members[1].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist
	 and IsSpellInRange(GetSpellInfo(115175),members[1].Unit) == 1 
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	 and not stopcasting then				
	 	if members[1].HP &amp;lt;= Nova_SoothingMist --SoothingMist
	 	and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4
	 	and not UnitBuffID(&amp;quot;player&amp;quot;,137331) --Meta gem Lucidity
	 	then
			PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(115175)),members[1].Unit)		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Soothing Mist - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
			return true
		elseif members[1].HP &amp;lt;= Nova_SoothingMist4Chi 
		and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 15  --mana
		and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 4 		
	 	and not UnitBuffID(&amp;quot;player&amp;quot;,137331) --Meta gem Lucidity
		then  
			PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(115175)),members[1].Unit)		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Soothing Mist 4C - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
			return true		
	 	elseif members[1].HP &amp;lt;= 99 --SoothingMist
	 	and UnitBuffID(&amp;quot;player&amp;quot;,137331) --Meta gem Lucidity
	 	then			
			PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(115175)),members[1].Unit)		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Soothing Mist 4L - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
			return true			 	
		elseif members[1].HP &amp;lt;= 200 --SoothingMist
		and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 4
	 	and UnitBuffID(&amp;quot;player&amp;quot;,137331) --Meta gem Lucidity
	 	then			
			PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(115175)),members[1].Unit)		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Soothing Mist 4L - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
			return true			 	
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SurgingMist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SurgingMist
if Nova_SurgingMistCheck then
	if PQR_SpellAvailable(116694) 
	and IsUsableSpell(116694) 
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	and IsSpellInRange(GetSpellInfo(116694),members[1].Unit) == 1
	then
		if members[1].HP &amp;lt; Nova_SurgingMistInstant --Nova_SurgingMistInstant
		and UnitBuffID(&amp;quot;player&amp;quot;,118674) then --Vital Mists
			if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				if Nova_TFTeaSurgingMistCheck then
					if PQR_SpellAvailable(116680) --Thunder Focus Tea
					and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then					
						if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
						and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1 
						and members[1].HP &amp;lt;= Nova_TFTeaSurgingMist 
						then
							CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then SurgingMist - HP: &amp;quot;..members[1].HP)
						end		
					end					
				end			
				PQR_CustomTarget = members[1].Unit
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInstant Surging Mist - HP: &amp;quot; ..members[1].HP)
				CastSpellByName(tostring(GetSpellInfo(116694)),members[1].Unit)
				return true
			end
		end
		
		if (members[1].HP &amp;lt; Nova_SurgingMist --Nova_SurgingMist
		and not UnitBuffID(&amp;quot;player&amp;quot;,137331)
		and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; (Nova_LowMana-5))) --Nova_LowMana		
		or (members[1].HP &amp;lt;= 99 
	 	and UnitBuffID(&amp;quot;player&amp;quot;,137331)) --Meta gem Lucidity
	 	then
			if (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
			 then 	
				if UnitBuffID(members[1].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist		
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				then		
					if Nova_TFTeaSurgingMistCheck 
					and not UnitBuffID(&amp;quot;player&amp;quot;,137331) then --Meta gem Lucidity
						if PQR_SpellAvailable(116680) --Thunder Focus Tea
						and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then					
							if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
							and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1 
							and members[1].HP &amp;lt;= Nova_TFTeaSurgingMist 
							then
								CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
								--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then SurgingMist - HP: &amp;quot;..members[1].HP)
							end		
						end					
					end							
				 	PQR_CustomTarget = members[1].Unit
				 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSurging Mist - HP: &amp;quot; ..members[1].HP)
				 	if UnitBuffID(&amp;quot;player&amp;quot;,137331) then --Meta gem Lucidity
				 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSurging Mist Lucidity 2 - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
				 	end
				 	CastSpellByName(tostring(GetSpellInfo(116694)),members[1].Unit)
				 	return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>EnvelopingMist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--EnvelopingMist
if Nova_EnvelopingMistCheck then
	if members[1].HP &amp;lt; Nova_EnvelopingMist then
		if PQR_SpellAvailable(124682) 
		 and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		 and IsSpellInRange(GetSpellInfo(124682),members[1].Unit) == 1
		 and (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
		 and IsUsableSpell(124682) then 	
			if UnitBuffID(members[1].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist
			and not UnitBuffID(members[1].Unit,124682,&amp;quot;player&amp;quot;) --Enveloping Mist
			then					
				if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			 		PQR_CustomTarget = members[1].Unit
			 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast EM - HP: &amp;quot; ..members[1].HP)
			 		CastSpellByName(tostring(GetSpellInfo(124682)),members[1].Unit)
			 		return true
			 	elseif select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) == 0 
			 	and select(2,GetTalentRowSelectionInfo(3)) == 9 
			 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		 		
			 		CastSpellByName(tostring(GetSpellInfo(115399),nil))	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Chi Brew then EM - HP: &amp;quot; ..members[1].HP)
					PQR_CustomTarget = members[1].Unit
					CastSpellByName(tostring(GetSpellInfo(124682)),members[1].Unit)
			 		return true	
				end		 			 		
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>StanceOfTheWiseSerpent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--StanceOfTheWiseSerpent
if GetShapeshiftForm()~=1 
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	CastShapeshiftForm(1)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ExpelHarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 4
and (Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 90 or Nova_SpamExpelHarmCheck)
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and PQR_SpellAvailable(115072) 
and select(2,GetSpellCooldown(115072)) &amp;lt; 2
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(115072) then	
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FF ExpelHarm&amp;quot;)
	CastSpellByName(tostring(GetSpellInfo(115072),nil))
	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (VachiusaMistMonk_PauseRotation_key and not GetCurrentKeyBoardFocus())
 or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
 or (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115176)) --Zen Meditation
 or (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_LowMana and UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115294)) --Mana Tea Channeling
 or IsMounted()
 or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChiBurstSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ChiBurst
if Nova_ChiBurstCheck then
	if not CB_Queue then CB_Queue = {} end	
	if select(2,GetTalentRowSelectionInfo(2)) == 6 then
		if select(2,GetSpellCooldown(123986)) &amp;gt; 2 then	
			CB_Queue = {}
			if acbturn then
				acbturn = false
				TurnRightStop() TurnLeftStop() 	 
			end
		end
		if #CB_Queue &amp;gt; 0 then
			if (GetTime() - CB_Queue[1].Time) &amp;gt; 3 then	
				CB_Queue = {}
			end
			if acbturn then
				acbturn = false
				TurnRightStop() TurnLeftStop() 	 
			end		
		end		
		if Nova_Moving and acbturn then
			CB_Queue = {}
			acbturn = false
			TurnRightStop() TurnLeftStop() 	 		
		end	
	end
end

if Nova_ChiBurstCheck
and PQR_SpellAvailable(123986) 
and select(2,GetTalentRowSelectionInfo(2)) == 6 		
and select(2,GetSpellCooldown(123986)) &amp;lt; 2
and not stopdps		
and not stopcasting 
and not LLdebuff
and not Nova_Moving	
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
then							
	if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	and lowhpmembers &amp;gt;= Nova_ChiBurstLimit 
	then		
		if #CB_Queue &amp;lt; 1 then
			PRGetDistanceTable(Nova_ChiBurst, 5, Nova_ChiBurstLimit)	
			PRGetDistanceTablebyHP(Nova_ChiBurst,Nova_ChiBurstLimit)
												
			if IsSpellInRange(GetSpellInfo(115175),prdistancebyhp[1].Unit) == 1 --SM
			and not UnitIsUnit(prdistancebyhp[1].Unit, &amp;quot;player&amp;quot;)
			and (prdistancebyhp[1].PD &amp;gt;= Nova_ChiBurstLimit)
			and prdistancebyhp[1].HP &amp;lt;= Nova_ChiBurst then
				table.insert(CB_Queue, { Unit = prdistancebyhp[1].Unit, Time = GetTime() } )
			end	
		end
		
		if #CB_Queue &amp;gt; 0 then
			local CBUnit = CB_Queue[1].Unit
			local px, tx, angle, dwt = VUnitFacing(CBUnit)
			if px ~= 0 
			and tx ~= 0 
			and not IsMouselooking()
			and dwt &amp;lt;= 40 then	
				if UnitChannelInfo(&amp;quot;player&amp;quot;)
				then
					SpellStopCasting()				
				end									
				if angle &amp;gt; 0 
				and angle &amp;lt; 16 then 
					acbturn = true
					TurnLeftStart() 			
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFTurn Left&amp;quot;)	
				end
				if angle &amp;gt; 15 
				and angle &amp;lt; 31 then 
					acbturn = true
					TurnRightStart() 				
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFTurn Right&amp;quot;)	
				end
				if angle == 31 
				or angle == 0 then 			
					TurnRightStop() TurnLeftStop() 	      		
					CastSpellByName(tostring(GetSpellInfo(123986)),nil)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast &amp;quot;..GetSpellInfo(123986)..&amp;quot; - Name: &amp;quot; ..UnitName(CBUnit))					
				end						
			else
				CB_Queue = {}
			end			
			return true	
		end		
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ResAndMRes</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitIsConnected(&amp;quot;mouseover&amp;quot;)
and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 			
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and not UnitHasIncomingResurrection(&amp;quot;mouseover&amp;quot;) 
then		
	if PQR_SpellAvailable(83968) 		
	and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(95223)) ----Mass Resurrection debuff
	and Nova_CheckLastCast(83968, 2.0)		
	then
		if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
		end
		local deadnum = 0
		if group then
			for i = 1, GetNumGroupMembers() do 
				local member = group..i
				if UnitIsDeadOrGhost(member) then
					if not UnitDebuff(member, GetSpellInfo(95223)) then ----Mass Resurrection debuff 
						deadnum = deadnum + 1
					end
				end
			end
		end		
		if deadnum &amp;gt;= 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(83968),nil)) --Mass Resurrection	 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto MasRes!&amp;quot;)
			return true		
		end
	end
	
	if PQR_SpellAvailable(115178)
	and IsUsableSpell(115178) 	
	and Nova_CheckLastCast(115178, 2.0)	
	and (IsSpellInRange(GetSpellInfo(115178),&amp;quot;mouseover&amp;quot;) == 1) 		
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 
		CastSpellByName(tostring(GetSpellInfo(115178)),&amp;quot;mouseover&amp;quot;) --Resurrection	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto Res!&amp;quot;)
		return true			
	end			
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RenewingMistSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RenewingMistCheck or Nova_SpamRenewingMistCheck then
	if PQR_SpellAvailable(115151) 
	and IsUsableSpell(115151)
	and select(2,GetSpellCooldown(115151)) &amp;lt; 2 
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	then
		if members[1].HP &amp;lt;= Nova_RenewingMistTank then
			PRGetDistanceTablebuff(Nova_RenewingMistTank, 40, 2, 115151)	
			PRGetDistanceTablebyHPbuff(Nova_RenewingMistTank,2)					
			if IsSpellInRange(GetSpellInfo(115151),prdistancebyhpbuff[1].Unit) 
			and (prdistancebyhpbuff[1].PD &amp;gt;= 2) then
				if (UnitThreatSituation(prdistancebyhpbuff[1].Unit) == 3 and prdistancebyhpbuff[1].HP &amp;lt;= Nova_RenewingMistTank) or prdistancebyhpbuff[1].HP &amp;lt;= Nova_RenewingMist 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then			
					CastSpellByName(tostring(GetSpellInfo(115151)),prdistancebyhpbuff[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew member - HP: &amp;quot;..prdistancebyhpbuff[1].HP)						
					return true
				end	
			end			
		end
		
		if Nova_SpamRenewingMistCheck 
		and not UnitBuffID(members[1].Unit,115151,&amp;quot;player&amp;quot;)	
		and IsSpellInRange(GetSpellInfo(115151),members[1].Unit) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
			CastSpellByName(tostring(GetSpellInfo(115151)),members[1].Unit)
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew2 member - HP: &amp;quot;..members[1].HP)				
			return true				
		end										
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>UpliftSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--UpliftSmart
if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
then
	
	local upliftcount=0
	local rmcount=0
	for i=1, #members do
		if UnitBuffID(members[i].Unit,115151,&amp;quot;player&amp;quot;)				
		then 	
			rmcount = rmcount + 1	
			if members[i].HP &amp;lt;= Nova_Uplift then
				upliftcount = upliftcount + 1
				if upliftcount &amp;gt;= Nova_UpliftCount+1 then
					break
				end
			end
		end
	end		
															
	if PQR_SpellAvailable(116670)			
	and Nova_UpliftCheck 
	and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 then
		if (upliftcount &amp;gt;= Nova_UpliftCount --Nova_UpliftCount
		and ((select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2) and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_LowMana)))
		or (select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4
		and (upliftcount &amp;gt;= (Nova_UpliftCount-1)))
		or (select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4
		and UnitBuffID(&amp;quot;player&amp;quot;,137331)) then --Meta gem Lucidity
			if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 1 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and (upliftcount &amp;gt;= (Nova_UpliftCount+1))
			and select(2,GetTalentRowSelectionInfo(3)) == 9 then		 		
				CastSpellByName(tostring(GetSpellInfo(115399),nil))	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Chi Brew then UpLift&amp;quot;)				
			end				
			
			if PQR_SpellAvailable(116680) --Thunder Focus Tea
			and not UnitBuffID(&amp;quot;player&amp;quot;,116680) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and select(2,GetSpellCooldown(116680)) &amp;lt; 2 
			and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
			and ((upliftcount &amp;gt;= Nova_TFTeaUplift and Nova_TFTeaUpliftCheck) 
			or (rmcount &amp;gt;= Nova_TFTReM and Nova_TFTReMCheck)) then
				CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then Uplift - UpliftCount: &amp;quot; ..upliftcount) 
			end						
			
			if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(116670),nil))	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Uplift - UpliftCount: &amp;quot; ..upliftcount) 							
				return true
			end
		end			
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChiWaveSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ChiWaveSmart
if select(2,GetTalentRowSelectionInfo(2)) == 4 
and select(2,GetSpellCooldown(115098)) &amp;lt; 2 then				
		if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		and lowhpmembers &amp;gt;= Nova_ChiWaveLimit
		then
			
			PRGetDistanceTable(Nova_ChiWave,20,Nova_ChiWaveLimit)	
			PRGetDistanceTablebyHP(Nova_ChiWave,Nova_ChiWaveLimit)
												
			if Nova_ChiWaveCheck
			and PQR_SpellAvailable(115098) 
			and not Nova_Moving	then						
				if IsSpellInRange(GetSpellInfo(115098),prdistancebyhp[1].Unit) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and (prdistancebyhp[1].PD &amp;gt;= Nova_ChiWaveLimit)
				and prdistancebyhp[1].HP &amp;lt;= Nova_ChiWave then									
					CastSpellByName(tostring(GetSpellInfo(115098)),prdistancebyhp[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Nova_ChiWave - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD) 				
					return true
				end					
			end
		end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ZenSphereSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ZenSphereSmart
if select(2,GetTalentRowSelectionInfo(2)) == 5 
and select(2,GetSpellCooldown(124081)) &amp;lt; 2 then				
	local zsc = 0
	if UnitBuffID(&amp;quot;boss1&amp;quot;,124081,&amp;quot;PLAYER&amp;quot;) then
		zsc = zsc + 1
	end
	for i=1, #members do	
		if UnitBuffID(members[i].Unit,124081,&amp;quot;PLAYER&amp;quot;) then
			zsc = zsc + 1
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield on: &amp;quot;..UnitName(members[i].Unit))
		end
		if zsc == 2 then
			break
		end
	end
	
	if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and lowhpmembers &amp;gt;= Nova_ZenSphereLimit		
	and zsc &amp;lt; 2
	then
		
		PRGetDistanceTable(Nova_ZenSphere,10,Nova_ZenSphereLimit)	
		PRGetDistanceTablebyHP(Nova_ZenSphere,Nova_ZenSphereLimit)
											
		if Nova_ZenSphereCheck
		--and not stopdps				
		and PQR_SpellAvailable(124081) 
		and not Nova_Moving	then						
			if IsSpellInRange(GetSpellInfo(124081),prdistancebyhp[1].Unit) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and (prdistancebyhp[1].PD &amp;gt;= Nova_ZenSphereLimit)
			and prdistancebyhp[1].HP &amp;lt;= Nova_ZenSphere then	
				if not UnitBuffID(prdistancebyhp[1].Unit,124081,&amp;quot;PLAYER&amp;quot;) then
					CastSpellByName(tostring(GetSpellInfo(124081)),prdistancebyhp[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Zen Sphere1 - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD..&amp;quot; - zsc: &amp;quot;..zsc) 
					return true
				elseif #prdistancebyhp &amp;gt; 1 then
					CastSpellByName(tostring(GetSpellInfo(124081)),prdistancebyhp[2].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Zen Sphere2 - Name: &amp;quot; ..UnitName(prdistancebyhp[2].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[2].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[2].PD..&amp;quot; - zsc: &amp;quot;..zsc) 
					return true					
				end
			end					
		end
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:Jab</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Jab
if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not stopdps
and (select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 1		
or (UnitBuffID(&amp;quot;player&amp;quot;,137331) --Meta gem Lucidity
and not UnitBuffID(&amp;quot;player&amp;quot;,139597))) --Muscle Memory - 139598
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and UnitExists(&amp;quot;target&amp;quot;) 
and PQR_SpellAvailable(100780) 
and IsUsableSpell(100780)
and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and IsSpellInRange(GetSpellInfo(100780),&amp;quot;target&amp;quot;) == 1
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then		
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FF Jab&amp;quot;)
	CastSpellByName(tostring(GetSpellInfo(100780)),&amp;quot;target&amp;quot;)
	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:RM</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RenewingMistMM
if PQR_SpellAvailable(115151) 
and IsUsableSpell(115151)
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 										
	if IsSpellInRange(GetSpellInfo(115151),members[1].Unit) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then			
		CastSpellByName(tostring(GetSpellInfo(115151)),members[1].Unit)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew member - HP: &amp;quot;..members[1].HP)
		return true
	elseif not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		CastSpellByName(tostring(GetSpellInfo(115151)),nil)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew Player&amp;quot;)
		return true		
	end											
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:BoK</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--TPnBoK
if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not stopdps
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and UnitExists(&amp;quot;target&amp;quot;)
and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,127722) then --Serpent&amp;apos;s Zeal		
			if PQR_SpellAvailable(100784)
			and IsUsableSpell(100784)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
			and IsSpellInRange(GetSpellInfo(100784),&amp;quot;target&amp;quot;) == 1	then 		
				CastSpellByName(tostring(GetSpellInfo(100784)),&amp;quot;target&amp;quot;)
				return true				
			end			
		else
			if ((select(7, UnitBuffID(&amp;quot;player&amp;quot;, 127722)) - GetTime()) &amp;lt;= 2) --Serpent&amp;apos;s Zeal Timer
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 			
			and PQR_SpellAvailable(100784)
			and IsUsableSpell(100784)
			and IsSpellInRange(GetSpellInfo(100784),&amp;quot;target&amp;quot;) == 1	then 
				CastSpellByName(tostring(GetSpellInfo(100784)),&amp;quot;target&amp;quot;)
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FF BlackoutKick&amp;quot;)
				return true							
			elseif PQR_SpellAvailable(100787) 
			and IsUsableSpell(100787)
			and IsSpellInRange(GetSpellInfo(100787),&amp;quot;target&amp;quot;) == 1
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FF TigerPalm for Muscle Memory&amp;quot;)	
				CastSpellByName(tostring(GetSpellInfo(100787)),&amp;quot;target&amp;quot;)
				return true 									
			end
		end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:SM</Name><Default>false</Default><SpellID>116694</SpellID><Actions></Actions><Lua>--SurgingMistMM
if not Nova_DPSCheck
then
	return true
end

if PQR_SpellAvailable(116694) 
and IsUsableSpell(116694) 
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitBuffID(&amp;quot;player&amp;quot;,118674) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Vital Mists
		if IsSpellInRange(GetSpellInfo(116694),members[1].Unit) == 1
		then					
			if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 then		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInstant Surging Mist - HP: &amp;quot; ..members[1].HP)
				PQR_CustomTarget = members[1].Unit
				return true
			end
		else	
			if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 then	
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInstant Surging Mist - HP: &amp;quot; ..members[1].HP)
				return true				
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:TP</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>--TigerPalm
if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not stopdps
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and UnitExists(&amp;quot;target&amp;quot;) 
and PQR_SpellAvailable(100787) 
and IsUsableSpell(100787)
and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and IsSpellInRange(GetSpellInfo(100787),&amp;quot;target&amp;quot;) == 1	
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
	if not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 2 then
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FF TigerPalm for Muscle Memory&amp;quot;)	
		return true 		
	end				
end</Lua><RecastDelay>300</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:AutoTarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoTarget
if Nova_AutoTargetCheck then	
	if (not UnitExists(&amp;quot;focus&amp;quot;)
		or UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		or not UnitInRange(&amp;quot;focus&amp;quot;) 
		or not UnitIsConnected(&amp;quot;focus&amp;quot;)
		or not UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))	
	and #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
			then			
	   			TargetUnit(Nova_Tanks[i].Unit)            		
	    		RunMacroText(&amp;quot;/focus&amp;quot;)			
	            RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)			
			end
		end
	end
	
	if UnitExists(&amp;quot;focus&amp;quot;)
	and not Nova_Moving
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;))
	and not UnitIsDeadOrGhost(&amp;quot;focustarget&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	and UnitExists(&amp;quot;focustarget&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;)
	and IsSpellInRange(GetSpellInfo(100780),&amp;quot;focustarget&amp;quot;) == 1
	and not PQR_IsOutOfSight(&amp;quot;focustarget&amp;quot;)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		TargetUnit(&amp;quot;focustarget&amp;quot;)
		return false 	
	elseif UnitExists(&amp;quot;target&amp;quot;) 
	and not stopdps
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;) then
		if IsSpellInRange(GetSpellInfo(6603),&amp;quot;target&amp;quot;) == 1 then		
			AttackTarget()
			return false 			
		else
			StopAttack()
			return false 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Drink</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_SpellAvailable(80618) --Mage cookies	
and not UnitBuffID(&amp;quot;player&amp;quot;, 104269)
and not Nova_Moving 
and GetItemCooldown(80618) == 0 then
	UseItemByName(80618)
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMage cookies - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- 53Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_53EventsCheck then
	local boss,bossid = bossid()
	local dispelid = 115450		
	local buff = { }
	stopcasting = false
	stopdps = false
	LLdebuff = false
	LLdebuffunit = false		
	if UnitExists(boss) then
		--TFT raid
		if bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 			
		elseif bossid == 68476 then --Horridon
			local buff  = { 136708, 136719, 136587, 136710 }
			RaidDispel(dispelid,buff) 
		elseif false and bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head - Players affected by  Cinders should be quick to run over any existing  Icy Ground void zones, and then move to a safe location (out of the way of the raid) to be dispelled.
			local buff  = { 139822, 139909 } 	
			RaidRangeDispel(dispelid,buff,10) 
		elseif false and bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispel(dispelid,buff)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end				
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then --Lightning Prison
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff)
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			SBossDispel(123011,dispelid) 
			--RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60708 then --Meng the Demented
			for i=1, #members do	
				if UnitDebuffID(members[i].Unit, 117708) then --Maddening Shout
					stopdps = true
					break
				end
			end			
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		end		
		
		if bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 or bossid == 61140 or bossid == 70056 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- 4xEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_4xEventsCheck then --Old raid
	local boss,bossid = bossid()
	if UnitExists(boss) then					
		if bossid == 55294 then
			local PQ_SN = PQ_Shrapnel
			local PQ_FL = PQ_FadingLight
			local PQ_HOT = PQ_HourOfTwilight				
		
			-- Fading Light Debuff
			for i=1,#PQ_FL do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
			
			-- Hour of Twilight
			if false then
				if PQR_SpellAvailable(115176)
				and select(2,GetSpellCooldown(115176)) &amp;lt; 2
				then SpellStopCasting() CastSpellByName(tostring(GetSpellInfo(115176)),&amp;quot;player&amp;quot;) return true end
			else
				local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(boss) 
				for i=1,#PQ_HOT do
					if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					end
				end
			end
		end
		
		if bossid == 56173 then
			-- Target for Shrapnel
			for i=1,#PQ_SN do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i])) - GetTime() &amp;lt; 2 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ZenMeditation (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Zen Meditation (TC)
if Nova_ZenMeditationCheck then	
	if (VachiusaMistMonk_ZenMeditation_key and not GetCurrentKeyBoardFocus()) then		
		if PQR_SpellAvailable(115176) 
		and GetSpellCooldown(115176) == 0
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and not Nova_Moving 
		and not UnitChannelInfo(&amp;quot;player&amp;quot;)
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
		and not stopcasting then
			CastSpellByName(tostring(GetSpellInfo(115176)),nil)
			return true 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- 54Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_54EventsCheck 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	local boss,bossid = bossid()
	local dispelid = 115450	
	local rangecheckid = 115175	
	local buff = { }
	stopcasting = false
	stopdps = false
	LLdebuff = false
	LLdebuffunit = false		
	if UnitExists(boss) then
		--local _, _, rdifficulty = GetInstanceInfo()
		if bossid == 71515 then --General Nazgrim
			if UnitBuffID(&amp;quot;boss1&amp;quot;, 143593) then --Defensive Stance
				stopdps = true				
			else
				stopdps = false
			end
		elseif bossid == 71995 or bossid == 71996 or bossid == 72000 then --Amalgam of Corruption - Norushen
			if UnitDebuffID(&amp;quot;player&amp;quot;,144850) --Test of Reliance
			then 
				BossSheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, 3, true, rangecheckid)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true
				local buff  = { 144514 } --Lingering Corruption
				RaidDispel(dispelid,buff) 	
			end
		elseif bossid == 71475 or bossid == 71479 or bossid == 71480 then --The Fallen Protectors
			local buff  = { 143434 } --Shadow Word: Bane
			RaidDispel(dispelid,buff) 	
		elseif bossid == 71734 then --Sha of Pride
			if UnitDebuffID(&amp;quot;player&amp;quot;,144359) then
				local buff  = { 144351 } --Mark of Arrogance
				RaidDispel(dispelid,buff) 			
			end
		elseif bossid == 71454 then --Malkorok	
			local buff  = { 142913 } 	
			RaidRangeDispel(dispelid,buff,8) 	
			if UnitDebuffID(&amp;quot;player&amp;quot;,142861) then --Ancient Miasma			
				ShieldSheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true					
			end
		elseif bossid == 71161 then --Kil&amp;apos;ruk the Wind-Reaver - Paragons of the Klaxxi
			if UnitDebuffID(&amp;quot;player&amp;quot;,141858) then --Ingenious			
				if not tIngenious or (#tIngenious &amp;gt; 0 and (GetTime() &amp;gt; tIngenious[1].Time + 30)) then
					tIngenious = { }						
					local qTime = GetTime() 
					local lastmax = 0
					local maxunit = &amp;quot;player&amp;quot;		
					local lasttype = &amp;quot;notype&amp;quot;						
					local ClassList = { {&amp;apos;WARRIOR&amp;apos;, 0 }, {&amp;apos;PALADIN&amp;apos;, 0 }, {&amp;apos;HUNTER&amp;apos;, 0 }, {&amp;apos;ROGUE&amp;apos;, 0 }, {&amp;apos;PRIEST&amp;apos;, 0 }, {&amp;apos;DEATHKNIGHT&amp;apos;, 0 }, {&amp;apos;SHAMAN&amp;apos;, 0 }, {&amp;apos;MAGE&amp;apos;, 0 }, {&amp;apos;WARLOCK&amp;apos;, 0 }, {&amp;apos;MONK&amp;apos;, 0 }, {&amp;apos;DRUID&amp;apos;, 0 } }				
					local RaceList = { {&amp;apos;Draenei&amp;apos;, 0 }, {&amp;apos;Gnome&amp;apos;, 0 }, {&amp;apos;Human&amp;apos;, 0 }, {&amp;apos;NightElf&amp;apos;, 0 }, {&amp;apos;Worgen&amp;apos;, 0 }, {&amp;apos;Pandaren&amp;apos;, 0 }, {&amp;apos;BloodElf&amp;apos;, 0 }, {&amp;apos;Goblin&amp;apos;, 0 }, {&amp;apos;Orc&amp;apos;, 0 }, {&amp;apos;Tauren&amp;apos;, 0 }, {&amp;apos;Troll&amp;apos;, 0 }, {&amp;apos;Scourge&amp;apos;, 0 } }
					for i=1,25 do
						local unitCheck = &amp;quot;raid&amp;quot;..i
					    if UnitExists(unitCheck) and UnitIsPlayer(unitCheck) then
					    	local _, unitClass = UnitClass(unitCheck)				    	
					    	local _, unitRace = UnitRace(unitCheck)				    	
					        if unitClass and UnitRace then	
								--Class
								for j=1, #ClassList do
									if unitClass == ClassList[j][1] then
										--PQR_WriteToChat(&amp;quot;Debug1 - Num: &amp;quot; ..ClassList[j][2]..&amp;quot; - Class: &amp;quot; ..ClassList[j][1])
										ClassList[j][2] = ClassList[j][2] + 1
										if ClassList[j][2] &amp;gt; lastmax then
											lastmax = ClassList[j][2]
											maxunit = unitCheck
											lasttype = ClassList[j][1]
										end												
									end		
								end
								--Race
								for j=1, #RaceList do
									if unitRace == RaceList[j][1] then
										--PQR_WriteToChat(&amp;quot;Debug1 - Num: &amp;quot; ..RaceList[j][2]..&amp;quot; - Race: &amp;quot; ..RaceList[j][1])
										RaceList[j][2] = RaceList[j][2] + 1
										if RaceList[j][2] &amp;gt; lastmax then
											lastmax = RaceList[j][2]
											maxunit = unitCheck
											lasttype = RaceList[j][1]
										end												
									end		
								end
					        end			               	
					    end
					end				
					--PQR_WriteToChat(&amp;quot;Debug1 - Unit: &amp;quot; ..maxunit..&amp;quot; - Type: &amp;quot; ..lasttype..&amp;quot; - Total: &amp;quot; ..lastmax..&amp;quot; - Time: &amp;quot; ..qTime)		
					table.insert(tIngenious, { Unit = maxunit, Type = lasttype, Total = lastmax, Time = qTime } )			
					return true								
				else
					if #tIngenious &amp;gt; 0 then			
						if UnitExists(tIngenious[1].Unit) 
						and IsSpellInRange(GetSpellInfo(rangecheckid),tIngenious[1].Unit) == 1
						and CanHeal(tIngenious[1].Unit) then	
			    			TargetUnit(tIngenious[1].Unit) 
			                --Press the ExtraActionButton 
			                RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)                     
			                RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
			                --PQR_WriteToChat(&amp;quot;Ingenious Name: &amp;quot;..UnitName(tIngenious[1].Unit)..&amp;quot; - Type: &amp;quot;..tIngenious[1].Type..&amp;quot; - Total: &amp;quot;..tIngenious[1].Total..&amp;quot; - Time: &amp;quot;..tIngenious[1].Time)						        					        	   	
						end
					end				
				end   				
			else
				tIngenious = false
			end
		elseif bossid == 71529 then --Thok the Bloodthirsty
			local buff  = { 143791 } --Corrosive Blood
			RaidDispel(dispelid,buff) 
			local DeafeningScreech = GetSpellInfo(143343) --Deafening Screech
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == DeafeningScreech) then
				stopcasting = true
			end							
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- NPCMouseoverHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--NPCMouseoverHeal
if Nova_NPCMouseoverHeal
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
then
	local dispelid = 115450	
	local rangecheckid = 115175	
	if UnitExists(&amp;quot;mouseover&amp;quot;)				
	and not UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16) 				
		if npcID == 71604 --Contaminated Puddle - Immerseus - SoO
		or npcID == 71995 or npcID == 71996 or npcID == 72000 --Norushen
		or npcID == 71357 --Wrathion		
		then				
			if IsSpellInRange(GetSpellInfo(rangecheckid),&amp;quot;mouseover&amp;quot;)
			and Nova_UnitInfo(&amp;quot;mouseover&amp;quot;) &amp;lt; 100 then	
				--RenewingMist
				if PQR_SpellAvailable(115151) 
				and not UnitBuffID(&amp;quot;mouseover&amp;quot;,115151,&amp;quot;player&amp;quot;)
				and IsSpellInRange(GetSpellInfo(115151),&amp;quot;mouseover&amp;quot;) == 1
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and IsUsableSpell(115151) then
					CastSpellByName(tostring(GetSpellInfo(115151)),&amp;quot;mouseover&amp;quot;)	 
				end		
				
				--EnvelopingMist
				if PQR_SpellAvailable(124682) 		 
				 and IsSpellInRange(GetSpellInfo(124682),&amp;quot;mouseover&amp;quot;) == 1		 
				 and (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
				 and IsUsableSpell(124682) then 	
					if UnitBuffID(&amp;quot;mouseover&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
					and not UnitBuffID(&amp;quot;mouseover&amp;quot;,124682,&amp;quot;player&amp;quot;) --Enveloping Mist
					then					
						if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
						and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
							CastSpellByName(tostring(GetSpellInfo(124682)),&amp;quot;mouseover&amp;quot;)	 
					 	elseif select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) == 0 
					 	and select(2,GetTalentRowSelectionInfo(3)) == 9 
					 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		 		
					 		CastSpellByName(tostring(GetSpellInfo(115399)),&amp;quot;player&amp;quot;) --Chi Brew	 
							CastSpellByName(tostring(GetSpellInfo(124682)),&amp;quot;mouseover&amp;quot;)	 
						end		 			 		
					end
				end			
				
				--SurgingMist 
				if PQR_SpellAvailable(116694) 
				and IsUsableSpell(116694) 		
				and IsSpellInRange(GetSpellInfo(116694),&amp;quot;mouseover&amp;quot;) == 1 then		
					if UnitBuffID(&amp;quot;player&amp;quot;,118674) then --Vital Mists
						if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 
						and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
							CastSpellByName(tostring(GetSpellInfo(116694)),&amp;quot;mouseover&amp;quot;)
						end
					end
					
					if (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70)
					then		
						if (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
						then 	
							if UnitBuffID(&amp;quot;mouseover&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
							and not UnitCastingInfo(&amp;quot;player&amp;quot;)
							then		
								if PQR_SpellAvailable(116680) --Thunder Focus Tea
								and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then
									if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
									and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
									and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
										CastSpellByName(tostring(GetSpellInfo(116680),&amp;quot;player&amp;quot;))	 								
									end					
								end								
								CastSpellByName(tostring(GetSpellInfo(116694)),&amp;quot;mouseover&amp;quot;)
							end
						end
					end
				end			
					
				--SoothingMist
				if PQR_SpellAvailable(115175)  
				and IsUsableSpell(115175) 
				and not Nova_Moving 
				and IsSpellInRange(GetSpellInfo(115175),&amp;quot;mouseover&amp;quot;) --Soothing Mist
				and not UnitBuffID(&amp;quot;mouseover&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
			 		CastSpellByName(tostring(GetSpellInfo(115175)),&amp;quot;mouseover&amp;quot;)	 
			 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast SoothingMist - Name: &amp;quot; ..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;mouseover&amp;quot;)..&amp;quot; - NPCID: &amp;quot;..npcID) 
			 		return true
				end		
			end
		end		
	elseif UnitExists(&amp;quot;focus&amp;quot;)				
	and not UnitIsPlayer(&amp;quot;focus&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;focus&amp;quot;):sub(6,10), 16) 				
		if npcID == 71604 --Contaminated Puddle - Immerseus - SoO
		or npcID == 71995 or npcID == 71996 or npcID == 72000 --Norushen
		or npcID == 71357 --Wrathion 
		then
			if IsSpellInRange(GetSpellInfo(rangecheckid),&amp;quot;focus&amp;quot;) --FlashHeal
			then		
				local focushp = CalculateHP(&amp;quot;focus&amp;quot;)
				if focushp ~= nil and select(2, CalculateHP(&amp;quot;focus&amp;quot;)) ~= nil then
					table.insert(members, { Unit = &amp;quot;focus&amp;quot;, HP = focushp, AHP = select(2, CalculateHP(&amp;quot;focus&amp;quot;)), IsNPC = true } )
				end
				if #members &amp;gt; 0 then
					table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
				end				
			end
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RushingJadeWind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RushingJadeWind
if Nova_RushingJadeWindCheck then
	if PQR_SpellAvailable(116847) 
	and select(2,GetTalentRowSelectionInfo(6)) == 16 
	and select(2,GetSpellCooldown(116847)) &amp;lt; 2 
	and IsUsableSpell(116847) 	
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	then
		 if AverageHealth(Nova_RushingJadeWindLimit) &amp;lt;= Nova_RushingJadeWind then		 	
			local real_b = 0
			if #members &amp;gt; 1 then
				for i=1,#members do		
					if PQR_UnitDistance(&amp;quot;player&amp;quot;,members[i].Unit) and members[i].HP then
						if PQR_UnitDistance(&amp;quot;player&amp;quot;,members[i].Unit) &amp;lt;= 8 
						and not UnitIsUnit(&amp;quot;player&amp;quot;,members[i].Unit) 
						and members[i].HP &amp;lt;= Nova_RushingJadeWind then
							real_b = real_b + 1					
							if real_b &amp;gt;= Nova_RushingJadeWindLimit then
								break
							end									
						end
					end
				end
				if real_b &amp;gt;= Nova_RushingJadeWindLimit 
				then
					CastSpellByName(tostring(GetSpellInfo(116847)),nil)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRushing Jade Wind&amp;quot;)						
					return true					
				end
			end	
		end
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChiBurst (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ChiBurst
if select(2,GetTalentRowSelectionInfo(2)) == 6 then				
	if Nova_ChiBurstCheck then	
		if (VachiusaMistMonk_ChiBurst_key and not GetCurrentKeyBoardFocus()) then
			if PQR_SpellAvailable(123986) 
			and not Nova_Moving		
			and not stopcasting 
			and not LLdebuff				
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			then
				CastSpellByName(tostring(GetSpellInfo(123986)),nil)
				return true 
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- QueueSys</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- QueueSys
if Nova_QueueSysCheck 
then
	local dispelid = 115450	
	local rangecheckid = 115175		
	if #Queue_Sys &amp;gt; 0 then	
		if PQR_SpellAvailable(dispelid) 
		and select(2,GetSpellCooldown(dispelid)) &amp;lt; 2
		and UnitExists(Queue_Sys[1].Unit)
		and IsUsableSpell(dispelid)
		and IsSpellInRange(GetSpellInfo(dispelid),Queue_Sys[1].Unit) == 1
		and CanHeal(Queue_Sys[1].Unit)
		and not PQR_IsOutOfSight(Queue_Sys[1].Unit) then
			if not UnitChannelInfo(&amp;quot;player&amp;quot;)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
			then	
				CastSpellByName(tostring(GetSpellInfo(dispelid)),Queue_Sys[1].Unit)					
				return true	
			end
		end
	end
	
	if Queue_Spell then
		if #Queue_Spell &amp;gt; 0 then	
			if GetTime() - Queue_Spell[1].Time &amp;gt;= 10 then
				--PQR_WriteToChat(&amp;quot;Removed expired queue &amp;quot;..Queue_Spell[1].SpellID)
				Queue_Spell = { }				
				return true
			end			
			if #Queue_Spell &amp;gt; 1 then			
				if Queue_Spell[1].SpellID == Queue_Spell[2].SpellID and Queue_Spell[1].Unit == Queue_Spell[2].Unit then
					--PQR_WriteToChat(&amp;quot;Removed dup queue &amp;quot;..Queue_Spell[1].SpellID)
					table.remove(Queue_Spell,2)	
					return true	
				end
			end
			
			local qunit = &amp;quot;player&amp;quot;
			if Queue_Spell[1].Unit == &amp;quot;low&amp;quot; then
				qunit = members[1].Unit
			elseif Queue_Spell[1].Unit == &amp;quot;tank&amp;quot; then
				if #Nova_Tanks &amp;gt; 0 then
					for i=1, #Nova_Tanks do
						if UnitThreatSituation(Nova_Tanks[i].Unit) then
							qunit = Nova_Tanks[i].Unit
							break
						end
					end
				end
				if UnitThreatSituation(members[1].Unit)	== 3 then
				 	qunit = members[1].Unit
				end			
			else
				qunit = Queue_Spell[1].Unit
			end
			
			if PQR_SpellAvailable(tonumber(Queue_Spell[1].SpellID)) 
			and select(2,GetSpellCooldown(tonumber(Queue_Spell[1].SpellID))) &amp;lt; 2
			and UnitExists(qunit)
			then
				if not UnitChannelInfo(&amp;quot;player&amp;quot;)
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
				then					
					local qmembers = members
					table.sort(qmembers, function(x) return UnitIsUnit(qunit,x.Unit) end)
					if UnitIsUnit(qmembers[1].Unit,qunit) then
						qunit = qmembers[1].Unit	
					else
						if IsSpellInRange(GetSpellInfo(Queue_Spell[1].SpellID),Queue_Spell[1].Unit) then
							qunit = Queue_Spell[1].Unit	
						else
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFQueue System: Can not cast on that target!&amp;quot;)
							qunit = &amp;quot;player&amp;quot;
						end
					end
					SpellSUCCEEDED(Queue_Spell[1].SpellID,qunit)
					CastSpellByName(tostring(GetSpellInfo(Queue_Spell[1].SpellID)),qunit)									
					return true						
				end
			end						
		end
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>