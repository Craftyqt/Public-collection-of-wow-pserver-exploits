<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>Blackout Kick</Name><Default>false</Default><SpellID>100784</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
 and GCDCheck(116095)
and PQR_SpellAvailable(100784)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;gt; 1 
and (goRage == 1 or UnitCreatureType(&amp;quot;target&amp;quot;) == &amp;quot;totem&amp;quot;)
then 
--PQR_WriteToChat(&amp;quot;asda&amp;quot;)
--CastSpellByName(GetSpellInfo(100784),&amp;quot;target&amp;quot;)
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rising Sun Kick</Name><Default>false</Default><SpellID>107428</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
 and GCDCheck(116095)
	and (UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;Totem&amp;quot; or UnitHealth(&amp;quot;target&amp;quot;) == 1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;gt; 1 
and goRage == 1
then 
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tiger&amp;apos;s Lust</Name><Default>false</Default><SpellID>116841</SpellID><Actions></Actions><Lua>if  GCDCheck(116095)
       and HaveDebuff(&amp;quot;player&amp;quot;,dRoot(),4)  then
      PQR_CustomTarget = &amp;quot;player&amp;quot;
      	 xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(116841)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
       return true end

for i=1,numberfriends do 
    if  UnitExists(members[i])
    
    and LineOfSight(members[i])
     and GCDCheck(116095)
     and UnitInRange(members[i])
    and (eMembers[i].Range ~= nil and eMembers[i].Range &amp;lt; 20)
    and  UnitPowerMax(members[i]) &amp;lt; 100000
   and UnitExists(members[i]..&amp;quot;target&amp;quot;)
   and CalculateHP(members[i]..&amp;quot;target&amp;quot;) &amp;lt; 70
  and HaveDebuff(members[i],dRoot(),1)  then
      PQR_CustomTarget = members[i]
      	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(116841)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
       return true end
    end
    
     for i=1,numberfriends do 
     
    if UnitExists(members[i])
    and LineOfSight(members[i])
     and GCDCheck(116095)
          and UnitInRange(members[i])
    and (eMembers[i].Range ~= nil and eMembers[i].Range &amp;lt; 20)
    and IsHealer(members[i])
    and CalculateHP(members[i]) &amp;lt; 80
  and HaveDebuff(members[i],aSRS(),1)  then
      PQR_CustomTarget = members[i]
            	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(116841)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
       return true end
    end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>&amp;gt; RDY</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  ----------------------------------
  -- Load Data Files
  ----------------------------------

	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_DATA.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Datafile loaded!&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_Settings.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Settings loaded!&amp;quot;)
		
	end
	
	
	PQR_RotationStarted = false
end
local numglobal,numperchar = GetNumMacros()
if numperchar &amp;lt; 18 then
if not GetMacroInfo(&amp;quot;AvailableMacros&amp;quot;) then
CreateMacro(&amp;quot;AvailableMacros&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;/CCFocus\\n/CCHealer\\n/LegRingOx\\n/SEF\\n/FistsOfFury\\n/SEFSolo\\n/BurstTarget\\n/Karma&amp;quot;, 1)
end
end
	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;CCFocus&amp;quot;,		 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;CCHealer&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;LegRingOx&amp;quot;,		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;SEF&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;SEFSolo&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Karma&amp;quot;,		Var2 = 1		}, 
		{	Var1 = 0,	Text = &amp;quot;FistsOfFury&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;BurstTarget&amp;quot;,			Var2 = 1		}		
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end

	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_BURST1 = &amp;quot;/bursttarget&amp;quot;
	function SlashCmdList.BURST(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_BurstTarget&amp;quot;) then
		--	xrn:message(&amp;quot;\124cFF0000FFBurst Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFBurst Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	SLASH_CCFocus1 = &amp;quot;/CCFocus&amp;quot;
	function SlashCmdList.CCFocus(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_CCFocus&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFCCFocus Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFCCFocus Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 0)
		end
	end
	
		SLASH_CCHealer1 = &amp;quot;/CCHealer&amp;quot;
	function SlashCmdList.CCHealer(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_CCHealer&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFCCHealer Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 0)
			else
			xrn:message(&amp;quot;\124cFFCC99FFCCHealer Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 0)
		end
	end
	
		SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFRotation Paused&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
		SLASH_LegRingOx1 = &amp;quot;/LegRingOx&amp;quot;
	function SlashCmdList.LegRingOx(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_LegRingOx&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFLegRingOx Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_LegRingOx&amp;quot;, 1)

		else
			xrn:message(&amp;quot;\124cFFCC99FFLegRingOx Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_LegRingOx&amp;quot;, 0)
		end
	end
	
	
		SLASH_SEF1 = &amp;quot;/SEF&amp;quot;
	function SlashCmdList.SEF(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_SEF&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFSEF Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_SEF&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFSEF Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_SEF&amp;quot;, 0)
		end
	end
		SLASH_SEFSolo1 = &amp;quot;/SEFSolo&amp;quot;
	function SlashCmdList.SEFSolo(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_SEFSolo&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFSEFSolo Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_SEFSolo&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFSEFSolo Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_SEFSolo&amp;quot;, 0)
		end
	end
	
		SLASH_Karma1 = &amp;quot;/Karma&amp;quot;
	function SlashCmdList.Karma(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Karma&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFKarma Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Karma&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFKarma Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Karma&amp;quot;, 0)
		end
	end
	
		SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
	
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
			SLASH_FistsOfFury1 = &amp;quot;/FistsOfFury&amp;quot;
	function SlashCmdList.FistsOfFury(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_FistsOfFury&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFFistsOfFury activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_FistsOfFury&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFFistsOfFury Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_FistsOfFury&amp;quot;, 0)
		end
	end
end



if getInfos == nil then
getInfos = 0
end
CastClick()
settings()
checks()
if  GetTime() - getInfos &amp;gt; 1 and (GCDCheck(100787) or GCDCheck(115460)) then
getInfos = GetTime()
clearCEH()
if cTtimer == nil then cTtimer = 0
end
if GetTime() - cTtimer &amp;gt; 5 then
cTtimer = GetTime()
clearTables()
end
getcTar()
RangeCheckcTar()
clearcTar()
for i=1,#cTar do
redRing(cTar[i],117952,39,i)
end
getmembers()
RangeCheckMembers()
clearmembers()
RangeCheckPet()
interrupt()
if GetItemCount(GetItemInfo(80618)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(57287))end

if GetItemCount(GetItemInfo(5512)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(58275))end
RunMacroText(&amp;quot;/run UIErrorsFrame:Clear()&amp;quot;)
end
GroupInfo()
cokxMacros()

if rotationPause == nil then rotationPause = 0 end

if Nova_Pause == 1 then
rotationPause = GetTime()
SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
end
if GetTime() - rotationPause &amp;lt; 0.3 then
if MacroSpellNumber ~= 0 and MacroUnitNumber ~= 0 and GCDCheck(MacroSpellNumber) then
CastSpellByName(GetSpellInfo(MacroSpellNumber),MacroCT)
return true
end
return true
end
SetCVar(&amp;quot;MacroSpell&amp;quot;, 0)
SetCVar(&amp;quot;MacroUnit&amp;quot;, 0)
SetCVar(&amp;quot;MacroHP&amp;quot;, 100)
SetCVar(&amp;quot;MacroDR&amp;quot;,nil)
SetCVar(&amp;quot;MacroBuff&amp;quot;,nil)
SetCVar(&amp;quot;MacroDebuff&amp;quot;,nil)



if not playerdpsinc then playerdpsinc = 0 end
if not playerdpssum then playerdpssum = 0 end
if not playerdpscalc then playerdpscalc = 0 end
if not sumDps then sumDps = 0 end
if not lastplayerhp then lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;) end

if modtime == nil then
	modtime = 0
end

if GetTime() - modtime &amp;gt; 1 then
	modtime = GetTime()
	playerdpsinc = lastplayerhp -UnitHealth(&amp;quot;player&amp;quot;)
	playerdpssum = playerdpssum + playerdpsinc
	lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;)
end

if avgmodtime == nil then
	avgmodtime = 0
end

if GetTime() - avgmodtime &amp;gt; 5 then
	avgmodtime = GetTime()
	sumDps = 0
	playerdpscalc = playerdpssum/5
	sumDps = playerdpscalc
	playerdpscalc = 0
	playerdpssum = 0
end


if shouttime == nil then
	shouttime = 0
end



if numberfriends == 0 or numberfriends &amp;gt; #members then
numberfriends = #members or nil
end

local flag = { &amp;quot;&amp;quot;..GetSpellInfo(23335), &amp;quot;&amp;quot;..GetSpellInfo(23333) }

for _,v in ipairs(flag) do 
InteractUnit(v)end


---------------

if inMelee == nil then
inMelee = 0
end

if UnitExists(&amp;quot;target&amp;quot;) and inRange(&amp;quot;target&amp;quot;,116095) then
inMelee = 1
else 
inMelee = 0
end

if UnitPower(&amp;quot;player&amp;quot;,12) &amp;gt; 3 then
goRage = 1
end
if UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; 2 then
goRage = 0
end

if UnitExists(&amp;quot;focus&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;)
then
IsFacingFocus = true
else
IsFacingFocus = false
end




cokx:message(&amp;quot;Para-H=&amp;quot;..onOff(Nova_CCHealer)..&amp;quot; | Para-F=&amp;quot;..onOff(Nova_CCFocus)..&amp;quot;| Burst=&amp;quot;..onOff(Nova_BurstTarget)..&amp;quot;| LRO=&amp;quot;..onOff(Nova_LegRingOx)..&amp;quot; | SEF=&amp;quot;..onOff(Nova_SEF)..&amp;quot; | SEFS=&amp;quot;..onOff(Nova_SEFSolo)..&amp;quot; | Karma=&amp;quot;..onOff(Nova_Karma)..&amp;quot; | Fists=&amp;quot;..onOff(Nova_FistsOfFury)..&amp;quot; &amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
 and GCDCheck(116095)
 and ecTar[i].Facing
and UnitIsPlayer(cTar[i])
and PQR_SpellAvailable(117368)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and UnitPowerMax(cTar[i]) &amp;lt; 200000
and not HaveBuff(cTar[i],iDMG(),0) 
and CokxDRInfo(cTar[i],&amp;quot;disarm&amp;quot;) &amp;lt; 1
and HaveBuff(cTar[i],disarmdmg(),3) 
and not HaveBuff(cTar[i],46924,0)
and not HaveDebuff(cTar[i],dCC(),0)
and inRange(cTar[i],117368)
and LineOfSight(cTar[i])
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(117368),PQR_CustomTarget)
      	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(117368)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if inMelee == 0
and not HaveBuff(&amp;quot;player&amp;quot;,{116781,1126,20217},0)
-- and GCDCheck(116781)
then CastSpellByName(GetSpellInfo(116781),&amp;quot;player&amp;quot;) 
return true 
end

if inMelee == 0
and not HaveBuff(&amp;quot;player&amp;quot;,{115921,20217,1126,90363,117666},0)
 --and GCDCheck(115921)
then CastSpellByName(GetSpellInfo(115921),&amp;quot;player&amp;quot;) 
return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Jab</Name><Default>false</Default><SpellID>100780</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1 and
 UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
  and GCDCheck(116095)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
--and ( goRage == 1 or (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 40)
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; 5 
then 
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tiger Palm</Name><Default>false</Default><SpellID>100787</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
 and GCDCheck(116095)
--and PQR_SpellAvailable(100784)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;gt; 0 
and (HaveBuff(&amp;quot;player&amp;quot;,{118864,139597},1) or not HaveBuff(&amp;quot;player&amp;quot;,125359,4))
then 
--PQR_WriteToChat(&amp;quot;asda&amp;quot;)
--CastSpellByName(GetSpellInfo(100784),&amp;quot;target&amp;quot;)
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fist of Fury</Name><Default>false</Default><SpellID>113656</SpellID><Actions>/startattack</Actions><Lua>if inMelee == 1
and (not PQR_IsMoving(0.0001) or Nova_FistsOfFury == 1 )
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	and (UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;Totem&amp;quot; or UnitHealth(&amp;quot;target&amp;quot;) == 1)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not HaveDebuff(&amp;quot;target&amp;quot;,ccStuns(),2)
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;gt; 1 
--and ( goRage == 1 or (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 20)
then 
--PQR_WriteToChat(&amp;quot;asda&amp;quot;)
--CastSpellByName(GetSpellInfo(100784),&amp;quot;target&amp;quot;)
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tigereye Brew</Name><Default>false</Default><SpellID>116740</SpellID><Actions>/use 13</Actions><Lua>local Tigereye,_,_,TigereyeBrewCount = UnitBuffID(&amp;quot;player&amp;quot;,125195)

if burstTarget == nil then burstTarget=0 end
if Nova_BurstTarget == 1
and UnitExists(&amp;quot;target&amp;quot;)
and burstTarget == 0
then
burstTarget = UnitGUID(&amp;quot;target&amp;quot;)
xrn:message(&amp;quot;\124cFFCC99FFBurst on &amp;quot;..UnitName(&amp;quot;target&amp;quot;))
--SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
end
if Nova_BurstTarget == 0
then
burstTarget = 0
end




 if TigereyeBrewCount &amp;gt;= 10
 and inMelee == 1
 and (burstTarget == UnitGUID(&amp;quot;target&amp;quot;) or burstTarget==0)
 and GCDCheck(107428)
--	and not HaveBuff(&amp;quot;player&amp;quot;,116740,0)
 and goRage == 1
 then
 	CastSpellByName(GetSpellInfo(20572),nil)
xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(116740)..&amp;quot; BURST on &amp;quot;..UnitName(&amp;quot;target&amp;quot;))
 return true
 end</Lua><RecastDelay>15000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chi Wave</Name><Default>false</Default><SpellID>115098</SpellID><Actions>/startattack</Actions><Lua>if --inMelee == 1
PQR_SpellAvailable(115098)
and UnitExists(&amp;quot;target&amp;quot;)
 and GCDCheck(115098)
 and UnitExists(cTar[1])
 and ecTar[1].Range ~= nil
and ecTar[1].Range &amp;lt; 40
and LineOfSight(&amp;quot;target&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,ccCanBreak(),0) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
then 
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Energizing Brew</Name><Default>false</Default><SpellID>115288</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 40
and inMelee == 1
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; 3 
and UnitBuffID(&amp;quot;player&amp;quot;,116740,&amp;quot;EXACT&amp;quot;) then
return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spear Hand Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
	if UnitExists(cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(116705)) == 0
							and inRange(cTar[i],116705)
							then
							CastSpellByName(GetSpellInfo(116705),PQR_CustomTarget)
							PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(116705)) == 0
							and inRange(cTar[i],116705)
							then
							CastSpellByName(GetSpellInfo(116705),PQR_CustomTarget)
							PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Storm Earth and Fire</Name><Default>false</Default><SpellID>137639</SpellID><Actions>/startattack</Actions><Lua>-- sef

local SEF,_,_,SEFCount = UnitBuffID(&amp;quot;player&amp;quot;,137639)

if destroy == nil then
destroy = 0
end


if --inMelee == 1
PQR_SpellAvailable(137639)
and GCDCheck(137639)
and UnitExists(&amp;quot;target&amp;quot;)
and Nova_SEFSolo == 1
-- and GCDCheck(116095)
and inMelee == 0
and SEFCount ~= 2

and UnitExists(cTar[1])
and ecTar[1].Range &amp;lt; 40
and ecTar[1].Range &amp;gt; 16
and LineOfSight(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and (lastsefone ~= UnitGUID(&amp;quot;target&amp;quot;) and lastseftwo ~= UnitGUID(&amp;quot;target&amp;quot;))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
then 
PQR_CustomTarget= &amp;quot;target&amp;quot;
lastsef = UnitGUID(&amp;quot;target&amp;quot;)
if not HaveBuff(&amp;quot;player&amp;quot;,137639) then
lastsefone = lastsef
lastsefonetime = GetTime()
end
if SEFCount == 1 then
lastseftwo = lastsef
lastseftwotime = GetTime()
end
return true end



for i=1, #cTar do
if (UnitGUID(cTar[i]) == sefunit or UnitGUID(cTar[i]) == sefunitz)
and GCDCheck(137639)
and PQR_SpellAvailable(137639)

and SEFCount ~= 2
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
and (lastsefone ~= UnitGUID(cTar[i]) and lastseftwo ~= UnitGUID(cTar[i]))
and not HaveBuff(cTar[i],iDMG(),0) 
and UnitExists(cTar[1])
and ecTar[i].Range &amp;lt; 40
and LineOfSight(cTar[i])
and CalculateHP(&amp;quot;target&amp;quot;) &amp;gt; 50
and UnitGUID(&amp;quot;target&amp;quot;) ~= sefunit 
and UnitGUID(&amp;quot;target&amp;quot;) ~= sefunitz
then
PQR_CustomTarget = cTar[i]
lastsef = UnitGUID(cTar[i])
if not HaveBuff(&amp;quot;player&amp;quot;,137639) then
lastsefone = lastsef
lastsefonetime = GetTime()
end
if SEFCount == 1 then
lastseftwo = lastsef
lastseftwotime = GetTime()
end
return true
end
end

for i=1, #cTar do
if Nova_SEF == 1
and GCDCheck(137639)
and PQR_SpellAvailable(137639)

and SEFCount ~= 2
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
and (lastsefone ~= UnitGUID(cTar[i]) and lastseftwo ~= UnitGUID(cTar[i]))
and not HaveBuff(cTar[i],iDMG(),0) 
and not HaveDebuff(cTar[i],ccCanBreak(),0)
and UnitExists(cTar[1])
and ecTar[i].Range &amp;lt; 40
and LineOfSight(cTar[i])
and CalculateHP(&amp;quot;target&amp;quot;) &amp;gt; 50
then
PQR_CustomTarget = cTar[i]
lastsef = UnitGUID(cTar[i])
if not HaveBuff(&amp;quot;player&amp;quot;,137639) then
lastsefone = lastsef
lastsefonetime = GetTime()
end
if SEFCount == 1 then
lastseftwo = lastsef
lastseftwotime = GetTime()
end
return true
end
end






----- Totems und Psyfiend

if not TrapBox then
	TrapBox = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	TrapBox:Hide()
end

if dontshoot == nil then
dontshoot = 0
end


function TrapBox_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
		--	if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				local spellId = select(12, ...)
				local listId = {
					108921,  -- Psyfiend
     				108280,  -- Healing Tide
    				 98008,  -- Spirit Link
     				120668,
    				 16190,
      					  108269 --Capacitor
    				 
    				 
				}
				for i = 1, #members do
					if UnitExists(members[i])
					and UnitGUID(members[i]) == sourceGUID
					then
					dontshoot = 1
					end
				end
				for i = 1, #listId do
					if listId[i] == spellId then
					if dontshoot == 0
					and GCDCheck(137639)
					then
					destroy = &amp;quot;&amp;quot;..GetSpellInfo(spellId)
					InteractUnit(destroy)
				    end
				      	
					end
			--	end
			end
		end
	end
end
TrapBox:SetScript(&amp;quot;OnEvent&amp;quot;, TrapBox_OnEvent)
TrapBox:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)


InteractUnit(destroy)
	
if UnitName(&amp;quot;target&amp;quot;) == destroy then
destroy = 0
end
		        
dontshoot = 0</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Storm Earth and Fire Stop</Name><Default>false</Default><SpellID>0</SpellID><Actions>/startattack</Actions><Lua>-- sefs

if inMelee == 1
 and GCDCheck(116095)
and  HaveBuff(&amp;quot;player&amp;quot;,137639)
and ((lastsefone == UnitGUID(&amp;quot;target&amp;quot;) or lastseftwo == UnitGUID(&amp;quot;target&amp;quot;)) or (CalculateHP(&amp;quot;target&amp;quot;) &amp;lt; 50 and not select(2,GetTalentRowSelectionInfo(6)) == 16) )
then 
RunMacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(137639))
end

if nextparalysis
then 
RunMacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(137639))
end
---- interrupt drink






for i=1,#cTar do
if UnitExists(cTar[i])
 and GCDCheck(116095)
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and (lastsefone == UnitGUID(cTar[i]) or lastseftwo == UnitGUID(cTar[i]))
	 and ( HaveDebuff(cTar[i],ccCanBreak(),0)
	 or HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	)
then
RunMacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(137639))
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Touch of Death</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
if UnitExists(cTar[i]) 
and GCDCheck(115080)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and PQR_SpellAvailable(115080)
and UnitIsPlayer(cTar[i])
and not HaveBuff(cTar[i],iDMG(),0) 
and (100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])) &amp;lt;= 13
and inRange(cTar[i],115080)
then
PQR_CustomTarget = cTar[i]
CastSpellByName(GetSpellInfo(115080),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chi Wave Heal</Name><Default>false</Default><SpellID>115098</SpellID><Actions></Actions><Lua>if chitime == nil then
	chitime = 0
end





for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt; 85
and PQR_SpellAvailable(115098)
and GCDCheck(115098)
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and LineOfSight(members[i])
and UnitAffectingCombat(members[i])
and not UnitIsUnit(members[i],&amp;quot;player&amp;quot;)
then
if GetTime() - chitime &amp;gt; 1 then
	chitime = GetTime()


PQR_CustomTarget = members[i]
return true
end
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Expel Harm</Name><Default>false</Default><SpellID>115072</SpellID><Actions></Actions><Lua>if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 90
 and GCDCheck(116095)
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Sphere</Name><Default>false</Default><SpellID>115460</SpellID><Actions></Actions><Lua>if IsSpellKnown(115460)
 and GCDCheck(116095)
and healingsphere 
 and not GetCurrentKeyBoardFocus()
  and not IsMouselooking()
then
	CastSpellByName(GetSpellInfo(115460))
		if SpellIsTargeting()
		then 
			CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() 
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Invoke Xuen the White Tiger</Name><Default>false</Default><SpellID>123904</SpellID><Actions>/use 13</Actions><Lua>if inMelee == 1
 and GCDCheck(116095)
 and UnitBuffID(&amp;quot;player&amp;quot;,116740,&amp;quot;EXACT&amp;quot;)
 --and not HaveBuff(&amp;quot;player&amp;quot;,116740,15)
 and goRage == 1
 then
 return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SEF Mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if sefunit == nil  then sefunit = 0 end
if sefunitz == nil  then sefunitz = 0 end
if msgsaid == nil  then msgsaid = 0 end
if lastsef == nil  then lastsef = 0 end
if lastsefone == nil  then lastsefone = 0 end
if lastseftwo == nil  then lastseftwo = 0 end
if lastsefonetime == nil  then lastsefonetime = 0 end
if lastseftwotime == nil  then lastseftwotime = 0 end
if UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and sefunitz ~= UnitGUID(&amp;quot;mouseover&amp;quot;)
and sefunit ~= UnitGUID(&amp;quot;mouseover&amp;quot;)
and setsef
then
if IsHealer(&amp;quot;mouseover&amp;quot;)and UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary SEF on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)

end
if UnitIsPlayer(&amp;quot;mouseover&amp;quot;)and not IsHealer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary SEF on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)

end
if not UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary SEF on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)

end
if sefunit == 0 then
sefunit = UnitGUID(&amp;quot;mouseover&amp;quot;)
end
end

if UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and sefunitz ~= UnitGUID(&amp;quot;mouseover&amp;quot;)
and sefunit ~= UnitGUID(&amp;quot;mouseover&amp;quot;)
and setsef
then
if IsHealer(&amp;quot;mouseover&amp;quot;)and UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary SEF2 on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)

end
if UnitIsPlayer(&amp;quot;mouseover&amp;quot;)and not IsHealer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary SEF2 on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)

end
if not UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary SEF2 on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)

end
if sefunitz == 0 then
sefunitz = UnitGUID(&amp;quot;mouseover&amp;quot;)
end
end

if nextparalysis
and sefunit ~= 0
then
sefunit = 0
sefunitz = 0
msgsaid = 2
PQR_WriteToChat(&amp;quot;Primary SEF target cleared!&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Target</Name><Default>false</Default><SpellID>0</SpellID><Actions>/startattack</Actions><Lua>if ((not UnitExists(&amp;quot;target&amp;quot;)) or ( not UnitIsPlayer(&amp;quot;target&amp;quot;) and (not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) or inMelee == 0))) 
then TargetNearestEnemyPlayer()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Paralysis</Name><Default>false</Default><SpellID>115078</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;focus&amp;quot;)
	 and Nova_CCFocus == 1
	 and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;) 
	 and UnitIsPlayer(&amp;quot;focus&amp;quot;)
	 and IsFacingFocus
	 and GCDCheck(115078)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) 
	 and not UnitIsUnit(&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;)
	 and LineOfSight(&amp;quot;focus&amp;quot;)
	 and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 2
	 and inRange(&amp;quot;focus&amp;quot;,115078)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dPoisonCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dCurseCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dMagicCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dSilence(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dSilenceCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(&amp;quot;focus&amp;quot;,iDMG(),0)
	then
	PQR_CustomTarget = &amp;quot;focus&amp;quot;
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(115078)..&amp;quot; on &amp;quot;..UnitClass(&amp;quot;focus&amp;quot;)..&amp;quot;(&amp;quot;..UnitName(&amp;quot;focus&amp;quot;)..&amp;quot;)&amp;quot;)
	return true
	end


for i=1,#cTar do
	if UnitExists(cTar[i])
	 and Nova_CCHealer == 1
	 and IsHealer(cTar[i]) 
	 and UnitIsPlayer(cTar[i])
	 and not UnitIsDeadOrGhost(cTar[i]) 
		 and GCDCheck(115078)
	 and CokxDRInfo(cTar[i],&amp;quot;poly&amp;quot;) &amp;lt; 2
	 and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and LineOfSight(cTar[i])
	 and ecTar[i].Range &amp;lt; 20
	 and not HaveBuff(cTar[i],{18499,783,768,5487,49039,24858},0)
	 and not HaveDebuff(cTar[i],dPoisonCC(),3)
	 and not HaveDebuff(cTar[i],dCurseCC(),3)
	 and not HaveDebuff(cTar[i],dMagicCC(),3)
	 and not HaveDebuff(cTar[i],dSilence(),3)
	 and not HaveDebuff(cTar[i],dSilenceCC(),3)
	 and not HaveDebuff(cTar[i],dCC(),3)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
	then
			PQR_CustomTarget = cTar[i]
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(115078)..&amp;quot; on &amp;quot;..UnitClass(cTar[i])..&amp;quot;(&amp;quot;..UnitName(cTar[i])..&amp;quot;)&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Paralysis</Name><Default>false</Default><SpellID>115078</SpellID><Actions></Actions><Lua>if sheepon == nil then  sheepon = 0 end
if unitsheeped == nil then  unitsheeped = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and GCDCheck(115078)
	and HaveDebuff(cTar[i],{115078},0,&amp;quot;Player&amp;quot;)
	then
	 sheepon = 1
	unitsheeped = UnitGUID(cTar[i])
	end
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	and GCDCheck(115078)
	and unitsheeped == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{115078},2,&amp;quot;Player&amp;quot;)
	then
	sheepon = 0
	end
end






--- Hex Healer

	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and sheepon == 0
	 and GCDCheck(115078)
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(cTar[j]) 
	  and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not primaryTarget(cTar[j])
	 and not HaveDebuff(cTar[j],dPoisonCC(),0)
	 and LineOfSight(cTar[j])
	 and IsHealer(cTar[j])
	 and ecTar[j].Facing
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 20
     and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 70
	 and not HaveDebuff(cTar[j],dCurseCC(),0)
	 and not HaveDebuff(cTar[j],dMagicCC(),0)
	 and not HaveDebuff(cTar[j],dSilence(),0)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0)
	 and not HaveDebuff(cTar[j],dCC(),0)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone

	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(115078)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
	return true
	end
	end
	
	



	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and GCDCheck(115078)
	 and sheepon == 0
	  and not UnitIsDeadOrGhost(cTar[j]) 
	  and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	  and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 2
	 and not primaryTarget(cTar[j])
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],dPoisonCC(),0)
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 	  and ecTar[j].Facing
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 20
	 and not HaveDebuff(cTar[j],dCurseCC(),0)
	 and not HaveDebuff(cTar[j],dMagicCC(),0)
	 and not HaveDebuff(cTar[j],dSilence(),0)
	 and not HaveDebuff(cTar[j],dSilenceCC(),0)
	 and not HaveDebuff(cTar[j],dCC(),0)
	 and HaveBuff(cTar[j],attentionBuffs(),0)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone

	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(115078)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
	return true
	end
	end
	
	
		for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and GCDCheck(115078)
	 and sheepon == 0
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 2
	 and not primaryTarget(cTar[j])
	 and UnitIsPlayer(cTar[j])
	 and LineOfSight(cTar[j])
	  and ecTar[j].Facing
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 20
     and not HaveDebuff(cTar[j],dPoisonCC(),3)
 	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and ( HaveDebuff(cTar[j],dPoisonCC(),0)
 	 or HaveDebuff(cTar[j],dCurseCC(),0)
	 or HaveDebuff(cTar[j],dMagicCC(),0)
	 or HaveDebuff(cTar[j],dSilenceCC(),0)
	 or HaveDebuff(cTar[j],dCC(),0))

	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone

	 and not HaveBuff(cTar[j],iDMG(),0)
	 and not HaveBuff(cTar[j],iSpell(),0)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(115078)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
	return true
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disable Auto</Name><Default>false</Default><SpellID>116095</SpellID><Actions>/startattack</Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt;= 25
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
 and GCDCheck(116095)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and inMelee == 1
and UnitIsPlayer(&amp;quot;target&amp;quot;) 
and not HaveDebuff(&amp;quot;target&amp;quot;,aSRS(),0.1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSlow(),0)
then 
return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Detox</Name><Default>false</Default><SpellID>115450</SpellID><Actions></Actions><Lua>for i=1,numberfriends do 
    if LineOfSight(members[i])
    and GCDCheck(115450)
    and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and HaveDebuff(members[i],{2823,19386,43234,113952,2944,55095,55078},0)
     then
      PQR_CustomTarget = members[i]
            	 		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(115450)..&amp;quot; on &amp;quot;..UnitName(PQR_CustomTarget))
       return true 
       end
    end</Lua><RecastDelay>8000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if monkpause
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
or UnitBuffID(&amp;quot;player&amp;quot;,115176)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
then return true end


if  GetTime() - getInfos &amp;lt; 0.2 and  GetTime() - getInfos &amp;gt; 0.1 and (GCDCheck(100787) or GCDCheck(115460))then
return true
end
if  GetTime() - getInfos &amp;lt; 0.6 and  GetTime() - getInfos &amp;gt; 0.5 and (GCDCheck(100787) or GCDCheck(115460))then
return true
end
if  GetTime() - getInfos &amp;lt; 0.4 and  GetTime() - getInfos &amp;gt; 0.3 and (GCDCheck(100787) or GCDCheck(115460))then
return true
end
if  GetTime() - getInfos &amp;lt; 0.8 and  GetTime() - getInfos &amp;gt; 0.7 and (GCDCheck(100787) or GCDCheck(115460)) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heal: Soothing Mist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local memberid = 1
local smactive = false
for i = 1, #members do
if UnitBuffID(members[i],115175,&amp;quot;PLAYER&amp;quot;)
and UnitBuffID(members[i],115175,&amp;quot;EXACT&amp;quot;)
then 
smactive = true
memberid = i
end
end

if smactive == true then
for i = 1 , #members do
if CalculateHP(members[i]) &amp;lt; CalculateHP(members[memberid])-10 then
RunMacroText(&amp;quot;/Stopcasting&amp;quot;)
end
end
end

--- Enveloping Mist ---

if smactive 
and CalculateHP(members[memberid]) &amp;lt;= 95
--and GCDCheck(124682)
and LineOfSight(members[memberid])
and (UnitInRange(members[memberid]) or eMembers[memberid].Range &amp;lt; 40)
and not HaveBuff(members[memberid],124682,1,&amp;quot;PLAYER&amp;quot;) 
and UnitPower(&amp;quot;player&amp;quot;,12)&amp;gt;=3  then
 CastSpellByName(GetSpellInfo(124682),members[memberid])
 return true
end




------- Surging Mist -----
if smactive
and CalculateHP(members[memberid]) &amp;lt;= 70
and GCDCheck(116694)
and LineOfSight(members[memberid])
and (UnitInRange(members[memberid]) or eMembers[memberid].Range &amp;lt; 40 )then
CastSpellByName(GetSpellInfo(116694),members[memberid])
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Uplift</Name><Default>false</Default><SpellID>116670</SpellID><Actions></Actions><Lua>for i = 1, #members do
if 
GCDCheck(116670)
and CalculateHP(members[i]) &amp;lt;= 95
and PQR_IsMoving(1)
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and LineOfSight(members[i])

and HaveBuff(members[i],115151,0) 
then
PQR_CustomTarget = members[i]
 -- CastSpellByName(GetSpellInfo(115151),members[i])
 
  return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Zen Statue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(115313)
 and setsef
 and GCDCheck(115313)
  and not GetCurrentKeyBoardFocus()
  and not IsMouselooking() then 
	CastSpellByName(GetSpellInfo(115313))
	if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() end  
	return true 
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renewing Mist</Name><Default>false</Default><SpellID>115151</SpellID><Actions></Actions><Lua>for i = 1, #members do
if CalculateHP(members[i]) &amp;lt;= 95
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and LineOfSight(members[i])
and GCDCheck(115151)
and not HaveBuff(members[i],115151,1,&amp;quot;PLAYER&amp;quot;) 
then
PQR_CustomTarget = members[i]
 -- CastSpellByName(GetSpellInfo(115151),members[i])
 
  return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispel</Name><Default>false</Default><SpellID>115450</SpellID><Actions></Actions><Lua>for i=1,numberfriends do 
    if  LineOfSight(members[i])
    and GCDCheck(115450)
   and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
    and IsHealer(members[i])
    and (not HaveDebuff(members[i],{34914,30108,131736},0) or CalculateHP(&amp;quot;player&amp;quot;) &amp;gt; 90)
  	and (HaveDebuff(members[i],dMagicCC(),3)
     or HaveDebuff(members[i],dCurseCC(),3)
     or HaveDebuff(members[i],dSilence(),3))

    then
      PQR_CustomTarget = members[i]
       return true end
    end
    
    for i=1,numberfriends do 
    if LineOfSight(members[i])
    and GCDCheck(115450)
    and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
   and (not HaveDebuff(members[i],{34914,30108,131736},0) or CalculateHP(&amp;quot;player&amp;quot;) &amp;gt; 90)
   and (HaveDebuff(members[i],dMagicCC(),3)
    or HaveDebuff(members[i],dCurseCC(),3)
     )
    then
      PQR_CustomTarget = members[i]
       return true end
    end
    
   for i=1,numberfriends do 
    if LineOfSight(members[i])
    and GCDCheck(115450)
    and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
   and (not HaveDebuff(members[i],{34914,30108,131736},0) or CalculateHP(&amp;quot;player&amp;quot;) &amp;gt; 90)
   and  UnitPowerMax(members[i]) &amp;lt; 100000
   and UnitExists(members[i]..&amp;quot;target&amp;quot;)
   and CalculateHP(members[i]..&amp;quot;target&amp;quot;) &amp;lt; 50
  and HaveDebuff(members[i],dRoot(),1)  then
      PQR_CustomTarget = members[i]
       return true end
    end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Buffs Mistweaver</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,{115921,20217,1126,90363,117666},0)
 --and GCDCheck(115921)
then CastSpellByName(GetSpellInfo(115921)) 
return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JukeBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
			and not HaveBuff(&amp;quot;player&amp;quot;,116680,0) then
				local spellId = select(12, ...)
			local listId = {
				
					47476, --Strangulate
					15487, -- Shadow Silence
				34490,	-- Silencing Shot
				17962,
					2139, --Counterspell
					19647 --Spell Lock
					
				}
					for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						SpellStopCasting()
						SpellStopCasting()
						for i = 1, #members do
						if CalculateHP(members[i]) &amp;lt; 70 
						and eMembers[i].Range &amp;lt; 40 then
						CastSpellByName(GetSpellInfo(116680)) 
						end
						end
						PQR_WriteToChat(&amp;quot;JukeBox Fake&amp;quot;)
							return true
					end
				end
							local listId = {
					6552, --Pummel
					1766, --Kick
					47528, --Mind Freeze
					47476, --Strangulate
					96231, --Rebuke
					15487, -- Shadow SIlence
					116705, -- Spear Hand
					57994, --Wind Shear
					2139, --Counterspell
					19647, --Spell Lock
					80965 --Skull Bash
				}
					for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						SpellStopCasting()
						SpellStopCasting()
						PQR_WriteToChat(&amp;quot;JukeBox Fake&amp;quot;)
						PQR_DelayRotation(.5)
						return true
					end
				end
					
			end
		end
	end
end

JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ManaTea</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if
 PQR_SpellAvailable(123761)
  and GCDCheck(123761)
  and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 92
 then
 CastSpellByName(GetSpellInfo(123761),&amp;quot;player&amp;quot;)
 return true
 end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soothing Mist</Name><Default>false</Default><SpellID>115175</SpellID><Actions></Actions><Lua>for i = 1, #members do
if not PQR_IsMoving(1) 
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and LineOfSight(members[i])
and not UnitChannelInfo(&amp;quot;Player&amp;quot;)
and CalculateHP(members[i]) &amp;lt;= 95
then
PQR_CustomTarget = members[i]
    --CastSpellByName(GetSpellInfo(115175),PQR_CustomTarget)
    return true
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disable Heal</Name><Default>false</Default><SpellID>116095</SpellID><Actions>/startattack</Actions><Lua>for i= 1, #cTar do

if 100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i]) &amp;gt;= 25
and not HaveBuff(cTar[i],iDMG(),0) 
 and GCDCheck(116095)
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
and ecTar[i].Range &amp;lt; 8
and UnitIsPlayer(cTar[i]) 
and not HaveDebuff(cTar[i],aSRS(),1)
and not HaveBuff(cTar[i],iSlow(),0)
then 
return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Life Cocoon</Name><Default>false</Default><SpellID>116849</SpellID><Actions></Actions><Lua>for i = 1, #members do
if CalculateHP(members[i]) &amp;lt;= 20
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and LineOfSight(members[i])
and UnitAffectingCombat(members[i]) 
and GCDCheck(116849)
and UnitIsPlayer(members[i])
and not HaveBuff(members[i],defBuff(),0)
then
PQR_CustomTarget = members[i]
 -- CastSpellByName(GetSpellInfo(115151),members[i])
 
  return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Revival</Name><Default>false</Default><SpellID>115310</SpellID><Actions></Actions><Lua>if getrevival == nil then
getrevival = 0
end
if UACount == nil then
UACount = 0
end
if LowCount == nil then
LowCount = 0
end
if  GetTime() - getrevival &amp;gt; 1
then
getrevival = GetTime()

UACount = 0
for i=1,#members do
if HaveDebuff(members[i],30108,0)
and GCDCheck(115310)
and eMembers[i].Range &amp;lt; 100
then
UACount = UACount+1
end
end

LowCount = 0
for i=1,#members do
if CalculateHP(members[i]) &amp;lt; 50
and GCDCheck(115310)
and eMembers[i].Range &amp;lt; 100
then
LowCount = LowCount+1
end
end
end

for i = 1,#members do
if LowCount &amp;gt;= 3
and UACount &amp;lt;= 1
then
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Surging Mist Instant</Name><Default>false</Default><SpellID>116694</SpellID><Actions>/startattack</Actions><Lua>local IH,_,_,IHCount = UnitBuffID(&amp;quot;player&amp;quot;,118674)

for i = 1 , #members do
if UnitExists(members[i])
and IHCount == 5
and CalculateHP(members[i]) &amp;lt;= 80
and GCDCheck(116694)
and LineOfSight(members[i])
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40 )then
PQR_CustomTarget = members[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Storm Earth and Fire 2</Name><Default>false</Default><SpellID>0</SpellID><Actions>/startattack</Actions><Lua>local SEF,_,_,SEFCount = UnitBuffID(&amp;quot;player&amp;quot;,137639)
if sefInfos == nil then
sefInfos = 0
end
GroupInfo() 
if  GetTime() - sefInfos &amp;gt; 1
then
sefInfos = GetTime()

if SEF and SEFCount == 1 then
lastseftwo = 0
lastseftwotime = 0
end
if not HaveBuff(&amp;quot;player&amp;quot;,137639) then
lastsefone = 0
lastseftwo = 0
lastsefonetime = 0
lastseftwotime = 0
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rushing Jade Wind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(2,GetTalentRowSelectionInfo(6)) == 16
and GCDCheck(116847)
and not HaveBuff(&amp;quot;player&amp;quot;,116847,0)
and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 40
and UnitBuffID(&amp;quot;player&amp;quot;,116740,&amp;quot;EXACT&amp;quot;)
and not ccUnits(15)
and UnitExists(cTar[1])
and ecTar[1].Range &amp;lt; 40
then
CastSpellByName(GetSpellInfo(116847))
return true
end


if select(2,GetTalentRowSelectionInfo(6)) == 16
and ccUnits(15)
then
RunMacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(116847))
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Karma</Name><Default>false</Default><SpellID>122470</SpellID><Actions></Actions><Lua>for i=1,#cTar do
if Nova_Karma == 1
and UnitExists(cTar[i])
and not HaveBuff(cTar[i],iDMG(),0)
and not HaveBuff(cTar[i],iSpell(),0)
and not HaveBuff(cTar[i],1022,0)
and (UnitIsPlayer(cTar[i]) or UnitHealth(cTar[i]) &amp;gt; 100000)
then
PQR_CustomTarget = cTar[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LRO</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_LegRingOx == 1
and select(2,GetTalentRowSelectionInfo(4)) == 12
and GCDCheck(119381)
then
CastSpellByName(GetSpellInfo(119381)) 
return true
end


if Nova_LegRingOx == 1
and select(2,GetTalentRowSelectionInfo(4)) == 11
and GCDCheck(119392)
then
CastSpellByName(GetSpellInfo(119392)) 
return true
end



for i = 1, #members do
if Nova_LegRingOx == 1
and select(2,GetTalentRowSelectionInfo(4)) == 10
and GCDCheck(116844)
and not LineOfSight(members[i])
and primaryFriendly(members[i]) and CalculateHP(members[i]) &amp;lt; 80 
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
then
PQR_CustomTarget=members[i]
CastSpellByName(GetSpellInfo(116844),PQR_CustomTarget) 
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Success</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
             then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
       
	       	   if select(12, ...) == 119392
	       	   or select(12, ...) == 119381
	       	    or select(12, ...) == 116844
	       then	
	       			SetCVar(&amp;quot;Nova_LegRingOx&amp;quot;, 0)
	       			end
	     
	      if select(12, ...) == 122470
	       	
	       then	
	       			SetCVar(&amp;quot;Nova_Karma&amp;quot;, 0)
	       			end
	       			if select(12, ...) == 113656
	       	
	       then	
	       			SetCVar(&amp;quot;Nova_FistsOfFury&amp;quot;, 0)
	       			end
	       				if select(12, ...) == 116740
	       	
	       then	
	       			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
	       			end
	       						if select(12, ...) == 115078
	       	
	       then	
	       		RunMacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(116847))
	       			end
	        end
    end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Transcendence</Name><Default>false</Default><SpellID>119996</SpellID><Actions></Actions><Lua>if --inMelee == 1
PQR_SpellAvailable(119996)
and UnitExists(&amp;quot;target&amp;quot;)
-- and GCDCheck(116095)
and SEFCount ~= 0
and not PQR_IsMoving(0.1)
and ((lastsefone == UnitGUID(&amp;quot;target&amp;quot;) and GetTime()-lastsefonetime &amp;gt; 3) or (lastseftwo == UnitGUID(&amp;quot;target&amp;quot;) and GetTime()-lastseftwotime &amp;gt; 3) )
and GCDCheck(119996)
and UnitExists(cTar[1])
and ecTar[1].Range &amp;lt; 40
and ecTar[1].Range &amp;gt; 16
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
then 
return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Zen Sphere</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt;= 85
and IsSpellKnown(124081)
and GCDCheck(124098)
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
and LineOfSight(members[i])
and not HaveBuff(members[i],124081,0)
--and UnitAffectingCombat(members[i])
then
PQR_CustomTarget = members[i]
CastSpellByName(GetSpellInfo(124098),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chi Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt;= 70
and IsSpellKnown(123986)
and GCDCheck(123986)
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 30)
and LineOfSight(members[i])
and not UnitIsUnit(members[i],&amp;quot;player&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,members[i],70)
--and UnitAffectingCombat(members[i])
then
PQR_CustomTarget = members[i]
CastSpellByName(GetSpellInfo(123986),PQR_CustomTarget)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>eventRA</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not CokxLog then
    Cokx_CokxLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    Cokx_CokxLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
                if sourceGUID == UnitGUID(&amp;quot;target&amp;quot;) then
       			targetPhysRA = EphysRA()
       			for i=1,#targetPhysRA do
       				if select(12, ...) == targetPhysRA[i] then
       					if IsSpellKnown(116095) 
       					and GCDCheck(116095)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 8 then
						CastSpellByName(GetSpellInfo(116095),&amp;quot;target&amp;quot;)
						return true
						end
						if IsSpellKnown(115078) 
       					and GCDCheck(115078)
       					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 20 then
						CastSpellByName(GetSpellInfo(115078),&amp;quot;target&amp;quot;)
						return true
						end
       				end
       			end
       			end
	     		
	 
	     		
	     		for i = 1, #cTar do
                if sourceGUID == UnitGUID(cTar[i])
                then
       				if select(12, ...) == 19503	then
       					if IsSpellKnown(115078)
       					and GCDCheck(115078)
       					and ecTar[i].Range &amp;lt; 25 
       					then
						CastSpellByName(GetSpellInfo(115078),cTar[i])
						return true
						end
							if IsSpellKnown(117368)
       					and GCDCheck(117368)
       					and ecTar[i].Range &amp;lt; 40 
       					then
						CastSpellByName(GetSpellInfo(117368),cTar[i])
						return true
						end
					
       				end
	     		end
	     		end
	     		
	     		for i = 1, #cTar do
	     		 			mySpellRA = spellRA()
                if sourceGUID == UnitGUID(cTar[i])
                and ecTar[i].Range &amp;lt; 25 then
                	for j=1,#mySpellRA do
       				if select(12, ...) == mySpellRA[j]	then
       					if IsSpellKnown(115078)
       					and GCDCheck(115078)
       					then
						CastSpellByName(GetSpellInfo(115078),cTar[i])
						return true
						end
					end
       				end
	     		end
	     		end
	     		
	     		for i = 1, #cTar do
	     		 			myESpellRA = EspellRA()
                if sourceGUID == UnitGUID(cTar[i])
                and ecTar[i].Range &amp;lt; 25 then
                	for j=1,#myESpellRA do
       				if select(12, ...) == myESpellRA[j]	then
       					if IsSpellKnown(115078)
       					and GCDCheck(115078)
       					then
						CastSpellByName(GetSpellInfo(115078),cTar[i])
						return true
						end
					end
       				end
	     		end
	     		end
	     		     	
	     		     		

	     		
	     	
	     	   		
		    end
  end
 end

 Cokx_CokxLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CokxLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not myFocusID then myFocusID = 0 end

if not UnitExists(&amp;quot;focus&amp;quot;)
or UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then
for i = 1, #cTar do
if UnitExists(cTar[i]) and IsHealer(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID = 0
break
end
end

for i = 1, #cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not eHealer()
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID=UnitGUID(cTar[i])
break
end
end
end
if UnitExists(&amp;quot;focus&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) and UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then ClearFocus() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chi Brew</Name><Default>false</Default><SpellID>115399</SpellID><Actions></Actions><Lua>if select(2,GetTalentRowSelectionInfo(3)) == 9
and GCDCheck(115399)
and inMelee==1
and UnitPower(&amp;quot;player&amp;quot;,12) &amp;lt; 3 
and UnitBuffID(&amp;quot;player&amp;quot;,116740,&amp;quot;EXACT&amp;quot;)
and UnitExists(cTar[1])
then
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>