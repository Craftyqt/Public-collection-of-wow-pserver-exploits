<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>[ MISC ] Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp
Update_Nova()
local Nova_Mod = Nova_Mod
local HOTKEY = PHotkey
local HOTKEY2 = PHotkey2


--Code by Crystal_tech
if Nova_Mod() == PHotkey
or Nova_Mod() == PHotkey2
or IsMounted()
or not PlayerCombat
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
 then
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0 - Auto Cast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not spellSucced then
	spellSucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
	spellSucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
	spellSucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==CheckSpell then SpellSucess=true end end)
end

if SpellSucess == true then
	PQR_SendText(&amp;quot;Casted&amp;quot;,CheckSpell)
	CheckSpell = 0
	SaveChi = nil
	CanSaveChi = nil
	SpellSucess = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Auto Buff</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 115921
local SPELL2 = 116781
local PQ_AuraInfo = PQ_AuraInfo

if not PlayerCombat
and not IsMounted()
then
	--LEGACY
	
if PQR_SpellAvailable(SPELL)
and not GetRaidBuffTrayAuraInfo(1) then
	CastSpellByID(SPELL,&amp;quot;player&amp;quot;)
	return true
end

--TIGER
if PQR_SpellAvailable(SPELL2)
and not GetRaidBuffTrayAuraInfo(7) then
	CastSpellByID(SPELL2,&amp;quot;player&amp;quot;)
	return true
end
end</Lua><RecastDelay>250</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Spell List</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>BlackoutKick = 100784
CracklingJadeLightning = 117952
ChiBrew = 115399
Detox = 115450
Disable = 116095
DizzyingHaze = 118022
EnergyUsage = 119650
ExpelHarm = 115072
FortifyingBrew = 115203
GrappleWeapon = 117368
HealingSphere = 115460
InvokeXuen = 123904
Jab = 100780
LeeroftheOx = 115543
LegacyoftheEmperor = 115921
Paralysis = 115078
Provoke = 115546
Roll = 109132
RushingJadeWind = 116847
SpearHandStrike = 116705
SpinningCraneKick = 101546
StanceoftheFierceTiger = 103985
Stoneskin = 125170
SurgingMist = 123273
TigerPalm = 100787
TouchofDeath = 115080
Transcendence = 101643
TranscendenceTransfer = 119996
ZenMeditation = 115176
ZenMeditationBuff = 131532
ZenPilgrimage = 126892
AvertHarm = 115213

-- MIST WEAVER
EnvelopingMist = 124682
LifeCocoon = 116849
ManaTea = 115294
RenewingMist = 115151
Revival = 115310
SoothingMist = 115175
StanceoftheWiseSerpent = 115070
SummonJadeSerpentStatue = 115313
SurgingMist = 116694

--WIND WALKER
ThunderFocusTea = 116680
Uplift = 116670
ComboBreakerBK = 116768
ComboBreakerTP = 118864
EnergizingBrew = 115288
FistsofFury = 113656
FlyingSerpentKick = 101545
LegacyoftheWhiteTiger = 116781
NimbleBrew = 137562
RisingSunKick = 107428
SpinningFireBlossom = 115073
TigereyeBrew = 116740
TouchofKarma = 122470

--BREWMASTER
BreathofFire = 115181
Clash = 122057
DizzyingHaze = 115180
ElusiveBrew = 115308
KegSmash = 121253
NimbleBrew = 137562
PurifyingBrew = 119582
StanceoftheSturdyOx = 115069
SummonBlackOxStatue = 115315

--TALENT
ChiWave = 115098

--
function CheckEnergy()
	EnergyMax = UnitPowerMax(&amp;quot;player&amp;quot;)
	EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
	TimeToMax = (EnergyMax - PlayerEnergy) * (1.0 / EnergyRegen)
end


-----------------
-- PROCS/BUFFS --
-----------------
TP,_,_,_,_,_,TPtimer = UnitBuffID(&amp;quot;player&amp;quot;, 125359)
if not TP
then
	TPtimer = 0
else
	TPtimer = TPtimer - GetTime()
end

ComboBlackout = UnitBuffID(&amp;quot;player&amp;quot;, 116768)
ComboTigerPalm = UnitBuffID(&amp;quot;player&amp;quot;, 118864)
EnergyBrewBuff = UnitBuffID(&amp;quot;player&amp;quot;,115288)

FoFCast = (4 / (1 + UnitSpellHaste(&amp;quot;Player&amp;quot;) / 100))

if UnitBuffID(&amp;quot;player&amp;quot;, 129914)
then
	PowerStrike = true
else
	PowerStrike = false
end

-------------
-- DEBUFFS --
-------------
RSK,_,_,_,_,_,RSKtimer = UnitDebuffID(&amp;quot;target&amp;quot;,130320,&amp;quot;player&amp;quot;)
if not RSK
then
	RSKtimer = 0
else
	RSKtimer = RSKtimer - GetTime()
end

TigereyeBrewBuffUsed = UnitBuffID(&amp;quot;player&amp;quot;,116740)
TigereyeBrewBuff,_,_,TigereyeBrewCount = UnitBuffID(&amp;quot;player&amp;quot;,125195)
if not TigereyeBrewBuff
then
	TigereyeBrewCount = 0
end</Lua><RecastDelay>250</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nova_Frame: Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SkillEnabled = HSenabled
local SkillPercent = HShealth

if SkillEnabled ~= 1 then return false end

if GetItemCount(5512,false,true) &amp;gt; 0
	and PlayerHP &amp;lt;= SkillPercent
	and PQR_SpellAvailable(5512)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetItemCooldown(5512) == 0
then
	PQR_DebugP(&amp;quot;Healing with Healthstone (Current HP: &amp;quot; .. PlayerHP)
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nova_Frame: Expel Harm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if EHenabled ~= 1 then return false end

if PQR_SpellAvailable(ExpelHarm)
and PlayerHP &amp;lt;= EHhealth
then
	PQR_DebugP(&amp;quot;Healing with Expel Harm (Current HP: &amp;quot; .. PlayerHP)
	CastSpell(ExpelHarm)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] PQR_Text</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp

function PQR_SendText(CHOICE,SPELL)
	if CHOICE == &amp;quot;Standby&amp;quot;
	then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Standby: &amp;quot; .. ActualRotation, nil, &amp;quot;ffffff&amp;quot;)
	end
	
	if CHOICE ~= &amp;quot;Standby&amp;quot;
	and SPELL ~= 0
	then
		local nskill = GetSpellInfo(SPELL)		
		
		if CHOICE == &amp;quot;Queue&amp;quot;
		then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Queue Skill: &amp;quot; .. nskill, nil, &amp;quot;14DCB4&amp;quot;)
		end
		
		if CHOICE == &amp;quot;Casted&amp;quot;
		then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Casted: &amp;quot; .. nskill, nil, &amp;quot;ffffff&amp;quot;)
		end
	end
end</Lua><RecastDelay>250</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Functions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp

-------------
-- RACIAL --
------------
--function RacialDetection()
--	Racial = 0
--	local _,Race = UnitRace(&amp;quot;player&amp;quot;)
--	if Race == &amp;quot;Orc&amp;quot;
--	then
--		local Orc_Racial = {
--		20572,
--		33697,
--		33702,
--		82836
--		}
--	
--		for i=1, #Orc_Racial do
--			if IsSpellKnown(Orc_Racial[i]) then
--				Racial = Orc_Racial[i]
--			end
--		end
--	end
--end

--if Race == &amp;quot;Troll&amp;quot;
--then
	Racial = 26297
--end

------------------
-- INIT MESSAGE --
------------------
function initMessage()
	PQR_WriteToChat(&amp;quot;|cff91e782Rubim&amp;apos;s MK WW |cff82cee7Loaded!|cffffffff&amp;quot;)
	LastSpell = 6603
end

------------------
--Level 90 Check--
------------------
if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
	PQR_WriteToChat(&amp;quot;Nope, you need to be lvl 90.&amp;quot;)
	PQR_StopRotation()
end

-----------------
-- Meele Range --
-----------------
function MeeleRange()
	if IsSpellInRange(GetSpellInfo(Jab), &amp;quot;target&amp;quot;) == 1
	then return true else return false
	end
end

----------------
-- CAST SPELL --
----------------
function CastSpell(spell)
	CastSpellByName(GetSpellInfo(spell),nil)
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PQR_Rubim_Debug ~= 0 then
	if not castspellsucced then
		castspellsucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
		castspellsucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
		castspellsucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)~= 0 then DebugSpell = 1 LastSpell = GetSpellInfo(select(7,...)) end end)
	end
	
	if DebugSpell ~= 0
	then
		PQR_WriteToChat(&amp;quot;Casted: |cffffcc00&amp;quot; .. LastSpell)
		DebugSpell = 0
	end
end

--------------
-- CD Check --
--------------
function CdCheck(spellid)
	Sstart, Sduration, Senabled = GetSpellCooldown(spellid)
	Scooldown = (Sstart + Sduration - GetTime())
	if Sstart == 0
	then
		Scooldown = 0
	end
	return Scooldown
end


------------------
-- SPELL SUCESS --
------------------
if not spellSucced then
		spellSucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
		spellSucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
		spellSucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==CheckSpell then SpellSucess=true end end)
end

-------------
-- PRE POT --
-------------
function PrePot()
	if UnitBuffID(&amp;quot;player&amp;quot;,105706)
	then return true else return false end
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

--Player Info
PlayerChi			= select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;))
PlayerEnergy		= select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;))
PlayerHP			= Nova_UnitInfo(&amp;quot;player&amp;quot;)
PlayerCombat		= UnitAffectingCombat(&amp;quot;player&amp;quot;)
	
--PQR Functions
isMoving			= PQR_IsMoving()

--Key Mods
lShift				= Nova_Pause(1)
lCtrl				= Nova_Pause(2)
lAlt				= Nova_Pause(3)
rShift				= Nova_Pause(4)
rCtrl				= Nova_Pause(5)
rAlt				= Nova_Pause(6)

--Target Info
TargetHP				= select(1, Nova_UnitInfo(&amp;quot;target&amp;quot;))
EnemyLevel			= UnitLevel(&amp;quot;target&amp;quot;)
		
		
		
-- Ascension check
if IsSpellKnown(115396) then
	PlayerMaxChi = 5
	Ascension = 1
else
	PlayerMaxChi = 4
	Ascension = nil
end
	
-----------------
-- Time to die --
-----------------
TimeToDie = 999999
if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PlayerCombat then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end             
_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
_currentTime = GetTime()
timeDiff = _currentTime - _firstTime
hpDiff = _firstLife - _currentLife
	if hpDiff &amp;gt; 0 then
		fullTime = timeDiff*_firstLifeMax/hpDiff
		pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
		calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
		if calcTime &amp;lt; 1 then
			calcTime = 1
		end
   	TimeToDie = calcTime
	end
	if hpDiff &amp;lt;= 0 then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end

-- dummy
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
		TimeToDie = 99
	end
end

--------------
-- AOE SWAP --
--------------
if Timer == nil then
	Timer = 0
end

local Nova_Mod = Nova_Mod
local AoEHOTKEY = AoEHotkey
if Nova_Mod() == AoEHotkey
and GetTime() - Timer &amp;gt; 0.5
then
	Timer = GetTime()
	if AoERotation == false
	then
		AoERotation = true
		print(&amp;quot;|CFF1CB619Rotation|R: |CFFFE8A0EArea of Effect|R&amp;quot;)
		ActualRotation = &amp;quot;Area of Effect&amp;quot;
		PQR_SendText(&amp;quot;Standby&amp;quot;)
		PlaySound(&amp;quot;SPELLBOOKCHANGEPAGE &amp;quot;, &amp;quot;master&amp;quot;)
	elseif AoERotation == true
	then
		AoERotation = false
		print(&amp;quot;|CFF1CB619Rotation|R: |CFFFE8A0ESingle Target|R&amp;quot;)
		ActualRotation = &amp;quot;Single Target&amp;quot;
		PQR_SendText(&amp;quot;Standby&amp;quot;)
		PlaySound(&amp;quot;SPELLBOOKCHANGEPAGE &amp;quot;, &amp;quot;master&amp;quot;)
	end
end


-- At this point, everything should have loaded perfectly!
if PQ_MKWW == nil then
	PQ_MKWW = true
	CheckSpell = 0
	SpellSucess = false
	AoERotation = false
	ActualRotation = &amp;quot;Single Target&amp;quot;
	PQR_SendText(&amp;quot;Standby&amp;quot;)
	initMessage()
--	RacialDetection()
end</Lua><RecastDelay>250</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Nova_Frame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp

---------------
-- DEFAULTS --
--------------

PQR_Rubim_Debug = 0


---------------
-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks
-------------------------------------------------------------------------------
-- Load LUA data files.
if PQR_RotationStarted == true then
	PQR_RotationStarted = false
	
	-- Tables
	Nova_ValueCheck = {
		[1] =	{ Var1 = nil,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = nil, },
		[2] =	{ Var1 = nil,	Text = &amp;quot;Fists of Fury Auto&amp;quot;,	Var2 = 1 },
		[3] =	{ Var1 = 35,	Text = &amp;quot;Healthstone&amp;quot;,			Var2 = 1 },
		[4] =	{ Var1 = 80,	Text = &amp;quot;Chi Wave&amp;quot;,				Var2 = 0 },
		[5] =	{ Var1 = 90,	Text = &amp;quot;Expel Harm&amp;quot;,			Var2 = 0 },
		[6] =	{ Var1 = nil,	Text = &amp;quot;Chi Wave Rotation&amp;quot;,		Var2 = 1 },
		[7] =	{ Var1 = nil,	Text = &amp;quot;Flying Serpent Kick&amp;quot;,	Var2 = 0 },
		[8] =	{ Var1 = nil,	Text = &amp;quot;Usable&amp;quot;,				Var2 = nil },
		[9] =	{ Var1 = nil,	Text = &amp;quot;Trinket 01&amp;quot;,			Var2 = 0 },
		[10] =	{ Var1 = nil,	Text = &amp;quot;Trinket 02&amp;quot;,			Var2 = 0 },
		[11] =	{ Var1 = nil,	Text = &amp;quot;Gloves&amp;quot;,				Var2 = 1 },
		[12] =	{ Var1 = nil,	Text = &amp;quot;Auto Racial Use&amp;quot;,		Var2 = 0 },
		[13] =	{ Var1 = nil,	Text = &amp;quot;CD: Boss Only&amp;quot;,			Var2 = 1 },		
		[14] =	{ Var1 = nil,	Text = &amp;quot;Extra&amp;quot;,					Var2 = nil },
		[15] =	{ Var1 = nil,	Text = &amp;quot;Boss Mechanic&amp;quot;,			Var2 = 0 }
		
	}
	Nova_CooldownCheck = {
		[1]	=	{ Mod = 16,		Text = &amp;quot;Fists of Fury&amp;quot;,			Var1 = 1},
		[2]	=	{ Mod = 4,		Text = &amp;quot;Touch of Karma&amp;quot;,		Var1 = 1},
		[3]	=	{ Mod = 3,		Text = &amp;quot;Touch of Death&amp;quot;,		Var1 = 1},
		[4]	=	{ Mod = 8,		Text = &amp;quot;AoE Rotation&amp;quot;,			Var1 = 1},
		[5]	=	{ Mod =	2,		Text = &amp;quot;Pause 1&amp;quot;,				Var1 = 1},
		[6]	=	{ Mod =	1,		Text = &amp;quot;Pause 2&amp;quot;,				Var1 = 1}
	}
	
	-- CVar Registration
	for i=1,#Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1)
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;, Nova_ValueCheck[i].Var2)
		end
	end
	for i=1,#Nova_CooldownCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;), Nova_CooldownCheck[i].Mod)
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
		end
	end

function Update_Nova()
	-- CVar Translations
	-- Cooldowns
	
	FoFAenabled 	= GetCVarBool(&amp;quot;Nova_Fists_of_Fury_Auto_Enabled&amp;quot;)
		
	HSenabled 		= GetCVarBool(&amp;quot;Nova_Healthstone_Enabled&amp;quot;)
	HShealth 		= tonumber(GetCVar(&amp;quot;Nova_Healthstone&amp;quot;))
	
	CWRenabled 		= GetCVarBool(&amp;quot;Nova_Chi_Wave_Rotation_Enabled&amp;quot;)
	
	CWenabled 		= GetCVarBool(&amp;quot;Nova_Chi_Wave_Enabled&amp;quot;)
	CWhealth 		= tonumber(GetCVar(&amp;quot;Nova_Chi_Wave&amp;quot;))
	
	EHenabled 		= GetCVarBool(&amp;quot;Nova_Expel_Harm_Enabled&amp;quot;)
	EHhealth 		= tonumber(GetCVar(&amp;quot;Nova_Expel_Harm&amp;quot;))
	
	FKSenabled		= GetCVarBool(&amp;quot;Nova_Flying_Serpent_Kick_Enabled&amp;quot;)
		
	T01enabled		= GetCVarBool(&amp;quot;Nova_Trinket_01_Enabled&amp;quot;)
	T02enabled		= GetCVarBool(&amp;quot;Nova_Trinket_02_Enabled&amp;quot;)
	GLOenabled		= GetCVarBool(&amp;quot;Nova_Gloves_Enabled&amp;quot;)		
	RAenabled	 	= GetCVarBool(&amp;quot;Nova_Auto_Racial_Use_Enabled&amp;quot;)
	CDenabled		= GetCVarBool(&amp;quot;Nova_CD:_Boss_Only_Enabled&amp;quot;)
	BMenabled		= GetCVarBool(&amp;quot;Nova_Boss_Mechanic_Enabled&amp;quot;)
		
	FoFenabled		= GetCVarBool(&amp;quot;Nova_Fists_of_Fury_Enabled&amp;quot;)
	FoFHotkey		= tonumber(GetCVar(&amp;quot;Nova_Fists_of_Fury&amp;quot;))
	
	TKenabled		= GetCVarBool(&amp;quot;Nova_Touch_of_Karma_Enabled&amp;quot;)
	TKHotkey		= tonumber(GetCVar(&amp;quot;Nova_Touch_of_Karma&amp;quot;))
	
	TDenabled		= GetCVarBool(&amp;quot;Nova_Touch_of_Death_Enabled&amp;quot;)
	TDHotkey		= tonumber(GetCVar(&amp;quot;Nova_Touch_of_Death&amp;quot;))
			
	AoEHotkey	 	= tonumber(GetCVar(&amp;quot;Nova_AoE_Rotation&amp;quot;))
	PHotkey 		= tonumber(GetCVar(&amp;quot;Nova_Pause_1&amp;quot;))
	PHotkey2		= tonumber(GetCVar(&amp;quot;Nova_Pause_2&amp;quot;))	
	
end
	
	-- Load LUA files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Nova_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_Nova_Frame.lua&amp;quot;) == true then
			MiniMapCreation()
			
			-- Slash Commands
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck, &amp;quot;MK WW&amp;quot;, &amp;quot;HOTKEYS&amp;quot;)
				end
				if not Nova_Frame:IsShown() then Nova_Frame:Show() else Nova_Frame:Hide() end
			end
		end
	end
end</Lua><RecastDelay>250</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nova_Frame: Chi Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CWenabled ~= 1 then return false end

if TargetValidation(&amp;quot;target&amp;quot;,ChiWave)
and PlayerHP &amp;lt;= CWhealth
then
	PQR_DebugP(&amp;quot;Healing with Chi Wave (Current HP: &amp;quot; .. PlayerHP)
	CastSpell(ChiWave)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Single Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoERotation == true then return false end

function BossCheck()
	if CDenabled ~= 1
	then return true
	end
	
	if CDenabled == 1
	and SpecialUnit()
		then return true	
	end
	return false
end

--COMBAT
if not PlayerCombat then return false end

--6	0.00	chi_sphere,if=talent.power_strikes.enabled&amp;buff.chi_sphere.react&amp;chi&amp;lt;4
--7	1.00	virmens_bite_potion,if=buff.bloodlust.react|target.time_to_die&amp;lt;=60
--8	0.00	chi_brew,if=talent.chi_brew.enabled&amp;chi=0

if IsSpellKnown(ChiBrew)
and PQR_SpellAvailable(ChiBrew)
and PlayerChi == 0
then
	CastSpell(ChiBrew)
end

--9	3.56	rising_sun_kick,if=!target.debuff.rising_sun_kick.remains|target.debuff.rising_sun_kick.remains&amp;lt;=3
if TargetValidation(&amp;quot;target&amp;quot;,RisingSunKick)
--and RSKtimer &amp;lt;= 3
and SaveChi == nil
then
	CastSpell(RisingSunKick)
end

--A	12.79	tiger_palm,if=buff.tiger_power.remains&amp;lt;=3
if TargetValidation(&amp;quot;target&amp;quot;,TigerPalm)
and not TP
and RSKtimer &amp;gt; 1
and TimeToMax &amp;gt; 1
and SaveChi == nil
then
	CastSpell(TigerPalm)
end

--B	13.87	tigereye_brew,if=!buff.tigereye_brew_use.up&amp;buff.tigereye_brew.react=10
local name, _, _, count = UnitBuffID(&amp;quot;player&amp;quot;, 125195)
local RoR, _, _, _, _, _, time = UnitBuffID(&amp;quot;player&amp;quot;, 139120)
if PQR_SpellAvailable(116740)
and ( ( (name ~= nil and count &amp;gt;= 7) and ( RoR ~= nil and time - GetTime() &amp;lt;= 1.5 ))
or ( name ~= nil and count &amp;gt; 19 ) )
then
	CastSpellByName(GetSpellInfo(116740))
end

--C	6.82	energizing_brew,if=energy.time_to_max&amp;gt;5
CheckEnergy()
if PQR_SpellAvailable(EnergizingBrew)
and TimeToMax &amp;gt; 5
then
	CastSpell(EnergizingBrew)
end

--D	3.01	invoke_xuen,if=talent.invoke_xuen.enabled
--RACIAL
if MeeleRange()
then
	if Racial ~= 0 and PQR_SpellAvailable(Racial)
	and BossCheck()
	then
		CastSpell(Racial)
	end
	
	if IsSpellKnown(InvokeXuen)
	and PQR_SpellAvailable(InvokeXuen)
	and BossCheck()
	then
		CastSpell(InvokeXuen)
	end
end
--E	0.00	rushing_jade_wind,if=talent.rushing_jade_wind.enabled
if IsSpellKnown(RushingJadeWind)
and PQR_SpellAvailable(RushingJadeWind)
and MeeleRange()
and UnitExists(&amp;quot;target&amp;quot;)
then
	CastSpell(RushingJadeWind)
end

--J	7.16	blackout_kick,if=buff.combo_breaker_bok.react&amp;energy.time_to_max&amp;lt;2
--CheckEnergy()
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and ComboBlackout
then
	CastSpell(BlackoutKick)
end

--K	11.31	blackout_kick,if=(chi&amp;gt;=3&amp;energy.time_to_max&amp;lt;=2&amp;!talent.ascension.enabled)|(chi&amp;gt;=4&amp;energy.time_to_max&amp;lt;=2&amp;talent.ascension.enabled)
--CheckEnergy()
local RSKStart, RSKDuration = GetSpellCooldown(RisingSunKick)
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and SaveChi == nil
and (UnitPower(&amp;quot;player&amp;quot;)+(select(2,GetPowerRegen(&amp;quot;player&amp;quot;))*(RSKStart+RSKDuration-GetTime()))) &amp;gt;= 40
then
	CastSpell(BlackoutKick)
end


--L	47.00	rising_sun_kick
if TargetValidation(&amp;quot;target&amp;quot;,RisingSunKick)
and SaveChi == nil
then
	CastSpell(RisingSunKick)
end

--CHI WAVE DUMP
CheckEnergy()
if CWRenabled ~= nil
and TargetValidation(&amp;quot;target&amp;quot;,ChiWave)
and TimeToMax &amp;gt; 2
then
	CastSpell(ChiWave)
end

--M	29.62	tiger_palm,if=buff.combo_breaker_tp.react
CheckEnergy()
if (TargetValidation(&amp;quot;target&amp;quot;,TigerPalm)
and ComboTigerPalm
and TimeToMax &amp;gt;= 2)
or (ComboTigerPalm
and select(7, UnitBuffID(&amp;quot;player&amp;quot;, 118864)) - GetTime() &amp;lt;= 2)
then
	CastSpell(TigerPalm)
end

--N	13.48	fists_of_fury,if=!buff.energizing_brew.up&amp;energy.time_to_max&amp;gt;(4)&amp;buff.tiger_power.remains&amp;gt;(4)
CheckEnergy()

if FoFAenabled ~= nil
and PQR_SpellAvailable(FistsofFury)
and MeeleRange()
and not EnergyBrewBuff
and not UnitBuffID(&amp;quot;player&amp;quot;, 139120)
and TimeToMax &amp;gt; 4
and TPtimer &amp;gt; 4
then
	CastSpell(FistsofFury)
end

--O	23.49	blackout_kick,if=buff.combo_breaker_bok.react
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and SaveChi == nil
and ComboBlackout
then
	CastSpell(BlackoutKick)
end

--P	160.40	jab,if=talent.ascension.enabled&amp;chi&amp;lt;=3
--Q	0.00	jab,if=!talent.ascension.enabled&amp;chi&amp;lt;=2
if TargetValidation(&amp;quot;target&amp;quot;,Jab)
and PlayerChi &amp;lt;= (PlayerMaxChi - 2)
then
	CastSpell(Jab)
end

if PQR_SpellAvailable(ExpelHarm)
and PlayerChi &amp;lt;= (PlayerMaxChi - 2)
and not MeeleRange()
then
	CastSpell(ExpelHarm)
end

--R	72.89	blackout_kick,if=((energy+(energy.regen*(cooldown.rising_sun_kick.remains)))&amp;gt;=40)|(chi=4&amp;!talent.ascension.enabled)|(chi=5&amp;talent.ascension.enabled
CheckEnergy()
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and SaveChi == nil
and ((PlayerEnergy+(EnergyRegen*(CdCheck(RisingSunKick))))&amp;gt;=40
or (PlayerChi == PlayerMaxChi))
then
	CastSpell(BlackoutKick)
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Area of Effect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoERotation == false then return false end

function BossCheck()
	if CDenabled ~= 1
	then return true
	end
	
	if CDenabled == 1
	and SpecialUnit()
		then return true	
	end
	return false
end

--COMBAT
if not PlayerCombat then return false end

--6	0.00	chi_sphere,if=talent.power_strikes.enabled&amp;buff.chi_sphere.react&amp;chi&amp;lt;4
--7	1.00	virmens_bite_potion,if=buff.bloodlust.react|target.time_to_die&amp;lt;=60
--8	0.00	chi_brew,if=talent.chi_brew.enabled&amp;chi=0

if IsSpellKnown(ChiBrew)
and PQR_SpellAvailable(ChiBrew)
and PlayerChi == 0
then
	CastSpell(ChiBrew)
end

--9	3.56	rising_sun_kick,if=!target.debuff.rising_sun_kick.remains|target.debuff.rising_sun_kick.remains&amp;lt;=3
if TargetValidation(&amp;quot;target&amp;quot;,RisingSunKick)
and RSKtimer &amp;lt;= 3
and SaveChi == nil
then
	CastSpell(RisingSunKick)
end

--A	12.79	tiger_palm,if=buff.tiger_power.remains&amp;lt;=3
if TargetValidation(&amp;quot;target&amp;quot;,TigerPalm)
and not TP
and SaveChi == false
then
	CastSpell(TigerPalm)
end

--B	13.87	tigereye_brew,if=!buff.tigereye_brew_use.up&amp;buff.tigereye_brew.react=10
local name, _, _, count = UnitBuffID(&amp;quot;player&amp;quot;, 125195)
local RoR, _, _, _, _, _, time = UnitBuffID(&amp;quot;player&amp;quot;, 139120)
if PQR_SpellAvailable(116740)
and ( ( (name ~= nil and count &amp;gt;= 7) and ( RoR ~= nil and time - GetTime() &amp;lt;= 1.5 ))
or ( name ~= nil and count &amp;gt; 19 ) )
then
	CastSpellByName(GetSpellInfo(116740))
end

--C	6.82	energizing_brew,if=energy.time_to_max&amp;gt;5
CheckEnergy()
if PQR_SpellAvailable(EnergizingBrew)
and TimeToMax &amp;gt; 5
then
	CastSpell(EnergizingBrew)
end

--D	3.01	invoke_xuen,if=talent.invoke_xuen.enabled
--RACIAL
if MeeleRange()
then
	if Racial ~= 0 and PQR_SpellAvailable(Racial)
	and BossCheck()
	then
		CastSpell(Racial)
	end
	
	if IsSpellKnown(InvokeXuen)
	and PQR_SpellAvailable(InvokeXuen)
	and BossCheck()
	then
		CastSpell(InvokeXuen)
	end
end
--E	0.00	rushing_jade_wind,if=talent.rushing_jade_wind.enabled
if IsSpellKnown(RushingJadeWind)
and PQR_SpellAvailable(RushingJadeWind)
and MeeleRange()
and UnitExists(&amp;quot;target&amp;quot;)
then
	CastSpell(RushingJadeWind)
end

if PQR_SpellAvailable(SpinningCraneKick)
and MeeleRange()
and PowerStrike == false
and PlayerChi &amp;lt; PlayerMaxChi
then
	CastSpell(SpinningCraneKick)
end

--J	7.16	blackout_kick,if=buff.combo_breaker_bok.react&amp;energy.time_to_max&amp;lt;2
CheckEnergy()
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and ComboBlackout
and TimeToMax &amp;lt; 2
then
	CastSpell(BlackoutKick)
end

--K	11.31	blackout_kick,if=(chi&amp;gt;=3&amp;energy.time_to_max&amp;lt;=2&amp;!talent.ascension.enabled)|(chi&amp;gt;=4&amp;energy.time_to_max&amp;lt;=2&amp;talent.ascension.enabled)
CheckEnergy()
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and SaveChi == nil
and (PlayerMaxChi - 1) &amp;gt; PlayerChi and TimeToMax &amp;lt; 2
then
	CastSpell(BlackoutKick)
end


--L	47.00	rising_sun_kick
if TargetValidation(&amp;quot;target&amp;quot;,RisingSunKick)
and SaveChi == nil
then
	CastSpell(RisingSunKick)
end

--M	29.62	tiger_palm,if=buff.combo_breaker_tp.react
if TargetValidation(&amp;quot;target&amp;quot;,TigerPalm)
and ComboTigerPalm
then
	CastSpell(TigerPalm)
end

--N	13.48	fists_of_fury,if=!buff.energizing_brew.up&amp;energy.time_to_max&amp;gt;(4)&amp;buff.tiger_power.remains&amp;gt;(4)
--REMOVED

--O	23.49	blackout_kick,if=buff.combo_breaker_bok.react
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and SaveChi == nil
and ComboBlackout
then
	CastSpell(BlackoutKick)
end

--P	160.40	jab,if=talent.ascension.enabled&amp;chi&amp;lt;=3
--Q	0.00	jab,if=!talent.ascension.enabled&amp;chi&amp;lt;=2
if TargetValidation(&amp;quot;target&amp;quot;,Jab)
and PlayerChi &amp;lt;= (PlayerMaxChi - 2)
then
	CastSpell(Jab)
end

--R	72.89	blackout_kick,if=((energy+(energy.regen*(cooldown.rising_sun_kick.remains)))&amp;gt;=40)|(chi=4&amp;!talent.ascension.enabled)|(chi=5&amp;talent.ascension.enabled
CheckEnergy()
if TargetValidation(&amp;quot;target&amp;quot;,BlackoutKick)
and SaveChi == nil
and ((PlayerEnergy+(EnergyRegen*(CdCheck(RisingSunKick))))&amp;gt;=40
or (PlayerChi == PlayerMaxChi))
then
	CastSpell(BlackoutKick)
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nova_Frame: Trinkets</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (T01enabled ~= 1 and T02enabled ~= 1 and GLOenabled ~= 1) or not MeeleRange() then return false end



local SpecialUnit = SpecialUnit


----------------
-- TRINKET 01 --
----------------
if T01enabled ~= nil
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0
and (CDenabled ~= 1
or (CDenabled == 1 and SpecialUnit()))
then
	UseInventoryItem(13)
end

if T02enabled ~= nil
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and (CDenabled ~= 1
or (CDenabled == 1 and SpecialUnit()))
then
	UseInventoryItem(14)
end

if GLOenabled ~= nil
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0
and (CDenabled ~= 1
or (CDenabled == 1 and SpecialUnit()))
then
	UseInventoryItem(10)
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nova_Frame: Boss Mechanics</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BMenabled ~= 1 then return false end

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
    PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
    return true
else
    PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = true
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
    local bossCheck = &amp;quot;boss&amp;quot;..i

    if UnitExists(bossCheck) then
        
        local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
        local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
        
        if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
            local reshapeName = GetSpellInfo(122370)
            local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
            
            if reshapeLife ~= nil then
                local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
                local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
                --grab spell names for abilities:
                local amberExplosion = GetSpellInfo(122402)
                
                --interrupt self if casting amber explosion
                if playerCasting == amberExplosion then
                    --Press the 2nd button (Struggle for Control)
                    RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
                    return true
                end
                
                --interrupt self if casting amber explosion
                if playerCasting2 == amberExplosion then
                    --Press the 2nd button (Struggle for Control)
                    RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
                    return true
                end
                
                --interrupt the target if casting amber explosion
                if bossCasting and bossCasting == amberExplosion then
                    TargetUnit(bossCheck)
                    --Press the 1st button (Amber Strike)
                    RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
                    return true
                end
                
                if UnitExists(&amp;quot;boss2&amp;quot;) then
                    if bossCheck == &amp;quot;boss2&amp;quot; then 
                        return true --prevent the rotation from executing while reshaped
                    end
                else
                    return true
                end

            end
            
        elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
            --Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
            
            --only continue checking if we are targetting the boss or have no target.
            if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
                local impName = GetSpellInfo(117961)
                local impShieldBuff = UnitBuffID(bossCheck, 117961)
                
                if (bossCasting and bossCasting == impName) then
                    StopAttack()
                    SpellStopCasting()
                    local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
                    PQR_resumeAttack = GetTime() + delayAdd + 0.2
                    return true
                end
                
                if impShieldBuff then
                    StopAttack()
                    SpellStopCasting()
                    return true
                end
            end
            
        elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
            --Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
            --Also stop attacks if not stunned.
            
            --only continue checking if we are targetting the boss or have no target.
            if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
                local sleightName = GetSpellInfo(118162)
                local sleightBuff = UnitBuffID(bossCheck, 118162)
                --                  HoJ,   FoJ,  Kidney  
                local stunList = { 853, 105593, 408 }
                local isStunned = nil
                for _,v in ipairs(stunList) do
                    local debuffCheck = UnitDebuffID(bossCheck, v)
                    if debuffCheck then
                        isStunned = true
                    end
                end
                
                if (bossCasting and bossCasting == sleightName) then
                    StopAttack()
                    SpellStopCasting()
                    local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
                    PQR_resumeAttack = GetTime() + delayAdd + 0.2
                    return true
                end
                
                if sleightBuff and not isStunned then
                    StopAttack()
                    SpellStopCasting()
                    return true
                end
            end

        elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
            --Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
                        
            if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
                local sodName = GetSpellInfo(117697)
                local sodBuff = UnitBuffID(bossCheck, 117697)
                
                if (bossCasting and bossCasting == sodName) then
                    StopAttack()
                    SpellStopCasting()
                    local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
                    PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
                    return true
                end
                
                if sodBuff then
                    StopAttack()
                    SpellStopCasting()
                    return true
                end
            end
        end
    end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
    RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hotkey: Touch of Karma</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if TKenabled ~= 1 then return false end

if Timer == nil then
	Timer = 0
end

local Nova_Mod = Nova_Mod
local SPELL = TouchofKarma
local SkillEnabled = TKenabled
local HOTKEY = TKHotkey

if Nova_Mod() == HOTKEY
and GetTime() - Timer &amp;gt; 0.5 then
	Timer = GetTime()
	
	if CheckSpell == TouchofKarma
	then PQR_WriteToChat(&amp;quot;Removing |cFF00FF00Touch of Karma.&amp;quot;)
		CheckSpell = 0
		CanSaveChi = nil
		SaveChi = nil
		PQR_SendText(&amp;quot;Standby&amp;quot;)
	else
		CheckSpell = TouchofKarma
		CanSaveChi = true
		PQR_WriteToChat(&amp;quot;Queue |cFF00FF00Touch of Karma.&amp;quot;)
		PQR_SendText(&amp;quot;Queue&amp;quot;, TouchofKarma)
	end
	return true
end

if MeeleRange()
and CanSaveChi == true
then
	SaveChi = true
else
	SaveChi = false
end


if CheckSpell == TouchofKarma
and TargetValidation(&amp;quot;target&amp;quot;,TouchofKarma)
then
	CastSpell(TouchofKarma)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hotkey: Touch of Death</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if TDenabled ~= 1 then return false end

if Timer == nil then
	Timer = 0
end

local Nova_Mod = Nova_Mod
local SPELL = TouchofDeath
local SkillEnabled = TDenabled
local HOTKEY = TDHotkey
local playerhp	= UnitHealthMax(&amp;quot;player&amp;quot;)
local targethp	= UnitHealth(&amp;quot;target&amp;quot;)

if Nova_Mod() == HOTKEY
and GetTime() - Timer &amp;gt; 0.5 then
	Timer = GetTime()
	
	if CheckSpell == TouchofDeath
	then PQR_WriteToChat(&amp;quot;Removing |cFF00FF00Touch of Death.&amp;quot;)
		CheckSpell = 0
		CanSaveChi = nil
		SaveChi = nil
		PQR_SendText(&amp;quot;Standby&amp;quot;)
	else
		CheckSpell = TouchofDeath
		PQR_WriteToChat(&amp;quot;Queue |cFF00FF00Touch of Death.&amp;quot;)
		PQR_SendText(&amp;quot;Queue&amp;quot;, TouchofDeath)
	end
	return true
end

if not MeeleRange() or targethp &amp;gt;= playerhp then return false end
if targethp &amp;lt;= playerhp
and CanSaveChi ~= nil
then
	SaveChi = true
end

if UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
then
	SaveChi = nil
end

if CheckSpell == TouchofDeath
and TargetValidation(&amp;quot;target&amp;quot;,TouchofDeath)
and targethp &amp;lt;= playerhp
then
	CastSpell(TouchofDeath)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hotkey: Fists of Fury</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FoFenabled ~= 1 then return false end

if Timer == nil then
	Timer = 0
end

local Nova_Mod = Nova_Mod
local SPELL = FistsofFury
local SkillEnabled = FoFenabled
local HOTKEY = FoFHotkey

if Nova_Mod() == HOTKEY
and GetTime() - Timer &amp;gt; 0.5 then
	Timer = GetTime()
	
	if CheckSpell == FistsofFury
	then PQR_WriteToChat(&amp;quot;Removing |cFF00FF00Fists of Fury.&amp;quot;)
		CheckSpell = 0
		CanSaveChi = nil
		SaveChi = nil
		PQR_SendText(&amp;quot;Standby&amp;quot;)
	else
		CheckSpell = FistsofFury
		CanSaveChi = true
		PQR_WriteToChat(&amp;quot;Queue |cFF00FF00Fists of Fury.&amp;quot;)
		PQR_SendText(&amp;quot;Queue&amp;quot;, FistsofFury)
	end
	return true
end

if CdCheck(FistsofFury) &amp;lt; 1
and CanSaveChi == true
then
	SaveChi = true
else
	SaveChi = nil
end

if not MeeleRange() then return false end

if CheckSpell == FistsofFury
and PQR_SpellAvailable(FistsofFury)
and MeeleRange()
then
	CastSpell(FistsofFury)
	return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nova_Frame: Flying Serpent Kick</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FSKenabled ~= 1 then return false end

if timewait == nil then
	timewait = 0
end

--Flying = false
if PQR_SpellAvailable(101545)
and not spellSucced then
  spellSucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
  spellSucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
  spellSucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==101545 then
  Flying = true
  timewait= GetTime()
  end end)
end

if Flying == true
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
and IsSpellInRange(GetSpellInfo(100780), &amp;quot;target&amp;quot;) == 1
then
	CastSpellByName(GetSpellInfo(101545))
	Flying = false
	return true
end

if GetTime() - timewait &amp;gt; 5
and Flying == true
then
	Flying = false
	timewait = 0
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>