<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false
	
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Mist Monk Profile Verion - 2.0.14&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
	PQR_SwapCheckTimer = 0	  
	
--------------------
-- Register CVars
--------------------
Nova_ValueCheck = {
	{	Var1 = nil,	Text = &amp;quot;Healing Values&amp;quot;,			Var2 = nil		},
	{	Var1 = 60,	Text = &amp;quot;EnvelopingMist&amp;quot;,			Var2 = 1		},	
	{	Var1 = 2,	Text = &amp;quot;ManaTeaLimit&amp;quot;,				Var2 = 1		},		
	{	Var1 = 90,	Text = &amp;quot;ManaTea&amp;quot;,					Var2 = 1		},
	{	Var1 = 95,	Text = &amp;quot;RenewingMist&amp;quot;,				Var2 = 1		},
	{	Var1 = 99,	Text = &amp;quot;RenewingMistTank&amp;quot;,			Var2 = 1		},			
	{	Var1 = 71,	Text = &amp;quot;SoothingMist&amp;quot;,				Var2 = 1		},		
	{	Var1 = 95,	Text = &amp;quot;SoothingMist4Chi&amp;quot;,			Var2 = 1		},		
	{	Var1 = 70,	Text = &amp;quot;SurgingMistInstant&amp;quot;,		Var2 = 1		},		
	{	Var1 = 40,	Text = &amp;quot;SurgingMist&amp;quot;,				Var2 = 1		},
	{	Var1 = 20,	Text = &amp;quot;TFTeaSurgingMist&amp;quot;,			Var2 = 1		},				
	{	Var1 = 3,	Text = &amp;quot;UpliftCount&amp;quot;, 				Var2 = 1		},			
	{	Var1 = 90,	Text = &amp;quot;Uplift&amp;quot;,					Var2 = 1		},	
	{	Var1 = 4,	Text = &amp;quot;TFTeaUplift&amp;quot;,				Var2 = 1		},		
	{	Var1 = 6,	Text = &amp;quot;TFTReM&amp;quot;,					Var2 = 1		},			
	{	Var1 = nil,	Text = &amp;quot;Cooldown Values&amp;quot;,			Var2 = nil		},
	{	Var1 = 20,	Text = &amp;quot;LifeCocoon&amp;quot;,				Var2 = 1		},
	{	Var1 = 80,	Text = &amp;quot;ChiBurst&amp;quot;, 					Var2 = 1		},
	{	Var1 = 3,	Text = &amp;quot;ChiBurstLimit&amp;quot;, 			Var2 = 1		},
	{	Var1 = 70,	Text = &amp;quot;VSpinningCKick&amp;quot;, 			Var2 = 1		},
	{	Var1 = 3,	Text = &amp;quot;VSpinningCKickLimit&amp;quot;, 		Var2 = 1		},				
	{	Var1 = 4,	Text = &amp;quot;RevivalLimit&amp;quot;,				Var2 = 1		},		
	{	Var1 = 60,	Text = &amp;quot;Revival&amp;quot;,					Var2 = 1		},	
	{	Var1 = 2,	Text = &amp;quot;ChiWaveLimit&amp;quot;,				Var2 = 1		},		
	{	Var1 = 85,	Text = &amp;quot;ChiWave&amp;quot;,					Var2 = 1		},		
	{	Var1 = 1,	Text = &amp;quot;ZenSphereLimit&amp;quot;,			Var2 = 1		},		
	{	Var1 = 85,	Text = &amp;quot;ZenSphere&amp;quot;,					Var2 = 1		},	
	{	Var1 = 0,	Text = &amp;quot;VSpinningCKickAuto&amp;quot;,		Var2 = 0		},							
	{	Var1 = nil,	Text = &amp;quot;Misc Values&amp;quot;,				Var2 = nil		},						
	{	Var1 = 0,	Text = &amp;quot;SpamExpelHarm&amp;quot;,				Var2 = 0		},							
	{	Var1 = 0,	Text = &amp;quot;SpamRenewingMist&amp;quot;,			Var2 = 0		},		
	{	Var1 = 0,	Text = &amp;quot;AutoTarget&amp;quot;,				Var2 = 1		},				
	{	Var1 = 0,	Text = &amp;quot;DPS&amp;quot;,						Var2 = 1		},			
	{	Var1 = 20,	Text = &amp;quot;LowMana&amp;quot;,					Var2 = 1		},
	{	Var1 = 60,	Text = &amp;quot;Detox&amp;quot;,						Var2 = 1		},
	--{	Var1 = 0,	Text = &amp;quot;Smart&amp;quot;,						Var2 = 1		},	
	{	Var1 = 0,	Text = &amp;quot;Racials&amp;quot;,					Var2 = 1		},					
	{	Var1 = 0,	Text = &amp;quot;NewEvents&amp;quot;,					Var2 = 1		},		
	{	Var1 = 0,	Text = &amp;quot;OldEvents&amp;quot;,					Var2 = 0		}		
	--{	Var1 = 80,	Text = &amp;quot;LowHPThreshold&amp;quot;, 			Var2 = nil		}
}		

Nova_CooldownCheck = {
	{	Mod = 8,	Text = &amp;quot;CracklingJadeLightning&amp;quot;,	Var1 = 1		}, --IsRightShiftKeyDown
	{	Mod = 1,	Text = &amp;quot;PauseRotation&amp;quot;,				Var1 = 1		}, --IsLeftShiftKeyDown
	{	Mod = 2,	Text = &amp;quot;JadeSerpentStatue&amp;quot;,			Var1 = 1		}, --IsLeftControlKeyDown
	{	Mod = 4,	Text = &amp;quot;DispelRaid&amp;quot;,				Var1 = 1		}, --IsLeftAltKeyDown		
	{	Mod = 32,	Text = &amp;quot;HealingSphere&amp;quot;,				Var1 = 1		}, --IsRightAltKeyDown
	{	Mod = 16,	Text = &amp;quot;SpinningCraneKick&amp;quot;,			Var1 = 1		}  --IsRightControlKeyDown
	--{	Mod = 2,	Text = &amp;quot;RemoveFromCustomTable&amp;quot;,		Var1 = 1		}, --IsLeftControlKeyDown
	--{	Mod = 4,	Text = &amp;quot;AddToCustomTable&amp;quot;,			Var1 = 1		}  --IsLeftAltKeyDown			
}

--Left Shift: Pause
--Left Control: Jade Serpent Statue at Mouseover
--Left Alt: Auto dispel raid
--Right Alt: Healing Sphere at Mouseover
--Right Shift: Hold for Crackling Jade Lightning
--Right Control: Hold for Spinning Crane Kick
	
if GetCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_OverRide&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_OverRide&amp;quot;, 0) end
if GetCVar(&amp;quot;PQ_UseCustomT&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_Recording&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Recording&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_DisableCD&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1) end
if GetCVar(&amp;quot;Nova_Mouseover&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Mouseover&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_LowHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_LowHP&amp;quot;, 80) end
if GetCVar(&amp;quot;Nova_ActualHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_ActualHP&amp;quot;, 0) end
-- Registering the CVars for the CustomFrame
for i=1, #Nova_ValueCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
	end
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
	end
end
for i=1, #Nova_CooldownCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text, Nova_CooldownCheck[i].Mod)
	end	
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
	end
end

--------------------
-- Slash Commands
--------------------
SLASH_WIPETABLE1 = &amp;quot;/wipetable&amp;quot;
SLASH_WIPETABLE2 = &amp;quot;/wipecustomtable&amp;quot;
SLASH_WIPETABLE3 = &amp;quot;/wt&amp;quot;
function SlashCmdList.WIPETABLE(msg, editbox)
	Nova_CustomT = { }
	if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then 
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean, and reverting to Normal Table.&amp;quot;)
		end
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean.&amp;quot;)
		end
	end
end

SLASH_USECUSTOMT1 = &amp;quot;/usecustomt&amp;quot;
SLASH_USECUSTOMT2 = &amp;quot;/uct&amp;quot;
SLASH_USECUSTOMT3 = &amp;quot;/usecustomtable&amp;quot;
function SlashCmdList.USECUSTOMT(msg, editbox)
	if not GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) and #Nova_CustomT &amp;gt; 0 then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Custom Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Normal Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
	end
end

SLASH_RECORDING1 = &amp;quot;/recording&amp;quot;
SLASH_RECORDING2 = &amp;quot;/recraid&amp;quot;
SLASH_RECORDING3 = &amp;quot;/recordingraid&amp;quot;
function SlashCmdList.RECORDING(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 1)
		for i=1, 20 do ChatFrame1:AddMessage(&amp;quot; &amp;quot;) end
	else
		PQR_WriteToChat(&amp;quot;Silent Mode Disabled&amp;quot;)
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 0)
	end
end

SLASH_DISABLECD1 = &amp;quot;/disablecd&amp;quot;
function SlashCmdList.DISABLECD(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableCD&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 0)
	end
end

SLASH_CLEARCHAT1 = &amp;quot;/clearchat&amp;quot;
function SlashCmdList.CLEARCHAT(msg, editbox)
	for i=1, 20 do
		ChatFrame1:AddMessage(&amp;quot; &amp;quot;)
	end
end

SLASH_DISABLEMOUSEOVER1 = &amp;quot;/mouseoverheal&amp;quot;
SLASH_DISABLEMOUSEOVER2 = &amp;quot;/mh&amp;quot;
function SlashCmdList.DISABLEMOUSEOVER(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableMouseover&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 0)
	end		
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-----------------------------
-- Create the CVar Macros
-----------------------------

	if PQR_LoadLua ~= nil then
		-- Load Data File
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Vachiusa_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Frame.lua&amp;quot;) == true then
			if not mmC then
				mmC = true
				MiniMapCreation()
			end
		
			-- Setup the Slash Commands for the Frame
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck)
				end
			
				if not Nova_Frame:IsShown() then
					Nova_Frame:Show()
				else
					Nova_Frame:Hide()
				end
			end
		else
			print(&amp;quot;Failed to load Frame&amp;quot;)
		end
	end
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 2 then
		PQR_WriteToChat(&amp;quot;You must be in Mist Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Healing Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActulHP)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true


if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then
	members = Nova_CustomT
	lowhpmembers = 0
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].HP &amp;lt; 80 then
			lowhpmembers = lowhpmembers + 1
		end
	end
	
	table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- ToInteger --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- To Integer from String
Nova_LowHP 							= tonumber( GetCVar(&amp;quot;Nova_LowHP&amp;quot;) )
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)		
	end
end

-- To Integer for Cooldowns
Nova_CracklingJadeLightning			= tonumber(	GetCVar(&amp;apos;Nova_CracklingJadeLightning&amp;apos;) )
Nova_JadeSerpentStatue				= tonumber(	GetCVar(&amp;apos;Nova_JadeSerpentStatue&amp;apos;) )
Nova_DispelRaid						= tonumber(	GetCVar(&amp;apos;Nova_DispelRaid&amp;apos;) )
Nova_HealingSphere					= tonumber(	GetCVar(&amp;apos;Nova_HealingSphere&amp;apos;) )
Nova_SpinningCraneKick				= tonumber(	GetCVar(&amp;apos;Nova_SpinningCraneKick&amp;apos;) )
--Nova_RemoveCT						= tonumber(	GetCVar(&amp;apos;Nova_RemoveFromCustomTable&amp;apos;) )
--Nova_AddCT							= tonumber(	GetCVar(&amp;apos;Nova_AddToCustomTable&amp;apos;) )

-- To Boolean from String
Nova_Mouseover 						= GetCVarBool(&amp;quot;Nova_Mouseover&amp;quot;)
Nova_CracklingJadeLightningCheck	= GetCVarBool(&amp;apos;Nova_CracklingJadeLightning_Enabled&amp;apos;) 
Nova_JadeSerpentStatueCheck			= GetCVarBool(&amp;apos;Nova_JadeSerpentStatue_Enabled&amp;apos;) 
Nova_DispelRaidCheck				= GetCVarBool(&amp;apos;Nova_DispelRaid_Enabled&amp;apos;) 
Nova_HealingSphereCheck				= GetCVarBool(&amp;apos;Nova_HealingSphere_Enabled&amp;apos;) 
Nova_SpinningCraneKickCheck			= GetCVarBool(&amp;apos;Nova_SpinningCraneKick_Enabled&amp;apos;) 
--Nova_RemoveCTCheck					= GetCVarBool(&amp;apos;Nova_RemoveFromCustomTable_Enabled&amp;apos;)
--Nova_AddCTCheck						= GetCVarBool(&amp;apos;Nova_AddToCustomTable_Enabled&amp;apos;)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Stop Casting
if SpellIsTargeting() then
	SpellStopCasting()
elseif (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
--and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4 
then
	for i=1, #members do
		if UnitBuffID(members[i].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist	
		and not UnitIsUnit(&amp;quot;boss1&amp;quot;, members[i].Unit)
		and (not IsSpellInRange(GetSpellInfo(115151),members[i].Unit) == 1 or CalStop(members[i].Unit) &amp;gt; Nova_SoothingMist4Chi) then 
			SpellStopCasting()
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast Soothing Mist - Name: &amp;quot; ..UnitName(members[i].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[i].Unit)..&amp;quot; - overheal: &amp;quot;..select(2, CalStop(members[i].Unit)))
			return true
		end
	end
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116694)) then --SurgingMist
	SpellStopCasting()
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast SurgingMist&amp;quot;)
	return true
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(124682)) then --EnvelopingMist
	SpellStopCasting()
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast EnvelopingMist&amp;quot;)
	return true	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Trinket spirit 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 80
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then UseInventoryItem(14)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- SelfSurvival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 20 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if GetItemCount(5512,false,true) &amp;gt; 0	
	and PQR_SpellAvailable(5512) --Healthstone		
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and GetItemCooldown(5512) == 0 then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end	
		UseItemByName(5512)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealthstone - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	--elseif GetInventoryItemCooldown(6)==0 --Grounded Plasma Shield 	
	--then 
		--UseInventoryItem(6) 
		--return true
	--The next 3 attacks within 45 sec that deal damage equal to 20% or more of your total health are reduced in half.
	elseif PQR_SpellAvailable(122278)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation	
	and select(2,GetTalentRowSelectionInfo(5)) == 14
	and select(2,GetSpellCooldown(122278)) &amp;lt; 2 then
	--and IsUsableSpell(115176) 	
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(122278),nil))	 			
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDampen Harm!&amp;quot;)	
		return true		
	elseif PQR_SpellAvailable(115203)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation		
	and select(2,GetSpellCooldown(115203)) &amp;lt; 2 
	and not UnitBuffID(&amp;quot;player&amp;quot;,122278) then --Dampen Harm
	--and IsUsableSpell(115203) 	
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(115203),nil))	 	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFFortifying Brew - My HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;))	
		return true		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Custom Table --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--------------------------------------
-- Adding Players to Custom Table
--------------------------------------

--if Nova_AddCTCheck 	
 --and ( Nova_Mod2() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 --and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 --and Nova_Mod2() == Nova_AddCT
 if IsLeftShiftKeyDown()
 and IsLeftAltKeyDown()
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) ) then  
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			return false
		end
	end
	
	table.insert(Nova_CustomT, { GUID = UnitGUID(&amp;quot;mouseover&amp;quot;) } )
	
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		PQR_WriteToChat(&amp;quot;We just added &amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; to the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
	end
	return true

end


--------------------------------------
-- Removing Players from Custom Table
--------------------------------------

--if Nova_RemoveCTCheck 	
 --and ( Nova_Mod2() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 --and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 --and Nova_Mod2() == Nova_RemoveCT
if IsLeftShiftKeyDown()
 and IsLeftControlKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) )then
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;We just removed &amp;quot;..UnitName(Nova_CustomT[i].Unit)..&amp;quot; from the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
			end
			table.remove(Nova_CustomT, i)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TsulongHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--TsulongHeal 
if Nova_NewEventsCheck then	
	local bossCheck = &amp;quot;boss1&amp;quot; 
	
	if UnitExists(bossCheck) then 
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16) 	        
		if npcID ~= 62442 then --Tsulong	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug NPCID: &amp;quot; ..npcID) 
			return false
		end
	end
	
	--if PQR_SpellAvailable(115450)
	--and IsUsableSpell(115450)
	--and select(2,GetSpellCooldown(115450)) &amp;lt; 2
	--and UnitDebuffID(&amp;quot;boss1&amp;quot;, 123011) then --Terrorize debuff
		 --CastSpellByName(tostring(GetSpellInfo(115450)),&amp;quot;boss1&amp;quot;)	 
		 --PQR_WriteToChat(&amp;quot;\124cFFFF55FFDispel Terrorize debuff on Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 				
	--end
	
	if PQR_SpellAvailable(115175)  	
	 and IsUsableSpell(115175) 
	 and IsSpellInRange(GetSpellInfo(115175),&amp;quot;boss1&amp;quot;) == 1
	 then
		if Nova_UnitInfo(&amp;quot;boss1&amp;quot;) &amp;lt; 100 then
			local prepairBIL = false
			local BathedInLight = GetSpellInfo(122858) --Sun Breath 122855
	 		if (bossCasting == BathedInLight) then
	 			prepairBIL = true
	 		end
	 				
			--LifeCocoon
			if PQR_SpellAvailable(116849) 
			 and ((UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
			 	or prepairBIL)
			 and select(2,GetSpellCooldown(116849)) &amp;lt; 2		 		 
			 and IsUsableSpell(116849)		 
			 and not UnitBuffID(&amp;quot;boss1&amp;quot;,116849) --LifeCocoon
			 and not UnitBuffID(&amp;quot;boss1&amp;quot;,47788)	--Guardian Spirit
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			 and IsSpellInRange(GetSpellInfo(116849),&amp;quot;boss1&amp;quot;) == 1 then
				CastSpellByName(tostring(GetSpellInfo(116849)),&amp;quot;boss1&amp;quot;)	 
			end
	
			--RenewingMist
			if PQR_SpellAvailable(115151) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;,115151,&amp;quot;player&amp;quot;)
			and IsSpellInRange(GetSpellInfo(115151),&amp;quot;boss1&amp;quot;) == 1
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and IsUsableSpell(115151) then
				CastSpellByName(tostring(GetSpellInfo(115151)),&amp;quot;boss1&amp;quot;)	 
			end		
			
			--EnvelopingMist
			if PQR_SpellAvailable(124682) 		 
			 and IsSpellInRange(GetSpellInfo(124682),members[1].Unit) == 1		 
			 and (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
			 and IsUsableSpell(124682) then 	
				if UnitBuffID(&amp;quot;boss1&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
				and not UnitBuffID(&amp;quot;boss1&amp;quot;,124682,&amp;quot;player&amp;quot;) --Enveloping Mist
				then					
					if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(124682)),&amp;quot;boss1&amp;quot;)	 
				 	elseif select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) == 0 
				 	and select(2,GetTalentRowSelectionInfo(3)) == 9 
				 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		 		
				 		CastSpellByName(tostring(GetSpellInfo(115399)),&amp;quot;player&amp;quot;)	 
						CastSpellByName(tostring(GetSpellInfo(124682)),&amp;quot;boss1&amp;quot;)	 
					end		 			 		
				end
			end
			
			--ZenSphereSmart
			if PQR_SpellAvailable(124081) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;,124081,&amp;quot;player&amp;quot;)
			and IsSpellInRange(GetSpellInfo(124081),&amp;quot;boss1&amp;quot;) 		
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then									
				CastSpellByName(tostring(GetSpellInfo(124081)),&amp;quot;boss1&amp;quot;)			
			end	
								
			--SurgingMist - need Thunder Focus Tea?
			if PQR_SpellAvailable(116694) 
			and IsUsableSpell(116694) 		
			and IsSpellInRange(GetSpellInfo(116694),&amp;quot;boss1&amp;quot;) == 1 then		
				if UnitBuffID(&amp;quot;player&amp;quot;,118674) then --Vital Mists
					if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(116694)),&amp;quot;boss1&amp;quot;)
					end
				end
				
				if (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
				then		
					if (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
					 then 	
						if UnitBuffID(&amp;quot;boss1&amp;quot;,115175,&amp;quot;player&amp;quot;) --Soothing Mist
						and not UnitCastingInfo(&amp;quot;player&amp;quot;)
						then		
							if PQR_SpellAvailable(116680) --Thunder Focus Tea
							and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then
								if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
								and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
								and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
									CastSpellByName(tostring(GetSpellInfo(116680),&amp;quot;player&amp;quot;))	 								
								end					
							end								
							CastSpellByName(tostring(GetSpellInfo(116694)),&amp;quot;boss1&amp;quot;)
						end
					end
				end
			end
	
			if members[1].HP &amp;gt; 30 --Prevent raid wipe
			and lowhpmembers &amp;lt; 10 then 
				--SoothingMist
				if PQR_SpellAvailable(115175) 
				 and IsUsableSpell(115175) 
				 and not Nova_Moving 			 
				 and IsSpellInRange(GetSpellInfo(115175),&amp;quot;boss1&amp;quot;) == 1 
				 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
					CastSpellByName(tostring(GetSpellInfo(115175)),&amp;quot;boss1&amp;quot;)
				end
			else		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFNOOOOOOOOOOOOOOOOOT Cast GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
				return false
			end
			
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JadeSerpentStatue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--JadeSerpentStatue
if Nova_JadeSerpentStatueCheck then	
	if Nova_Mod() == Nova_JadeSerpentStatue then
		--if IsLeftControlKeyDown() 
		--and not IsLeftShiftKeyDown() 
		--and not GetCurrentKeyBoardFocus() 
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		--and IsSpellKnown(115313)
		and IsUsableSpell(115313) 
		and PQR_SpellAvailable(115313)
		and select(2,GetSpellCooldown(115313)) &amp;lt; 2 
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		--and not UnitExists(&amp;quot;mouseover&amp;quot;)
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
		  CastSpellByName(tostring(GetSpellInfo(115313),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft Control Key Down - Summon Jade Serpent Statue!&amp;quot;)
		  return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpinningCraneKick (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SpinningCraneKick (TC)
if Nova_SpinningCraneKickCheck and Nova_Mod() == Nova_SpinningCraneKick then
--if Nova_SpinningCraneKickCheck then	
	--if Nova_Mod() == Nova_SpinningCraneKick then		
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		if PQR_SpellAvailable(101546) 
		and IsUsableSpell(101546) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			--Spinning Crane Kick
			CastSpellByName(tostring(GetSpellInfo(101546)),nil)
			return true 
		end
	--end
end

if Nova_VSpinningCKickAutoCheck then
	if PQR_SpellAvailable(101546) 
	and IsUsableSpell(101546) 
	and not UnitBuffID(&amp;quot;player&amp;quot;,139597) --Muscle Memory
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 20
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and not LLdebuff then
		 if AverageHealth(Nova_VSpinningCKickLimit) &amp;lt;= Nova_VSpinningCKick then		 	
			local real_b = 0
			if #members &amp;gt; 1 then
				for i=1,#members do		
					if PQR_UnitDistance(&amp;quot;player&amp;quot;,members[i].Unit) and members[i].HP then
						if PQR_UnitDistance(&amp;quot;player&amp;quot;,members[i].Unit) &amp;lt;= 8 
						and not UnitIsUnit(&amp;quot;player&amp;quot;,members[i].Unit) 
						and members[i].HP &amp;lt;= Nova_VSpinningCKick then
							real_b = real_b + 1					
							if real_b &amp;gt;= Nova_VSpinningCKickLimit then
								break
							end									
						end
					end
				end
				if real_b &amp;gt;= Nova_VSpinningCKickLimit 
				and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 3 then
					CastSpellByName(tostring(GetSpellInfo(101546)),nil)
					return true					
				end
			end	
		end
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CracklingJadeLightning (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--CracklingJadeLightning (TC)
if Nova_CracklingJadeLightningCheck then	
	if Nova_Mod() == Nova_CracklingJadeLightning then
		--if IsRightShiftKeyDown()
		--and not GetCurrentKeyBoardFocus()
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		if PQR_SpellAvailable(117952) 
		and IsUsableSpell(117952) 
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		--and members[1].HP &amp;gt; Nova_DPS --Nova_DPS
		--and lowhpmembers &amp;lt; 3
		and UnitExists(&amp;quot;target&amp;quot;) 
		and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
		and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
		--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
		and not Nova_Moving
		and IsSpellInRange(GetSpellInfo(117952),&amp;quot;target&amp;quot;) == 1
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
			--Crackling Jade Lightning
			CastSpellByName(tostring(GetSpellInfo(117952)),&amp;quot;target&amp;quot;)
			return true 
		end
	else
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFWrong 1&amp;quot;) 		
	end		
	
else
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFWrong 2&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LifeCocoon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--LifeCocoon
if Nova_LifeCocoonCheck then
	if PQR_SpellAvailable(116849) 	 
 	 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation	 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and select(2,GetSpellCooldown(116849)) &amp;lt; 2
	 --and GetSpellCooldown(33206) == 0
	 and UnitThreatSituation(members[1].Unit) == 3
	 and IsUsableSpell(116849)
	 and CanHeal(members[1].Unit)
	 and IsSpellInRange(GetSpellInfo(116849),members[1].Unit) == 1 then
		if members[1].HP &amp;lt; Nova_LifeCocoon 		
		and UnitIsPlayer(members[1].Unit)
		then 
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end			
			--SpellStopCasting()
		 	PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLifeCocoon - HP: &amp;quot; ..members[1].HP) 	
		 	CastSpellByName(tostring(GetSpellInfo(116849)),members[1].Unit)	
		 	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Revival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Revival
if Nova_RevivalCheck then
	if PQR_SpellAvailable(115310)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation	
	and select(2,GetSpellCooldown(115310)) &amp;lt; 2
	and IsUsableSpell(115310) 
	--and not UnitChannelInfo(&amp;quot;player&amp;quot;)== ZenMedic
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and not LLdebuff then	
		if AverageHealth(Nova_RevivalLimit) &amp;lt;= Nova_Revival then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end			
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRevival - Raid HP: &amp;quot;..AverageHealth(4))		
			CastSpellByName(tostring(GetSpellInfo(115310)),&amp;quot;player&amp;quot;)	
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ManaTea</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ManaTea
if Nova_ManaTeaCheck then
	if PQR_SpellAvailable(115294)
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning 
	then
		if UnitBuffID(&amp;quot;player&amp;quot;, 115867) then --Mana Tea buff
			if (select(4, UnitBuffID(&amp;quot;player&amp;quot;, 115867)) &amp;gt;= Nova_ManaTeaLimit --Nova_ManaTeaLimit
			 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ManaTea) --Nova_ManaTea		 
			 or UnitBuffID(&amp;quot;player&amp;quot;,64904) --Hymm of Hope
			 or select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_LowMana 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Nova_LowMana
			 	--CastSpellByName(GetSpellInfo(115294), &amp;quot;player&amp;quot;)
			 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FF ManaTea&amp;quot;)
			 	CastSpellByName(tostring(GetSpellInfo(115294)),&amp;quot;player&amp;quot;)	
			 	return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Detox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Detox
if Nova_DispelRaidCheck then	
	if Nova_Mod() == Nova_DispelRaid then
		if PQR_SpellAvailable(115450)
		and select(2,GetSpellCooldown(115450)) &amp;lt; 2
		--and IsLeftAltKeyDown() 
		--and not IsLeftShiftKeyDown() 
		and IsUsableSpell(115450)
		and not GetCurrentKeyBoardFocus() 
		and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
			if members[1].HP &amp;gt; Nova_Detox then --Nova_Detox
				for i=1, #members do
					if ValidDispel(members[i].Unit) 
					and CanHeal(members[i].Unit)
					and not UnitCastingInfo(&amp;quot;player&amp;quot;)
					and IsSpellInRange(GetSpellInfo(115450),members[i].Unit) == 1 then
						PQR_CustomTarget = members[i].Unit
						CastSpellByName(tostring(GetSpellInfo(115450)),members[i].Unit)
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft alt key down - Auto dispeled!&amp;quot;)
						return true
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Detox Mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Detox Mouseover
if Nova_DispelRaidCheck then	
	if Nova_Mod() == Nova_DispelRaid then
		if PQR_SpellAvailable(115450) 
		and select(2,GetSpellCooldown(115450)) &amp;lt; 2
		and UnitExists(&amp;quot;mouseover&amp;quot;)
		and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		and IsUsableSpell(115450)
		and IsSpellInRange(GetSpellInfo(115450),&amp;quot;mouseover&amp;quot;) == 1
		and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) then
			if ValidDispel(&amp;quot;mouseover&amp;quot;) 
			and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and CanHeal(&amp;quot;mouseover&amp;quot;) then		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto dispeled!&amp;quot;)
				CastSpellByName(tostring(GetSpellInfo(115450)),&amp;quot;mouseover&amp;quot;)
				return true	
			end		
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LegacyOfTheEmperor</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--LegacyOfTheEmperor
if not UnitBuffID(&amp;quot;player&amp;quot;,1126)
and not UnitBuffID(&amp;quot;player&amp;quot;,20217)
and not UnitBuffID(&amp;quot;player&amp;quot;,90363)
and not UnitBuffID(&amp;quot;player&amp;quot;,115921) 
and PQR_SpellAvailable(115921)
and IsUsableSpell(115921) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then
	CastSpellByName(tostring(GetSpellInfo(115921)),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingSphere (TC)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--HealingSphere (TC)
if Nova_HealingSphereCheck then	
	if Nova_Mod() == Nova_HealingSphere then
		--if IsRightAltKeyDown() 
		--and not GetCurrentKeyBoardFocus() 
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		--and IsSpellKnown(115460) 
		and PQR_SpellAvailable(115460)
		--and select(2,GetSpellCooldown(115460)) &amp;lt; 2 
		and GetSpellCooldown(115460) == 0
		and IsUsableSpell(115460)
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
		  CastSpellByName(tostring(GetSpellInfo(115460),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Alt Key Down - Healing Sphere!&amp;quot;)
		  return true
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SoothingMist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SoothingMist
local mdps = false
if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and Nova_DPSCheck
and UnitExists(&amp;quot;target&amp;quot;) 
--and members[1].HP &amp;gt; Nova_SoothingMist
--and UnitBuffID(&amp;quot;player&amp;quot;,139597) --Muscle Memory
and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work		
and IsSpellInRange(GetSpellInfo(100787),&amp;quot;target&amp;quot;) == 1	
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
	mdps = true
end
	
if Nova_SoothingMistCheck and not mdps then
	 --if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	 if PQR_SpellAvailable(115175) 
	 and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning	 
	 --and lowhpmembers &amp;lt; 3
	 and IsUsableSpell(115175) 
	 and not Nova_Moving 
	 and not UnitBuffID(&amp;quot;player&amp;quot;,131523) --Zen Meditation
	 and CanHeal(members[1].Unit)
	 and IsSpellInRange(GetSpellInfo(115175),members[1].Unit) == 1 
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	 and not stopcasting then				
	 	if members[1].HP &amp;lt;= Nova_SoothingMist --SoothingMist4Chi
	 	and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4 then
			PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(115175)),members[1].Unit)		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Soothing Mist - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
			return true
		elseif members[1].HP &amp;lt;= Nova_SoothingMist4Chi
		and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 15  --mana
		and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 4 then  
			PQR_CustomTarget = members[1].Unit	
			CastSpellByName(tostring(GetSpellInfo(115175)),members[1].Unit)		
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Soothing Mist 4C - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit))			
			return true		
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SurgingMist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SurgingMist
if Nova_SurgingMistCheck then
	if PQR_SpellAvailable(116694) 
	and IsUsableSpell(116694) 
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and IsSpellInRange(GetSpellInfo(116694),members[1].Unit) == 1
	and CanHeal(members[1].Unit) 
	and not stopcasting then
		if members[1].HP &amp;lt; Nova_SurgingMistInstant --Nova_SurgingMistInstant
		and UnitBuffID(&amp;quot;player&amp;quot;,118674) then --Vital Mists
			if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				if Nova_TFTeaSurgingMistCheck then
					if PQR_SpellAvailable(116680) --Thunder Focus Tea
					and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then					
						if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
						and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1 
						and members[1].HP &amp;lt;= Nova_TFTeaSurgingMist 
						and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
							CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then SurgingMist - HP: &amp;quot;..members[1].HP)
						end		
					end					
				end			
				PQR_CustomTarget = members[1].Unit
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInstant Surging Mist - HP: &amp;quot; ..members[1].HP)
				CastSpellByName(tostring(GetSpellInfo(116694)),members[1].Unit)
				return true
			end
		end
		
		if members[1].HP &amp;lt; Nova_SurgingMist --Nova_SurgingMist
		and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; (Nova_LowMana-5)) then --Nova_LowMana
			if (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
			 then 	
				if UnitBuffID(members[1].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist		
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				then		
					if Nova_TFTeaSurgingMistCheck then
						if PQR_SpellAvailable(116680) --Thunder Focus Tea
						and not UnitBuffID(&amp;quot;player&amp;quot;,116680) then					
							if select(2,GetSpellCooldown(116680)) &amp;lt; 2 
							and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1 
							and members[1].HP &amp;lt;= Nova_TFTeaSurgingMist 
							and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
								CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
								--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then SurgingMist - HP: &amp;quot;..members[1].HP)
							end		
						end					
					end							
				 	PQR_CustomTarget = members[1].Unit
				 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSurging Mist - HP: &amp;quot; ..members[1].HP)
				 	CastSpellByName(tostring(GetSpellInfo(116694)),members[1].Unit)
				 	return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>EnvelopingMist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--EnvelopingMist
if Nova_EnvelopingMistCheck then
	if members[1].HP &amp;lt; Nova_EnvelopingMist 
	and not stopcasting then
	--and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; (Nova_LowMana-5)) then --Nova_EnvelopingMist
		if PQR_SpellAvailable(124682) 
		 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		 and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		 and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		 and IsSpellInRange(GetSpellInfo(124682),members[1].Unit) == 1
		 and CanHeal(members[1].Unit)
		 and (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175)) --Soothing Mist
		 and IsUsableSpell(124682) then 	
			if UnitBuffID(members[1].Unit,115175,&amp;quot;player&amp;quot;) --Soothing Mist
			and not UnitBuffID(members[1].Unit,124682,&amp;quot;player&amp;quot;) --Enveloping Mist
			then					
				if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			 		PQR_CustomTarget = members[1].Unit
			 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast EM - HP: &amp;quot; ..members[1].HP)
			 		CastSpellByName(tostring(GetSpellInfo(124682)),members[1].Unit)
			 		return true
			 	elseif select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) == 0 
			 	and select(2,GetTalentRowSelectionInfo(3)) == 9 
			 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		 		
			 		CastSpellByName(tostring(GetSpellInfo(115399),nil))	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Chi Brew then EM - HP: &amp;quot; ..members[1].HP)
					PQR_CustomTarget = members[1].Unit
					CastSpellByName(tostring(GetSpellInfo(124682)),members[1].Unit)
			 		return true	
				end		 			 		
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>StanceOfTheWiseSerpent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--StanceOfTheWiseSerpent
if GetShapeshiftForm()~=1 
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	CastShapeshiftForm(1)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ExpelHarm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 4
and (Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 90 or Nova_SpamExpelHarmCheck)
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
--and IsSpellInRange(GetSpellInfo(100780),&amp;quot;target&amp;quot;) == 1
and PQR_SpellAvailable(115072) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(115072) then	
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FF ExpelHarm&amp;quot;)
	CastSpellByName(tostring(GetSpellInfo(115072),nil))
	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ( Nova_Mod() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
 or IsMounted()
 or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChiBurstSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ChiBurst
--if Nova_SmartCheck 
if select(2,GetTalentRowSelectionInfo(2)) == 6 then				
		local MaddeningShoutDebuff  = false
		if checkbossid(60708) then --Meng the Demented	
			for i=1, #members do	
				if UnitDebuffID(members[i].Unit, 117708) then
					MaddeningShoutDebuff = true
				end
			end
		end			
		
		if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		and AverageHealth(Nova_ChiBurstLimit) &amp;lt;= Nova_ChiBurst 
		and not stopcasting 
		and not LLdebuff then
		--and lowhpmembers &amp;gt;= Nova_ChiBurstLimit then
			PRGetDistanceTable(Nova_ChiBurst, 10, Nova_ChiBurstLimit)	
			PRGetDistanceTablebyHP(Nova_ChiBurst,Nova_ChiBurstLimit)
												
			if Nova_ChiBurstCheck
			and MaddeningShoutDebuff == false				
			and PQR_SpellAvailable(123986) 
			and not Nova_Moving	then						
				if IsSpellInRange(GetSpellInfo(123986),prdistancebyhp[1].Unit) 
				and CanHeal(prdistancebyhp[1].Unit)
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and (prdistancebyhp[1].PD &amp;gt;= Nova_ChiBurstLimit)
				and prdistancebyhp[1].HP &amp;lt;= Nova_ChiBurst then									
					CastSpellByName(tostring(GetSpellInfo(123986)),prdistancebyhp[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Chi Burst - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD) 
					return true
				end					
			end
		end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Only takes effect when we&amp;apos;re 90
--if UnitLevel(&amp;quot;player&amp;quot;) == 90
 if not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
 and Nova_CheckLastCast(6, 2) then
 	--if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	--end
	-- If we are in a 5 man instance
	if IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Party (VachiusaMist)&amp;quot;)	
	-- If we are in a 10m raid 
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid10 (VachiusaMist)&amp;quot;)
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid25 (VachiusaMist)&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_UpliftCount&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_Uplift&amp;quot;, 90)  
	SetCVar(&amp;quot;Nova_TFTeaUplift&amp;quot;, 4)  		
	SetCVar(&amp;quot;Nova_ChiBurstLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_ChiBurst&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_ZenSphereLimit&amp;quot;, 1)  
	SetCVar(&amp;quot;Nova_ZenSphere&amp;quot;, 85)  		
	SetCVar(&amp;quot;Nova_ChiWaveLimit&amp;quot;, 2)  
	SetCVar(&amp;quot;Nova_ChiWave&amp;quot;, 85)  	
	SetCVar(&amp;quot;Nova_RevivalLimit&amp;quot;, 4)  
	SetCVar(&amp;quot;Nova_Revival&amp;quot;, 60)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaMist)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_UpliftCount&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_Uplift&amp;quot;, 90)  
	SetCVar(&amp;quot;Nova_TFTeaUplift&amp;quot;, 4)  
	SetCVar(&amp;quot;Nova_ChiBurstLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_ChiBurst&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_ZenSphereLimit&amp;quot;, 1)  
	SetCVar(&amp;quot;Nova_ZenSphere&amp;quot;, 85)  		
	SetCVar(&amp;quot;Nova_ChiWaveLimit&amp;quot;, 2)  
	SetCVar(&amp;quot;Nova_ChiWave&amp;quot;, 85)	
	SetCVar(&amp;quot;Nova_RevivalLimit&amp;quot;, 4)  
	SetCVar(&amp;quot;Nova_Revival&amp;quot;, 60)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) 
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaMist)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_UpliftCount&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_Uplift&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_TFTeaUplift&amp;quot;, 4)  
	SetCVar(&amp;quot;Nova_ChiBurstLimit&amp;quot;, 4)  
	SetCVar(&amp;quot;Nova_ChiBurst&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_ZenSphereLimit&amp;quot;, 2)  
	SetCVar(&amp;quot;Nova_ZenSphere&amp;quot;, 85)  		
	SetCVar(&amp;quot;Nova_ChiWaveLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_ChiWave&amp;quot;, 85)	
	SetCVar(&amp;quot;Nova_RevivalLimit&amp;quot;, 8)  
	SetCVar(&amp;quot;Nova_Revival&amp;quot;, 60)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_UpliftCount&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_Uplift&amp;quot;, 90)  
	SetCVar(&amp;quot;Nova_TFTeaUplift&amp;quot;, 4)  
	SetCVar(&amp;quot;Nova_ChiBurstLimit&amp;quot;, 5)  
	SetCVar(&amp;quot;Nova_ChiBurst&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_ChiWaveLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_ChiWave&amp;quot;, 85)	
	SetCVar(&amp;quot;Nova_ZenSphereLimit&amp;quot;, 2)  
	SetCVar(&amp;quot;Nova_ZenSphere&amp;quot;, 85)  			
	SetCVar(&amp;quot;Nova_RevivalLimit&amp;quot;, 16)  
	SetCVar(&amp;quot;Nova_Revival&amp;quot;, 60)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5)
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaMist)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ResAndMRes</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitIsConnected(&amp;quot;mouseover&amp;quot;)
and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 			
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and not UnitHasIncomingResurrection(&amp;quot;mouseover&amp;quot;) 
then		
	if PQR_SpellAvailable(83968) 		
	and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(95223)) ----Mass Resurrection debuff
	--and (IsSpellInRange(GetSpellInfo(83968),&amp;quot;mouseover&amp;quot;) == 1) - not work?
	--and UnitInRange(&amp;quot;mouseover&amp;quot;) 
	and Nova_CheckLastCast(83968, 2.0)		
	then
		if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
		end
		local deadnum = 0
		if group then
			for i = 1, GetNumGroupMembers() do 
				local member = group..i
				if UnitIsDeadOrGhost(member) then
					if not UnitDebuff(member, GetSpellInfo(95223)) then ----Mass Resurrection debuff 
						deadnum = deadnum + 1
					end
				end
			end
		end		
		if deadnum &amp;gt;= 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(83968),nil)) --Mass Resurrection	 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto MasRes!&amp;quot;)
			return false		
		end
	end
	
	if PQR_SpellAvailable(115178)
	and IsUsableSpell(115178) 	
	and Nova_CheckLastCast(115178, 2.0)	
	and (IsSpellInRange(GetSpellInfo(115178),&amp;quot;mouseover&amp;quot;) == 1) 		
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 
		CastSpellByName(tostring(GetSpellInfo(115178)),&amp;quot;mouseover&amp;quot;) --Resurrection	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto Res!&amp;quot;)
		return false			
	end			
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RenewingMistSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RenewingMistSmart
--if Nova_SmartCheck then	
	if Nova_RenewingMistCheck then
		if PQR_SpellAvailable(115151) 
		and IsUsableSpell(115151)
		and select(2,GetSpellCooldown(115151)) &amp;lt; 2 
		and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
		then
			--and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= Nova_LowMana 			
			if members[1].HP &amp;lt;= Nova_RenewingMistTank then
			--and lowhpmembers &amp;gt;= 3 then 
				PRGetDistanceTablebuff(Nova_RenewingMistTank, 40, 2, 115151)	
				PRGetDistanceTablebyHPbuff(Nova_RenewingMistTank,2)					
				if IsSpellInRange(GetSpellInfo(115151),prdistancebyhpbuff[1].Unit) 
				and CanHeal(prdistancebyhpbuff[1].Unit)
				and (prdistancebyhpbuff[1].PD &amp;gt;= 2) then
					if (UnitThreatSituation(prdistancebyhpbuff[1].Unit) == 3 and prdistancebyhpbuff[1].HP &amp;lt;= Nova_RenewingMistTank) or prdistancebyhpbuff[1].HP &amp;lt;= Nova_RenewingMist 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then			
						CastSpellByName(tostring(GetSpellInfo(115151)),prdistancebyhpbuff[1].Unit)
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew member - HP: &amp;quot;..prdistancebyhpbuff[1].HP)
						return true
					end				
				elseif Nova_SpamRenewingMistCheck 
				and not UnitBuffID(members[1].Unit,115151,&amp;quot;player&amp;quot;)	
				and IsSpellInRange(GetSpellInfo(115151),members[1].Unit) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and CanHeal(members[1].Unit) then
					CastSpellByName(tostring(GetSpellInfo(115151)),members[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew2 member - HP: &amp;quot;..members[1].HP)
					return true				
				end								
			end		
		end
	end
--end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>UpliftSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--UpliftSmart
--if Nova_SmartCheck then				
		if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		then
			
			local upliftcount=0
			local rmcount=0
			for i=1, #members do
				if UnitBuffID(members[i].Unit,115151,&amp;quot;player&amp;quot;)				
				then 	
					rmcount = rmcount + 1	
					if members[i].HP &amp;lt;= Nova_Uplift then
						upliftcount = upliftcount + 1
					end
				end
			end		
																	
			if PQR_SpellAvailable(116670)			
			and Nova_UpliftCheck 
			and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 
			and not LLdebuff then
				if (upliftcount &amp;gt;= Nova_UpliftCount --Nova_UpliftCount
				and ((select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2) and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_LowMana)))
				or (select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4
				and (upliftcount &amp;gt;= (Nova_UpliftCount-1))) then 
					if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 1 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;)
					and (upliftcount &amp;gt;= (Nova_UpliftCount+1))
					and select(2,GetTalentRowSelectionInfo(3)) == 9 then		 		
						CastSpellByName(tostring(GetSpellInfo(115399),nil))	 
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Chi Brew then UpLift&amp;quot;)				
					end				
					
					if PQR_SpellAvailable(116680) --Thunder Focus Tea
					and not UnitBuffID(&amp;quot;player&amp;quot;,116680) 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;)
					and select(2,GetSpellCooldown(116680)) &amp;lt; 2 
					and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
					and ((upliftcount &amp;gt;= Nova_TFTeaUplift and Nova_TFTeaUpliftCheck) 
						or (rmcount &amp;gt;= Nova_TFTReM and Nova_TFTReMCheck)) then
						CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then Uplift - UpliftCount: &amp;quot; ..upliftcount) 
					end						
					
					if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(116670),nil))	 
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Uplift - UpliftCount: &amp;quot; ..upliftcount) 
						return true
					end
				end			
			end
		end	
--end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChiWaveSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ChiWaveSmart
--if Nova_SmartCheck 
if select(2,GetTalentRowSelectionInfo(2)) == 4 then				
		local MaddeningShoutDebuff  = false
		if checkbossid(60708) then --Meng the Demented	
			for i=1, #members do	
				if UnitDebuffID(members[i].Unit, 117708) then
					MaddeningShoutDebuff = true
				end
			end
		end			
		
		if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		--and lowhpmembers &amp;gt;= Nova_ChiWaveLimit then
		and AverageHealth(Nova_ChiWaveLimit) &amp;lt;= Nova_ChiWave 
		and not LLdebuff then			
			PRGetDistanceTable(Nova_ChiWave,20,Nova_ChiWaveLimit)	
			PRGetDistanceTablebyHP(Nova_ChiWave,Nova_ChiWaveLimit)
												
			if Nova_ChiWaveCheck
			and MaddeningShoutDebuff == false				
			and PQR_SpellAvailable(115098) 
			and not Nova_Moving	then						
				if IsSpellInRange(GetSpellInfo(115098),prdistancebyhp[1].Unit) 
				and CanHeal(prdistancebyhp[1].Unit)
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and (prdistancebyhp[1].PD &amp;gt;= Nova_ChiWaveLimit)
				and prdistancebyhp[1].HP &amp;lt;= Nova_ChiWave then									
					CastSpellByName(tostring(GetSpellInfo(115098)),prdistancebyhp[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Nova_ChiWave - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD) 
					return true
				end					
			end
		end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ZenSphereSmart</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ZenSphereSmart
--if Nova_SmartCheck 
if select(2,GetTalentRowSelectionInfo(2)) == 5 then				
		local MaddeningShoutDebuff  = false
		if checkbossid(60708) then --Meng the Demented	
			for i=1, #members do	
				if UnitDebuffID(members[i].Unit, 117708) then
					MaddeningShoutDebuff = true
				end
			end
		end			
		
		local zsc = 0
		if UnitBuffID(&amp;quot;boss1&amp;quot;,124081,&amp;quot;PLAYER&amp;quot;) then
			zsc = zsc + 1
		end
		for i=1, #members do	
			if UnitBuffID(members[i].Unit,124081,&amp;quot;PLAYER&amp;quot;) then
				zsc = zsc + 1
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield on: &amp;quot;..UnitName(members[i].Unit))
			end
		end
		
		if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
		and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
		and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		--and lowhpmembers &amp;gt;= Nova_ZenSphereLimit		
		and AverageHealth(Nova_ZenSphereLimit) &amp;lt;= Nova_ZenSphere
		and zsc &amp;lt; 2
		then
			
			PRGetDistanceTable(Nova_ZenSphere,10,Nova_ZenSphereLimit)	
			PRGetDistanceTablebyHP(Nova_ZenSphere,Nova_ZenSphereLimit)
												
			if Nova_ZenSphereCheck
			and MaddeningShoutDebuff == false				
			and PQR_SpellAvailable(124081) 
			and not Nova_Moving	then						
				if IsSpellInRange(GetSpellInfo(124081),prdistancebyhp[1].Unit) 
				and CanHeal(prdistancebyhp[1].Unit)
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and (prdistancebyhp[1].PD &amp;gt;= Nova_ZenSphereLimit)
				and prdistancebyhp[1].HP &amp;lt;= Nova_ZenSphere then									
					CastSpellByName(tostring(GetSpellInfo(124081)),prdistancebyhp[1].Unit)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Zen Sphere - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - total around: &amp;quot;..prdistancebyhp[1].PD) 
					return true
				end					
			end
		end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:Jab</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Jab
--if Nova_DPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 1		
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	and UnitExists(&amp;quot;target&amp;quot;) 
	and PQR_SpellAvailable(100780) 
	and IsUsableSpell(100780)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and IsSpellInRange(GetSpellInfo(100780),&amp;quot;target&amp;quot;) == 1
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then		
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FF Jab&amp;quot;)
		CastSpellByName(tostring(GetSpellInfo(100780)),&amp;quot;target&amp;quot;)
		return true 
	end
--end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:RM</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RenewingMistMM
if PQR_SpellAvailable(115151) 
and IsUsableSpell(115151)
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 										
	if IsSpellInRange(GetSpellInfo(115151),members[1].Unit) 
	and CanHeal(members[1].Unit)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then			
		CastSpellByName(tostring(GetSpellInfo(115151)),members[1].Unit)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew member - HP: &amp;quot;..members[1].HP)
		return true
	elseif not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		CastSpellByName(tostring(GetSpellInfo(115151)),nil)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew Player&amp;quot;)
		return true		
	end											
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:BoK</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--TPnBoK
if UnitAffectingCombat(&amp;quot;player&amp;quot;)
--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
--and UnitBuffID(&amp;quot;player&amp;quot;,139597) --Muscle Memory
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
and UnitExists(&amp;quot;target&amp;quot;)
and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2
and not LineOfSight(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		if not UnitBuffID(&amp;quot;player&amp;quot;,127722) then --Serpent&amp;apos;s Zeal		
			if PQR_SpellAvailable(100784)
			and IsUsableSpell(100784)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
			and IsSpellInRange(GetSpellInfo(100784),&amp;quot;target&amp;quot;) == 1	then 		
				CastSpellByName(tostring(GetSpellInfo(100784)),&amp;quot;target&amp;quot;)
				return true				
			end			
		else
			if ((select(7, UnitBuffID(&amp;quot;player&amp;quot;, 127722)) - GetTime()) &amp;lt;= 2) --Serpent&amp;apos;s Zeal Timer
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 			
			and PQR_SpellAvailable(100784)
			and IsUsableSpell(100784)
			and IsSpellInRange(GetSpellInfo(100784),&amp;quot;target&amp;quot;) == 1	then 
				CastSpellByName(tostring(GetSpellInfo(100784)),&amp;quot;target&amp;quot;)
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FF BlackoutKick&amp;quot;)
				return true							
			elseif PQR_SpellAvailable(100787) 
			and IsUsableSpell(100787)
			--and Nova_CheckLastCast(100787, 1.0)			
			and IsSpellInRange(GetSpellInfo(100787),&amp;quot;target&amp;quot;) == 1
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FF TigerPalm for Muscle Memory&amp;quot;)	
				CastSpellByName(tostring(GetSpellInfo(100787)),&amp;quot;target&amp;quot;)
				return true 									
			end
		end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:SM</Name><Default>false</Default><SpellID>116694</SpellID><Actions></Actions><Lua>--SurgingMistMM
if not Nova_DPSCheck
--or members[1].HP &amp;lt;= Nova_SoothingMist 
then
	return true
end

if PQR_SpellAvailable(116694) 
and IsUsableSpell(116694) 
and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
--and Nova_CheckLastCast(116694, 2.0)
and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 1
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if UnitBuffID(&amp;quot;player&amp;quot;,118674) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Vital Mists
		if IsSpellInRange(GetSpellInfo(116694),members[1].Unit) == 1
		and CanHeal(members[1].Unit) then					
			if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 then		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInstant Surging Mist - HP: &amp;quot; ..members[1].HP)
				--CastSpellByName(tostring(GetSpellInfo(116694)),members[1].Unit)
				PQR_CustomTarget = members[1].Unit
				return true
			end
		else	
			if select(4, UnitBuffID(&amp;quot;player&amp;quot;,118674)) == 5 then	
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInstant Surging Mist - HP: &amp;quot; ..members[1].HP)
				--CastSpellByName(tostring(GetSpellInfo(116694)),nil)
				return true				
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:TP</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>--TigerPalm
--if Nova_DPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	--and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) == 3
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
	and UnitExists(&amp;quot;target&amp;quot;) 
	and PQR_SpellAvailable(100787) 
	and IsUsableSpell(100787)
	--and UnitBuffID(&amp;quot;player&amp;quot;,139597) --Muscle Memory
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	--and Nova_CheckLastCast(100787, 1.0)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work		
	and IsSpellInRange(GetSpellInfo(100787),&amp;quot;target&amp;quot;) == 1	
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		if not UnitCastingInfo(&amp;quot;player&amp;quot;) 
		and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 2 then
		--and UnitBuffID(&amp;quot;player&amp;quot;, 139598) then --Muscle Memory			
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FF TigerPalm for Muscle Memory&amp;quot;)	
			--CastSpellByName(tostring(GetSpellInfo(100787)),&amp;quot;target&amp;quot;)
			return true 		
		end				
	end
--end</Lua><RecastDelay>300</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DPS:AutoTarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoTarget
if Nova_AutoTargetCheck then	
	if (not UnitExists(&amp;quot;focus&amp;quot;)
		or UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		or not UnitInRange(&amp;quot;focus&amp;quot;) 
		or not UnitIsConnected(&amp;quot;focus&amp;quot;)
		or not UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))	
	and #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
			and CanHeal(Nova_Tanks[i].Unit) then			
	   			TargetUnit(Nova_Tanks[i].Unit)            		
	    		RunMacroText(&amp;quot;/focus&amp;quot;)			
	            RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)			
			end
		end
	end
	
	if UnitExists(&amp;quot;focus&amp;quot;)
	and not Nova_Moving
	--and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;) or (UnitExists(&amp;quot;target&amp;quot;) and not UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) and not (IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1 )))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;))
	and not UnitIsDeadOrGhost(&amp;quot;focustarget&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	and UnitExists(&amp;quot;focustarget&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;)
	and IsSpellInRange(GetSpellInfo(100780),&amp;quot;focustarget&amp;quot;) == 1
	and not PQR_IsOutOfSight(&amp;quot;focustarget&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;) --Elegon not work
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		TargetUnit(&amp;quot;focustarget&amp;quot;)
		--AttackTarget()
		return false 	
	elseif UnitExists(&amp;quot;target&amp;quot;) 
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;) then
		if IsSpellInRange(GetSpellInfo(6603),&amp;quot;target&amp;quot;) == 1 then		
			AttackTarget()
			return false 			
		else
			StopAttack()
			return false 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Drink</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
--and GetItemCount(80618,false,true) &amp;gt; 0	
and PQR_SpellAvailable(80618) --Mage cookies	
and not UnitBuffID(&amp;quot;player&amp;quot;, 104269)
and not Nova_Moving 
and GetItemCooldown(80618) == 0 then
	UseItemByName(80618)
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMage cookies - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- NewEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then
	local boss,bossid = bossid()
	local dispelid = 115450		
	local buff = { }
	stopcasting = false
	stopfade = false
	LLdebuff = false
	LLdebuffunit = false	
	if UnitExists(boss) then
		local _, _, rdifficulty = GetInstanceInfo()
		--TFT raid		
		if bossid == 69465 and (rdifficulty == 5 or rdifficulty ==6) then --Jin&amp;apos;rokh the Breaker
			local buff = { 138732 } --Ionization 
			local fluiditydebuff  = 138002 --Fluidity
			RaidJBDispel(dispelid,buff,fluiditydebuff,5)
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 
		elseif bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68476 then --Horridon
			--local buff  = { 136708, 136719, 136587, 136710, 136512 } --Magic, Magic, Poison, Disease, Curse
			local buff  = { 136708, 136719, 136587, 136710 }
			RaidDispel(dispelid,buff) 
			--heroic Horridon
			if UnitDebuffID(&amp;quot;player&amp;quot;,140946) --Dire Fixation from Direhorn Spirit - npcid: 70688
			--UnitDebuff(&amp;quot;player&amp;quot;, &amp;quot;Dire Fixation&amp;quot;)
			then			
				local specialtarget = &amp;quot;Direhorn Spirit&amp;quot;
				if UnitExists(&amp;quot;target&amp;quot;)
				and UnitName(&amp;quot;target&amp;quot;) == specialtarget then	
					local dis2DS = PQR_UnitDistance(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
					if dis2DS and dis2DS &amp;lt;= 10 then
						if UnitChannelInfo(&amp;quot;player&amp;quot;) ~= GetSpellInfo(117952) then
							CastSpellByName(tostring(GetSpellInfo(117952)),&amp;quot;target&amp;quot;) --CracklingJadeLightning				
						else
							SpellStopCasting()
						end													
						return true 			
					else
						if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952) then
							SpellStopCasting()
						end
					end		
				end
			end				
		elseif bossid == 68065 or bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head 
		-- Players affected by  Cinders should be quick to run over any existing  Icy Ground void zones, and then move to a safe location (out of the way of the raid) to be dispelled.		
			local buff  = { 139822 } 	
			RaidRangeDispel(dispelid,buff,10) 		
		elseif bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispelDelay(dispelid,buff,5)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end			
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then 
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff) --Protectors of the Endless, Lightning Prison
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		--else
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFBossid: &amp;quot;..bossid..&amp;quot; - boss: &amp;quot;..boss)
		end		
		
		if bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- OldEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_OldEventsCheck then --Old raid
	local boss,bossid = bossid()
	if UnitExists(boss) then					
		if bossid == 55294 then
			local PQ_SN = PQ_Shrapnel
			local PQ_FL = PQ_FadingLight
			local PQ_HOT = PQ_HourOfTwilight				
		
			-- Fading Light Debuff
			for i=1,#PQ_FL do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
			
			-- Hour of Twilight
			--if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() then	
			if false then
				if PQR_SpellAvailable(115176)
				and select(2,GetSpellCooldown(115176)) &amp;lt; 2
				then SpellStopCasting() CastSpellByName(tostring(GetSpellInfo(115176)),&amp;quot;player&amp;quot;) return true end
			else
				local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(boss) 
				for i=1,#PQ_HOT do
					if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					end
				end
			end
		end
		
		if bossid == 56173 then
			-- Target for Shrapnel
			for i=1,#PQ_SN do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i])) - GetTime() &amp;lt; 2 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RacialsCheck
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then

	local PQ_Class = select(2, UnitClass(&amp;quot;player&amp;quot;)) 
	
	--Draenei 
	local GiftOfTheNaaru = 59542	
	--Blood Elf
	local ArcaneTorrent = 28730 --mana regen
	
	if PQ_Class == &amp;quot;PALADIN&amp;quot; then
		GiftOfTheNaaru = 59542	
	elseif PQ_Class == &amp;quot;MONK&amp;quot; then 
		GiftOfTheNaaru = 121093
		ArcaneTorrent = 129597 --chi regen
	elseif PQ_Class == &amp;quot;PRIEST&amp;quot; then  
		GiftOfTheNaaru = 59544
	elseif PQ_Class == &amp;quot;SHAMAN&amp;quot; then 
		GiftOfTheNaaru = 59547
	end

	--Troll 
	local Berserking = 26297 
	--Undead
	local WillOfTheForsaken = 7744  
	--Dwarven 
	local Stoneform = 20594 
	--Human 
	local EveryManForHimself = 59752
	--Undead 
	--local Cannibalize = 20577 --not much helpful
	--Orc 
	local BloodFury = 33702
	--Gloves Engineer
	local _, GECooldown, GEReady = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10)
			
	--HP
	if IsSpellKnown(GiftOfTheNaaru) 
	and GetSpellCooldown(GiftOfTheNaaru) == 0 
	and PQR_SpellAvailable(GiftOfTheNaaru)
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30	
	then		
		CastSpellByName(tostring(GetSpellInfo(GiftOfTheNaaru),nil))	 
		return true 
	end
	
	--Mana
	if IsSpellKnown(ArcaneTorrent) 
	and PQ_Class ~= &amp;quot;MONK&amp;quot;
	and GetSpellCooldown(ArcaneTorrent) == 0 
	and PQR_SpellAvailable(ArcaneTorrent)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80	
	then		
		CastSpellByName(tostring(GetSpellInfo(ArcaneTorrent),nil))	 
		return true 
	end	
  	
  	--CDs
  	if not racialcds then
	  	function racialcds()
			if IsSpellKnown(BloodFury) 
			and GetSpellCooldown(BloodFury) == 0 
			and PQR_SpellAvailable(BloodFury)	
			then		
				CastSpellByName(tostring(GetSpellInfo(BloodFury),nil))	 
				return true 
			elseif IsSpellKnown(Berserking) 
			and GetSpellCooldown(Berserking) == 0 
			and PQR_SpellAvailable(Berserking)	
			then		
				CastSpellByName(tostring(GetSpellInfo(Berserking),nil))	 
				return true 
			elseif GECooldown == 0 
			and GEReady == 1 then
				UseInventoryItem(10)
			end
		end
	end
  	
  	if lowhpmembers &amp;gt;=5 then
  		racialcds()
  	end
  	
  	--Removes any Charm, Fear and Sleep effect
	if not GotFear then
		function GotFear(t) 
			local debuff = { 10326, 8122, 2094, 5782, 5484, 6358, 5246 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end
	if IsSpellKnown(WillOfTheForsaken) 
	and GetSpellCooldown(WillOfTheForsaken) == 0 
	and PQR_SpellAvailable(WillOfTheForsaken)	
	and GotFear(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(WillOfTheForsaken),nil))	 
		return true 
	end  
	
	--Removes all poison, disease and bleed effects and reduces all damage taken by 10% for 8 sec
	if not GotPoison then
		function GotPoison(t)
			local i, debuff = 1, select(5,UnitDebuff(t, 1)) 
			while debuff do
				if debuff == &amp;quot;Poison&amp;quot; or debuff == &amp;quot;Disease&amp;quot; then return true end
				i = i + 1 debuff = select(5,UnitDebuff(t, i)) 
			end
		end
	end	
	if IsSpellKnown(Stoneform) 
	and GetSpellCooldown(Stoneform) == 0 
	and PQR_SpellAvailable(Stoneform)	
	and GotPoison(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(Stoneform),nil))	 
		return true 
	end    	
	
	--Removes all movement impairing effects and all effects which cause loss of control of your character
	if not LostControl then
		function LostControl(t) 
			local debuff = { 122, 10326, 8122, 2094, 5782, 5484, 6358, 5246, 408 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end  
	if IsSpellKnown(EveryManForHimself) 
	and GetSpellCooldown(EveryManForHimself) == 0 
	and PQR_SpellAvailable(EveryManForHimself)	
	and LostControl(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(EveryManForHimself),nil))	 
		return true 
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>