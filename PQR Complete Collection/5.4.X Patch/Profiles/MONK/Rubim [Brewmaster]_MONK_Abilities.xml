<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>[ MISC ] Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp

Update_Nova()
local Nova_Mod = Nova_Mod
local HOTKEY = PHotkey
local HOTKEY2 = PHotkey2


--Code by Crystal_tech
if Nova_Mod() == PHotkey
or Nova_Mod() == PHotkey2
or IsMounted()
or not PlayerCombat
or UnitBuffID(&amp;quot;player&amp;quot;, 115176)
 then
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Use: Mouseover Skill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
  and UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
  and IsMouseButtonDown()
 then RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName()) end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Special Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Fading Light
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end
-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)

if HoT and IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() then
	SpellStopCasting()
	CastSpellByID(48707,&amp;quot;player&amp;quot;)
	CastSpellByID(48792,&amp;quot;player&amp;quot;)
	return true
elseif HoT == GetSpellInfo(103327)
 and not UnitBuffID(&amp;quot;player&amp;quot;,48792) 
 and timer/1000 - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
		return true	
end

-- Try to aim on Darkmoon Faerie Cannon
local canontime = select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116))
if canontime and canontime - GetTime() &amp;lt; 1.07 then CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) end

-- Code provided by Kickmydog
-- Avoid Fragmentation on Madness
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end









-- Fading Light
if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;, 105925)) - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end

-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
	
if HoT == GetSpellInfo(103327)
 and not UnitBuffID(&amp;quot;player&amp;quot;,48792) 
 and timer/1000 - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
end	

-- Try to aim on Darkmoon Faerie Cannon
local canontime = select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116))
if canontime and canontime - GetTime() &amp;lt; 1.07 then CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) end

-- Code provided by Kickmydog
-- Avoid Fragmentation on Madness
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,106791))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 0.7 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Functions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp


------------------
-- INIT MESSAGE --
------------------
function initMessage()
	PQR_WriteToChat(&amp;quot;|cff91e782Rubim&amp;apos;s Monk Brewmaster |cff82cee7Loaded!|cffffffff&amp;quot;)
end

------------------
--Level 90 Check--
------------------

if IsSpellKnown(124081) then
	PQR_WriteToChat(&amp;quot;Zen Sphere not supported.&amp;quot;)
	PQR_StopRotation()
end

-----------------
-- Meele Range --
-----------------
function MeeleRange()
	if IsSpellInRange(GetSpellInfo(Jab), &amp;quot;target&amp;quot;) == 1
	then return true else return false
	end
end

--------------
-- CD Check --
--------------
function CdCheck(spellid)
	Sstart, Sduration, Senabled = GetSpellCooldown(spellid)
	Scooldown = (Sstart + Sduration - GetTime())
	if Sstart == 0
	then
		Scooldown = 0
	end
	return Scooldown
end

-----------------
-- AGGRO CHECK --
-----------------
if AggroTimer == nil then
	AggroTimer = 0
end

function AggroCheck()
	if UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
	then
		Tanking = false
	elseif UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) &amp;gt;= 2
	then
		Tanking = true
	else
		Tanking = false
	end
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and GetTime() - AggroTimer &amp;gt; 5 then
	AggroTimer = GetTime()
	AggroCheck()
end

------------------
-- SPELL SUCESS --
------------------
if not spellSucced then
		spellSucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
		spellSucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
		spellSucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==CheckSpell then SpellSucess=true end end)
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

--Player Info
PlayerChi			= select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;))
PlayerEnergy		= select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;))
PlayerHP			= Nova_UnitInfo(&amp;quot;player&amp;quot;)
PlayerCombat		= UnitAffectingCombat(&amp;quot;player&amp;quot;)
	
--PQR Functions
isMoving			= PQR_IsMoving()

--Key Mods
lShift				= Nova_Pause(1)
lCtrl				= Nova_Pause(2)
lAlt				= Nova_Pause(3)
rShift				= Nova_Pause(4)
rCtrl				= Nova_Pause(5)
rAlt				= Nova_Pause(6)

--Target Info
EnemyHP				= select(1, Nova_UnitInfo(&amp;quot;target&amp;quot;))
EnemyLevel			= UnitLevel(&amp;quot;target&amp;quot;)
		
-----------------
-- Time to die --
-----------------
TimeToDie = 999999
if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PlayerCombat then
	if (guid ~= UnitGUID(&amp;quot;target&amp;quot;)) or (guid == UnitGUID(&amp;quot;target&amp;quot;) and UnitHealth(&amp;quot;target&amp;quot;) == _firstLifeMax) then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealthMax(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end             
_currentLife = UnitHealth(&amp;quot;target&amp;quot;)
_currentTime = GetTime()
timeDiff = _currentTime - _firstTime
hpDiff = _firstLife - _currentLife
	if hpDiff &amp;gt; 0 then
		fullTime = timeDiff*_firstLifeMax/hpDiff
		pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
		calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
		if calcTime &amp;lt; 1 then
			calcTime = 1
		end
   	TimeToDie = calcTime
	end
	if hpDiff &amp;lt;= 0 then
		guid = UnitGUID(&amp;quot;target&amp;quot;)
		_firstLife = UnitHealth(&amp;quot;target&amp;quot;)
		_firstLifeMax = UnitHealth(&amp;quot;target&amp;quot;)
		_firstTime = GetTime()
	end

-- dummy
	if UnitHealthMax(&amp;quot;target&amp;quot;) == 1 then
		TimeToDie = 99
	end
end


--------------
-- AOE SWAP --
--------------
local Nova_Mod = Nova_Mod
local AoEHOTKEY = AoEHotkey

-- AoE Toggle Code
if not GetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
	InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
	InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if Nova_Mod() == AoEHotkey
 and not GetCurrentKeyBoardFocus()
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
 	SwitchTimer = GetTime()
	if tonumber(GetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;)) == 0 then 
		SetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;, 2) 
	elseif tonumber(GetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;)) == 5 then
		SetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;, 1)
	end
end

if tonumber(GetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;Brewmaster PVE (Rubim [Brewmaster])&amp;quot;) 
elseif tonumber(GetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;Brewmaster AoE PVE (Rubim [Brewmaster])&amp;quot;) end

if tonumber(GetCVar(&amp;quot;BrewmasterAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end


-----------------------
-- MONK --
-----------------------
	-- Ascension check
if IsSpellKnown(115396) then
	PlayerMaxChi = 5
	Ascension = 1
else
	PlayerMaxChi = 4
	Ascension = nil
end
	
if GlyphCheck(123401) == true then	
	Guard = 123402
else
	Guard = 115295
end
	
-- At this point, everything should have loaded perfectly!
if not PQ_MKBrew then
	PQ_MKBrew = true
	CheckSpell = 0
	Tanking = false
	SpellSucess = false
	initMessage()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Non-Combat Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted() then return false end

local SPELL = 115921
local SPELL2 = 115069
--local PQ_AuraInfo = PQ_AuraInfo

--LEGACY
--if not GetRaidBuffTrayAuraInfo(1) then
        --CastSpellByName(&amp;quot;Legacy of the Emperor&amp;quot;,&amp;quot;player&amp;quot;)
--end

if PQR_SpellAvailable(SPELL)
and not GetRaidBuffTrayAuraInfo(1) then
	CastSpellByID(SPELL,&amp;quot;player&amp;quot;)
	return true
end

if GetShapeshiftForm() ~= 1
then
	CastSpellByName(GetSpellInfo(SPELL2),nil)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Elusive Brew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 115308
local ElusiveBrewCount = select(4,UnitBuffID(&amp;quot;player&amp;quot;,128939))

if PQR_SpellAvailable(SPELL)
and PlayerCombat
and ElusiveBrewCount ~= nil
and ElusiveBrewCount &amp;gt;= 10 then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Black Ox Statue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted() then return false end

local SPELL = 115315
local BlackOx = UnitBuffID(&amp;quot;player&amp;quot;,126119)

if PQR_SpellAvailable(SPELL)
and PlayerCombat
and not BlackOx
and not GetCurrentKeyBoardFocus() then 
	CastSpellByName(GetSpellInfo(SPELL))
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	return true 
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Guard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local BlackOx = UnitBuffID(&amp;quot;player&amp;quot;,126119)

if PQR_SpellAvailable(Guard)
and Tanking == true
and PlayerCombat then 
	CastSpellByName(GetSpellInfo(Guard))
	return true 
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Keg Smash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not MeeleRange() then return false end
local SPELL = 121253

if PQR_SpellAvailable(SPELL)
and PlayerCombat
and PlayerChi &amp;lt;= (PlayerMaxChi-2)
then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Breath of Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not MeeleRange() then return false end

local SPELL = 115181

if PQR_SpellAvailable(SPELL)
and PlayerCombat
and not SpecialUnit()
and ShuffleTime &amp;gt;= 6
then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blackout Kick</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 100784
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
then
	if not Shuffle then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	elseif ShuffleTime - GetTime() &amp;lt;= 2 then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	elseif PlayerChi == PlayerMaxChi
	then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldown: Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not MeeleRange() then return false end

local SkillEnabled = RAenabled
if SkillEnabled ~= 1 then return false end

local Orc_Racial = {
20572,
33697,
33702,
82836
}

for i=1, #Orc_Racial do
	if IsSpellKnown(Orc_Racial[i]) then
		Racial = Orc_Racial[i]
	end
end

local TargetValidation = TargetValidation
local SpecialUnit = SpecialUnit
local _,Race = UnitRace(&amp;quot;player&amp;quot;)
local SPELL = Racial
local CDmode = CDenabled


if Race == &amp;quot;Orc&amp;quot;
and PlayerCombat
and PQR_SpellAvailable(SPELL)
and IsSpellKnown(SPELL)
then	
	if CDmode ~= 1
	then
		CastSpellByName(GetSpellInfo(SPELL),nil)
		return true
	elseif CDmode == 1
	and SpecialUnit()
	then
		CastSpellByName(GetSpellInfo(SPELL),nil)
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Expel Harm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 115072
local TargetValidation = TargetValidation

if PQR_SpellAvailable(SPELL)
and (not MeeleRange()
or PlayerHP &amp;lt;= 95)
	then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Expel Harm (Spam)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 115072
local TargetValidation = TargetValidation

if PQR_SpellAvailable(SPELL)
and not MeeleRange()
and PlayerHP &amp;lt;= 35
	then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tiger Palm</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 100787
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
	and PQR_SpellAvailable(SPELL)
	 then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Jab</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local EnergyMax = 40
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyTime = (40 - 0) * (1.0 / EnergyRegen)

local SPELL = 100780
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
	and PQR_SpellAvailable(SPELL) 
	and CdCheck(KegSmash) &amp;gt;= (EnergyTime / 1.6)
	then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spinning Jade Kick (AoE)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not MeeleRange() then return false end

local EnergyMax = 40
local EnergyRegen = select(2, GetPowerRegen(&amp;quot;player&amp;quot;))
local EnergyTime = (40 - 0) * (1.0 / EnergyRegen)

local SPELL = 101546
local TargetValidation = TargetValidation

if PQR_SpellAvailable(SPELL) 
	and CdCheck(KegSmash) &amp;gt;= (EnergyTime / 1.6)
	then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rushing Jade Wind (AoE)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 116847
local TargetValidation = TargetValidation

if PQR_SpellAvailable(SPELL) 
and PlayerCombat
and MeeleRange()
and IsSpellKnown(SPELL)
	then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Breath of Fire (AoE)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not MeeleRange() then return false end

local SPELL = 115181
local BOF,_,_,_,_,_,BOFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,123725,&amp;quot;player&amp;quot;)

if PQR_SpellAvailable(SPELL)
and PlayerCombat
and ShuffleTime &amp;gt;= 6 then
	CastSpellByName(GetSpellInfo(SPELL),nil)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trinkets</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit

if PlayerCombat
and IsSpellInRange(GetSpellInfo(100780), &amp;quot;target&amp;quot;) == 1
then
	if vcd == &amp;quot;boss&amp;quot;
	and SpecialUnit() then
		if vtrinket00 == &amp;quot;on&amp;quot;
		and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then
			UseInventoryItem(13)
			return true
		end
		
		if vtrinket01 == &amp;quot;on&amp;quot;
		and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0 then
			UseInventoryItem(14)
			return true
		end
	end	
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tiger Palm (Power Guard)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SPELL = 100787
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
	and PQR_SpellAvailable(SPELL)
	and (not UnitBuffID(&amp;quot;player&amp;quot;, 125359)
	or not UnitBuffID(&amp;quot;player&amp;quot;, 118636)) then
	CastSpellByName(GetSpellInfo(SPELL))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Spell List</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>BlackoutKick = 100784
CracklingJadeLightning = 117952
Detox = 115450
Disable = 116095
DizzyingHaze = 118022
EnergyUsage = 119650
ExpelHarm = 115072
FortifyingBrew = 115203
GrappleWeapon = 117368
HealingSphere = 115460
Jab = 100780
LeeroftheOx = 115543
LegacyoftheEmperor = 115921
Paralysis = 115078
Provoke = 115546
Roll = 109132
SpearHandStrike = 116705
SpinningCraneKick = 101546
StanceoftheFierceTiger = 103985
Stoneskin = 125170
SurgingMist = 123273
TigerPalm = 100787
TouchofDeath = 115080
Transcendence = 101643
TranscendenceTransfer = 119996
ZenMeditation = 115176
ZenPilgrimage = 126892
AvertHarm = 115213

-- MIST WEAVER
EnvelopingMist = 124682
LifeCocoon = 116849
ManaTea = 115294
RenewingMist = 115151
Revival = 115310
SoothingMist = 115175
StanceoftheWiseSerpent = 115070
SummonJadeSerpentStatue = 115313
SurgingMist = 116694

--WIND WALKER
ThunderFocusTea = 116680
Uplift = 116670
ComboBreakerBK = 116768
ComboBreakerTP = 118864
EnergizingBrew = 115288
FistsofFury = 113656
FlyingSerpentKick = 101545
LegacyoftheWhiteTiger = 116781
NimbleBrew = 137562
RisingSunKick = 107428
SpinningFireBlossom = 115073
TigereyeBrew = 116740
TouchofKarma = 122470

--BREWMASTER
BreathofFire = 115181
Clash = 122057
DizzyingHaze = 115180
ElusiveBrew = 115308
KegSmash = 121253
NimbleBrew = 137562
PurifyingBrew = 119582
StanceoftheSturdyOx = 115069
SummonBlackOxStatue = 115315

--
Shuffle,_,_,_,_,_,ShuffleT = UnitBuffID(&amp;quot;player&amp;quot;, 115307)

if not Shuffle
then
ShuffleTime = 0
else ShuffleTime = ShuffleT - GetTime()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] Nova_Frame</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp

---------------
-- GET NAMES --
---------------
-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks
-------------------------------------------------------------------------------
-- Load LUA data files.
if PQR_RotationStarted == true then
	PQR_RotationStarted = false
	
	-- Tables
	Nova_ValueCheck = {
		[1] =	{ Var1 = nil,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = nil, },
		[2] =	{ Var1 = 35,	Text = &amp;quot;Healthstone&amp;quot;,			Var2 = 1 },
		[3] =	{ Var1 = 95,	Text = &amp;quot;Tier 2&amp;quot;,				Var2 = 1 },
		[4] =	{ Var1 = nil,	Text = &amp;quot;Others&amp;quot;,				Var2 = nil },
		[5] =	{ Var1 = nil,	Text = &amp;quot;Purifying Brew&amp;quot;,		Var2 = 1 },
		[6] =	{ Var1 = nil,	Text = &amp;quot;Trinket 01&amp;quot;,			Var2 = 0 },
		[7] =	{ Var1 = nil,	Text = &amp;quot;Trinket 02&amp;quot;,			Var2 = 0 },
		[8] =	{ Var1 = nil,	Text = &amp;quot;Gloves&amp;quot;,				Var2 = 0 },
		[9] =	{ Var1 = nil,	Text = &amp;quot;Auto Racial Use&amp;quot;,		Var2 = 1 },
		[10] =	{ Var1 = nil,	Text = &amp;quot;CD: Boss Only&amp;quot;,			Var2 = 1 }		
	}
	Nova_CooldownCheck = {
		[1]	=	{ Mod = 4,		Text = &amp;quot;Dizzying Haze&amp;quot;,			Var1 = 1},
		[2]	=	{ Mod = 6,		Text = &amp;quot;Breath of Fire&amp;quot;,		Var1 = 1},
		[3]	=	{ Mod = 3,		Text = &amp;quot;Touch of Death&amp;quot;,		Var1 = 1},
		[4]	=	{ Mod = 8,		Text = &amp;quot;AoE Rotation&amp;quot;,			Var1 = 1},
		[5]	=	{ Mod =	2,		Text = &amp;quot;Pause 1&amp;quot;,				Var1 = 1},
		[6]	=	{ Mod =	1,		Text = &amp;quot;Pause 2&amp;quot;,				Var1 = 1}
	}
	
	-- CVar Registration
	for i=1,#Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1)
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;, Nova_ValueCheck[i].Var2)
		end
	end
	for i=1,#Nova_CooldownCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;), Nova_CooldownCheck[i].Mod)
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;) == nil then
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_CooldownCheck[i].Text,&amp;quot;%s&amp;quot;,&amp;quot;_&amp;quot;)..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
		end
	end

function Update_Nova()
	-- CVar Translations
	-- Cooldowns
	
	HSenabled 		= GetCVarBool(&amp;quot;Nova_Healthstone_Enabled&amp;quot;)
	HShealth 		= tonumber(GetCVar(&amp;quot;Nova_Healthstone&amp;quot;))
	RAenabled		= GetCVarBool(&amp;quot;Nova_Auto_Racial_Use_Enabled&amp;quot;)
	PBenabled		= GetCVarBool(&amp;quot;Nova_Purifying_Brew_Enabled&amp;quot;)
	
	T01enabled		= GetCVarBool(&amp;quot;Nova_Trinket_01_Enabled&amp;quot;)
	T02enabled		= GetCVarBool(&amp;quot;Nova_Trinket_02_Enabled&amp;quot;)
	GLOenabled		= GetCVarBool(&amp;quot;Nova_Gloves_Enabled&amp;quot;)
	
	Tier2health = tonumber(GetCVar(&amp;quot;Nova_Tier_2&amp;quot;))
	Tier2enabled = GetCVarBool(&amp;quot;Nova_Tier_2_Enabled&amp;quot;)
		
	PBEnabled = GetCVarBool(&amp;quot;Nova_Purifying_Brew_Enabled&amp;quot;)
	
	CDenabled = GetCVarBool(&amp;quot;Nova_CD:_Boss_Only_Enabled&amp;quot;)
	
	DHenabled = GetCVarBool(&amp;quot;Nova_Dizzying_Haze_Enabled&amp;quot;)	
	DHHotkey = tonumber(GetCVar(&amp;quot;Nova_Dizzying_Haze&amp;quot;))
	
	BoFenabled = GetCVarBool(&amp;quot;Nova_Breath_of_Fire_Enabled&amp;quot;)	
	BoFHotkey = tonumber(GetCVar(&amp;quot;Nova_Breath_of_Fire&amp;quot;))	
	
	ToDenabled = GetCVarBool(&amp;quot;Nova_Touch_of_Death_Enabled&amp;quot;)
	ToDHotkey = tonumber(GetCVar(&amp;quot;Nova_Touch_of_Death&amp;quot;))
	
	PHotkey = tonumber(GetCVar(&amp;quot;Nova_Pause_1&amp;quot;))
	PHotkey2 = tonumber(GetCVar(&amp;quot;Nova_Pause_2&amp;quot;))
	AoEHotkey = tonumber(GetCVar(&amp;quot;Nova_AoE_Rotation&amp;quot;))		
	
end
	
	-- Load LUA files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Nova_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_Nova_Frame.lua&amp;quot;) == true then
			MiniMapCreation()
			
			-- Slash Commands
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck, &amp;quot;MK Brewmaster Options&amp;quot;, &amp;quot;MK Brewmaster CD Settings&amp;quot;)
				end
				if not Nova_Frame:IsShown() then Nova_Frame:Show() else Nova_Frame:Hide() end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldown: Fortifying Brew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SkillEnabled = FBenabled
local SkillPercent = FBhealth
local SPELL = FortifyingBrew
local SpecialUnit = SpecialUnit
local CDmode = CDenabled

if SkillEnabled ~= 1 then return false end

if PQR_SpellAvailable(SPELL)
and PlayerHP &amp;lt;= SkillPercent
and PlayerCombat
then
	if CDmode ~= 1
	then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	elseif SpecialUnit()
	then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldown: Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SkillEnabled = HSenabled
local SkillPercent = HShealth

if SkillEnabled ~= 1 then return false end

if GetItemCount(5512,false,true) &amp;gt; 0
	and PlayerHP &amp;lt;= SkillPercent
	and PQR_SpellAvailable(5512)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetItemCooldown(5512) == 0
then
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldown: Tier 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SkillEnabled = Tier2enabled
local SkillPercent = Tier2health
local SpecialUnit = SpecialUnit
local CDmode = CDenabled
local TargetValidation = TargetValidation

if IsSpellKnown (115098) then
SPELL = 115098
HCAST = 1
end

if IsSpellKnown (123986) then
SPELL = 123986
HCAST = 2
end

if IsSpellKnown (124081) then
SPELL = 124081
HCAST = 3
end


if SkillEnabled ~= 1 then return false end
if TargetValidation(&amp;quot;target&amp;quot;,SPELL)
and (CdCheck(Guard) &amp;gt; 3
or Tanking == false 
)
and PlayerHP &amp;lt;= SkillPercent
and PlayerCombat
and ShuffleTime &amp;gt; 3
then
	if CDmode ~= 1
	then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	elseif SpecialUnit()
	then
		CastSpellByName(GetSpellInfo(SPELL))
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hotkey: Touch of Death</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BoFenabled ~= 1 or IsMounted() then return false end

if Timer == nil then
	Timer = 0
end

if IsMounted() or ToDenabled ~= 1 then return false end

local Nova_Mod = Nova_Mod
local SPELL = TouchofDeath
local SkillEnabled = ToDenabled
local HOTKEY = ToDHotkey
local playerhp	= UnitHealthMax(&amp;quot;player&amp;quot;)
local targethp	= UnitHealth(&amp;quot;target&amp;quot;)

if Nova_Mod() == HOTKEY
and GetTime() - Timer &amp;gt; 0.5 then
	Timer = GetTime()
	
	if CheckSpell == TouchofDeath
	then PQR_WriteToChat(&amp;quot;Removing |cFF00FF00Touch of Death.&amp;quot;)
		CheckSpell = 0
		TextQueue(0,0)
	else
		CheckSpell = TouchofDeath
		PQR_WriteToChat(&amp;quot;Queue |cFF00FF00Touch of Death.&amp;quot;)
		TextQueue(TouchofDeath,0)
	end
	return true
end

if not MeeleRange() then return false end

if CheckSpell == TouchofDeath
and PQR_SpellAvailable(CheckSpell)
and targethp &amp;lt;= playerhp
then
	CastSpellByName(GetSpellInfo(TouchofDeath))
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>0 - Autocast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not spellSucced then
	spellSucced = CreateFrame(&amp;quot;Frame&amp;quot;) 
	spellSucced:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
	spellSucced:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==CheckSpell then SpellSucess=true end end)
end

if SpellSucess == true then
	TextQueue(CheckSpell,1)
	CheckSpell = 0
	SpellSucess = false
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[ MISC ] PQR_Text</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- This profile would never be done without:
-- team_Nova (Mentally, Crystal_Tech and bu_ba_911)
-- D1sc1pl1n3
-- Kinkeh
-- cpowroks
-- Gabbz
-- googlebee
-- Xelper
-- imdasandman
-- kuukuu
-- Ninjaderp

function TextQueue(SPELL,CHOICE)
	if SPELL ~= 0
	then
		local nskill = GetSpellInfo(SPELL)
		
		if CHOICE == 0
		then
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Queue Skill: &amp;quot; .. nskill, nil, &amp;quot;14DCB4&amp;quot;)
		else PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Casted: &amp;quot; .. nskill, nil, &amp;quot;ffffff&amp;quot;)
		end
	else
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Standby&amp;quot;, nil, &amp;quot;ffffff&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hotkey: Breath of Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BoFenabled ~= 1 or IsMounted() then return false end

if Timer == nil then
	Timer = 0
end

local Nova_Mod = Nova_Mod
local SPELL = BreathofFire
local SkillEnabled = BoFenabled
local HOTKEY = BoFHotkey

if Nova_Mod() == HOTKEY
and GetTime() - Timer &amp;gt; 0.5 then
	Timer = GetTime()
	
	if CheckSpell == BreathofFire
	then PQR_WriteToChat(&amp;quot;Removing |cFF00FF00BoF.&amp;quot;)
		CheckSpell = 0
		TextQueue(0,0)
	else
		CheckSpell = BreathofFire
		PQR_WriteToChat(&amp;quot;Queue |cFF00FF00BoF.&amp;quot;)
		TextQueue(BreathofFire,0)
	end
	return true
end

if not MeeleRange() then return false end

if CheckSpell == BreathofFire
and PQR_SpellAvailable(CheckSpell)
then
	CastSpellByName(GetSpellInfo(CheckSpell),nil)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hotkey: Dizzying Haze</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted() or DHenabled ~= 1 then return false end

local Nova_Mod = Nova_Mod
local SPELL = DizzyingHaze
local HOTKEY = DHHotkey

if PQR_SpellAvailable(SPELL)
and Nova_Mod() == HOTKEY then
	CastSpellByName(GetSpellInfo(DizzyingHaze))
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	return true 
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldown: Trinket</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (T01enabled ~= 1 and T02enabled ~= 1 and GLOenabled ~= 1) or not MeeleRange() then return false end



local SpecialUnit = SpecialUnit


----------------
-- TRINKET 01 --
----------------
if T01enabled ~= nil
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0
and (CDenabled ~= 1
or (CDenabled == 1 and SpecialUnit()))
then
	UseInventoryItem(13)
end

if T02enabled ~= nil
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and (CDenabled ~= 1
or (CDenabled == 1 and SpecialUnit()))
then
	UseInventoryItem(14)
end

if GLOenabled ~= nil
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0
and (CDenabled ~= 1
or (CDenabled == 1 and SpecialUnit()))
then
	UseInventoryItem(10)
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldown: Purifying Brew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PBEnabled ~= 1 then return false end
--Diablofan
--Dimonoff
local SPELL = 119582 
local HStagger = UnitDebuffID(&amp;quot;player&amp;quot;, 124273) 
local MStagger = UnitDebuffID(&amp;quot;player&amp;quot;, 124274) 
local LStagger = UnitDebuffID(&amp;quot;player&amp;quot;, 124275) 

if PQR_SpellAvailable(SPELL)
and PlayerCombat then 
	if HStagger then 
		CastSpellByName(GetSpellInfo(SPELL),nil) 
		return true 
	end 
	if MStagger and ShuffleTime &amp;gt;= 2 then 
		CastSpellByName(GetSpellInfo(SPELL),nil) 
    	return true  
	end 
	if LStagger and ShuffleTime &amp;gt;= 8 then 
		CastSpellByName(GetSpellInfo(SPELL),nil) 
		return true 
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>