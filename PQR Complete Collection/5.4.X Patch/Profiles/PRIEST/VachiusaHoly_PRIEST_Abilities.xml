<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false

PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Holy Priest Profile Verion - 2.0.17&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
PQR_SwapCheckTimer = 0
 
--------------------
-- Register CVars
--------------------
-- If we are in a 5 man instance
	
Nova_ValueCheck = {
	{	Var1 = nil,	Text = &amp;quot;Healing Values&amp;quot;,			Var2 = nil		},
	{	Var1 = 80,	Text = &amp;quot;VRenew&amp;quot;,					Var2 = 1		},	
	{	Var1 = 90,	Text = &amp;quot;VRenewTank&amp;quot;,				Var2 = 1		},		
	{	Var1 = 40,	Text = &amp;quot;VFlashHeal&amp;quot;,				Var2 = 1		},
	{	Var1 = 60,	Text = &amp;quot;VGreaterHealing&amp;quot;,			Var2 = 1		},
	{	Var1 = 80,	Text = &amp;quot;VHeal&amp;quot;,						Var2 = 1		},	
	{	Var1 = 75,	Text = &amp;quot;VHolyWordSerenity&amp;quot;,			Var2 = 1		},				
	{	Var1 = 40,	Text = &amp;quot;VBindingHeal&amp;quot;,				Var2 = 1		},		
	{	Var1 = 70,	Text = &amp;quot;VSelfBindingHeal&amp;quot;,			Var2 = 1		},		
	{	Var1 = 90,	Text = &amp;quot;VPrayerOfMending&amp;quot;,			Var2 = 1		},			
	{	Var1 = 40,	Text = &amp;quot;VPowerWordShield&amp;quot;, 			Var2 = 1		},	
	{	Var1 = 50,	Text = &amp;quot;VTankFlaskHeal&amp;quot;,			Var2 = 0		},					
	{	Var1 = nil,	Text = &amp;quot;Cooldown Values&amp;quot;,			Var2 = nil		},	
	{	Var1 = 60,	Text = &amp;quot;VDivineHymn&amp;quot;,				Var2 = 1		},
	{	Var1 = 5,	Text = &amp;quot;VDivineHymnLimit&amp;quot;,			Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VDivineHymnAuto&amp;quot;,			Var2 = 1		},		
	{	Var1 = 80,	Text = &amp;quot;VPrayerOfHealing&amp;quot;,			Var2 = 1		},
	{	Var1 = 3,	Text = &amp;quot;VPrayerOfHealingLimit&amp;quot;,		Var2 = 1		},
	{	Var1 = 85,	Text = &amp;quot;VCascade&amp;quot;, 					Var2 = 1		},		
	{	Var1 = 5,	Text = &amp;quot;VCascadeLimit&amp;quot;,				Var2 = 1		},	
	{	Var1 = 80,	Text = &amp;quot;VCircleOfHealing&amp;quot;, 			Var2 = 1		},		
	{	Var1 = 3,	Text = &amp;quot;VCircleOfHealingLimit&amp;quot;,		Var2 = 1		},	
	{	Var1 = 20,	Text = &amp;quot;VDesperatePrayer&amp;quot;,			Var2 = 1		},	
	{	Var1 = 20,	Text = &amp;quot;VHymnOfHope&amp;quot;,				Var2 = 1		},
	{	Var1 = 30,	Text = &amp;quot;VGuardianSpirit&amp;quot;,			Var2 = 1		},
	{	Var1 = 25,	Text = &amp;quot;VVoidShift&amp;quot;,				Var2 = 1		},					
	{	Var1 = 95,	Text = &amp;quot;VSelfVoidShift&amp;quot;,			Var2 = 1		},					
	{	Var1 = nil,	Text = &amp;quot;Misc Values&amp;quot;,				Var2 = nil		},			
	{	Var1 = 80,	Text = &amp;quot;VMindbender&amp;quot;,				Var2 = 1		},
	{	Var1 = 99,	Text = &amp;quot;VSolaceInsanity&amp;quot;,			Var2 = 1		},			
	{	Var1 = 90,	Text = &amp;quot;VDPS&amp;quot;,						Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VAutoTarget&amp;quot;,				Var2 = 1		},	
	{	Var1 = 70,	Text = &amp;quot;VPurify&amp;quot;,					Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VFade&amp;quot;,						Var2 = 0		},
	--{	Var1 = 0,	Text = &amp;quot;VSmart&amp;quot;,					Var2 = 1		},	
	{	Var1 = 0,	Text = &amp;quot;Racials&amp;quot;,					Var2 = 1		},						
	{	Var1 = 0,	Text = &amp;quot;NewEvents&amp;quot;,					Var2 = 1		},	
	{	Var1 = 0,	Text = &amp;quot;OldEvents&amp;quot;,					Var2 = 0		}	
	--{	Var1 = 80,	Text = &amp;quot;LowHPThreshold&amp;quot;, 			Var2 = nil		}
}		

Nova_CooldownCheck = {
	{	Mod = 8,	Text = &amp;quot;VMDivineHymn&amp;quot;,				Var1 = 1		}, --IsRightShiftKeyDown
	{	Mod = 1,	Text = &amp;quot;VPauseRotation&amp;quot;,			Var1 = 1		}, --IsLeftShiftKeyDown
	{	Mod = 2,	Text = &amp;quot;VHolyWordSanctuary&amp;quot;,		Var1 = 1		}, --IsLeftControlKeyDown
	{	Mod = 4,	Text = &amp;quot;VDispelRaid&amp;quot;,				Var1 = 1		}, --IsLeftAltKeyDown		
	{	Mod = 32,	Text = &amp;quot;VMassDispel&amp;quot;,				Var1 = 1		}, --IsRightAltKeyDown
	{	Mod = 16,	Text = &amp;quot;VLightwell&amp;quot;,				Var1 = 1		}  --IsRightControlKeyDown
	--{	Mod = 2,	Text = &amp;quot;RemoveFromCustomTable&amp;quot;,		Var1 = 1		}, --IsLeftControlKeyDown
	--{	Mod = 4,	Text = &amp;quot;AddToCustomTable&amp;quot;,			Var1 = 1		}  --IsLeftAltKeyDown			
}
	
if GetCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_OverRide&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_OverRide&amp;quot;, 0) end
if GetCVar(&amp;quot;PQ_UseCustomT&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_Recording&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Recording&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_DisableCD&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1) end
if GetCVar(&amp;quot;Nova_Mouseover&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Mouseover&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_LowHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_LowHP&amp;quot;, 80) end
if GetCVar(&amp;quot;Nova_ActualHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_ActualHP&amp;quot;, 0) end

-- Registering the CVars for the CustomFrame
for i=1, #Nova_ValueCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
	end
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
	end
end
for i=1, #Nova_CooldownCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text, Nova_CooldownCheck[i].Mod)
	end	
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
	end
end

--------------------
-- Slash Commands
--------------------
SLASH_WIPETABLE1 = &amp;quot;/wipetable&amp;quot;
SLASH_WIPETABLE2 = &amp;quot;/wipecustomtable&amp;quot;
SLASH_WIPETABLE3 = &amp;quot;/wt&amp;quot;
function SlashCmdList.WIPETABLE(msg, editbox)
	Nova_CustomT = { }
	if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then 
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean, and reverting to Normal Table.&amp;quot;)
		end
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean.&amp;quot;)
		end
	end
end

SLASH_USECUSTOMT1 = &amp;quot;/usecustomt&amp;quot;
SLASH_USECUSTOMT2 = &amp;quot;/uct&amp;quot;
SLASH_USECUSTOMT3 = &amp;quot;/usecustomtable&amp;quot;
function SlashCmdList.USECUSTOMT(msg, editbox)
	if not GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) and #Nova_CustomT &amp;gt; 0 then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Custom Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Normal Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
	end
end

SLASH_RECORDING1 = &amp;quot;/recording&amp;quot;
SLASH_RECORDING2 = &amp;quot;/recraid&amp;quot;
SLASH_RECORDING3 = &amp;quot;/recordingraid&amp;quot;
function SlashCmdList.RECORDING(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 1)
		for i=1, 20 do ChatFrame1:AddMessage(&amp;quot; &amp;quot;) end
	else
		PQR_WriteToChat(&amp;quot;Silent Mode Disabled&amp;quot;)
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 0)
	end
end

SLASH_DISABLECD1 = &amp;quot;/disablecd&amp;quot;
function SlashCmdList.DISABLECD(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableCD&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 0)
	end
end

SLASH_CLEARCHAT1 = &amp;quot;/clearchat&amp;quot;
function SlashCmdList.CLEARCHAT(msg, editbox)
	for i=1, 20 do
		ChatFrame1:AddMessage(&amp;quot; &amp;quot;)
	end
end

SLASH_DISABLEMOUSEOVER1 = &amp;quot;/mouseoverheal&amp;quot;
SLASH_DISABLEMOUSEOVER2 = &amp;quot;/mh&amp;quot;
function SlashCmdList.DISABLEMOUSEOVER(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableMouseover&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 0)
	end		
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-----------------------------
-- Create the CVar Macros
-----------------------------

	if PQR_LoadLua ~= nil then
		-- Load Data File
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Vachiusa_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Frame.lua&amp;quot;) == true then
			if not mmC then
				mmC = true
				MiniMapCreation()
			end
		
			-- Setup the Slash Commands for the Frame
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck)
				end
			
				if not Nova_Frame:IsShown() then
					Nova_Frame:Show()
				else
					Nova_Frame:Hide()
				end
			end
		else
			print(&amp;quot;Failed to load Frame&amp;quot;)
		end
	end
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 2 then
		PQR_WriteToChat(&amp;quot;You must be in Holy Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Healing Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActulHP)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true


if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then
	members = Nova_CustomT
	lowhpmembers = 0
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].HP &amp;lt; 80 then
			lowhpmembers = lowhpmembers + 1
		end
	end
	
	table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- ToInteger --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- To Integer from String
Nova_LowHP 							= tonumber( GetCVar(&amp;quot;Nova_LowHP&amp;quot;) )
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug 1: &amp;quot;..Nova_ValueCheck[i].Text)	
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)		
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug 2: &amp;quot;..Nova_ValueCheck[i].Text)	
	end
end

-- To Integer for Cooldowns
Nova_VMDivineHymn					= tonumber(	GetCVar(&amp;apos;Nova_VMDivineHymn&amp;apos;) )
Nova_VHolyWordSanctuary				= tonumber(	GetCVar(&amp;apos;Nova_VHolyWordSanctuary&amp;apos;) )
Nova_VDispelRaid					= tonumber(	GetCVar(&amp;apos;Nova_VDispelRaid&amp;apos;) )
Nova_VMassDispel					= tonumber(	GetCVar(&amp;apos;Nova_VMassDispel&amp;apos;) )
Nova_VLightwell						= tonumber(	GetCVar(&amp;apos;Nova_VLightwell&amp;apos;) )
--Nova_RemoveCT						= tonumber(	GetCVar(&amp;apos;Nova_RemoveFromCustomTable&amp;apos;) )
--Nova_AddCT						= tonumber(	GetCVar(&amp;apos;Nova_AddToCustomTable&amp;apos;) )

-- To Boolean from String
Nova_Mouseover 						= GetCVarBool(&amp;quot;Nova_Mouseover&amp;quot;)
Nova_VMDivineHymnCheck				= GetCVarBool(&amp;apos;Nova_VMDivineHymn_Enabled&amp;apos;) 
Nova_VHolyWordSanctuaryCheck		= GetCVarBool(&amp;apos;Nova_VHolyWordSanctuary_Enabled&amp;apos;) 
Nova_VDispelRaidCheck				= GetCVarBool(&amp;apos;Nova_VDispelRaid_Enabled&amp;apos;) 
Nova_VMassDispelCheck				= GetCVarBool(&amp;apos;Nova_VMassDispel_Enabled&amp;apos;) 
Nova_VLightwellCheck				= GetCVarBool(&amp;apos;Nova_VLightwell_Enabled&amp;apos;) 
--Nova_RemoveCTCheck					= GetCVarBool(&amp;apos;Nova_RemoveFromCustomTable_Enabled&amp;apos;)
--Nova_AddCTCheck						= GetCVarBool(&amp;apos;Nova_AddToCustomTable_Enabled&amp;apos;)
Nova_ActualHP 						= GetCVarBool(&amp;quot;Nova_ActualHP&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Stop Casting
if UnitExists(&amp;quot;boss1&amp;quot;) then
	local npcid = tonumber(UnitGUID(&amp;quot;boss1&amp;quot; ):sub(6,10), 16)
else
	local npcid = 0
end

if SpellIsTargeting() then
	SpellStopCasting()
elseif ((UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(2050)) --Heal
or (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(585))) --Smite
and (CalStop(members[1].Unit) &amp;lt; 40 or (lowhpmembers &amp;gt; 3 and CalStop(members[1].Unit) &amp;lt; 70)) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
--and IsUsableSpell(596)
and IsUsableSpell(2061) --prevent stop loop
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 20 then
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting Heal/Smite2 - HP: &amp;quot; ..members[1].HP) 		
	return true 	
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(2050)) --Heal
and IsSpellInRange(GetSpellInfo(2050),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and CalStop(members[1].Unit) &amp;gt; Nova_VDPS and CalStop(members[1].Unit) &amp;gt; 95 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	SpellStopCasting() 	
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast Heal - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit)..&amp;quot; - overheal: &amp;quot;..select(2, CalStop(members[1].Unit)))	
	return true 
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(2060)) --GreaterHeal
and IsSpellInRange(GetSpellInfo(2060),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and npcid ~= 62442 --Tsulong 
and npcid ~= nil
and CalStop(members[1].Unit) &amp;gt; Nova_VGreaterHealing and CalStop(members[1].Unit) &amp;gt; Nova_VDPS 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting GreaterHeal - HP: &amp;quot; ..members[1].HP) 		
	return true 
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(2061)) --FlashHeal
and IsSpellInRange(GetSpellInfo(2061),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and npcid ~= 62442 --Tsulong 
and npcid ~= nil
and CalStop(members[1].Unit) &amp;gt; Nova_VFlashHeal and CalStop(members[1].Unit) &amp;gt; Nova_VDPS 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting FlashHeal - HP: &amp;quot; ..members[1].HP) 		
	return true 	
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(596)) --PrayerOfHealing
and not UnitBuffID(&amp;quot;player&amp;quot;, 109964)
and (CalStop(members[1].Unit) &amp;gt; 95 or (lowhpmembers &amp;lt; 3 and CalStop(members[1].Unit) &amp;gt; 90)) 
and not UnitDebuffID(&amp;quot;player&amp;quot;,116260)
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting PrayerOfHealing - HP: &amp;quot; ..members[1].HP) 		
	return true 	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoTarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoTarget
if Nova_VAutoTargetCheck then
	if (not UnitExists(&amp;quot;focus&amp;quot;)
		or UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		or not UnitInRange(&amp;quot;focus&amp;quot;) 
		or not UnitIsConnected(&amp;quot;focus&amp;quot;)
		or not UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))	
	and #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
			and CanHeal(Nova_Tanks[i].Unit) then			
	   			TargetUnit(Nova_Tanks[i].Unit)             		
	            --if not UnitIsDeadOrGhost(&amp;quot;targettarget&amp;quot;)			
				--and UnitExists(&amp;quot;targettarget&amp;quot;)
				--and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;targettarget&amp;quot;)
				--and UnitInRange(&amp;quot;targettarget&amp;quot;) 
				--and not PQR_IsOutOfSight(&amp;quot;targettarget&amp;quot;)
				--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;) --Elegon not work
				--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
					--TargetUnit(&amp;quot;targettarget&amp;quot;)
					--AttackTarget()
					--return true 	
				--end                		
	    		RunMacroText(&amp;quot;/focus&amp;quot;)			
	            RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)			
			end
		end
	end
	
	if UnitExists(&amp;quot;focus&amp;quot;)
	and not Nova_Moving
	--and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;) or (UnitExists(&amp;quot;target&amp;quot;) and not UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) and not (IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1 )))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;))
	and not UnitIsDeadOrGhost(&amp;quot;focustarget&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	and UnitExists(&amp;quot;focustarget&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;)
	and IsSpellInRange(GetSpellInfo(14914),&amp;quot;focustarget&amp;quot;) == 1
	and not PQR_IsOutOfSight(&amp;quot;focustarget&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;) --Elegon not work
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		TargetUnit(&amp;quot;focustarget&amp;quot;)
		return true 	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Trinket spirit 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 80
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 
	UseInventoryItem(14)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BindingHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VBindingHealCheck then
	if PQR_SpellAvailable(32546)
	and members[1].HP &amp;lt; Nova_VBindingHeal
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; Nova_VSelfBindingHeal
	and not Nova_Moving 
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and IsSpellInRange(GetSpellInfo(32546),members[1].Unit) == 1
	and IsUsableSpell(32546)
	and CanHeal(members[1].Unit)
	and not UnitIsUnit(members[1].Unit,&amp;quot;player&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and not stopcasting then
		--if not UnitBuffID(&amp;quot;player&amp;quot;, 81208) then --Chakra: Serenity
			--CastSpellByName(tostring(GetSpellInfo(81208),nil))	 
		--end
		--PQR_CustomTarget = members[1].Unit
		CastSpellByName(tostring(GetSpellInfo(32546)),members[1].Unit)	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting BindingHeal - HP: &amp;quot; ..members[1].HP) 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fade</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VFadeCheck then	
	if UnitThreatSituation(&amp;quot;player&amp;quot;) == 3
	--and GetSpellCooldown(586) == 0
	--and select(2,GetSpellCooldown(586)) &amp;lt; 2
	and PQR_SpellAvailable(586) 
	and not stopfade then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end	
		CastSpellByName(tostring(GetSpellInfo(586),nil))	 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FlashHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VFlashHealCheck then
	if PQR_SpellAvailable(2061) 
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and IsSpellInRange(GetSpellInfo(2061),members[1].Unit) == 1
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(2061)
	 --and not UnitBuffID(&amp;quot;player&amp;quot;, 89485) --Inner Focus
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_VFlashHeal and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 10 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
		 	--PQR_CustomTarget = members[1].Unit
		 	CastSpellByName(tostring(GetSpellInfo(2061)),members[1].Unit)
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting FlashHeal - HP: &amp;quot; ..members[1].HP) 
		 	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>GreaterHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VGreaterHealingCheck then
	if PQR_SpellAvailable(2060) 
	 and IsSpellInRange(GetSpellInfo(2060),members[1].Unit) == 1
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(2060) 
	 and not Nova_Moving 
	 and not stopcasting then
		if UnitBuffID(&amp;quot;player&amp;quot;, 63735) then --Serendipity buff
			if (select(7, UnitBuffID(&amp;quot;player&amp;quot;, 63735)) - GetTime()) &amp;lt;= 3 
			and select(4, UnitBuffID(&amp;quot;player&amp;quot;, 63735)) &amp;gt;= 2 then 
				local Nova_VGreaterHealing = Nova_VGreaterHealing + 10
			end
		end
		 	 	 
		if members[1].HP &amp;lt; Nova_VGreaterHealing 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
		 	--PQR_CustomTarget = members[1].Unit
		 	CastSpellByName(tostring(GetSpellInfo(2060)),members[1].Unit)
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting GreaterHeal - HP: &amp;quot; ..members[1].HP) 
		 	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HymnOfHope</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VHymnOfHopeCheck then
	--if IsRightControlKeyDown() 
	if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; Nova_VHymnOfHope
	and GetSpellCooldown(64901) == 0
	and not UnitBuffID(&amp;quot;player&amp;quot;, 109964) --Spirit Shell
	--and select(2,GetSpellCooldown(64901)) &amp;lt; 2
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(64901)
	and not Nova_Moving 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		CastSpellByName(tostring(GetSpellInfo(64901),nil))	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Control Key Down - HymnOfHope!&amp;quot;)	
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InnerFire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,588) 
and PQR_SpellAvailable(588)
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(588),nil))	 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InnerWill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,73413) 
and PQR_SpellAvailable(73413)
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 70
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(73413),nil))	
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>MassDispel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VMassDispelCheck then	
	if Nova_Mod() == Nova_VMassDispel 
	--if IsRightAltKeyDown() 
	--and not GetCurrentKeyBoardFocus() 
	and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	--and IsSpellKnown(32375) 
	and PQR_SpellAvailable(32375)
	and select(2,GetSpellCooldown(32375)) &amp;lt; 2 
	--and GetSpellCooldown(32375) == 0
	and IsUsableSpell(32375)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	  CastSpellByName(tostring(GetSpellInfo(32375),nil))
	  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Alt Key Down - Mass Dispel!&amp;quot;)
	  return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>MindBender</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VMindbenderCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; Nova_VMindbender
	and PQR_SpellAvailable(34433) 
	and UnitExists(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and not Nova_Moving
	and IsSpellInRange(GetSpellInfo(34433),&amp;quot;target&amp;quot;) == 1
	--and select(2,GetTalentRowSelectionInfo(3)) == 8 --check talent
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		--if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			--SpellStopCasting()
		--end		
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMindBender&amp;quot;)
		CastSpellByName(tostring(GetSpellInfo(34433),&amp;quot;target&amp;quot;))
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PowerWordFortitude</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,21562) --Power Word: Fortitude
and not UnitBuffID(&amp;quot;player&amp;quot;,469) --Commanding Shout
and not UnitBuffID(&amp;quot;player&amp;quot;,90364) --Qiraji Fortitude
and not UnitBuffID(&amp;quot;player&amp;quot;,109773) --Dark Intent
and PQR_SpellAvailable(21562)
and IsUsableSpell(21562) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	CastSpellByName(tostring(GetSpellInfo(21562),nil))
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PowerWordShield</Name><Default>false</Default><SpellID>17</SpellID><Actions></Actions><Lua>if Nova_VPowerWordShieldCheck then
	if PQR_SpellAvailable(17) 
	and members[1].HP &amp;lt; Nova_VPowerWordShield
	and not UnitDebuffID(members[1].Unit, 6788)
	and not UnitBuffID(members[1].Unit, 17)
	and IsSpellInRange(GetSpellInfo(17),members[1].Unit) == 1
	and IsUsableSpell(17) 
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and CanHeal(members[1].Unit)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	  PQR_CustomTarget = members[1].Unit
	  return true
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PrayerOfMending</Name><Default>false</Default><SpellID>33076</SpellID><Actions></Actions><Lua>if Nova_VPrayerOfMendingCheck then
	if PQR_SpellAvailable(33076)
	and members[1].HP &amp;lt; Nova_VPrayerOfMending 
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and lowhpmembers &amp;gt; 1
	and IsUsableSpell(33076)	
	and IsSpellInRange(GetSpellInfo(33076),members[1].Unit) == 1
	and CanHeal(members[1].Unit)
	then	
		local PoM = false
		
		for i=1, #members do	
			if UnitBuffID(members[i].Unit, 41635) or UnitBuffID(members[i].Unit, 33076) then
				PoM = true
			end
		end	
		if PoM == false 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	    	PQR_CustomTarget = members[1].Unit
	    	return true
	    end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purify Mouseover</Name><Default>false</Default><SpellID>527</SpellID><Actions></Actions><Lua>if Nova_VDispelRaidCheck then	
	if Nova_Mod() == Nova_VDispelRaid then
		if PQR_SpellAvailable(527) 
		and select(2,GetSpellCooldown(527)) &amp;lt; 2
		and UnitExists(&amp;quot;mouseover&amp;quot;)
		and IsUsableSpell(527)
		and IsSpellInRange(GetSpellInfo(527),&amp;quot;mouseover&amp;quot;) == 1
		and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;)
		and CanHeal(&amp;quot;mouseover&amp;quot;)
		and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) then
			if ValidDispel(&amp;quot;mouseover&amp;quot;) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto dispeled!&amp;quot;)
				return true	
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purify</Name><Default>false</Default><SpellID>527</SpellID><Actions></Actions><Lua>if Nova_VDispelRaidCheck then	
	if Nova_Mod() == Nova_VDispelRaid
	and PQR_SpellAvailable(527)
	and select(2,GetSpellCooldown(527)) &amp;lt; 2
	--and IsLeftAltKeyDown() 
	--and not IsLeftShiftKeyDown() 
	and IsUsableSpell(527)
	and not GetCurrentKeyBoardFocus() 
	and not UnitChannelInfo(&amp;quot;player&amp;quot;) then
		if members[1].HP &amp;gt; Nova_VPurify then
			for i=1, #members do
				if ValidDispel(members[i].Unit) 
				and CanHeal(members[i].Unit)
				and IsSpellInRange(GetSpellInfo(527),members[i].Unit) == 1 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
					PQR_CustomTarget = members[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft alt key down - Auto dispeled!&amp;quot;)
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RenewTank</Name><Default>false</Default><SpellID>139</SpellID><Actions></Actions><Lua>if Nova_VRenewTankCheck then
	if PQR_SpellAvailable(139) 
	and IsUsableSpell(139)
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	then
		if #Nova_Tanks &amp;gt; 0 then
			for i=1, #Nova_Tanks do
				if UnitThreatSituation(Nova_Tanks[i].Unit)
				 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 15
				 and Nova_Tanks[i].HP &amp;lt; Nova_VRenewTank
				 and CanHeal(Nova_Tanks[i].Unit)
				 and IsSpellInRange(GetSpellInfo(139),Nova_Tanks[i].Unit) == 1 
				 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
					if UnitBuffID(Nova_Tanks[i].Unit, 139) then
						if (select(7, UnitBuffID(Nova_Tanks[i].Unit, 139)) - GetTime() &amp;lt;= 2) 
						and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
							PQR_CustomTarget = Nova_Tanks[i].Unit
							--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew soon expired on tank!&amp;quot;)	
							return true
						end
					else
						PQR_CustomTarget = Nova_Tanks[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew tank!&amp;quot;)	
						return true
					end				
				end
			end
		end
		
		if UnitThreatSituation(members[1].Unit)	== 3
		 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 20
		 and not UnitBuffID(members[1].Unit, 139)
		 and members[1].HP &amp;lt; Nova_VRenew 
		 and CanHeal(members[1].Unit)
		 and IsSpellInRange(GetSpellInfo(139),members[1].Unit) == 1 
		 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 	PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew high threat member!&amp;quot;)	
		 	return true
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renew</Name><Default>false</Default><SpellID>139</SpellID><Actions></Actions><Lua>if Nova_VRenewCheck then
	if PQR_SpellAvailable(139) 
	 and not UnitBuffID(members[1].Unit, 139)
	 and IsSpellInRange(GetSpellInfo(139),members[1].Unit) == 1
	 and IsUsableSpell(139)
	 and CanHeal(members[1].Unit)
	 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 50 
	 --and Nova_CheckLastCast(139, 2.5)
	 and Nova_Moving then
		if members[1].HP &amp;lt; Nova_VRenew 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 	PQR_CustomTarget = members[1].Unit
		 	return true
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>VoidShift</Name><Default>false</Default><SpellID>108968</SpellID><Actions></Actions><Lua>if Nova_VVoidShiftCheck then
	if PQR_SpellAvailable(108968) 
	 and Nova_UnitInfo(&amp;quot;focus&amp;quot;) &amp;lt; Nova_VVoidShift
	 and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt; Nova_VSelfVoidShift
	 and UnitExists(&amp;quot;focus&amp;quot;) 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	 and CanHeal(&amp;quot;focus&amp;quot;) 
	 and IsSpellInRange(GetSpellInfo(108968),&amp;quot;focus&amp;quot;) == 1 then 	
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end
	 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFVoid Shift - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;focus&amp;quot;)) 		
	 	return true	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HolyFire</Name><Default>false</Default><SpellID>14914</SpellID><Actions></Actions><Lua>if Nova_VDPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(14914) 
	and UnitExists(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and IsSpellInRange(GetSpellInfo(14914),&amp;quot;target&amp;quot;) == 1
	and GetSpellCooldown(14914) == 0
	and members[1].HP &amp;gt;= Nova_VDPS
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80 
	--and select(2,GetSpellCooldown(14914)) &amp;lt; 2
	and IsUsableSpell(14914)
	--and GlyphCheck(14914)
	and not (select(2,GetTalentRowSelectionInfo(3)) == 9) --check talent
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		--if not UnitBuffID(&amp;quot;player&amp;quot;, 81209) then --Chakra: Chastise
			--CastSpellByName(tostring(GetSpellInfo(81209),nil))	 
		--end		
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- SelfSurvival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= Nova_VDesperatePrayer 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then	
	if Nova_VDesperatePrayerCheck
	and PQR_SpellAvailable(19236) --Desperate Prayer
	and GetSpellCooldown(19236) == 0
	and select(2,GetTalentRowSelectionInfo(4)) == 10 --check talent
	then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(19236),nil))	
		--CastSpellByName(GetSpellInfo(19236),&amp;quot;player&amp;quot;)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDesperate Prayer - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	elseif GetItemCount(5512,false,true) &amp;gt; 0	
	and PQR_SpellAvailable(5512) --Healthstone	
	and GetItemCooldown(5512) == 0 then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		UseItemByName(5512)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealthstone - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	--elseif GetInventoryItemCooldown(6)==0 --Grounded Plasma Shield 	
	--then 
		--UseInventoryItem(6) 
		--return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Custom Table --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--------------------------------------
-- Adding Players to Custom Table
--------------------------------------

--if Nova_AddCTCheck 	
 --and ( Nova_Mod2() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 --and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 --and Nova_Mod2() == Nova_AddCT
 if IsLeftShiftKeyDown()
 and IsLeftAltKeyDown()
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) ) then  
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			return false
		end
	end
	
	table.insert(Nova_CustomT, { GUID = UnitGUID(&amp;quot;mouseover&amp;quot;) } )
	
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		PQR_WriteToChat(&amp;quot;We just added &amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; to the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
	end
	return true

end


--------------------------------------
-- Removing Players from Custom Table
--------------------------------------

--if Nova_RemoveCTCheck 	
 --and ( Nova_Mod2() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 --and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 --and Nova_Mod2() == Nova_RemoveCT
if IsLeftShiftKeyDown()
 and IsLeftControlKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) )then
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;We just removed &amp;quot;..UnitName(Nova_CustomT[i].Unit)..&amp;quot; from the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
			end
			table.remove(Nova_CustomT, i)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Smite</Name><Default>false</Default><SpellID>585</SpellID><Actions></Actions><Lua>if Nova_VDPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and members[1].HP &amp;gt;= Nova_VDPS
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80 
	and PQR_SpellAvailable(585) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsUsableSpell(585)
	--and GlyphCheck(585)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and not Nova_Moving
	and IsSpellInRange(GetSpellInfo(585),&amp;quot;target&amp;quot;) == 1
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	and not stopcasting then
		--CastSpellByName(tostring(GetSpellInfo(585),nil))
		return true 
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PrayerOfHealing (TC)</Name><Default>false</Default><SpellID>596</SpellID><Actions></Actions><Lua>if Nova_VPrayerOfHealingCheck then	
	if Nova_Mod() == Nova_VPrayerOfHealing
	 and PQR_SpellAvailable(596) 
	 --and IsRightControlKeyDown() 
	 --and not GetCurrentKeyBoardFocus() 
	 --and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 15 
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and IsUsableSpell(596)
	 and not Nova_Moving then
		GetDistance()
		local PerfectAoETarget = {}
		for i=1, #members do
			table.insert(PerfectAoETarget, {NumberNearby = UnitsClose(members[i].Unit, 90), Unit = members[i].Unit} )
		end
		
		table.sort(PerfectAoETarget, function(x,y) return x.NumberNearby &amp;gt; y.NumberNearby end)
		
		if IsSpellInRange(GetSpellInfo(596),PerfectAoETarget[1].Unit) == 1 
		and CanHeal(PerfectAoETarget[1].Unit) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
				CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
			end		
			
			if GetInventoryItemCooldown(10)==0 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			--if select(2,GetInventoryItemCooldown(10)) &amp;lt; 2 then
				UseInventoryItem(10)
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGloves Engineer buff!&amp;quot;)			
			end	 
				
			if PQR_SpellAvailable(10060)
			and select(2,GetSpellCooldown(10060)) &amp;lt; 2 
			and select(2,GetTalentRowSelectionInfo(5)) == 14 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 		CastSpellByName(tostring(GetSpellInfo(10060),nil))	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPower Infusion!&amp;quot;)
			end	 			
	 	
			PQR_CustomTarget = PerfectAoETarget[1].Unit
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPrayerOfHealing Combo Auto!&amp;quot;)	
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShadowWordPain</Name><Default>false</Default><SpellID>589</SpellID><Actions></Actions><Lua>if Nova_VDPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(589) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(589),&amp;quot;target&amp;quot;) == 1
	and IsUsableSpell(589)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and Nova_UnitInfo(&amp;quot;target&amp;quot;) &amp;gt; 20
	and members[1].HP &amp;gt;= Nova_VDPS
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80 
	--or SWPtimer - GetTime() &amp;lt; 2.5
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		local SWP,_,_,_,_,_,SWPtimer = UnitDebuffID(&amp;quot;target&amp;quot;,589,&amp;quot;PLAYER&amp;quot;)
		if SWP == nil 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			return true 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShadowWordDeath</Name><Default>false</Default><SpellID>32379</SpellID><Actions></Actions><Lua>if Nova_VDPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(32379) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(32379),&amp;quot;target&amp;quot;) == 1
	and IsUsableSpell(32379)
	and select(2,GetSpellCooldown(32379)) &amp;lt; 2
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and Nova_UnitInfo(&amp;quot;target&amp;quot;) &amp;lt;= 20
	and members[1].HP &amp;gt;= Nova_VDPS
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80 
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VHealCheck then
	if PQR_SpellAvailable(2050) 
	 and members[1].HP &amp;lt; Nova_VHeal 	 
	 --and lowhpmembers &amp;lt; 3
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and IsUsableSpell(2050) 
	 and not Nova_Moving 
	 --and UnitDebuffID(members[1].Unit, 6788) -- Weakened Soul debuff
	 and CanHeal(members[1].Unit)
	 and IsSpellInRange(GetSpellInfo(2050),members[1].Unit) == 1 
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
	 and not stopcasting then		
		--PQR_CustomTarget = members[1].Unit	
		CastSpellByName(tostring(GetSpellInfo(2050)),members[1].Unit)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting Heal - Name: &amp;quot;..UnitName(members[1].Unit)..&amp;quot; HP: &amp;quot; ..members[1].HP) 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TsulongHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then	
	local bossCheck = &amp;quot;boss1&amp;quot; 
	
	if UnitExists(bossCheck) then 
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16) 	
		local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)         
		if npcID ~= 62442 
		and not UnitAffectingCombat(&amp;quot;player&amp;quot;) then --Tsulong	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug NPCID: &amp;quot; ..npcID) 
			return false
		end
	end	
	
	if PQR_SpellAvailable(2060)  	
	 and IsUsableSpell(2060) 
	 and IsSpellInRange(GetSpellInfo(2060),&amp;quot;boss1&amp;quot;) == 1
	 and not Nova_Moving then
		if Nova_UnitInfo(&amp;quot;boss1&amp;quot;) &amp;lt; 99 then
			if not UnitBuffID(&amp;quot;player&amp;quot;, 81208) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Serenity
				CastSpellByName(tostring(GetSpellInfo(81208),nil))	 
			end	 		
			
			if GetInventoryItemCooldown(10)==0 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			--if select(2,GetInventoryItemCooldown(10)) &amp;lt; 2 then
				UseInventoryItem(10)
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGloves Engineer buff!&amp;quot;)			
			end	 
				
			if PQR_SpellAvailable(10060)
			and select(2,GetSpellCooldown(10060)) &amp;lt; 2 
			and select(2,GetTalentRowSelectionInfo(5)) == 14 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 		CastSpellByName(tostring(GetSpellInfo(10060),nil))	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPower Infusion!&amp;quot;)
			end	 						

		 	if PQR_SpellAvailable(139) 
		 	and IsUsableSpell(139) 	 		 	
		 	and not UnitBuffID(&amp;quot;boss1&amp;quot;, 139, &amp;quot;PLAYER&amp;quot;) 
		 	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 		
		 		CastSpellByName(tostring(GetSpellInfo(139)),&amp;quot;boss1&amp;quot;)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Renew Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 					 			 	
		 	end
			
			local prepairBIL = false
			local BathedInLight = GetSpellInfo(122858) --Sun Breath 122855
 			if (bossCasting == BathedInLight) then
 				prepairBIL = true
 			end
 				
			if PQR_SpellAvailable(47788) 	 
			 and select(2,GetSpellCooldown(47788)) &amp;lt; 2	 
			 and ((UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff					 	 
			 	or prepairBIL)
			 and not UnitBuffID(&amp;quot;boss1&amp;quot;,116849) --LifeCocoon
			 and not UnitBuffID(&amp;quot;boss1&amp;quot;,47788)	--Guardian Spirit			 	
			 and IsUsableSpell(47788) 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 
				 CastSpellByName(tostring(GetSpellInfo(47788)),&amp;quot;boss1&amp;quot;)	
				 --PQR_WriteToChat(&amp;quot;\124cFFFF55FFGuardianSpirit - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 						 
			end

			if PQR_SpellAvailable(88684) 		
			and select(2,GetSpellCooldown(88684)) &amp;lt; 2
			and IsUsableSpell(88684) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then				
				CastSpellByName(tostring(GetSpellInfo(88684)),&amp;quot;boss1&amp;quot;)	
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting HolyWordSerenity - HP: &amp;quot; ..members[1].HP) 
			end
	 	
		 	if PQR_SpellAvailable(2061) 		 
			 and IsUsableSpell(2061) 			 
			 and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;ÐžÐ¼Ð¾Ð²ÐµÐ½Ð¸Ðµ ÑÐ²ÐµÑ‚Ð¾Ð¼&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff					 	 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(2061)),&amp;quot;boss1&amp;quot;)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast FlashHeal Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 
		 		return true
			end	
			
			if members[1].HP &amp;gt; 30 --Prevent raid wipe
			and lowhpmembers &amp;lt; 10 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 					
				CastSpellByName(tostring(GetSpellInfo(2060)),&amp;quot;boss1&amp;quot;)	 			
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GreaterHeal Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))	 		
		 		return true
			else		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFNOOOOOOOOOOOOOOOOOT Cast GreaterHeal Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
				return false
			end		
	
		end
	end
	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ( Nova_Mod() == tonumber(GetCVar(&amp;apos;Nova_VPauseRotation&amp;apos;))
 and GetCVarBool(&amp;apos;Nova_VPauseRotation_Enabled&amp;apos;) )
 or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
 or IsMounted() 
 or (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(64843)) --Divine Hymn 
 or (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(64901)) --Hymn of Hope
 or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink 
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CircleOfHealingSmart</Name><Default>false</Default><SpellID>34861</SpellID><Actions></Actions><Lua>if Nova_VCircleOfHealingCheck then
	--if Nova_VSmartCheck then
		if PQR_SpellAvailable(34861) 
		 --and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 15 
		 and IsUsableSpell(34861)
		 and select(2,GetSpellCooldown(34861)) &amp;lt; 2
		 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
		 and AverageHealth(Nova_VCircleOfHealingLimit) &amp;lt;= Nova_VCircleOfHealing 
		 and not LLdebuff then
		
			PRGetDistanceTable((Nova_VCircleOfHealing+5), 30, 3)	
			PRGetDistanceTablebyHP(Nova_VCircleOfHealing,3)
								
			if IsSpellInRange(GetSpellInfo(34861),prdistancebyhp[1].Unit) 
			and CanHeal(prdistancebyhp[1].Unit)
			and prdistancebyhp[1].PD &amp;gt;= Nova_VCircleOfHealingLimit
			and prdistancebyhp[1].HP &amp;lt;= Nova_VCircleOfHealing 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
				if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
					CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
				end						
				
				if GetInventoryItemCooldown(10)==0 
				and (prdistancebyhp[1].HP &amp;lt;= (Nova_VCircleOfHealing-10)) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 		
				--if select(2,GetInventoryItemCooldown(10)) &amp;lt; 2 then
					UseInventoryItem(10)
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGloves Engineer buff!&amp;quot;)			
				end	 
					
				if PQR_SpellAvailable(10060)
				and select(2,GetSpellCooldown(10060)) &amp;lt; 2 
				and select(2,GetTalentRowSelectionInfo(5)) == 14
				and (prdistancebyhp[1].HP &amp;lt;= (Nova_VCircleOfHealing-10)) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 		
			 		CastSpellByName(tostring(GetSpellInfo(10060),nil))	 
			 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPower Infusion!&amp;quot;)
				end	 		
				
				--CastSpellByName(tostring(GetSpellInfo(596)),prdistance[1].Unit)
				PQR_CustomTarget = prdistancebyhp[1].Unit
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast PoH - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - PD: &amp;quot;..prdistancebyhp[1].PD) 
				return true
			end
		end
	--end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CascadeComboSmart</Name><Default>false</Default><SpellID>121135</SpellID><Actions></Actions><Lua>if Nova_VCascadeCheck then
	local MaddeningShoutDebuff  = false
	if checkbossid(60708) then --Meng the Demented	
		for i=1, #members do	
			if UnitDebuffID(members[i].Unit, 117708) then
				MaddeningShoutDebuff = true
			end
		end
	end
	
	if PQR_SpellAvailable(121135)
 	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and MaddeningShoutDebuff == false
	 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 15
	 and select(2,GetSpellCooldown(121135)) &amp;lt; 2
	 --and GetSpellCooldown(121135) == 0
	 and IsUsableSpell(121135) 
	 and select(2,GetTalentRowSelectionInfo(6)) == 16 --check talent
	 and AverageHealth(Nova_VCascadeLimit) &amp;lt;= Nova_VCascade --total of 15 players/enemies can be hit	 
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;) then	 	
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
			CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
		end
			 
		if GetInventoryItemCooldown(10)==0 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		--if select(2,GetInventoryItemCooldown(10)) &amp;lt; 2 then
			UseInventoryItem(10)
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGloves Engineer buff!&amp;quot;)			
		end	 
			
		if PQR_SpellAvailable(10060)
		and select(2,GetSpellCooldown(10060)) &amp;lt; 2 
		and select(2,GetTalentRowSelectionInfo(5)) == 14 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	 		CastSpellByName(tostring(GetSpellInfo(10060),nil))	 
	 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPower Infusion!&amp;quot;)
		end	 		
		 			 	
		PQR_CustomTarget = members[1].Unit
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCascade Combo Auto!&amp;quot;)	
		return true		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Only takes effect when we&amp;apos;re 90
--if UnitLevel(&amp;quot;player&amp;quot;) == 90
 if not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
 and Nova_CheckLastCast(6, 2) then
  	--if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	--end
	-- If we are in a 5 man instance
	if IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Party (VachiusaHoly)&amp;quot;)	
	-- If we are in a 10m raid 
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid10 (VachiusaHoly)&amp;quot;)
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid25 (VachiusaHoly)&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VDivineHymn&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VDivineHymnLimit&amp;quot;, 5) 	
	SetCVar(&amp;quot;Nova_VPrayerOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VPrayerOfHealingLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_VCascade&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_VCascadeLimit&amp;quot;, 5)  
	SetCVar(&amp;quot;Nova_VCircleOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VCircleOfHealingLimit&amp;quot;, 3)  	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaHoly)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VDivineHymn&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VDivineHymnLimit&amp;quot;, 5) 	
	SetCVar(&amp;quot;Nova_VPrayerOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VPrayerOfHealingLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_VCascade&amp;quot;, 85)  
	SetCVar(&amp;quot;Nova_VCascadeLimit&amp;quot;, 5)  
	SetCVar(&amp;quot;Nova_VCircleOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VCircleOfHealingLimit&amp;quot;, 3)  	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VDivineHymn&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VDivineHymnLimit&amp;quot;, 8) 	
	SetCVar(&amp;quot;Nova_VPrayerOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VPrayerOfHealingLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_VCascade&amp;quot;, 70)  
	SetCVar(&amp;quot;Nova_VCascadeLimit&amp;quot;, 8)  
	SetCVar(&amp;quot;Nova_VCircleOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VCircleOfHealingLimit&amp;quot;, 5)  	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_VDivineHymn&amp;quot;, 60)  
	SetCVar(&amp;quot;Nova_VDivineHymnLimit&amp;quot;, 16) 	
	SetCVar(&amp;quot;Nova_VPrayerOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VPrayerOfHealingLimit&amp;quot;, 3)  
	SetCVar(&amp;quot;Nova_VCascade&amp;quot;, 70)  
	SetCVar(&amp;quot;Nova_VCascadeLimit&amp;quot;, 14)  
	SetCVar(&amp;quot;Nova_VCircleOfHealing&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_VCircleOfHealingLimit&amp;quot;, 5)  	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) 
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaHoly)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5)
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaHoly)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PrayerOfHealingSmart</Name><Default>false</Default><SpellID>596</SpellID><Actions></Actions><Lua>if Nova_VPrayerOfHealingCheck then
	--if Nova_VSmartCheck then
		if PQR_SpellAvailable(596) 
		 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 15 
		 and IsUsableSpell(596)
		 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		 --and lowhpmembers &amp;gt;= Nova_VPrayerOfHealingLimit
		 --and AverageHealth(Nova_VPrayerOfHealingLimit) &amp;lt;= Nova_VPrayerOfHealing
		 --and select(2,GetSpellCooldown(34861)) &amp;gt; 1
		 and not Nova_Moving 
		 and not stopcasting 
		 and not LLdebuff then
		 	 if UnitBuffID(&amp;quot;player&amp;quot;, 63735) and select(4, &amp;quot;player&amp;quot;, 63735) then --Serendipity buff
			 	 if (select(7, &amp;quot;player&amp;quot;, 63735) - GetTime()) &amp;lt;= 3 
				 and select(4, &amp;quot;player&amp;quot;, 63735) &amp;gt;= 2 then 
			 	 	local Nova_VPrayerOfHealingLimit = Nova_VPrayerOfHealingLimit - 1
			 	 	local Nova_VPrayerOfHealing = Nova_VPrayerOfHealing - 5
			 	 end
		 	 end
		 	 		 
			 if AverageHealth(Nova_VPrayerOfHealingLimit) &amp;lt;= Nova_VPrayerOfHealing then
			 	PRGetDistanceTable((Nova_VPrayerOfHealing+5), 30, 3)	
				PRGetDistanceTablebyHP(Nova_VPrayerOfHealing,3)
									
				if IsSpellInRange(GetSpellInfo(596),prdistancebyhp[1].Unit) 
				and CanHeal(prdistancebyhp[1].Unit)
				and prdistancebyhp[1].PD &amp;gt;= 3
				and prdistancebyhp[1].HP &amp;lt;= Nova_VPrayerOfHealing 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
					if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
						CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
					end								
					
					if GetInventoryItemCooldown(10)==0 
					and (prdistancebyhp[1].HP &amp;lt;= (Nova_VPrayerOfHealing-10)) 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 		
					--if select(2,GetInventoryItemCooldown(10)) &amp;lt; 2 then
						UseInventoryItem(10)
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGloves Engineer buff!&amp;quot;)			
					end	 
						
					if PQR_SpellAvailable(10060)
					and select(2,GetSpellCooldown(10060)) &amp;lt; 2 
					and select(2,GetTalentRowSelectionInfo(5)) == 14
					and (prdistancebyhp[1].HP &amp;lt;= (Nova_VPrayerOfHealing-10)) 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	 		
				 		CastSpellByName(tostring(GetSpellInfo(10060),nil))	 
				 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPower Infusion!&amp;quot;)
					end	 					
				 	
					--CastSpellByName(tostring(GetSpellInfo(596)),prdistance[1].Unit)
					PQR_CustomTarget = prdistancebyhp[1].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast PoH - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - PD: &amp;quot;..prdistancebyhp[1].PD) 
					return true
				end
			end
		end
	--end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>GuardianSpirit</Name><Default>false</Default><SpellID>47788</SpellID><Actions></Actions><Lua>if Nova_VGuardianSpiritCheck then
	if PQR_SpellAvailable(47788) 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and select(2,GetSpellCooldown(47788)) &amp;lt; 2
	 --and GetSpellCooldown(47788) == 0
	 and UnitThreatSituation(members[1].Unit) == 3
	 and IsUsableSpell(47788)
	 and CanHeal(members[1].Unit)
	 and IsSpellInRange(GetSpellInfo(47788),members[1].Unit) == 1 then	 
		if members[1].HP &amp;lt; Nova_VGuardianSpirit 
		and UnitIsPlayer(members[1].Unit) then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end					
		 	PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFGuardianSpirit - HP: &amp;quot; ..members[1].HP) 		
		 	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DivineHymn</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--DivineHymn (TC)
if Nova_VMDivineHymnCheck then	
	if Nova_Mod() == Nova_VMDivineHymn then
		if PQR_SpellAvailable(64843)	
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)	
		and IsUsableSpell(64843)		
		and select(2,GetSpellCooldown(64843)) &amp;lt; 2 then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end
					
			if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
				CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
			end			
			
			CastSpellByName(tostring(GetSpellInfo(64843),nil))		   
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRightShiftKeyDown - DivineHymn!&amp;quot;)
			return true
		end
	end		
end
--DivineHymn 
if Nova_VDivineHymnAutoCheck then
	if PQR_SpellAvailable(64843)
	and select(2,GetSpellCooldown(64843)) &amp;lt; 2	
	and IsUsableSpell(64843) 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and not stopcasting 
	and not LLdebuff then
		if AverageHealth(Nova_VDivineHymnLimit) &amp;lt;= Nova_VDivineHymn then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end
					
			if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
				CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
			end				
			
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDivineHymn - Raid HP: &amp;quot;..AverageHealth(Nova_VDivineHymnLimit))		
			CastSpellByName(tostring(GetSpellInfo(64843)),&amp;quot;player&amp;quot;)	
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lightwell</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VLightwellCheck then	
	if Nova_Mod() == Nova_VLightwell
	and PQR_SpellAvailable(724)
	and select(2,GetSpellCooldown(724)) &amp;lt; 2 
	and IsUsableSpell(724) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		CastSpellByName(tostring(GetSpellInfo(724),nil))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	  	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRightControlKeyDown - Lightwell!&amp;quot;)
	  	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HolyWordSanctuary</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VHolyWordSanctuaryCheck then	
	if Nova_Mod() == Nova_VHolyWordSanctuary then
		if not UnitBuffID(&amp;quot;player&amp;quot;, 81206) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Chakra: Sanctuary
			CastSpellByName(tostring(GetSpellInfo(81206),nil))	 
		end	
		
		if PQR_SpellAvailable(88685)
		and UnitBuffID(&amp;quot;player&amp;quot;, 81206)
		and select(2,GetSpellCooldown(88685)) == 0 
		and IsUsableSpell(88685) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
			CastSpellByName(tostring(GetSpellInfo(88685),nil))
			if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeftControlKeyDown - HolyWordSanctuary!&amp;quot;)
		  	return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShadowWordPain Mouseover</Name><Default>false</Default><SpellID>589</SpellID><Actions></Actions><Lua>if Nova_VDPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(589) 
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and IsSpellInRange(GetSpellInfo(589),&amp;quot;mouseover&amp;quot;) == 1
	and IsUsableSpell(589)
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;)
	and Nova_UnitInfo(&amp;quot;mouseover&amp;quot;) &amp;gt; 20
	and members[1].HP &amp;gt;= Nova_VDPS
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80 
	--or SWPtimer - GetTime() &amp;lt; 2.5
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) then
		local SWP,_,_,_,_,_,SWPtimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,589,&amp;quot;PLAYER&amp;quot;)
		if SWP == nil 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			return true 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HolyWordSerenity</Name><Default>false</Default><SpellID>88684</SpellID><Actions></Actions><Lua>if Nova_VHolyWordSerenityCheck then
	if PQR_SpellAvailable(88684) 
	and UnitBuffID(&amp;quot;player&amp;quot;, 81208) --Chakra: Serenity
	and members[1].HP &amp;lt; Nova_VHolyWordSerenity 	 
	and select(2,GetSpellCooldown(88684)) &amp;lt; 2
	and lowhpmembers &amp;lt; 3
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and IsUsableSpell(88684) 		
	and CanHeal(members[1].Unit)
	and IsSpellInRange(GetSpellInfo(88684),members[1].Unit) == 1 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
		PQR_CustomTarget = members[1].Unit					
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting HolyWordSerenity - HP: &amp;quot; ..members[1].HP) 
		return true
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HolyWordChastise</Name><Default>false</Default><SpellID>88625</SpellID><Actions></Actions><Lua>--HolyWordChastise
if Nova_VDPSCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)	
	and UnitExists(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work	
	and members[1].HP &amp;gt;= Nova_VDPS
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 80 	
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 81209) then --Chakra: Chastise
			if PQR_SpellAvailable(88625) 
			and IsSpellInRange(GetSpellInfo(88625),&amp;quot;target&amp;quot;) == 1
			and select(2,GetSpellCooldown(88625)) &amp;lt; 2
			and IsUsableSpell(88625) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
				return true 
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ResAndMRes</Name><Default>false</Default><SpellID>527</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitIsConnected(&amp;quot;mouseover&amp;quot;)
and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 			
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and not UnitHasIncomingResurrection(&amp;quot;mouseover&amp;quot;) 
then		
	if PQR_SpellAvailable(83968) 		
	--and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(83968)) ----Mass Resurrection debuff - not work?
	and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(95223)) ----Mass Resurrection debuff 
	--and (IsSpellInRange(GetSpellInfo(83968),&amp;quot;mouseover&amp;quot;) == 1) - not work?
	--and UnitInRange(&amp;quot;mouseover&amp;quot;) 
	and Nova_CheckLastCast(83968, 2.0)		
	then
		if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
		end
		local deadnum = 0
		if group then
			for i = 1, GetNumGroupMembers() do 
				local member = group..i
				if UnitIsDeadOrGhost(member) then
					if not UnitDebuff(member, GetSpellInfo(95223)) then ----Mass Resurrection debuff 
						deadnum = deadnum + 1
					end
				end
			end
		end		
		if deadnum &amp;gt;= 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(83968),nil)) --Mass Resurrection	 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto MasRes!&amp;quot;)
			return false		
		end
	end
	
	if PQR_SpellAvailable(2006)
	and IsUsableSpell(2006) 		
	and Nova_CheckLastCast(2006, 2.0)	
	and (IsSpellInRange(GetSpellInfo(2006),&amp;quot;mouseover&amp;quot;) == 1) 		
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then 
		CastSpellByName(tostring(GetSpellInfo(2006)),&amp;quot;mouseover&amp;quot;) --Resurrection	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto Res!&amp;quot;)
		return false			
	end			
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SolaceInsanity</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--SolaceInsanity - not finish yet
if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_VSolaceInsanity
and select(2,GetTalentRowSelectionInfo(3)) == 9 then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)	
	--and PQR_SpellAvailable(14914) 
	and PQR_SpellAvailable(129250) 	
	and UnitExists(&amp;quot;target&amp;quot;)	
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and not Nova_Moving
	and IsSpellInRange(GetSpellInfo(14914),&amp;quot;target&amp;quot;) == 1
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
		CastSpellByName(tostring(GetSpellInfo(14914),&amp;quot;target&amp;quot;)) --129250 or 139139
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Drink</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
--and GetItemCount(80618,false,true) &amp;gt; 0	
and PQR_SpellAvailable(80618) --Mage cookies	
and not UnitBuffID(&amp;quot;player&amp;quot;, 104269)
and not Nova_Moving 
and GetItemCooldown(80618) == 0 then
	UseItemByName(80618)
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMage cookies - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- NewEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then
	local boss,bossid = bossid()
	local dispelid = 527
	local dispelmagicid = 528		
	local buff = { }
	stopcasting = false
	stopfade = false
	LLdebuff = false
	LLdebuffunit = false	
	if UnitExists(boss) then
		local _, _, rdifficulty = GetInstanceInfo()
		--TFT raid		
		if bossid == 69465 and (rdifficulty == 5 or rdifficulty ==6) then --Jin&amp;apos;rokh the Breaker
			local buff = { 138732 } --Ionization 
			local fluiditydebuff  = 138002 --Fluidity
			RaidJBDispel(dispelid,buff,fluiditydebuff,5)
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 
		elseif bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68476 then --Horridon
			--local buff  = { 136708, 136719, 136587, 136710, 136512 } --Magic, Magic, Poison, Disease, Curse
			local buff  = { 136708, 136719, 136710 } 
			RaidDispel(dispelid,buff) 
		elseif bossid == 68065 or bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head 
		-- Players affected by  Cinders should be quick to run over any existing  Icy Ground void zones, and then move to a safe location (out of the way of the raid) to be dispelled.		
			local buff  = { 139822 } 	
			RaidRangeDispel(dispelid,buff,10) 		
		elseif bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispelDelay(dispelid,buff,5)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end			
			stopfade = true		
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then 
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff) --Protectors of the Endless, Lightning Prison
			SBossDispel(117283,dispelmagicid) --Protectors of the Endless, Cleansing Waters 	
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		--else
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFBossid: &amp;quot;..bossid..&amp;quot; - boss: &amp;quot;..boss)
		end		
		
		--HoF raid
		if bossid == 62397 then
			--BossDispel(122149,dispelmagicid,boss) --Wind Lord Mel&amp;apos;jarak, Quickening debuff 
			SBossDispel(122149,dispelmagicid)
		--MSV raid
		elseif bossid == 60701 or bossid == 60708 or bossid == 60709 or bossid == 60710 then
			--BossDispel(117697,dispelmagicid,boss) --Zian of the Endless Shadow, Shield of Darkness	
			SBossDispel(117697,dispelmagicid)
		--TeS raid
		elseif bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- OldEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_OldEventsCheck then --Old raid
	local boss,bossid = bossid()
	if UnitExists(boss) then					
		if bossid == 55294 then
			local PQ_SN = PQ_Shrapnel
			local PQ_FL = PQ_FadingLight
			local PQ_HOT = PQ_HourOfTwilight				
		
			-- Fading Light Debuff
			for i=1,#PQ_FL do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
			
			-- Hour of Twilight
			--if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() then	
			if false then
				if PQR_SpellAvailable(115176)
				and select(2,GetSpellCooldown(115176)) &amp;lt; 2
				then SpellStopCasting() CastSpellByName(tostring(GetSpellInfo(115176)),&amp;quot;player&amp;quot;) return true end
			else
				local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(boss) 
				for i=1,#PQ_HOT do
					if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					end
				end
			end
		end
		
		if bossid == 56173 then
			-- Target for Shrapnel
			for i=1,#PQ_SN do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i])) - GetTime() &amp;lt; 2 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RacialsCheck
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then

	local PQ_Class = select(2, UnitClass(&amp;quot;player&amp;quot;)) 
	
	--Draenei 
	local GiftOfTheNaaru = 59542	
	--Blood Elf
	local ArcaneTorrent = 28730 --mana regen
	
	if PQ_Class == &amp;quot;PALADIN&amp;quot; then
		GiftOfTheNaaru = 59542	
	elseif PQ_Class == &amp;quot;MONK&amp;quot; then 
		GiftOfTheNaaru = 121093
		ArcaneTorrent = 129597 --chi regen
	elseif PQ_Class == &amp;quot;PRIEST&amp;quot; then  
		GiftOfTheNaaru = 59544
	elseif PQ_Class == &amp;quot;SHAMAN&amp;quot; then 
		GiftOfTheNaaru = 59547
	end

	--Troll 
	local Berserking = 26297 
	--Undead
	local WillOfTheForsaken = 7744  
	--Dwarven 
	local Stoneform = 20594 
	--Human 
	local EveryManForHimself = 59752
	--Undead 
	--local Cannibalize = 20577 --not much helpful
	--Orc 
	local BloodFury = 33702
	--Gloves Engineer
	local _, GECooldown, GEReady = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10)
			
	--HP
	if IsSpellKnown(GiftOfTheNaaru) 
	and GetSpellCooldown(GiftOfTheNaaru) == 0 
	and PQR_SpellAvailable(GiftOfTheNaaru)
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30	
	then		
		CastSpellByName(tostring(GetSpellInfo(GiftOfTheNaaru),nil))	 
		return true 
	end
	
	--Mana
	if IsSpellKnown(ArcaneTorrent) 
	and PQ_Class ~= &amp;quot;MONK&amp;quot;
	and GetSpellCooldown(ArcaneTorrent) == 0 
	and PQR_SpellAvailable(ArcaneTorrent)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80	
	then		
		CastSpellByName(tostring(GetSpellInfo(ArcaneTorrent),nil))	 
		return true 
	end	
  	
  	--CDs
  	if not racialcds then
	  	function racialcds()
			if IsSpellKnown(BloodFury) 
			and GetSpellCooldown(BloodFury) == 0 
			and PQR_SpellAvailable(BloodFury)	
			then		
				CastSpellByName(tostring(GetSpellInfo(BloodFury),nil))	 
				return true 
			elseif IsSpellKnown(Berserking) 
			and GetSpellCooldown(Berserking) == 0 
			and PQR_SpellAvailable(Berserking)	
			then		
				CastSpellByName(tostring(GetSpellInfo(Berserking),nil))	 
				return true 
			elseif GECooldown == 0 
			and GEReady == 1 then
				UseInventoryItem(10)
			end
		end
	end
  	
  	if lowhpmembers &amp;gt;=5 then
  		racialcds()
  	end
  	
  	--Removes any Charm, Fear and Sleep effect
	if not GotFear then
		function GotFear(t) 
			local debuff = { 10326, 8122, 2094, 5782, 5484, 6358, 5246 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end
	if IsSpellKnown(WillOfTheForsaken) 
	and GetSpellCooldown(WillOfTheForsaken) == 0 
	and PQR_SpellAvailable(WillOfTheForsaken)	
	and GotFear(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(WillOfTheForsaken),nil))	 
		return true 
	end  
	
	--Removes all poison, disease and bleed effects and reduces all damage taken by 10% for 8 sec
	if not GotPoison then
		function GotPoison(t)
			local i, debuff = 1, select(5,UnitDebuff(t, 1)) 
			while debuff do
				if debuff == &amp;quot;Poison&amp;quot; or debuff == &amp;quot;Disease&amp;quot; then return true end
				i = i + 1 debuff = select(5,UnitDebuff(t, i)) 
			end
		end
	end	
	if IsSpellKnown(Stoneform) 
	and GetSpellCooldown(Stoneform) == 0 
	and PQR_SpellAvailable(Stoneform)	
	and GotPoison(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(Stoneform),nil))	 
		return true 
	end    	
	
	--Removes all movement impairing effects and all effects which cause loss of control of your character
	if not LostControl then
		function LostControl(t) 
			local debuff = { 122, 10326, 8122, 2094, 5782, 5484, 6358, 5246, 408 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end  
	if IsSpellKnown(EveryManForHimself) 
	and GetSpellCooldown(EveryManForHimself) == 0 
	and PQR_SpellAvailable(EveryManForHimself)	
	and LostControl(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(EveryManForHimself),nil))	 
		return true 
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TankFlashHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_VTankFlaskHealCheck then
	if PQR_SpellAvailable(2061) 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)	 
	 and IsUsableSpell(2061)
	 and not Nova_Moving 
	 and not UnitChannelInfo(&amp;quot;player&amp;quot;)
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;)	 
	 and not stopcasting then	 
		if #Nova_Tanks &amp;gt; 0 then
			for i=1, #Nova_Tanks do
				if UnitThreatSituation(Nova_Tanks[i].Unit) 	
				 and Nova_Tanks[i].HP &amp;lt;= Nova_VTankFlaskHeal 
				 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 10 		 
				 and CanHeal(Nova_Tanks[i].Unit)
				 and IsSpellInRange(GetSpellInfo(2061),Nova_Tanks[i].Unit) == 1 then
					if PQR_SpellAvailable(89485)
					and not UnitBuffID(&amp;quot;player&amp;quot;, 89485)
					and GetSpellCooldown(89485) == 0 then				
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFInner Focus!&amp;quot;)
						CastSpellByName(tostring(GetSpellInfo(89485),nil))	 				
					end					 
					--PQR_CustomTarget = Nova_Tanks[i].Unit
		 			CastSpellByName(tostring(GetSpellInfo(2061)),Nova_Tanks[i].Unit)
		 			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting TankFlashHeal - HP: &amp;quot; ..Nova_Tanks[i].HP) 
		 			return true										
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PRIEST>