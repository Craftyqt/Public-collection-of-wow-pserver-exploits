<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end

-- Load LUA data files.
if PQR_RotationStarted then
 PQR_RotationStarted = false
	 -- Load required data files
	 if PQR_LoadLua ~= nil then
		  if PQR_LoadLua(&amp;quot;PQR_PriestPvP_Data.lua&amp;quot;) == false then
		   PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PriestPvP_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
		   PQR_StopRotation()
		   return true
		  end 
		  if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
		   PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
		   PQR_StopRotation()
		   return true
		  end
	 end
end


GroupInfo() 

--------------------------------------------------------------

PauseKey				= PQI:IsHotkeys(PQI_CpoworksShadowPvP_PauseRotation_key) 
GripKey					= PQI:IsHotkeys(PQI_CpoworksShadowPvP_LifeGrip_key)
MDKey					= PQI:IsHotkeys(PQI_CpoworksShadowPvP_MassDispel_key)  
PsycicHorrorKey			= PQI:IsHotkeys(PQI_CpoworksShadowPvP_PyschicHorror_key)
Level90TalentsKey		= PQI:IsHotkeys(PQI_CpoworksShadowPvP_Level90TalentsKey_key)
DispersionKey			= PQI:IsHotkeys(PQI_CpoworksShadowPvP_DispersionKey_key)

if not PQI_CpoworksShadowPvP_BurstKey_enable then 
	BurstKey			= IsMouseButtonDown(3)
else 
 	BurstKey			= PQI:IsHotkeys(PQI_CpoworksShadowPvP_BurstKey_key)
end
if not PQI_CpoworksShadowPvP_FearKey_enable then 
	FearKey				= IsMouseButtonDown(4)
else 
 	FearKey				= PQI:IsHotkeys(PQI_CpoworksShadowPvP_FearKey_key)
end
if not PQI_CpoworksShadowPvP_Level15TalentsKey_enable then 
	PsyfiendKey			= IsMouseButtonDown(5)
else 
 	PsyfiendKey			= PQI:IsHotkeys(PQI_CpoworksShadowPvP_Level15TalentsKey_key)
end


AutoFearWard			= PQI_CpoworksShadowPvP_AutoFearWard_enable
AutoUseDP				= PQI_CpoworksShadowPvP_AutoDevouringPlague_enable
MouseOverSWP			= PQI_CpoworksShadowPvP_MouseoverShadowWordPain_enable
MouseOverVT				= PQI_CpoworksShadowPvP_MouseoverVampiricTouch_enable
AutoShadowform			= PQI_CpoworksShadowPvP_AutoShadowform_enable
HealOthers				= PQI_CpoworksShadowPvP_HealOthers_enable

HealthstoneHP			= PQI_CpoworksShadowPvP_Healthstone_value
VoidShiftHP				= PQI_CpoworksShadowPvP_VoidShift_value
PowerWordShieldHP		= PQI_CpoworksShadowPvP_PowerWordShield_value
PrayerofMendingHP		= PQI_CpoworksShadowPvP_PrayerofMending_value
RenewHP					= PQI_CpoworksShadowPvP_Renew_value
FlashHealHP				= PQI_CpoworksShadowPvP_FlashHeal_value
VampericEmbraceHP		= PQI_CpoworksShadowPvP_VampericEmbrace_value
DispersionHP			= PQI_CpoworksShadowPvP_Dispersion_value


SafeToShift				= 80


if not PQI_CpoworksShadowPvP_PauseRotation_enable then 
	PauseKey	= false
end

if not PQI_CpoworksShadowPvP_LifeGrip_enable then 
	GripKey	= false
end

if not PQI_CpoworksShadowPvP_MassDispel_enable then 
	MDKey	= false
end

if not PQI_CpoworksShadowPvP_FlagPickupKey_enable then 
	FlagPickUpKey	= false
end

if not PQI_CpoworksShadowPvP_PyschicHorror_enable then 
	PsycicHorrorKey	= false
end

if not PQI_CpoworksShadowPvP_DispersionKey_enable then 
	DispersionKey	= false
end

--Dont heal during burst/burst keydown.
if BurstKey then
	PowerWordShieldHP		= 0
	PrayerofMendingHP		= 0
	RenewHP					= 0
	FlashHealHP				= 0
	VampericEmbraceHP		= 0
	DispersionHP			= 0
end


--Pause
if PauseKey
or IsMounted() 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti Stealth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RedRussian&amp;apos;s &amp;quot;Stealthers&amp;apos; Bane&amp;quot;

local rescan_period=2 --how often stealthed list is repopulated

local function IsStealthed(unit) --check if unit is stealthed
stealth,prowl,shadowmeld=1784,5215,58984 --list of detectable stealth buffs may be incomplete!
	if ( UnitBuffID(unit,stealth) or UnitBuffID(unit,prowl) or UnitBuffID(unit,shadowmeld) ) then return true
	else return false
	end
end

local function Breaker() --instant stealth breaker, class dependent
_, playerClass = UnitClass(&amp;quot;player&amp;quot;)
	if playerClass == &amp;quot;WARRIOR&amp;quot; then
		return 57755 --Heroic Throw
	elseif playerClass == &amp;quot;PALADIN&amp;quot; then
		if PQR_SpellAvailable(879) then
			return 879 --Exorcism
		else	
			return 20271 --Judgment
		end	
	elseif playerClass == &amp;quot;HUNTER&amp;quot; then
		return 3044 --Arcane shot
	elseif playerClass == &amp;quot;ROGUE&amp;quot; then
		if IsStealthed(&amp;apos;player&amp;apos;) then
			return 6770 --Sap
		else
			return 121733 --Throw
		end
	elseif playerClass == &amp;quot;PRIEST&amp;quot; then
		return 589 --Shadow Word: Pain
	elseif playerClass == &amp;quot;DEATHKNIGHT&amp;quot; then
		return 45524 --Chains of Ice
	elseif playerClass == &amp;quot;SHAMAN&amp;quot; then
		return 8056 --Frost Shock
	elseif playerClass == &amp;quot;MAGE&amp;quot; then
		return 30455 --Ice Lance
	elseif playerClass == &amp;quot;WARLOCK&amp;quot; then
		return 77799 --Fel Flame
	elseif playerClass == &amp;quot;MONK&amp;quot; then
		return 115546 --Taunt
	elseif playerClass == &amp;quot;DRUID&amp;quot; then
		if IsStealthed(&amp;apos;player&amp;apos;) then
			return 0 --do nothing
		else
			return 8921 --moonfire
		end
	else
		return 0 
	end
end

local breakername=GetSpellInfo(Breaker()) --localized breaker name for use with IsSpellInRange


------------------------BG/RBG--------------------------------
--get stealthed list
if not last_scan or GetTime()-last_scan&amp;gt;=rescan_period then --repopulate list every T seconds
last_scan=GetTime()
stealthed={} --depopulate stealthed list
currtarget=UnitName(&amp;apos;target&amp;apos;) --get current target&amp;apos;s name

	for j=1,GetNumBattlefieldScores() do --get player faction to make profile work in rbgs and arenas
	name1=GetBattlefieldScore(j) 
		if name1==UnitName(&amp;apos;player&amp;apos;) then 
		pfaction=select(6,GetBattlefieldScore(j))
		break
		end 
	end

	for i=1, GetNumBattlefieldScores() do 
	name, killingBlows, honorableKills, deaths, honorGained, faction, rank, race, class = GetBattlefieldScore(i)
	matched_name=name:match(&amp;apos;[^-]+&amp;apos;) --filter out &amp;quot;-Realm&amp;quot; part
		if (class==&amp;quot;DRUID&amp;quot; or class==&amp;quot;ROGUE&amp;quot;) and faction~=pfaction and not UnitChannelInfo(&amp;apos;player&amp;apos;) then --target change is fatal to channgeling
		TargetUnit(name)
			if UnitName(&amp;apos;target&amp;apos;)~=matched_name or ( UnitName(&amp;apos;target&amp;apos;)==matched_name and IsStealthed(&amp;apos;target&amp;apos;) ) then --targeting attemp was unsuccessful or stealthed target was caught during list repopulation
			stealthed[name]=1
			end
		end
		if currtarget and UnitName(&amp;apos;target&amp;apos;)~=currtarget then --return to previous target after targeting stealther
		TargetLastTarget() 
		elseif not currtarget then 
		ClearTarget() 
		end	
	end
end

--look for stealthed
if PQR_SpellAvailable(Breaker()) then --CD/GCD check to prevent excessive spam. NOTE: spell with ID 0 is never avalaible
oldtarget=UnitName(&amp;apos;target&amp;apos;) --get current target&amp;apos;s name
stealther_spotted=false
	for k,v in pairs(stealthed) do
		if not ( UnitCastingInfo(&amp;apos;player&amp;apos;) or UnitChannelInfo(&amp;apos;player&amp;apos;) ) and v==1 then --not on GCD &amp; not casting &amp; not channeling
		TargetUnit(k)
			if UnitName(&amp;apos;target&amp;apos;)==k:match(&amp;apos;[^-]+&amp;apos;) then --k is matched to be the same format with UnitName(&amp;apos;target&amp;apos;)
				if IsStealthed(&amp;apos;target&amp;apos;) and IsSpellInRange(breakername,&amp;apos;target&amp;apos;)==1 then --range check to prevent spam caused by stealth glitch
				CastSpellByID(Breaker(),&amp;apos;target&amp;apos;)
				stealther_spotted=true --flag fixing your target on spotted stealther
				else
				stealthed[k]=0	--exclude non-stealthed or too distant stealther from the list
				end
			end
		end
		if not stealther_spotted then	--return to previous target if no stealther was spotted, do nothing otherwise
			if oldtarget and UnitName(&amp;apos;target&amp;apos;)~=oldtarget then 
			TargetLastTarget() 
			elseif not oldtarget then 
			ClearTarget() 
			end
		end	
	end	
end
------------------------ARENA--------------------------------
for a=1,5 do
local arenatarget=&amp;apos;arena&amp;apos;..a
	if IsStealthed(arenatarget) then
	CastSpellByID(Breaker(),arenatarget)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fear</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FearKey then
	SpellStopCasting()
	_castSpell(8122)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fear Ward</Name><Default>false</Default><SpellID>6346</SpellID><Actions></Actions><Lua>if AutoFearWard
and not UnitBuffID(&amp;quot;player&amp;quot;,6346) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flag Pickup</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetBattlefieldStatus(1)==&amp;apos;active&amp;apos; or GetBattlefieldStatus(2)==&amp;apos;active&amp;apos; then
InteractUnit(&amp;apos;Horde flag&amp;apos;)
InteractUnit(&amp;apos;Alliance flag&amp;apos;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksShadowPvP_Healthstone_enable then return false end


local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)
local HealstoneCD = select(2,GetItemCooldown(5512))

if PlayerHP &amp;lt; HealthstoneHP then
	if HealstoneCD == 0 and GetItemCount(5512) &amp;gt; 0  then
    	UseItemByName(select(1,GetItemInfo(5512)), &amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JukeBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
			and not HaveBuff(&amp;quot;player&amp;quot;,104773,0) then
				local spellId = select(12, ...)
				local listId = {
					6552, --Pummel
					1766, --Kick
					47528, --Mind Freeze
					47476, --Strangulate
					96231, --Rebuke
					57994, --Wind Shear
					2139, --Counterspell
					19647, --Spell Lock
					80965, --Skull Bash
					34490, --Silencing shot
				}
				for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						print(&amp;quot;Juked &amp;quot; ..GetSpellInfo(spellId).. &amp;quot; from &amp;quot; ..sourceNAME)
						PQR_DelayRotation(.5)
						return true
					end
				end
			end
		end
	end
end

JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mass Dispel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MDKey then
	if IsSpellKnown(32375) then
		CastSpellByName(GetSpellInfo(32375))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Offencive Dispels</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness

12472,  -- Icy Veins

1022,   -- Hand of Protection

11426,   -- Ice Barrier

20925,  -- Sacred Shield

114250,   -- Selfless Healer

17    -- Power Word: Shield

}

if PQR_SpellAvailable(528) 
and PlayerMana &amp;gt; 50 then
	for i = 1, #cTar do
		if UnitExists(cTar[i]) then
			for j = 1, #purgeThis2 do
				if UnitBuffID(cTar[i], purgeThis2[j]) ~= nil
				and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) ~= nil
				and not LineOfSight(cTar[i]) then
					_castSpell(528, cTar[i])
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Level 15 Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PsyfiendKey then
	if IsSpellKnown(108921) then
		CastSpellByName(GetSpellInfo(108921))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
	
	
	if IsSpellKnown(605) 
	and UnitExists(&amp;quot;target&amp;quot;) then
		CastSpellByName(GetSpellInfo(605))
	end	
	
	--Void tendrils
	if IsSpellKnown(108920) then
		CastSpellByName(GetSpellInfo(108920))
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shackle Undead</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;mouseover&amp;quot;) 
and UnitCreatureType(&amp;quot;mouseover&amp;quot;) == &amp;quot;Undead&amp;quot;
and not UnitDebuffID(&amp;quot;mouseover&amp;quot;,9484) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) then
	CastSpellByName(GetSpellInfo(9484),&amp;quot;mouseover&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SWD Instants</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Create our frame and bind combat log events
if not SWDFrame then
	SWDFrame = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)	
	SWDFrame:Hide()
end

if not GlyphCheck(120583)
or not PQR_SpellAvailable(32379) then
  	return false
end
  
  
 -- Spell event table
  local spellIds = {
	-- Hunter
	[19503] = {GetSpellInfo(129176)},		-- Scatter 
	-- Paladin
	[20066] = {GetSpellInfo(129176)}, 		-- Repantance
	[115750] = {GetSpellInfo(129176)},		-- Blinding Light
	-- Rogue
	[2094]  = {GetSpellInfo(129176)},		-- Blind
	--Monk
	[115078] = {GetSpellInfo(129176)},		-- Paralyze	
}


function EventHandler(self, event, ...)
    local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
    if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot;
		and destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
			local sid = select(12, ...)
			local sname = spellIds[sid]
			if sname ~= nil then
				SpellStopCasting()
				CastSpellByName(GetSpellInfo(129176), sourceNAME) 
				return
			end
	  	end
    end
end

SWDFrame:SetScript(&amp;quot;OnEvent&amp;quot;, EventHandler)
SWDFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Void Shift</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksShadowPvP_VoidShift_enable then return false end

local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if PQR_SpellAvailable(108968) then
	for i=1, #members do
		--Shift other people
		if members[i].HP &amp;lt; VoidShiftHP
		and members[i].IsPlayer
		and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
		and not UnitBuffID(members[i].Unit, 45438) --Block
		and not UnitBuffID(members[i].Unit, 642) --Bubble
		and not UnitBuffID(members[i].Unit, 19263) --Deterrence
		and not UnitDebuffID(members[i].Unit, 33786) --Clone
		and myHp &amp;gt; SafeToShift then
			_castSpell(108968, members[i].Unit)
		end
		
		--Shift self.
		if myHp &amp;lt; VoidShiftHP
		and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
		and members[i].IsPlayer
		and members[i].HP &amp;gt; SafeToShift then
			_castSpell(108968, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SWD</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
	cTarHP =  100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])
	
	if UnitExists(cTar[i])
	and UnitCanAttack(&amp;quot;player&amp;quot;, cTar[i]) ~= nil
	and not LineOfSight(cTar[i])
	and cTarHP &amp;lt; 20 then
		_castSpell(32379, cTar[i])
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Powerword Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksShadowPvP_PowerWordShield_enable then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)


if PQR_SpellAvailable(17) 
and not HealOthers then
	if PlayerHP &amp;lt; PowerWordShieldHP
	and not HaveDebuff(&amp;quot;player&amp;quot;,6788)
	and not UnitBuffID(&amp;quot;player&amp;quot;,17) then
	  	_castSpell(17, &amp;quot;player&amp;quot;)
	end
end


if PQR_SpellAvailable(17) 
and HealOthers then
	for i=1, #members do
		if members[i].HP &amp;lt; PowerWordShieldHP
		and not HaveDebuff(members[i].Unit,6788)
		and not UnitBuffID(members[i].Unit,17)
		and not LineOfSight(members[i].Unit) then
		  _castSpell(17, members[i].Unit) 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Prayer of Mending</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksShadowPvP_PrayerofMending_enable then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)


if PQR_SpellAvailable(33076) 
and not HealOthers then
	if PlayerHP &amp;lt; PrayerofMendingHP then
	  	_castSpell(33076, &amp;quot;player&amp;quot;)
	end
end

if PQR_SpellAvailable(33076) 
and HealOthers then
	for i=1, #members do
		if members[i].HP &amp;lt; PrayerofMendingHP 
		and not LineOfSight(members[i].Unit) then
		 	_castSpell(33076, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksShadowPvP_Renew_enable then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)


if PQR_SpellAvailable(139) 
and not HealOthers then
	if PlayerHP &amp;lt; RenewHP 
	and not UnitBuffID(&amp;quot;player&amp;quot;, 139) then
	  	_castSpell(139, &amp;quot;player&amp;quot;)
	end
end

if PQR_SpellAvailable(139) 
and HealOthers then
	for i=1, #members do
		if members[i].HP &amp;lt; RenewHP 
		and not UnitBuffID(members[i].Unit, 139)
		and not LineOfSight(members[i].Unit) then
		 	_castSpell(139, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Shadoworbs = UnitPower(&amp;quot;player&amp;quot;,13)

if PQR_SpellAvailable(8092)
and Shadoworbs &amp;lt; 3 then
	_castSpell(8092)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SW : Pain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>SWP = UnitDebuffID(&amp;quot;target&amp;quot;, 589, &amp;quot;player&amp;quot;)
SWPmo = UnitDebuffID(&amp;quot;mouseover&amp;quot;, 589, &amp;quot;player&amp;quot;)


if PQR_SpellAvailable(589)
and not SWP then
	_castSpell(589, &amp;quot;target&amp;quot;)
end

if MouseOverSWP then
	if PQR_SpellAvailable(589)
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) ~= nil
	and not SWPmo then
		_castSpell(589, &amp;quot;mouseover&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vamperic Touch</Name><Default>false</Default><SpellID>34914</SpellID><Actions></Actions><Lua>local VT,_,_,_,_,_,VTtimer = UnitDebuffID(&amp;quot;target&amp;quot;,34914,&amp;quot;PLAYER&amp;quot;)
local VTmo,_,_,_,_,_,VTtimermo = UnitDebuffID(&amp;quot;mouseover&amp;quot;,34914,&amp;quot;PLAYER&amp;quot;)


if PQR_SpellAvailable(34914) then
	if VT then
		if VTtimer - GetTime() &amp;lt;= 3 then
			_castSpell(34914, &amp;quot;target&amp;quot;) 
		end
	else 
		_castSpell(34914, &amp;quot;target&amp;quot;)
	end
end

if MouseOverVT then
	if PQR_SpellAvailable(34914)
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) ~= nil then
		if VTmo then
			if VTtimermo - GetTime() &amp;lt;= 3 then
				_castSpell(34914, &amp;quot;mouseover&amp;quot;) 
			end
		else 
			_castSpell(34914, &amp;quot;mouseover&amp;quot;)
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Devouring Plague</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Shadoworbs = UnitPower(&amp;quot;player&amp;quot;,13)


if AutoUseDP then
	if Shadoworbs == 3 then
		_castSpell(2944, &amp;quot;target&amp;quot;)
	end
end

if not AutoUseDP then
	if BurstKey 
	and Shadoworbs == 3 then
		_castSpell(2944, &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Flay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(0.3) 
and PQR_SpellAvailable(15407) then
	_castSpell(15407)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Start Fight--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or UnitBuffID(&amp;quot;target&amp;quot;, 642) --bubble
or UnitBuffID(&amp;quot;target&amp;quot;, 45438) --Iceblock
or UnitDebuffID(&amp;quot;target&amp;quot;, 33786) --Cyclone
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or not UnitExists(&amp;quot;target&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowfiend</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- mind bender
if PQR_SpellAvailable(123040) 
and UnitExists(&amp;quot;Target&amp;quot;)
and BurstKey then
	_castSpell(123040)
end


--ShadowFeind
if PQR_SpellAvailable(34433) 
and UnitExists(&amp;quot;Target&amp;quot;)
and BurstKey then
	_castSpell(34433)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BurstKey then
	-- Gloves
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 		
		UseInventoryItem(10)
	end

	--Trinket
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
	end
	
	--Orc
	if PQR_SpellAvailable(33697) then
		CastSpellByName(tostring(GetSpellInfo(33697)))  
	end
	
	--Troll
	if PQR_SpellAvailable(26297) then 
		CastSpellByName(tostring(GetSpellInfo(26297))) 
	end
	
	--PI
	if PQR_SpellAvailable(10060) then 
		_castSpell(10060)
	end
		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inner Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,588) 
and PQR_SpellAvailable(588) then
	CastSpellByName(tostring(GetSpellInfo(588)))	 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Power Word Fortitude</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,21562) --Power Word: Fortitude
and not UnitBuffID(&amp;quot;player&amp;quot;,469) --Commanding Shout
and not UnitBuffID(&amp;quot;player&amp;quot;,90364) --Qiraji Fortitude
and not UnitBuffID(&amp;quot;player&amp;quot;,109773) --Dark Intent
and not UnitChannelInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	_castSpell(21562)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Psycic Horror</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Shadoworbs = UnitPower(&amp;quot;player&amp;quot;,13)

if PsycicHorrorKey then
	if Shadoworbs &amp;gt; 0 then
		_castSpell(64044, &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowform</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoShadowform then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 15473) then
		_castSpell(15473)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Level 90 Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Level90TalentsKey then

	--Dark Halo
	if IsSpellKnown(120644) then 
		CastSpellByName(GetSpellInfo(120644))
	end
	
	--Halo
	if IsSpellKnown(120517) then 
		CastSpellByName(GetSpellInfo(120517))
	end
	
	--Divine Star
	if IsSpellKnown(110744) then
		CastSpellByName(GetSpellInfo(110744))
	end	
	
	--Cascade
	if IsSpellKnown(121135) then
		CastSpellByName(GetSpellInfo(121135))
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Flay(Insanity)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _, talent = GetTalentRowSelectionInfo(3)

if not PQR_IsMoving(0.3) 
and PQR_SpellAvailable(15407)
and talent == 9
and UnitDebuffID(&amp;quot;target&amp;quot;, 2944) then	-- if target has DP
	_castSpell(15407)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vamperic Embrace</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(15286) then
	for i=1, #members do
		if members[i].HP &amp;lt; VampericEmbraceHP then
			_castSpell(15286)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Spike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(588) then
	if UnitBuffID(&amp;quot;player&amp;quot;, 87160) then --Surge of darkness
		_castSpell(73510, &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksShadowPvP_FlashHeal_enable then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)


if PQR_SpellAvailable(2061) 
and not HealOthers then
	if PlayerHP &amp;lt; FlashHealHP 
	and not PQR_IsMoving(.5)  then
	  	_castSpell(2061, &amp;quot;player&amp;quot;)
	end
end


if PQR_SpellAvailable(2061)
and HealOthers then
	for i=1, #members do 
		if members[i].HP &amp;lt; FlashHealHP 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5)  then
	  		_castSpell(2061, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispersion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)

if not PQI_CpoworksShadowPvP_Dispersion_enable then
	DispersionHP = 0
end

if DispersionKey
or PlayerHP &amp;lt; DispersionHP then
	_castSpell(47585)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Guise CC</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Create our frame and bind combat log events
  local spellIds = {
	-- Druid
	33786,		-- Cyclone 
	-- Priest
	605, 		-- MC
}


for i=1, #cTar do
	if UnitCastingInfo(cTar[i]) ~= nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;, cTar[i]) ~= nil  
	and select(2,GetSpellCooldown(8177)) == 0  then
		for a=1, #spellIds do
			if UnitCastingInfo(cTar[i]) == GetSpellInfo(spellIds[i]) then
				_castSpell(112833)
			end
		end 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fade</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _, talent = GetTalentRowSelectionInfo(2)

if PQR_SpellAvailable(2061) 
and talent == 6 then
	if hasRoot(&amp;quot;player&amp;quot;) ~= nil
	or isSlowed(&amp;quot;player&amp;quot;) ~= nil then
		_castSpell(586)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Life Grip</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if LifegripKey then
	_castSpell(73325, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PRIEST>