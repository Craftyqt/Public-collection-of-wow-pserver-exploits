<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end

-- Load LUA data files.
if PQR_RotationStarted then
 PQR_RotationStarted = false
	 -- Load required data files
	 if PQR_LoadLua ~= nil then
		  if PQR_LoadLua(&amp;quot;PQR_PriestPvP_Data.lua&amp;quot;) == false then
		   PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PriestPvP_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
		   PQR_StopRotation()
		   return true
		  end 
		  if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
		   PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
		   PQR_StopRotation()
		   return true
		  end
	 end
end


GroupInfo() 

PauseKey				= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_PauseRotation_key)
BarrierKey				= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_Barrier_key)	
GripKey					= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_LifeGrip_key)
MDKey					= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_MassDispel_key) 
FlagPickUpKey			= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_FlagPickupKey_key) 

if not PQI_CpoworksDiscPvPConfigSettings_DPSKey_enable then 
	DPSKey				= IsMouseButtonDown(3)
else 
 	DPSKey				= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_DPSKey_key)
end
if not PQI_CpoworksDiscPvPConfigSettings_FearKey_enable then 
	FearKey				= IsMouseButtonDown(4)
else 
 	FearKey				= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_FearKey_key)
end
if not PQI_CpoworksDiscPvPConfigSettings_Level15TalentKey_enable then 
	Level15TalentKey			= IsMouseButtonDown(5)
else 
 	Level15TalentKey			= PQI:IsHotkeys(PQI_CpoworksDiscPvPConfigSettings_Level15TalentKey_key)
end

GripTraps				= PQI_CpoworksDiscPvPConfigSettings_GripTraps_enable
OffenciveDispells		= PQI_CpoworksDiscPvPConfigSettings_UseOffenciveDispels_enable
DefenciveDispells		= PQI_CpoworksDiscPvPConfigSettings_UseDefenciveDispels_enable
SWDInstants				= PQI_CpoworksDiscPvPConfigSettings_SWDInstants_enable
AutoVoidShift			= PQI_CpoworksDiscPvPConfigSettings_VoidShift_enable
AutoFearWard			= PQI_CpoworksDiscPvPConfigSettings_AutoFearWard_enable
AutoPainSup				= PQI_CpoworksDiscPvPConfigSettings_PainSup_enable
UseBattleMaster			= PQI_CpoworksDiscPvPConfigSettings_Battlemasters_enable
AccecptQueues			= PQI_CpoworksDiscPvPConfigSettings_AccecptQueues_enable
GripBombs				= true

BattlemasterHP			= PQI_CpoworksDiscPvPConfigSettings_Battlemasters_value
PainSupHP				= PQI_CpoworksDiscPvPConfigSettings_PainSup_value
HealthstoneHP			= PQI_CpoworksDiscPvPConfigSettings_Healthstone_value
DesperatePrayerHP		= PQI_CpoworksDiscPvPConfigSettings_DesperatePrayer_value
VoidShiftHP				= PQI_CpoworksDiscPvPConfigSettings_VoidShift_value
ShadowfiendMana			= PQI_CpoworksDiscPvPConfigSettings_ShadowfiendMana_value
PowerWordShieldHP		= PQI_CpoworksDiscPvPHealSettings_PowerwordShield_value
PrayerofMendingHP		= PQI_CpoworksDiscPvPHealSettings_PrayerofMending_value
RenewHP					= PQI_CpoworksDiscPvPHealSettings_Renew_value
HealHP					= PQI_CpoworksDiscPvPHealSettings_Heal_value
FlashHealHP				= PQI_CpoworksDiscPvPHealSettings_FlashHeal_value
GreaterHealHP			= PQI_CpoworksDiscPvPHealSettings_GreaterHeal_value
ArchangelHP				= PQI_CpoworksDiscPvPHealSettings_Archangel_value
PenanceHP				= PQI_CpoworksDiscPvPHealSettings_Penance_value
BindingHealHP			= PQI_CpoworksDiscPvPHealSettings_BindingHeal_value

SafeToShift				= 90


if not PQI_CpoworksDiscPvPConfigSettings_PauseRotation_enable then 
	PauseKey	= false
end

if not PQI_CpoworksDiscPvPConfigSettings_Barrier_enable then 
	BarrierKey	= false
end

if not PQI_CpoworksDiscPvPConfigSettings_LifeGrip_enable then 
	GripKey	= false
end

if not PQI_CpoworksDiscPvPConfigSettings_MassDispel_enable then 
	MDKey	= false
end

if not PQI_CpoworksDiscPvPConfigSettings_FlagPickupKey_enable then 
	FlagPickUpKey	= false
end



if AccecptQueues then
	local status = GetBattlefieldStatus(1)
	if status == &amp;quot;confirm&amp;quot; then
		AcceptBattlefieldPort(1, 1)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JukeBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not SIN_InterruptFrame_created then
	SIN_InterruptFrame_created = true	
	local interruptID = {
	[102060] = true,	--Disrupting Shout
	[106839] = true,	--Skull Bash
	[80964] = true,		--Skull Bash
	[115781] = true,	--Optical Blast
	[116705] = true,	--Spear Hand Strike
	[1766] = true, 		--Kick
	[19647] = true, 	--Spell Lock
	[2139] = true, 		--Counterspell
	[47476] = true,		--Strangulate
	[47528] = true, 	--Mind Freeze
	[57994] = true, 	--Wind Shear
	[6552] = true, 		--Pummel
	[96231] = true, 	--Rebuke
	[31935] = true,		--Avenger&amp;apos;s Shield
	[34490] = true, 	--Silencing Shot
	[147362] = true 	--Counter shot coming in 5.4
	}
	local SIN_PlayerGUID = UnitGUID(&amp;quot;player&amp;quot;)
	local SIN_InterruptFrame = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	SIN_InterruptFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	SIN_InterruptFrame:SetScript(&amp;quot;OnEvent&amp;quot;, 
		function(self, event, _, type, _, sourceGUID, sourceName, _, _, destGUID, destName, _, _, spellID)
			if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; and destGUID == SIN_PlayerGUID and interruptID[spellID] then
				local isProtected =  select(9, UnitCastingInfo&amp;apos;player&amp;apos;) or select(8, UnitChannelInfo&amp;apos;player&amp;apos;)
					if not isProtected and not UnitBuffID(&amp;apos;player&amp;apos;, 96267) then --96267 = priest&amp;apos;s cast immunity
						SpellStopCasting()
						RaidNotice_AddMessage(RaidWarningFrame, &amp;quot;\124cFFF00000\&amp;lt;Interrupt attempt by &amp;quot;..sourceName..&amp;quot;&amp;gt;&amp;quot;, ChatTypeInfo[&amp;quot;RAID_WARNING&amp;quot;])
						PQR_DelayRotation(1)
					end
			end		
		end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SWDExecute</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i=1, #cTar do
	cTarHP =  100 * UnitHealth(cTar[i]) / UnitHealthMax(cTar[i])
	
	if UnitExists(cTar[i])
	and UnitCanAttack(&amp;quot;player&amp;quot;, cTar[i]) ~= nil
	and not LineOfSight(cTar[i])
	and cTarHP &amp;lt; 20 then
		_castSpell(32379, cTar[i])
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_FlashHeal_enable then return false end


if PQR_SpellAvailable(2061) then
	for i=1, #members do 
		if members[i].HP &amp;lt; FlashHealHP 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5)  then
	  		_castSpell(2061, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Star</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(110744) then
	if members[1].HP &amp;lt; 65 then
	   	_castSpell(121135)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FearWard</Name><Default>false</Default><SpellID>6346</SpellID><Actions></Actions><Lua>if AutoFearWard
and not UnitBuffID(&amp;quot;player&amp;quot;,6346) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HolyFire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(14914) 
and DPSKey
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= nil
and not LineOfSight(&amp;quot;target&amp;quot;)
and not (select(2,GetTalentRowSelectionInfo(3)) == 9)  then
	_castSpell(14914, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InnerFire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Selector = PQI_CpoworksDiscPvPConfigSettings_InnerFireWillSelector_value

InnerSpell = 588

if Selector == 1 then
	InnerSpell = 588
elseif Selector == 2 then
	InnerSpell = 73413
end

if not UnitBuffID(&amp;quot;player&amp;quot;, InnerSpell) then
	_castSpell(InnerSpell)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InnerFocusFH</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, #members do
	if PQR_SpellAvailable(89485) 
	and members[i].HP &amp;lt; 50 then
  		_castSpell(89485) 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Penance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_Penance_enable then return false end

if PQR_SpellAvailable(47540) then
	for i = 1, #members do
		if members[i].HP &amp;lt; PenanceHP
		and not LineOfSight(members[i].Unit) 
		then 
	  		_castSpell(47540, members[i].Unit)
	  	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PenanceDMG</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(47540) 
and DPSKey
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= nil
and not LineOfSight(&amp;quot;target&amp;quot;)  then
	_castSpell(47540, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PowerWordFortitude</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,21562) --Power Word: Fortitude
and not UnitBuffID(&amp;quot;player&amp;quot;,469) --Commanding Shout
and not UnitBuffID(&amp;quot;player&amp;quot;,90364) --Qiraji Fortitude
and not UnitBuffID(&amp;quot;player&amp;quot;,109773) --Dark Intent
and not UnitChannelInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	_castSpell(21562)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PowerWordShield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_PowerwordShield_enable then return false end


if UnitExists(&amp;quot;mouseover&amp;quot;) 
and UnitName(&amp;quot;mouseover&amp;quot;) == &amp;quot;Psyfiend&amp;quot; 
and not UnitDebuffID(&amp;quot;mouseover&amp;quot;,6788)
and not UnitBuffID(&amp;quot;mouseover&amp;quot;,17)then
	CastSpellByName(GetSpellInfo(17), &amp;quot;mouseover&amp;quot;)
end


if PQR_SpellAvailable(17) then
	for i=1, #members do
		if members[i].HP &amp;lt; PowerWordShieldHP
		and not HaveDebuff(members[i].Unit,6788)
		and not UnitBuffID(members[i].Unit,17)
		and not LineOfSight(members[i].Unit) then
		  _castSpell(17, members[i].Unit) 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PrayerOfMending</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_PrayerofMending_enable then return false end

if PQR_SpellAvailable(33076) then
	for i=1, #members do
		if members[i].HP &amp;lt; PrayerofMendingHP 
		and not LineOfSight(members[i].Unit) then
		 	_castSpell(33076, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SWD Casts</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = {	 
						118,		-- Polymorph
						61305,		-- Polymorph: Black Cat
						28272,		-- Polymorph: Pig
						61721,		-- Polymorph: Rabbit
						61780,		-- Polymorph: Turkey
						28271,		-- Polymorph: Turtle
						20066, 		-- Repantance
						115750		-- Blinding Light
						}

if PQR_SpellAvailable(129176) then
	for i=1, #cTar do
		if UnitExists(cTar[i]) then
		local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(cTar[i])
			for _, v in ipairs(InterruptSpells) do
				if GetSpellInfo(v) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.3  then
						SpellStopCasting()
						CancelUnitBuff(&amp;quot;player&amp;quot;, GetSpellInfo(17))
						CastSpellByName(GetSpellInfo(129176),cTar[i])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ShackleUndead</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;mouseover&amp;quot;) 
and members[1].HP &amp;gt; 70
and UnitCreatureType(&amp;quot;mouseover&amp;quot;) == &amp;quot;Undead&amp;quot;
and not UnitDebuffID(&amp;quot;mouseover&amp;quot;,9484) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) then
	CastSpellByName(GetSpellInfo(9484),&amp;quot;mouseover&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SWP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(589) 
and DPSKey
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= nil
and PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 0.1) == false  
and not UnitDebuffID(&amp;quot;target&amp;quot;, 589, &amp;quot;player&amp;quot;) then
	_castSpell(589, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Smite</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(585) 
and DPSKey
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= nil
and PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 0.1) == false  then
	_castSpell(585, &amp;quot;target&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PainSup</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(33206)
and AutoPainSup then
	for i = 1, #members do
		if members[i].HP &amp;lt; PainSupHP 
		and members[i].IsPlayer
		and not LineOfSight(members[i].Unit) 
		and not UnitBuffID(members[i].Unit, 45438) --Block
		and not UnitBuffID(members[i].Unit, 642) --Bubble
		and not UnitBuffID(members[i].Unit, 19263) --Deterrence
		and not UnitDebuffID(members[i].Unit, 33786) --Clone 
		then 
	    	_castSpell(33206, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fear</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FearKey then
	SpellStopCasting()
	_castSpell(8122)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPConfigSettings_Healthstone_enable then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)
local HealstoneCD = select(2,GetItemCooldown(5512))

if PlayerHP &amp;lt; HealthstoneHP then
	if HealstoneCD == 0 and GetItemCount(5512) &amp;gt; 0  then
    	UseItemByName(select(1,GetItemInfo(5512)), &amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Archangel</Name><Default>false</Default><SpellID>81700</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_Archangel_enable then return false end

if PQR_SpellAvailable(81700) then
	if members[1].HP &amp;lt; ArchangelHP then
		if UnitBuffID(&amp;quot;player&amp;quot;, 81661) 
		and select(4, UnitBuffID(&amp;quot;player&amp;quot;, 81661)) &amp;gt;= 5 then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispell Important CC</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not DefenciveDispells then return false end

for i=1,#members do 
    if dispellableCC(members[i].Unit) 
    and members[i].IsPlayer
    and not LineOfSight(members[i].Unit)
    and not UnitDebuffID(members[i].Unit, 30108) 
    and not UnitDebuffID(members[i].Unit, 34914)
    and not UnitDebuffID(members[i].Unit, 131736) then 
  		_castSpell(527,members[i].Unit)
  	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_Heal_enable then return false end

if PQR_SpellAvailable(2050) then
	for i=1, #members do 
		if members[i].HP &amp;lt; HealHP 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5) then
	  		_castSpell(2050, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Greater Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_GreaterHeal_enable then return false end

if PQR_SpellAvailable(2060) then
for i=1, #members do 
	if members[i].HP &amp;lt; GreaterHealHP 
	and not LineOfSight(members[i].Unit)
	and not PQR_IsMoving(.5) then
  		_castSpell(2060, members[i].Unit)
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Offencive Dispells</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not OffenciveDispells then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness

12472,  -- Icy Veins

1022,   -- Hand of Protection

11426,   -- Ice Barrier

20925,  -- Sacred Shield

114250,   -- Selfless Healer

17    -- Power Word: Shield

}

if PQR_SpellAvailable(528) 
and members[1].HP &amp;gt; 70
and PlayerMana &amp;gt; 70 then
	for i = 1, #cTar do
		if UnitExists(cTar[i]) then
			for j = 1, #purgeThis2 do
				if UnitBuffID(cTar[i], purgeThis2[j]) ~= nil
				and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) ~= nil
				and not LineOfSight(cTar[i]) then
					_castSpell(528, cTar[i])
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mass Dispell</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MDKey then
	if IsSpellKnown(32375) then
		CastSpellByName(GetSpellInfo(32375))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Offencive Dispells @ 50%hp</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not OffenciveDispells then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) 

local purgeThis1 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness 

1022,   -- Hand of Protection

110909,	--Alter time

48108 	--Pyro Proc
}

if PQR_SpellAvailable(528) 
and members[1].HP &amp;gt; 50 then
	for i = 1, #cTar do
		if UnitExists(cTar[i]) then
			for j = 1, #purgeThis1 do
				if UnitBuffID(cTar[i], purgeThis1[j]) ~= nil
				and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) ~= nil
				and not LineOfSight(cTar[i]) then
					_castSpell(528, cTar[i])
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Barrier</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if BarrierKey then
	if IsSpellKnown(62618) then
		CastSpellByName(GetSpellInfo(62618))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_Renew_enable then return false end


if PQR_SpellAvailable(139) then
	for i=1, #members do
		if members[i].HP &amp;lt; RenewHP 
		and not UnitBuffID(members[i].Unit, 139)
		and not LineOfSight(members[i].Unit) then
		 	_castSpell(139, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Life Grip</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if LifegripKey then
	_castSpell(73325, &amp;quot;target&amp;quot;)
end
if GripTraps
and PQR_SpellAvailable(73325) then
	for i = 1, #members do
		if UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
		and members[i].IsPlayer
		and UnitDebuffID(members[i].Unit, 129176) then
			SpellStopCasting()
			_castSpell(73325, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash Heal Inner Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_FlashHeal_enable then return false end

local InnerFocus = UnitBuffID(&amp;quot;player&amp;quot;, 96267)


if PQR_SpellAvailable(2061) then
	for i=1, #members do 
		if members[i].HP &amp;lt; FlashHealHP 
		and InnerFocus 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5)  then
	  		_castSpell(2061, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Penance Inner Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InnerFocus = UnitBuffID(&amp;quot;player&amp;quot;, 96267)


if PQR_SpellAvailable(2061) then
	for i=1, #members do 
		if members[i].HP &amp;lt; PenanceHP
		and InnerFocus 
		and not LineOfSight(members[i].Unit) then
	  		_castSpell(47540, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Void Shift</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if PQR_SpellAvailable(108968)
and AutoVoidShift then
	for i=1, #members do
		--Shift other people
		if members[i].HP &amp;lt; VoidShiftHP
		and members[i].IsPlayer
		and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
		and not UnitBuffID(members[i].Unit, 45438) --Block
		and not UnitBuffID(members[i].Unit, 642) --Bubble
		and not UnitBuffID(members[i].Unit, 19263) --Deterrence
		and not UnitDebuffID(members[i].Unit, 33786) --Clone
		and myHp &amp;gt; SafeToShift then
			SpellStopCasting()
			_castSpell(108968, members[i].Unit)
		end
		
		--Shift self.
		if myHp &amp;lt; VoidShiftHP
		and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
		and members[i].IsPlayer
		and members[i].HP &amp;gt; SafeToShift then
			SpellStopCasting()
			_castSpell(108968, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Feind/Mind Bender</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

-- mind bender
if PQR_SpellAvailable(123040) 
and UnitExists(&amp;quot;Target&amp;quot;)
and DPSKey then
	_castSpell(123040)
end


--ShadowFeind
if PQR_SpellAvailable(34433) 
and UnitExists(&amp;quot;Target&amp;quot;)
and DPSKey then
	_castSpell(34433)
end

if PlayerMana &amp;lt; ShadowfiendMana then
	for i=1, #cTar do
		if UnitExists(cTar[i]) then
			if PQR_SpellAvailable(34433) then
				_castSpell(34433, cTar[i])
			elseif PQR_SpellAvailable(123040) then
				_castSpell(123040, cTar[i])
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Anti Stealth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RedRussian&amp;apos;s &amp;quot;Stealthers&amp;apos; Bane&amp;quot;

local rescan_period=2 --how often stealthed list is repopulated

local function IsStealthed(unit) --check if unit is stealthed
stealth,prowl,shadowmeld=1784,5215,58984 --list of detectable stealth buffs may be incomplete!
	if ( UnitBuffID(unit,stealth) or UnitBuffID(unit,prowl) or UnitBuffID(unit,shadowmeld) ) then return true
	else return false
	end
end

local function Breaker() --instant stealth breaker, class dependent
_, playerClass = UnitClass(&amp;quot;player&amp;quot;)
	if playerClass == &amp;quot;WARRIOR&amp;quot; then
		return 57755 --Heroic Throw
	elseif playerClass == &amp;quot;PALADIN&amp;quot; then
		if PQR_SpellAvailable(879) then
			return 879 --Exorcism
		else	
			return 20271 --Judgment
		end	
	elseif playerClass == &amp;quot;HUNTER&amp;quot; then
		return 3044 --Arcane shot
	elseif playerClass == &amp;quot;ROGUE&amp;quot; then
		if IsStealthed(&amp;apos;player&amp;apos;) then
			return 6770 --Sap
		else
			return 121733 --Throw
		end
	elseif playerClass == &amp;quot;PRIEST&amp;quot; then
		return 589 --Shadow Word: Pain
	elseif playerClass == &amp;quot;DEATHKNIGHT&amp;quot; then
		return 45524 --Chains of Ice
	elseif playerClass == &amp;quot;SHAMAN&amp;quot; then
		return 8056 --Frost Shock
	elseif playerClass == &amp;quot;MAGE&amp;quot; then
		return 30455 --Ice Lance
	elseif playerClass == &amp;quot;WARLOCK&amp;quot; then
		return 77799 --Fel Flame
	elseif playerClass == &amp;quot;MONK&amp;quot; then
		return 115546 --Taunt
	elseif playerClass == &amp;quot;DRUID&amp;quot; then
		if IsStealthed(&amp;apos;player&amp;apos;) then
			return 0 --do nothing
		else
			return 8921 --moonfire
		end
	else
		return 0 
	end
end

local breakername=GetSpellInfo(Breaker()) --localized breaker name for use with IsSpellInRange


------------------------BG/RBG--------------------------------
--get stealthed list
if not last_scan or GetTime()-last_scan&amp;gt;=rescan_period then --repopulate list every T seconds
last_scan=GetTime()
stealthed={} --depopulate stealthed list
currtarget=UnitName(&amp;apos;target&amp;apos;) --get current target&amp;apos;s name

	for j=1,GetNumBattlefieldScores() do --get player faction to make profile work in rbgs and arenas
	name1=GetBattlefieldScore(j) 
		if name1==UnitName(&amp;apos;player&amp;apos;) then 
		pfaction=select(6,GetBattlefieldScore(j))
		break
		end 
	end

	for i=1, GetNumBattlefieldScores() do 
	name, killingBlows, honorableKills, deaths, honorGained, faction, rank, race, class = GetBattlefieldScore(i)
	matched_name=name:match(&amp;apos;[^-]+&amp;apos;) --filter out &amp;quot;-Realm&amp;quot; part
		if (class==&amp;quot;DRUID&amp;quot; or class==&amp;quot;ROGUE&amp;quot;) and faction~=pfaction and not UnitChannelInfo(&amp;apos;player&amp;apos;) then --target change is fatal to channgeling
		TargetUnit(name)
			if UnitName(&amp;apos;target&amp;apos;)~=matched_name or ( UnitName(&amp;apos;target&amp;apos;)==matched_name and IsStealthed(&amp;apos;target&amp;apos;) ) then --targeting attemp was unsuccessful or stealthed target was caught during list repopulation
			stealthed[name]=1
			end
		end
		if currtarget and UnitName(&amp;apos;target&amp;apos;)~=currtarget then --return to previous target after targeting stealther
		TargetLastTarget() 
		elseif not currtarget then 
		ClearTarget() 
		end	
	end
end

--look for stealthed
if PQR_SpellAvailable(Breaker()) then --CD/GCD check to prevent excessive spam. NOTE: spell with ID 0 is never avalaible
oldtarget=UnitName(&amp;apos;target&amp;apos;) --get current target&amp;apos;s name
stealther_spotted=false
	for k,v in pairs(stealthed) do
		if not ( UnitCastingInfo(&amp;apos;player&amp;apos;) or UnitChannelInfo(&amp;apos;player&amp;apos;) ) and v==1 then --not on GCD &amp; not casting &amp; not channeling
		TargetUnit(k)
			if UnitName(&amp;apos;target&amp;apos;)==k:match(&amp;apos;[^-]+&amp;apos;) then --k is matched to be the same format with UnitName(&amp;apos;target&amp;apos;)
				if IsStealthed(&amp;apos;target&amp;apos;) and IsSpellInRange(breakername,&amp;apos;target&amp;apos;)==1 then --range check to prevent spam caused by stealth glitch
				CastSpellByID(Breaker(),&amp;apos;target&amp;apos;)
				stealther_spotted=true --flag fixing your target on spotted stealther
				else
				stealthed[k]=0	--exclude non-stealthed or too distant stealther from the list
				end
			end
		end
		if not stealther_spotted then	--return to previous target if no stealther was spotted, do nothing otherwise
			if oldtarget and UnitName(&amp;apos;target&amp;apos;)~=oldtarget then 
			TargetLastTarget() 
			elseif not oldtarget then 
			ClearTarget() 
			end
		end	
	end	
end
------------------------ARENA--------------------------------
for a=1,5 do
local arenatarget=&amp;apos;arena&amp;apos;..a
	if IsStealthed(arenatarget) then
	CastSpellByID(Breaker(),arenatarget)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flag Pickup</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetBattlefieldStatus(1)==&amp;apos;active&amp;apos; or GetBattlefieldStatus(2)==&amp;apos;active&amp;apos; then
InteractUnit(&amp;apos;Horde flag&amp;apos;)
InteractUnit(&amp;apos;Alliance flag&amp;apos;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash Heal FCDCL</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_FlashHeal_enable then return false end

local FromComeDarkness = UnitBuffID(&amp;quot;player&amp;quot;, 114255)


if PQR_SpellAvailable(2061) then
	for i=1, #members do  
		if members[i].HP &amp;lt; FlashHealHP 
		and FromComeDarkness
		and not LineOfSight(members[i].Unit) then
	  		_castSpell(2061, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spirit shell FH</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, #members do
	if UnitBuffID(members[i].Unit,114908,&amp;quot;PLAYER&amp;quot;) then 
		ssactive = true 
		highestss = select(15,UnitBuffID(members[i].Unit, 114908))
	end
end


if UnitBuffID(&amp;quot;player&amp;quot;, 109964) then</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SWD Instants</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ANTICC FRAMEWORK SECTION

-- Create our frame and bind combat log events
if not SWDFrame then
	SWDFrame = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)	
	SWDFrame:Hide()
end


-- SpellID List
-- Spectrial Guise - 112833
-- Shadow Word: Death - 129176
-- Fear Ward - 6346
  
 -- Spell event table
  local spellIds = {
 	 
	
  	-- Druid
	--[33786]	= {112833},	-- Cyclone 
	-- Priest
	[605] = {112833}, -- MC
	[8122] = {6346}, -- Fear
	[88625] = {129176}, -- Holy Word: Chastise
	-- Hunter
	[19503] = {129176, 112833},		-- Scatter 
	-- Paladin
	[20066] = {129176, 112833}, 		-- Repantance
	[115750] = {129176, 112833},		-- Blinding Light
	[10326] = {6346}, -- Fear 
	-- Rogue
	[2094]  = {129176, 112833},		-- Blind
	--Monk
	[115078] = {129176, 112833},		-- Paralyze
	--Mage
	[18] = {129176, 112833},			-- Polymorph
	[61305] = {129176, 112833},		-- Polymorph: Black Cat
	[28272] = {129176, 112833},		-- Polymorph: Pig
	[61721] = {129176, 112833},		-- Polymorph: Rabbit
	[61780] = {129176, 112833},		-- Polymorph: Turkey
	[28271] = {129176, 112833},		-- Polymorph: Turtle	
	--Warlock
	[5782] = {6346},		-- Fear 
	[118699] = {6346},		-- Fear
	[5484] = {6346},		-- Howl of Terror
	[6358] = {129176},		-- Seduction
	--Warior
	[5246] = {6346},		-- Intimidating Shout 
	[20511] = {6346},		-- Intimidating Shout 
}


function EventHandler(self, event, ...)
	if not SWDInstants then return end
	
    local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
    if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			local sid = select(12, ...)
			
			--Grip Bombs
			if GripBombs
			and sid == 76577
			and cdRemains(73325) == 0  then
				for p = 1, #members do
					if PQR_UnitDistance(members[p].Unit, destNAME) &amp;lt;= 5
					and UnitCanAttack(&amp;quot;player&amp;quot;, destNAME) ~= nil 
					and UnitName(members[p].Unit) ~= UnitName(&amp;quot;player&amp;quot;) then
						if cdRemains(73325) == 0 then
							RaidNotice_AddMessage(RaidWarningFrame, &amp;quot;\124cFFF00000\&amp;lt;Attempting to Life Grip &amp;quot;..UnitName(members[p].Unit)..&amp;quot; out of Smoke Bomb&amp;gt;&amp;quot;, ChatTypeInfo[&amp;quot;RAID_WARNING&amp;quot;])
							CastSpellByName(GetSpellInfo(73325), members[p].Unit) 
						end
					end
				end
			end
			
			--AntiCC
			local sname = spellIds[sid]
			if sname ~= nil then
				for i=1,  #sname do
					local cd = cdRemains(sname[i]) 
					if sname[i] == 129176 
					and destGUID == UnitGUID(&amp;quot;player&amp;quot;) 
					and cd == 0 then
						SpellStopCasting()
						CancelUnitBuff(&amp;quot;player&amp;quot;, GetSpellInfo(17))
						TargetNearestEnemy()
						RaidNotice_AddMessage(RaidWarningFrame, &amp;quot;\124cFFF00000\&amp;lt;Attempting to &amp;quot;..GetSpellInfo(sname[i])..&amp;quot; &amp;quot;..GetSpellInfo(sid)..&amp;quot; from &amp;quot;..sourceNAME..&amp;quot;&amp;gt;&amp;quot;, ChatTypeInfo[&amp;quot;RAID_WARNING&amp;quot;])
						CastSpellByName(GetSpellInfo(sname[i])) 
						return
					elseif sname[i] == 112833 
					and cd == 0 
					and destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
						SpellStopCasting()
						RaidNotice_AddMessage(RaidWarningFrame, &amp;quot;\124cFFF00000\&amp;lt;Attempting to &amp;quot;..GetSpellInfo(sname[i])..&amp;quot; &amp;quot;..GetSpellInfo(sid)..&amp;quot; from &amp;quot;..sourceNAME..&amp;quot;&amp;gt;&amp;quot;, ChatTypeInfo[&amp;quot;RAID_WARNING&amp;quot;])
						CastSpellByName(GetSpellInfo(sname[i])) 
						return
					elseif sname[i] == 6346 
					and cd == 0 then
						if sid == 118699 or 5782 or 10326 then
							if destGUID == UnitGUID(&amp;quot;player&amp;quot;) then
								SpellStopCasting()
								RaidNotice_AddMessage(RaidWarningFrame, &amp;quot;\124cFFF00000\&amp;lt;Attempting to &amp;quot;..GetSpellInfo(sname[i])..&amp;quot; &amp;quot;..GetSpellInfo(sid)..&amp;quot; from &amp;quot;..sourceNAME..&amp;quot;&amp;gt;&amp;quot;, ChatTypeInfo[&amp;quot;RAID_WARNING&amp;quot;])
								CastSpellByName(GetSpellInfo(sname[i])) 
								return
							end
						else
							if PQR_UnitDistance(&amp;quot;player&amp;quot;, destNAME) &amp;lt;= 10
							and UnitCanAttack(&amp;quot;player&amp;quot;, destNAME) ~= nil then
								SpellStopCasting()
								RaidNotice_AddMessage(RaidWarningFrame, &amp;quot;\124cFFF00000\&amp;lt;Attempting to &amp;quot;..GetSpellInfo(sname[i])..&amp;quot; &amp;quot;..GetSpellInfo(sid)..&amp;quot; from &amp;quot;..sourceNAME..&amp;quot;&amp;gt;&amp;quot;, ChatTypeInfo[&amp;quot;RAID_WARNING&amp;quot;])
								CastSpellByName(GetSpellInfo(sname[i])) 
								return
							end
						end
					end
				end	
			end
	  	end
    end
end

SWDFrame:SetScript(&amp;quot;OnEvent&amp;quot;, EventHandler)
SWDFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Binding Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksDiscPvPHealSettings_BindingHeal_enable then return false end

local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if PQR_SpellAvailable(32546) then
	for i=1, #members do
		if members[i].HP &amp;lt; BindingHealHP
		and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
		and myHp &amp;lt; BindingHealHP then
			_castSpell(32546, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Battlemasters</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myhp = UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100

if UseBattleMaster
and myhp &amp;lt; BattlemasterHP then 
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Guise CC</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Create our frame and bind combat log events
  local spellIds = {
	-- Druid
	33786,		-- Cyclone 
	-- Priest
	605, 		-- MC
}


for i=1, #cTar do
	if UnitCastingInfo(cTar[i]) ~= nil
	and UnitIsEnemy(&amp;quot;player&amp;quot;, cTar[i]) ~= nil  
	and select(2,GetSpellCooldown(112833)) == 0  then
		for a=1, #spellIds do
			if UnitCastingInfo(cTar[i]) == GetSpellInfo(spellIds[i]) then
				_castSpell(112833)
			end
		end 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Pause
if PauseKey
or IsMounted() 
or UnitBuffID(&amp;quot;player&amp;quot;, 119032) --Spectral Guise
or UnitBuffID(&amp;quot;player&amp;quot;, 118358) --Drinking
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Level 15 Talents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Level15TalentKey then
	--Psyfeind
	if IsSpellKnown(108921) then
		CastSpellByName(GetSpellInfo(108921))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
	
	--MC
	if IsSpellKnown(605) 
	and UnitExists(&amp;quot;target&amp;quot;) then
		CastSpellByName(GetSpellInfo(605))
	end	
	
	--Void tendrils
	if IsSpellKnown(108920) then
		CastSpellByName(GetSpellInfo(108920))
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PRIEST>