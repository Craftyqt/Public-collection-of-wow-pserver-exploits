<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>[Misc] Initialization</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks
-------------------------------------------------------------------------------
-- Load LUA data files.
if PQR_RotationStarted == true then
	PQR_RotationStarted = false	

	-- Load LUA files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Hysteria_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Hysteria_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PVP_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PVP_Data.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

-- Let&amp;apos;s not continue if we&amp;apos;re not in the right spec
if UnitLevel(&amp;quot;player&amp;quot;) &amp;gt;= 10 then
	if not CastTimer then CastTimer = GetTime() end
	if GetSpecialization() == 1 then CurSpec = &amp;quot;Discipline&amp;quot; elseif GetSpecialization() == 2 then CurSpec = &amp;quot;Holy&amp;quot; end
	if GetSpecialization() ~= 3 then
		if GetTime() - CastTimer &amp;gt;= 4 then
			PQR_WriteToChat(&amp;quot;|cff99CCFFYou&amp;apos;re currently specced: |cffb73737&amp;quot;..CurSpec..&amp;quot;|cffffffff!&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_WriteToChat(&amp;quot;|cff99CCFFThe profile has been paused. Please change to Shadow!&amp;quot;, &amp;quot;Error&amp;quot;)
			CastTimer = GetTime()
		end
	end
end

-- Cooldown Timer function
if not SCDtimer then SCDtimer = 0 end
if not SCD then SCD = false end
if SCD then
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Mode: Manual&amp;quot;, nil, &amp;quot;DC143C&amp;quot;)
else
	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Cooldown Mode: Automatic&amp;quot;, nil, &amp;quot;79BAEC&amp;quot;)
end

if not SCDtimer then SCDtimer = 0 end
if PQI_MentallyShadow_ToggleCooldownMode_enable
	and not GetCurrentKeyBoardFocus()
	and PQI:IsHotkeys(PQI_MentallyShadow_ToggleCooldownMode_key)
	and GetTime() - SCDtimer &amp;gt; 1
then
	SCDtimer = GetTime()
	if SCD then
		SCD = false
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cff79BAECAutomatic|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		SCD = true
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cffDC143CManual|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-- Don&amp;apos;t automatically start if we&amp;apos;re mounted.
if IsMounted() then return true end

-- Don&amp;apos;t automatically start if we&amp;apos;re dead or a ghost.
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then return true end

-- Never attack a Spell Immune or Immune target
if unitCheck(&amp;quot;target&amp;quot;,Immune) then return true end
if unitCheck(&amp;quot;target&amp;quot;,SpellImmune) then return true end

-- At this point, everything should have loaded perfectly!
-- At this point, everything should have loaded perfectly!
if not PQ_PriestLoaded then
	local Hysteria = CreateFrame(&amp;quot;Frame&amp;quot;)
	Hysteria:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	Hysteria:SetScript(&amp;quot;OnEvent&amp;quot;, HysteriaFrame_OnEvent)
	Hysteria:Show()
	
	-- Trinket Procs
	Trinket = 0
	
	-- Tortos: Heroic
	Rockfall = nil
	
	-- Mind Flay settings
	flayTicks = 0
	maxFlayTicks = 3
	insanityTicks = 0
	maxInsanityTicks = 3
	
	PQ_PriestLoaded = true
	PQR_WriteToChat(&amp;quot;|cff91e782Hysteria Priest data is |cff82cee7Loaded!|cffffffff&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pause Rotation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyShadow_PauseRotation_enable then return false end

if PQI:IsHotkeys(PQI_MentallyShadow_PauseRotation_key)
	and not GetCurrentKeyBoardFocus() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Dispersion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Disp = PQ_Disp
local Hysteria_Spells = Hysteria_Spell
local Hysteria_UnitInfo = Hysteria_UnitInfo

-- Check if disabled
if not PQI_MentallyShadow_Dispersion_enable then return false end

-- Automatic Usage
if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 20 or select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 5 then
	CastSpellByName(GetSpellInfo(PQ_Disp),&amp;quot;player&amp;quot;)
	return true
end

-- Don&amp;apos;t activate if we&amp;apos;re not pushing the hotkey
if not PQI:IsHotkeys( PQI_MentallyShadow_Dispersion_key  ) then return false end

if PQI:IsHotkeys(PQI_MentallyShadow_Dispersion_key)
	and not GetCurrentKeyBoardFocus() then
		if Hysteria_Spells[PQ_Disp].known and PQR_SpellAvailable(PQ_Disp) then
			SpellStopCasting()
			CastSpellByName(GetSpellInfo(PQ_Disp),&amp;quot;player&amp;quot;)
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyShadow_Healthstone_enable then return false end
local v=PQI_MentallyShadow_Healthstone_value

if GetItemCount(5512,false,true) &amp;gt; 0
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetItemCooldown(5512) == 0
then
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Automatic Buffing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_IF = PQ_IF
local PQ_PWF = PQ_PWF
local PQ_Fear = PQ_Fear
local PQ_SForm = PQ_SForm
local GCD = (1.5*((1+(UnitSpellHaste(&amp;quot;player&amp;quot;)*128.06)/12806)^-1))
local selfBuffs = {PQ_IF,PQ_SForm,PQ_Fear}

if GetSpecialization() ~= 3 then return false else
	if not timer then timer = GetTime() end
	for i=1,#selfBuffs do
		if not UnitBuffID(&amp;quot;player&amp;quot;,selfBuffs[i]) and GetTime() - timer &amp;gt;= GCD then
			CastSpellByID(selfBuffs[i],&amp;quot;player&amp;quot;)
			timer = GetTime()
		end
	end
	
	if not UnitBuffID(&amp;quot;player&amp;quot;,PQ_SForm) then return true end
end

if IsPlayerSpell(PQ_PWF) then
	if not PQ_AuraInfo(2, &amp;quot;player&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_PWF),&amp;quot;player&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowfiend</Name><Default>false</Default><SpellID>34433</SpellID><Actions>/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>local PQ_SF = PQ_SF
local SCD = SCD
local TargetValidation = TargetValidation

if not PQI_MentallyShadow_AutoShadowfiend_enable then return false end
if TargetValidation(&amp;quot;target&amp;quot;, PQ_SF) and not SCD then return true end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Racials
local SCD = SCD
local PQ_Fade = PQ_Fade
local PQ_Phan = PQ_Phan
local PQ_HasHero = PQ_HasHero
local Hysteria_UnitInfo = Hysteria_UnitInfo
local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Racials if user tagged off automatic use
if not PQI_MentallyShadow_AutoRacials_enable then return false end

-- Gnome: Escape Artist
if IsPlayerSpell(20589) then
	if IsPlayerSpell(PQ_Phan) and not PQR_SpellAvailable(PQ_Fade) then
		CastSpellByName(GetSpellInfo(20589),&amp;quot;player&amp;quot;)
		return true
	end
end

-- Draenei: Gift of the Naaru
if IsPlayerSpell(59544) and PQR_SpellAvailable(59544) and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 60 then
	CastSpellByName(GetSpellInfo(59544),&amp;quot;player&amp;quot;)
	return true
end

-- Troll: Berserking
if IsPlayerSpell(26297) and not SCD then
	if not PQ_HasHero() and PQR_SpellAvailable(26297) then
		if not PQI_MentallyShadow_BossCooldown_enable then
			if UnitExists(&amp;quot;target&amp;quot;) and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end

-- Blood Elf: Arcane Torrent
if IsPlayerSpell(28730) and not SCD then
	if PQR_SpellAvailable(28730) and select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 94
	and UnitExists(&amp;quot;target&amp;quot;) and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
		return true
	end
end

-- Orc: Blood Fury
if IsPlayerSpell(33702) and not SCD then
	if PQR_SpellAvailable(33702) then
		if not PQI_MentallyShadow_BossCooldown_enable then
			if UnitExists(&amp;quot;target&amp;quot;) and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		else
			if SpecialUnit() then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Power Word: Shield</Name><Default>false</Default><SpellID>17</SpellID><Actions></Actions><Lua>local PQ_Shield = PQ_Shield
local Hysteria_UnitInfo = Hysteria_UnitInfo

if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 95 and not UnitDebuffID(&amp;quot;player&amp;quot;,6788)
	and PQR_SpellAvailable(PQ_Shield) then return true end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Prayer of Mending</Name><Default>false</Default><SpellID>33076</SpellID><Actions></Actions><Lua>local PQ_POM = PQ_POM
local Hysteria_UnitInfo = Hysteria_UnitInfo

if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 98 and not UnitBuffID(&amp;quot;player&amp;quot;,41635)
	and PQR_SpellAvailable(PQ_POM) then return true end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Renew</Name><Default>false</Default><SpellID>139</SpellID><Actions></Actions><Lua>local PQ_Renew = PQ_Renew
local Hysteria_UnitInfo = Hysteria_UnitInfo

if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 90 and not UnitBuffID(&amp;quot;player&amp;quot;,PQ_Renew)
	and PQR_SpellAvailable(PQ_Renew) then return true end</Lua><RecastDelay>200</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Fade (Phantasm)</Name><Default>false</Default><SpellID>586</SpellID><Actions></Actions><Lua>local PQ_Phan = PQ_Phan
local PQ_Fade = PQ_Fade
local unitCheck = unitCheck

if IsPlayerSpell(PQ_Phan) then

	-- Gnome: Escape Artist
	if IsPlayerSpell(20589) then
		if not PQR_SpellAvailable(PQ_Fade) and PQR_SpellAvailable(20589) then
			CastSpellByName(GetSpellInfo(20589),&amp;quot;player&amp;quot;)
			return true
		end
	end

	-- Phantasm on Root effects
	if unitCheck(&amp;quot;player&amp;quot;,Root) and PQR_SpellAvailable(PQ_Fade) then return true end
	
	-- Phantasm on Snare effects
	if unitCheck(&amp;quot;player&amp;quot;,Snare) and PQR_SpellAvailable(PQ_Fade) then return true end
end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CC] Level 15 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Void Tendrils
if IsPlayerSpell(108920) and PQR_SpellAvailable(108920) then
	if PQI:IsHotkeys(PQI_MentallyShadow_Level15Talent_key)
		and not GetCurrentKeyBoardFocus() then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(108920),&amp;quot;player&amp;quot;)
			return true
	end
end

-- Psyfiend
if IsPlayerSpell(108921) and PQR_SpellAvailable(108921) then
	if PQI:IsHotkeys(PQI_MentallyShadow_Level15Talent_key)
		and not GetCurrentKeyBoardFocus() then
			SpellCancelQueuedSpell()
			CastSpellByID(108921)
			if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Spectral Guise</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Scream = PQ_Scream
local unitCheck = unitCheck
local PQ_Spectral = PQ_Spectral

-- Don&amp;apos;t try and use something we don&amp;apos;t know!
if not IsPlayerSpell(PQ_Spectral) then return false end

-- If we&amp;apos;re stunned, don&amp;apos;t use Spectral Guise.
if unitCheck(&amp;quot;player&amp;quot;,CC) then return false end

-- Use if someone&amp;apos;s coming close and we can&amp;apos;t scream!
if CheckInteractDistance(&amp;quot;target&amp;quot;,3)
	and UnitIsUnit(&amp;quot;targettarget&amp;quot;,&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(PQ_Spectral)
	and not PQR_SpellAvailable(PQ_Scream)
then
	CastSpellByName(GetSpellInfo(PQ_Spectral),&amp;quot;player&amp;quot;)
	return true
end

-- Have some fun when cast at.
if UnitCastingInfo(&amp;quot;target&amp;quot;)
	and UnitIsUnit(&amp;quot;targettarget&amp;quot;,&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(PQ_Spectral) then
		local castName,_,_,_,castStartTime,castEndTime,_,_,castInterruptable = UnitCastingInfo(&amp;quot;target&amp;quot;)
		local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000
		local castTime = castEndTime - castStartTime
		local currentPercent = timeSinceStart / castTime * 100000
		local percent = math.random(20,60)
		
		if currentPercent &amp;lt;= percent then
			CastSpellByName(GetSpellInfo(PQ_Spectral),&amp;quot;player&amp;quot;)
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Psychic Scream</Name><Default>false</Default><SpellID>8122</SpellID><Actions></Actions><Lua>-- We&amp;apos;re CCed!
if unitCheck(&amp;quot;player&amp;quot;,CC) then return false end

-- Immune to Fear effects. D:
if UnitBuffID(&amp;quot;target&amp;quot;,49039) then return false end
if UnitBuffID(&amp;quot;target&amp;quot;,PQ_Fear) then return false end

-- Play around with Psychic Scream
if CheckInteractDistance(&amp;quot;target&amp;quot;,3) == 1 then return true end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Devouring Plague</Name><Default>false</Default><SpellID>2944</SpellID><Actions>/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>local PQ_DP = PQ_DP
local SCD = SCD
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;, PQ_DP) then
	if UnitPower(&amp;quot;player&amp;quot;,13) &amp;gt; 2 and not SCD then return true end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Blast</Name><Default>false</Default><SpellID>8092</SpellID><Actions>/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>local PQ_MB = PQ_MB
local PQ_DI = PQ_DI
local TargetValidation = TargetValidation

if PQR_IsMoving(0.3) and UnitBuffID(&amp;quot;player&amp;quot;,PQ_DI) then return true end

if PQR_IsMoving(0.3) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,PQ_MB) then return true end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Flay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_MF = PQ_MF
local Hysteria_Spells = Hysteria_Spell

if PQR_IsMoving(0.3) then return false end

if Hysteria_Spells[PQ_MF].known
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_MF)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
then CastSpellByName(GetSpellInfo(PQ_MF),&amp;quot;target&amp;quot;) end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Spike (Movement)</Name><Default>false</Default><SpellID>73510</SpellID><Actions></Actions><Lua>local PQ_FDCL = PQ_FDCL

if IsPlayerSpell(PQ_FDCL) and PQR_IsMoving(0.3) then
	local PQ_MS = PQ_MS
	local PQ_SOD = PQ_SOD
	local TargetValidation = TargetValidation
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_MS) then
		if UnitBuffID(&amp;quot;player&amp;quot;,PQ_SOD) then return true end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Spike</Name><Default>false</Default><SpellID>73510</SpellID><Actions></Actions><Lua>local PQ_FDCL = PQ_FDCL

if PQR_SpellAvailable(32379) or PQR_SpellAvailable(8092) then return false end

if IsPlayerSpell(PQ_FDCL) then
	local PQ_MS = PQ_MS
	local PQ_SOD = PQ_SOD
	local TargetValidation = TargetValidation
	
	if TargetValidation(&amp;quot;target&amp;quot;,PQ_MS) then
		if UnitBuffID(&amp;quot;player&amp;quot;,PQ_SOD) then return true end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Spike (lockout)</Name><Default>false</Default><SpellID>73510</SpellID><Actions></Actions><Lua>local PQ_MS = PQ_MS
local TargetValidation = TargetValidation
	
if TargetValidation(&amp;quot;target&amp;quot;,PQ_MS) then
	if select(2,GetSpellCooldown(PQ_SWP)) &amp;gt; 2 then return true end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Death</Name><Default>false</Default><SpellID>32379</SpellID><Actions></Actions><Lua>local PQ_DP = PQ_DP
local SCD = SCD
local PQ_SWD = PQ_SWD
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SWD) then
	if UnitPower(&amp;quot;player&amp;quot;,13) &amp;gt; 2
		and PQR_SpellAvailable(PQ_DP)
		and not SCD
	then return false end

	return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Death (Focus)</Name><Default>false</Default><SpellID>32379</SpellID><Actions></Actions><Lua>local PQ_DP = PQ_DP
local SCD = SCD
local PQ_SWD = PQ_SWD
local unitCheck = unitCheck
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo

if unitCheck(&amp;quot;focus&amp;quot;,CC) then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,PQ_SWD) then
	if UnitPower(&amp;quot;player&amp;quot;,13) &amp;gt; 2
		and PQR_SpellAvailable(PQ_DP)
		and not SCD
	then return false end

	if Hysteria_UnitInfo(&amp;quot;focus&amp;quot;) &amp;lt;= 20 then return true end
end</Lua><RecastDelay>1000</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Pain</Name><Default>false</Default><SpellID>589</SpellID><Actions></Actions><Lua>local PQ_SWP = PQ_SWP
local Hysteria_UnitInfo = Hysteria_UnitInfo
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,PQ_SWP) then
	local SWP,_,_,_,_,_,SWPtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_SWP,&amp;quot;PLAYER&amp;quot;)
	
	-- Stop Ability execution
	if PQR_IsMoving(0.3) then
		if select(3,Hysteria_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 25 then return false else return true end
	end
	
	if SWP then
		if SWPtimer - GetTime() &amp;lt; 2.5 then return true end
	else return true end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Pain (Focus)</Name><Default>false</Default><SpellID>589</SpellID><Actions></Actions><Lua>local PQ_SWP = PQ_SWP
local unitCheck = unitCheck
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo

if unitCheck(&amp;quot;focus&amp;quot;,CC) then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,PQ_SWP) then
	local SWP,_,_,_,_,_,SWPtimer = UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_SWP,&amp;quot;PLAYER&amp;quot;)
	
	-- Stop Ability execution
	if PQR_IsMoving(0.3) then return false end
	
	if SWP then
		if SWPtimer - GetTime() &amp;lt; 2.5 then return true end
	else return true end
end</Lua><RecastDelay>100</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Pain (Mouseover)</Name><Default>false</Default><SpellID>589</SpellID><Actions></Actions><Lua>local PQ_SWP = PQ_SWP
local unitCheck = unitCheck
local TargetValidation = TargetValidation
local Hysteria_UnitInfo = Hysteria_UnitInfo

if unitCheck(&amp;quot;mouseover&amp;quot;,CC) then return false end

if TargetValidation(&amp;quot;mouseover&amp;quot;,PQ_SWP) then
	local SWP,_,_,_,_,_,SWPtimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,PQ_SWP,&amp;quot;PLAYER&amp;quot;)
	
	-- Stop Ability execution
	if PQR_IsMoving(0.3) then return false end
	
	if SWP then
		if SWPtimer - GetTime() &amp;lt; 2.5 then return true end
	else return true end
end</Lua><RecastDelay>100</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vampiric Touch</Name><Default>false</Default><SpellID>34914</SpellID><Actions></Actions><Lua>local PQ_VT = PQ_VT
local TargetValidation = TargetValidation

if TargetValidation(&amp;quot;target&amp;quot;,PQ_VT) then
	local VT,_,_,_,_,_,VTtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_VT,&amp;quot;PLAYER&amp;quot;)
	
	-- Don&amp;apos;t cast if we&amp;apos;re moving.
	if PQR_IsMoving(0.3) then return false end
	
	if VT then
		if VTtimer - GetTime() &amp;lt;= 3 then return true end
	else return true end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vampiric Touch (Focus)</Name><Default>false</Default><SpellID>34914</SpellID><Actions></Actions><Lua>local PQ_VT = PQ_VT
local unitCheck = unitCheck
local TargetValidation = TargetValidation

if unitCheck(&amp;quot;focus&amp;quot;,CC) then return false end

if TargetValidation(&amp;quot;focus&amp;quot;,PQ_VT) then
	local VT,_,_,_,_,_,VTtimer = UnitDebuffID(&amp;quot;focus&amp;quot;,PQ_VT,&amp;quot;PLAYER&amp;quot;)
	
	-- Don&amp;apos;t cast if we&amp;apos;re moving.
	if PQR_IsMoving(0.3) then return false end
	
	if VT then
		if VTtimer - GetTime() &amp;lt;= 3 then return true end
	else return true end
end</Lua><RecastDelay>500</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Vampiric Embrace</Name><Default>false</Default><SpellID>15286</SpellID><Actions></Actions><Lua>local PQ_Embrace = PQ_Embrace
local Hysteria_UnitInfo = Hysteria_UnitInfo

if Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 49 then return true end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Level 90 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Star = PQ_Star
local PQ_Halo = PQ_Halo
local PQ_DStar = PQ_DStar
local PQ_Cascade = PQ_Cascade
local PQ_DCascade = PQ_DCascade
local PQ_DarkHalo = PQ_DarkHalo

if not PQI_MentallyShadow_Level90Talent_enable then return false end
if not PQI:IsHotkeys( PQI_MentallyShadow_Level90Talent_key  ) then return false end

if PQR_SpellAvailable(32379) or PQR_SpellAvailable(8092) then return false end

-- Halo
if IsPlayerSpell(PQ_Halo)
	and PQR_SpellAvailable(PQ_DarkHalo)
	and PQI:IsHotkeys(PQI_MentallyShadow_Level90Talent_key)
	and not GetCurrentKeyBoardFocus()
then
	SpellCancelQueuedSpell()
	CastSpellByName(GetSpellInfo(PQ_DarkHalo),&amp;quot;target&amp;quot;)
	return true
end

-- Divine Star
if IsPlayerSpell(PQ_Star)
	and PQR_SpellAvailable(PQ_DStar)
	and PQI:IsHotkeys(PQI_MentallyShadow_Level90Talent_key)
	and not GetCurrentKeyBoardFocus()
then
	SpellCancelQueuedSpell()
	CastSpellByName(GetSpellInfo(PQ_DStar),&amp;quot;target&amp;quot;)
	return true
end

-- Cascade
if IsPlayerSpell(PQ_Cascade)
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_DCascade)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and PQI:IsHotkeys(PQI_MentallyShadow_Level90Talent_key)
	and not GetCurrentKeyBoardFocus()
then
	SpellCancelQueuedSpell()
	CastSpellByName(GetSpellInfo(PQ_DCascade),&amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>2000</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Power Infusion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_PI = PQ_PI
local SCD = SCD
local PQ_HasHero = PQ_HasHero

if not PQI_MentallyShadow_AutoPowerInfusion_enable then return false end
if PQ_HasHero() then return false end

if IsPlayerSpell(PQ_PI) and not SCD and PQR_SpellAvailable(PQ_PI) then
	if UnitExists(&amp;quot;target&amp;quot;) and UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then
		CastSpellByName(GetSpellInfo(PQ_PI),&amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Mass Dispel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_MentallyShadow_MassDispel_enable then return false end

if PQR_SpellAvailable(32375)
	and PQI:IsHotkeys(PQI_MentallyShadow_MassDispel_key)
	and not GetCurrentKeyBoardFocus() then
		SpellCancelQueuedSpell()
		CastSpellByID(32375)
		if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Desperate Prayer</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DPrayer = PQ_DPrayer
local Hysteria_UnitInfo = Hysteria_UnitInfo
local v=PQI_MentallyShadow_DesperatePrayer_value 

if not PQI_MentallyShadow_DesperatePrayer_enable then return false end

if IsPlayerSpell(PQ_DPrayer)
	and Hysteria_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= v
	and PQR_SpellAvailable(PQ_DPrayer)
then
	CastSpellByName(GetSpellInfo(PQ_DPrayer),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Alchemy: Lifeblood</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SCD = SCD
-- Herbalism&amp;apos;s Lifeblood
PQ_Lifeblood = {81708,74497,121279,55428,55480,55500,55501,55502,55503}

for i=1,#PQ_Lifeblood do
	if IsPlayerSpell(PQ_Lifeblood[i])
		and PQR_SpellAvailable(PQ_Lifeblood[i])
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then
			if UnitBuffID(&amp;quot;player&amp;quot;,PQ_PI) then
				CastSpellByName(GetSpellInfo(PQ_Lifeblood[i]),&amp;quot;player&amp;quot;)
				return true
			end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Support] Void Shift (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Hysteria_UnitInfo = Hysteria_UnitInfo
local v=PQI_MentallyShadow_VoidShift_value

if not PQI_MentallyShadow_VoidShift_enable then return false end

if IsPlayerSpell(108968) and PQR_SpellAvailable(108968) then
	if PQI:IsHotkeys(PQI_MentallyShadow_VoidShift_key)
		and not GetCurrentKeyBoardFocus() then
			if not UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) and Hysteria_UnitInfo(&amp;quot;mouseover&amp;quot;) &amp;lt;= v then
				SpellCancelQueuedSpell()
				CastSpellByName(GetSpellInfo(108968),&amp;quot;mouseover&amp;quot;)
				return true
			end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Flay (Insanity)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DP = PQ_DP
local PQ_MF = PQ_MF
local PQ_SWI = PQ_SWI
local Hysteria_Spells = Hysteria_Spell

if PQR_IsMoving(0.3) then return false end
if not IsPlayerSpell(PQ_SWI) then return false end

if Hysteria_Spells[PQ_MF].known
	and UnitExists(&amp;quot;target&amp;quot;)
	and PQR_SpellAvailable(PQ_MF)
	and UnitDebuffID(&amp;quot;target&amp;quot;,PQ_DP)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 1)
then CastSpellByName(GetSpellInfo(PQ_MF),&amp;quot;target&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PRIEST>