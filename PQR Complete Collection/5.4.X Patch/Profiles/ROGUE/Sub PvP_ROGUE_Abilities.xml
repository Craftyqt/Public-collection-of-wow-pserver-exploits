<?xml version="1.0" encoding="utf-8" ?><ROGUE><Ability><Name>Stealth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;,1784)
local StealthCD = PQR_SpellAvailable(1784)

if not IsMounted()
and PQR_IsCastingSpell()
and not SpellIsTargeting()
and not UnitBuffID(&amp;quot;Player&amp;quot;,80169)
and not UnitBuffID(&amp;quot;Player&amp;quot;,87959)
and not UnitIsDeadOrGhost(&amp;quot;Player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;Player&amp;quot;)then
if not Stealth and StealthCD  then
   CastSpellByName(tostring(GetSpellInfo(1784)),&amp;quot;Player&amp;quot;) 
end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Slice and Dice</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local SaD = UnitBuffID(&amp;quot;Player&amp;quot;,5171) 

if Energy &amp;gt; 25 
and not SaD 
and ComboPoints &amp;gt; 0 
and not ShadowDance then
	_castSpell(5171)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Eviscerate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;)  
local Rupture = UnitDebuffID(&amp;quot;target&amp;quot;, 1943, &amp;quot;PLAYER&amp;quot;)

if Energy &amp;gt; 35 
and ComboPoints == 5 then
   _castSpell(2098,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Kidney Shot</Name><Default>false</Default><SpellID>408</SpellID><Actions></Actions><Lua>local KS =  PQR_SpellAvailable(408)
local CP = GetComboPoints(&amp;quot;Player&amp;quot;, &amp;quot;Target&amp;quot;)

if isImmune(&amp;quot;target&amp;quot;) == nil then
	if hasCC(&amp;quot;target&amp;quot;) == nil then
		if KS and CP &amp;gt;= 4 and KidneyKey then
			return true
		else
			return false
		end 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Recuperate</Name><Default>false</Default><SpellID>73651</SpellID><Actions></Actions><Lua>local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local SaD = UnitBuffID(&amp;quot;Player&amp;quot;,5171)
local Recup = UnitBuffID(&amp;quot;Player&amp;quot;,73651)
local playerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)


if Energy &amp;gt; 30 
and SaD 
and playerHP &amp;lt; RecupHP 
and not Recup 
and ComboPoints &amp;gt;= 3  then
	_castSpell(73651)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Premeditation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;, 1784)
local sa = PQR_SpellAvailable(14183)
local Enemy = UnitCanAttack(&amp;quot;Player&amp;quot;,&amp;quot;Target&amp;quot;)


if not SpellIsTargeting()
or  UnitExists(&amp;quot;Target&amp;quot;)
or not UnitIsDeadOrGhost(&amp;quot;Player&amp;quot;) 
or not UnitIsDeadOrGhost(&amp;quot;Target&amp;quot;)
or not UnitAffectingCombat(&amp;quot;Player&amp;quot;)then


if Stealth and Enemy and sa  then
   _castSpell(14183,&amp;quot;Target&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cheap Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;,1784)
local CheapShot = UnitDebuffID(&amp;quot;target&amp;quot;,1833)
local Subterfuge = UnitBuffID(&amp;quot;Player&amp;quot;,108208)
local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local CSDuration = select(6, UnitDebuffID(&amp;quot;target&amp;quot;,1833)) 


if CSDuration == 4 then
	CheapShotDR = GetTime()
end


if PQR_SpellAvailable(1833) 
and (Stealth or Subterfuge or ShadowDance)
and not CheapShot 
and (CheapShotDR == nil or (CheapShotDR - GetTime()) &amp;lt; -20) then
	_castSpell(1833,&amp;quot;target&amp;quot;)
end


--ToDo: Create a DR tracker for Stuns and implement it.</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ambush</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;,1784)
local CheapShot = UnitDebuffID(&amp;quot;target&amp;quot;,1833)
local Subterfuge = UnitBuffID(&amp;quot;Player&amp;quot;,108208) 
local Energy = UnitPower(&amp;quot;player&amp;quot;) 

if Energy &amp;gt;= 60  
and ComboPoints &amp;lt;= 5
and (ShadowDance or Stealth or Subterfuge) then
	_castSpell(8676,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rupture</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ruBuff = UnitDebuffID(&amp;quot;target&amp;quot;, 1943, &amp;quot;PLAYER&amp;quot;)
local ShadowDance = UnitBuffID(&amp;quot;Player&amp;quot;,51713)
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 


if Energy &amp;gt; 25 
and ComboPoints &amp;gt;=2  
and not ruBuff  
and not ShadowDance then
   _castSpell(1943,&amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trick of the Trade</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(57934)
and UnitExists(TricksTarget) 
and PQR_IsOutOfSight(TricksTarget, 0.1) == false then
		_castSpell(57934, TricksTarget) 
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Poison App</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local WP = WoundPoison
local LP = LeechingPoison
local CP = CripplingPoison
local MNP = MindNumbingPoison
local PARP = ParalyticPoison
local DP = DeadlyPoison


MHPOISON = nil
if ( not DP and WP ) then
	MHPOISON = 8679
elseif ( DP  and not WP  ) then
	MHPOISON = 2823
elseif ( DP  and WP  ) then
	return false
elseif ( not DP  and not WP ) then
	return false
end

OHPOISON = nil
if ( LP  and not CP  and not MNP  and not PARP  ) then
	OHPOISON = 108211
elseif ( not LP  and CP  and not MNP  and not PARP  ) then
	OHPOISON = 3408
elseif ( not LP and not CP  and MNP  and not PARP  ) then
	OHPOISON = 5761
elseif ( not LP  and not CP  and not MNP and PARP  ) then
	OHPOISON = 108215
elseif ( ( LP  and CP  and not MNP  and not PARP  ) or
		 ( LP  and not CP  and MNP  and not PARP  ) or
		 ( LP  and not CP  and not MNP  and PARP ) or
		 ( not LP  and CP  and MNP  and not PARP  ) or
		 ( not LP  and CP  and not MNP  and PARP  ) or
		 ( not LP  and not CP  and MNP  and PARP  ) ) then
	return false
end

if not IsMounted() then
-- Check to Apply Main hand poison
if not UnitBuffID(&amp;quot;player&amp;quot;, MHPOISON) then
	CastSpellByName(GetSpellInfo(MHPOISON), &amp;quot;player&amp;quot;)
end
-- Check to Apply Leeching Poison
if not UnitBuffID(&amp;quot;player&amp;quot;, OHPOISON) then
	CastSpellByName(GetSpellInfo(OHPOISON), &amp;quot;player&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Feint</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(1966) then
	for i=1, #custTars do
		if UseFeint(custTars[i]) ~= nil then
			_castSpell(1966)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dismantle</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoDisarm--
if AutoDisarm 
then
		for i=1, #custTars do
			if inCombat() 
			and UseDisarm(custTars[i]) then 
				PQR_CustomTarget = custTars[i]
				useDisarm = true
			end
		end
end

--DisarmKey--
if DisarmKey 
then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	useDisarm = true
end

--Complete the Disarm--
if useDisarm == true
and hasCC(PQR_CustomTarget) == nil
and isImmune(PQR_CustomTarget) == nil
and cdRemains(51722) == 0
then
	_castSpell(51722,PQR_CustomTarget) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Start Combat---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PauseKey
or IsMounted()
or isImmune(&amp;quot;target&amp;quot;) ~= nil
or SpellIsTargeting()
or not UnitCanAttack(&amp;quot;Player&amp;quot;,&amp;quot;Target&amp;quot;)
or not UnitExists(&amp;quot;Target&amp;quot;)
or UnitBuffID(&amp;quot;Player&amp;quot;,80169)
or UnitBuffID(&amp;quot;Player&amp;quot;,87959) 
or UnitChannelInfo(&amp;quot;Player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;Player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;Target&amp;quot;)
or not UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;Player&amp;quot;) / UnitHealthMax(&amp;quot;Player&amp;quot;)
local HealstoneCD = select(2,GetItemCooldown(5512))

if PlayerHP &amp;lt; HealthstoneHP then
	if HealstoneCD == 0 and GetItemCount(5512) &amp;gt; 0  then
    	UseItemByName(select(1,GetItemInfo(5512)), &amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Poisons</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local poison = UnitCastingInfo(&amp;quot;player&amp;quot;)
local WP = WoundPoison
local LP = LeechingPoison
local CP = CripplingPoison
local MNP = MindNumbingPoison
local PARP = ParalyticPoison

if not WP then
	if poison == GetSpellInfo(2823) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 2823) then
			SpellStopCasting()
			return true
		end
	end
elseif WP then
	if poison == GetSpellInfo(8679) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 8679) then
			SpellStopCasting()
			return true
		end
	end
end

if not LP then
	if ( poison == GetSpellInfo(3408)
	 or poison == GetSpellInfo(5761)
	 or poison == GetSpellInfo(108215) ) then
	 	if ( ( CP and UnitBuffID(&amp;quot;player&amp;quot;, 3408) )
	 	or ( MNP and UnitBuffID(&amp;quot;player&amp;quot;, 5761) )
	 	or ( PARP and UnitBuffID(&amp;quot;player&amp;quot;, 108215) ) ) then
	 		SpellStopCasting()
	 		return true
		end
	end
elseif LP then
	if poison == GetSpellInfo(108211) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 108211) then
			SpellStopCasting()
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Backstab</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 

if ComboPoints &amp;lt; 5
and not ShadowDance
and not PQR_UnitFacing(&amp;quot;target&amp;quot;, &amp;quot;player&amp;quot;)then
 	_castSpell(53,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Energy = UnitPower(&amp;quot;player&amp;quot;) 


if Energy &amp;gt; 15
and BlindKey then

	if UnitExists(&amp;quot;focus&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
	and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;, 0.1) == false
	and IsSpellInRange(GetSpellInfo(2094), &amp;quot;focus&amp;quot;) == 1 then
		_castSpell(2094,&amp;quot;focus&amp;quot;)
	end
	
	
	if UnitExists(&amp;quot;mouseover&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) ~= nil
	and PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;, 0.1) == false
	and IsSpellInRange(GetSpellInfo(2094), &amp;quot;mouseover&amp;quot;) == 1 then
		_castSpell(2094,&amp;quot;mouseover&amp;quot;)
	end

	if UnitExists(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= nil
	and PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 0.1) == false
	and IsSpellInRange(GetSpellInfo(2094), &amp;quot;target&amp;quot;) == 1 then
		_castSpell(2094,&amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Garrote</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local Garrote = UnitDebuffID(&amp;quot;Target&amp;quot;, 703) 
local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;,1784)
local Subterfuge = UnitBuffID(&amp;quot;Player&amp;quot;,108208)


if ComboPoints &amp;lt; 5
and not Garrote
and (Stealth or Subterfuge or ShadowDance) then 
	_castSpell(703,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Redirect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not redirect then
	redirect = CreateFrame(&amp;quot;Frame&amp;quot;)
	cps = 0
end
local frame = redirect
frame:RegisterEvent(&amp;quot;UNIT_COMBO_POINTS&amp;quot;)
frame:SetScript(&amp;quot;OnEvent&amp;quot;, function(self, event, ...)

if event == &amp;quot;UNIT_COMBO_POINTS&amp;quot; then
		cps = GetComboPoints(&amp;quot;player&amp;quot;)
	end
end)


local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)

if UnitExists(&amp;quot;Target&amp;quot;)
and ComboPoints ~= cps then
	_castSpell(73981,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hemorrhage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Hemo,_,_,_,_,_,Hemotimer = UnitDebuffID(&amp;quot;target&amp;quot;,89775,&amp;quot;PLAYER&amp;quot;) 
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)

if PQR_SpellAvailable(16511)
and inMelee() ~= nil
and not ShadowDance
and ComboPoints &amp;lt; 5 then
	-- Check if Hemorrhage is on target
	if not UnitDebuffID(&amp;quot;target&amp;quot;, 89775, &amp;quot;player&amp;quot;) then
		CastSpellByName(GetSpellInfo(16511), &amp;quot;target&amp;quot;)
	-- If Hemorrhage exists on target then refresh
	elseif UnitDebuffID(&amp;quot;target&amp;quot;, 89775, &amp;quot;player&amp;quot;) then
		if select(7, UnitDebuffID(&amp;quot;target&amp;quot;, 89775, &amp;quot;player&amp;quot;)) - GetTime() &amp;lt; 5 then
			CastSpellByName(GetSpellInfo(16511), &amp;quot;target&amp;quot;)
		end
	end
	

	if PQR_UnitFacing(&amp;quot;target&amp;quot;, &amp;quot;player&amp;quot;) then
		CastSpellByName(GetSpellInfo(16511), &amp;quot;target&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end


-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false 
	CheapShotDR = nil
	
	
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_RoguePvP.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_CpoworksRoguePvP.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end



-- OPTIONS -- 
TricksTarget = PQI_CpoworksRoguePvP_TricksTarget_value


RecupHP = PQI_CpoworksRoguePvP_Recuperate_value
RecupEnabled = PQI_CpoworksRoguePvP_Recuperate_enable
HealthstoneHP = PQI_CpoworksRoguePvP_Healthstone_value
HealthstoneEnabled = PQI_CpoworksRoguePvP_Healthstone_enable
FeintHP = PQI_CpoworksRoguePvP_FeintHP_value
FeintEnabled = PQI_CpoworksRoguePvP_FeintHP_enable

DeadlyPoison = PQI_CpoworksRoguePvP_DeadlyPoison_enable
WoundPoison = PQI_CpoworksRoguePvP_WoundPoison_enable
LeechingPoison = PQI_CpoworksRoguePvP_LeechingPoison_enable
CripplingPoison = PQI_CpoworksRoguePvP_CripplingPoison_enable
MindNumbingPoison = PQI_CpoworksRoguePvP_MindNumbingPoison_enable
ParalyticPoison = PQI_CpoworksRoguePvP_ParalyticPoison_enable

AutoDisarm = PQI_CpoworksRoguePvP_AutoDisarm_enable
BurstEnergy = PQI_CpoworksRoguePvP_BurstEnergyPool_value

GroupInfo() 


PauseKey				= PQI:IsHotkeys(PQI_CpoworksRoguePvP_PauseRotation_key)
DisarmKey				= PQI:IsHotkeys(PQI_CpoworksRoguePvP_DisarmKey_key)
KidneyKey				= PQI:IsHotkeys(PQI_CpoworksRoguePvP_KidneyKey_key)

if not PQI_CpoworksRoguePvP_BurstKey_enable then 
	BurstKey			= IsMouseButtonDown(3)
else 
 	BurstKey 			= PQI:IsHotkeys(PQI_CpoworksRoguePvP_BurstKey_key)
end

if not PQI_CpoworksRoguePvP_BombKey_enable then 
	BombKey			= IsMouseButtonDown(4)
else 
 	BombKey 			= PQI:IsHotkeys(PQI_CpoworksRoguePvP_BombKey_key)
end

if not PQI_CpoworksRoguePvP_BlindKey_enable then 
	BlindKey			= IsMouseButtonDown(5)
else 
 	BlindKey 			= PQI:IsHotkeys(PQI_CpoworksRoguePvP_BlindKey_key)
end



--Pause
if PauseKey 
or IsMounted() 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local Troll = IsSpellKnown(26297)
local BeserkAvil = PQR_SpellAvailable(26297)
local Orc = IsSpellKnown(33697)
local EnrageAvil = PQR_SpellAvailable(33697)

if BurstKey then 

if Energy &amp;lt; BurstEnergy then
	return true
end
	
	--Troll racial
	if Troll
	and BeserkAvil then
		CastSpellByName(tostring(GetSpellInfo(26297)))
	end

	--Orc racial
	if Orc
	and EnrageAvil then
		CastSpellByName(tostring(GetSpellInfo(33697)))
	end
	
	
	-- Gloves
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 
		UseInventoryItem(10)
	end

	--Trinkets
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
	end

	--Shadow Dance
	_castSpell(51713)

	--Shadow Blades
	_castSpell(121471)	
	
	--Vendetta
	_castSpell(79140, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Smoke Bomb</Name><Default>false</Default><SpellID>76577</SpellID><Actions></Actions><Lua>if BombKey then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Gouge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(1776) then
	for i=1, #custTars do
		if UseGouge(custTars[i]) ~= nil then
			_castSpell(1776, custTars[i])
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Deadly Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;,1784)
local CheapShot = UnitDebuffID(&amp;quot;target&amp;quot;,1833)
local Subterfuge = UnitBuffID(&amp;quot;Player&amp;quot;,108208)
local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local Energy = UnitPower(&amp;quot;player&amp;quot;) 
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)


if PQR_SpellAvailable(26679)
and ComboPoints == 5
and inMelee() == nil
and (not Stealth or not Subterfuge or not ShadowDance) then
	_castSpell(26679, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shuriken Throw</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Stealth = UnitBuffID(&amp;quot;Player&amp;quot;,1784)
local Subterfuge = UnitBuffID(&amp;quot;Player&amp;quot;,108208)
local ShadowDance = UnitBuffID(&amp;quot;player&amp;quot;, 51713)
local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)

if PQR_SpellAvailable(114014)
and ComboPoints &amp;lt; 5
and inMelee() == nil
and (not Stealth or not Subterfuge or not ShadowDance) then
	_castSpell(114014)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispatch</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 121152) then
	CastSpellByName(GetSpellInfo(111240), &amp;quot;target&amp;quot;)
elseif 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 35
and GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 5 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 1856) then
		CastSpellByName(GetSpellInfo(111240), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Envenom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>tHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) 


if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 5 
and tHP &amp;lt;= 35 then
	CastSpellByName(GetSpellInfo(32645), &amp;quot;target&amp;quot;)
elseif 	GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;gt;= 4 
and tHP &amp;gt; 35 then
	CastSpellByName(GetSpellInfo(32645), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mutilate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 1856) then
	if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 35 then
		CastSpellByName(GetSpellInfo(1329), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- Events -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Set up global variables
if rightkeydown == nil then
	rightkeydown = 0
end
if IsRightControlKeyDown() and GetTime() - rightkeydown &amp;gt; 0.3  then
  rightkeydown = GetTime()
  if noevents then 
    noevents = false print(&amp;quot;Events: \124cFF15E61CEnabled&amp;quot;)
  else 
    noevents = true print(&amp;quot;Events: \124cFFE61515Disabled&amp;quot;)
  end
end
if shadowstep == nil then
	shadowstep = false
end
if noevents == nil then
	noevents = false
end
-- Make sure we&amp;apos;re only loading once
if loaded == nil then
loaded = true
  -- Spell event table
  spellIds = {
	-- Death Knight
	[47481] = {&amp;quot;Evasion&amp;quot;},									-- Gnaw (Ghoul)
	[49203] = {&amp;quot;Cloak of Shadows&amp;quot;},							-- Hungering Cold
	[91797] = {&amp;quot;Evasion&amp;quot;},									-- Monstrous Blow (Super ghoul)
	[49576] = {&amp;quot;Shadowstepdelayed&amp;quot;},							-- Death Grip
	[49016] = {&amp;quot;Shiv&amp;quot;},										-- Unholy Frenzy
	[45524] = {&amp;quot;Gouge&amp;quot;},										-- Chains of Ice
	[49039] = {&amp;quot;Garrote&amp;quot;, &amp;quot;Gouge&amp;quot;},			-- Lichborne
	[48792] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Dismantle&amp;quot;},		-- Icebound Fortitude 
	-- Druid
	[5211]  = {&amp;quot;Gouge&amp;quot;},										-- Bash
	[33786] = {&amp;quot;Cloak of Shadows&amp;quot;},							-- Cyclone
	[22570] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Evasion&amp;quot;},			-- Maim
	[9005]  = {&amp;quot;Gouge&amp;quot;, &amp;quot;Evasion&amp;quot;},			-- Pounce
	[339]   = {&amp;quot;Gouge&amp;quot;},										-- Entangling Roots
	[49376] = {&amp;quot;Shadowstep&amp;quot;},									-- Feral Charge
	[16979] = {&amp;quot;Shadowstep&amp;quot;},									-- Feral Charge (Bear)
	[49377] = {&amp;quot;Shadowstep&amp;quot;},									-- Feral Charge (Bear)
	[5229]  = {&amp;quot;Shiv&amp;quot;},										-- Enrage
	-- Hunter
	[19263] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Shiv&amp;quot;},			-- Deterrence
	[781]   = {&amp;quot;Gouge&amp;quot;, &amp;quot;Dismantle&amp;quot;},		-- Disengage
	[19503] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Cloak of Shadows&amp;quot;,	-- Scatter Shot
			   &amp;quot;Blind&amp;quot;, &amp;quot;Evasion&amp;quot;,
			   &amp;quot;Shiv&amp;quot;},
	[53271] = {&amp;quot;Dismantle&amp;quot;, &amp;quot;Gouge&amp;quot;},		-- Master&amp;apos;s Call 
	-- Mage
	[44572] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Smoke Bomb&amp;quot;, 										-- Deep Freeze
			   &amp;quot;Feint&amp;quot;, &amp;quot;Cloak of Shadows&amp;quot;},								
	[31661] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Blind&amp;quot;, &amp;quot;Cloak of Shadows&amp;quot;},		-- Dragon&amp;apos;s Breath
	[83047] = {&amp;quot;Cloak of Shadows&amp;quot;},															-- Improved Polymorph
	[118]   = {&amp;quot;Cloak of Shadows&amp;quot;},															-- Polymorph
	[122]   = {&amp;quot;Gouge&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Kidney Shot&amp;quot;, &amp;quot;Garrote&amp;quot;},		-- Frost Nova
	[33395] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Kidney Shot&amp;quot;, &amp;quot;Garrote&amp;quot;},		-- Pet Freeze
	[1953]  = {&amp;quot;Shadowstepdelayed&amp;quot;, &amp;quot;Gouge&amp;quot;, &amp;quot;Blind&amp;quot;},	-- Blink
	[45438]  = {&amp;quot;Garrote&amp;quot;,&amp;quot;Gouge&amp;quot;, &amp;quot;Shiv&amp;quot;},				-- Ice Block
	-- Paladin
	[853]   = {&amp;quot;Gouge&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Cloak of Shadows&amp;quot;, &amp;quot;Dismantle&amp;quot;},	-- Hammer of Justice
	[20066] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Cloak of Shadows&amp;quot;, &amp;quot;Blind&amp;quot;},		-- Repentance
	[31884] = {&amp;quot;Garrote&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Dismantle&amp;quot;},						-- Avenging Wrath
	-- Priest 
	[64044] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Shiv&amp;quot;},											-- Psychic Horror
	[8122]  = {&amp;quot;Cloak of Shadows&amp;quot;, &amp;quot;Gouge&amp;quot;},								-- Psychic Scream
    [64058] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Shiv&amp;quot;},											-- Psychic Horror
	-- Rogue
	[2094]  = {&amp;quot;Rupture&amp;quot;, &amp;quot;Recuperate&amp;quot;},									-- Blind
	[1833]  = {&amp;quot;Dismantle&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Gouge&amp;quot;},								-- Cheap Shot
	[1856]  = {&amp;quot;Sap&amp;quot;, &amp;quot;Dismantle&amp;quot;,											-- Vanish
			   &amp;quot;Blind&amp;quot;, &amp;quot;Hemorrhage&amp;quot;},		 
	[408]   = {&amp;quot;Dismantle&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Gouge&amp;quot;, &amp;quot;Combat Readiness&amp;quot;},	 		-- Kidney Shot
	[6770]  = {&amp;quot;Sap&amp;quot;},														-- Sap
	[51722] = {&amp;quot;Dismantle&amp;quot;},												-- Dismantle
	[36554] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Dismantle&amp;quot;, &amp;quot;Shadowstep&amp;quot;,},						-- Shadowstep
	[51713] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Feint&amp;quot;, &amp;quot;Dismantle&amp;quot;, 								-- Shadow Dance
			   &amp;quot;Shadowstep&amp;quot;, &amp;quot;Combat Readiness&amp;quot;},						
	-- Shaman
	[51514] = {&amp;quot;Cloak of Shadows&amp;quot;},											-- Hex
	[51490] = {&amp;quot;Shadowstepdelayed&amp;quot;},									-- Thunderstorm
	[2645] = {&amp;quot;Shiv&amp;quot;},														-- Ghost Wolf
	[98008] = {&amp;quot;Smoke Bomb&amp;quot;},											-- Spirit Link Totem 
	-- Warlock
	[89766] = {&amp;quot;Evasion&amp;quot;},																	-- Axe Toss (Felguard)
	[6789]  = {&amp;quot;Gouge&amp;quot;, &amp;quot;Vanish&amp;quot;, &amp;quot;Cloak of Shadows&amp;quot;},	-- Death Coil
	[5782]  = {&amp;quot;Cloak of Shadows&amp;quot;},															-- Fear 
	[48020]  = {&amp;quot;Shadowstepdelayed&amp;quot;, &amp;quot;Gouge&amp;quot;},								-- Demonic Circle: Transport
	-- Warrior
	[100]  = {&amp;quot;Shadowstep&amp;quot;},																	-- Charge  
	[5246]  = {&amp;quot;Vanish&amp;quot;, &amp;quot;Blind&amp;quot;},											-- Intimidating Shout 
	[23694] = {&amp;quot;Gouge&amp;quot;, &amp;quot;Dismantle&amp;quot;},										-- Improved Hamstring 
	[1719] = {&amp;quot;Dismantle&amp;quot;, &amp;quot;Feint&amp;quot;},																	-- Recklessness
	[18499] = {&amp;quot;Shiv&amp;quot;},																		-- Beserker Rage
	[57519] = {&amp;quot;Shiv&amp;quot;},																		-- Enrage
}
-- Interrupt list (1 = no focus shadowstep kick, 2 = focus shadowstep kick)
 spells = {
	[&amp;quot;Polymorph&amp;quot;] = 2, 
	[&amp;quot;Frostbolt&amp;quot;] = 1, 
	[&amp;quot;Cyclone&amp;quot;] = 2, 
	[&amp;quot;Regrowth&amp;quot;] = 1, 
	[&amp;quot;Nourish&amp;quot;] = 1, 
	[&amp;quot;Flash of Light&amp;quot;] = 1, 
	[&amp;quot;Divine Light&amp;quot;] = 1, 
	[&amp;quot;Flash Heal&amp;quot;] = 1, 
	[&amp;quot;Healing Surge&amp;quot;] = 1, 
	[&amp;quot;Lava Burst&amp;quot;] = 1, 
	[&amp;quot;Greater Healing Wave&amp;quot;] = 2, 
	[&amp;quot;Hex&amp;quot;] = 2, 
	[&amp;quot;Fear&amp;quot;] = 2, 
	[&amp;quot;Haunt&amp;quot;] = 1, 
	[&amp;quot;Unstable Affliction&amp;quot;] = 1, 
	[&amp;quot;Scorch&amp;quot;] = 1, 
	[&amp;quot;Arcane Blast&amp;quot;] = 1, 
	[&amp;quot;Evocation&amp;quot;] = 1, 
	[&amp;quot;Mind Blast&amp;quot;] = 1, 
	[&amp;quot;Greater Heal&amp;quot;] = 2, 
	[&amp;quot;Bad Manner&amp;quot;] = 1, 
	[&amp;quot;Penance&amp;quot;] = 1, 
	[&amp;quot;Seduction&amp;quot;] = 1, 
	[&amp;quot;Gargoyle Strike&amp;quot;] = 1
}

  -- Create our event handler function
  function EventHandler(self, event, ...)
	-- Check if event handling is enabled
	if noevents then return end
	-- Don&amp;apos;t cast while in stealth or vanished
	if UnitBuffID(&amp;quot;player&amp;quot;, 1784) or UnitBuffID(&amp;quot;player&amp;quot;, 11327) then return end
    -- Check for a combat log event
    if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		local sid = select(12, ...)
		if ((select(2, ...) == &amp;quot;SPELL_CAST_SUCCESS&amp;quot;)
			or (select(2, ...) == &amp;quot;SPELL_AURA_APPLIED&amp;quot;)
			or ((sid == 45438 or sid == 19263) and select(2, ...) == &amp;quot;SPELL_AURA_REMOVED&amp;quot;))
			-- Checking to make sure the spell caster is our current target and that the target casted the spell at us
			and select(4, ...) == UnitGUID(&amp;quot;target&amp;quot;)
			and (UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;targettarget&amp;quot;) or UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;targettarget&amp;quot;))
		then
		local sid = select(12, ...)
		local sname = spellIds[sid]
		if sname ~= nil then
			for _,v in ipairs(sname) do
				local cd = GetSpellCooldown(v)
				if IsUsableSpell(v) and (cd == 0 or (GetTime() - cd) &amp;lt; 0.5) and IsSpellInRange(v) ~= 0 then
					-- Don&amp;apos;t cloak psychic scream or smoke bomb SLT unless in melee range
					if (sid == 8122 or sid == 98008) and IsSpellInRange(&amp;quot;Kidney Shot&amp;quot;) ~= 1 then return end
					CastSpellByName(v) print(v, select(13, ...))
					return
				end
				if v == &amp;quot;Shadowstepdelayed&amp;quot; then
					shadowstep = GetTime()
					return
				end
			end
		end
      end
    end
  end

  -- Create our frame and bind combat log events
  frame = CreateFrame(&amp;quot;FRAME&amp;quot;, &amp;quot;OurFrame&amp;quot;)
  frame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  frame:SetScript(&amp;quot;OnEvent&amp;quot;, EventHandler)

  print(&amp;quot;Loaded event handler&amp;quot;)

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></ROGUE>