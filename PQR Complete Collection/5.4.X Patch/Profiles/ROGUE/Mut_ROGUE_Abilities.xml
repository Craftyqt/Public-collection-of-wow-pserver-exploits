<?xml version="1.0" encoding="utf-8" ?><ROGUE><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_CpoworksRogue_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_CpoworksRogue_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end



-- OPTIONS -- 
RecupHP = PQI_CpoworksRogue_Recuperate_value
RecupEnabled = PQI_CpoworksRogue_Recuperate_enable
HealthstoneHP = PQI_CpoworksRogue_Healthstone_value
HealthstoneEnabled = PQI_CpoworksRogue_Healthstone_enable

DeadlyPoison = PQI_CpoworksRogue_DeadlyPoison_enable
WoundPoison = PQI_CpoworksRogue_WoundPoison_enable
LeechingPoison = PQI_CpoworksRogue_LeechingPoison_enable
CripplingPoison = PQI_CpoworksRogue_CripplingPoison_enable
MindNumbingPoison = PQI_CpoworksRogue_MindNumbingPoison_enable
ParalyticPoison = PQI_CpoworksRogue_ParalyticPoison_enable

UseVanish = PQI_CpoworksRogue_Vanish_enable
UsePrep = PQI_CpoworksRogue_Preparation_enable
UseVendetta = PQI_CpoworksRogue_Vendetta_enable
UseShadowBlades = PQI_CpoworksRogue_ShadowBlades_enable


TricksTarget = PQI_CpoworksRogue_TricksTarget_value


GroupInfo() 

--Keybinds
AoEKey	 			= PQI:IsHotkeys(PQI_CpoworksRogue_AoEMode_key)  
CooldownsKey		= PQI:IsHotkeys(PQI_CpoworksRogue_Cooldowns_key)
PauseKey			= PQI:IsHotkeys(PQI_CpoworksRogue_PauseRotation_key)

--					= IsMouseButtonDown(3)  --When you push down the scroll button on mouse(usually)
--					= IsMouseButtonDown(4)  --MouseButton4 depends on mouse
--					= IsMouseButtonDown(5)  --MouseButton5 depends on mouse




--Do Not Touch anything below
if not MutLoaded then
	UseCD			= false
	AoE			= false
	MutLoaded		= true
	
end



--AoE
if not aoekeydown then aoekeydown = 0 end
if AoEKey and GetTime() - aoekeydown &amp;gt; 1 then
	aoekeydown = GetTime()
  	if AoE  then 
		AoE  = false 
		PQR_WriteToChat(&amp;quot;AoE: |cFFFF0000Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)
  	else 
		AoE  = true 
		PQR_WriteToChat(&amp;quot;AoE: |cFF00FF00Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
  	end
end


--Cooldowns
if not controllkeydown then controllkeydown = 0 end
if CooldownsKey and GetTime() - controllkeydown &amp;gt; 1 then
	controllkeydown = GetTime()
  	if UseCD  then 
   		UseCD = false 
		PQR_WriteToChat(&amp;quot;Cooldowns: |cFFFF0000Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)  		
	else 
		UseCD = true 
		PQR_WriteToChat(&amp;quot;Cooldowns: |cFF00FF00Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
  	end
end


--------------------
-- Slash Commands
--------------------
SLASH_STATUS1 = &amp;quot;/status&amp;quot;
SLASH_STATUS2 = &amp;quot;/pqrstatus&amp;quot;
function SlashCmdList.STATUS(msg, editbox)
	PQR_status()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PauseKey
or IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,5384)
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or UnitBuffID(&amp;quot;player&amp;quot;, 77769)
or not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Status --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if StatusReport then
	PQR_status()
	StatusReport = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Slice n Dice</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Apply Slice and Dice
if not UnitBuffID(&amp;quot;player&amp;quot;, 5171) then
	CastSpellByName(GetSpellInfo(5171), &amp;quot;player&amp;quot;)
-- Refresh Slice and Dice
elseif UnitBuffID(&amp;quot;player&amp;quot;, 5171) then
	if select(7, UnitBuffID(&amp;quot;player&amp;quot;, 5171)) - GetTime() &amp;lt; 3 then
		CastSpellByName(GetSpellInfo(5171), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispatch</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE then return false end

if UnitBuffID(&amp;quot;player&amp;quot;, 121152) then
	CastSpellByName(GetSpellInfo(111240), &amp;quot;target&amp;quot;)
elseif 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 35
and GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 5 then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 1856) then
		CastSpellByName(GetSpellInfo(111240), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Envenom</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE then return false end

tHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) 


if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 5 
and tHP &amp;lt;= 35 then
	CastSpellByName(GetSpellInfo(32645), &amp;quot;target&amp;quot;)
elseif 	GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;gt;= 4 
and tHP &amp;gt; 35 then
	CastSpellByName(GetSpellInfo(32645), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mutilate</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE then return false end

if not UnitBuffID(&amp;quot;player&amp;quot;, 1856) then
	if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 35 then
		CastSpellByName(GetSpellInfo(1329), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rupture</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE then return false end

local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local Rupture = select(7, UnitDebuffID(&amp;quot;target&amp;quot;, 1943, &amp;quot;player&amp;quot;))

if not Rupture 
or Rupture - GetTime() &amp;lt; 2
and ComboPoints &amp;gt;= 2
--and ttd(&amp;quot;target&amp;quot;) &amp;gt; ((ComboPoints - 1) * 4) + 8 
then
	CastSpellByName(GetSpellInfo(1943), &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Trinkets/Gloves/Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Beserk = IsSpellKnown(26297)
local BeserkAvil = PQR_SpellAvailable(26297)
local Orc = IsSpellKnown(33697)
local OrcAvil = PQR_SpellAvailable(33697)


--Troll racial
if UseCD
and Beserk
and BeserkAvil then
	CastSpellByName(tostring(GetSpellInfo(26297)))
end

--Orc racial
if UseCD
and Orc
and OrcAvil then
	CastSpellByName(tostring(GetSpellInfo(33697)))
end


if UseCD then

-- Gloves
if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 
		UseInventoryItem(10)
end

--Trinkets
if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
end
if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0 then 
		UseInventoryItem(14)
end

		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Blades</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD and UseShadowBlades then
	if PQR_SpellAvailable(121471)
	and UnitExists(&amp;quot;Target&amp;quot;)
	and not IsStealthed() then
		CastSpellByName(GetSpellInfo(121471))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vendetta</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD and UseVendetta then
	if GetSpellCooldown(79140) == 0 then
		CastSpellByName(GetSpellInfo(79140), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Prep</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local start, duration = GetSpellCooldown(1856) -- Vanish
local start2, duration2 = GetSpellCooldown(14185) -- Preparation 

if UseCD and UsePrep then
	if not ( start2 &amp;gt; 0 and duration2 &amp;gt; 1.5 ) then
		if not IsStealthed() then
			if ( start &amp;gt; 0 and duration &amp;gt; 1.5 ) and ( start + duration - GetTime()) &amp;lt; 115 then
				CastSpellByName(GetSpellInfo(14185), &amp;quot;player&amp;quot;)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vanish</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD and UseVanish then
	if not IsStealthed() or not UnitBuffID(&amp;quot;player&amp;quot;, 51713) then
		if not PQR_UnitFacing(&amp;quot;target&amp;quot;, &amp;quot;player&amp;quot;) then
			if select(2, GetSpellCooldown(1856)) == 0 then
				CastSpellByName(GetSpellInfo(1856)) 	
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ambush</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsStealthed() then
	CastSpellByName(GetSpellInfo(8676), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fan of Knives</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE then
	if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 5 then
		CastSpellByName(GetSpellInfo(51723), &amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Crimson Tempest</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE then
	if GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 5 then
		CastSpellByName(GetSpellInfo(121411), nil)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HealthstoneEnabled then
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; HealthstoneHP
	 and select(3,GetItemCooldown(5512)) == 1 then
		UseItemByName(5512)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Recup</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if RecupEnabled  then
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt;= RecupHP
	 and GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;gt;= 3 then
		CastSpellByName(GetSpellInfo(73651), &amp;quot;target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Poisons</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local poison = UnitCastingInfo(&amp;quot;player&amp;quot;)
local WP = WoundPoison
local LP = LeechingPoison
local CP = CripplingPoison
local MNP = MindNumbingPoison
local PARP = ParalyticPoison

if not WP then
	if poison == &amp;quot;Deadly Poison&amp;quot; then
		if UnitBuffID(&amp;quot;player&amp;quot;, 2823) then
			SpellStopCasting()
			return true
		end
	end
elseif WP then
	if poison == &amp;quot;Wound Poison&amp;quot; then
		if UnitBuffID(&amp;quot;player&amp;quot;, 8679) then
			SpellStopCasting()
			return true
		end
	end
end

if not LP then
	if ( poison == &amp;quot;Crippling Poison&amp;quot;
	 or poison == &amp;quot;Mind-numbing Poison&amp;quot;
	 or poison == &amp;quot;Paralytic Poison&amp;quot; ) then
	 	if ( ( CP and UnitBuffID(&amp;quot;player&amp;quot;, 3408) )
	 	or ( MNP and UnitBuffID(&amp;quot;player&amp;quot;, 5761) )
	 	or ( PARP and UnitBuffID(&amp;quot;player&amp;quot;, 108215) ) ) then
	 		SpellStopCasting()
	 		return true
		end
	end
elseif LP then
	if poison == &amp;quot;Leeching Poison&amp;quot; then
		if UnitBuffID(&amp;quot;player&amp;quot;, 108211) then
			SpellStopCasting()
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Poison App</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local WP = WoundPoison
local LP = LeechingPoison
local CP = CripplingPoison
local MNP = MindNumbingPoison
local PARP = ParalyticPoison
local DP = DeadlyPoison


MHPOISON = nil
if ( not DP and WP ) then
	MHPOISON = 8679
elseif ( DP  and not WP  ) then
	MHPOISON = 2823
elseif ( DP  and WP  ) then
	return false
elseif ( not DP  and not WP ) then
	return false
end

OHPOISON = nil
if ( LP  and not CP  and not MNP  and not PARP  ) then
	OHPOISON = 108211
elseif ( not LP  and CP  and not MNP  and not PARP  ) then
	OHPOISON = 3408
elseif ( not LP and not CP  and MNP  and not PARP  ) then
	OHPOISON = 5761
elseif ( not LP  and not CP  and not MNP and PARP  ) then
	OHPOISON = 108215
elseif ( ( LP  and CP  and not MNP  and not PARP  ) or
		 ( LP  and not CP  and MNP  and not PARP  ) or
		 ( LP  and not CP  and not MNP  and PARP ) or
		 ( not LP  and CP  and MNP  and not PARP  ) or
		 ( not LP  and CP  and not MNP  and PARP  ) or
		 ( not LP  and not CP  and MNP  and PARP  ) ) then
	return false
end

if not IsMounted() then
-- Check to Apply Main hand poison
if not UnitBuffID(&amp;quot;player&amp;quot;, MHPOISON) then
	CastSpellByName(GetSpellInfo(MHPOISON), &amp;quot;player&amp;quot;)
end
-- Check to Apply Leeching Poison
if not UnitBuffID(&amp;quot;player&amp;quot;, OHPOISON) then
	CastSpellByName(GetSpellInfo(OHPOISON), &amp;quot;player&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tricks of the Trade</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>TricksTargets  = 	{
					&amp;quot;focus&amp;quot;,
					&amp;quot;party1&amp;quot;,
					&amp;quot;party2&amp;quot;,
					&amp;quot;party3&amp;quot;,
					&amp;quot;party4&amp;quot;,
					&amp;quot;party5&amp;quot;,
					}

if not PQI_CpoworksRogue_TricksTarget_enable then return false end



for i = 1, #TricksTargets do
	if TricksTarget == TricksTargets[i] then
		TricksTarget = UnitName(TricksTargets[i])
	end
end


if PQR_SpellAvailable(57934)
and UnitExists(TricksTarget) 
and PQR_IsOutOfSight(TricksTarget, 0.1) == false then
		_castSpell(57934, TricksTarget) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Redirect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not redirect then
	redirect = CreateFrame(&amp;quot;Frame&amp;quot;)
	cps = 0
end

local frame = redirect
frame:RegisterEvent(&amp;quot;UNIT_COMBO_POINTS&amp;quot;)
frame:SetScript(&amp;quot;OnEvent&amp;quot;, function(self, event, ...)

if event == &amp;quot;UNIT_COMBO_POINTS&amp;quot; then
		cps = GetComboPoints(&amp;quot;player&amp;quot;)
	end
end)


if cps == nil then
	return false --Most stable thing to do so it doesnt try to spam use redirect if cps = nil.
end

local ComboPoints = GetComboPoints(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)

if PQR_SpellAvailable(73981)
and UnitExists(&amp;quot;Target&amp;quot;)
and ComboPoints ~= cps then
	_castSpell(73981,&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></ROGUE>