<?xml version="1.0" encoding="utf-8" ?><MAGE><Ability><Name>&amp;gt; RDY</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  ----------------------------------
  -- Load Data Files
  ----------------------------------

	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_DATA.lua&amp;quot;,true) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Datafile loaded!&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Cokx_PVP_Settings.lua&amp;quot;,true) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Cokx_PVP_DATA.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
		else
		PQR_WriteToChat(&amp;quot;Settings loaded!&amp;quot;)
		
	end
	
	
	PQR_RotationStarted = false
end


	--  Init --
-------------------------------------------------------------------
-- Credit goes to Team Nova for most of the Init and Frame setup --
-------------------------------------------------------------------
local numglobal,numperchar = GetNumMacros()
if numperchar &amp;lt; 18 then
if not GetMacroInfo(&amp;quot;AvailableMacros&amp;quot;) then
CreateMacro(&amp;quot;AvailableMacros&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;/CCFocus\\n/CCHealer\\n/CCSpam\\n/InstantCast\\n/Pause\\n/AoE\\n/BlinkNextStun\\n/IceBlock\\n/DeepFocus\\n/DeepHealer\\n/BurstTarget&amp;quot;, 1)
end
end
	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;CCFocus&amp;quot;,		 		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;CCHealer&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;CCSpam&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;InstantCast&amp;quot;,		Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AoE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;BlinkNextStun&amp;quot;,		Var2 = 1		}, 
		{	Var1 = 0,	Text = &amp;quot;IceBlock&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;DeepFocus&amp;quot;, 			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;DeepHealer&amp;quot;, 				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;DeepDPS&amp;quot;, 				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;, 				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;BurstTarget&amp;quot;,			Var2 = 1		}		
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end

	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_BURST1 = &amp;quot;/bursttarget&amp;quot;
	function SlashCmdList.BURST(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_BurstTarget&amp;quot;) then
		--	xrn:message(&amp;quot;\124cFF0000FFBurst Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFBurst Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	SLASH_CCFocus1 = &amp;quot;/CCFocus&amp;quot;
	function SlashCmdList.CCFocus(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_CCFocus&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFCCFocus Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_CCSpam&amp;quot;, 0)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFCCFocus Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 0)
		end
	end
	
		SLASH_CCHealer1 = &amp;quot;/CCHealer&amp;quot;
	function SlashCmdList.CCHealer(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_CCHealer&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFCCHealer Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 0)
			SetCVar(&amp;quot;Nova_CCSpam&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFCCHealer Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 0)
		end
	end
	
		SLASH_CCSpam1 = &amp;quot;/CCSpam&amp;quot;
	function SlashCmdList.CCSpam(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_CCSpam&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFCCSpam Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCSpam&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 0)
			SetCVar(&amp;quot;Nova_InstantCast&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFCCSpam Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_CCSpam&amp;quot;, 0)
		end
	end
	
		SLASH_InstantCast1 = &amp;quot;/InstantCast&amp;quot;
	function SlashCmdList.InstantCast(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_InstantCast&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFInstantCast Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_InstantCast&amp;quot;, 1)

		else
			xrn:message(&amp;quot;\124cFFCC99FFInstantCast Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_InstantCast&amp;quot;, 0)
		end
	end
		SLASH_Pause1 = &amp;quot;/Pause&amp;quot;
	function SlashCmdList.Pause(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
	
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		end
	end
	
		SLASH_AOE1 = &amp;quot;/AoE&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AoE&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFAoE Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_AoE&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFAoE Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_AoE&amp;quot;, 0)
		end
	end
	
		SLASH_BlinkNextStun1 = &amp;quot;/BlinkNextStun&amp;quot;
	function SlashCmdList.BlinkNextStun(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_BlinkNextStun&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFBlinkNextStun Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_BlinkNextStun&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFBlinkNextStun Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_BlinkNextStun&amp;quot;, 0)
		end
	end
	
			SLASH_IceBlock1 = &amp;quot;/IceBlock&amp;quot;
	function SlashCmdList.IceBlock(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_IceBlock&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFIceBlock activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_IceBlock&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFIceBlock Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_IceBlock&amp;quot;, 0)
		end
	end
	
			SLASH_DeepFocus1 = &amp;quot;/DeepFocus&amp;quot;
	function SlashCmdList.DeepFocus(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_DeepFocus&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFDeepFocus Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_DeepFocus&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_DeepHealer&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFDeepFocus Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_DeepFocus&amp;quot;, 0)
		end
	end
	
		SLASH_DeepHealer1 = &amp;quot;/DeepHealer&amp;quot;
	function SlashCmdList.DeepHealer(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_DeepHealer&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFDeepHealer Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_DeepHealer&amp;quot;, 1)
			SetCVar(&amp;quot;Nova_DeepFocus&amp;quot;, 0)
		else
			xrn:message(&amp;quot;\124cFFCC99FFDeepHealer Activated.&amp;quot;)
			SetCVar(&amp;quot;Nova_DeepHealer&amp;quot;, 0)
		end
	end
	
	
end

if getInfos == nil then
getInfos = 0
end
CastClick()
settings()
checks()
if  GetTime() - getInfos &amp;gt; 1 and (GCDCheck(1459) or GCDCheck(30455)or GCDCheck(2136)) then
getInfos = GetTime()
clearCEH()
if cTtimer == nil then cTtimer = 0
end
if GetTime() - cTtimer &amp;gt; 5 then
cTtimer = GetTime()
clearTables()
end
getcTar()
RangeCheckcTar()
clearcTar()
for i=1,#cTar do
redRing(cTar[i],30449,39,i)
end
getmembers()
RangeCheckMembers()
clearmembers()
RangeCheckPet()
interrupt()
if GetItemCount(GetItemInfo(80618)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(57287))end

if GetItemCount(GetItemInfo(5512)) == 0 then
InteractUnit(&amp;quot;&amp;quot;..GetSpellInfo(58275))end
RunMacroText(&amp;quot;/run UIErrorsFrame:Clear()&amp;quot;)
end
GroupInfo()
cokxMacros()

if rotationPause == nil then rotationPause = 0 end

if Nova_Pause == 1 then
rotationPause = GetTime()
SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
end
if GetTime() - rotationPause &amp;lt; 0.3 then
if MacroSpellNumber ~= 0 and MacroUnitNumber ~= 0 and GCDCheck(MacroSpellNumber) then
CastSpellByName(GetSpellInfo(MacroSpellNumber),MacroCT)
return true
end
return true
end
SetCVar(&amp;quot;MacroSpell&amp;quot;, 0)
SetCVar(&amp;quot;MacroUnit&amp;quot;, 0)
SetCVar(&amp;quot;MacroHP&amp;quot;, 100)
SetCVar(&amp;quot;MacroDR&amp;quot;,nil)
SetCVar(&amp;quot;MacroBuff&amp;quot;,nil)
SetCVar(&amp;quot;MacroDebuff&amp;quot;,nil)

if not playerdpsinc then playerdpsinc = 0 end
if not playerdpssum then playerdpssum = 0 end
if not playerdpscalc then playerdpscalc = 0 end
if not sumDps then sumDps = 0 end
if not lastplayerhp then lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;) end



if modtime == nil then
	modtime = 0
end

if GetTime() - modtime &amp;gt; 1 then
	modtime = GetTime()
	playerdpsinc = lastplayerhp -UnitHealth(&amp;quot;player&amp;quot;)
	playerdpssum = playerdpssum + playerdpsinc
	lastplayerhp = UnitHealth(&amp;quot;player&amp;quot;)
end

if avgmodtime == nil then
	avgmodtime = 0
end

if GetTime() - avgmodtime &amp;gt; 2 then
	avgmodtime = GetTime()
	sumDps = 0
	playerdpscalc = playerdpssum/2
	sumDps = playerdpscalc
	playerdpscalc = 0
	playerdpssum = 0
end




if ROF 
and not GetCurrentKeyBoardFocus()
then
	aerage = 0
else
aerage = 1
end





if numberfriends == 0 or numberfriends &amp;gt; #members then
numberfriends = #members or nil
end


if UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
then
IsFacing = true
else
IsFacing = false
end
if UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;, 130)
then
IsFacingCone = true
else
IsFacingCone = false
end
if UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;, 60)
then
IsFacingOrb = true
else
IsFacingOrb = false
end

local flag = { &amp;quot;&amp;quot;..GetSpellInfo(23335), &amp;quot;&amp;quot;..GetSpellInfo(23333) }

for _,v in ipairs(flag) do 
InteractUnit(v)end

if not PQR_IsMoving(0.01)
or HaveBuff(&amp;quot;player&amp;quot;,12043,0)
or HaveBuff(&amp;quot;player&amp;quot;,108839,0)
then
IsMoving = 1
else
IsMoving = 0
end


if HaveBuff(&amp;quot;player&amp;quot;,44544) then
local _,_,_,ILcount,_,_,ILtimer = UnitBuffID(&amp;quot;player&amp;quot;,44544) 
if ILcount == 2
or not HaveBuff(&amp;quot;player&amp;quot;,44544,4) then
goRage = 1
end
end

if not HaveBuff(&amp;quot;player&amp;quot;,44544) then
goRage = 0
end
if not GCDCheck(108978) then
altertimefrost = 0
altertimefire = 0
end




if nstime == nil then nstime = 0 end
if nextsheep
and GetTime() - nstime &amp;gt; 1 
and
(Nova_CCSpam == 1
or Nova_CCFocus== 1
or Nova_CCHealer== 1
or Nova_DeepFocus== 1
or Nova_DeepHealer== 1
or Nova_BurstTarget== 1
or Nova_InstantCast== 1
or Nova_AoE== 1
or Nova_BlinkNextStun== 1
or Nova_IceBlock == 1)
then
nstime = GetTime()
SetCVar(&amp;quot;Nova_CCSpam&amp;quot;, 0)
SetCVar(&amp;quot;Nova_CCFocus&amp;quot;, 0)
SetCVar(&amp;quot;Nova_CCHealer&amp;quot;, 0)
SetCVar(&amp;quot;Nova_DeepFocus&amp;quot;, 0)
SetCVar(&amp;quot;Nova_DeepHealer&amp;quot;, 0)
SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
SetCVar(&amp;quot;Nova_InstantCast&amp;quot;, 0)
SetCVar(&amp;quot;Nova_AoE&amp;quot;, 0)
SetCVar(&amp;quot;Nova_IceBlock&amp;quot;, 0)
SetCVar(&amp;quot;Nova_BlinkNextStun&amp;quot;, 0)
PQR_WriteToChat(&amp;quot;Queue Cleared!&amp;quot;)
else
if nextsheep
and GetTime() - nstime &amp;gt; 1 
then
nstime = GetTime()
PQR_WriteToChat(&amp;quot;Nothing is Queued&amp;quot;)
end
end
cokx:message(&amp;quot;Poly-S=&amp;quot;..onOff(Nova_CCSpam)..&amp;quot; | Poly-H=&amp;quot;..onOff(Nova_CCHealer)..&amp;quot; | Poly-F=&amp;quot;..onOff(Nova_CCFocus)..&amp;quot; | Deep-F=&amp;quot;..onOff(Nova_DeepFocus)..&amp;quot; |      Deep-H=&amp;quot;..onOff(Nova_DeepHealer)..&amp;quot;| Burst=&amp;quot;..onOff(Nova_BurstTarget)..&amp;quot; | Instant=&amp;quot;..onOff(Nova_InstantCast)..&amp;quot; | Blink=&amp;quot;..onOff(Nova_BlinkNextStun)..&amp;quot; | IB=&amp;quot;..onOff(Nova_IceBlock)..&amp;quot; &amp;quot;)

SpellCancelQueuedSpell()</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Brilliance</Name><Default>false</Default><SpellID>1459</SpellID><Actions></Actions><Lua>-- AB
if not HaveBuff(&amp;quot;player&amp;quot;,1459,1)
then return true end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sheep</Name><Default>false</Default><SpellID>118</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;focus&amp;quot;)
	 and Nova_CCFocus == 1
	 and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;) 
	 and UnitIsPlayer(&amp;quot;focus&amp;quot;)
	 	 and sheepon == 0
	 and GCDCheck(118)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) 
	 	 and not UnitIsUnit(&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;)
	 and LineOfSight(&amp;quot;focus&amp;quot;)
	 and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;poly&amp;quot;) &amp;lt; 3
	 and inRange(&amp;quot;focus&amp;quot;,118)
	 and not HaveBuff(&amp;quot;focus&amp;quot;,{18499,783,768,5487,49039,24858,33891},0)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dPoisonCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dCurseCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dMagicCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dSilence(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dSilenceCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(&amp;quot;focus&amp;quot;,iDMG(),0)
	 and not HaveBuff(&amp;quot;focus&amp;quot;,iSpell(),0)
	then
		if Nova_InstantCast == 1
		and UnitExists(cTar[1])
		and ecTar[1].Range &amp;lt; 40
		and LineOfSight(cTar[1])
		and

	(((IsSpellKnown(12043) and GCDCheck(12043)) or HaveBuff(&amp;quot;player&amp;quot;,12043,0))
	or 
	((IsSpellKnown(108839) and GCDCheck(108839)) or HaveBuff(&amp;quot;player&amp;quot;,108839,0)))
	then
	CastSpellByName(GetSpellInfo(12043))
	CastSpellByName(GetSpellInfo(108839))
	if IsMoving == 1 then
	PQR_CustomTarget = &amp;quot;focus&amp;quot;
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on &amp;quot;..UnitClass(&amp;quot;focus&amp;quot;)..&amp;quot;(&amp;quot;..UnitName(&amp;quot;focus&amp;quot;)..&amp;quot;)&amp;quot;)
	return true
	end
	end
		if IsMoving == 1 then
	PQR_CustomTarget = &amp;quot;focus&amp;quot;
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on &amp;quot;..UnitClass(&amp;quot;focus&amp;quot;)..&amp;quot;(&amp;quot;..UnitName(&amp;quot;focus&amp;quot;)..&amp;quot;)&amp;quot;)
	return true
	end
	end

for i=1,#cTar do
	if UnitExists(cTar[i])
	 and Nova_CCHealer == 1
	 and IsHealer(cTar[i]) 
	 	 and sheepon == 0
	 and UnitIsPlayer(cTar[i])
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and GCDCheck(118)
	 and IsMoving == 1 
	 and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and LineOfSight(cTar[i])
	 and CokxDRInfo(cTar[i],&amp;quot;poly&amp;quot;) &amp;lt; 3 
	 and ecTar[i].Range &amp;lt; 30
	 and not HaveBuff(cTar[i],{18499,783,768,5487,49039,24858,33891},0)
	 and not HaveDebuff(cTar[i],dPoisonCC(),3)
	 and not HaveDebuff(cTar[i],dCurseCC(),3)
	 and not HaveDebuff(cTar[i],dMagicCC(),3)
	 and not HaveDebuff(cTar[i],dSilence(),3)
	 and not HaveDebuff(cTar[i],dSilenceCC(),3)
	 and not HaveDebuff(cTar[i],dCC(),3)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
	 and not HaveBuff(cTar[i],iSpell(),0)
	then
		if Nova_InstantCast == 1
		and UnitExists(cTar[1])
		and ecTar[1].Range &amp;lt; 40
		and LineOfSight(cTar[1])
		and
	(((IsSpellKnown(12043) and GCDCheck(12043)) or HaveBuff(&amp;quot;player&amp;quot;,12043,0))
	or 
	((IsSpellKnown(108839) and GCDCheck(108839)) or HaveBuff(&amp;quot;player&amp;quot;,108839,0)))
	then
	CastSpellByName(GetSpellInfo(12043))
	CastSpellByName(GetSpellInfo(108839))
		if IsMoving == 1 then
	PQR_CustomTarget = cTar[i]
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on &amp;quot;..UnitClass(cTar[i])..&amp;quot;(&amp;quot;..UnitName(cTar[i])..&amp;quot;)&amp;quot;)
	return true
	end
	end
		if IsMoving == 1 then
		PQR_CustomTarget = cTar[i]
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on &amp;quot;..UnitClass(cTar[i])..&amp;quot;(&amp;quot;..UnitName(cTar[i])..&amp;quot;)&amp;quot;)
	return true
	end
	end
end

for i=1,#cTar do
	if UnitExists(cTar[i])
	 and Nova_CCSpam == 1
	 and not IsHealer(cTar[i]) 
	 	 and sheepon == 0
	 and UnitIsPlayer(cTar[i])
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and GCDCheck(118)
	  and IsMoving == 1 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and LineOfSight(cTar[i])
	 and CokxDRInfo(cTar[i],&amp;quot;poly&amp;quot;) &amp;lt; 3  
	 and ecTar[i].Range &amp;lt; 30
	 and not HaveBuff(cTar[i],{18499,783,768,5487,49039,24858,33891},0)
	 and not HaveDebuff(cTar[i],dPoisonCC(),2)
	 and not HaveDebuff(cTar[i],dCurseCC(),2)
	 and not HaveDebuff(cTar[i],dMagicCC(),2)
	 and not HaveDebuff(cTar[i],dSilence(),2)
	 and not HaveDebuff(cTar[i],dSilenceCC(),2)
	 and not HaveDebuff(cTar[i],dCC(),2)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
	 and not HaveBuff(cTar[i],iSpell(),0)
	then
	if IsMoving == 1 then
		PQR_CustomTarget = cTar[i]
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on &amp;quot;..UnitClass(cTar[i])..&amp;quot;(&amp;quot;..UnitName(cTar[i])..&amp;quot;)&amp;quot;)
	return true
end
	end
end</Lua><RecastDelay>200</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Slow Fall DS</Name><Default>false</Default><SpellID>130</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and (HaveDebuff(&amp;quot;player&amp;quot;,77606,0)
)
then
PQR_DelayRotation(.5)
SpellStopCasting()
 return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blanket Heal</Name><Default>false</Default><SpellID>2139</SpellID><Actions></Actions><Lua>-- Blanket Heal
for i=1,#cTar do

if   UnitExists(cTar[i])
and UnitExists(&amp;quot;target&amp;quot;)
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 40
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and GCDCheck(1459)
	 and IsHealer(cTar[i])
	 and ecTar[i].Range &amp;lt; 40
	 and ecTar[1].Range &amp;lt; 40
	 and CokxDRInfo(cTar[i],&amp;quot;silence&amp;quot;) &amp;lt; 1
     and LineOfSight(&amp;quot;target&amp;quot;)
     and LineOfSight(cTar[i])
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
	 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0)
	 and not HaveDebuff(cTar[i],dPoisonCC(),0)
	 and not HaveDebuff(cTar[i],dCurseCC(),0)
	 and not HaveDebuff(cTar[i],dMagicCC(),0)
	 and not HaveDebuff(cTar[i],dSilence(),0)
	 and not HaveDebuff(cTar[i],dSilenceCC(),0)
	 and not HaveDebuff(cTar[i],dCC(),0)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
	 and not HaveBuff(cTar[i],iSpell(),0)
then
PQR_CustomTarget=cTar[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpellSteal</Name><Default>false</Default><SpellID>30449</SpellID><Actions></Actions><Lua>-- Spell Steal
for i=1, #cTar do
	if UnitExists(cTar[i]) then
	if  LineOfSight(cTar[i])
and GCDCheck(30449)
	and ecTar[i].Range &amp;lt; 30
	and ecTar[i].Facing
	and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 10
	and not HaveBuff(cTar[i],iDMG(),1)
	and HaveBuff(cTar[i],{1022,6940,108978},1.5)
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitIsPlayer(cTar[i])
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	 
	return true
	end
	end
	end
for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if  LineOfSight(cTar[i])
	and GCDCheck(30449)
	and ecTar[i].Range &amp;lt; 40
	and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 50
	and CalculateHP(&amp;quot;target&amp;quot;) &amp;gt; 50
	and not HaveBuff(cTar[i],iDMG(),1)
	and HaveBuff(cTar[i],{29166,132158,53271,12472,12043,44549,54428,6940,114163,774,10060,6346,16166,16188,117014,79206,48108,124682,1022,6940,1044,974,108978},1.5)
	and not UnitIsDeadOrGhost(cTar[i])
	and (not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572},0))
	and UnitIsPlayer(cTar[i])
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	return true
	end
	end
end

for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if  LineOfSight(cTar[i])
	and GCDCheck(30449)
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(cTar[i],iDMG(),1)
	and HaveBuff(cTar[i],{12043})
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitIsPlayer(cTar[i])
	and (not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572},0))
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	return true
	end
	end
end</Lua><RecastDelay>1500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>JukeBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
			and not HaveBuff(&amp;quot;player&amp;quot;,104773,0) then
				local spellId = select(12, ...)
				local listId = {
					6552, --Pummel
					1766, --Kick
					47528, --Mind Freeze
					47476, --Strangulate
					96231, --Rebuke
					57994, --Wind Shear
					2139, --Counterspell
					19647, --Spell Lock
					80965 --Skull Bash
				}
				for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						SpellStopCasting()
						SpellStopCasting()
						PQR_DelayRotation(.5)
						return true
					end
				end
			end
		end
	end
end

JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Interrupt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Interrupt
if magepause
or HaveBuff(&amp;quot;player&amp;quot;,{32612,115834,66},0)
then
return true
end
for j=1 , #cTar do
	 if  UnitExists(cTar[j])
     and (100 * UnitHealth(cTar[j]) / UnitHealthMax(cTar[j])) &amp;lt; 80
     then
     ddislow = 1
    
     
     end
  end
  
  for j=1 , #cTar do
	 if  UnitExists(cTar[j])
     and IsHealer(cTar[j])
     then
     interrupthealer = 1
     end
  end
  
    for i=1, numberfriends do
  if UnitExists(members[i])
  and CalculateHP(members[i]) &amp;lt; 60 then
  interrupthealer = 0
  end
  
end


for i=1, #cTar do
	if UnitExists(cTar[i])
	  and IsHealer(cTar[i])
	  and ddislow == 1
	  and interrupthealer == 1
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i])
	 then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(2139)) == 0
							and inRange(cTar[i],2139)
							
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(2139),PQR_CustomTarget)
					--		PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
	
	

---------------------------------------------





	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(2139)) == 0
							and inRange(cTar[i],2139)
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(2139),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
		end
	end






for i=1, #cTar do
	if UnitExists(cTar[i])
	 and (interrupthealer == 0 or (ddislow == 0 and interrupthealer == 1))
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) then
			local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(cTar[i])
			for _, v in ipairs(castInt()) do
				if GetSpellInfo(v) == castName and castInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000 + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
						local castTime = castEndTime - castStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;gt; maxMSinterrupt  
					and currentPercent &amp;lt; minMSinterrupt  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(2139)) == 0
							and inRange(cTar[i],2139)
							
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(2139),PQR_CustomTarget)
					--		PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
	
	

---------------------------------------------




	
			local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(cTar[i])
			for _, v in ipairs(channelInt()) do
				if GetSpellInfo(v) == channelName and channelInterruptable == false then
						local timeSinceStart = (GetTime() * 1000 - channelStartTime) / 1000  + (tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 2000)) 
						local timeLeft = ((GetTime() * 1000 - channelEndTime) * -1) / 1000
						local castTime = channelEndTime - channelStartTime
						local currentPercent = timeSinceStart / castTime * 100000
					if currentPercent &amp;lt; channelInterruptmax  
					and currentPercent &amp;gt; channelInterruptmin  
					then
						PQR_CustomTarget = cTar[i]
						if select(2,GetSpellCooldown(2139)) == 0
							and inRange(cTar[i],2139)
							then
							SpellStopCasting()
							CastSpellByName(GetSpellInfo(2139),PQR_CustomTarget)
						--	PQR_DelayRotation(.5)
							return true
						end
					
					end
				end
			end
		end
	end



ddislow = 0
interrupthealer = 0</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PetControle</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if petctrl == nil then
	petctrl = 0
end

if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and UnitExists(&amp;quot;pettarget&amp;quot;)
and ((100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;lt; 20
or  (ePet[1].PRange ~= nil and ePet[1].PRange &amp;gt; 80))
then
RunMacroText(&amp;quot;/petfollow&amp;quot;)
end

if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitExists(&amp;quot;target&amp;quot;)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
and (100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)) &amp;gt; 95
and ePet[1].PRange &amp;lt; 70
and not UnitExists(&amp;quot;pettarget&amp;quot;)
then
RunMacroText(&amp;quot;/petattack&amp;quot;)
end

if GetTime() - petctrl &amp;gt; 8 then
	petctrl = GetTime()

if UnitExists(&amp;quot;pet&amp;quot;) 
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitIsDead(&amp;quot;pet&amp;quot;) == nil
then
RunMacroText(&amp;quot;/petattack&amp;quot;)
end


end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemKill</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>local typem= UnitCreatureType(&amp;quot;mouseover&amp;quot;)

if UnitExists(&amp;quot;mouseover&amp;quot;)
and GCDCheck(30455)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and typem == &amp;quot;Totem&amp;quot;
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Success</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not mageCast then mageCast={} end
if not icicleCount then icicleCount={} end
if gesheeped == nil then gesheeped = 0 end
if iciclefire == nil then iciclefire = 0 end
if polyTime == nil then polyTime = 0 end

if CombatLog == nil then
    BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCast(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
            if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;)then
                if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
         			if select(12, ...) == 44457 
         			then
					table.insert(mageCast, {unit = sourceGUID, time = GetTime()})
	      			end
  		  
  		  			if select(12, ...) == 74277 
	         		or select(12, ...) == 44614 
		 			or select(12, ...) == 116 then
					table.insert(icicleCount, { time = GetTime()})
	      			end
	       
	       			if select(12, ...) == 30455 then
					icicleCount={}
	      			end
	       
	       			if select(12, ...) == 118
	       			or select(12, ...) == 61305
	       			or select(12, ...) == 28272
	       			or select(12, ...) == 61721 
	       			or select(12, ...) == 61780 
	       			or select(12, ...) == 28271  then
	       			polyTime = GetTime()
	       			end
	       
	       			if select(12, ...) == 44572
	       			then
	       			SetCVar(&amp;quot;Nova_DeepFocus&amp;quot;, 0)
	       			SetCVar(&amp;quot;Nova_DeepHealer&amp;quot;, 0)
	       			end
	       	   	
	       	   		if select(12, ...) == 84714
	       	   		or select(12, ...) == 12472
	       			then	
	       			SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
	       			end
			     end
   			 end
   end
  end

 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end


table.sort(mageCast,function(x,y) return y.time&amp;gt;x.time end)
for i=1,#mageCast do

	local time=mageCast[i].time 
	if GetTime()&amp;gt;time + 10 then
	table.remove(mageCast,i)
	break
	end
end


table.sort(icicleCount,function(x,y) return y.time&amp;gt;x.time end)
for j=1,#icicleCount do
for i=1,#icicleCount do

	local time=icicleCount[i].time 
	if GetTime()&amp;gt;time + 30
	then
	table.remove(icicleCount,i)
	break
	end
		if i&amp;gt;=6 then
	table.remove(icicleCount,1)
	break
	end
end
end
if #icicleCount &amp;gt; 1
then
icicleTime = GetTime()-icicleCount[1].time
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Trinket</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;player&amp;quot;,
{
--115001,		-- Remorseless Winter ( not sure about this, cause it could activate onf 4 or below stacks ....)
110698,		-- Hammer of Justice (Paladin)
117526,		-- Binding Shot
3355,		-- Freezing Trap
118271,		-- Combustion Impact
44572,		-- Deep Freeze
31661,		-- Dragon&amp;apos;s Breath
118,		-- Polymorph
61305,		-- Polymorph: Black Cat
28272,		-- Polymorph: Pig
61721,		-- Polymorph: Rabbit
61780,		-- Polymorph: Turkey
28271,		-- Polymorph: Turtle
82691,		-- Ring of Frost
123393,		-- Breath of Fire (Glyph of Breath of Fire)
115078,		-- Paralysis
105421,		-- Blinding Light
115752,		-- Blinding Light (Glyph of Blinding Light)
105593,		-- Fist of Justice
853,		-- Hammer of Justice
119072,		-- Holy Wrath
20066,		-- Repentance
10326,		-- Turn Evil
64044,		-- Psychic Horror
8122,		-- Psychic Scream
113792,		-- Psychic Terror (Psyfiend)
9484,		-- Shackle Undead
118905,		-- Static Charge (Capacitor Totem)
5782,		-- Fear
118699,		-- Fear
5484,		-- Howl of Terror
6789,		-- Mortal Coil
30283,		-- Shadowfury
104045,		-- Sleep (Metamorphosis)
115268,		-- Mesmerize (Shivarra)
113092,		-- Frost Bomb
6358,		-- Seduction (Succubus)
	108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	102546,		-- Pounce (Incarnation)
	110698,		-- Hammer of Justice (Paladin)
	113004,		-- Intimidating Roar [Fleeing in fear] (Warrior)
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	126451,		-- Clash
	122242,		-- Clash (not sure which one is right)
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	88625,		-- Holy Word: Chastise
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror (Psyfiend)
	1833,		-- Cheap Shot
	408,		-- Kidney Shot
	113953,		-- Paralysis (Paralytic Poison)
	51514,		-- Hex
	118905,		-- Static Charge (Capacitor Totem)
	54786,		-- Demonic Leap (Metamorphosis)
	5782,		-- Fear
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	89766,		-- Axe Toss (Felguard/Wrathguard)
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout (aoe)
	132168,		-- Shockwave
	105771		-- Warbringer
},3)
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 60
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 14) == 0
 then
	
	RunMacroText(&amp;quot;/use 14&amp;quot;)
	return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fire Blast</Name><Default>false</Default><SpellID>2136</SpellID><Actions></Actions><Lua>if UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and GCDCheck(2136)
and IsFacing
and dontcast == 0
and inRange(&amp;quot;target&amp;quot;,2136)
and ( not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572},0))
and (PQR_IsMoving(0.01) or (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt;= 20 )
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frostfire Bolt</Name><Default>false</Default><SpellID>44614</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,57761,0)
and GCDCheck(44614)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,30455)
and (not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572},0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and not HaveDebuff(&amp;quot;target&amp;quot;,ccCanBreak(),0) 
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
 iciclefire = 1
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frostbolt</Name><Default>false</Default><SpellID>116</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(0.01)
and GCDCheck(116)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,116)
and LineOfSight(&amp;quot;target&amp;quot;)
and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1.5)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1.5)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
 iciclefire = 1
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Living Bomb</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
and GetTime() - polyTime &amp;gt; 2
and not PQR_IsCastingSpell(118)
and select(2,GetTalentRowSelectionInfo(5)) == 14
then
for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if PQR_SpellAvailable(44457)
	and GCDCheck(44457)
	and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and not HaveDebuff(cTar[i],44457,0,&amp;quot;player&amp;quot;)
	and LineOfSight(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and #mageCast &amp;lt; 3
	and not HaveBuff(cTar[i],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[i])
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	CastSpellByName(GetSpellInfo(44457),PQR_CustomTarget)
	return true
	end
	end
end
	

end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Lance</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>-- Ice Lance

	
	if UnitExists(cTar[1]) then
	if PQR_SpellAvailable(30455)
	and GCDCheck(30455)
	and LineOfSight(cTar[1])
	and ((goRage == 1 
	and (HaveBuff(&amp;quot;player&amp;quot;,44544,0) or HaveDebuff(cTar[1],{122,33395,44572,113724,102051},0))) 
	or (#icicleCount == 5 and HaveBuff(&amp;quot;player&amp;quot;,44544,0) and PQR_IsMoving(1))
	or  (#icicleCount &amp;gt;= 2 and CalculateHP(cTar[1])&amp;lt; 50 and PQR_IsMoving(1))
 ) 
	and ecTar[1].Range &amp;lt; 40
	and ecTar[1].Facing
	and not HaveBuff(cTar[1],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[1])
	and not HaveDebuff(cTar[1],ccCanBreak(),0) 
	and not HaveBuff(cTar[1],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[1]) 
	then
	PQR_CustomTarget = cTar[1]
	
	if #icicleCount &amp;gt;= 1 then PQR_WriteToChat(&amp;quot;Lost All Icicle&amp;apos;s&amp;quot;)
			icicleCount={} end
	return true
	end
	end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cone Of Cold</Name><Default>false</Default><SpellID>120</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) then
	if  LineOfSight(&amp;quot;target&amp;quot;)
	and GCDCheck(120)
	and IsFacingCone
	and UnitExists(cTar[1])
	and ecTar[1].Range &amp;lt; 12
	and (not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572,31661},0))
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and not HaveDebuff(&amp;quot;target&amp;quot;,ccCanBreak(),0) 
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	then
	PQR_CustomTarget = &amp;quot;target&amp;quot;
	return true
	end
end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Lance Last</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>-- Ice Lance Last

	if UnitExists(&amp;quot;Target&amp;quot;) then
	if PQR_SpellAvailable(30455)
	and GCDCheck(30455)
	and UnitExists(cTar[1])
	and LineOfSight(&amp;quot;Target&amp;quot;)
	and ecTar[1].Range &amp;lt; 40
	and ecTar[1].Facing
	and (#icicleCount &amp;lt; 2 or  icicleTime &amp;gt; 26 or HaveDebuff(&amp;quot;target&amp;quot;,{44572},0))
	and not HaveBuff(&amp;quot;Target&amp;quot;,iDMG(),1)
	and not UnitIsDeadOrGhost(&amp;quot;Target&amp;quot;)
	and not HaveDebuff(&amp;quot;Target&amp;quot;,ccCanBreak(),0) 
--	and not HaveBuff(&amp;quot;Target&amp;quot;,iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;Target&amp;quot;) 
	then
	PQR_CustomTarget = &amp;quot;Target&amp;quot;
		if #icicleCount &amp;gt;= 1  then PQR_WriteToChat(&amp;quot;Lost All Icicle&amp;apos;s&amp;quot;)
			icicleCount={} end
	return true
	end
	end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Nova</Name><Default>false</Default><SpellID>122</SpellID><Actions></Actions><Lua>-- Frost Nova
for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if  LineOfSight(cTar[i])
	and GCDCheck(122)
	and ecTar[i].Range &amp;lt; 10
	and CokxDRInfo(cTar[i],&amp;quot;root&amp;quot;) &amp;lt; 3 
	and not ring
	and not ccUnits(15)
	and not HaveBuff(cTar[i],iDMG(),0)
	and not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572,113724,102051},0)
	and not UnitIsDeadOrGhost(cTar[i])
	and UnitIsPlayer(cTar[i])
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),0)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	return true
	end
	end
end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Barrier</Name><Default>false</Default><SpellID>11426</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,11426)
and GCDCheck(11426)
and not HaveDebuff(&amp;quot;target&amp;quot;,44572,0) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Incanters Ward</Name><Default>false</Default><SpellID>1463</SpellID><Actions></Actions><Lua>if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt; 100
and GCDCheck(1463)
and (sumDps &amp;gt;  1000 or primaryFriendly(&amp;quot;player&amp;quot;))
and not HaveDebuff(&amp;quot;target&amp;quot;,44572,0) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Deep Freeze</Name><Default>false</Default><SpellID>44572</SpellID><Actions></Actions><Lua>local spell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;player&amp;quot;)
local cspell, _, _, _, _, endTime = UnitChannelInfo(&amp;quot;player&amp;quot;)
	if deepfreeze 
	and GCDCheck(44572)
--	and (HaveBuff(&amp;quot;player&amp;quot;,44544,0) or HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572},0))
  	and UnitExists(&amp;quot;target&amp;quot;)
  	and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;stun&amp;quot;) &amp;lt; 2
	 and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	 and not HaveDebuff(&amp;quot;target&amp;quot;,{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
	 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0)
	then
	
--if spell or cspell then 
-- SpellStopCasting()
--end

--CastSpellByName(GetSpellInfo(44572),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Frostbolt Nova</Name><Default>false</Default><SpellID>116</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(0.01)
and GCDCheck(116)
and IsFacing
and (( HaveDebuff(&amp;quot;target&amp;quot;, {122,33395}, 3))
and not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
 	iciclefire = 1
return true
end</Lua><RecastDelay>1600</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Mana Gem</Name><Default>false</Default><SpellID>759</SpellID><Actions></Actions><Lua>if GetItemCount(GetItemInfo(36799)) == 0
and GCDCheck(1459)
and IsMoving == 1 then
--CastSpellByName(GetSpellInfo(), &amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoSheepAttention</Name><Default>false</Default><SpellID>118</SpellID><Actions></Actions><Lua>if sheepon == nil then  sheepon = 0 end
if sheeponhealer == nil then  sheeponhealer = 0 end
if unitsheeped == nil then  unitsheeped = 0 end

for i=1 , #cTar do
	if UnitExists(cTar[i])
	and HaveDebuff(cTar[i],{118},0,&amp;quot;Player&amp;quot;)
	then
	if IsHealer(cTar[i]) 
	then
	sheeponhealer = 1
	end
	 sheepon = 1
	unitsheeped = UnitGUID(cTar[i])
	end
end



for i=1, #cTar do
	if UnitExists(cTar[i])
	and unitsheeped == UnitGUID(cTar[i])
	and not HaveDebuff(cTar[i],{118},2,&amp;quot;Player&amp;quot;)
	then
	sheeponhealer = 0
	sheepon = 0
	end
end





	
	for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and sheepon == 0
	 and not PQR_IsMoving(0.1)
	 and GCDCheck(1459)
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 	 and not primaryTarget(cTar[j])
	 and LineOfSight(cTar[j])
	 	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
   	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and HaveBuff(cTar[j],attentionBuffs(),3)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499,783,768,5487,49039}) -- Cyclone
and not HaveBuff(cTar[j],{18499,783,768,5487,49039,24858,33891},0)
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	PQR_DelayRotation(.7)
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on&amp;quot;..UnitName(cTar[j]))
	return true
	end
	end
	-- Auto Sheep
for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and sheeponhealer == 0
	 and GCDCheck(1459)
	 and not PQR_IsMoving(0.1)
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 3
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and not primaryTarget(cTar[j])
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 and UnitIsPlayer(cTar[j])
	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
     and IsHealer(cTar[j])
     and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 90
     and not UnitCreatureType(cTar[j]) == &amp;quot;Undead&amp;quot;
	 and not HaveDebuff(cTar[j],dCurseCC(),2)
	 and not HaveDebuff(cTar[j],dMagicCC(),2)
	 and not HaveDebuff(cTar[j],dSilence(),2)
	 and not HaveDebuff(cTar[j],dSilenceCC(),2)
	 and not HaveDebuff(cTar[j],dCC(),2)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506}) -- Cyclone
	and not HaveBuff(cTar[j],{18499,783,768,5487,49039,24858,33891},0)
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	PQR_DelayRotation(.7)
		xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on&amp;quot;..UnitName(cTar[j]))
	return true
	end
	end

		
		for j=1 , #cTar do
	 if  UnitExists(cTar[j])
	 and sheepon == 0
	 and not PQR_IsMoving(0.1)
	 and CokxDRInfo(cTar[j],&amp;quot;poly&amp;quot;) &amp;lt; 3
	 and GCDCheck(1459)
	 and not UnitIsDeadOrGhost(cTar[j]) 
	 and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;)
	 and not primaryTarget(cTar[j])
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
	 and UnitIsPlayer(cTar[j])
	 and not HaveDebuff(cTar[j],dPoisonCC(),2)
	 and LineOfSight(cTar[j])
	 and not HaveBuff(&amp;quot;player&amp;quot;,114168,0)
	 and ecTar[j].Range ~= nil
     and ecTar[j].Range &amp;lt; 29
 	 and not HaveDebuff(cTar[j],dPoisonCC(),3)
 	 and not HaveDebuff(cTar[j],dCurseCC(),3)
	 and not HaveDebuff(cTar[j],dMagicCC(),3)
	 and not HaveDebuff(cTar[j],dSilenceCC(),3)
	 and not HaveDebuff(cTar[j],dCC(),3)
	 and ( HaveDebuff(cTar[j],dPoisonCC(),0)
 	 or HaveDebuff(cTar[j],dCurseCC(),0)
	 or HaveDebuff(cTar[j],dMagicCC(),0)
	 or HaveDebuff(cTar[j],dSilenceCC(),0)
	 or HaveDebuff(cTar[j],dCC(),0))
	 and not HaveBuff(cTar[j],{18499,783,768,5487,49039,24858,33891},0)
	 and not HaveDebuff(cTar[j],{33786, -- Cyclone
113506,18499,783,768,5487,49039,24858}) -- Cyclone
	 and not HaveBuff(cTar[j],iDMG(),1)
	 and not HaveBuff(cTar[j],iSpell(),1)
	
	 then
	 PQR_CustomTarget=cTar[j]
	 	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(118)..&amp;quot; on&amp;quot;..UnitName(cTar[j]))
	--CastSpellByName(GetSpellInfo(5782)cTar[j])
	PQR_DelayRotation(.7)
	return true
	end
	end</Lua><RecastDelay>1500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>SpellSteal Survive</Name><Default>false</Default><SpellID>30449</SpellID><Actions></Actions><Lua>-- Spell Steal Survive
if (100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)) &amp;lt; 70
and  (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;gt; 20 then
for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if  LineOfSight(cTar[i])
and GCDCheck(30449)
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(cTar[i],iDMG(),1)
		and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 20
	and HaveBuff(cTar[i],{774,124682,114157,1022,6940,1044,974,17,33076,33763},0)
	and not UnitIsDeadOrGhost(cTar[i])
	and (not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572},0))
	and UnitIsPlayer(cTar[i])
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	return true
	end
	end
end
	
	
	

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nether Tempest</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(2,GetTalentRowSelectionInfo(5)) == 13
and GetTime() - polyTime &amp;gt; 2
and not PQR_IsCastingSpell(118)
and (not UnitExists(&amp;quot;target&amp;quot;) or (not HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
)) then
for i=1 , #cTar do
	
	if UnitExists(cTar[i]) then
	if PQR_SpellAvailable(114923)
	and GCDCheck(114923)
	and not HaveDebuff(cTar[i],114923,0,&amp;quot;player&amp;quot;)
	and UnitCreatureType(cTar[i]) ~= &amp;quot;Totem&amp;quot;
	and LineOfSight(cTar[i])
	and ecTar[i].Range &amp;lt; 40
	and not HaveBuff(cTar[i],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[i])
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	CastSpellByName(GetSpellInfo(114923),PQR_CustomTarget)
	return true
	end
	end
end
	

end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FrostBomb</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(2,GetTalentRowSelectionInfo(5)) == 15 then
if not PQR_IsMoving(0.01)
and GCDCheck(112948)
and IsFacing
and LineOfSight(&amp;quot;target&amp;quot;)
	and (UnitCreatureType(&amp;quot;target&amp;quot;) ~= &amp;quot;Totem&amp;quot; or UnitHealth(&amp;quot;target&amp;quot;) == 1)
and inRange(&amp;quot;target&amp;quot;,30455)
and PQR_SpellAvailable(112948)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
 CastSpellByName(GetSpellInfo(112948), &amp;quot;target&amp;quot;)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FrostBombExplo</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;target&amp;quot;,112948,0,&amp;quot;player&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,112948,6,&amp;quot;player&amp;quot;)
and IsHealer(&amp;quot;target&amp;quot;)
and GCDCheck(44572)
and UnitLevel(&amp;quot;target&amp;quot;) ~= -1 
and not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572,113724,102051},0)
and UnitDebuffID(&amp;quot;target&amp;quot;,112948,&amp;quot;EXACT&amp;quot;)
	and UnitExists(&amp;quot;target&amp;quot;)
	 and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	 and not HaveDebuff(&amp;quot;target&amp;quot;,{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
	 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0) then


if PQR_SpellAvailable(44572)
then
CastSpellByName(GetSpellInfo(44572),&amp;quot;target&amp;quot;)
return true
end
end




if HaveDebuff(&amp;quot;target&amp;quot;,112948,0,&amp;quot;player&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,112948,2,&amp;quot;player&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,{122,33395,44572,113724,102051},0)
and UnitDebuffID(&amp;quot;target&amp;quot;,112948,&amp;quot;EXACT&amp;quot;)
	and UnitExists(&amp;quot;target&amp;quot;)
	and GCDCheck(44572)
	and UnitLevel(&amp;quot;target&amp;quot;) ~= -1 
	 and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
	 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	 and not HaveDebuff(&amp;quot;target&amp;quot;,{33786, -- Cyclone
113506}) -- Cyclone
	 and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
	 and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0) then

if ecTar[1].Range &amp;lt; 11 
and PQR_SpellAvailable(122)
then
-- SpellStopCasting()
CastSpellByName(GetSpellInfo(122),&amp;quot;target&amp;quot;)
return true
end
if PQR_SpellAvailable(44572)
and inRange(&amp;quot;target&amp;quot;,44572)

then
-- SpellStopCasting()
CastSpellByName(GetSpellInfo(44572),&amp;quot;target&amp;quot;)
return true
end

if UnitExists(&amp;quot;Pet&amp;quot;)
and PQR_SpellAvailable(33395) then
	xrn:message(&amp;quot;\124cFFCC99FF NOVA YOUR TARGET NOW.&amp;quot;)
	PQR_WriteToChat(&amp;quot;\124cFFCC99FF NOVA YOUR TARGET NOW.&amp;quot;)
--return true
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Remove Curse</Name><Default>false</Default><SpellID>475</SpellID><Actions></Actions><Lua>for i=1,numberfriends do 
    if UnitInRange(members[i])
    and GCDCheck(475)
    and HaveDebuff(members[i],{51514},0) 
    and LineOfSight(members[i])
    then
      PQR_CustomTarget = members[i]  
       return true
       end
    end
    
    
    for i=1,numberfriends do 
    if UnitInRange(members[i])
    and GCDCheck(475)
    and HaveDebuff(members[i],{80240,980},3) 
    and LineOfSight(members[i])
    then
      PQR_CustomTarget = members[i]  
       return true
       end
    end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Instant Sheep</Name><Default>false</Default><SpellID>118</SpellID><Actions></Actions><Lua>-- Instant Sheep
for i=1,#cTar do

if   UnitExists(cTar[i])
and GCDCheck(118)
and select(2,GetTalentRowSelectionInfo(1)) == 1
and (select(2,GetSpellCooldown(12043)) == 0 or HaveBuff(&amp;quot;player&amp;quot;,12043,0))
and (100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)) &amp;lt; 20
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i])
	 and IsHealer(cTar[i])
	  and ecTar[i].Range ~= nil
     and ecTar[i].Range &amp;lt; 30
      and CokxDRInfo(cTar[i],&amp;quot;poly&amp;quot;) &amp;lt; 1 
       and sheeponhealer == 0
     and LineOfSight(cTar[i])
      and not UnitIsUnit(cTar[i],&amp;quot;target&amp;quot;)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and not HaveDebuff(cTar[i],dPoisonCC(),2)
	 and not HaveDebuff(cTar[i],dCurseCC(),2)
	 and not HaveDebuff(cTar[i],dMagicCC(),2)
	 and not HaveDebuff(cTar[i],dSilence(),2)
	 and not HaveDebuff(cTar[i],dSilenceCC(),2)
	 and not HaveDebuff(cTar[i],dCC(),2)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
113506}) -- Cyclone
and not HaveBuff(cTar[i],{18499,783,768,5487,49039,33891},0)
	 and not HaveBuff(cTar[i],iDMG(),0)
	 and not HaveBuff(cTar[i],iSpell(),0)
then
PQR_CustomTarget=cTar[i]
 CastSpellByName(GetSpellInfo(12043),cTar[i])


return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ring Of Frost</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(113724) 
and IsSpellKnown(113724) 
--and not PQR_IsMoving(0.1)
and ring
and not SpellIsTargeting() 
 and not GetCurrentKeyBoardFocus()
 and not IsMouselooking() then 

	CastSpellByName(GetSpellInfo(113724))
--	return true
--		if SpellIsTargeting() then
--	CameraOrSelectOrMoveStart()
--	CameraOrSelectOrMoveStop() 
	return true
--	 end
	end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pet Nova</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(33395) 
--and GCDCheck(33395)
and nova
 and not GetCurrentKeyBoardFocus()
 and not IsMouselooking() then 

	CastSpellByName(GetSpellInfo(33395))
--	return true
		if SpellIsTargeting() then
	CameraOrSelectOrMoveStart()
	CameraOrSelectOrMoveStop() 
	return true
	 end
	end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inferno Blast</Name><Default>false</Default><SpellID>2136</SpellID><Actions></Actions><Lua>if UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and IsFacing
and GCDCheck(2136)
and inRange(&amp;quot;target&amp;quot;,2136)
and HaveBuff(&amp;quot;player&amp;quot;,48107,0)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),0)
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Firebolt</Name><Default>false</Default><SpellID>133</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(0.01)
and GCDCheck(133)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,133)
and LineOfSight(&amp;quot;target&amp;quot;)
--and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pyrobolt</Name><Default>false</Default><SpellID>11366</SpellID><Actions>/use 13</Actions><Lua>if IsFacing
and GCDCheck(11366)
and HaveBuff(&amp;quot;player&amp;quot;,48108,0)
and inRange(&amp;quot;target&amp;quot;,11366)
--and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Scorch</Name><Default>false</Default><SpellID>2948</SpellID><Actions></Actions><Lua>if  PQR_IsMoving(0.01)
and GCDCheck(133)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,133)
--and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dragons Breath</Name><Default>false</Default><SpellID>31661</SpellID><Actions></Actions><Lua>-- Dragons Breath
for i=1, #cTar do
if UnitExists(&amp;quot;target&amp;quot;) then
	if  LineOfSight(&amp;quot;target&amp;quot;)
	and GCDCheck(31661)
	and ecTar[i].Range &amp;lt; 12
	and ecTar[i].Facing
	and (not HaveDebuff(cTar[i],{44572},0))
	and not HaveBuff(cTar[i],iDMG(),1)
	and not UnitIsDeadOrGhost(cTar[i])
	and not HaveDebuff(cTar[i],ccCanBreak(),0) 
	and not HaveBuff(cTar[i],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	then
	PQR_CustomTarget = cTar[i]
	return true
	end
end
end</Lua><RecastDelay>400</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Combustion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsFacing
and PQR_SpellAvailable(11129)
and GCDCheck(11129)
and HaveDebuff(&amp;quot;target&amp;quot;,{44572},0)
and not HaveBuff(&amp;quot;player&amp;quot;,{48107},0)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
 CastSpellByName(GetSpellInfo(11129), &amp;quot;target&amp;quot;)
return true
end





if IsFacing
and PQR_SpellAvailable(11129)
and GCDCheck(11129)
and HaveDebuff(&amp;quot;target&amp;quot;,{12654},0)
and (HaveDebuff(&amp;quot;target&amp;quot;,{44457,114923},0) or select(2,GetTalentRowSelectionInfo(5)) == 15  )
and HaveDebuff(&amp;quot;target&amp;quot;,{11366},0)
and not HaveBuff(&amp;quot;player&amp;quot;,{48107},0)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
 combdmg = select(15, UnitDebuff(&amp;quot;target&amp;quot;,GetSpellInfo(12654),nil,&amp;quot;PLAYER&amp;quot;)) 
 if combdmg &amp;gt; 17000
 then
CastSpellByName(GetSpellInfo(11129), &amp;quot;target&amp;quot;)
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Immun Spells</Name><Default>false</Default><SpellID>2136</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and GCDCheck(30455)
and IsFacing
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and (HaveBuff(&amp;quot;target&amp;quot;,iSpells(),0)
)
then
SpellStopCasting()
 return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpellSteal Target</Name><Default>false</Default><SpellID>30449</SpellID><Actions></Actions><Lua>-- Spell Steal Target

for i=1 , #cTar do
	
	if UnitExists(cTar[1]) then
	if  LineOfSight(cTar[1])
and GCDCheck(30449)
	and ecTar[1].Range &amp;lt; 40
	and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 50
	and CalculateHP(&amp;quot;target&amp;quot;) &amp;gt; 30
	and not HaveBuff(cTar[1],iDMG(),1)
	and HaveBuff(cTar[1],{29166,132158,53271,118858,12472,12043,11426,44549,54428,1022,6940,1044,6940,114163,774,108978,10060,6346,16166,16188,117014,79206,48108,124682,1022,6940,1044,974,17},0)
	and not UnitIsDeadOrGhost(cTar[1])
	and (not HaveDebuff(cTar[1],{122,33395,44572},0))
	and UnitIsPlayer(cTar[1])
	and not HaveBuff(cTar[1],iSpell(),1)
	and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[1]) 
	then
	PQR_CustomTarget = cTar[1]
	return true
	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mirror Images</Name><Default>false</Default><SpellID>55342</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,12472,4)
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and select(2,GetSpellCooldown(55342)) == 0
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Refreshment Table</Name><Default>false</Default><SpellID>43987</SpellID><Actions></Actions><Lua>if GetItemCount(GetItemInfo(80618)) == 0
and GCDCheck(43987)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and IsMoving == 1  then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PyroDeep</Name><Default>false</Default><SpellID>44572</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and HaveBuff(&amp;quot;player&amp;quot;,48108,1)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;stun&amp;quot;) &amp;lt; 1
and UnitIsPlayer(&amp;quot;target&amp;quot;)
--and HaveDebuff(&amp;quot;target&amp;quot;,{114923,44457,112948,102051},1)
then
xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(44572)..&amp;quot; on&amp;quot;..UnitName(&amp;quot;target&amp;quot;))

return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PyroNova</Name><Default>false</Default><SpellID>122</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and ecTar[1].Range &amp;lt; 10
and GCDCheck(122)
and not ring
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;root&amp;quot;) &amp;lt; 2
and UnitIsPlayer(&amp;quot;target&amp;quot;)
and HaveBuff(&amp;quot;player&amp;quot;,48108,1)
and HaveDebuff(&amp;quot;target&amp;quot;,{114923,44457,112948},1)
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Next Sheep Que</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if sheepunit == nil  then sheepunit = 0 end
if msgsaid == nil  then msgsaid = 0 end
if UnitExists(&amp;quot;mouseover&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
and sheepunit ~= UnitGUID(&amp;quot;mouseover&amp;quot;)
and sheepmod
then
if IsHealer(&amp;quot;mouseover&amp;quot;)and UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: Healer&amp;quot;)
end
if UnitIsPlayer(&amp;quot;mouseover&amp;quot;)and not IsHealer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: DPS&amp;quot;)
end
if not UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep on:&amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; Type: NPC/Pet&amp;quot;)
end
sheepunit = UnitGUID(&amp;quot;mouseover&amp;quot;)
end



if nextsheep
and sheepunit ~= 0
then
sheepunit = 0
msgsaid = 2
PQR_WriteToChat(&amp;quot;Primary sheep target cleared! Everything is automated again.&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep target cleared! Everything is automated again.&amp;quot;)
PQR_WriteToChat(&amp;quot;Primary sheep target cleared! Everything is automated again.&amp;quot;)
end


for i = 1,#cTar do
if UnitExists(cTar[i])
and msgsaid == 0
and sheepunit == UnitGUID(cTar[i])
and CokxDRInfo(cTar[i],&amp;quot;poly&amp;quot;) &amp;lt; 3 then
PQR_WriteToChat(&amp;quot;We give &amp;quot;..UnitName(cTar[i])..&amp;quot; a pause till DR fades.&amp;quot;)
msgsaid = 1
end
end

for i = 1,#cTar do
if UnitExists(cTar[i])
and msgsaid == 1
and sheepunit == UnitGUID(cTar[i])
and CokxDRInfo(cTar[i],&amp;quot;poly&amp;quot;) &amp;lt; 3 then
PQR_WriteToChat(&amp;quot;&amp;quot;..UnitName(cTar[i])..&amp;quot; DR faded.&amp;quot;)
msgsaid = 0
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frostjaw</Name><Default>false</Default><SpellID>102051</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and GCDCheck(102051)
and PQR_SpellAvailable(102051) 
and IsSpellKnown(102051) 
and ring
 then 
return true
end



if UnitExists(&amp;quot;target&amp;quot;)
and IsSpellKnown(102051) 
and ecTar[1].Range &amp;lt; 30
and GCDCheck(102051)
and not PQR_IsMoving(0.1)
and HaveBuff(&amp;quot;player&amp;quot;,48108,1)
and HaveDebuff(&amp;quot;target&amp;quot;,{114923,44457,112948},1)
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Temporal Shield</Name><Default>false</Default><SpellID>115610</SpellID><Actions></Actions><Lua>if sumDps &amp;gt; 30000
and GCDCheck(115610)
and not HaveBuff(&amp;quot;player&amp;quot;,110909)
--and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Altered Time Fire</Name><Default>false</Default><SpellID>108978</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
--and not IsSpellKnown(127140)
and GCDCheck(108978)
and CalculateHP(&amp;quot;player&amp;quot;) &amp;gt; 50
and HaveBuff(&amp;quot;player&amp;quot;,48108,2)
and HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
and not HaveBuff(&amp;quot;player&amp;quot;,110909,0)
then
altertimefire = 1
PQR_DelayRotation(0.5)
return true
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Altered Time Fire Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,110909,0)
and not HaveBuff(&amp;quot;player&amp;quot;,48108,0)

and UnitExists(&amp;quot;target&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
and altertimefire == 1
then 
altertimefire = 0
CastSpellByName(GetSpellInfo(108978))
--MacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(44572))
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Altered Time Frost</Name><Default>false</Default><SpellID>108978</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
--and not IsSpellKnown(127140)
and GCDCheck(108978)
and CalculateHP(&amp;quot;player&amp;quot;) &amp;gt; 50
and #icicleCount &amp;gt; 2 
and HaveBuff(&amp;quot;player&amp;quot;,{57761,12472},2)
and goRage == 1
and HaveBuff(&amp;quot;player&amp;quot;,44544,0)
--and HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
and not HaveBuff(&amp;quot;player&amp;quot;,110909,0)
then
altertimefrost = 1
PQR_DelayRotation(0.5)
return true
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Deep Freeze Frost</Name><Default>false</Default><SpellID>44572</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and GCDCheck(44572)
--and not IsSpellKnown(127140)
and HaveBuff(&amp;quot;player&amp;quot;,57761,2)
and CokxDRInfo(&amp;quot;target&amp;quot;,&amp;quot;stun&amp;quot;) &amp;lt; 1
and #icicleCount == 5 
and goRage == 1
--and HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
--and not HaveBuff(&amp;quot;player&amp;quot;,110909,0)
then
--altertimefrost = 1
--PQR_DelayRotation(0.5)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Altered Time Frost Cancel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HaveBuff(&amp;quot;player&amp;quot;,110909,0)
and not HaveBuff(&amp;quot;player&amp;quot;,{57761,12472,44544},0)
and UnitExists(&amp;quot;target&amp;quot;)
and not HaveDebuff(&amp;quot;target&amp;quot;,44572,0)
and altertimefrost == 1
then 
altertimefrost = 0
CastSpellByName(GetSpellInfo(108978))
--MacroText(&amp;quot;/cancelaura &amp;quot;..GetSpellInfo(44572))
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if wartekurz == nil then wartekurz = 0 end

if SpellIsTargeting()
and wartekurz + 2 &amp;lt; GetTime() then
wartekurz = GetTime()
end


if SpellIsTargeting()
and wartekurz +0.4 &amp;lt; GetTime() then
CameraOrSelectOrMoveStart()
CameraOrSelectOrMoveStop() 
end

if magepause
or IsMounted()
or SpellIsTargeting() 
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitBuffID(&amp;quot;player&amp;quot;,40120)
or UnitBuffID(&amp;quot;player&amp;quot;,32612)
or UnitBuffID(&amp;quot;player&amp;quot;,115834)
then return true end


if  GetTime() - getInfos &amp;lt; 0.2 and  GetTime() - getInfos &amp;gt; 0.1 and (GCDCheck(1459) or GCDCheck(30455)or GCDCheck(2136))then
return true
end
if  GetTime() - getInfos &amp;lt; 0.6 and  GetTime() - getInfos &amp;gt; 0.5 and (GCDCheck(1459) or GCDCheck(30455)or GCDCheck(2136))then
return true
end
if  GetTime() - getInfos &amp;lt; 0.4 and  GetTime() - getInfos &amp;gt; 0.3 and (GCDCheck(1459) or GCDCheck(30455)or GCDCheck(2136))then
return true
end
if  GetTime() - getInfos &amp;lt; 0.8 and  GetTime() - getInfos &amp;gt; 0.7 and (GCDCheck(1459) or GCDCheck(30455)or GCDCheck(2136)) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ((not UnitExists(&amp;quot;target&amp;quot;)) or ( not UnitIsPlayer(&amp;quot;target&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)))  or (UnitExists(cTar[1]) and ecTar[1].Range &amp;gt; 50)
then TargetNearestEnemyPlayer()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 30
   and GetItemCount(GetItemInfo(5512)) ~= 0
  and select(2,GetItemCooldown(5512)) == 0 
  then 
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Ward</Name><Default>false</Default><SpellID>111264</SpellID><Actions></Actions><Lua>for i = 1 , #members do
if UnitExists(members[i])
and primaryFriendly(members[i])
and eMembers[i].Range &amp;lt; 40
and LineOfSight(members[i])
then 
PQR_CustomTarget = members[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FocusBG</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not myFocusID then myFocusID = 0 end
if UnitExists(&amp;quot;focus&amp;quot;) and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) and UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then ClearFocus() end
if not UnitExists(&amp;quot;focus&amp;quot;)
or UnitGUID(&amp;quot;focus&amp;quot;) == myFocusID then
for i = 1, #cTar do
if UnitExists(cTar[i]) and IsHealer(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID = 0
break
end
end

for i = 1, #cTar do
if UnitExists(cTar[i])
and ecTar[i].Range &amp;lt; 60
and not eHealer()
and not UnitIsUnit(&amp;quot;target&amp;quot;,cTar[i]) then
FocusUnit(cTar[i])
myFocusID=UnitGUID(cTar[i])
break
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blink</Name><Default>false</Default><SpellID>1953</SpellID><Actions></Actions><Lua>if Nova_BlinkNextStun == 1
and HaveDebuff(&amp;quot;player&amp;quot;,ccStuns(),0)then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>DeepFreeze</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;focus&amp;quot;)
	 and Nova_DeepFocus == 1
	 and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;) 
	 and UnitIsPlayer(&amp;quot;focus&amp;quot;)
	 and GCDCheck(44572)
	 and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) 
	 and LineOfSight(&amp;quot;focus&amp;quot;)
	 and inRange(&amp;quot;focus&amp;quot;,44572)
	 and CokxDRInfo(&amp;quot;focus&amp;quot;,&amp;quot;stun&amp;quot;) &amp;lt; 2
	 and (HaveDebuff(&amp;quot;focus&amp;quot;,{122,33395,44572,113724,102051},0)
	 or HaveBuff(&amp;quot;player&amp;quot;,44544,0))
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dPoisonCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dCurseCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dMagicCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dSilence(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dSilenceCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,dCC(),2)
	 and not HaveDebuff(&amp;quot;focus&amp;quot;,{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(&amp;quot;focus&amp;quot;,iDMG(),0)
	 and not HaveBuff(&amp;quot;focus&amp;quot;,iSpell(),0)
	then
		PQR_CustomTarget = &amp;quot;focus&amp;quot;
	CastSpellByName(GetSpellInfo(44572),&amp;quot;focus&amp;quot;)
	
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(44572)..&amp;quot; on &amp;quot;..UnitClass(&amp;quot;focus&amp;quot;)..&amp;quot;(&amp;quot;..UnitName(&amp;quot;focus&amp;quot;)..&amp;quot;)&amp;quot;)
	return true
	end


for i=1,#cTar do
	if UnitExists(cTar[i])
	 and Nova_DeepHealer == 1
	 and IsHealer(cTar[i]) 
	 and UnitIsPlayer(cTar[i])
	 and not UnitIsDeadOrGhost(cTar[i]) 
	 and GCDCheck(44572)
	 and CokxDRInfo(cTar[i],&amp;quot;stun&amp;quot;) &amp;lt; 2
	 and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[i]) 
	 and LineOfSight(cTar[i])
	 and inRange(cTar[i],44572)
	and (HaveDebuff(cTar[i],{122,33395,44572,113724,102051},0)
	 or HaveBuff(&amp;quot;player&amp;quot;,44544,0))
	 and not HaveDebuff(cTar[i],dPoisonCC(),2)
	 and not HaveDebuff(cTar[i],dCurseCC(),2)
	 and not HaveDebuff(cTar[i],dMagicCC(),2)
	 and not HaveDebuff(cTar[i],dSilence(),2)
	 and not HaveDebuff(cTar[i],dSilenceCC(),2)
	 and not HaveDebuff(cTar[i],dCC(),2)
	 and not HaveDebuff(cTar[i],{33786, -- Cyclone
	113506}) -- Cyclone
	 and not HaveBuff(cTar[i],iDMG(),0)
	 and not HaveBuff(cTar[i],iSpell(),0)
	then
	PQR_CustomTarget = cTar[i]
	CastSpellByName(GetSpellInfo(44572),PQR_CustomTarget)
	
	xrn:message(&amp;quot;\124cFFCC99FF&amp;quot;..GetSpellInfo(44572)..&amp;quot; on &amp;quot;..UnitClass(PQR_CustomTarget)..&amp;quot;(&amp;quot;..UnitName(PQR_CustomTarget)..&amp;quot;)&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstTarget == nil then burstTarget=0 end
if Nova_BurstTarget == 1
and UnitExists(&amp;quot;target&amp;quot;)
and burstTarget == 0
then
burstTarget = UnitGUID(&amp;quot;target&amp;quot;)
xrn:message(&amp;quot;\124cFFCC99FFBurst on &amp;quot;..UnitName(&amp;quot;target&amp;quot;))
--SetCVar(&amp;quot;Nova_BurstTarget&amp;quot;, 0)
end
if Nova_BurstTarget == 0
then
burstTarget = 0
end


if UnitExists(&amp;quot;target&amp;quot;)
and burstTarget == UnitGUID(&amp;quot;target&amp;quot;)
and GCDCheck(44572)
and ((IsSpellKnown(84714) and GCDCheck(84714)) or (IsSpellKnown(12472) and GCDCheck(12472)))
and IsFacingOrb
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and not (type == &amp;quot;Totem&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),0) 
then
	RunMacroText(&amp;quot;/use 13&amp;quot;)
	CastSpellByName(GetSpellInfo(84714),nil)
	CastSpellByName(GetSpellInfo(12472),nil)
	CastSpellByName(GetSpellInfo(44572),&amp;quot;target&amp;quot;)
	burstTarget = 0
	xrn:message(&amp;quot;\124cFFCC99FFBurst is Running&amp;quot;)
	return true
end

if IsFacingOrb
and GCDCheck(84714)
and HaveBuff(&amp;quot;player&amp;quot;,12472,0)
then
CastSpellByName(GetSpellInfo(84714),&amp;quot;target&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>IceBlock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_IceBlock == 1
and CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 20
and PQR_SpellAvailable(45438)
then
SpellStopCasting()
CastSpellByName(GetSpellInfo(45438),&amp;quot;player&amp;quot;)
return true
end



if Nova_IceBlock == 1
and CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 20
and not PQR_SpellAvailable(45438)
--and not HaveDebuff(&amp;quot;player&amp;quot;,41425,0)
and IsSpellKnown(11958)
and GCDCheck(11958)
then
SpellStopCasting()
CastSpellByName(GetSpellInfo(11958),&amp;quot;player&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Touch</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, numberfriends do
if CalculateHP(members[i]) &amp;lt; 60
and not PQR_IsMoving(0.1)
and HaveBuff(&amp;quot;player&amp;quot;,110482)
and GCDCheck(113074)
and LineOfSight(members[i])
and (UnitInRange(members[i]) or eMembers[i].Range &amp;lt; 40)
then
  PQR_CustomTarget = members[i]
  CastSpellByName(GetSpellInfo(113074),PQR_CustomTarget)
  return true
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SRG</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>local spell, _, _, _, _, endTime = UnitChannelInfo(&amp;quot;player&amp;quot;)
for i = 1 , #cTar do
if UnitExists(cTar[i])
and spell == GetSpellInfo(118) 
and HaveBuff(cTar[i],{114028,23920,8177},0)
then
SpellStopCasting()
PQR_CustomTarget = cTar[i]
return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Slow Fall</Name><Default>false</Default><SpellID>130</SpellID><Actions></Actions><Lua>if faellt == nil then faellt = 0 end
if IsFalling() ~= 1
then
faellt = GetTime()
end

if IsFalling() == 1
and faellt == 0
then
faellt = GetTime()
end

if IsFalling() == 1
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and GetTime() - faellt &amp;gt; 2.3
and not HaveBuff(&amp;quot;player&amp;quot;,130,0)then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>eventRA</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not CokxLog then
    Cokx_CokxLog = CreateFrame(&amp;apos;Frame&amp;apos;)
    Cokx_CokxLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)

 function OnSuccessfulCokxLog(self, event, ...)
  local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
  if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
             if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) then
              	for j=1,#cTar do 
 	     		if sourceGUID == UnitGUID(cTar[j]) then
        			targetSpellRA = EspellRA()
        			for i=1,#targetSpellRA do
        				if select(12, ...) == targetSpellRA[i] then
        					if IsSpellKnown(2139) 
        					and GCDCheck(2139)
        					and PQR_UnitDistance(&amp;quot;player&amp;quot;,sourceGUID) &amp;lt; 40 then
 						CastSpellByName(GetSpellInfo(2139),cTar[j])
 						return true
 						end
        				end
        			end
        			end
 	     		end
	     		


	


 	     		for i = 1, #cTar do
                 if sourceGUID == UnitGUID(cTar[i])
                 and ecTar[i].Range &amp;lt; 40 then
        				if select(12, ...) == 19503	then
        					if IsSpellKnown(44572)
        					and GCDCheck(44572)
        					then
 						CastSpellByName(GetSpellInfo(44572),cTar[i])
 						return true
 						end
						
        				end
 	     		end
 	     		end
	     		     		

                 if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
                 then
        			allSpellRA = {116858,108968,115356,51505,102545,703,86346,109259,53209,51690}
        			for i=1,#allSpellRA do
        				if select(12, ...) == allSpellRA[i] then
        					if IsSpellKnown(115610)
        					and GCDCheck(115610)
        					then
 						CastSpellByName(GetSpellInfo(115610))
 						return true
 						end
        				end
        			end
 	     		end
	     	
	     		
	     	
	     		
	     	   		
		     end
  end
 end

 Cokx_CokxLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCokxLog)

    CokxLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Missiles</Name><Default>false</Default><SpellID>5143</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(5143)
and not PQR_IsMoving(0.01)
and GCDCheck(5143)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,5143)
and LineOfSight(&amp;quot;target&amp;quot;)
--and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Barrage</Name><Default>false</Default><SpellID>44425</SpellID><Actions></Actions><Lua>if GCDCheck(44425)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,44425)
and LineOfSight(&amp;quot;target&amp;quot;)
--and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Blast</Name><Default>false</Default><SpellID>30451</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(0.01)
and GCDCheck(30451)
and IsFacing
and inRange(&amp;quot;target&amp;quot;,30451)
and LineOfSight(&amp;quot;target&amp;quot;)
--and (( HaveDebuff(&amp;quot;target&amp;quot;, 44572, 3)) or not HaveDebuff(&amp;quot;target&amp;quot;, 44572,0))
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
and not HaveBuff(&amp;quot;target&amp;quot;,iSpells(),1)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
 then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Invocation</Name><Default>false</Default><SpellID>12051</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,116257,0)
and not PQR_IsMoving(1)
and select(2,GetTalentRowSelectionInfo(6)) == 16
then
return true
end</Lua><RecastDelay>1000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MAGE>