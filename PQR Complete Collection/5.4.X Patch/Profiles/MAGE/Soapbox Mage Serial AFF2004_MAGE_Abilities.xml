<?xml version="1.0" encoding="utf-8" ?><MAGE><Ability><Name>---Combat Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitExists(&amp;quot;target&amp;quot;) then return true end

if GetSpecialization() == 2 and not PQI_SoapboxFireOffensiveSettings_CombatPause_enable then return false end
if GetSpecialization() == 3 and not PQI_SoapboxFrostOffensiveSettings_CombatPause_enable then return false end



if (not UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;boss1&amp;quot;))
	or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Lifeblood</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit

-- Disable usage when disabled in PQInterface
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_Racials_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_Racials_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_Racials_enable then return false end

-- Let&amp;apos;s only use it in Combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Stop if we&amp;apos;re saving Cooldowns.
if Nova_Cooldowns ~= 1 then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
	if PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
	if PQI_SoapboxFireOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
	if PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end



-- Lifeblood Ranks
Lifeblood = {81708,74497,121279,55428,55480,55500,55501,55502,55503}

for i=1,#Lifeblood do
	if IsPlayerSpell(Lifeblood[i])
	and PQR_SpellAvailable(Lifeblood[i]) then
	CastSpellByName(GetSpellInfo(Lifeblood[i]),&amp;quot;player&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Create Mana Gem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local manaGem = 759
local manaGlyph = 56383
local regularGem = 36799
local glyphedGem = 81901

-- Not yet learned
if not IsPlayerSpell(759) then return false end

-- Glyphing it makes all the difference in the world...
if IsPlayerSpell(manaGlyph) then manaGem = 119316 else manaGem = 759 end

-- Don&amp;apos;t spam the ability
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(manaGem) then return false end

-- Create!
if IsPlayerSpell(manaGlyph) then
	if GetItemCount(glyphedGem,nil,true) &amp;lt; 10
		and not UnitAffectingCombat(&amp;quot;player&amp;quot;)
	then CastSpellByName(GetSpellInfo(manaGem),&amp;quot;player&amp;quot;) return true end
else
	if GetItemCount(regularGem,nil,true) &amp;lt; 3
		and not UnitAffectingCombat(&amp;quot;player&amp;quot;)
	then CastSpellByName(GetSpellInfo(manaGem),&amp;quot;player&amp;quot;) return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Alter Time</Name><Default>false</Default><SpellID>108978</SpellID><Actions></Actions><Lua>if Nova_Cooldowns ~= 1 then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_AlterTime_enable then return false end

if PQR_SpellAvailable(11129) and HeatingUp == true and Pyros == true and ((IsPlayerSpell(12043) and (PQR_SpellAvailable(12043) or UnitBuffID(&amp;quot;player&amp;quot;, 12043))) or not IsPlayerSpell(12043)) then
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
	if PQI_SoapboxFireOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end

if not BuffedBoss() then return false end
if not PQR_SpellAvailable(11129) then return false end
if not PQR_SpellAvailable(108978) then return false end


if TargetValidation(&amp;quot;target&amp;quot;, 11129) then
	if UnitBuffID(&amp;quot;player&amp;quot;,48108) then
  		--if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxFireOffensiveSettings_Racials_enable then
	--	SpellStopCasting()
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	 	--elseif IsPlayerSpell(12043) and PQR_SpellAvailable(12043) and not UnitBuffID(&amp;quot;player&amp;quot;,12043) and PQI_SoapboxFireOffensiveSettings_PresenceOfMind_enable then
		--SpellStopCasting()
		--Presence = true
		CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;)
		--else
		return true
		--end
	end
end
end</Lua><RecastDelay>180000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Initialize---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Initialize Load-Once Settings

if PQR_RotationStarted then
	PQR_RotationStarted = false
	Fireball = nil
	Pyroblast = nil
	  ----------------
  --Nova  Checks--
  ----------------
  if Nova_Cooldowns == 1 then
  PQR_WriteToChat(&amp;quot;Cooldowns: \124cFF15E615Active&amp;quot;) end
  if (Nova_AOE == nil or Nova_AOE == 0) then
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end
  if Nova_AOE == 1 and GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then			
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) end
  if Nova_AOE == 1 and GetSpecialization(&amp;quot;player&amp;quot;) == 2 then	
  SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)		
  PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;) end

  
  
	---Chat Overlay---
	local function onUpdate(self,elapsed) 
	  if self.time &amp;lt; GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame(&amp;quot;Frame&amp;quot;,nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript(&amp;quot;OnUpdate&amp;quot;,onUpdate)
	xrn:SetPoint(&amp;quot;TOP&amp;quot;,0,0)
	xrn.text = xrn:CreateFontString(nil,&amp;quot;OVERLAY&amp;quot;,&amp;quot;MovieSubtitleFont&amp;quot;)
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	
	
	
		-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime &amp;lt; GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint(&amp;apos;LEFT&amp;apos;, 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
end


	-- Icy Veins can be glyphed!
if IsPlayerSpell(56364) then IV = 131078
	else IV = 12472 end

	if MageEvents == nil then
	MageEvents = true
	print(&amp;quot;Mage Events Loaded.&amp;quot;)

	local xelperFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
	xelperFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	xelperFrame:SetScript(&amp;quot;OnEvent&amp;quot;, xelperFrame_OnEvent)
	xelperFrame:Show()

end


	-- At this point, everything should have loaded perfectly!
if not SoapboxFire then
	local Pyrotec = CreateFrame(&amp;quot;Frame&amp;quot;)
	Pyrotec:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	Pyrotec:SetScript(&amp;quot;OnEvent&amp;quot;, PyrotecFrame_OnEvent)
	Pyrotec:Show()
	
	-- Trinket Procs Tracker
	Trinket = 0
	
	-- Living Bomb Tracker
	LivingBomb = 0
	
	-- Combustion Initialization
	PyroDamage = 0
	IgniteDamage = 0
	InfernoDamage = 0
	FireballDamage = 0
	
	pyroCrit = 0
	infernoCrit = 0
	fireballCrit = 0
	icicle = 0
  	-- Initialize  Tracker
  	if not DoTs then DoTs = {} end
	
	SoapboxFire = true
	Inferno = false
end


-- Variables
PQR_ResetMovementTime = 0.3

-- Don&amp;apos;t automatically start if we&amp;apos;re mounted.
if IsMounted() then return true end

-- Don&amp;apos;t automatically start if we&amp;apos;re dead or a ghost.
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then return true end



------------------------------------------------------------
-- Misc. Checks
------------------------
-- Reset DoT Tracker if we&amp;apos;re not in combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and #DoTs &amp;gt; 0 then
	DoTs = {}
end

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and Nova_Fireball == 1 then
SetCVar(&amp;quot;Nova_Fireball&amp;quot;, 0)
end

if UnitBuffID(&amp;quot;player&amp;quot;,48108) and UnitBuffID(&amp;quot;player&amp;quot;,48107) then 
	Pyroblast = true
else
Pyroblast = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Potions</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_Potions_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_Potions_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_Potions_enable then return false end
-- Disable if we have no potions left
if GetItemCount(76093) &amp;lt; 1 then return false end

-- Disable if Potion is on cooldown
if GetItemCooldown(76093) ~= 0 then return false end

-- Disable if we&amp;apos;re not targeting a boss
if not SpecialUnit() then return false end


if Bloodlust or (Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 21) or (GetSpecialization(&amp;quot;player&amp;quot;) == 3 and Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 60 and UnitBuffID(&amp;quot;player&amp;quot;, 12472))
then -- At this point, we should just use the potion if all of the above is true
UseItemByName(76093)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Tier 3 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_TierThree ~= 1 then return false end

if IsPlayerSpell(102051) then
	if PQR_IsMoving(0.1) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

	if PQR_SpellAvailable(102051) then
			CastSpellByName(GetSpellInfo(102051),&amp;quot;target&amp;quot;)
			return true
	end
end

if IsPlayerSpell(111264) then
	if PQR_IsMoving(0.1) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

	if PQR_SpellAvailable(111264) then
			CastSpellByName(GetSpellInfo(111264),&amp;quot;target&amp;quot;)
			return true
	end
end

if IsPlayerSpell(113724) then
	if PQR_IsMoving(0.1) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

	if PQR_SpellAvailable(113724) then
			CastSpellByName(GetSpellInfo(113724),nil)
			if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Tier 6 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(114003) then
	if PQR_IsMoving(0.1) then return false end

	if PQR_SpellAvailable(12051) and Playermana &amp;lt; 20 then
			CastSpellByName(GetSpellInfo(12051),&amp;quot;player&amp;quot;)
			return true
	end
end

if Nova_TierSix ~= 1 then return false end

if IsPlayerSpell(114003) then
	if PQR_IsMoving(0.1) then return false end

	if PQR_SpellAvailable(12051) then
			CastSpellByName(GetSpellInfo(12051),&amp;quot;player&amp;quot;)
			return true
	end
end

if IsPlayerSpell(116011) then
	if PQR_IsMoving(0.1) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

	if PQR_SpellAvailable(116011) then
			CastSpellByName(GetSpellInfo(116011),nil)
			if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
			return true
	end
end

if IsPlayerSpell(1463) then
	if PQR_SpellAvailable(1463) then
			CastSpellByName(GetSpellInfo(1463),&amp;quot;player&amp;quot;)
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Mana Gem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostDefensiveSettings_ManaGem_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireDefensiveSettings_ManaGem_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneDefensiveSettings_ManaGem_enable then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then v2=PQI_SoapboxFrostDefensiveSettings_ManaGem_value
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 2 then v2=PQI_SoapboxFireDefensiveSettings_ManaGem_value 
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then v2=PQI_SoapboxArcaneDefensiveSettings_ManaGem_value end

if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

-- Conjure Mana Gem Level Check
if not IsPlayerSpell(759) then return false end

local glyphedGem = false
if IsPlayerSpell(56383) then glyphedGem = true end

if not glyphedGem then
	if GetItemCount(36799,false,true) &amp;gt; 0
		and Playermana &amp;lt;= v2
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and GetItemCooldown(36799) == 0
	then UseItemByName(36799) end
else
	if GetItemCount(81901,false,true) &amp;gt; 0
		and Playermana &amp;lt;= v2
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and GetItemCooldown(81901) == 0
	then UseItemByName(81901) end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Tier 2 Talent</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_TierTwo ~= 1 then return false end

if IsPlayerSpell(11426) then
	if PQR_SpellAvailable(11426) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(11426),&amp;quot;player&amp;quot;)
			return true
	end
end

if IsPlayerSpell(115610) then
	if PQR_SpellAvailable(115610) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(115610),&amp;quot;player&amp;quot;)
			return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_FragBelt_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_FragBelt_enable then return false end

-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

local TargetValidation = TargetValidation
local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)

if not hasEngi then return false end

-- Don&amp;apos;t use outside of combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Belt) &amp;gt; 0 then return false end

-- Cast Frag Belt on target during Metamorphosis
if TargetValidation(133) then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Mage Bomb (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;mouseover&amp;quot;) then return false end

if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

local TargetValidation = TargetValidation
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_MouseoverDotting_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_MouseoverDotting_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_MouseoverDotting_enable then return false end

if IsPlayerSpell(44457) then
	local LB,_,_,_,_,_,LBtimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,44457,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(44457) then	
		if TargetValidation(&amp;quot;mouseover&amp;quot;, 44457) then
			if LB then
				if LBtimer - GetTime() &amp;lt; 1.2 then
					CastSpellByName(GetSpellInfo(44457),&amp;quot;mouseover&amp;quot;) return true
				end
			else
			CastSpellByName(GetSpellInfo(44457),&amp;quot;mouseover&amp;quot;) return true
			end
		end
	end

elseif IsPlayerSpell(114923) then
	local NT,_,_,_,_,_,NTtimer = UnitDebuffID(&amp;quot;mouseover&amp;quot;,114923,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(114923) then	
		if TargetValidation(&amp;quot;mouseover&amp;quot;, 114923) then
			if NT then
				if NTtimer - GetTime() &amp;lt;= 2 then
					CastSpellByName(GetSpellInfo(114923),&amp;quot;mouseover&amp;quot;) return true
				end
			else
				CastSpellByName(GetSpellInfo(114923),&amp;quot;mouseover&amp;quot;) return true
			end
		end
	end

elseif IsPlayerSpell(112948) then
	if PQR_IsMoving(0.3) then return false end

	if PQR_SpellAvailable(112948) then	
		if TargetValidation(&amp;quot;mouseover&amp;quot;, 112948) then
		CastSpellByName(GetSpellInfo(112948),&amp;quot;mouseover&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Pyroblast</Name><Default>false</Default><SpellID>11366</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
local ATCD = GetSpellCooldown(108978) + select(2,GetSpellCooldown(108978)) - GetTime()
-- Pyroblast Level Check
if not IsPlayerSpell(11366) then return false end
if PQI_SoapboxFireOffensiveSettings_AlterTime_enable and Nova_Cooldowns == 1 and (SpecialUnit() or not PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable) and PQR_SpellAvailable(108978) then
return false end
-- With Presence of Mind active, cast regardless.
if IsPlayerSpell(12043) then
	if UnitBuffID(&amp;quot;player&amp;quot;,12043) then
	return true 
	end
end
if not PQR_SpellAvailable(108978) and PQR_SpellAvailable(11129) then
if UnitBuffID(&amp;quot;player&amp;quot;,48108) and not UnitBuffID(&amp;quot;player&amp;quot;,108978) and (not IsPlayerSpell(12043) or (IsPlayerSpell(12043) and not PQR_SpellAvailable(12043)))
then

	return true

end
end

local Pyro,_,_,_,_,_,Pyrotimer = UnitBuffID(&amp;quot;player&amp;quot;,48108)

if Pyro and Pyrotimer - GetTime() &amp;lt; 3 then 
return true
end

if UnitBuffID(&amp;quot;player&amp;quot;,108978) then
	if UnitBuffID(&amp;quot;player&amp;quot;,48108) then
	return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Scorch</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

-- Scorch Level Check
if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(2948) then return false end

if PQR_IsMoving(0.3) or QuickKill() then 

if TargetValidation(&amp;quot;target&amp;quot;,2948) then
	CastSpellByName(GetSpellInfo(2948),&amp;quot;target&amp;quot;) return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostDefensiveSettings_Healthstone_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireDefensiveSettings_Healthstone_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneDefensiveSettings_Healthstone_enable then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then v=PQI_SoapboxFrostDefensiveSettings_Healthstone_value
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 2 then v=PQI_SoapboxFireDefensiveSettings_Healthstone_value 
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then v=PQI_SoapboxArcaneDefensiveSettings_Healthstone_value end



if GetItemCount(5512,false,true) &amp;gt; 0
	and Playerhealth &amp;lt;= v
	and PQR_SpellAvailable(5512)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and GetItemCooldown(5512) == 0
then
	UseItemByName(5512)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Inferno Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(133) and UnitBuffID(&amp;quot;player&amp;quot;,48108) then return false end
if PQR_SpellAvailable(108853) then
	if PQR_SpellAvailable(11129) and PQI_SoapboxFireOffensiveSettings_AlterTime_enable and Nova_Cooldowns == 1 and (SpecialUnit() or not PQI_SoapboxFireOffensiveSettings_BossCooldown_enable) and PQR_SpellAvailable(108978) then
		if UnitBuffID(&amp;quot;player&amp;quot;,48107) or Nova_Inferno == 1 then
		--Fireballs = false
		CastSpellByName(GetSpellInfo(108853),&amp;quot;target&amp;quot;)
		return true
		end
	elseif UnitBuffID(&amp;quot;player&amp;quot;,48107) then
	CastSpellByName(GetSpellInfo(108853),&amp;quot;target&amp;quot;)
	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpecialUnit = SpecialUnit

-- Don&amp;apos;t use Racials if user tagged off automatic use
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_Racials_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_Racials_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_Racials_enable then return false end

-- Don&amp;apos;t use outside of Combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Draenei: Gift of the Naaru
if IsPlayerSpell(59544) and PQR_SpellAvailable(59544) and Playerhealth &amp;lt; 60 then
	CastSpellByName(GetSpellInfo(59544),&amp;quot;player&amp;quot;)
	return true
end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
	if PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
	if PQI_SoapboxFireOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
	if PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end


-- Blood Elf: Arcane Torrent
if IsPlayerSpell(28730) and Nova_Cooldowns == 1 then
	if PQR_SpellAvailable(28730) and Playermana &amp;lt; 92
		and UnitExists(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(28730),&amp;quot;player&amp;quot;)
			return true
	end
end

-- Orc: Blood Fury
if IsPlayerSpell(33702) and Nova_Cooldowns == 1 then
	if PQR_SpellAvailable(33702) and PQR_SpellAvailable(108978) then
		if UnitExists(&amp;quot;target&amp;quot;) then
			SpellCancelQueuedSpell()
			CastSpellByName(GetSpellInfo(33702),&amp;quot;player&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Combustion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;target&amp;quot;) then return false end
local TargetValidation = TargetValidation
local v4=PQI_SoapboxFireOffensiveSettings_CombustionThreshold_value

-- Combustion Level Check
if not IsPlayerSpell(11129) then return false end
if not BuffedBoss() then return false end
-- Are we saving Cooldowns?
if Nova_Cooldowns ~= 1 then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_Combustion_enable then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
	if PQI_SoapboxFireOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end

if ATCD &amp;lt; 80 then return false end
if not PQR_SpellAvailable(11129) then return false end
if PQR_SpellAvailable(108978) and UnitBuffID(&amp;quot;player&amp;quot;,48108) then return false end

--if TargetValidation(&amp;quot;target&amp;quot;,11129) then
--	if pyroCrit == true then
--		if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and PQI_SoapboxFireOffensiveSettings_CombustionThreshold_enable then
--			if IgniteDamage &amp;gt;= 5000 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 22 and Targethealth &amp;lt; 10 and not NOTEB() == false then
--			SpellStopCasting()
--			CastSpellByName(GetSpellInfo(11129),&amp;quot;target&amp;quot;) return true
--			end	
--		elseif IgniteDamage &amp;gt;= 5000 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 22 and Targethealth &amp;lt; 10 and not NOTEB() == false then
--		SpellStopCasting()
--		CastSpellByName(GetSpellInfo(11129),&amp;quot;target&amp;quot;) return true
--		end
--	end
--end		
if TargetValidation(&amp;quot;target&amp;quot;,11129) then
	if pyroCrit == true then
		if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and PQI_SoapboxFireOffensiveSettings_CombustionThreshold_enable then
			if IgniteDamage &amp;gt;= v4 then
			SpellStopCasting()
			CastSpellByName(GetSpellInfo(11129),&amp;quot;target&amp;quot;) return true
			end	
		elseif IgniteDamage &amp;gt;= ((3*PyroDamage)*(Round(GetMasteryEffect(),2)/100)*0.5) then
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(11129),&amp;quot;target&amp;quot;) return true
		end
	end
	if UnitDebuffID(&amp;quot;target&amp;quot;,11366,&amp;quot;PLAYER&amp;quot;)
	and not UnitBuffID(&amp;quot;player&amp;quot;,48108)
	and not UnitBuffID(&amp;quot;player&amp;quot;,12043)
	and not UnitBuffID(&amp;quot;player&amp;quot;,110909) then
		if fireballCrit == 1 then
			if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and PQI_SoapboxFireOffensiveSettings_CombustionThreshold_enable then
				if IgniteDamage &amp;gt;= v4 then
				SpellStopCasting()
				CastSpellByName(GetSpellInfo(11129),&amp;quot;target&amp;quot;) return true
				end
			elseif IgniteDamage &amp;gt;= ((FireballDamage+InfernoDamage+PyroDamage)*(Round(GetMasteryEffect(),2)/100)*0.5) then
			SpellStopCasting()
			CastSpellByName(GetSpellInfo(11129),&amp;quot;target&amp;quot;) return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Fireball</Name><Default>false</Default><SpellID>133</SpellID><Actions></Actions><Lua>if QuickKill() then return false end

if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
--if Altered == true or PostAlterPyro == true then return false end
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 12043) then return false end
if Fireballs == false then return false end
if Presence == true then return false end
local ATCD = GetSpellCooldown(108978) + select(2,GetSpellCooldown(108978)) - GetTime()
--if HeatingUp == true and Pyro! == true then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and PQI_SoapboxFireOffensiveSettings_PresenceOfMind_enable then 
	if Nova_Cooldowns == 1 then 
		if BuffedBoss() then 
			if PQR_SpellAvailable(11129) then 
				if IsPlayerSpell(12043) then
					if PQR_SpellAvailable(12043) then
						if (PQR_SpellAvailable(108978) and UnitBuffID(&amp;quot;player&amp;quot;, 48108) and UnitBuffID(&amp;quot;player&amp;quot;, 48107))
						or ((ATCD &amp;gt; 60 or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 5 and not NOTEB() == false)) and UnitBuffID(&amp;quot;player&amp;quot;, 48108) and UnitBuffID(&amp;quot;player&amp;quot;, 48107)) then
						return false
						end
					end
				end
			end
		end
	end
end
	
--if PQR_SpellAvailable(11129) and PQI_SoapboxFireOffensiveSettings_AlterTime_enable and Nova_Cooldowns == 1 and (SpecialUnit() or not PQI_SoapboxFireOffensiveSettings_BossCooldown_enable) and PQR_SpellAvailable(108978) and UnitBuffID(&amp;quot;player&amp;quot;, 48108) and (not IsPlayerSpell(12043) or (IsPlayerSpell(12043) and PQR_SpellAvailable(12043)))then
--SpellStopCasting()
--return false end


return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Mage Bomb</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if QuickKill() then return false end
if MindControlled(&amp;quot;target&amp;quot;) then return false end

if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

local TargetValidation = TargetValidation

if IsPlayerSpell(44457) then
	local LB,_,_,_,_,_,LBtimer = UnitDebuffID(&amp;quot;target&amp;quot;,44457,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(44457) then	
		if TargetValidation(&amp;quot;target&amp;quot;, 44457) then
			if LB then
				if LBtimer - GetTime() &amp;lt; 1.2 then
					CastSpellByName(GetSpellInfo(44457),&amp;quot;target&amp;quot;) return true
				end
			else
			CastSpellByName(GetSpellInfo(44457),&amp;quot;target&amp;quot;) return true
			end
		end
	end

elseif IsPlayerSpell(114923) then
	local NT,_,_,_,_,_,NTtimer = UnitDebuffID(&amp;quot;target&amp;quot;,114923,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(114923) then	
		if TargetValidation(&amp;quot;target&amp;quot;, 114923) then
			if NT then
				if NTtimer - GetTime() &amp;lt;= 2 then
					CastSpellByName(GetSpellInfo(114923),&amp;quot;target&amp;quot;) return true
				end
			else
				CastSpellByName(GetSpellInfo(114923),&amp;quot;target&amp;quot;) return true
			end
		end
	end

elseif IsPlayerSpell(112948) then
	if PQR_IsMoving(0.3) then return false end

	if PQR_SpellAvailable(112948) then	
		if TargetValidation(&amp;quot;target&amp;quot;, 112948) then
		CastSpellByName(GetSpellInfo(112948),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Mage Bomb (Focus)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if MindControlled(&amp;quot;focus&amp;quot;) then return false end

if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
local TargetValidation = TargetValidation

if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_FocusDotting_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_FocusDotting_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_FocusDotting_enable then return false end


				

if IsPlayerSpell(44457) then
	local LB,_,_,_,_,_,LBtimer = UnitDebuffID(&amp;quot;focus&amp;quot;,44457,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(44457) then
		if TargetValidation(&amp;quot;focus&amp;quot;, 44457) then
			if LB then
				if LBtimer - GetTime() &amp;lt; 1.2 then
					CastSpellByName(GetSpellInfo(44457),&amp;quot;focus&amp;quot;) return true
				end
			else
			CastSpellByName(GetSpellInfo(44457),&amp;quot;focus&amp;quot;) return true
			end
		end
	end

elseif IsPlayerSpell(114923) then
	local NT,_,_,_,_,_,NTtimer = UnitDebuffID(&amp;quot;focus&amp;quot;,114923,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(114923) then	
	if TargetValidation(&amp;quot;focus&amp;quot;, 114923) then
			if NT then
				if NTtimer - GetTime() &amp;lt;= 2 then
					CastSpellByName(GetSpellInfo(114923),&amp;quot;focus&amp;quot;) return true
				end
			else
				CastSpellByName(GetSpellInfo(114923),&amp;quot;focus&amp;quot;) return true
			end
		end
	end

elseif IsPlayerSpell(112948) then
	if PQR_IsMoving(0.3) then return false end
	if TargetValidation(&amp;quot;focus&amp;quot;, 112948) then
	if PQR_SpellAvailable(112948) then	
		CastSpellByName(GetSpellInfo(112948),&amp;quot;focus&amp;quot;) return true
		end
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Mage Bomb (Boss)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

local TargetValidation = TargetValidation
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_BossDotting_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_BossDotting_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_BossDotting_enable then return false end



for i=1,5 do
	local bossUnit = &amp;quot;boss&amp;quot;..i
	
	-- Let&amp;apos;s try and detect immunities
	if UnitBuffID(bossUnit,116994) or UnitBuffID(bossUnit,122540) or UnitBuffID(bossUnit,123250) or UnitBuffID(bossUnit,106062) or UnitBuffID(bossUnit,110945)
		then return false end
		
if IsPlayerSpell(44457) then
	local LB,_,_,_,_,_,LBtimer = UnitDebuffID(bossUnit,44457,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(44457) then	
		if TargetValidation(bossUnit, 44457) then
			if LB then
				if LBtimer - GetTime() &amp;lt; 1.2 then
					CastSpellByName(GetSpellInfo(44457),bossUnit) return true
				end
			else
			CastSpellByName(GetSpellInfo(44457),bossUnit) return true
			end
		end
	end

elseif IsPlayerSpell(114923) then
	local NT,_,_,_,_,_,NTtimer = UnitDebuffID(bossUnit,114923,&amp;quot;PLAYER&amp;quot;)

	if PQR_SpellAvailable(114923) then	
		if TargetValidation(bossUnit, 114923) then
			if NT then
				if NTtimer - GetTime() &amp;lt;= 2 then
					CastSpellByName(GetSpellInfo(114923),bossUnit) return true
				end
			else
				CastSpellByName(GetSpellInfo(114923),bossUnit) return true
			end
		end
	end

elseif IsPlayerSpell(112948) then
	if PQR_IsMoving(0.3) then return false end

	if PQR_SpellAvailable(112948) then	
		if TargetValidation(bossUnit, 112948) then
		CastSpellByName(GetSpellInfo(112948),bossUnit) return true
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---1. Functions---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsInRaid() then group = &amp;quot;raid&amp;quot;
elseif IsInGroup() then group = &amp;quot;party&amp;quot;
else group = nil
end

QuickKill = nil
function QuickKill()
	local Quickness = Quickness
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		-- Dungeons &amp; Raids
		for i=1,#Quickness do
			if Quickness[i] == npcID then 
			return true
			end
		end
		return false
	else return false end
end




Quickness = {
---71606, --Deactivated Missile Turrets
---71751, --Deactivated Laser Turrets - 
---71694, --Deactivated Electromagnets - 
74009, --Crawler Mines
---71790, --Disassembled Crawler Mines - 
72172, --Reflections - 
71946, --Manifestation of Pride - 
71603, --Sha Puddles - 
71642, --Congealed Sha - 
71977, --Manifestation of Corruption - 
71976, --Essences of Corruption - 
72263, --Unleashed Essences of Corruption - 
72353, --Dragonmaw Flameslingers - 
72352, --Dragonmaw Ebon Stalkers - 
71825, --Foul Slimes - 
71519, --Kor&amp;apos;kron Warshamans - 
71517, --Kor&amp;apos;kron Arcweavers - 
71518, --Kor&amp;apos;kron Assassins - 
71433, --Sparks of Life - 
71378, --Quilen Guardians - 
71383, --Kor&amp;apos;thik Warcallers - 
71385, --Sri&amp;apos;thik Bombardiers - 
71397, --Zar&amp;apos;thik Amber Priests - 
71405, --Set&amp;apos;thik Wind Wielders - 
71427, --Ancient Brewmaster Spirits - 
71428, --Wise Mistweaver Spirits - 
71430, --Nameless Windwalker Spirits - 
71658, --Kor&amp;apos;kron Jailer - 
71425, --Mature Kunchongs - 
71420, --Hungry Kunchongs - 
71407, --Amber - 
71979, --Kor&amp;apos;kron Warbringer - 
71984, --Siege Engineers - 
72237, --Embodied Fears - 
72238, --Embodied Doubts - 
72236, --Embodied Despairs - 
72272  --Minions of Y&amp;apos;Shaarj - 
}

---Procs---
AlterTimeQueue = 0
IcyVeins1,_,_,_,_,_,IcyVeins1timer = UnitBuffID(&amp;quot;player&amp;quot;, 12472)
IcyVeins2,_,_,_,_,_,IcyVeins2timer = UnitBuffID(&amp;quot;player&amp;quot;, 131078)
Bloodlust1,_,_,_,_,_,Bloodlust1timer = UnitBuffID(&amp;quot;player&amp;quot;, 2825)
Bloodlust2,_,_,_,_,_,Bloodlust2timer = UnitBuffID(&amp;quot;player&amp;quot;, 32182)
Bloodlust3,_,_,_,_,_,Bloodlust3timer = UnitBuffID(&amp;quot;player&amp;quot;, 80353)
Bloodlust4,_,_,_,_,_,Bloodlust4timer = UnitBuffID(&amp;quot;player&amp;quot;, 90355)



if UnitBuffID(&amp;quot;player&amp;quot;, 12472) and IcyVeins1timer - GetTime() &amp;lt; 8 then
	AlterTimeQueue = AlterTimeQueue + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;, 131078) and IcyVeins2timer - GetTime() &amp;lt; 8 then
	AlterTimeQueue = AlterTimeQueue + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;, 2825) and Bloodlust1timer - GetTime() &amp;lt; 8 and ((IsPlayerSpell(56364) and not PQR_SpellAvailable(131078)) or (not IsPlayerSpell(56364) and not PQR_SpellAvailable(12472))) then
	AlterTimeQueue = AlterTimeQueue + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;, 32182) and Bloodlust2timer - GetTime() &amp;lt; 8 and ((IsPlayerSpell(56364) and not PQR_SpellAvailable(131078)) or (not IsPlayerSpell(56364) and not PQR_SpellAvailable(12472))) then
	AlterTimeQueue = AlterTimeQueue + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;, 80353) and Bloodlust3timer - GetTime() &amp;lt; 8 and ((IsPlayerSpell(56364) and not PQR_SpellAvailable(131078)) or (not IsPlayerSpell(56364) and not PQR_SpellAvailable(12472))) then
	AlterTimeQueue = AlterTimeQueue + 1
end
if UnitBuffID(&amp;quot;player&amp;quot;, 90355) and Bloodlust4timer - GetTime() &amp;lt; 8 and ((IsPlayerSpell(56364) and not PQR_SpellAvailable(131078)) or (not IsPlayerSpell(56364) and not PQR_SpellAvailable(12472))) then
	AlterTimeQueue = AlterTimeQueue + 1
end



 function dummy()
	dummies = {
		31146, --Raider&amp;apos;s Training Dummy - Lvl ??
		67127, --Training Dummy - Lvl 90
		46647, --Training Dummy - Lvl 85
		32546, --Ebon Knight&amp;apos;s Training Dummy - Lvl 80
		31144, --Training Dummy - Lvl 80
		32667, --Training Dummy - Lvl 70
		32542, --Disciple&amp;apos;s Training Dummy - Lvl 65
		32666, --Training Dummy - Lvl 60
		32545, --Initiate&amp;apos;s Training Dummy - Lvl 55 
		32541, --Initiate&amp;apos;s Training Dummy - Lvl 55 (Scarlet Enclave) 
	}
	for i=1, #dummies do
		if UnitExists(&amp;quot;target&amp;quot;) then
			dummyID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(-13, -9), 16)
		else
			dummyID = 0
		end
		if dummyID == dummies[i] then
			return true
		end	
	end
end
if sTimer == nil then
  sTimer = 0
 end
 if cTime == nil then
  cTime = 0
 end
 if UnitAffectingCombat(&amp;quot;player&amp;quot;) and sTimer == 0 then
   sTimer = GetTime()
 end
 if sTimer &amp;gt; 0 then
   cTime = (GetTime() - sTimer)
 end
 if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and not UnitExists(&amp;quot;target&amp;quot;) then
  sTimer = 0
  cTime = 0
 end

-- GetSpellCD will return actual Timer before we can use the ability, 0 if the ability is ready.
	GetSpellCD = nil
	function GetSpellCD(MySpell)
		if GetSpellCooldown(GetSpellInfo(MySpell)) == nil then
			return 0
		else
			local Start ,CD = GetSpellCooldown(MySpell)
			local MyCD = Start + CD - GetTime()
			return MyCD
		end
	end
	
	---Credits to Bu_ba for the line of code!---
if not IsLineOfSight then
 LoSTable = { }
 function IsLineOfSight(targetCheck, time)
  local time=time or 5
  targetGUID = UnitGUID(targetCheck) or 0 

   for i=1, #LoSTable do
    if time &amp;lt; (GetTime() - LoSTable[i].time) then
     table.remove(LoSTable, i)
     break
    end
  end

   function LoSCheck(self, event, ...)
    local targetGUID = targetGUID
    local Log = {...}
    local AlreadyTabled = false
    if Log[2] and Log[2] == &amp;quot;SPELL_CAST_FAILED&amp;quot; and targetGUID then
     if Log[4] and Log[4]==UnitGUID(&amp;quot;player&amp;quot;) then
      if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
       for j=1, #LoSTable do
        if targetGUID == LoSTable[j].unit then
         AlreadyTabled = true
         break
        end
       end
       if not AlreadyTabled then
        table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
        targetGUID = nil
        _G.NovaLineOfSight:UnregisterAllEvents()
       end
      end
     end
    end
    
   end

  if not NovaLineOfSight then
    frameLOS = CreateFrame(&amp;quot;frame&amp;quot;, &amp;quot;NovaLineOfSight&amp;quot;)
    frameLOS:SetScript(&amp;quot;OnEvent&amp;quot;, LoSCheck)
  end
  
   for k=1, #LoSTable do
     if targetGUID and targetGUID == LoSTable[k].unit then
     return false
    end
  end
  
  
  _G.NovaLineOfSight:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
  return true

 end
end

---No Time to Die---
function NOTEB()
if UnitExists(&amp;quot;target&amp;quot;) then 
local targetGUID = tonumber((UnitGUID(&amp;quot;target&amp;quot;)):sub(-12, -9), 16)


Target = { 70235, 70247, 70212, 71543 }

	for i=1, #Target do
 	  if targetGUID == Target[i] then 
 	  return true
 	  end
	end
end
end
LivingBomb = 0
-- Time 2 Die
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		
		return timeToDie
	end
end


Icicles = 0

-- Aura Info function.
buffs = {
	stat 		=	{ 90363, 20217,	115921, 1126 },
	stamina		= 	{ 469, 90364, 109773, 21562},
	atkpwr		= 	{ 19506, 57330,	6673 },
	atkspeed	=	{ 55610, 113742, 30809, 128432, 128433 },
	spllpwr		=	{ 77747, 109773, 126309, 61316, 1459 },
	spllhaste	= 	{ 24907, 15473, 51470, 49868 },
	crit		=	{ 17007, 1459, 61316, 116781, 97229, 24604, 90309, 126373, 126309 },
	mastery		=	{ 116956, 19740, 93435, 128997 },
}

-- Trinket Proc list
buffList = {104423, 104509, 104510, 128985, 33702, 126577, 126659, 126478, 125487, 136082, 126605, 126734, 126476, 136089, 138898, 139133, 138786, 138703, 137590, 26297, 32182, 90355, 80353, 2825, 104993, 105702}
critProcs = {104509, 126605, 126476}
hasteProcs = {104423, 126659, 136089, 138703, 137590, 26297, 32182, 90355, 80353, 2825}
masteryProcs = {104510}
intellectProcs = {128985, 126577, 126478, 136082, 138898, 139133, 138786, 104993, 105702, 33702, 126734, 125487}

MageT16 = {
		-- Tier 15: Heroic
	99162,99152,99153,99160,99161	-- Tier 15: Normal
		-- Tier 15: LFR
}

-- Calculate accumulated power of procs
SoapboxPower = nil
function SoapboxPower(spellID)
	-- Fetch our current stats.
	local mastery, haste, crit, spd, sorbs = GetMastery(), UnitSpellHaste(&amp;quot;player&amp;quot;), GetSpellCritChance(6), GetSpellBonusDamage(6), UnitPower(&amp;quot;player&amp;quot;,13)
	
	-- Calculate potential damage buffs.
	dmg_buff = 1
	local fluidity, tricks, fearless, nutriment, shadowform, pi, tof = UnitBuffID(&amp;quot;player&amp;quot;,138002), UnitBuffID(&amp;quot;player&amp;quot;,57934), UnitBuffID(&amp;quot;player&amp;quot;,118977), select(4,UnitBuffID(&amp;quot;player&amp;quot;,138002)), UnitBuffID(&amp;quot;player&amp;quot;,15473), UnitBuffID(&amp;quot;player&amp;quot;,10060), UnitBuffID(&amp;quot;player&amp;quot;,123254)
	if fluidity		then dmg_buff = dmg_buff * 1.4		end
	if fearless		then dmg_buff = dmg_buff * 1.6		end
	if tricks		then dmg_buff = dmg_buff * 1.15		end
	if nutriment	then dmg_buff = 2+(nutriment-1)*0.1	end
	if shadowform	then dmg_buff = dmg_buff * 1.25		end
	if pi			then dmg_buff = dmg_buff * 1.05		end
	if tof			then dmg_buff = dmg_buff * 1.15		end
	
	-- Skull Banner
	if crit &amp;gt;= 100	then
		if skullbanner then dmg_buff = dmg_buff * 1.20	end
	end
	
	-- If Unerring proceed, take it into account.
	if crit &amp;gt; 100 then crit = 100 end
	
	-- Class/spec detection
	if select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;PRIEST&amp;quot; then
		if GetSpecialization() == 3 then
			damage_bonus 		= (1+crit/100)*(1+(mastery*1.8)/100)
			tick_every 			= 3/(1+(haste/100))
			
			-- Shadow Word: Pain
			if spellID == 589 then
				ticks		= PowerRound(18/tick_every)
				duration	= ticks * tick_every
				damage		= ticks * (623+spd*0.293) * damage_bonus
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end
			
			-- Vampiric Touch
			if spellID == 34914 then
				ticks		= PowerRound(15/tick_every)
				duration	= ticks * tick_every
				damage		= ticks*(62+spd*0.346)*damage_bonus
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end		
			
			-- Devouring Plague
			if spellID == 2944 then
				tick_every	= 1/(1+(haste/100))
				ticks		= PowerRound(5/tick_every)
				duration	= ticks * tick_every
				damage		= ticks*(9+spd*0.131)*sorbs*damage_bonus
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end
			
			-- Fail-safe
			return 0
		else return 0 end
	elseif select(2,UnitClass(&amp;quot;player&amp;quot;)) == &amp;quot;WARLOCK&amp;quot; then
		if GetSpecialization() == 2 then
			-- Doom
			if spellID == 603 then
				bonus		= (1+crit/100)*(1+(mastery*3)/100)
				tick_every	= 15/(1+(haste/100))
				ticks		= PowerRound(60/tick_every)
				duration	= ticks * tick_every
				damage		= (5340/ticks+spd*1.25)*bonus*ticks*dmg_buff
				dps			= PowerRound(damage/duration)
				dot_power	= PowerRound(dps/100)/10
				return dot_power
			end
			
			-- Fail-safe
			return 0
		else return 0 end
	else return 0 end
end

-- Unerring Vision of Lei-Shen
visionTrinket = {
	95814,	-- LFR
	94524,	-- Normal
	96186,	-- Thunderforged
	96558,	-- Heroic
	96930	-- Heroic Thunderforged
}

-- Complete boss unit table (Dungeons/Heroics/Raids)
BossUnits = {
	-- Cataclysm Dungeons --
	-- Abyssal Maw: Throne of the Tides
	40586,		-- Lady Naz&amp;apos;jar
	40765,		-- Commander Ulthok
	40825,		-- Erunak Stonespeaker
	40788,		-- Mindbender Ghur&amp;apos;sha
	42172,		-- Ozumat
	-- Blackrock Caverns
	39665,		-- Rom&amp;apos;ogg Bonecrusher
	39679,		-- Corla, Herald of Twilight
	39698,		-- Karsh Steelbender
	39700,		-- Beauty
	39705,		-- Ascendant Lord Obsidius
	-- The Stonecore
	43438,		-- Corborus
	43214,		-- Slabhide
	42188,		-- Ozruk
	42333,		-- High Priestess Azil
	-- The Vortex Pinnacle
	43878,		-- Grand Vizier Ertan
	43873,		-- Altairus
	43875,		-- Asaad
	-- Grim Batol
	39625,		-- General Umbriss
	40177,		-- Forgemaster Throngus
	40319,		-- Drahga Shadowburner
	40484,		-- Erudax
	-- Halls of Origination
	39425,		-- Temple Guardian Anhuur
	39428,		-- Earthrager Ptah
	39788,		-- Anraphet
	39587,		-- Isiset
	39731,		-- Ammunae
	39732,		-- Setesh
	39378,		-- Rajh
	-- Lost City of the Tol&amp;apos;vir
	44577,		-- General Husam
	43612,		-- High Prophet Barim
	43614,		-- Lockmaw
	49045,		-- Augh
	44819,		-- Siamat
	-- Zul&amp;apos;Aman
	23574,		-- Akil&amp;apos;zon
	23576,		-- Nalorakk
	23578,		-- Jan&amp;apos;alai
	23577,		-- Halazzi
	24239,		-- Hex Lord Malacrass
	23863,		-- Daakara
	-- Zul&amp;apos;Gurub
	52155,		-- High Priest Venoxis
	52151,		-- Bloodlord Mandokir
	52271,		-- Edge of Madness
	52059,		-- High Priestess Kilnara
	52053,		-- Zanzil
	52148,		-- Jin&amp;apos;do the Godbreaker
	-- End Time
	54431,		-- Echo of Baine
	54445,		-- Echo of Jaina
	54123,		-- Echo of Sylvanas
	54544,		-- Echo of Tyrande
	54432,		-- Murozond
	-- Hour of Twilight
	54590,		-- Arcurion
	54968,		-- Asira Dawnslayer
	54938,		-- Archbishop Benedictus
	-- Well of Eternity
	55085,		-- Peroth&amp;apos;arn
	54853,		-- Queen Azshara
	54969,		-- Mannoroth
	55419,		-- Captain Varo&amp;apos;then
	
	-- Mists of Pandaria Dungeons --
	-- Scarlet Halls
	59303,		-- Houndmaster Braun
	58632,		-- Armsmaster Harlan
	59150,		-- Flameweaver Koegler
	-- Scarlet Monastery
	59789,		-- Thalnos the Soulrender
	59223,		-- Brother Korloff
	3977,		-- High Inquisitor Whitemane
	60040,		-- Commander Durand
	-- Scholomance
	58633,		-- Instructor Chillheart
	59184,		-- Jandice Barov
	59153,		-- Rattlegore
	58722,		-- Lilian Voss
	58791,		-- Lilian&amp;apos;s Soul
	59080,		-- Darkmaster Gandling
	-- Stormstout Brewery
	56637,		-- Ook-Ook
	56717,		-- Hoptallus
	59479,		-- Yan-Zhu the Uncasked
	-- Tempe of the Jade Serpent
	56448,		-- Wise Mari
	56843,		-- Lorewalker Stonestep
	59051,		-- Strife
	59726,		-- Peril
	58826,		-- Zao Sunseeker
	56732,		-- Liu Flameheart
	56762,		-- Yu&amp;apos;lon
	56439,		-- Sha of Doubt
	-- Mogu&amp;apos;shan Palace
	61444,		-- Ming the Cunning
	61442,		-- Kuai the Brute
	61445,		-- Haiyan the Unstoppable
	61243,		-- Gekkan
	61398,		-- Xin the Weaponmaster
	-- Shado-Pan Monastery
	56747,		-- Gu Cloudstrike
	56541,		-- Master Snowdrift
	56719,		-- Sha of Violence
	56884,		-- Taran Zhu
	-- Gate of the Setting Sun
	56906,		-- Saboteur Kip&amp;apos;tilak
	56589,		-- Striker Ga&amp;apos;dok
	56636,		-- Commander Ri&amp;apos;mok
	56877,		-- Raigonn
	-- Siege of Niuzao Temple
	61567,		-- Vizier Jin&amp;apos;bak
	61634,		-- Commander Vo&amp;apos;jak
	61485,		-- General Pa&amp;apos;valak
	62205,		-- Wing Leader Ner&amp;apos;onok
	
	-- Mists of Pandaria Heroic Scenarios --
	-- A Brewing Storm
	58739,		-- Borokhula the Destroyer
	-- Battle on the High Seas
	71303,		-- Whale Shark &amp;lt;Son of Whale Shark&amp;gt;
	71327,		-- Admiral Hodgson
	67426,		-- Admiral Hagman
	70893,		-- Lieutenant Blasthammer
	71329,		-- Lieutenant Boltblaster
	-- Blood in the Snow
	70468,		-- Bonechiller Barafu
	70474,		-- Farastu &amp;lt;The Living Ice&amp;gt;
	70544,		-- Hekima the Wise &amp;lt;Herald of Rastakhan&amp;gt;
	-- Crypt of the Forgotten Kings
	61707,		-- Abomination of Anger
	71492,		-- Maragor &amp;lt;Guardian of the Golden Doors&amp;gt;
	67081,		-- Forgotten King
	-- Dark Heart of Pandaria
	71123,		-- Echo of Y&amp;apos;Shaarj
	-- The Secrets of Ragefire
	70683,		-- Dark Shaman Xorenth
	71030,		-- Overseer Elaglo
	70665,		-- Kor&amp;apos;kron Dire Soldier

	-- Training Dummies --
	46647,		-- Level 85 Training Dummy
	67127,		-- Level 90 Training Dummy
	
	-- Pandaria Raid Adds --
	63346,		-- Tsulong: The Dark of Night
	62969,		-- Tsulong: Embodied Terror
	62977,		-- Tsulong: Frightspawn
	62919,		-- Tsulong: Unstable Sha
	61034,		-- Sha of Fear: Terror Spawn
	61003		-- Sha of Fear: Dread Spawn
}



-- Time 2 Die
T2D = nil
function T2D(unit)
	-- If no target is given, return false.
	if unit == nil then return false end
	
	if UnitExists(unit) then
		-- Target present; Set initial values.
		if (guid ~= UnitGUID(unit)) or (guid == UnitGUID(unit) and UnitHealth(unit) == _firstLifeMax) then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealthMax(unit)
			_firstTime = GetTime()
		end
		
		-- Fetch current values.
		_currentLife = UnitHealth(unit)
		_currentTime = GetTime()
		timeDiff = _currentTime - _firstTime
		hpDiff = _firstLife - _currentLife
		
		-- Calculate time to die.
		if hpDiff &amp;gt; 0 then
			fullTime = timeDiff*_firstLifeMax/hpDiff
			pastFirstTime = (_firstLifeMax - _firstLife)*timeDiff/hpDiff
			calcTime = _firstTime - pastFirstTime + fullTime - _currentTime
			if calcTime &amp;lt; 1 then calcTime = 1 end
			timeToDie = calcTime
		end
		
		-- New target; reset settings.
		if hpDiff &amp;lt;= 0 then
			guid = UnitGUID(unit)
			_firstLife = UnitHealth(unit)
			_firstLifeMax = UnitHealth(unit)
			_firstTime = GetTime()
		end
	            
		-- Training Dummy&amp;apos;s are bad
		if UnitHealthMax(unit) == 1 then timeToDie = 99 end
		
		-- Initialize
		if not timeToDie then timeToDie = 100 end
		
		return timeToDie
	end
end
BuffedBoss = nil
function BuffedBoss()
if UnitExists(&amp;quot;boss&amp;quot;..1) then
	local BossID = tonumber(UnitGUID(&amp;quot;boss&amp;quot;..1):sub(6,10), 16)
	if BossID == 69465 then
   	local Fluidity = UnitDebuffID(&amp;quot;player&amp;quot;, 138002)	
		if Fluidity then
		return true
		end			
	else
	return true
	end
else
return true
end
end
-- Target Validation Function
TargetValidation = nil
function TargetValidation(unit, spell)
	if UnitExists(unit)
		and IsPlayerSpell(spell)
		and UnitCanAttack(&amp;quot;player&amp;quot;, unit) == 1
		and not UnitIsDeadOrGhost(unit)
		and IsLineOfSight(unit, 5) then
			if IsSpellKnown(30455) then
				if PQR_SpellAvailable(spell) then
					if IsSpellInRange(GetSpellInfo(30455), unit) == 1 then return true else return false end
				else
					if spell == 8092 or spell == 32379 then
						local spellCD = select(2,GetSpellCooldown(spell)) + GetSpellCooldown(spell) - GetTime()
						if spellCD &amp;lt;= 0 then spellCD = 0 end
						if spellCD &amp;lt;= 0.5 then return true end
					end
					return false
				end
			else
				if select(2, GetSpellCooldown(spell)) == 0 then return true end
			end
	end
end

-- DoT Mind Control Function
MindControlled = nil
function MindControlled(unit)
	if UnitDebuffID(unit, 145832) 
	or UnitDebuffID(unit, 145171) 
	or UnitDebuffID(unit, 145065) 
	or UnitDebuffID(unit, 145071) then
	return true
	else
	return false
	end
end

-- Combat log event reader
function PyrotecFrame_OnEvent(self,event,...)
	-- We started a channel, update counters
	if event == &amp;quot;UNIT_SPELLCAST_CHANNEL_START&amp;quot; then
		-- Mind Flay counter
		if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(15407) then
			flayTicks = 0
			maxFlayTicks = 3
		end
		-- Mind Flay (Insanity) counter
		if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(129197) then
			insanityTicks = 0
			maxInsanityTicks = 3
		end
	end
	
	-- We stopped a channel, reset counters.
	if event == &amp;quot;UNIT_SPELLCAST_CHANNEL_STOP&amp;quot; then
		flayTicks = 0
		insanityTicks = 0
		maxFlayTicks = 3
		maxInsanityTicks = 3
	end
	
	-- Clear the DOT tracker whenever we leave or enter combat!
	if event == &amp;quot;PLAYER_REGEN_ENABLED&amp;quot; or event == &amp;quot;PLAYER_REGEN_DISABLED&amp;quot; then
		if #DoTs &amp;gt; 0 then DoTs = {} end
	end
	
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		local subEvent		= select(2, ...)
		local source		= select(5, ...)
		local destGUID		= select(8, ...)
		local destination	= select(9, ...)
		local spellID		= select(12, ...)
		local spell			= select(13, ...)
		local damage		= select(15, ...)
		local critical		= select(21, ...)
		local doom_tick_every = Round(15/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local swp_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		local vt_tick_every = Round(3/(1+(UnitSpellHaste(&amp;quot;player&amp;quot;)/100)),2)
		
		-- Unit Death events
		if subEvent == &amp;quot;UNIT_DIED&amp;quot; then
			-- A unit has died, is it in our tracker?
			if #DoTs &amp;gt; 0 then
				for i=1,#DoTs do
					if DoTs[i].guid == destGUID then tremove(DoTs, i) return true end
				end
			end
		end
		
		-- Successfull Spell Casts
		if subEvent == &amp;quot;SPELL_CAST_START&amp;quot; then end
		
		-- Periodic Damage Events
		if subEvent == &amp;quot;SPELL_PERIODIC_DAMAGE&amp;quot; then
			-- Catch Ignite
			if UnitName(&amp;quot;player&amp;quot;) == source and destination == UnitName(&amp;quot;target&amp;quot;) then
				if spellID == 12654 then IgniteDamage = damage end
			end
			
			-- Mind Flay
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 15407 then flayTicks = flayTicks + 1 end
			-- Mind Flay (Insanity)
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 129197 then insanityTicks = insanityTicks + 1 end
		end
		
		-- Refreshed Aura Events
		if subEvent == &amp;quot;SPELL_AURA_REFRESH&amp;quot; then
			-- Doom was refreshed on an enemy, update our table.
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 603 then
				if #DoTs &amp;gt; 0 then
					for i=1,#DoTs do
						if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then
							DoTs[i].doomPower = SoapboxPower(603)
							DoTs[i].doom_tick_every = doom_tick_every
							DoTs[i].spellID = spellID
							if UnitBuffID(&amp;quot;player&amp;quot;,138963) then DoTs[i].crit = true else DoTs[i].crit = false end
						end
					end
				end
			end
			
			-- Shadow Word: Pain was refreshed on an enemy, update our table.
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 589 then
				if #DoTs &amp;gt; 0 then
					for i=1,#DoTs do
						if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then
							DoTs[i].swpPower = SoapboxPower(589)
							DoTs[i].swp_tick_every = swp_tick_every
							DoTs[i].spellID = spellID
							if UnitBuffID(&amp;quot;player&amp;quot;,138963) then DoTs[i].crit = true else DoTs[i].crit = false end
						end
					end
				end
			end
			
			-- Vampiric Touch was refreshed on an enemy, update our table.
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 34914 then
				if #DoTs &amp;gt; 0 then
					for i=1,#DoTs do
						if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then
							DoTs[i].vtPower = SoapboxPower(34914)
							DoTs[i].vt_tick_every = vt_tick_every
							DoTs[i].spellID = spellID
							if UnitBuffID(&amp;quot;player&amp;quot;,138963) then DoTs[i].crit = true else DoTs[i].crit = false end
						end
					end
				end
			end
			
			-- Mind Flay
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 15407 then
				flayTicks = 0
				maxFlayTicks = 4
			end
			
			-- Mind Flay (Insanity)
			if UnitName(&amp;quot;player&amp;quot;) == source and spellID == 129197 then
				insanityTicks = 0
				maxInsanityTicks = 4
			end
		end
		
		-- Removed Aura Events
		if subEvent == &amp;quot;SPELL_AURA_REMOVED&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source then
				-- Doom fell of a unit, remove unit from tracker.
				if spellID == 603 then
					if #DoTs &amp;gt; 0 then
						for i=1,#DoTs do
							if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then tremove(DoTs, i) return true end
						end
					end
				end
				
				-- Shadow Word: Pain fell of a unit, remove unit from tracker.
				if spellID == 589 then
					if #DoTs &amp;gt; 0 then
						for i=1,#DoTs do
							if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then tremove(DoTs, i) return true end
						end
					end
				end
				
				-- Vampiric Touch fell of a unit, remove unit from tracker.
				if spellID == 34914 then
					if #DoTs &amp;gt; 0 then
						for i=1,#DoTs do
							if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then tremove(DoTs, i) return true end
						end
					end
				end
				
				-- Ignite fell off a unit
				if spellID == 12654 then IgniteDamage = 0 end
				
				-- Mind Flay
				if spellID == 15407 then flayTicks = 0 maxFlayTicks = 3 end
				
				-- Mind Flay (Insanity)
				if spellID == 129197 then insanityTicks = 0 maxInsanityTicks = 3 end
				
				-- Living Bomb fell off a target
				if spellID == 44457 then LivingBomb = LivingBomb - 1 end
				
				-- Evocation done channeling
				if spellID == 12051 then stopRotation = false end
			end
		end
		
		-- Applied Aura Events
		if subEvent == &amp;quot;SPELL_AURA_APPLIED&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source then
				-- Doom applied to a unit, add unit to tracker
				if spellID == 603 then
					for i=1,#DoTs do if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then return false end end
					
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						table.insert(DoTs, {guid = destGUID, doomPower = SoapboxPower(603), doom_tick_every = doom_tick_every, spellID = spellID, crit = true})
					else
						table.insert(DoTs, {guid = destGUID, doomPower = SoapboxPower(603), doom_tick_every = doom_tick_every, spellID = spellID, crit = false})
					end
				end
				
				-- Shadow Word: Pain applied to a unit, add unit to tracker
				if spellID == 589 then
					for i=1,#DoTs do if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then return false end end
					
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						table.insert(DoTs, {guid = destGUID, swpPower = SoapboxPower(589), swp_tick_every = swp_tick_every, spellID = spellID, crit = true})
					else
						table.insert(DoTs, {guid = destGUID, swpPower = SoapboxPower(589), swp_tick_every = swp_tick_every, spellID = spellID, crit = false})
					end
				end
				
				-- Vampiric Touch applied to a unit, add unit to tracker
				if spellID == 34914 then
					for i=1,#DoTs do if DoTs[i].guid == destGUID and DoTs[i].spellID == spellID then return false end end
					
					if UnitBuffID(&amp;quot;player&amp;quot;,138963) then
						table.insert(DoTs, {guid = destGUID, vtPower = SoapboxPower(34914), vt_tick_every = vt_tick_every, spellID = spellID, crit = true})
					else
						table.insert(DoTs, {guid = destGUID, vtPower = SoapboxPower(34914), vt_tick_every = vt_tick_every, spellID = spellID, crit = false})
					end
				end
				
				-- Living Bomb applied to any target
				if spellID == 44457 then LivingBomb = LivingBomb + 1 end
				
				-- Evocation done channeling
				if spellID == 12051 then stopRotation = true end
			end
		end
		
		-- Damage events
		if subEvent == &amp;quot;SPELL_DAMAGE&amp;quot; then
			if UnitName(&amp;quot;player&amp;quot;) == source and destination == UnitName(&amp;quot;target&amp;quot;) then
				-- Pyroblast
				if spellID == 11366 then
					PyroDamage = damage
					if critical == 1 then pyroCrit = 1 else pyroCrit = 0 end
				end
				-- Fireball
				if spellID == 133 then
					FireballDamage = damage
					if critical == 1 then fireballCrit = 1 else fireballCrit = 0 end
				end
				-- Inferno Blast (Always a critical)
				if spellID == 108853 then InfernoDamage = damage end
				-- Frostbolt (5.4 Mastery change: Icicles)
				if spellID == 116 then Icicles = Icicles + 1 end
				-- Ice Lance (5.4 Mastery change: Icicles)
				if spellID == 30455 then Icicles = 0 end
				-- Frostfire Bolt (5.4 Mastery change: Icicles)
				if spellID == 44614 then Icicles = Icicles + 1 end
			end
		end
	end
end


-- Returns the number of items currently equipped from the given table.
itemCheck = nil
function itemCheck(tbl)
	local itemCount = 0
	for i=1,#tbl do
		if IsEquippedItem(tbl[i]) then itemCount = itemCount + 1 end
	end
	return itemCount
end


-- Aura Information Function
AuraInfo = nil
function AuraInfo(i,unit)
	if i == 1 then
		for x = 1, #buffs.stat do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stat[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 2 then
		for x = 1, #buffs.stamina do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.stamina[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 3 then
		for x = 1, #buffs.atkpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 4 then
		for x = 1, #buffs.atkspeed do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.atkspeed[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 5 then
		for x = 1, #buffs.spllpwr do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllpwr[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 6 then
		for x = 1, #buffs.spllhaste do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.spllhaste[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 7 then
		for x = 1, #buffs.crit do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.crit[x])))
			if texture then
				return name, _, texture
			end
		end
	elseif i == 8 then
		for x = 1, #buffs.mastery do
			local name, _, texture = UnitBuff(unit, (GetSpellInfo(buffs.mastery[x])))
			if texture then
				return name, _, texture
			end
		end
	else 
		return nil, nil, nil
	end
end


-- Rounding Function
Round = nil
function Round(number, decimal)
	local multiplier = 10^(decimal or 0)
	return math.floor(number * multiplier + 0.5) / multiplier
end
PowerRound = nil
function PowerRound(num) return math.floor(num+.5) end

-- Boss Unit Function
SpecialUnit = nil
function SpecialUnit()
	local BossUnits = BossUnits
	
	if UnitExists(&amp;quot;target&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(6,10), 16)
		
		-- Dungeons &amp; Raids
		if UnitLevel(&amp;quot;target&amp;quot;) == -1 then return true else
			for i=1,#BossUnits do
				if BossUnits[i] == npcID then return true end
			end
			return false
		end
	else return false end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3a. Macro Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------
--------------------------Macros Table-----------------------------
-------------------------------------------------------------------

  PQR_InterruptDelay =  0

	--------------------
	-- Register CVars --
	--------------------
	Nova_ValueCheck = {
		{	Var1 = nil,	Text = &amp;quot;Toggles&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Cooldowns&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Flamestrike&amp;quot;,			Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;TierTwo&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;TierThree&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;TierSix&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Blink&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Pause&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Freeze&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Orb&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;AOE&amp;quot;,					Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Fireball&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Evocation&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Inferno&amp;quot;,				Var2 = 1		},
		{	Var1 = 0,	Text = &amp;quot;Ice&amp;quot;,				Var2 = 1		}
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end


-- Latency Adjuster
local minValue = 0.05
local maxValue = 0.3
local curPing = tonumber((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000) + .025

if curPing &amp;lt; minValue then
	curPing = minValue
elseif curPing &amp;gt; maxValue then
	curPing = maxValue
end

PQR_SpellAvailableTime = curPing

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------

---------------------------------------------------------------------------------------------------
----------------------------- Big Thanks to Ninjaderp for Color Coding ----------------------------
---------------------------------------------------------------------------------------------------

if SlashMacros == nil then
	SlashMacros = true
	
	SLASH_COOLDOWNS1 = &amp;quot;/cooldowns&amp;quot;
	SLASH_COOLDOWNS2 = &amp;quot;/cooldown&amp;quot;
	function SlashCmdList.COOLDOWNS(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Cooldowns&amp;quot;) then
			xrn:message(&amp;quot;|cff9F82A2Cooldowns - Active.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 1)
		else			
			xrn:message(&amp;quot;|cff9920D0Cooldowns - Inactive.&amp;quot;)
			SetCVar(&amp;quot;Nova_Cooldowns&amp;quot;, 0)
		end
	end
	SLASH_AOE1 = &amp;quot;/aoe&amp;quot;
	function SlashCmdList.AOE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_AOE&amp;quot;) then 
			if GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then	
			PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AOE&amp;quot;,nil,&amp;quot;0698FF&amp;quot;) 
			xrn:message(&amp;quot;\124cFFF0A804AOE Rotation.&amp;quot;)
			SetCVar(&amp;quot;Nova_AOE&amp;quot;, 1)
			end
		elseif GetSpecialization(&amp;quot;player&amp;quot;) ~= 2 then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Single Target&amp;quot;,nil,&amp;quot;FFFFFF&amp;quot;)
		xrn:message(&amp;quot;\124cFFD4D4D4Single target Rotation&amp;quot;)
		SetCVar(&amp;quot;Nova_AOE&amp;quot;, 0)
		end
	end
	SLASH_FLAME1 = &amp;quot;/flamestrike&amp;quot;
	function SlashCmdList.FLAME(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Flamestrike&amp;quot;) then
			xrn:message(&amp;quot;\124cE96E22FFFlamestrike - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Flamestrike&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c853402D4Flamestrike - Disabled.&amp;quot;) 
			SetCVar(&amp;quot;Nova_Flamestrike&amp;quot;, 0)
		end
	end
	
	SLASH_TIERTWO1 = &amp;quot;/tiertwo&amp;quot;
	function SlashCmdList.TIERTWO(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_TierTwo&amp;quot;) then
			xrn:message(&amp;quot;\124cBD5ED2FFTier Two Talent - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierTwo&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c843197FFTier Two Talent - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierTwo&amp;quot;, 0)
		end
	end
		SLASH_TIERTHREE1 = &amp;quot;/tierthree&amp;quot;
	function SlashCmdList.TIERTHREE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_TierThree&amp;quot;) then
			xrn:message(&amp;quot;\124cCE5900FFTier Three Talent - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierThree&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c864615FFTier Three Talent - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierThree&amp;quot;, 0)
		end
	end
		SLASH_TIERSIX1 = &amp;quot;/tiersix&amp;quot;
	function SlashCmdList.TIERSIX(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_TierSix&amp;quot;) then
			xrn:message(&amp;quot;\124c810E0EFFTier Six Talent - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierSix&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c511010FFTier Six Talent - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_TierSix&amp;quot;, 0)
		end
	end
	SLASH_BLINK1 = &amp;quot;/blink&amp;quot;
	function SlashCmdList.BLINK(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Blink&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFBlink - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Blink&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFBlink - Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Blink&amp;quot;, 0)
		end
	end
	SLASH_EVO1 = &amp;quot;/evocation&amp;quot;
	function SlashCmdList.EVO(msg, editbox)
	if not IsPlayerSpell(114003) and not IsPlayerSpell(116011) then
		if not GetCVarBool(&amp;quot;Nova_Evocation&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFEvocation - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Evocation&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c4B2C4EFFEvocation - Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Evocation&amp;quot;, 0)
		end
	end
	end
	SLASH_FREEZE1 = &amp;quot;/freeze&amp;quot;
	function SlashCmdList.FREEZE(msg, editbox)
	if GetSpecialization() == 3 then
		if not GetCVarBool(&amp;quot;Nova_Freeze&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFFreeze - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Freeze&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c4B2C4EFFFreeze - Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Freeze&amp;quot;, 0)
		end
	end
	end
		SLASH_ICE1 = &amp;quot;/ice&amp;quot;
	function SlashCmdList.ICE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Ice&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFIce Block - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Ice&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c4B2C4EFFIce Block - Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Ice&amp;quot;, 0)
		end
	end
	SLASH_ORB1 = &amp;quot;/orb&amp;quot;
	function SlashCmdList.ORB(msg, editbox)
	if GetSpecialization() == 3 then
		if not GetCVarBool(&amp;quot;Nova_Orb&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFFrozen Orb - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Orb&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c4B2C4EFFFrozen Orb - Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Orb&amp;quot;, 0)
		end
	end
	end
		SLASH_INFERNO1 = &amp;quot;/inferno&amp;quot;
	function SlashCmdList.INFERNO(msg, editbox)
	if GetSpecialization() == 2 then
		if not GetCVarBool(&amp;quot;Nova_Inferno&amp;quot;) then
			xrn:message(&amp;quot;\124c7D4683FFInferno Blast - Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Inferno&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c4B2C4EFFInferno Blast - Disabled&amp;quot;)
			SetCVar(&amp;quot;Nova_Inferno&amp;quot;, 0)
		end
	end
	end
		SLASH_PAUSE1 = &amp;quot;/pause&amp;quot;
	function SlashCmdList.PAUSE(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pause&amp;quot;) then
			xrn:message(&amp;quot;\124c411D8AFFPause - Enabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124c1B0843FFPause - Disabled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pause&amp;quot;, 0)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---2. Globals---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>---Bloodlust Check---
Bloodlust = UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
or UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)




IcyVeins = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 56364 then IcyVeins = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 56364 then IcyVeins = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 56364 then IcyVeins = true end

ArcanePower = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 62210 then ArcanePower = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 62210 then ArcanePower = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 62210 then ArcanePower = true end

Explosion = false

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(2)
if glyphSpellID == 115718 then Explosion = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(4)
if glyphSpellID == 115718 then Explosion = true end

local enabled, glyphType, glyphTooltipIndex, glyphSpellID, icon = GetGlyphSocketInfo(6)
if glyphSpellID == 115718 then Explosion = true end
---Invoke Xuen Cooldown---
local IVStart, IVDuration = GetSpellCooldown(12472)
IVCD = IVStart + IVDuration - GetTime()

local IV2Start, IV2Duration = GetSpellCooldown(131078)
IV2CD = IV2Start + IV2Duration - GetTime()

local APStart, APDuration = GetSpellCooldown(12042)
APCD = APStart + APDuration - GetTime()

local ATStart, ATDuration = GetSpellCooldown(108978)
ATCD = ATStart + ATDuration - GetTime()

local CombStart, CombDuration = GetSpellCooldown(11129)
CombCD = CombStart + CombDuration - GetTime()

local IBStart, IBDuration = GetSpellCooldown(108853)
IBCD = IBStart + IBDuration - GetTime()

local RCStart, RCDuration = GetSpellCooldown(475)
RCCD = RCStart + RCDuration - GetTime()


Blast,_,_,_,_,_,Blasttimer = UnitDebuffID(&amp;quot;player&amp;quot;,36032)
ShadowCount = select(4,UnitDebuffID(&amp;quot;target&amp;quot;,47960,&amp;quot;PLAYER&amp;quot;))

Doom,_,_,_,_,_,Doomtimer = UnitDebuffID(&amp;quot;target&amp;quot;,603,&amp;quot;PLAYER&amp;quot;)
FrostFire,_,_,_,_,_,FrostFiretimer = UnitBuffID(&amp;quot;player&amp;quot;, 57761)

Playermana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
Playerhealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
Targethealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
Pethealth = 100 * UnitHealth(&amp;quot;pet&amp;quot;) / UnitHealthMax(&amp;quot;pet&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---4. Success---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if CombatLog == nil then
BuBa_CombatLog = CreateFrame(&amp;apos;Frame&amp;apos;)
BuBa_CombatLog:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
	function OnSuccessfulCast(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
 		if (event==&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;) then
  			if (type==&amp;quot;SPELL_AURA_APPLIED&amp;quot;) then
  				if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
  					if select(12, ...) == 12043 then
  					Presence = true
  					Fireballs = false
  					end
  					if select(12, ...) == 48107 then
  					HeatingUp = true
  					end
  					if select(12, ...) == 48108 then
  					Pyros = true
  					end
  				end
  			end
  			if (type==&amp;quot;SPELL_AURA_REMOVED&amp;quot;) then
	  			if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
  				  	if select(12, ...) == 12043 then
  					Presence = false
  					Fireballs = true
  					end
  					if select(12, ...) == 48107 then
  					HeatingUp = false
  					end
  					if select(12, ...) == 48108 then
  					Pyros = false
  					end
  				end
  			end
  			if (type==&amp;quot;SPELL_CAST_SUCCESS&amp;quot;) 
        	or (type==&amp;quot;SPELL_CAST_START&amp;quot;) then
        		if sourceGUID == UnitGUID(&amp;quot;pet&amp;quot;) then
            		if select(12, ...) == 33395 and Nova_Freeze == 1 then
					SetCVar(&amp;quot;Nova_Freeze&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Pet Freeze: \124cFFE61515Casted&amp;quot;) 
					end
				end
           		if sourceGUID == UnitGUID(&amp;quot;player&amp;quot;) then
					if select(12, ...) == 127140  and GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
					print(9)
					PQR_DelayRotation(0.75)
					elseif select(12, ...) == 12043 then
					Presence = true
					PQR_DelayRotation(0.25)
					elseif select(12, ...) == 45438 and Nova_Ice == 1 then
					SetCVar(&amp;quot;Nova_Ice&amp;quot;, 0)
					elseif select(12, ...) == 84714 and Nova_Orb == 1 then
					SetCVar(&amp;quot;Nova_Orb&amp;quot;, 0)
					elseif select(12, ...) == 108853 and Nova_Inferno == 1 then
					SetCVar(&amp;quot;Nova_Inferno&amp;quot;, 0)
					elseif select(12, ...) == 11129 and Pyromaniac == true then
					Pyromaniac = false
					elseif select(12, ...) == 115610 or select(12, ...) == 11426 then
					SetCVar(&amp;quot;Nova_TierTwo&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Tier 2 Talent: \124cFFE61515Casted&amp;quot;) 
					elseif select(12, ...) == 113724 or select(12, ...) == 111264 or select(12, ...) == 102051 then
					SetCVar(&amp;quot;Nova_TierThree&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Tier 3 Talent: \124cFFE61515Casted&amp;quot;)
					elseif (select(12, ...) == 1463 or select(12, ...) == 116011 or select(12, ...) == 12051) and Nova_TierSix == 1 then
					SetCVar(&amp;quot;Nova_TierSix&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Tier 6 Talent: \124cFFE61515Casted&amp;quot;)
					elseif select(12, ...) == 1953 then
					SetCVar(&amp;quot;Nova_Blink&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Blink: \124cFFE61515Casted&amp;quot;)
					elseif select(12, ...) == 2120 then
					SetCVar(&amp;quot;Nova_Flamestrike&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Flamestrike: \124cFFE61515Casted&amp;quot;)
					elseif select(12, ...) == 12051 and Nova_Evocation == 1 then
					SetCVar(&amp;quot;Nova_Evocation&amp;quot;, 0)
					PQR_WriteToChat(&amp;quot;Evocation: \124cFFE61515Casted&amp;quot;)
					end
				end
			end
		end
	end
 BuBa_CombatLog:SetScript(&amp;apos;OnEvent&amp;apos;, OnSuccessfulCast)

    CombatLog = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Symbiosis</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Symbiosis = 113074

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostDefensiveSettings_Symbiosis_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireDefensiveSettings_Symbiosis_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneDefensiveSettings_Symbiosis_enable then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 2 then v3 = PQI_SoapboxFireDefensiveSettings_Symbiosis_value or 25
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 3 then v3 = PQI_SoapboxFrostDefensiveSettings_Symbiosis_value or 25
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then v3 = PQI_SoapboxArcaneDefensiveSettings_Symbiosis_value or 25
end

-- We don&amp;apos;t have Symbiosis
if not UnitBuffID(&amp;quot;player&amp;quot;,110490) then return false end

-- Rejuvenation is on a CD
if not PQR_SpellAvailable(113074) then return false end



	if Playerhealth &amp;lt; v3 then
	CastSpellByName(GetSpellInfo(Symbiosis),&amp;quot;player&amp;quot;) return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Remove Curse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostDefensiveSettings_RemoveCurse_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireDefensiveSettings_RemoveCurse_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneDefensiveSettings_RemoveCurse_enable then return false end

if not PQR_SpellAvailable(475) then return false end

if RCCD &amp;lt; 1 then
for i=1,40 do
	if select(5,UnitDebuff(&amp;quot;player&amp;quot;,i)) == &amp;quot;Curse&amp;quot; then
		CastSpellByName(GetSpellInfo(475),&amp;quot;player&amp;quot;) return true
	end
end

if IsInRaid() then group = &amp;quot;raid&amp;quot; elseif IsInGroup() then group = &amp;quot;party&amp;quot; else return false end

for i=1,GetNumGroupMembers() do
	local member = group..i
	
	if UnitIsDeadOrGhost(member) then return false end
	if not IsLineOfSight(member,3) then return false end
	
	for k=1,40 do
		if select(5,UnitDebuff(member,k)) == &amp;quot;Curse&amp;quot; then
			CastSpellByName(GetSpellInfo(475),member) return true
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Spellsteal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local targets = {&amp;quot;target&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;arena1&amp;quot;,&amp;quot;arena2&amp;quot;,&amp;quot;arena3&amp;quot;,&amp;quot;arena4&amp;quot;,&amp;quot;arena5&amp;quot;,&amp;quot;boss1&amp;quot;,&amp;quot;boss2&amp;quot;,&amp;quot;boss3&amp;quot;,&amp;quot;boss4&amp;quot;}

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostDefensiveSettings_Spellsteal_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireDefensiveSettings_Spellsteal_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneDefensiveSettings_Spellsteal_enable then return false end

-- Not an attackable target
if not UnitExists(&amp;quot;target&amp;quot;) or not UnitIsEnemy(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) or not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) then return false end

-- Unit is dead, pass!
if UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) then return false end

for i=1,#targets do
	for k=1,40 do
		if select(9,UnitBuff(targets[i],k)) ~= nil then
			CastSpellByName(GetSpellInfo(30449),targets[i]) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Blink</Name><Default>false</Default><SpellID>1953</SpellID><Actions></Actions><Lua>if Nova_Blink == 1 then
SpellStopCasting()
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Evocation</Name><Default>false</Default><SpellID>12051</SpellID><Actions></Actions><Lua>if IsPlayerSpell(114003) then return false end

if PQR_IsMoving(0.1) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end
if Nova_Evocation == 1 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Ice Floes</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not IsPlayerSpell(108839) then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_IceFloes_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_IceFloes_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_IceFloes_enable then return false end

if PQR_IsMoving(0.5)
and PQR_SpellAvailable(108839) then
CastSpellByName(GetSpellInfo(108839),&amp;quot;player&amp;quot;)
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3. Fire Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_FIRE_DEF then return false end
if SOAPBOX_FIRE_OFF then return false end

		local Defensive = {
			name	= &amp;quot;Fire Defensive Settings&amp;quot;,
			author	= &amp;quot;Soapbox&amp;quot;,
			abilities = {
				{ 	name	= &amp;quot;Healthstone&amp;quot;,
					enable	= true,
					widget	= {	type = &amp;quot;numBox&amp;quot;,
						value	= 50,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Mana Gem&amp;quot;,
					enable	= true,
					widget	= {	type = &amp;quot;numBox&amp;quot;,
						value	= 70,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Symbiosis&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 25,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Raid Buffing&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Spellsteal&amp;quot;,
					enable	= false,
				},
				{ 	name	= &amp;quot;Remove Curse&amp;quot;,
					enable	= false,
				},
			},
		}
		local Offensive = {
			name	= &amp;quot;Fire Offensive Settings&amp;quot;,
			author	= &amp;quot;Soapbox&amp;quot;,
			abilities = {
				{  name = &amp;quot;Boss Functions&amp;quot;,
				tooltip = &amp;quot;Enabls the use of special functions on certain raid bosses&amp;quot;,
				enable = false,
				newSection = true,	
				},
				{ 	name	= &amp;quot;Combat Pause&amp;quot;,
					enable	= true,
				},
								{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
							{ 	name	= &amp;quot;Auto Target Next Enemy&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Potions&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Racials&amp;quot;,
					enable	= true,
				},
								{ 	name	= &amp;quot;Auto Invoke&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Alter Time&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Combustion&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Mirror Image&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Presence Of Mind&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Ice Floes&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Frag Belt&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Synapse Springs&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Boss Cooldown&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Focus Dotting&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Boss Dotting&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Mouseover Dotting&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Combustion Threshold&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						min		= 500,
						max 	= 150000,
						width 	= 60,
						value	= 15000,
						step	= 500,
					},
				},
			},
		}
		SOAPBOX_FIRE_DEF = PQI:AddRotation(Defensive)
		SOAPBOX_FIRE_OFF = PQI:AddRotation(Offensive)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3. Frost Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_FROST_DEF then return false end
if SOAPBOX_FROST_OFF then return false end

		local Defensive = {
			name	= &amp;quot;Frost Defensive Settings&amp;quot;,
			author	= &amp;quot;Soapbox&amp;quot;,
			abilities = {
				{ 	name	= &amp;quot;Healthstone&amp;quot;,
					enable	= true,
					widget	= {	type = &amp;quot;numBox&amp;quot;,
						value	= 50,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Mana Gem&amp;quot;,
					enable	= true,
					widget	= {	type = &amp;quot;numBox&amp;quot;,
						value	= 70,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Symbiosis&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 25,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Raid Buffing&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Spellsteal&amp;quot;,
					enable	= false,
				},
				{ 	name	= &amp;quot;Remove Curse&amp;quot;,
					enable	= false,
				},
			},
		}
		local Offensive = {
			name	= &amp;quot;Frost Offensive Settings&amp;quot;,
			author	= &amp;quot;Soapbox&amp;quot;,
			abilities = {
				{  name = &amp;quot;Boss Functions&amp;quot;,
				tooltip = &amp;quot;Enabls the use of special functions on certain raid bosses&amp;quot;,
				enable = false,
				newSection = true,	
				},
				{ 	name	= &amp;quot;Combat Pause&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;This setting allows you to enable and set how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
							{ 	name	= &amp;quot;Auto Target Next Enemy&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Potions&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Racials&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Invoke&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Alter Time&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Frozen Orb&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Pet Freeze&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Icy Veins&amp;quot;,
					enable	= true,
				},
				
				{ 	name	= &amp;quot;Presence Of Mind&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Mirror Image&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Ice Floes&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Frag Belt&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Synapse Springs&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Boss Cooldown&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Focus Dotting&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Boss Dotting&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Mouseover Dotting&amp;quot;,
					enable	= true,
				},

			},
		}
		SOAPBOX_FROST_DEF = PQI:AddRotation(Defensive)
		SOAPBOX_FROST_OFF = PQI:AddRotation(Offensive)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Alter Time</Name><Default>false</Default><SpellID>108978</SpellID><Actions></Actions><Lua>local name2,_,_,count2,_,_,expires2 = UnitBuffID(&amp;quot;player&amp;quot;,44544)
if GetSpellCD(108978) &amp;gt; 1 then return false end
if Nova_Cooldowns ~= 1 then return false end
if not PQI_SoapboxFrostOffensiveSettings_AlterTime_enable then return false end
if not BuffedBoss() then return false end
if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(12051) then return false end
--if Bloodlust then
--	if IcyVeins == false then
--		if not UnitBuffID(&amp;quot;player&amp;quot;, 57761) then
--			if name2 then
	--			if count2 &amp;lt; 2 then
	--			return false
	--			end
	--		else
--			return false
--			end
--		elseif not name2 then
--		return false
--		end
--	elseif not UnitBuffID(&amp;quot;player&amp;quot;,131078) then
--	return false
--	end
--end

if not IsPlayerSpell(108978) then return false end
if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
if Nova_AOE == 1 then return false end
if PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then return false 
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;,12472) or UnitBuffID(&amp;quot;player&amp;quot;,131078) or Bloodlust then
	 if UnitBuffID(&amp;quot;player&amp;quot;, 57761) and name2 and count2 &amp;gt; 1 --and ((UnitBuffID(&amp;quot;player&amp;quot;,12472) or UnitBuffID(&amp;quot;player&amp;quot;,131078)) or (IsPlayerSpell(56364) and not PQR_SpellAvailable(131078)) or (not IsPlayerSpell(56364) and not PQR_SpellAvailable(12472))) 
	 then
	 	if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxFrostOffensiveSettings_Racials_enable then
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	 	elseif IsPlayerSpell(12043) and PQR_SpellAvailable(12043) and not UnitBuffID(&amp;quot;player&amp;quot;,12043) and PQI_SoapboxFrostOffensiveSettings_PresenceOfMind_enable then
		Presence = true
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;)
		else
		return true
		end
 	elseif AlterTimeQueue &amp;gt;= 1 then
	 	if IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxFrostOffensiveSettings_Racials_enable then
		SpellStopCasting()
		CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
	 	elseif IsPlayerSpell(12043) and PQR_SpellAvailable(12043) and not UnitBuffID(&amp;quot;player&amp;quot;,12043) and PQI_SoapboxFrostOffensiveSettings_PresenceOfMind_enable then
		SpellStopCasting()
		Presence = true
		CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;)
		else
		return true
		end
	end
end</Lua><RecastDelay>180000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Ice Lance (Moving)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
if Nova_AOE == 1 then return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(30455) then return false end

if not PQR_IsMoving(0.3) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,30455) then
	CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Fire Blast (Moving)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
if Nova_AOE == 1 then return false end
-- Scorch Level Check
if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(2136) then return false end

if not PQR_IsMoving(0.3) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,2136) then
	CastSpellByName(GetSpellInfo(2136),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Frostbolt</Name><Default>false</Default><SpellID>116</SpellID><Actions></Actions><Lua>if Presence == true then return false end
local TargetValidation = TargetValidation
local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local Frostbolt = select(7,GetSpellInfo(116))/1000
if Nova_AOE == 1 then return false end
if AlterTime then
if AlterTimetimer - GetTime() &amp;lt;= Frostbolt+0.5 then
return false end end

if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,116) then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Cancel Alter Time</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local Frostbolt = select(7,GetSpellInfo(116))/1000
if POM == true or Pyro == true then return false end

if AlterTime then
	if not UnitBuffID(&amp;quot;player&amp;quot;,12043)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 44544)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 57761)
	and AlterTimetimer - GetTime() &amp;lt; Frostbolt+0.5 then
	SpellCancelQueuedSpell()
	CastSpellByName(GetSpellInfo(108978),&amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Ice Lance</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,44544)
local Frost,_,_,_,_,_,Frosttimer = UnitBuffID(&amp;quot;player&amp;quot;,44544)
if Nova_AOE == 1 then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;, 44544) then return false end
if not IsPlayerSpell(30455) then return false end


if name then
	if Nova_Cooldowns == 1 and PQI_SoapboxFrostOffensiveSettings_IcyVeins_enable and (not PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable or SpecialUnit()) then
		if not BuffedBoss() then
			if TargetValidation(&amp;quot;target&amp;quot;,30455) then
			CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
			end
		elseif Frosttimer - GetTime() &amp;lt; 2 then
			if TargetValidation(&amp;quot;target&amp;quot;,30455) then
			CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
			end
		elseif GetSpellCD(108978) &amp;lt; 1 then
			if not IcyVeins1 and not IcyVein2 and not Bloodlust then
				if TargetValidation(&amp;quot;target&amp;quot;,30455) then
				CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
				end
			elseif AlterTimeQueue == 0 and count &amp;gt; 1 and not UnitBuffID(&amp;quot;player&amp;quot;, 57761) then
				if TargetValidation(&amp;quot;target&amp;quot;,30455) then
				CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
				end
			end
		elseif TargetValidation(&amp;quot;target&amp;quot;,30455) then
		CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
	--	or (itemCheck(MageT16) &amp;gt; 1 and count&amp;gt;1 and ((IcyVeins == false and (IVCD &amp;gt; 2 or (IVCD &amp;lt; 1 and Bloodlust))) or (IcyVeins == true and IV2CD &amp;gt; 2))) 
	--	or (itemCheck(MageT16) &amp;lt; 2 and count&amp;gt;0 and ((IcyVeins == false and (IVCD &amp;gt; 2 or (IVCD &amp;lt; 1 and Bloodlust))) or (IcyVeins == true and IV2CD &amp;gt; 2))) then
	--		if TargetValidation(&amp;quot;target&amp;quot;,30455) then
	--		CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
		--	end
		end
	elseif TargetValidation(&amp;quot;target&amp;quot;,30455) then
	CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Frostfire Bolt</Name><Default>false</Default><SpellID>44614</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 57761) and not UnitBuffID(&amp;quot;player&amp;quot;, 12043) then return false end
if Nova_AOE == 1 then return false end

if Nova_Cooldowns == 1 and PQI_SoapboxFrostOffensiveSettings_IcyVeins_enable and (not PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable or SpecialUnit()) then
	if not BuffedBoss() then
 		if TargetValidation(&amp;quot;target&amp;quot;,44614) then
		CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
		end
	elseif GetSpellCD(108978) &amp;lt; 1 then
		if not IcyVeins1 and not IcyVein2 and not Bloodlust then
			if TargetValidation(&amp;quot;target&amp;quot;,44614) then
			CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
			end
		end
	elseif TargetValidation(&amp;quot;target&amp;quot;,44614) then
	CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
	
--	elseif IcyVeins == false and (IVCD &amp;gt; 2 or (Bloodlust and ATCD &amp;gt; 1) or (FrostFire and FrostFiretimer - GetTime() &amp;lt; 3)) then
--	if TargetValidation(&amp;quot;target&amp;quot;,44614) then
	--	CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
	--	end
--	elseif IcyVeins == true and IV2CD &amp;gt; 9 then
--		if TargetValidation(&amp;quot;target&amp;quot;,44614) then
	--	CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
--		end
	end
elseif TargetValidation(&amp;quot;target&amp;quot;,44614) then
CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Ice Lance (AlterTime)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
local Frost,_,_,Frostcount,_,_,Frosttimer = UnitBuffID(&amp;quot;player&amp;quot;,44544)


if not UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;, 44544) then return false end
if not IsPlayerSpell(30455) then return false end


if TargetValidation(&amp;quot;target&amp;quot;,30455) then
CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Frostfire Bolt (AlterTime)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 57761) and not UnitBuffID(&amp;quot;player&amp;quot;, 12043) then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,44614) then
CastSpellByName(GetSpellInfo(44614),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Presence of Mind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Are we saving Cooldowns?
if Nova_Cooldowns ~= 1 then return false end
if Nova_AOE == 1 then return false end
if not PQI_SoapboxFrostOffensiveSettings_PresenceOfMind_enable then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
	if PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end



if IsPlayerSpell(12043) then
	if PQR_SpellAvailable(12043) then
		if PQI_SoapboxFrostOffensiveSettings_IcyVeins_enable then
			if (IcyVeins == true and IV2CD &amp;gt; 59 and not IcyVeins1 and not IcyVeins2)
			or (IcyVeins == false and IVCD &amp;gt; 59 and not IcyVeins1 and not IcyVeins2)
			or UnitBuffID(&amp;quot;player&amp;quot;, 12472) and ATCD &amp;gt; 10 then
			CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;) return true	
			end
		else
		CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Icy Veins</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local name2,_,_,count2,_,_,expires2 = UnitBuffID(&amp;quot;player&amp;quot;,44544)
if Nova_AOE == 1 then return false end
if PQR_IsMoving(0.1) then return false end
if Nova_Cooldowns ~= 1 then return false end
if not PQI_SoapboxFrostOffensiveSettings_IcyVeins_enable then return false end
if IcyVeins == false and Bloodlust then return false end
if not BuffedBoss() then return false end
if not TargetValidation(&amp;quot;target&amp;quot;,30455) then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
	if PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end

if not UnitExists(&amp;quot;target&amp;quot;) then return false end

if IcyVeins == false then
	if Bloodlust or UnitBuffID(&amp;quot;player&amp;quot;, 26297) then return false end
	if PQR_SpellAvailable(12472) then
		if GetSpellCD(108978) &amp;lt; 1
		--if ((UnitBuffID(&amp;quot;player&amp;quot;, 57761) and name2 and count2&amp;gt;0) or (name2 and count2&amp;gt;1))
		or (Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 22 and NOTEB == false)  then
			CastSpellByName(GetSpellInfo(12472),&amp;quot;player&amp;quot;) return true
		end
	end
elseif PQR_SpellAvailable(131078) then
	if GetSpellCD(108978) &amp;lt; 1
	--if ((UnitBuffID(&amp;quot;player&amp;quot;, 57761) and name2 and count2&amp;gt;0) or (name2 and count2&amp;gt;1))
	or (Targethealth &amp;lt; 75 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 22 and NOTEB == false) then
	CastSpellByName(GetSpellInfo(12472),&amp;quot;player&amp;quot;) return true
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Frozen Orb</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrostOffensiveSettings_AutoFrozenOrb_enable and Nova_Orb ~= 1 then return false end


if not PQR_SpellAvailable(84714) then return false end

if TargetValidation(&amp;quot;target&amp;quot;, 116) then
CastSpellByName(GetSpellInfo(84714),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Synapse Springs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_SyapseSprings_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_SynapseSprings_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_SynapseSprings_enable then return false end

-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

local TargetValidation = TargetValidation
local Gloves = GetInventoryItemID(&amp;quot;player&amp;quot;, 10)

-- If we don&amp;apos;t have Engineering, don&amp;apos;t bother accessing.
if not hasEngi then return false end

-- Don&amp;apos;t use outside of Combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Gloves) &amp;gt; 0 then return false end

-- Cast Engineering Gloves
UseItemByName(Gloves)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Control Pet</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_WElm = PQ_WElm

-- In case we haven&amp;apos;t learned it yet for some reason!
if not IsPlayerSpell(31687) then return false end

-- Don&amp;apos;t try to cast while we&amp;apos;re falling or flying.
if IsFalling() or IsFlying() then return false end

-- Let&amp;apos;s try to not spam the ability as well..
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(31687) then return false end

-- We&amp;apos;re on a CD
if not PQR_SpellAvailable(31687) then return false end

if not UnitExists(&amp;quot;pet&amp;quot;) then
	CastSpellByName(GetSpellInfo(31687),nil) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Freeze</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Freeze == 1  or PQI_SoapboxFrostOffensiveSettings_AutoPetFreeze_enable then 
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end
if PQR_SpellAvailable(33395) then
if UnitExists(&amp;quot;mouseover&amp;quot;) 
and TargetValidation(&amp;quot;mouseover&amp;quot;,116) then 
	SpellCancelQueuedSpell()
	CastSpellByName(GetSpellInfo(33395),nil)
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Pause---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Pause ~= 1 then return false end

return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Cancel Alter Time</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Pyroblast,_,_,_,_,_,Pyroblasttimer = UnitBuffID(&amp;quot;player&amp;quot;,48108)
local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local POM,_,_,_,_,_,POMtimer = UnitBuffID(&amp;quot;player&amp;quot;,12043)
local Ignite,_,_,_,_,_,Ignitetimer = UnitDebuffID(&amp;quot;target&amp;quot;,12654)
if Presence == true then return false end
--if UnitBuffID(&amp;quot;player&amp;quot;,48108) then return false end
--if UnitBuffID(&amp;quot;player&amp;quot;,12043) then return false end
--if AlterTime and AlterTimetimer - GetTime() &amp;gt; 5 then return false end
if AlterTime then
	if AlterTimetimer - GetTime() &amp;lt; 4 then
	--if UnitBuffID(&amp;quot;player&amp;quot;, 48107) then
	--	if Ignite and Ignitetimer - GetTime() &amp;lt; 3 then
	--	CastSpellByName(GetSpellInfo(108978),&amp;quot;player&amp;quot;)
	--	end
--	else 
	CastSpellByName(GetSpellInfo(108978),&amp;quot;player&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Blizzard</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false end

local haste = Round(UnitSpellHaste(&amp;quot;player&amp;quot;),2)

if haste &amp;lt; 50 then return false end


if PQR_SpellAvailable(10) then 
SpellCancelQueuedSpell()
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	CastSpellByName(GetSpellInfo(10),nil)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Arcane Explosion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false end

local haste = Round(UnitSpellHaste(&amp;quot;player&amp;quot;),2)

if haste &amp;gt; 50 then return false end

if PQR_SpellAvailable(1449) then
SpellCancelQueuedSpell() 
CastSpellByName(GetSpellInfo(1449),nil) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---0. Spec Check---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() == 3 then
	Spec = &amp;quot;Frost&amp;quot;
	PQR_SwapRotation(&amp;quot;Frost (Soapbox Mage Serial AFF2004)&amp;quot;) 
elseif GetSpecialization() == 2 then
	Spec = &amp;quot;Fire&amp;quot;
	PQR_SwapRotation(&amp;quot;Fire (Soapbox Mage Serial AFF2004)&amp;quot;)
elseif GetSpecialization() == 1 then
	Spec = &amp;quot;Arcane&amp;quot;
	PQR_SwapRotation(&amp;quot;Arcane (Soapbox Mage Serial AFF2004)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Cone of Cold</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false end

if PQR_SpellAvailable(120) then
SpellCancelQueuedSpell() CastSpellByName(GetSpellInfo(120),nil) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Flamestrike (Mouseover)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Flamestrike Level Check
if not IsPlayerSpell(2120) then return false end

if Nova_Flamestrike ~= 1 then return false end

if PQR_SpellAvailable(2120) then
		CastSpellByName(GetSpellInfo(2120),nil)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Mirror Image</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13|/use 14|/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>local TargetValidation = TargetValidation

-- Mirror Image Level Check
if not IsPlayerSpell(55342) then return false end
if not BuffedBoss() then return false end
-- Disable if disabled in PQInterface
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_MirrorImage_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_MirrorImage_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_MirrorImage_enable then return false end

-- Disable if we&amp;apos;re saving cooldowns
if Nova_Cooldowns ~= 1 then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 3 then
	if PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 2 then
	if PQI_SoapboxFireOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
elseif GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
	if PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end

if not PQR_SpellAvailable(55342) then return false end


if TargetValidation(&amp;quot;target&amp;quot;, 30455) then
CastSpellByName(GetSpellInfo(55342),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;,104934)
or UnitBuffID(&amp;quot;player&amp;quot;,104269) then
return false
end

if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(30482)
	and UnitBuffID(&amp;quot;player&amp;quot;,30482) then SpellStopCasting() return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(30482) then return false end
if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(7302) and UnitBuffID(&amp;quot;player&amp;quot;,7302) then
	RunMacroText(&amp;quot;/stopcasting&amp;quot;)
end
if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then return false end


if GetSpecialization() == 3 then
	if IsPlayerSpell(7302) and not UnitBuffID(&amp;quot;player&amp;quot;,7302) then
		CastSpellByName(GetSpellInfo(7302),&amp;quot;player&amp;quot;) return true
	end
end



if GetSpecialization() == 2 and not IsPlayerSpell(30482) then return false end


if GetSpecialization() == 2 and not UnitBuffID(&amp;quot;player&amp;quot;,30482) then
	CastSpellByName(GetSpellInfo(30482),&amp;quot;player&amp;quot;)
	return true
end

-- Arcane Brilliance Level Check
if not IsPlayerSpell(1459) then return false end

-- Buff Brilliance if we don&amp;apos;t have a Spellpower buff
if not AuraInfo(5,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(1459),&amp;quot;player&amp;quot;)
	return true
end

-- Buff Brilliance if we don&amp;apos;t have a Crit buff
if not AuraInfo(7,&amp;quot;player&amp;quot;) then
	CastSpellByName(GetSpellInfo(1459),&amp;quot;player&amp;quot;)
	return true
end

if (GetSpecialization(&amp;quot;player&amp;quot;) == 2 and PQI_SoapboxFireDefensiveSettings_RaidBuffing_enable) 
or (GetSpecialization(&amp;quot;player&amp;quot;) == 3 and PQI_SoapboxFrostDefensiveSettings_RaidBuffing_enable) 
or (GetSpecialization(&amp;quot;player&amp;quot;) == 1 and PQI_SoapboxArcaneDefensiveSettings_RaidBuffing_enable) then
	-- Group setting
	if IsInRaid() then group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then group = &amp;quot;party&amp;quot;
	else return false end
	
	for i=1,GetNumGroupMembers() do
		local member = group..i
		
		-- Spellpower Multiplier
		if not AuraInfo(5,member) and IsSpellInRange(GetSpellInfo(1459),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
			CastSpellByName(GetSpellInfo(1459),member)
			return true
		end
		
		-- Crit Multiplier
		if not AuraInfo(7,member) and IsSpellInRange(GetSpellInfo(1459),member) == 1 and IsLineOfSight(member, 5) and not UnitIsDeadOrGhost(member) then
			CastSpellByName(GetSpellInfo(1459),member)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Presence of Mind</Name><Default>false</Default><SpellID>12043</SpellID><Actions></Actions><Lua>local ATCD = GetSpellCooldown(108978) + select(2,GetSpellCooldown(108978)) - GetTime()

if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_PresenceOfMind_enable then return false end
-- Are we saving Cooldowns?
if Nova_Cooldowns ~= 1 then return false end

if PQR_SpellAvailable(11129) and Pyroimaniac == false then return false end


if not BuffedBoss() then return false end
if not PQR_SpellAvailable(11129) then return false end
--if not PQR_SpellAvailable(108978) then return false end



--	-- Sync with Alter Time
	if IsPlayerSpell(12043) then
		if PQR_SpellAvailable(12043) then
			if (PQR_SpellAvailable(108978) and Pyro == true)
			or ((ATCD &amp;gt; 60 or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 5 and not NOTEB() == false)) and UnitBuffID(&amp;quot;player&amp;quot;, 48108)) then
			CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;) return true
			end
		end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Frag Belt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_FragBelt_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_FragBelt_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_FragBelt_enable then return false end
-- If we don&amp;apos;t know Engineering. Don&amp;apos;t activate.
for i=1,9 do
	if select(7,GetProfessionInfo(i)) == 202 then hasEngi = true end
end

local TargetValidation = TargetValidation
local Belt = GetInventoryItemID(&amp;quot;player&amp;quot;, 6)

if not hasEngi then return false end

-- Don&amp;apos;t use outside of combat
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then return false end

-- Don&amp;apos;t use it if it&amp;apos;s on cooldown as well!
if GetItemCooldown(Belt) &amp;gt; 0 then return false end

-- Cast Frag Belt on target during Metamorphosis
if UnitIsUnit(&amp;quot;target&amp;quot;, &amp;quot;mouseover&amp;quot;) then
	UseItemByName(Belt)
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Power</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 13|/use 14|/use 10|/script UIErrorsFrame:Clear()</Actions><Lua>if Nova_Cooldowns ~= 1 then return false end
if not PQI_SoapboxArcaneOffensiveSettings_ArcanePower_enable then return false end
if not BuffedBoss() then return false end
        local name,_,_,count,_,_,expires = UnitDebuffID(&amp;quot;player&amp;quot;,36032)
        local name2,_,_,count2,_,_,expires2 = UnitBuffID(&amp;quot;player&amp;quot;,79683)

        if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
        if PQR_IsMoving(0.1) then return false end

        if ArcanePower == true then Duration = 35
        else Duration = 20 end

if PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable then
if not SpecialUnit() then return false end
end

if not PQR_SpellAvailable(12042) then return false end


if (name and count &amp;gt; 3 and name2 and count2 &amp;gt; 1)
or Playermana &amp;lt; 70
or (NOTEB == false and Targethealth &amp;lt; 35 and T2D(&amp;quot;target&amp;quot;) &amp;lt; 20) then
CastSpellByName(GetSpellInfo(12042),&amp;quot;player&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Barrage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

local name2,_,_,count2,_,_,expires2 = UnitDebuffID(&amp;quot;player&amp;quot;,36032)
if UnitBuffID(&amp;quot;player&amp;quot;,79683) and Nova_AOE ~= 1 then return false end

if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 240000
or (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(30451) and (UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 240000 + select(4,GetSpellInfo(30451)))) then
	if Nova_Cooldowns ~= 1 
	or (Nova_Cooldowns == 1 and PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable and not SpecialUnit())
	or (Nova_Cooldowns == 1 and not PQR_SpellAvailable(12042)) then
		if TargetValidation(&amp;quot;target&amp;quot;,44425) then
		CastSpellByName(GetSpellInfo(44425),&amp;quot;target&amp;quot;) return true
		end
	end
end


if (name2 and count2&amp;gt;3 and Playermana &amp;lt; 86) or (Nova_AOE == 1 and name2 and count2 &amp;gt; 1) then
	if TargetValidation(&amp;quot;target&amp;quot;,44425) then
	CastSpellByName(GetSpellInfo(44425),&amp;quot;target&amp;quot;) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Barrage (Alter Time)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)

if AlterTime then
	if AlterTimetimer - GetTime() &amp;lt; 2 then
		if TargetValidation(&amp;quot;target&amp;quot;,44425) then
		CastSpellByName(GetSpellInfo(44425),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Blast</Name><Default>false</Default><SpellID>30451</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end

if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

local bonus,_,_,bcount,_,_,bexpires = UnitBuffID(&amp;quot;player&amp;quot;,145252)

if bonus then
	if bcount == 4 or bexpires - GetTime() &amp;lt; 3 then
		if TargetValidation(&amp;quot;target&amp;quot;,30451) then
		CastSpellByName(GetSpellInfo(30451),&amp;quot;target&amp;quot;) return true
		end
	end
end

if TargetValidation(&amp;quot;target&amp;quot;,30451) then
CastSpellByName(GetSpellInfo(30451),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>50</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Blast (Alter Time)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local ABlast = select(7,GetSpellInfo(30451))/1000
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end
if AlterTime then
	if AlterTimetimer - GetTime() &amp;gt; ABlast+0.2  or UnitBuffID(&amp;quot;player&amp;quot;, 12043) then
		if TargetValidation(&amp;quot;target&amp;quot;,30451) then
		CastSpellByName(GetSpellInfo(30451),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Alter Time</Name><Default>false</Default><SpellID>108978</SpellID><Actions>/use Brilliant Mana Gem</Actions><Lua>if Nova_Cooldowns ~= 1 then return false end
if not PQI_SoapboxArcaneOffensiveSettings_AlterTime_enable then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;,12042) then return false end
if not IsPlayerSpell(108978) then return false end
if not PQR_SpellAvailable(108978) then return false end
if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
if not BuffedBoss() then return false end

if PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable then
	if not SpecialUnit() then return false 
	end
end






if IsPlayerSpell(12043) and PQR_SpellAvailable(12043) and not UnitBuffID(&amp;quot;player&amp;quot;,12043) and PQI_SoapboxArcaneOffensiveSettings_PresenceOfMind_enable then
CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;)
elseif IsPlayerSpell(26297) and PQR_SpellAvailable(26297) and not UnitBuffID(&amp;quot;player&amp;quot;,26297) and PQI_SoapboxArcaneOffensiveSettings_Racials_enable then
CastSpellByName(GetSpellInfo(26297),&amp;quot;player&amp;quot;)
else
return true
end</Lua><RecastDelay>180000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Missiles (Alter Time)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)

if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if PQR_SpellAvailable(5143) then
	if AlterTime then
		if TargetValidation(&amp;quot;target&amp;quot;,5143) then
		CastSpellByName(GetSpellInfo(5143),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---3. Arcane Table---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SOAPBOX_ARCANE_DEF then return false end
if SOAPBOX_ARCANE_OFF then return false end

		local Defensive = {
			name	= &amp;quot;Arcane Defensive Settings&amp;quot;,
			author	= &amp;quot;Soapbox&amp;quot;,
			abilities = {
				{ 	name	= &amp;quot;Healthstone&amp;quot;,
					enable	= true,
					widget	= {	type = &amp;quot;numBox&amp;quot;,
						value	= 50,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Mana Gem&amp;quot;,
					enable	= true,
					widget	= {	type = &amp;quot;numBox&amp;quot;,
						value	= 70,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Symbiosis&amp;quot;,
					enable	= true,
					widget	= { type = &amp;quot;numBox&amp;quot;,
						value	= 25,
						step	= 5,
					},
				},
				{ 	name	= &amp;quot;Raid Buffing&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Spellsteal&amp;quot;,
					enable	= false,
				},
				{ 	name	= &amp;quot;Remove Curse&amp;quot;,
					enable	= false,
				},
			},
		}
		local Offensive = {
			name	= &amp;quot;Arcane Offensive Settings&amp;quot;,
			author	= &amp;quot;Soapbox&amp;quot;,
			abilities = {
				{  name = &amp;quot;Boss Functions&amp;quot;,
				tooltip = &amp;quot;Enabls the use of special functions on certain raid bosses&amp;quot;,
				enable = false,
				newSection = true,	
				},
				{ 	name	= &amp;quot;Combat Pause&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Target Next Enemy&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Spell Queue Type&amp;quot;,
			    tooltip = &amp;quot;Allows you to enable and select how you want Spell Queue overriding to work. It will either queue up the spell on the next GCD when you mouseover or click the ability.&amp;quot;,
				enable	= true,
				newSection  = true,
				widget	= { type = &amp;quot;select&amp;quot;,
					tooltip = &amp;quot;Select how you want to queue the next spell.&amp;quot;,
					values	= {
						&amp;quot;Click&amp;quot;,
						&amp;quot;Mouseover&amp;quot;,
					},
					width	= 80,
				},
				},
				{ 	name	= &amp;quot;Potions&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Racials&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Auto Invoke&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Alter Time&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Arcane Power&amp;quot;,
					enable	= true,
				},
				
				{ 	name	= &amp;quot;Presence Of Mind&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Mirror Image&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Ice Floes&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Frag Belt&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Synapse Springs&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Boss Cooldown&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Focus Dotting&amp;quot;,
					enable	= true,
					newSection  = true,
				},
				{ 	name	= &amp;quot;Boss Dotting&amp;quot;,
					enable	= true,
				},
				{ 	name	= &amp;quot;Mouseover Dotting&amp;quot;,
					enable	= true,
				},

			},
		}
		SOAPBOX_ARCANE_DEF = PQI:AddRotation(Defensive)
		SOAPBOX_ARCANE_OFF = PQI:AddRotation(Offensive)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Missiles</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
if Nova_AOE == 1 then return false end
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end
local name2,_,_,count2,_,_,expires2 = UnitDebuffID(&amp;quot;player&amp;quot;,36032)
local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,79683)
local bonus,_,_,bcount,_,_,bexpires = UnitBuffID(&amp;quot;player&amp;quot;,145252)

if IsPlayerSpell(62210) then
	if PQR_SpellAvailable(12042) then
		if Nova_Cooldowns == 1 and (SpecialUnit() or not PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable) then
		return false
		end
	end
end

if name and expires - GetTime() &amp;lt; 3 then
	if TargetValidation(&amp;quot;target&amp;quot;,5143) then
	CastSpellByName(GetSpellInfo(5143),&amp;quot;target&amp;quot;) return true
	end
end

if name then
	if count == 2 and name2 and count2 &amp;gt; 2 and count2 &amp;lt; 4 then
		if TargetValidation(&amp;quot;target&amp;quot;,5143) then
		CastSpellByName(GetSpellInfo(5143),&amp;quot;target&amp;quot;) return true
		end
	end
end

if UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 240000
or (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(30451) and (UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 240000 + select(4,GetSpellInfo(30451)))) then
	if Nova_Cooldowns ~= 1 
	or (Nova_Cooldowns == 1 and PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable and not SpecialUnit())
	or (Nova_Cooldowns == 1 and not PQR_SpellAvailable(12042)) then
		if TargetValidation(&amp;quot;target&amp;quot;,5143) then
		CastSpellByName(GetSpellInfo(5143),&amp;quot;target&amp;quot;) return true
		end
	end
end
if name then
	if name2 and count2 &amp;gt; 3 then
		if TargetValidation(&amp;quot;target&amp;quot;,5143) then
		CastSpellByName(GetSpellInfo(5143),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Cone of Cold</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false end

if PQR_SpellAvailable(120) and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 13 then
SpellCancelQueuedSpell() CastSpellByName(GetSpellInfo(120),nil) return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Explosion</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_AOE ~= 1 then return false end

if PQR_SpellAvailable(1449) then
	if (Explosion == false and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 11) 
	or (Explosion == true and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 16) then
	SpellCancelQueuedSpell() 
	CastSpellByName(GetSpellInfo(1449),nil) return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Refresh</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Charges,_,_,_,_,_,Chargestimer = UnitDebuffID(&amp;quot;player&amp;quot;,114664)
if PQR_SpellAvailable(1449) then
if (Explosion == false and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 12) 
or (Explosion == true and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 17) then
	if Charges and Chargestimer - GetTime() &amp;lt;= 3 then
	CastSpellByName(GetSpellInfo(1449),nil) return true end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Presence of Mind</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Are we saving Cooldowns?
if Nova_Cooldowns ~= 1 then return false end

if not PQI_SoapboxArcaneOffensiveSettings_PresenceOfMind_enable then return false end

if GetSpecialization(&amp;quot;player&amp;quot;) == 1 then
	if PQI_SoapboxArcaneOffensiveSettings_BossCooldown_enable then
		if not SpecialUnit() then
		return false
		end
	end
end



if IsPlayerSpell(12043) then
	if PQR_SpellAvailable(12043) then
		if PQI_SoapboxArcaneOffensiveSettings_ArcanePower_enable then
			if APCD &amp;gt; 59 then
			CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;) return true	
			end
		else
		CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Barrage (Moving)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(44425) then return false end

if not PQR_IsMoving(0.3) then return false end


	if TargetValidation(&amp;quot;target&amp;quot;,44425) then
	CastSpellByName(GetSpellInfo(44425),&amp;quot;target&amp;quot;) return true
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Ice Lance (Moving)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(30455) then return false end

if not PQR_IsMoving(0.3) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,30455) then
	CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Fire Blast (Moving)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(2136) then return false end

if not PQR_IsMoving(0.3) then return false end

if TargetValidation(&amp;quot;target&amp;quot;,2136) then
	CastSpellByName(GetSpellInfo(2136),&amp;quot;target&amp;quot;) return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Channeling---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(12051) 
or UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(10)
or UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(133) 
then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Fireball High</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Pyroblast Level Check
if not IsPlayerSpell(133) then return false end
local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
if Altered == true or PostAlterPyro == true then return false end
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if AlterTime then return false end

if Fireball == true then
CastSpellByName(GetSpellInfo(133),&amp;quot;target&amp;quot;)
PQR_DelayRotation(0.3)
return true
end

-- Don&amp;apos;t use when we don&amp;apos;t have any procs
if UnitBuffID(&amp;quot;player&amp;quot;,48108) and UnitBuffID(&amp;quot;player&amp;quot;,48107) then 
CastSpellByName(GetSpellInfo(133),&amp;quot;target&amp;quot;)
Pyroblast = true
PQR_DelayRotation(0.3)
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Inferno Blast High</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
if PQR_IsMoving(0.3) then
	if (not UnitBuffID(&amp;quot;player&amp;quot;,48107) and UnitBuffID(&amp;quot;player&amp;quot;,48108))
	or (UnitBuffID(&amp;quot;player&amp;quot;,48107) and not UnitBuffID(&amp;quot;player&amp;quot;,48108)) then
		if TargetValidation(&amp;quot;target&amp;quot;,108853) then
		PQR_DelayRotation(0.3)
		CastSpellByName(GetSpellInfo(108853),&amp;quot;target&amp;quot;) return true
		end
	end
end
if Pyroblast == true then
return false
end
-- Inferno Blast Level Check
if not IsPlayerSpell(108853) then return false end

-- Never ever overwrite Pyroblast! procs

if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(133) and UnitBuffID(&amp;quot;player&amp;quot;,48108) then return false end

if Fireball == nil or Fireball == false then
if UnitBuffID(&amp;quot;player&amp;quot;,48107) and not UnitBuffID(&amp;quot;player&amp;quot;,48108) then
if TargetValidation(&amp;quot;target&amp;quot;,108853) then
PQR_DelayRotation(0.3)
	CastSpellByName(GetSpellInfo(108853),&amp;quot;target&amp;quot;) return true
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Inferno Blast Low</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if PQR_IsMoving(0.3) then
	if (not UnitBuffID(&amp;quot;player&amp;quot;,48107) and UnitBuffID(&amp;quot;player&amp;quot;,48108))
	or (UnitBuffID(&amp;quot;player&amp;quot;,48107) and not UnitBuffID(&amp;quot;player&amp;quot;,48108)) then
		if TargetValidation(&amp;quot;target&amp;quot;,108853) then
		PQR_DelayRotation(0.3)
		CastSpellByName(GetSpellInfo(108853),&amp;quot;target&amp;quot;) return true
		end
	end
end
-- Inferno Blast Level Check
if not IsPlayerSpell(108853) then return false end

-- Never ever overwrite Pyroblast! procs

if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(133) and UnitBuffID(&amp;quot;player&amp;quot;,48108) then return false end

if not UnitBuffID(&amp;quot;player&amp;quot;,48107) and UnitBuffID(&amp;quot;player&amp;quot;,48108) then
if TargetValidation(&amp;quot;target&amp;quot;,108853) then
PQR_DelayRotation(0.3)
	CastSpellByName(GetSpellInfo(108853),&amp;quot;target&amp;quot;) return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Invoke</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Invoke,_,_,_,_,_,Invoketimer = UnitBuffID(&amp;quot;player&amp;quot;,116257)
local LB,_,_,_,_,_,LBtimer = UnitDebuffID(&amp;quot;target&amp;quot;,44457,&amp;quot;PLAYER&amp;quot;)
local NT,_,_,_,_,_,NTtimer = UnitDebuffID(&amp;quot;target&amp;quot;,114954,&amp;quot;PLAYER&amp;quot;)
local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local ArcanePower,_,_,_,_,_,ArcanePowertimer = UnitBuffID(&amp;quot;player&amp;quot;,12042)

if select(2,GetTalentRowSelectionInfo(6)) == 16
and select(2,GetTalentRowSelectionInfo(5)) == 15
and IsUsableSpell(12051)
and GetSpellCooldown(12051) == 0 
and not AlterTime
and not ArcanePower
and not PQR_IsMoving(1) then
	if not Invoke then
 	return true
 	end
 	if Invoke and Invoketimer - GetTime() &amp;lt; 2 then
  	return true
 	end
end

if select(2,GetTalentRowSelectionInfo(6)) == 16
and select(2,GetTalentRowSelectionInfo(5)) == 13
and IsUsableSpell(12051)
and not AlterTime
and not ArcanePower
and not PQR_IsMoving(1) then
	if not Invoke then
 	return true
 	end
 	if Invoke and Invoketimer - GetTime() &amp;lt; 2 then
  	return true
 	end
 	if Invoke and Invoketimer - GetTime() == 2 and NT and NTtimer - GetTime () &amp;gt; 1 then
  	return true
 	end
end

if select(2,GetTalentRowSelectionInfo(6)) == 16
and select(2,GetTalentRowSelectionInfo(5)) == 14
and not AlterTime
and not ArcanePower
and not PQR_IsMoving(1) then
	if not Invoke then
 	return true
 	end
 	if Invoke and Invoketimer - GetTime() &amp;lt; 2 then
  	return true
 	end
 	if Invoke and Invoketimer - GetTime() == 2 and LB and LBtimer - GetTime () &amp;gt; 1 then
  	return true
 	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Invoke</Name><Default>false</Default><SpellID>12051</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_AutoInvoke_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_AutoInvoke_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_AutoInvoke_enable then return false end

local Invoke,_,_,_,_,_,Invoketimer = UnitBuffID(&amp;quot;player&amp;quot;,116257)
local LB,_,_,_,_,_,LBtimer = UnitDebuffID(&amp;quot;target&amp;quot;,44457,&amp;quot;PLAYER&amp;quot;)
local NT,_,_,_,_,_,NTtimer = UnitDebuffID(&amp;quot;target&amp;quot;,114954,&amp;quot;PLAYER&amp;quot;)
local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local ArcanePower,_,_,_,_,_,ArcanePowertimer = UnitBuffID(&amp;quot;player&amp;quot;,12042)

if select(2,GetTalentRowSelectionInfo(6)) == 16
and select(2,GetTalentRowSelectionInfo(5)) == 15
and IsUsableSpell(12051)
and GetSpellCooldown(12051) == 0 
and not AlterTime
and not ArcanePower
and not PQR_IsMoving(1) then
	if not Invoke then
 	return true
 	end
 	if Invoke and Invoketimer - GetTime() &amp;lt; 2 then
  	return true
 	end
end

if select(2,GetTalentRowSelectionInfo(6)) == 16
and select(2,GetTalentRowSelectionInfo(5)) == 13
and IsUsableSpell(12051)
and not AlterTime
and not ArcanePower
and not PQR_IsMoving(1) then
	if not Invoke then
 	return true
 	end
 	if Invoke and Invoketimer - GetTime() &amp;lt; 2 then
  	return true
 	end
 	if Invoke and Invoketimer - GetTime() == 2 and NT and NTtimer - GetTime () &amp;gt; 1 then
  	return true
 	end
end

if select(2,GetTalentRowSelectionInfo(6)) == 16
and select(2,GetTalentRowSelectionInfo(5)) == 14
and not AlterTime
and not ArcanePower
and not PQR_IsMoving(1) then
	if not Invoke then
 	return true
 	end
 	if Invoke and Invoketimer - GetTime() &amp;lt; 2 then
  	return true
 	end
 	if Invoke and Invoketimer - GetTime() == 2 and LB and LBtimer - GetTime () &amp;gt; 1 then
  	return true
 	end
end</Lua><RecastDelay>5000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFrostOffensiveSettings_SpellQueueType_enable then return false end
local v=PQI_SoapboxFrostOffensiveSettings_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxFireOffensiveSettings_SpellQueueType_enable then return false end
local v=PQI_SoapboxFireOffensiveSettings_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Queue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_SoapboxArcaneOffensiveSettings_SpellQueueType_enable then return false end
local v=PQI_SoapboxArcaneOffensiveSettings_SpellQueueType_value or 1

if v == 1 then
	if IsMouseButtonDown() and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		if GetMouseFocus():GetName() ~= nil then
			SpellCancelQueuedSpell()
			RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
		end
	end
elseif v == 2 then
	if GetMouseFocus():GetName() ~= nil and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		SpellCancelQueuedSpell()
		RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName())
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Target</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization(&amp;quot;player&amp;quot;) == 2 and not PQI_SoapboxFireOffensiveSettings_AutoTargetNextEnemy_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 3 and not PQI_SoapboxFrostOffensiveSettings_AutoTargetNextEnemy_enable then return false end
if GetSpecialization(&amp;quot;player&amp;quot;) == 1 and not PQI_SoapboxArcaneOffensiveSettings_AutoTargetNextEnemy_enable then return false end


if (UnitExists(&amp;quot;Target&amp;quot;) == nil 
or (UnitExists(&amp;quot;Target&amp;quot;) and UnitIsDead(&amp;quot;Target&amp;quot;)))
and UnitAffectingCombat(&amp;quot;Player&amp;quot;)
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-All- Immune Bosses</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Let&amp;apos;s try and detect immunities
if UnitBuffID(&amp;quot;target&amp;quot;,116994) or UnitBuffID(&amp;quot;target&amp;quot;,122540) or UnitBuffID(&amp;quot;target&amp;quot;,123250) or UnitBuffID(&amp;quot;target&amp;quot;,106062) or UnitBuffID(&amp;quot;target&amp;quot;,110945)
	then return false end
	
-- Cancel spell casts or channels on Silences
if UnitExists(&amp;quot;boss1&amp;quot;) or UnitExists(&amp;quot;target&amp;quot;) then
	if UnitCastingInfo(&amp;quot;boss1&amp;quot;) == GetSpellInfo(138763) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137457) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(143343) then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) or UnitChannelInfo(&amp;quot;player&amp;quot;) then RunMacroText(&amp;quot;/stopcasting&amp;quot;) return false end
		return true
	end
end
	
-- Twin Consorts (Immune while channeling Nuclear Inferno and Tidal Force)
if UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137531) or UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(137491) or UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(138763)
	then return false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Fire- Pyroblast - High-</Name><Default>false</Default><SpellID>11366</SpellID><Actions></Actions><Lua>local AlterTime,_,_,_,_,_,AlterTimetimer = UnitBuffID(&amp;quot;player&amp;quot;,108978)
local TargetValidation = TargetValidation
local ATCD = GetSpellCooldown(108978) + select(2,GetSpellCooldown(108978)) - GetTime()
-- Pyroblast Level Check
if not IsPlayerSpell(11366) then return false end

if PQR_SpellAvailable(11129) and PQR_SpellAvailable(108978) and (HeatingUp == false or Pyros == false)  and ((IsPlayerSpell(12043) and PQR_SpellAvailable(12043)) or not IsPlayerSpell(12043)) then return false end
if PQR_SpellAvailable(11129) and not AlterTime and PQI_SoapboxFireOffensiveSettings_AlterTime_enable and Nova_Cooldowns == 1 and (SpecialUnit() or not PQI_SoapboxFireOffensiveSettings_BossCooldown_enable) and PQR_SpellAvailable(108978) then
return false end
if UnitBuffID(&amp;quot;player&amp;quot;, 48108) or UnitBuffID(&amp;quot;player&amp;quot;, 12043) then
	if TargetValidation(&amp;quot;target&amp;quot;,11366) then
		if IsPlayerSpell(12043) and PQR_SpellAvailable(12043) and (ATCD &amp;gt; 60 or (T2D(&amp;quot;target&amp;quot;) &amp;lt; 5 and not NOTEB() == false)) and not UnitBuffID(&amp;quot;player&amp;quot;, 12043) then
		CastSpellByName(GetSpellInfo(12043),&amp;quot;player&amp;quot;) 
		elseif UnitBuffID(&amp;quot;player&amp;quot;, 12043) then
		return true
		else
		return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Arcane Blast (Bonus)</Name><Default>false</Default><SpellID>30451</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
if Nova_AOE == 1 then return false end
if PQR_IsMoving(0.3) and not UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

local bonus,_,_,bcount,_,_,bexpires = UnitBuffID(&amp;quot;player&amp;quot;,145252)
local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,79683)

if bonus and name then
	if bcount == 4 or bexpires - GetTime() &amp;lt; 3 then
		if TargetValidation(&amp;quot;target&amp;quot;,30451) then
		CastSpellByName(GetSpellInfo(30451),&amp;quot;target&amp;quot;) return true
		end
	end
elseif bonus and name then
	if count == 2 then
		if TargetValidation(&amp;quot;target&amp;quot;,5143) then
		CastSpellByName(GetSpellInfo(5143),&amp;quot;target&amp;quot;) return true
		end
	end
elseif bonus then
	if bcount &amp;gt;= 1 or bexpires - GetTime() &amp;lt; 3 then
		if TargetValidation(&amp;quot;target&amp;quot;,30451) then
		CastSpellByName(GetSpellInfo(30451),&amp;quot;target&amp;quot;) return true
		end
	end
end</Lua><RecastDelay>50</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>---Boss Functions: Mage---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpecialization() == 1 then
	if not PQI_SoapboxArcaneOffensiveSettings_BossFunctions_enable then return false end
elseif GetSpecialization() == 2 then
	if not PQI_SoapboxFireOffensiveSettings_BossFunctions_enable then return false end
elseif GetSpecialization() == 3 then
	if not PQI_SoapboxFrostOffensiveSettings_BossFunctions_enable then return false end
end

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
	PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
	return true
else
	PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = false
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
	local bossCheck = &amp;quot;boss&amp;quot;..i

	if UnitExists(bossCheck) then
		
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
	local	 bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
		local playerCasting,_,_,_,_,PlayercastEnd = UnitCastingInfo(&amp;quot;player&amp;quot;)
		
		if npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
			local reshapeName = GetSpellInfo(122370)
			local reshapeLife = UnitDebuff(&amp;quot;player&amp;quot;, reshapeName)
			
			if reshapeLife ~= nil then
				local playerCasting = UnitCastingInfo(&amp;quot;vehicle&amp;quot;)
				local playerCasting2 = UnitCastingInfo(&amp;quot;player&amp;quot;)
				--grab spell names for abilities:
				local amberExplosion = GetSpellInfo(122402)
				
				--interrupt self if casting amber explosion
				if playerCasting == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt self if casting amber explosion
				if playerCasting2 == amberExplosion then
					--Press the 2nd button (Struggle for Control)
					RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
					return true
				end
				
				--interrupt the target if casting amber explosion
				if bossCasting and bossCasting == amberExplosion then
					TargetUnit(bossCheck)
					--Press the 1st button (Amber Strike)
					RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
					return true
				end
				
				if UnitExists(&amp;quot;boss2&amp;quot;) then
					if bossCheck == &amp;quot;boss2&amp;quot; then 
						return true --prevent the rotation from executing while reshaped
					end
				else
					return true
				end

			end
			
		elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
			--Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local impName = GetSpellInfo(117961)
				local impShieldBuff = UnitBuffID(bossCheck, 117961)
				
				if (bossCasting and bossCasting == impName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if impShieldBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
			
		elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
			--Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
			--Also stop attacks if not stunned.
			
			--only continue checking if we are targetting the boss or have no target.
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sleightName = GetSpellInfo(118162)
				local sleightBuff = UnitBuffID(bossCheck, 118162)
				--				  HoJ,   FoJ,  Kidney  
				local stunList = { 853, 105593, 408 }
				local isStunned = nil
				for _,v in ipairs(stunList) do
					local debuffCheck = UnitDebuffID(bossCheck, v)
					if debuffCheck then
						isStunned = true
					end
				end
				
				if (bossCasting and bossCasting == sleightName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.2
					return true
				end
				
				if sleightBuff and not isStunned then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end

		elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
			--Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
						
			if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
				local sodName = GetSpellInfo(117697)
				local sodBuff = UnitBuffID(bossCheck, 117697)
				
				if (bossCasting and bossCasting == sodName) then
					StopAttack()
					SpellStopCasting()
					local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
					PQR_resumeAttack = GetTime() + delayAdd + 0.5 --0.5 to account for lag... REALLY do not want to set this off.
					return true
				end
				
				if sodBuff then
					StopAttack()
					SpellStopCasting()
					return true
				end
			end
		elseif npcID == 71161 or npcID == 71157 or npcID == 71156 or npcID == 71155 or npcID == 71160 or npcID == 71154 or npcID == 71152 or npcID == 71158 or npcID == 71153 then ---Klaxxi
			if UnitBuffID(&amp;quot;player&amp;quot;,141857) and not UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if PQR_SpellAvailable(143373) then
				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				return true
				end
			end
			if UnitBuffID(&amp;quot;player&amp;quot;,143373) then
				if UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144275) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton2&amp;quot;)
				return true
				elseif not UnitDebuffID(&amp;quot;target&amp;quot;,144276) and PQR_SpellAvailable(144276) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton3&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144274) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton1&amp;quot;)
				return true
				elseif PQR_SpellAvailable(144181) then
				RunMacroText(&amp;quot;/click OverrideActionBarButton4&amp;quot;)
				return true
				end
			end
		elseif npcID == 71515 then  ---General Nazgrim
			if UnitBuffID(&amp;quot;target&amp;quot;,71) then
			SpellStopCasting()
			PetFollow()
			return true
			end
		elseif npcID == 71529 then --Thok: Deafening
			local Deaf = GetSpellInfo(143343)
			local BossCasting,_,_,_,_,BossCastEnd = UnitCastingInfo(bossCheck)
			local PlayerCasting,_,_,_,_,PlayerCastEnd = UnitCastingInfo(&amp;quot;player&amp;quot;)
			if (BossCasting and BossCasting == Deaf) then	
				local BossTimeLeft = (BossCastEnd/1000) - GetTime()
				if PlayerCasting then
				local PlayerTimeLeft = (PlayerCastEnd/1000) - GetTime()
					if BossTimeLeft &amp;lt;= PlayerTimeLeft then
					SpellStopCasting()
					CastSpellByName(GetSpellInfo(30455))
					return true
					end
				else
				CastSpellByName(GetSpellInfo(30455))
				return true
				end
			end
		end
	end
end

--click button to leave.
--Gara&amp;apos;jal isn&amp;apos;t a boss while in the Spirit Realm.
local returnSoul = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
if returnSoul and returnSoul - GetTime() &amp;lt; 2 then 
	RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Block</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(45438) and UnitDebuffID(&amp;quot;player&amp;quot;, 87023) then
CastSpellByName(GetSpellInfo(45438))
return true
end

if Nova_Ice == 1 and PQR_SpellAvailable(45438) then
CastSpellByName(GetSpellInfo(45438))
return true
end


--if UnitDebuffID(&amp;quot;player&amp;quot;, 87024) and UnitBuffID(&amp;quot;player&amp;quot;, 45438) then
--RunMacroText(&amp;quot;/cancelaura Ice Block&amp;quot;)
--return true
--end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ARMOR TEST</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 108978) then return false end

if Bloodlust and not UnitBuffID(&amp;quot;player&amp;quot;, 6117) then
CastSpellByName(GetSpellInfo(6117))
return true
elseif not Bloodlust and not UnitBuffID(&amp;quot;player&amp;quot;, 7302) then
CastSpellByName(GetSpellInfo(7302))
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Block2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetSpellCooldown(108978) &amp;lt; 1 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Arcane- Movement</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation

if UnitBuffID(&amp;quot;player&amp;quot;, 108839) then return false end

if not IsPlayerSpell(44425) then return false end

if not PQR_IsMoving(0.3) then return false end

if not UnitExists(&amp;quot;target&amp;quot;) then return false end

if not Blast or (Blast and Blasttimer - GetTime() &amp;lt; 2) then
	if PQR_SpellAvailable(1449) and Blast and Blasttimer - GetTime() &amp;lt; 2 and
	((Explosion == false and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 11) 
	or (Explosion == true and PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) &amp;lt; 16)) then
	SpellCancelQueuedSpell() 
	CastSpellByName(GetSpellInfo(1449),nil) 
	return true
	elseif not Blast and TargetValidation(&amp;quot;target&amp;quot;,44425) then
	CastSpellByName(GetSpellInfo(44425),&amp;quot;target&amp;quot;) 
	return true
	elseif TargetValidation(&amp;quot;target&amp;quot;, 2136) then
	CastSpellByName(GetSpellInfo(2136),&amp;quot;target&amp;quot;) 
	return true
	elseif TargetValidation(&amp;quot;target&amp;quot;, 30455) then
	CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) 
	return true
	end
elseif TargetValidation(&amp;quot;target&amp;quot;, 2136) then
CastSpellByName(GetSpellInfo(2136),&amp;quot;target&amp;quot;) 
return true
elseif TargetValidation(&amp;quot;target&amp;quot;, 30455) then
CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) 
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>test</Name><Default>false</Default><SpellID>30451</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; (240000 + select(4,GetSpellInfo(30451))) then
return true
else
SpellStopCasting()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Spirit Focus-</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>if UnitDebuffID(&amp;quot;player&amp;quot;,140946) then
	if not UnitExists(&amp;quot;focus&amp;quot;) then
	RunMacroText(&amp;quot;/target train&amp;quot;)
	RunMacroText(&amp;quot;/focus&amp;quot;)
	TargetLastTarget()
	--return true
	end
end

if UnitDebuffID(&amp;quot;player&amp;quot;,140946) then
	if UnitExists(&amp;quot;focus&amp;quot;) then
		if TargetValidation(&amp;quot;focus&amp;quot;,30455) then
			if PQR_UnitDistance(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) &amp;lt; 25 then
			return true 
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Ice Lance(high)</Name><Default>false</Default><SpellID>30455</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,44544)
local Frost,_,_,_,_,_,Frosttimer = UnitBuffID(&amp;quot;player&amp;quot;,44544)
if Nova_AOE == 1 then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;, 44544) then return false end
if not IsPlayerSpell(30455) then return false end


if name and count &amp;gt; 1 then
	if Nova_Cooldowns == 1 and PQI_SoapboxFrostOffensiveSettings_IcyVeins_enable and (not PQI_SoapboxFrostOffensiveSettings_BossCooldown_enable or SpecialUnit()) then
		if not BuffedBoss() then
			if TargetValidation(&amp;quot;target&amp;quot;,30455) then
			return true
			end
		elseif Frosttimer - GetTime() &amp;lt; 2 then
			if TargetValidation(&amp;quot;target&amp;quot;,30455) then
			return true
			end
		elseif GetSpellCD(108978) &amp;lt; 1 then
			if not IcyVeins1 and not IcyVein2 and not Bloodlust then
				if TargetValidation(&amp;quot;target&amp;quot;,30455) then
				return true
				end
			elseif AlterTimeQueue == 0 and count &amp;gt; 1 and not UnitBuffID(&amp;quot;player&amp;quot;, 57761) then
				if TargetValidation(&amp;quot;target&amp;quot;,30455) then
				return true
				end
			end
		elseif TargetValidation(&amp;quot;target&amp;quot;,30455) then
		return true
	--	or (itemCheck(MageT16) &amp;gt; 1 and count&amp;gt;1 and ((IcyVeins == false and (IVCD &amp;gt; 2 or (IVCD &amp;lt; 1 and Bloodlust))) or (IcyVeins == true and IV2CD &amp;gt; 2))) 
	--	or (itemCheck(MageT16) &amp;lt; 2 and count&amp;gt;0 and ((IcyVeins == false and (IVCD &amp;gt; 2 or (IVCD &amp;lt; 1 and Bloodlust))) or (IcyVeins == true and IV2CD &amp;gt; 2))) then
	--		if TargetValidation(&amp;quot;target&amp;quot;,30455) then
	--		CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
		--	end
		end
	elseif TargetValidation(&amp;quot;target&amp;quot;,30455) then
	return true
	end
end</Lua><RecastDelay>50</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Frost- Ice Lance (AlterTime) (high)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TargetValidation = TargetValidation
local name,_,_,count,_,_,expires = UnitBuffID(&amp;quot;player&amp;quot;,44544)


if not UnitBuffID(&amp;quot;player&amp;quot;,108978) then return false end
if not UnitBuffID(&amp;quot;player&amp;quot;, 44544) then return false end
if not IsPlayerSpell(30455) then return false end

if name and count &amp;gt; 1 then
if TargetValidation(&amp;quot;target&amp;quot;,30455) then
CastSpellByName(GetSpellInfo(30455),&amp;quot;target&amp;quot;) return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MAGE>