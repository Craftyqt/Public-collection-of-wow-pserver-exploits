<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or not UnitExists(&amp;quot;target&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Searing Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local arg1, totemName, startTime, duration = GetTotemInfo( 1 )
local est_dur = startTime+duration-GetTime() 

local FireEle = GetSpellInfo(2894)

if totemName == FireEle then 
	return false
end

if est_dur &amp;lt; 1 then
	_castSpell(3599)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Stormstrike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Ascendance = UnitBuffID(&amp;quot;player&amp;quot;, 114050)
local SBAvil = PQR_SpellAvailable(115356)
local SSAvil = PQR_SpellAvailable(17364)

if SBAvil
and Ascendance then  
	CastSpellByName(tostring(GetSpellInfo(115356))) 
end

if SSAvil
and not Ascendance then 
	_castSpell(17364) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Enh : Lava Lash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>_castSpell(60103, &amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Flame Shock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Flameshock = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)) 

if not Flameshock 
or Flameshock - GetTime() &amp;lt; 7 then
	_castSpell(8050, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Unleash Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>_castSpell(73680)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Earth Shock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Flameshock = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)) 

if Flameshock ~= nil
and Flameshock - GetTime() &amp;lt; 7 then
	return false 
else 
	_castSpell(8042, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Rain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HealingRainKey then
  _castSpell(73920)
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Lightning Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID( &amp;quot;player&amp;quot;, 324 ) == nil then
	_castSpell(324)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Ghost Wolf</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Ascendance = UnitBuffID(&amp;quot;player&amp;quot;, 114050)

if not inMelee()
and AutoGhostWolf
and not Ascendance then
	_castSpell(2645)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Main Hand</Name><Default>false</Default><SpellID>8232</SpellID><Actions></Actions><Lua>local arg1= GetWeaponEnchantInfo()

if arg1 == nil then

	return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Off Hand</Name><Default>false</Default><SpellID>8024</SpellID><Actions></Actions><Lua>local arg1, arg2, arg3, arg4 = GetWeaponEnchantInfo()

if arg4 == nil then

	return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Stormlash Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey
and AutoStormlash then
	_castSpell(120668)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Ascendance = UnitBuffID(&amp;quot;player&amp;quot;, 114050)
local AscendanceAvil = PQR_SpellAvailable(114049)

if burstKey then

	-- Gloves
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 
			UseInventoryItem(10)
	end
	
	--Trinkets
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
			UseInventoryItem(13)
	end
	
	--Orc
	if PQR_SpellAvailable(33697) then
		CastSpellByName(tostring(GetSpellInfo(33697)))  
	end
	
	--Troll
	if PQR_SpellAvailable(26297) then 
		CastSpellByName(tostring(GetSpellInfo(26297))) 
	end
	
	--Elem Mastery
	if PQR_SpellAvailable(16166) then 
		_castSpell(16166)
	end
	
	--AS
	if PQR_SpellAvailable(16188)  then 
		_castSpell(16188)
	end
	
	--Ascendance
	if not Ascendance 
	and AscendanceAvil 
	and cdRemains(51533) &amp;gt; 2
	and cdRemains(2894) &amp;gt; 2 then
		_castSpell(114049)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Init ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_ShamanPvP.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_ShamanPvP.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

 

-- OPTIONS -- 
hsHp = PQI_CpoworksPvPEnhancement_HealingSurge_value
hstHp = PQI_CpoworksPvPEnhancement_HealingStream_value
HealingTideHP = PQI_CpoworksPvPEnhancement_HealingTide_value
HealthStoneHP = PQI_CpoworksPvPEnhancement_Healthstone_value


AutoHealingTide = PQI_CpoworksPvPEnhancement_HealingTide_enable
AutoSprint = PQI_CpoworksPvPEnhancement_AutoSpiritWalk_enable
AutoShamRage = PQI_CpoworksPvPEnhancement_AutoShamRage_enable
AutoStormlash = PQI_CpoworksPvPEnhancement_AutoStormlash_enable
AutoSpiritwalkersGrace = PQI_CpoworksPvPEnhancement_SWGHealing_enable
AccecptQueues = PQI_CpoworksPvPEnhancement_AutoAccecptQueues_enable
AutoGhostWolf = PQI_CpoworksPvPEnhancement_AutoGhostwolf_enable


GroupInfo() 

--Keybinds
DefenciveKey		= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_DefenciveKey_key)  
PauseKey			= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_Pause_key) 
ProjectionKey		= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_ProjectionKey_key)
HealingTideKey		= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_HealingTideKey_key) 

if not PQI_CpoworksPvPEnhancement_BurstKey_enable then 
	burstKey				= IsMouseButtonDown(3)
else 
 	burstKey				= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_BurstKey_key)
end
if not PQI_CpoworksPvPEnhancement_HealingRainKey_enable then 
	HealingRainKey				= IsMouseButtonDown(4)
else 
 	HealingRainKey				= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_HealingRainKey_key)
end
if not PQI_CpoworksPvPEnhancement_HexKey_enable then 
	HexKey			= IsMouseButtonDown(5)
else 
 	HexKey			= PQI:IsHotkeys(PQI_CpoworksPvPEnhancement_HexKey_key)
end


if not PQI_CpoworksPvPEnhancement_Pause_enable then 
	PauseKey = false
end
if not PQI_CpoworksPvPEnhancement_DefenciveKey_enable then 
	DefenciveKey = false 
end
if not PQI_CpoworksPvPEnhancement_ProjectionKey_enable then 
	ProjectionKey = false
end
if not PQI_CpoworksPvPEnhancement_HealingTideKey_enable then 
	HealingTideKey = false 
end

GroupInfo()

if AccecptQueues then
	local status = GetBattlefieldStatus(1)
	if status == &amp;quot;confirm&amp;quot; then
		AcceptBattlefieldPort(1, 1)
		return true
	end
end


if PauseKey
or IsMounted()
or UnitIsDead(&amp;quot;player&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Wolves</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey then
	_castSpell(51533)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Fire Ele</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey then
	_castSpell(2894)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQI_CpoworksPvPEnhancement_Healthstone_enable then return false end

local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if PlayerHP &amp;lt; HealthStoneHP
and GetItemCount(5512,false,false) &amp;gt; 0 
and ( select(2, GetItemCooldown(5512)) == 0 ) then
    UseItemByName(5512)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Tide</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(108280) then
	if HealingTideKey then
		_castSpell(108280)
	end

	if AutoHealingTide then
		for i=1, #members do
			if members[i].HP &amp;lt; HealingTideHP then
				_castSpell(108280)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Decurse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ValidDispel(&amp;quot;player&amp;quot;) then
    CastSpellByName(GetSpellInfo(51886), &amp;quot;player&amp;quot;)
end

if PQR_SpellAvailable(51886) then
	for i=1, #members do
		if ValidDispel(members[i].Unit)
		and PQR_IsOutOfSight(members[i].Unit) == false then
			_castSpell(51886, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Defensives</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if DefenciveKey then	
	CastSpellByName(tostring(GetSpellInfo(108271))) --Astral Shift
	  
	if not AutoShamRage then
		CastSpellByName(tostring(GetSpellInfo(30823))) --Sham Rage 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Grounding Totem</Name><Default>false</Default><SpellID>8177</SpellID><Actions></Actions><Lua>for i = 1, #custTars do
	if UseGrounding(custTars[i]) then
		_castSpell(8177)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Lightning Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )

if MS ~= nil then
	if Stack == 5 then	
		_castSpell(403, &amp;quot;target&amp;quot;)
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Stream</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(5394) then
	for i=1, #members do
		if members[i].HP &amp;lt; hstHp 
		and PQR_IsOutOfSight(members[i].Unit) == false 
		and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 
		and not UnitIsEnemy(members[i].Unit, &amp;quot;player&amp;quot;) then
			_castSpell(5394)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Purge Important</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local purgeThis1 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness 

1022,   -- Hand of Protection

110909	--Alter time
}

if PQR_SpellAvailable(370) then
	for i = 1, #custTars do
		if UnitExists(custTars[i]) then
			for j = 1, #purgeThis1 do
				if UnitBuffID(custTars[i], purgeThis1[j]) ~= nil
				and PQR_IsOutOfSight(custTars[i], 0.1) == false then
					_castSpell(370, custTars[i])
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Frost Shock</Name><Default>false</Default><SpellID>8056</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
and UnitIsEnemy(&amp;quot;target&amp;quot;, &amp;quot;player&amp;quot;) 
and immuneToSlow(&amp;quot;target&amp;quot;) == nil then
	_castSpell(8056, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Surge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local _, _, _, msStack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )


if myHp &amp;lt; hsHp 
and msStack == 5 then
	   _castSpell(8004, &amp;quot;player&amp;quot;)
end

if PQR_SpellAvailable(8004)
and msStack == 5 then
	for i=1, #members do 
		if members[i].HP &amp;lt; hsHp 
		and PQR_IsOutOfSight(members[i].Unit, 0.1) == false then
			_castSpell(8004, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Hex</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HexKey then
	if UnitExists(&amp;quot;focus&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil then
		_castSpell(51514, &amp;quot;focus&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Purge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness

12472,  -- Icy Veins

1022,   -- Hand of Protection

11426,   -- Ice Barrier

20925,  -- Sacred Shield

114250,   -- Selfless Healer

17    -- Power Word: Shield

}

if PQR_SpellAvailable(370)  
and PlayerMana &amp;gt; 50 then
	for i = 1, #custTars do
		if UnitExists(custTars[i]) then
			for j = 1, #purgeThis2 do
				if UnitBuffID(custTars[i], purgeThis2[j]) ~= nil
				and UnitCanAttack(&amp;quot;player&amp;quot;,custTars[i]) ~= nil
				and PQR_IsOutOfSight(custTars[i], 0.1) == false then
					_castSpell(370, custTars[i])
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Tremor Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _, talent = GetTalentRowSelectionInfo(4)
local fears = {
111397,  -- Blood Fear
5484,  -- Howl
8122,  -- scream
5782,   -- Fear
5246, -- Intimidating Shout
113004  -- Intimidating Shout (druid symbio) 
}

if PQR_SpellAvailable(8143) then
	for i = 1, #members do
		for f = 1, #fears do
			local isFeared, _, _, _, _, Dur = UnitDebuffID(members[i].Unit, fears[f])
			
			if isFeared
			and Dur &amp;gt;= 6  --Most full fears are 6 or 8 seconds
			and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 then
				_castSpell(8143)
				
				if talent == 8 then
					RunMacroText(&amp;quot;/click TotemFrameTotem1 RightButton&amp;quot;)
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Fire Nova</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local FlameShock = UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)

if FlameShock ~= nil then
	_castSpell(1535)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Windwalk Totem</Name><Default>false</Default><SpellID>108273</SpellID><Actions></Actions><Lua>RootsandSlows = {339,102359,122,96294,91807, 19975, 128405, 45334,102359,110693, 50245,54706,4167,111340,116706,113275,123407,113275,87194,114404,115197,64695,63685,107566}






if PQR_SpellAvailable(108273) then 
	for i=1, #members do
		for j = 1, #RootsandSlows do
			if UnitDebuffID(members[i].Unit,RootsandSlows[j]) then
				return true 
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Auto Sham Rage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local getOutofCC = {	
						44572,		-- Deep Freeze
						110698,		-- Hammer of Justice 
						105593,		-- Fist of Justice
						853		-- Hammer of Justice
}

if AutoShamRage then
	if PQR_SpellAvailable(30823) then
		for i = 1, #getOutofCC do
			if UnitDebuffID(&amp;quot;player&amp;quot;, getOutofCC[i]) then
				CastSpellByName(tostring(GetSpellInfo(30823)))
			end
		end
	end                         
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Spirit Walk</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoSprint then
	if PQR_SpellAvailable(58875)
	and hasRoot(&amp;quot;player&amp;quot;)~= nil then
		CastSpellByName(tostring(GetSpellInfo(58875)))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Spirit Walkers Grace</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if AutoSpiritwalkersGrace then
	if PQR_SpellAvailable(79206)
	and myHp &amp;lt; hsHp
	and not inMelee() then
		_castSpell(79206)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Surge SWG</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) 
local SWG = UnitBuffID(&amp;quot;player&amp;quot;, 79206)
local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)


if myHp &amp;lt; hsHp 
and SWG 
and PlayerMana &amp;gt; 20
and not inMelee() then
 	_castSpell(8004, &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wind Shear(Heals/cc)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 331, 77472, 73920, 8004, 8936, 50464, 5185, 740, 2061, 2060, 32546, 64843, 47540,  19750, 82326, 7328, 54428, 82327, 115175, 124682, 116694, 116694, 51514, 33786, 2637, 5782, 111771, 5232, 710, 605, 9484, 32375, 20066, 118, 61305, 28272, 61721, 61780, 28271, 2641, 1513, 982 }

if PQR_SpellAvailable(57994) then
	for y=1, #custTars do 
		if UnitExists(custTars[y])
		and UnitIsEnemy(custTars[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(57994), custTars[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, custTars[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.3 then
						_castSpell(57994, custTars[y])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Totamic Projection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ProjectionKey then
	if IsSpellKnown(108287) then
		CastSpellByName(GetSpellInfo(108287))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Anti Stealth</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--RedRussian&amp;apos;s &amp;quot;Stealthers&amp;apos; Bane&amp;quot;

local rescan_period=2 --how often stealthed list is repopulated

local function IsStealthed(unit) --check if unit is stealthed
stealth,prowl,shadowmeld=1784,5215,58984 --list of detectable stealth buffs may be incomplete!
	if ( UnitBuffID(unit,stealth) or UnitBuffID(unit,prowl) or UnitBuffID(unit,shadowmeld) ) then return true
	else return false
	end
end

local function Breaker() --instant stealth breaker, class dependent
_, playerClass = UnitClass(&amp;quot;player&amp;quot;)
	if playerClass == &amp;quot;WARRIOR&amp;quot; then
		return 57755 --Heroic Throw
	elseif playerClass == &amp;quot;PALADIN&amp;quot; then
		if PQR_SpellAvailable(879) then
			return 879 --Exorcism
		else	
			return 20271 --Judgment
		end	
	elseif playerClass == &amp;quot;HUNTER&amp;quot; then
		return 3044 --Arcane shot
	elseif playerClass == &amp;quot;ROGUE&amp;quot; then
		if IsStealthed(&amp;apos;player&amp;apos;) then
			return 6770 --Sap
		else
			return 121733 --Throw
		end
	elseif playerClass == &amp;quot;PRIEST&amp;quot; then
		return 589 --Shadow Word: Pain
	elseif playerClass == &amp;quot;DEATHKNIGHT&amp;quot; then
		return 45524 --Chains of Ice
	elseif playerClass == &amp;quot;SHAMAN&amp;quot; then
		return 8056 --Frost Shock
	elseif playerClass == &amp;quot;MAGE&amp;quot; then
		return 30455 --Ice Lance
	elseif playerClass == &amp;quot;WARLOCK&amp;quot; then
		return 77799 --Fel Flame
	elseif playerClass == &amp;quot;MONK&amp;quot; then
		return 115546 --Taunt
	elseif playerClass == &amp;quot;DRUID&amp;quot; then
		if IsStealthed(&amp;apos;player&amp;apos;) then
			return 0 --do nothing
		else
			return 8921 --moonfire
		end
	else
		return 0 
	end
end

local breakername=GetSpellInfo(Breaker()) --localized breaker name for use with IsSpellInRange


------------------------BG/RBG--------------------------------
--get stealthed list
if not last_scan or GetTime()-last_scan&amp;gt;=rescan_period then --repopulate list every T seconds
last_scan=GetTime()
stealthed={} --depopulate stealthed list
currtarget=UnitName(&amp;apos;target&amp;apos;) --get current target&amp;apos;s name

	for j=1,GetNumBattlefieldScores() do --get player faction to make profile work in rbgs and arenas
	name1=GetBattlefieldScore(j) 
		if name1==UnitName(&amp;apos;player&amp;apos;) then 
		pfaction=select(6,GetBattlefieldScore(j))
		break
		end 
	end

	for i=1, GetNumBattlefieldScores() do 
	name, killingBlows, honorableKills, deaths, honorGained, faction, rank, race, class = GetBattlefieldScore(i)
	matched_name=name:match(&amp;apos;[^-]+&amp;apos;) --filter out &amp;quot;-Realm&amp;quot; part
		if (class==&amp;quot;DRUID&amp;quot; or class==&amp;quot;ROGUE&amp;quot;) and faction~=pfaction and not UnitChannelInfo(&amp;apos;player&amp;apos;) then --target change is fatal to channgeling
		TargetUnit(name)
			if UnitName(&amp;apos;target&amp;apos;)~=matched_name or ( UnitName(&amp;apos;target&amp;apos;)==matched_name and IsStealthed(&amp;apos;target&amp;apos;) ) then --targeting attemp was unsuccessful or stealthed target was caught during list repopulation
			stealthed[name]=1
			end
		end
		if currtarget and UnitName(&amp;apos;target&amp;apos;)~=currtarget then --return to previous target after targeting stealther
		TargetLastTarget() 
		elseif not currtarget then 
		ClearTarget() 
		end	
	end
end

--look for stealthed
if PQR_SpellAvailable(Breaker()) then --CD/GCD check to prevent excessive spam. NOTE: spell with ID 0 is never avalaible
oldtarget=UnitName(&amp;apos;target&amp;apos;) --get current target&amp;apos;s name
stealther_spotted=false
	for k,v in pairs(stealthed) do
		if not ( UnitCastingInfo(&amp;apos;player&amp;apos;) or UnitChannelInfo(&amp;apos;player&amp;apos;) ) and v==1 then --not on GCD &amp; not casting &amp; not channeling
		TargetUnit(k)
			if UnitName(&amp;apos;target&amp;apos;)==k:match(&amp;apos;[^-]+&amp;apos;) then --k is matched to be the same format with UnitName(&amp;apos;target&amp;apos;)
				if IsStealthed(&amp;apos;target&amp;apos;) and IsSpellInRange(breakername,&amp;apos;target&amp;apos;)==1 then --range check to prevent spam caused by stealth glitch
				CastSpellByID(Breaker(),&amp;apos;target&amp;apos;)
				stealther_spotted=true --flag fixing your target on spotted stealther
				else
				stealthed[k]=0	--exclude non-stealthed or too distant stealther from the list
				end
			end
		end
		if not stealther_spotted then	--return to previous target if no stealther was spotted, do nothing otherwise
			if oldtarget and UnitName(&amp;apos;target&amp;apos;)~=oldtarget then 
			TargetLastTarget() 
			elseif not oldtarget then 
			ClearTarget() 
			end
		end	
	end	
end
------------------------ARENA--------------------------------
for a=1,5 do
local arenatarget=&amp;apos;arena&amp;apos;..a
	if IsStealthed(arenatarget) then
	CastSpellByID(Breaker(),arenatarget)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Flag pickup</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetBattlefieldStatus(1)==&amp;apos;active&amp;apos; or GetBattlefieldStatus(2)==&amp;apos;active&amp;apos; then
InteractUnit(&amp;apos;Horde flag&amp;apos;)
InteractUnit(&amp;apos;Alliance flag&amp;apos;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Elemental Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )
local AS = UnitBuffID(&amp;quot;player&amp;quot;, 16188)


if AS
and PQR_SpellAvailable(117014) then
	_castSpell(117014, &amp;quot;Target&amp;quot;)
end

if MS ~= nil then
	if Stack &amp;gt;= 3  
	and PQR_SpellAvailable(117014) then
		_castSpell(117014, &amp;quot;Target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></SHAMAN>