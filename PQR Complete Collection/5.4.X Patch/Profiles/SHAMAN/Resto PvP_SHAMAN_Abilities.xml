<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false 
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_ShamanPvP.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_ShamanPvP.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

 

-- OPTIONS -- 
HealingWaveHP = PQI_CpoworksRestoPvP_HealingWave_value
HealingSurgeHP = PQI_CpoworksRestoPvP_HealingSurge_value
GreaterHealingWaveHP = PQI_CpoworksRestoPvP_GreaterHealingWave_value
RiptideHP = PQI_CpoworksRestoPvP_Riptide_value
HealingStreamHP = PQI_CpoworksRestoPvP_HealingSreamTotem_value
EarthShieldHP = PQI_CpoworksRestoPvP_EarthShield_value
UnleashedElementsHP = PQI_CpoworksRestoPvP_UnleashedElements_value

AutoSpiritLink = PQI_CpoworksRestoPvP_SpiritLinkTotem_enable
SpiritLinkHP = PQI_CpoworksRestoPvP_SpiritLinkTotem_value
SafeToLink = 90
AutoHealingTide = PQI_CpoworksRestoPvP_HealingTideTotem_enable
HealingTideHP = PQI_CpoworksRestoPvP_HealingTideTotem_value
AutoNatureSwiftness = PQI_CpoworksRestoPvP_NatureSwiftness_enable
NatureSwiftnessHP = PQI_CpoworksRestoPvP_NatureSwiftness_value
AutoManaTide = PQI_CpoworksRestoPvP_ManaTideTotem_enable
ManaTideMP = PQI_CpoworksRestoPvP_ManaTideTotem_value
HealthStoneHP = PQI_CpoworksRestoPvP_Healthstone_value
UseBattleMaster = PQI_CpoworksRestoPvP_Battlemasters_enable
BattlemasterHP = PQI_CpoworksRestoPvP_Battlemasters_value
AccecptQueues = PQI_CpoworksRestoPvP_AutoAccecptQueues_enable




--Keybinds
AstralShiftKey		= PQI:IsHotkeys(PQI_CpoworksRestoPvP_AstralShift_key)  
PauseKey			= PQI:IsHotkeys(PQI_CpoworksRestoPvP_PauseRotation_key) 
AscendanceKey 		= PQI:IsHotkeys(PQI_CpoworksRestoPvP_Ascendance_key) 
HealingTideKey		= PQI:IsHotkeys(PQI_CpoworksRestoPvP_HealingTide_key) 


if not PQI_CpoworksRestoPvP_DPS_enable then 
	DPSKey					= IsMouseButtonDown(3)
else 
 	DPSKey					= PQI:IsHotkeys(PQI_CpoworksRestoPvP_DPS_key)
end 
if not PQI_CpoworksRestoPvP_Hex_enable then 
	HexKey					= IsMouseButtonDown(4)
else 
 	HexKey					= PQI:IsHotkeys(PQI_CpoworksRestoPvP_Hex_key)
end
if not PQI_CpoworksRestoPvP_TotemicProjection_enable then 
	ProjectionKey			= IsMouseButtonDown(5)
else 
 	ProjectionKey			= PQI:IsHotkeys(PQI_CpoworksRestoPvP_TotemicProjection_key)
end

if not PQI_CpoworksRestoPvP_AstralShift_enable then 
	AstralShiftKey			= false
end
if not PQI_CpoworksRestoPvP_PauseRotation_enable then 
	PauseKey			= false
end
if not PQI_CpoworksRestoPvP_Ascendance_enable then 
	AscendanceKey			= false
end
if not PQI_CpoworksRestoPvP_HealingTide_enable then 
	HealingTideKey			= false
end

GroupInfo() 

if AccecptQueues then
	local status = GetBattlefieldStatus(1)
	if status == &amp;quot;confirm&amp;quot; then
		AcceptBattlefieldPort(1, 1)
		return true
	end
end
  
  
if PauseKey
or IsMounted() then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(331) then
	for i=1, #members do 
		if members[i].HP &amp;lt; HealingWaveHP 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5) then
	  		_castSpell(331, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Greater Healing Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(77472) then
	for i=1, #members do 
		if members[i].HP &amp;lt; GreaterHealingWaveHP 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5) then
	  		_castSpell(77472, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Surge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(8004) then
	for i=1, #members do 
		if members[i].HP &amp;lt; HealingSurgeHP 
		and not LineOfSight(members[i].Unit)
		and not PQR_IsMoving(.5) then
	  		_castSpell(8004, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tremor Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local fears = { 
5484,  -- Howl
8122,  -- scream
5782,   -- Fear
5246, -- Intimidating Shout
113004  -- Intimidating Shout (druid symbio) 
}

if PQR_SpellAvailable(8143) then
	for i = 1, #members do
		for f = 1, #fears do
			local isFeared, _, _, _, _, Dur = UnitDebuffID(members[i].Unit, fears[f])
			
			if isFeared
			and Dur &amp;gt;= 6  --Most full fears are 6 or 8 seconds
			and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 then
				_castSpell(8143)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Grounding Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 79085, 51505, 51514, 33786, 2912, 78674, 2637, 5176, 5782, 116858, 710, 30108, 48181, 6353, 605, 9484, 8092, 34914, 20066, 61305, 28272, 61721, 61780, 28271, 118, 112948, 30451, 113656, 19434, 1513 }

if PQR_SpellAvailable(8177) then
	for y=1, #custTars do 
		if UnitExists(custTars[y])
		and UnitIsEnemy(custTars[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(403), custTars[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, custTars[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
						_castSpell(8177)
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Astral Shift</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AstralShiftKey 
and not GetCurrentKeyBoardFocus() then	
 	 CastSpellByName(tostring(GetSpellInfo(108271))) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Earthliving Weapon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local ELW = GetWeaponEnchantInfo()

if ELW ~= 1 then
	_castSpell(51730)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Water Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,974) then return false end

if UnitBuffID( &amp;quot;player&amp;quot;, 52127 ) == nil then
	_castSpell(52127)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness

12472,  -- Icy Veins

1022,   -- Hand of Protection

11426,   -- Ice Barrier

774,   -- Rejuvenation

20925,  -- Sacred Shield

114250,   -- Selfless Healer

17    -- Power Word: Shield

}

if PQR_SpellAvailable(370) then 
	if members[1].HP &amp;gt; 70
	and PlayerMana &amp;gt; 70 then
		for i = 1, #custTars do
			if UnitExists(custTars[i]) then
				for j = 1, #purgeThis2 do
					if UnitBuffID(custTars[i], purgeThis2[j]) ~= nil
					and UnitCanAttack(&amp;quot;player&amp;quot;,custTars[i]) ~= nil
					and not LineOfSight(members[i].Unit) then
						_castSpell(370, custTars[i])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Riptide</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(61295) then
	for i=1, #members do
		if members[i].HP &amp;lt; RiptideHP 
		and not UnitBuffID(members[i].Unit, 61295)
		and not LineOfSight(members[i].Unit) then
		 	_castSpell(61295, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Jukebox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if destGUID == UnitGUID(&amp;quot;player&amp;quot;)
			and not HaveBuff(&amp;quot;player&amp;quot;,104773,0) then
				local spellId = select(12, ...)
				local listId = {
					6552, --Pummel
					1766, --Kick
					47528, --Mind Freeze
					47476, --Strangulate
					96231, --Rebuke
					57994, --Wind Shear
					2139, --Counterspell
					19647, --Spell Lock
					80965 --Skull Bash
				}
				for i = 1, #listId do
					if listId[i] == spellId then
						SpellStopCasting()
						SpellStopCasting()
						SpellStopCasting()
						PQR_DelayRotation(.5)
						return true
					end
				end
			end
		end
	end
end

JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Stream Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(5394) then
	for i=1, #members do
		if members[i].HP &amp;lt; HealingStreamHP then
			_castSpell(5394)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispell CC</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(77130) then
	for i=1,#members do 
	    if dispellableCC(members[i].Unit) 
	    and not LineOfSight(members[i])
	    and not UnitDebuffID(members[i].Unit, 30108)
	    and not UnitDebuffID(members[i].Unit, 34914)
	    and not UnitDebuffID(members[i].Unit, 131736) then 
	  		_castSpell(77130,members[i].Unit)
	  	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Surge SWG</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SWG = UnitBuffID(&amp;quot;player&amp;quot;, 79206)

if PQR_SpellAvailable(8004) then
	for i=1, #members do 
		if members[i].HP &amp;lt; HealingSurgeHP 
		and SWG
		and not LineOfSight(members[i].Unit) then
	  		_castSpell(8004, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Earth Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>function CheckEarthShield(t)
 	local _,_,_,EScount,_,_,EStimer = UnitBuffID(t,974,&amp;quot;PLAYER&amp;quot;) 
    return EScount, EStimer 
end 

local memberid = 1
local esactive = false

if PQR_SpellAvailable(974) then
	for i = 1, #members do
		if UnitBuffID(members[i].Unit,974,&amp;quot;PLAYER&amp;quot;) then 
			esactive = true 
		end
	end
	
	--Put it on some one if theres not an ES up.
	for i = 1, #members do 
	  	if esactive == false  
	  	and members[i].HP &amp;lt;= 99 
	  	and not UnitBuffID(members[i].Unit, 52127) --Water shield 
	  	and not LineOfSight(members[i].Unit) then 
		    _castSpell(974, members[i].Unit)
	  	end
	end
	
	
	--Change ES targets if some oen else is taking alot of damage
	for i = 1, #members do
	  	local EScount, EStimer = CheckEarthShield(members[i].Unit)
	  	if members[i].HP &amp;lt; EarthShieldHP
	  	and not UnitBuffID(members[i].Unit, 974, Player) 
	  	and not LineOfSight(members[i].Unit) then 
		    _castSpell(974, members[i].Unit)
	  	end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Unleashed Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(73680) then
	for i=1, #members do 
		if members[i].HP &amp;lt; UnleashedElementsHP 
		and not LineOfSight(members[i].Unit) then
	  		_castSpell(73680, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spirit Link</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if PQR_SpellAvailable(98008)
and AutoSpiritLink then
	for i=1, #members do
		if CheckInteractDistance(members[i].Unit, 3) == 1 then
			--Link other people
			if members[i].HP &amp;lt; SpiritLinkHP
			and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
			and myHp &amp;gt; SafeToLink then
				SpellStopCasting()
				_castSpell(98008, members[i].Unit)
			end
			
			--Link me
			if myHp &amp;lt; SpiritLinkHP
			and UnitName(members[i].Unit) ~= UnitName(&amp;quot;player&amp;quot;)
			and members[i].HP &amp;gt; SafeToLink then
				SpellStopCasting()
				_castSpell(98008, members[i].Unit)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Tide Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(108280) then
	if HealingTideKey 
	and not GetCurrentKeyBoardFocus() then
		_castSpell(108280)
	end

	if AutoHealingTide then
		for i=1, #members do
			if members[i].HP &amp;lt; HealingTideHP
			and members[i].IsPlayer then
				_castSpell(108280)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ascendance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AscendanceKey 
and not GetCurrentKeyBoardFocus() then
	_castSpell(114049)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>NS Greater Healing Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local NS = UnitBuffID(&amp;quot;player&amp;quot;, 16188)

if PQR_SpellAvailable(77472) then
	for i=1, #members do 
		if members[i].HP &amp;lt; NatureSwiftnessHP 
		and NS
		and not LineOfSight(members[i].Unit) then
	  		_castSpell(77472, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nature Swiftness</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoNatureSwiftness then 
	if PQR_SpellAvailable(16188) then
		for i=1, #members do 
			if members[i].HP &amp;lt; NatureSwiftnessHP then
		  		_castSpell(16188)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mana Tide</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

if PQR_SpellAvailable(16190) then
	if AutoManaTide then
		if PlayerMana &amp;lt; ManaTideMP then
			_castSpell(16190)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hex</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HexKey then
	if UnitExists(&amp;quot;focus&amp;quot;)
	and UnitIsEnemy(&amp;quot;focus&amp;quot;, &amp;quot;player&amp;quot;)
	and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;, 0.1) == false
	and not LineOfSight(members[i].Unit) then
		_castSpell(51514, &amp;quot;focus&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flame Shock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Flameshock = UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)

if DPSKey
and not Flameshock then
	_castSpell(8050, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lava Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Flameshock = UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)

if DPSKey
and Flameshock then
	_castSpell(51505, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lightning Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if DPSKey then
	_castSpell(403, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stormlash on Friendly CDs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(120668)
and members[1].HP &amp;gt; 70 then
	for i=1,#members do 
	    if HaveBuff(members[i].Unit,{1719,121471,50334,49016,10060,106731,3045,113860,113861,113858,114049}) 
	    then 
	  		_castSpell(120668) 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Shock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local canroot = true

if UnitExists(&amp;quot;target&amp;quot;)
and hasRoot(&amp;quot;target&amp;quot;) ~= nil then 
	canroot = false
end 

--if UnitExists(&amp;quot;target&amp;quot;)
--and hasStun(&amp;quot;target&amp;quot;) ~= nil then 
--	canroot = false	
--end


if PQR_SpellAvailable(8056)
and UnitExists(&amp;quot;target&amp;quot;)
and canroot == true
and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;, 90)
and CheckInteractDistance(&amp;quot;target&amp;quot;, 3) == 1 then
	_castSpell(8056)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wind Shear(heals/cc)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 331, 77472, 73920, 8004, 8936, 50464, 5185, 740, 2061, 2060, 32546, 64843, 47540,  19750, 82326, 7328, 54428, 82327, 115175, 124682, 116694, 116694, 51514, 33786, 2637, 5782, 111771, 5232, 710, 605, 9484, 32375, 20066, 118, 61305, 28272, 61721, 61780, 28271, 2641, 1513, 982 }

if PQR_SpellAvailable(57994) then
	for y=1, #custTars do 
		if UnitExists(custTars[y])
		and UnitIsEnemy(custTars[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(57994), custTars[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, custTars[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.3 then
						_castSpell(57994, custTars[y])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purge 70%</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness

12472,  -- Icy Veins

1022,   -- Hand of Protection

11426,   -- Ice Barrier

20925,  -- Sacred Shield

114250,   -- Selfless Healer

17    -- Power Word: Shield

}

if PQR_SpellAvailable(370) then 
	if members[1].HP &amp;gt; 70
	and PlayerMana &amp;gt; 70 then
		for i = 1, #custTars do
			if UnitExists(custTars[i]) then
				for j = 1, #purgeThis2 do
					if UnitBuffID(custTars[i], purgeThis2[j]) ~= nil
					and UnitCanAttack(&amp;quot;player&amp;quot;,custTars[i]) ~= nil
					and not LineOfSight(members[i].Unit) then
						_castSpell(370, custTars[i])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Purge 50%</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

local purgeThis2 = {

1044,   -- Hand of Freedom

6940,   -- Hand of Sacrifice

69369,   -- Predatory Swiftness 

1022   -- Hand of Protection

}

if PQR_SpellAvailable(370) then 
	if members[1].HP &amp;gt; 50 then
		for i = 1, #custTars do
			if UnitExists(custTars[i]) then
				for j = 1, #purgeThis2 do
					if UnitBuffID(custTars[i], purgeThis2[j]) ~= nil
					and UnitCanAttack(&amp;quot;player&amp;quot;,custTars[i]) ~= nil
					and not LineOfSight(members[i].Unit) then
						_castSpell(370, custTars[i])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Battlemaster</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myhp = UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100

if UseBattleMaster
and myhp &amp;lt; BattlemasterHP then 
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Totemic Projection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ProjectionKey then
	if IsSpellKnown(108287) then
		CastSpellByName(GetSpellInfo(108287))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></SHAMAN>