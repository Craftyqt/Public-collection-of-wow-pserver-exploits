<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Queue System
SLASH_VQUEUE1 = &amp;quot;/vqueue&amp;quot;
function SlashCmdList.VQUEUE(msg, editbox)		
	local spellid, unit = msg:match(&amp;quot;^(%S*)%s*(.-)$&amp;quot;);
	if tonumber(spellid) ~= nil and unit ~= &amp;quot;&amp;quot; then 			
		if not UnitExists(tostring(unit)) and unit ~= &amp;quot;tank&amp;quot; and unit ~= &amp;quot;low&amp;quot; and unit ~= &amp;quot;aoe5&amp;quot; and unit ~= &amp;quot;aoe10&amp;quot; and unit ~= &amp;quot;aoe15&amp;quot; and unit ~= &amp;quot;aoe20&amp;quot; and unit ~= &amp;quot;aoe25&amp;quot; and unit ~= &amp;quot;aoe30&amp;quot; then			
			PQR_WriteToChat(&amp;quot;unit not exist&amp;quot;);
		elseif not IsSpellKnown(tonumber(spellid)) then
			PQR_WriteToChat(&amp;quot;spell unknown&amp;quot;);
		else
			if not Queue_Spell then
				Queue_Spell = { }	
			end				
			table.insert(Queue_Spell, { Unit = unit, SpellID = spellid, Time = GetTime() } )
		end
	else
		PQR_WriteToChat(&amp;quot;Syntax: /vqueue spellid unit&amp;quot;);
	end
end	

if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false

	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Resto Shaman Profile Verion - 2.2.11&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
	PQR_SwapCheckTimer = 0

	--Begin PQI
--	if (IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;)) == 1 then
		PQInterfaceLoaded = true
--		PQInterfaceVersion = (2.22)
--		if PQInterfaceVersion &amp;gt;= 2.22 then
			PQInterfaceUpdated = true
--		else 
--			PQInterfaceUpdated = nil 
--			PQR_WriteToChat(&amp;quot;Your PQI is not up to date. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
--			PQR_StopRotation()
--			return true					
--		end
--	else 
--		PQInterfaceLoaded = nil 
--		PQR_WriteToChat(&amp;quot;Please download the latest version of PQI. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
--		PQR_StopRotation()
--		return true				
--	end
		-- Load Data File
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Vachiusa_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == true then
			PQInterfaceDataLoaded = true
		else 
			PQInterfaceDataLoaded = false 
			PQR_WriteToChat(&amp;quot;You are missing PQR_PQI.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true		
		end		
	end	
	
	if not PQI_General_Resto_Shaman_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 	
		local config = {
			name	= &amp;apos;General Resto Shaman&amp;apos;,
			author	= &amp;apos;Vachiusa&amp;apos;,
			abilities = {
				-- General --
				{	name = &amp;quot;Auto Open PQI Options&amp;quot;,
					tooltip = &amp;quot;Auto Opens PQI Options for you, will only happen once per login.&amp;quot;,
					enable = true,
				},
				{	name = &amp;quot;54 Events&amp;quot;,
					tooltip = &amp;quot;Enables the use of 5.4 boss specific mechanics&amp;quot;,
					enable = true,
				},				
				{	name = &amp;quot;53 Events&amp;quot;,
					tooltip = &amp;quot;Enables the use of 5.3 boss specific mechanics&amp;quot;,
					enable = false,
				},
				{ 	name = &amp;quot;4x Events&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of 4.x boss specific mechanics&amp;quot;,
				},
				{ 	name = &amp;quot;Special Events&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of special events mechanics (Providing Ground...)&amp;quot;,
				},	
				{ 	name = &amp;quot;Auto Event Dispel&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of dispel on special events mechanics&amp;quot;,
				},								
				{ 	name = &amp;quot;Queue Sys&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of auto dispel for Queue System&amp;quot;,
				},					
				{ 	name = &amp;quot;Auto Target&amp;quot;,
					enable = true,
					tooltip = &amp;quot;If you dont have a target it will target your focus target&amp;quot;,
				},
				{ 	name = &amp;quot;Fix Tank ES&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Earth Shield tank name fixing&amp;quot;,
						widget = { type = &amp;apos;txtbox&amp;apos;, 
					    value = &amp;apos;TankName&amp;apos;, 
					   	width = 120,													   --				  --														  --																																		   --															  --
						tooltip = &amp;apos;Put your tank name for fixing ES here&amp;apos;,
					 },					
				},																		
				{ 	name = &amp;quot;Spirit Link Totem&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Spirit Link Totem&amp;quot;,
				},
				{ 	name = &amp;quot;DPS Totem&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of DPS Totem&amp;quot;,
				},								
				{ 	name = &amp;quot;Lightning Bolt&amp;quot;,	
					enable = true,
					tooltip = &amp;quot;Enables the use of Lightning Bolt for DPS&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 90,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of minimum HP to use Lightning Bolt at&amp;quot;,
					},
				},					
				{ 	name = &amp;quot;Force Lightning Bolt&amp;quot;,	
					enable = true,
					tooltip = &amp;quot;Enables the force Lightning Bolt for Mana recover&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 10,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of Mana to force Lightning Bolt at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Purify Spirit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Purify Spirit&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 50,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Purify Spirit at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Low Mana&amp;quot;,	
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 20,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The minimum percent of Mana to not use some high mana skills at&amp;quot;,
					},
				},				
				{ 	name = &amp;quot;Racials&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Racials&amp;quot;,
				},								
				{ 	name = &amp;quot;Target Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Target Heal priority&amp;quot;,
				},											
				{ 	name = &amp;quot;Mouseover Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Mouseover Heal priority&amp;quot;,
				},			
				{ 	name = &amp;quot;NPC Mouseover Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of NPC Mouseover Heal priority&amp;quot;,
				},		
				{ 	name = &amp;quot;Pet Heal&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Pet Heal&amp;quot;,
				},			
				{ 	name = &amp;quot;Stop Casting&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Stop Casting&amp;quot;,
				},											
				{ 	name = &amp;quot;V debug&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Vachiusa debug&amp;quot;,
				},					
			},
			hotkeys = {
			},
		}
		PQI_General_Resto_Shaman_GUI_Loaded = PQI:AddRotation(config)
	end		

	if not PQI_CD_Resto_Shaman_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 
		local config = {
			name	= &amp;apos;CD Resto Shaman&amp;apos;,
			author	= &amp;apos;Vachiusa&amp;apos;,
			abilities = {									
				-- CD&amp;apos;s --
				{ 	name = &amp;quot;Spirit Walker Grace&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Spirit Walker Grace&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 40,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Spirit Walker Grace at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Mana Tide&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Mana Tide&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 80,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of Mana to use Mana Tide at&amp;quot;,
					},
				},		
				{ 	name = &amp;quot;Chain Heal&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Chain Heal&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 85,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Chain Heal at&amp;quot;,
					},
				},				
				{ 	name = &amp;quot;Chain Heal Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 2,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of low HP raid members around healing target to use Chain Heal at&amp;quot;,
					},
				},								
				{ 	name = &amp;quot;Primal Elementalist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Primal Elementalist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 80,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Primal Elementalist at&amp;quot;,
					},
				},				
				{ 	name = &amp;quot;Primal Elementalist Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of low HP raid members to use Primal Elementalist at&amp;quot;,
					},
				},		
				{ 	name = &amp;quot;Primal Elementalist Buffs Only&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of auto cast healing buffs only, not call pet!&amp;quot;,
				},								
			},
			hotkeys = {
			},
		}
		PQI_CD_Resto_Shaman_GUI_Loaded = PQI:AddRotation(config)
	end		

	if not PQI_Healing_Resto_Shaman_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 
		local config = {
			name	= &amp;apos;Healing Resto Shaman&amp;apos;,
			author	= &amp;apos;Vachiusa&amp;apos;,
			abilities = {												
				-- Healing --
				{ 	name = &amp;quot;Riptide&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Riptide&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 85,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Riptide at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Riptide Tank&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Riptide on Tanks&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 95,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Riptide on Tanks at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Healing Surge&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Healing Surge&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 20,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Healing Surge at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Healing Surge Tank&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Healing Surge on Tanks&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 30,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Healing Surge on Tanks at&amp;quot;,
					},
				},					
				{ 	name = &amp;quot;Greater Healing Wave&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Greater Healing Wave&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 60,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Greater Healing Wave at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Healing Wave&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Healing Wave&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 80,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Healing Wave at&amp;quot;,
					},
				},					
				{ 	name = &amp;quot;UE Tank&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of Unleash Elements on Tanks priority&amp;quot;,
				},					
				{ 	name = &amp;quot;Unleash Elements&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Unleash Elements&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 90,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Unleash Elements at&amp;quot;,
					},
				},			
			},
			hotkeys = {
				{	name = &amp;quot;Pause Rotation&amp;quot;,			enable = true,	hotkeys = {&amp;apos;ls&amp;apos;},	},
				{	name = &amp;quot;Healing Tide Totem&amp;quot;,					enable = true,	hotkeys = {&amp;apos;rs&amp;apos;},	
					tooltip = &amp;quot;Pop Healing Tide Totem&amp;quot;, },
				{	name = &amp;quot;Healing Rain Mouseover&amp;quot;,	enable = false,	hotkeys = {&amp;apos;la&amp;apos;},	
					tooltip = &amp;quot;Auto drop Healing Rain at mouseover&amp;quot;, },
				{	name = &amp;quot;Healing Rain&amp;quot;,				enable = true,	hotkeys = {&amp;apos;ra&amp;apos;},	
					tooltip = &amp;quot;Use Healing Rain at mouseover&amp;quot;, },
				{	name = &amp;quot;Ascendance&amp;quot;,				enable = true,	hotkeys = {&amp;apos;rc&amp;apos;},	
					tooltip = &amp;quot;Pop Ascendance&amp;quot;, },					
				{	name	= &amp;quot;Adding Players CT&amp;quot;,		enable	= true,	hotkeys	= {&amp;apos;ls&amp;apos;, &amp;apos;la&amp;apos;},
					tooltip = &amp;quot;Adding Players to Custom Table&amp;quot;, },	
				{	name	= &amp;quot;Removing Players CT&amp;quot;,	enable	= true,	hotkeys	= {&amp;apos;ls&amp;apos;, &amp;apos;lc&amp;apos;},
					tooltip = &amp;quot;Removing Players from Custom Table&amp;quot;, },						
			},
		}
		PQI_Healing_Resto_Shaman_GUI_Loaded = PQI:AddRotation(config)
	end
	--End PQI
		
	--------------------
	-- Slash Commands
	--------------------
	if GetCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;, 0) end
	if GetCVar(&amp;quot;PQ_UseCustomT&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0) end
	if GetCVar(&amp;quot;Nova_Recording&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Recording&amp;quot;, 0) end
	
	SLASH_WIPETABLE1 = &amp;quot;/wipetable&amp;quot;
	SLASH_WIPETABLE2 = &amp;quot;/wipecustomtable&amp;quot;
	SLASH_WIPETABLE3 = &amp;quot;/wt&amp;quot;
	function SlashCmdList.WIPETABLE(msg, editbox)
		Nova_CustomT = { }
		if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then 
			SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Wiped Custom Table clean, and reverting to Normal Table.&amp;quot;)
			end
		else
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Wiped Custom Table clean.&amp;quot;)
			end
		end
	end
	
	SLASH_USECUSTOMT1 = &amp;quot;/usecustomt&amp;quot;
	SLASH_USECUSTOMT2 = &amp;quot;/uct&amp;quot;
	SLASH_USECUSTOMT3 = &amp;quot;/usecustomtable&amp;quot;
	function SlashCmdList.USECUSTOMT(msg, editbox)
		if not GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) and #Nova_CustomT &amp;gt; 0 then
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Enabling Custom Table&amp;quot;)
			end
			SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 1)
		else
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;Enabling Normal Table&amp;quot;)
			end
			SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
		end
	end	

	-- Variables
	PQR_ResetMovementTime = 0.3
	PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)
	PQR_AddToSpellDelayList(18562, 0, 1) -- Swiftmend
	PQR_AddToSpellDelayList(44203, 0, 1) -- Tranquility	
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 3 then
		PQR_WriteToChat(&amp;quot;You must be in Resto Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 79206) then --Spiritwalker&amp;apos;s Grace
	Nova_Moving = false
elseif PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Healing Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Healing Engine --
if Nova_54EventsCheck then
	if not UnitDebuffID(&amp;quot;player&amp;quot;,144850) --Test of Reliance
	and not UnitDebuffID(&amp;quot;player&amp;quot;,142861) then --Ancient Miasma
		SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_SpecialEvents, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true
	end
else
	SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_SpecialEvents, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true	
end


if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then
	members = Nova_CustomT
	lowhpmembers = 0
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].HP &amp;lt; 80 then
			lowhpmembers = lowhpmembers + 1
		end
	end
	
	table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>EarthlivingWeapon</Name><Default>false</Default><SpellID>51730</SpellID><Actions></Actions><Lua>local WEnchant,WEnchantExpires = GetWeaponEnchantInfo()

if ( not WEnchant or ( Wenchant and WEnchantExpires/60000 &amp;lt; 10 ) ) 
and GetSpellCooldown(51730) == 0
and PQR_SpellAvailable(51730)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(51730)
then 
	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WaterShield</Name><Default>false</Default><SpellID>52127</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(52127)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitBuffID(&amp;quot;player&amp;quot;,52127)
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingStreamTotem</Name><Default>false</Default><SpellID>5394</SpellID><Actions></Actions><Lua>local arg1, totemName, startTime, duration = GetTotemInfo( 3 )
local HealingTideTotem = &amp;quot;Healing Tide Totem&amp;quot;
local ManaTideTotem = &amp;quot;Mana Tide Totem&amp;quot;
if (totemName == HealingTideTotem or totemName == ManaTideTotem) 
and (select(2,GetTalentRowSelectionInfo(3)) ~= 8) then --Totemic Persistence talent
	return false
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_SpellAvailable(5394)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(5394) 
and select(2,GetSpellCooldown(5394)) &amp;lt; 2
and not Nova_Moving
then
	return true
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and members[1].HP &amp;lt; 60
and lowhpmembers &amp;lt; 3
and PQR_SpellAvailable(108285) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and select(2,GetSpellCooldown(108285)) &amp;lt; 2
and select(2,GetTalentRowSelectionInfo(3)) == 7 then
	CastSpellByName(tostring(GetSpellInfo(108285),nil))	 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Call of the Elements for reset HST - HP: &amp;quot; ..members[1].HP) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Riptide</Name><Default>false</Default><SpellID>61295</SpellID><Actions></Actions><Lua>if Nova_RiptideCheck then	
	if PQR_SpellAvailable(61295) 	
	and IsUsableSpell(61295) then
		for i=1, #members do
			if members[i].HP &amp;gt; Nova_Riptide then
				break
			end
			if not UnitBuffID(members[i].Unit, 61295, &amp;quot;PLAYER&amp;quot;)
	 		 and IsSpellInRange(GetSpellInfo(61295),members[i].Unit) == 1
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			 then			 
			 	if GlyphCheck(63273) then			 	
			 		if Nova_CheckLastCast(61295, 2.5) then
					 	PQR_CustomTarget = members[i].Unit
					 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRiptide - HP: &amp;quot;..members[i].HP)	
					 	return true
					 end
				else
					PQR_CustomTarget = members[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRiptide - HP: &amp;quot;..members[i].HP)	
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>EarthShield</Name><Default>false</Default><SpellID>974</SpellID><Actions></Actions><Lua>local CEarthShield = false

for i=1, #members do	
	if (UnitBuffID(members[i].Unit, 52127, &amp;quot;PLAYER&amp;quot;) --water shield
	and not UnitIsUnit(members[i].Unit, &amp;quot;player&amp;quot;))
	or (UnitBuffID(members[i].Unit, 974, &amp;quot;PLAYER&amp;quot;)
	and (select(7, UnitBuffID(members[i].Unit, 974, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;gt; 1 
	or select(4, UnitBuffID(members[i].Unit, 974, &amp;quot;PLAYER&amp;quot;)) &amp;gt; 1)
	and UnitThreatSituation(members[i].Unit) == 3)
	or UnitBuffID(&amp;quot;boss1&amp;quot;, 974)
	then
		CEarthShield = true
		break
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield on: &amp;quot;..UnitName(members[i].Unit))
	end
end

if not CEarthShield 
and PQR_SpellAvailable(974) 
and IsUsableSpell(974) 
then
	if #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			 and IsSpellInRange(GetSpellInfo(974),Nova_Tanks[i].Unit) == 1 then
			 	if Nova_FixTankESCheck then
			 		if UnitName(Nova_Tanks[i].Unit) == Nova_FixTankES then			 		
						PQR_CustomTarget = Nova_Tanks[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield tank!&amp;quot;)	
						return true								
					end
				else
					PQR_CustomTarget = Nova_Tanks[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield tank!&amp;quot;)	
					return true												
				end
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFnot Shield: &amp;quot;..UnitName(Nova_Tanks[i].Unit))	
			end
		end
	end
	
	if UnitThreatSituation(members[1].Unit) == 3	 
	 and members[1].HP &amp;lt; 30 
	 and not UnitIsUnit(members[1].Unit, &amp;quot;player&amp;quot;)
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	 and IsSpellInRange(GetSpellInfo(974),members[1].Unit) == 1 then
	 	PQR_CustomTarget = members[1].Unit
	 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield high threat member!&amp;quot;)	
	 	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingSurge</Name><Default>false</Default><SpellID>8004</SpellID><Actions></Actions><Lua>if Nova_HealingSurgeCheck then
	if PQR_SpellAvailable(8004) 
	 and IsSpellInRange(GetSpellInfo(8004),members[1].Unit) == 1
	 and IsUsableSpell(8004)	 
	 and not Nova_Moving 
	 and not stopcasting then
		if ((members[1].HP &amp;lt; Nova_HealingSurge and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_LowMana and not UnitBuffID(&amp;quot;player&amp;quot;,137331)) 
		or (members[1].HP &amp;lt;= 99 and UnitBuffID(&amp;quot;player&amp;quot;,137331) and ((select(7, UnitBuffID(&amp;quot;player&amp;quot;, 137331)) - GetTime()) &amp;gt;= 2))) --Meta gem Lucidity
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 	PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HealingSurge - HP: &amp;quot; ..members[1].HP) 
		 	return true
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingWave</Name><Default>false</Default><SpellID>331</SpellID><Actions></Actions><Lua>if Nova_HealingWaveCheck then
	if PQR_SpellAvailable(331)
	 and IsUsableSpell(331) 	 
	 and IsSpellInRange(GetSpellInfo(331),members[1].Unit) == 1
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_HealingWave 
		and lowhpmembers &amp;lt; 3	
		and UnitBuffID(&amp;quot;player&amp;quot;,53390) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Tidal Waves buff
			 PQR_CustomTarget = members[1].Unit
			 --PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting HealingWave - HP: &amp;quot; ..members[1].HP) 		
			 return true
		end	
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>GreaterHealingWave</Name><Default>false</Default><SpellID>77472</SpellID><Actions></Actions><Lua>if Nova_GreaterHealingWaveCheck then	
	--need Unleash Elements buff?
	if PQR_SpellAvailable(77472) 
	 and IsUsableSpell(77472) 	 
	 and IsSpellInRange(GetSpellInfo(77472),members[1].Unit) == 1
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_GreaterHealingWave then
			if PQR_SpellAvailable(16188) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and select(2,GetTalentRowSelectionInfo(4)) == 11 then 
				CastSpellByName(tostring(GetSpellInfo(16188),nil))	 			
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Ancestral Swiftness then GHW - HP: &amp;quot; ..members[1].HP) 
			end
			
			if UnitBuffID(&amp;quot;player&amp;quot;,53390) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Tidal Waves buff
		 		PQR_CustomTarget = members[1].Unit
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW - HP: &amp;quot; ..members[1].HP) 				
		 		return true
		 	elseif PQR_SpellAvailable(61295) 
		 	and IsUsableSpell(61295) 
		 	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		 	and not UnitDebuffID(members[1].Unit,61295,&amp;quot;PLAYER&amp;quot;) then
		 		PQR_CustomTarget = members[1].Unit
		 		CastSpellByName(tostring(GetSpellInfo(61295)),members[1].Unit)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Riptide then GHW - HP: &amp;quot; ..members[1].HP) 				
		 		return true	 	
		 	end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingRain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_HealingRainCheck then	
	if ((VachiusaRestoShaman_HealingRain_key and not GetCurrentKeyBoardFocus()) 
	or (Nova_HealingRainMouseoverCheck and HRMMode and UnitAffectingCombat(&amp;quot;player&amp;quot;)))
	and not Nova_Moving
	and PQR_SpellAvailable(73920)
	and select(2,GetSpellCooldown(73920)) &amp;lt; 2 	
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and IsUsableSpell(73920) 
	then
		local WEnchant,WEnchantExpires = GetWeaponEnchantInfo()
	
		if PQR_SpellAvailable(73680)  
		and IsUsableSpell(73680) 				
		and Nova_UnleashElementsCheck
		and WEnchant 
		then
			local UEtank = false
			if #Nova_Tanks &amp;gt; 0 
			and Nova_UETankCheck then
				for i=1, #Nova_Tanks do
					if UnitThreatSituation(Nova_Tanks[i].Unit) 
					 and select(2,GetSpellCooldown(73680)) &amp;lt; 2 
					 and not UnitBuffID(Nova_Tanks[i].Unit, 118473)
					 and not UnitBuffID(Nova_Tanks[i].Unit, 73685)
					 and IsSpellInRange(GetSpellInfo(73680),Nova_Tanks[i].Unit) == 1 then										
					 	UEtank = true
						CastSpellByName(tostring(GetSpellInfo(73680)),Nova_Tanks[i].Unit)	 
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Unleash Elements on tank: &amp;quot;..UnitName(Nova_Tanks[i].Unit))
					end
				end
			end
			if not UEtank
			and not UnitBuffID(members[1].Unit, 118473)
			and not UnitBuffID(members[1].Unit, 73685)
			and members[1].HP &amp;lt;= Nova_UnleashElements
			and select(2,GetSpellCooldown(73680)) &amp;lt; 2 
			and IsSpellInRange(GetSpellInfo(73680),members[1].Unit) == 1 then
				CastSpellByName(tostring(GetSpellInfo(73680)),members[1].Unit)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Unleash Elements - HP: &amp;quot;..members[1].HP)				
			end
		end
			
		CastSpellByName(tostring(GetSpellInfo(73920),nil))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft Alt Key Down - Healing Rain!&amp;quot;)
	  	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Stop Casting
if PQI_VachiusaGeneralRestoShaman_StopCasting_enable then
	if UnitExists(&amp;quot;boss1&amp;quot;) then
		local npcid = tonumber(UnitGUID(&amp;quot;boss1&amp;quot; ):sub(6,10), 16)
	else
		local npcid = 0
	end
	
	local _,fire = GetTotemInfo(1)
	local _,earth = GetTotemInfo(2)
	local _,air = GetTotemInfo(4)
	local _, water, waterstartTime, waterduration = GetTotemInfo(3)
	local waterest_dur = waterstartTime+waterduration-GetTime()
	
	if SpellIsTargeting() then
		SpellStopCasting()
	elseif UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and ((UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(331)) --HealingWave
	or ((UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(403)) and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 30)) --LightningBolt
	and not IsLeftControlKeyDown() 
	and (CalStop(members[1].Unit) &amp;lt; 40 or (lowhpmembers &amp;gt; 3 and CalStop(members[1].Unit) &amp;lt; 70)) 
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 12 --prevent stop loop
	and IsUsableSpell(8004) then --prevent stop loop
		SpellStopCasting() 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting HealingWave/LightningBolt - HP: &amp;quot; ..members[1].HP) 		
		return true 
	elseif UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(331)) --HealingWave
	and IsSpellInRange(GetSpellInfo(331),members[1].Unit) == 1
	and CalStop(members[1].Unit) &amp;gt; Nova_LightningBolt and CalStop(members[1].Unit) &amp;gt; 95 then
		SpellStopCasting() 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast HealingWave - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit)..&amp;quot; - overheal: &amp;quot;..select(2, CalStop(members[1].Unit)))	
		return true 
	elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(77472)) --GreaterHealingWave
	and IsSpellInRange(GetSpellInfo(77472),members[1].Unit) == 1
	and not UnitIsUnit(&amp;quot;boss1&amp;quot;,members[1].Unit)
	and CalStop(members[1].Unit) &amp;gt; Nova_GreaterHealingWave and CalStop(members[1].Unit) &amp;gt; Nova_LightningBolt 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
		if npcid ~= 62442 and npcid ~= nil then --Tsulong
			SpellStopCasting() 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting GreaterHealingWave - HP: &amp;quot; ..members[1].HP) 		
			return true 
		end
	elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(8004)) --HealingSurge
	and IsSpellInRange(GetSpellInfo(8004),members[1].Unit) == 1
	and not UnitIsUnit(&amp;quot;boss1&amp;quot;,members[1].Unit)
	and not UnitBuffID(&amp;quot;player&amp;quot;,137331)
	and CalStop(members[1].Unit) &amp;gt; Nova_HealingSurge and CalStop(members[1].Unit) &amp;gt; Nova_LightningBolt 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
		if npcid ~= 62442 and npcid ~= nil then --Tsulong
			SpellStopCasting() 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting HealingSurge - HP: &amp;quot; ..members[1].HP) 		
			return true 	
		end
	elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(1064)) --ChainHeal
	and (CalStop(members[1].Unit) &amp;gt; 95 or (lowhpmembers &amp;lt; 3 and CalStop(members[1].Unit) &amp;gt; 90)) 
	and not UnitDebuffID(&amp;quot;player&amp;quot;,116260)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
		SpellStopCasting() 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting ChainHeal - HP: &amp;quot; ..members[1].HP) 		
		return true	
	elseif water == &amp;quot;Healing Stream Totem&amp;quot; 
	and fire == &amp;quot;&amp;quot;
	and earth == &amp;quot;&amp;quot; 
	and air == &amp;quot;&amp;quot; then
		if waterest_dur &amp;lt;= 2 then
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FLastQueueic Recall HST - waterest_dur: &amp;quot;..waterest_dur) 	
			CastSpellByName(tostring(GetSpellInfo(36936),nil))			
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LightningBolt</Name><Default>false</Default><SpellID>403</SpellID><Actions></Actions><Lua>if Nova_LightningBoltCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and not stopdps
	and PQR_SpellAvailable(403) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsUsableSpell(403)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
	and members[1].HP &amp;gt; Nova_LightningBolt --95
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_ForceLightningBolt
	and lowhpmembers &amp;lt; 3
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not stopcasting then
		return true 
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ascendance</Name><Default>false</Default><SpellID>114049</SpellID><Actions></Actions><Lua>if Nova_AscendanceCheck then	
	if (VachiusaRestoShaman_Ascendance_key and not GetCurrentKeyBoardFocus()) 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and select(2,GetSpellCooldown(114049)) &amp;lt; 2
	and PQR_SpellAvailable(114049)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and IsUsableSpell(114049)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 114052) then
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Control Key Down - Ascendance!&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoTarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoTarget
if Nova_AutoTargetCheck then
	if (not UnitExists(&amp;quot;focus&amp;quot;)
		or UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		or not UnitInRange(&amp;quot;focus&amp;quot;) 
		or not UnitIsConnected(&amp;quot;focus&amp;quot;)
		or not UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))	
	and #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
			then			
	   			TargetUnit(Nova_Tanks[i].Unit)      		
	    		RunMacroText(&amp;quot;/focus&amp;quot;)			
	            RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)			
			end
		end
	end
	
	if UnitExists(&amp;quot;focus&amp;quot;)
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;))
	and not UnitIsDeadOrGhost(&amp;quot;focustarget&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	and UnitExists(&amp;quot;focustarget&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;)
	and IsSpellInRange(GetSpellInfo(403),&amp;quot;focustarget&amp;quot;) == 1
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		TargetUnit(&amp;quot;focustarget&amp;quot;)
		return false 	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Trinket spirit 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then UseInventoryItem(14)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LightningBolt (TC)</Name><Default>false</Default><SpellID>403</SpellID><Actions></Actions><Lua>if Nova_ForceLightningBoltCheck then	
	if ((VachiusaRestoShaman_ChainHeal_key and not GetCurrentKeyBoardFocus()) 
	or select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ForceLightningBolt)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(403) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsUsableSpell(403)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and GlyphCheck(55453)
	and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not stopcasting then
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingTideTotem</Name><Default>false</Default><SpellID>108280</SpellID><Actions></Actions><Lua>if Nova_HealingTideTotemCheck then	
	if (VachiusaRestoShaman_HealingTideTotem_key and not GetCurrentKeyBoardFocus()) then
		local HStimer, HSTotem = GetTotemInfo(3)
		if PQR_SpellAvailable(108280)		
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and HSTotem ~= GetSpellInfo(16190) --Healing Mana Totem
		and IsUsableSpell(108280)
		and select(2,GetTalentRowSelectionInfo(5)) == 13
		then 
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Shift Key Down - Tide totem!&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ManaTideTotem</Name><Default>false</Default><SpellID>16190</SpellID><Actions></Actions><Lua>if Nova_ManaTideCheck then	
	local HStimer, HSTotem = GetTotemInfo(3)
	if PQR_SpellAvailable(16190)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ManaTide
	and HSTotem ~= GetSpellInfo(108280) --Healing Tide Totem
	and HSTotem ~= GetSpellInfo(5394) --Healing Stream Totem
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and not Nova_Moving then
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFManatide - Mana: &amp;quot;..select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)))	
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemicRecall</Name><Default>false</Default><SpellID>36936</SpellID><Actions></Actions><Lua>local _,fire = GetTotemInfo(1)
local _,earth = GetTotemInfo(2)
local _,water = GetTotemInfo(3)
local _,air = GetTotemInfo(4)
local arg1, totemName, startTime, duration = GetTotemInfo( 3 )
local est_dur = startTime+duration-GetTime()

if not UnitCastingInfo(&amp;quot;player&amp;quot;)
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_SpellAvailable(36936)
and fire ~= &amp;quot;Fire Elemental Totem&amp;quot; 
and earth ~= &amp;quot;Earth Elemental Totem&amp;quot; 
and water == &amp;quot;Healing Stream Totem&amp;quot; 
and GlyphCheck(55438) --Glyph of Totemic Recall 
then   
	if est_dur &amp;lt;= 2 then
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FLastQueueic Recall HST&amp;quot;) 		
	  	return true 
	end
end

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_IsMoving(1)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(36936)
and fire ~= &amp;quot;Fire Elemental Totem&amp;quot; 
and earth ~= &amp;quot;Earth Elemental Totem&amp;quot; 
and water ~= &amp;quot;Mana Tide Totem&amp;quot; 
and ( fire ~= &amp;quot;&amp;quot; or earth ~= &amp;quot;&amp;quot; or water ~= &amp;quot;&amp;quot; or air ~= &amp;quot;&amp;quot; ) 
then   
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FLastQueueic Recall&amp;quot;) 		
  	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RiptideTank</Name><Default>false</Default><SpellID>61295</SpellID><Actions></Actions><Lua>if Nova_RiptideTankCheck then
	if PQR_SpellAvailable(61295) 
	and IsUsableSpell(61295) 	
	then
		if #Nova_Tanks &amp;gt; 0 then
			for i=1, #Nova_Tanks do
				if UnitThreatSituation(Nova_Tanks[i].Unit) 
				 and not UnitBuffID(Nova_Tanks[i].Unit, 61295, &amp;quot;PLAYER&amp;quot;)
				 and IsSpellInRange(GetSpellInfo(61295),Nova_Tanks[i].Unit) == 1 then
					if Nova_Tanks[i].HP &amp;lt; Nova_RiptideTank 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						PQR_CustomTarget = Nova_Tanks[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRiptide tank - HP: &amp;quot;..Nova_Tanks[i].HP)	
						return true
					end
				end
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpiritwalkerGrace</Name><Default>false</Default><SpellID>79206</SpellID><Actions></Actions><Lua>if Nova_SpiritWalkerGraceCheck then
	if members[1].HP &amp;lt; Nova_SpiritWalkerGrace 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and IsUsableSpell(79206)
	and PQR_IsMoving(1) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(79206)
	then 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSpirit walker grace - HP: &amp;quot;..members[1].HP)
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- SelfSurvival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,earth = GetTotemInfo(2)

if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then	
	if GetItemCount(5512,false,true) &amp;gt; 0	
	and PQR_SpellAvailable(5512) --Healthstone		
	and GetItemCooldown(5512) == 0
	then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		UseItemByName(5512)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealthstone - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	elseif PQR_SpellAvailable(108270) --Stone Bulwark Totem
	and earth == &amp;quot;&amp;quot;
	and select(2,GetTalentRowSelectionInfo(1)) == 2 --check talent
	and IsUsableSpell(108270)
	and GetSpellCooldown(108270) == 0	
	and not Nova_Moving then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(108270),nil))	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStone Bulwark Totem - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true		
	elseif earth == &amp;quot;&amp;quot;
	and lowhpmembers &amp;lt; 5
	and IsUsableSpell(2062) --Earth Elemental Totem
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(2062) then   
  		CastSpellByName(tostring(GetSpellInfo(2062),nil))	
  		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFEarth Elemental Totem - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
  		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Custom Table --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--------------------------------------
-- Adding Players to Custom Table
--------------------------------------
if Nova_AddingPlayersCTCheck then
	if VachiusaRestoShaman_AddingPlayersCT_key
	and not GetCurrentKeyBoardFocus()
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
	or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) ) then  
		for i=1, #Nova_CustomT do
			if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
				return false
			end
		end
		
		table.insert(Nova_CustomT, { GUID = UnitGUID(&amp;quot;mouseover&amp;quot;) } )
		
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;We just added &amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; to the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
		end
		return true
	
	end
end

--------------------------------------
-- Removing Players from Custom Table
--------------------------------------
if Nova_RemovingPlayersCTCheck then
	if VachiusaRestoShaman_RemovingPlayersCT_key
	and not GetCurrentKeyBoardFocus() 
	and UnitExists(&amp;quot;mouseover&amp;quot;)
	and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
	or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) )then
		for i=1, #Nova_CustomT do
			if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
				if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
					PQR_WriteToChat(&amp;quot;We just removed &amp;quot;..UnitName(Nova_CustomT[i].Unit)..&amp;quot; from the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
				end
				table.remove(Nova_CustomT, i)
				return true
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FireTotem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--FireTotem
local _,fire = GetTotemInfo(1)

--Fire totem
if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not stopdps
and Nova_DPSTotemCheck
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 90
and fire == &amp;quot;&amp;quot;
and UnitExists(&amp;quot;target&amp;quot;)
and IsUsableSpell(2894) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(2894)
and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then   
  CastSpellByName(tostring(GetSpellInfo(2894),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFFire Elemental Totem&amp;quot;) 
  return true 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not stopdps
and Nova_DPSTotemCheck
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 90
and fire == &amp;quot;&amp;quot;
and UnitExists(&amp;quot;target&amp;quot;)
and IsUsableSpell(3599) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(3599)
and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then   
  CastSpellByName(tostring(GetSpellInfo(3599),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFSearing Totem&amp;quot;) 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AirTotem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AirTotem
local _,air = GetTotemInfo(4)

--Air totem - maybe need to add tank range check for make sure if will effect on tank
if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and Nova_SpiritLinkTotemCheck
and air == &amp;quot;&amp;quot;
and members[1].HP &amp;lt; 30
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and lowhpmembers &amp;gt; 4
and IsUsableSpell(98008) 
and PQR_SpellAvailable(98008) then   
  CastSpellByName(tostring(GetSpellInfo(98008),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFSpirit Link Totem - HP&amp;quot;..members[1].HP) 
  return true 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 90
and air == &amp;quot;&amp;quot;
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(8177) 
and PQR_SpellAvailable(8177) then   
  CastSpellByName(tostring(GetSpellInfo(8177),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFGrounding Totem&amp;quot;) 
  return true 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and air == &amp;quot;&amp;quot;
and (UnitBuffID(&amp;quot;player&amp;quot;, 32182) --Heroism
or UnitBuffID(&amp;quot;player&amp;quot;, 2825) --Bloodlust
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) --Time Warp
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)) --Ancient Hysteria
and IsUsableSpell(120668) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(120668) then   
  CastSpellByName(tostring(GetSpellInfo(120668),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFStormlash Totem&amp;quot;) 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TsulongHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--TsulongHeal 
if Nova_53EventsCheck then	
	local bossCheck = &amp;quot;boss1&amp;quot; 
	local tsulongboss = false
	if UnitExists(bossCheck) then 
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16) 	        
		if npcID == 62442 
		and UnitAffectingCombat(&amp;quot;player&amp;quot;) then --Tsulong	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug NPCID: &amp;quot; ..npcID) 
			tsulongboss = true
		end
	end	
	
	if tsulongboss
	and PQR_SpellAvailable(77472)  	
	and IsUsableSpell(77472) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and IsSpellInRange(GetSpellInfo(77472),&amp;quot;boss1&amp;quot;) == 1
	and not Nova_Moving then
		if Nova_UnitInfo(&amp;quot;boss1&amp;quot;) &amp;lt; 100 then	
			--if PQR_SpellAvailable(73680)  
			--and IsUsableSpell(73680) 		
			--and select(2,GetSpellCooldown(73680)) &amp;lt; 2 then
				--if not UnitBuffID(&amp;quot;boss1&amp;quot;, 118473) --Unleashed Fury 
				--and not UnitBuffID(&amp;quot;boss1&amp;quot;, 73685) then										
					--CastSpellByName(tostring(GetSpellInfo(73680)),&amp;quot;boss1&amp;quot;)	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Unleash Elements on Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))											
				--end			
			--end
					
			if PQR_SpellAvailable(974) 			
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and IsUsableSpell(974) then
				if UnitBuffID(&amp;quot;boss1&amp;quot;, 974, &amp;quot;player&amp;quot;) then
					if select(7, UnitBuffID(&amp;quot;boss1&amp;quot;, 974, &amp;quot;player&amp;quot;)) - GetTime() &amp;lt;= 1 
					 or select(4, UnitBuffID(&amp;quot;boss1&amp;quot;, 974, &amp;quot;player&amp;quot;)) &amp;lt;= 1 
					 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(974)),&amp;quot;boss1&amp;quot;)	 
						PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew Earth Shield Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))
					end
				else
					CastSpellByName(tostring(GetSpellInfo(974)),&amp;quot;boss1&amp;quot;)	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Earth Shield Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))
				end
			end
			
			if PQR_SpellAvailable(61295) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and IsUsableSpell(61295) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;,61295,&amp;quot;PLAYER&amp;quot;) then			
				CastSpellByName(tostring(GetSpellInfo(61295)),&amp;quot;boss1&amp;quot;)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Riptide Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 							
			end	
				
			if PQR_SpellAvailable(16188) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and select(2,GetSpellCooldown(16188)) &amp;lt; 2
			and (UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Омовение светом&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;))
			and select(2,GetTalentRowSelectionInfo(4)) == 11 then 
				CastSpellByName(tostring(GetSpellInfo(16188)),&amp;quot;player&amp;quot;)	 			
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Ancestral Swiftness then GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 			
				CastSpellByName(tostring(GetSpellInfo(77472)),&amp;quot;boss1&amp;quot;)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 				
				return true							
			end
						
			if PQR_SpellAvailable(8004) 	
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)	
			and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Омовение светом&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
	 		and IsUsableSpell(8004) then
	 			CastSpellByName(tostring(GetSpellInfo(8004)),&amp;quot;boss1&amp;quot;)	 
	 			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HSurge on Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
				return true
			end		
	
			if members[1].HP &amp;gt; 30 --Prevent raid wipe
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and lowhpmembers &amp;lt; 10 then 
				CastSpellByName(tostring(GetSpellInfo(77472)),&amp;quot;boss1&amp;quot;)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 				
				return true	
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (VachiusaRestoShaman_PauseRotation_key and not GetCurrentKeyBoardFocus())
 or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
 or IsMounted() 
 or (UnitBuffID(&amp;quot;player&amp;quot;,2645) and Nova_Moving) --Ghost Wolf
 or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink 
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChainHealSmart</Name><Default>false</Default><SpellID>1064</SpellID><Actions></Actions><Lua>if Nova_ChainHealCheck then
	if PQR_SpellAvailable(1064) 
	 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_LowMana 
	 and IsUsableSpell(1064)		 
	 and not Nova_Moving
	 and AverageHealth(Nova_ChainHealLimit) &amp;lt;= Nova_ChainHeal
	 and not stopcasting 
	 and not LLdebuff 
	 then
		PRGetDistanceTable((Nova_ChainHeal+5), 13, 3) --12.5	
		PRGetDistanceTablebyHP(Nova_ChainHeal,3)
			
		if IsSpellInRange(GetSpellInfo(1064),prdistancebyhp[1].Unit) 
		and prdistancebyhp[1].PD &amp;gt;= 3
		and prdistancebyhp[1].HP &amp;lt;= Nova_ChainHeal 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
			PQR_CustomTarget = prdistancebyhp[1].Unit
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast CH - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - PD: &amp;quot;..prdistancebyhp[1].PD) 			
			return true							
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ResAndMRes</Name><Default>false</Default><SpellID>51886</SpellID><Actions></Actions><Lua>--ResAndMRes
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitIsConnected(&amp;quot;mouseover&amp;quot;)
and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 			
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and not UnitHasIncomingResurrection(&amp;quot;mouseover&amp;quot;) 
then		
	if PQR_SpellAvailable(83968) 		
	and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(95223)) ----Mass Resurrection debuff
	and Nova_CheckLastCast(83968, 2.0)		
	then
		if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
		end
		local deadnum = 0
		if group then
			for i = 1, GetNumGroupMembers() do 
				local member = group..i
				if UnitIsDeadOrGhost(member) then
					if not UnitDebuff(member, GetSpellInfo(95223)) then ----Mass Resurrection debuff 
						deadnum = deadnum + 1
					end
				end
			end
		end		
		if deadnum &amp;gt;= 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(83968),nil)) --Mass Resurrection	 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto MasRes!&amp;quot;)
			return true		
		end
	end
	
	if PQR_SpellAvailable(2008)
	and IsUsableSpell(2008) 	
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)	
	and Nova_CheckLastCast(2008, 2.0)	
	and (IsSpellInRange(GetSpellInfo(2008),&amp;quot;mouseover&amp;quot;) == 1) 		
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) then 
		CastSpellByName(tostring(GetSpellInfo(2008)),&amp;quot;mouseover&amp;quot;) --Resurrection	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto Res!&amp;quot;)
		return true			
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Drink</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_SpellAvailable(80618) --Mage cookies	
and not UnitBuffID(&amp;quot;player&amp;quot;, 104269)
and not Nova_Moving 
and GetItemCooldown(80618) == 0 then
	UseItemByName(80618)
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMage cookies - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- 53Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_53EventsCheck then
	local boss,bossid = bossid()
	local dispelid = 51886	
	local purgeid = 370	
	local buff = { }
	stopcasting = false
	stopfade = false
	stopdps = false
	LLdebuff = false
	LLdebuffunit = false	
	if UnitExists(boss) then
		local _, _, rdifficulty = GetInstanceInfo()
		--TFT raid		
		if bossid == 69465 and (rdifficulty == 5 or rdifficulty ==6) then --Jin&amp;apos;rokh the Breaker
			local buff = { 138732 } --Ionization 
			local fluiditydebuff  = 138002 --Fluidity
			RaidJBDispel(dispelid,buff,fluiditydebuff,5)
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 
			if LLdebuff
			and UnitBuffID(LLdebuffunit, 974, &amp;quot;PLAYER&amp;quot;) 
			and PQR_SpellAvailable(974) 
			and IsUsableSpell(974) then
				CastSpellByName(tostring(GetSpellInfo(974)),&amp;quot;player&amp;quot;)	
				return true
			end			
		elseif bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68476 then --Horridon
			local buff  = { 136708, 136719, 136512 }
			RaidDispel(dispelid,buff) 
		elseif bossid == 68065 or bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head 
			local buff  = { 139822 } 	
			RaidRangeDispel(dispelid,buff,10) 		
		elseif bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispelDelay(dispelid,buff,5)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end			
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then 
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff) --Protectors of the Endless, Lightning Prison
			SBossDispel(117283,purgeid) --Protectors of the Endless, Cleansing Waters 	
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			SBossDispel(123011,dispelid)
			--RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60708 then --Meng the Demented
			for i=1, #members do	
				if UnitDebuffID(members[i].Unit, 117708) then --Maddening Shout
					stopdps = true
					break
				end
			end			
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		end		
		
		--HoF raid
		if bossid == 62397 then
			SBossDispel(122149,purgeid)
		--MSV raid
		elseif bossid == 60701 or bossid == 60708 or bossid == 60709 or bossid == 60710 then
			SBossDispel(117697,purgeid)
		--TeS raid
		elseif bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- 4xEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_4xEventsCheck then --Old raid
	local boss,bossid = bossid()
	if UnitExists(boss) then					
		if bossid == 55294 then
			local PQ_SN = PQ_Shrapnel
			local PQ_FL = PQ_FadingLight
			local PQ_HOT = PQ_HourOfTwilight				
		
			-- Fading Light Debuff
			for i=1,#PQ_FL do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
			
			-- Hour of Twilight
			if false then
				if PQR_SpellAvailable(115176)
				and select(2,GetSpellCooldown(115176)) &amp;lt; 2
				then SpellStopCasting() CastSpellByName(tostring(GetSpellInfo(115176)),&amp;quot;player&amp;quot;) return true end
			else
				local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(boss) 
				for i=1,#PQ_HOT do
					if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					end
				end
			end
		end
		
		if bossid == 56173 then
			-- Target for Shrapnel
			for i=1,#PQ_SN do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i])) - GetTime() &amp;lt; 2 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RacialsCheck
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then

	local PQ_Class = select(2, UnitClass(&amp;quot;player&amp;quot;)) 
	
	--Draenei 
	local GiftOfTheNaaru = 59542	
	--Blood Elf
	local ArcaneTorrent = 28730 --mana regen
	
	if PQ_Class == &amp;quot;PALADIN&amp;quot; then
		GiftOfTheNaaru = 59542	
	elseif PQ_Class == &amp;quot;MONK&amp;quot; then 
		GiftOfTheNaaru = 121093
		ArcaneTorrent = 129597 --chi regen
	elseif PQ_Class == &amp;quot;PRIEST&amp;quot; then  
		GiftOfTheNaaru = 59544
	elseif PQ_Class == &amp;quot;SHAMAN&amp;quot; then 
		GiftOfTheNaaru = 59547
	end

	--Troll 
	local Berserking = 26297 
	--Undead
	local WillOfTheForsaken = 7744  
	--Dwarven 
	local Stoneform = 20594 
	--Human 
	local EveryManForHimself = 59752
	--Undead 
	--local Cannibalize = 20577 --not much helpful
	--Orc 
	local BloodFury = 33702
	--Gloves Engineer
	local _, GECooldown, GEReady = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10)
			
	--HP
	if IsSpellKnown(GiftOfTheNaaru) 
	and GetSpellCooldown(GiftOfTheNaaru) == 0 
	and PQR_SpellAvailable(GiftOfTheNaaru)
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30	
	then		
		CastSpellByName(tostring(GetSpellInfo(GiftOfTheNaaru),nil))	 
		return true 
	end
	
	--Mana
	if IsSpellKnown(ArcaneTorrent) 
	and PQ_Class ~= &amp;quot;MONK&amp;quot;
	and GetSpellCooldown(ArcaneTorrent) == 0 
	and PQR_SpellAvailable(ArcaneTorrent)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80	
	then		
		CastSpellByName(tostring(GetSpellInfo(ArcaneTorrent),nil))	 
		return true 
	end	
  	
  	--CDs
  	if not racialcds then
	  	function racialcds()
			if IsSpellKnown(BloodFury) 
			and GetSpellCooldown(BloodFury) == 0 
			and PQR_SpellAvailable(BloodFury)	
			then		
				CastSpellByName(tostring(GetSpellInfo(BloodFury),nil))	 
				return true 
			elseif IsSpellKnown(Berserking) 
			and GetSpellCooldown(Berserking) == 0 
			and PQR_SpellAvailable(Berserking)	
			then		
				CastSpellByName(tostring(GetSpellInfo(Berserking),nil))	 
				return true 
			elseif GECooldown == 0 
			and GEReady == 1 then
				UseInventoryItem(10)
			end
		end
	end
  	
  	if lowhpmembers &amp;gt;=5 then
  		racialcds()
  	end
  	
  	--Removes any Charm, Fear and Sleep effect
	if not GotFear then
		function GotFear(t) 
			local debuff = { 10326, 8122, 2094, 5782, 5484, 6358, 5246 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end
	if IsSpellKnown(WillOfTheForsaken) 
	and GetSpellCooldown(WillOfTheForsaken) == 0 
	and PQR_SpellAvailable(WillOfTheForsaken)	
	and GotFear(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(WillOfTheForsaken),nil))	 
		return true 
	end  
	
	--Removes all poison, disease and bleed effects and reduces all damage taken by 10% for 8 sec
	if not GotPoison then
		function GotPoison(t)
			local i, debuff = 1, select(5,UnitDebuff(t, 1)) 
			while debuff do
				if debuff == &amp;quot;Poison&amp;quot; or debuff == &amp;quot;Disease&amp;quot; then return true end
				i = i + 1 debuff = select(5,UnitDebuff(t, i)) 
			end
		end
	end	
	if IsSpellKnown(Stoneform) 
	and GetSpellCooldown(Stoneform) == 0 
	and PQR_SpellAvailable(Stoneform)	
	and GotPoison(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(Stoneform),nil))	 
		return true 
	end    	
	
	--Removes all movement impairing effects and all effects which cause loss of control of your character
	if not LostControl then
		function LostControl(t) 
			local debuff = { 122, 10326, 8122, 2094, 5782, 5484, 6358, 5246, 408 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end  
	if IsSpellKnown(EveryManForHimself) 
	and GetSpellCooldown(EveryManForHimself) == 0 
	and PQR_SpellAvailable(EveryManForHimself)	
	and LostControl(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(EveryManForHimself),nil))	 
		return true 
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- PQI Variables --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Variables
if PQInterfaceLoaded and PQInterfaceUpdated and PQInterfaceDataLoaded then
	--They have PQI and its up-to-date use PQI
	
	PQI_Variables_Loaded = PQI_VachiusaGeneralRestoShaman_AutoOpenPQIOptions_enable
	VachiusaRestoShaman_AutoOpenPQIOptions_enable = PQI_VachiusaGeneralRestoShaman_AutoOpenPQIOptions_enable

	Nova_RiptideCheck = PQI_VachiusaHealingRestoShaman_Riptide_enable
	Nova_Riptide = PQI_VachiusaHealingRestoShaman_Riptide_value
	Nova_RiptideTankCheck = PQI_VachiusaHealingRestoShaman_RiptideTank_enable
	Nova_RiptideTank = PQI_VachiusaHealingRestoShaman_RiptideTank_value
	Nova_HealingSurgeCheck = PQI_VachiusaHealingRestoShaman_HealingSurge_enable
	Nova_HealingSurge = PQI_VachiusaHealingRestoShaman_HealingSurge_value
	Nova_HealingSurgeTankCheck = PQI_VachiusaHealingRestoShaman_HealingSurgeTank_enable
	Nova_HealingSurgeTank = PQI_VachiusaHealingRestoShaman_HealingSurgeTank_value
	Nova_GreaterHealingWaveCheck = PQI_VachiusaHealingRestoShaman_GreaterHealingWave_enable
	Nova_GreaterHealingWave = PQI_VachiusaHealingRestoShaman_GreaterHealingWave_value
	Nova_HealingWaveCheck = PQI_VachiusaHealingRestoShaman_HealingWave_enable
	Nova_HealingWave = PQI_VachiusaHealingRestoShaman_HealingWave_value
	Nova_UETankCheck = PQI_VachiusaHealingRestoShaman_UETank_enable
	Nova_UnleashElementsCheck = PQI_VachiusaHealingRestoShaman_UnleashElements_enable
	Nova_UnleashElements = PQI_VachiusaHealingRestoShaman_UnleashElements_value
		
	Nova_SpiritWalkerGraceCheck = PQI_VachiusaCDRestoShaman_SpiritWalkerGrace_enable
	Nova_SpiritWalkerGrace = PQI_VachiusaCDRestoShaman_SpiritWalkerGrace_value
	Nova_ManaTideCheck = PQI_VachiusaCDRestoShaman_ManaTide_enable
	Nova_ManaTide = PQI_VachiusaCDRestoShaman_ManaTide_value
	Nova_ChainHealCheck = PQI_VachiusaCDRestoShaman_ChainHeal_enable
	Nova_ChainHeal = PQI_VachiusaCDRestoShaman_ChainHeal_value
	Nova_ChainHealLimitCheck = PQI_VachiusaCDRestoShaman_ChainHealLimit_enable
	Nova_ChainHealLimit = PQI_VachiusaCDRestoShaman_ChainHealLimit_value
	Nova_PrimalElementalistCheck = PQI_VachiusaCDRestoShaman_PrimalElementalist_enable
	Nova_PrimalElementalist = PQI_VachiusaCDRestoShaman_PrimalElementalist_value
	Nova_PrimalElementalistLimitCheck = PQI_VachiusaCDRestoShaman_PrimalElementalistLimit_enable
	Nova_PrimalElementalistLimit = PQI_VachiusaCDRestoShaman_PrimalElementalistLimit_value
	Nova_PrimalElementalistBuffsOnlyCheck = PQI_VachiusaCDRestoShaman_PrimalElementalistBuffsOnly_enable		
	Nova_AutoTargetCheck = PQI_VachiusaGeneralRestoShaman_AutoTarget_enable
	Nova_AutoTarget = PQI_VachiusaGeneralRestoShaman_AutoTarget_value
	Nova_FixTankESCheck = PQI_VachiusaGeneralRestoShaman_FixTankES_enable
	Nova_FixTankES = PQI_VachiusaGeneralRestoShaman_FixTankES_value
	Nova_SpiritLinkTotemCheck = PQI_VachiusaGeneralRestoShaman_SpiritLinkTotem_enable
	Nova_SpiritLinkTotem = PQI_VachiusaGeneralRestoShaman_SpiritLinkTotem_value
	Nova_DPSTotemCheck = PQI_VachiusaGeneralRestoShaman_DPSTotem_enable
	Nova_DPSTotem = PQI_VachiusaGeneralRestoShaman_DPSTotem_value
	Nova_LightningBoltCheck = PQI_VachiusaGeneralRestoShaman_LightningBolt_enable
	Nova_LightningBolt = PQI_VachiusaGeneralRestoShaman_LightningBolt_value
	Nova_ForceLightningBoltCheck = PQI_VachiusaGeneralRestoShaman_ForceLightningBolt_enable
	Nova_ForceLightningBolt = PQI_VachiusaGeneralRestoShaman_ForceLightningBolt_value		
	Nova_DPSCheck = PQI_VachiusaGeneralRestoShaman_DPS_enable
	Nova_DPS = PQI_VachiusaGeneralRestoShaman_DPS_value
	Nova_PurifySpiritCheck = PQI_VachiusaGeneralRestoShaman_PurifySpirit_enable
	Nova_PurifySpirit = PQI_VachiusaGeneralRestoShaman_PurifySpirit_value
	Nova_LowManaCheck = PQI_VachiusaGeneralRestoShaman_LowMana_enable
	Nova_LowMana = PQI_VachiusaGeneralRestoShaman_LowMana_value
	Nova_RacialsCheck = PQI_VachiusaGeneralRestoShaman_Racials_enable
	Nova_Racials = PQI_VachiusaGeneralRestoShaman_Racials_value
	Nova_4xEventsCheck = PQI_VachiusaGeneralRestoShaman_4xEvents_enable
	Nova_4xEvents = PQI_VachiusaGeneralRestoShaman_4xEvents_value
	Nova_53EventsCheck = PQI_VachiusaGeneralRestoShaman_53Events_enable
	Nova_53Events = PQI_VachiusaGeneralRestoShaman_53Events_value
	Nova_54EventsCheck = PQI_VachiusaGeneralRestoShaman_54Events_enable
	Nova_54Events = PQI_VachiusaGeneralRestoShaman_54Events_value	
	Nova_SpecialEvents = PQI_VachiusaGeneralRestoShaman_SpecialEvents_enable	
	Nova_AutoEventDispel = PQI_VachiusaGeneralRestoShaman_AutoEventDispel_enable
	Nova_QueueSysCheck = PQI_VachiusaGeneralRestoShaman_QueueSys_enable
	Nova_QueueSys = PQI_VachiusaGeneralRestoShaman_QueueSys_value	
	Nova_Mouseover = PQI_VachiusaGeneralRestoShaman_MouseoverHeal_enable
	Nova_TargetHeal = PQI_VachiusaGeneralRestoShaman_TargetHeal_enable
	Nova_NPCMouseoverHeal = PQI_VachiusaGeneralRestoShaman_NPCMouseoverHeal_enable
	Nova_PetHeal = PQI_VachiusaGeneralRestoShaman_PetHeal_enable
	Vdebug = PQI_VachiusaGeneralRestoShaman_Vdebug_enable

	
	if Nova_LowHP == nil then Nova_LowHP = 80 end
	if Nova_ActualHP == nil or Nova_ActualHP then Nova_ActualHP = false end
	
	-- Hotkeys
	if not PQI_Hotkeys_Functions_Set then
		function PQI_PauseRotation()
			if PQI_VachiusaHealingRestoShaman_PauseRotation_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_PauseRotation_key) then
			return true else return false 
		end	end
		function PQI_HealingTideTotem()
			if PQI_VachiusaHealingRestoShaman_HealingTideTotem_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_HealingTideTotem_key) then
			return true else return false
		end	end		
		function PQI_HealingRainMouseover()
			if PQI_VachiusaHealingRestoShaman_HealingRainMouseover_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_HealingRainMouseover_key) then
			return true else return false
		end	end	
		function PQI_HealingRain()
			if PQI_VachiusaHealingRestoShaman_HealingRain_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_HealingRain_key) then
			return true else return false
		end	end	
		function PQI_Ascendance()
			if PQI_VachiusaHealingRestoShaman_Ascendance_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_Ascendance_key) then
			return true else return false
		end	end
		function PQI_AddingPlayersCT()
			if PQI_VachiusaHealingRestoShaman_AddingPlayersCT_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_AddingPlayersCT_key) then
			return true else return false
		end	end	
		function PQI_RemovingPlayersCT()
			if PQI_VachiusaHealingRestoShaman_RemovingPlayersCT_enable and PQI:IsHotkeys(PQI_VachiusaHealingRestoShaman_RemovingPlayersCT_key) then
			return true else return false
		end	end			
	end	
	
	Nova_PauseRotationCheck = PQI_VachiusaHealingRestoShaman_PauseRotation_enable
	Nova_HealingTideTotemCheck = PQI_VachiusaHealingRestoShaman_HealingTideTotem_enable
	Nova_HealingRainMouseoverCheck = PQI_VachiusaHealingRestoShaman_HealingRainMouseover_enable
	Nova_HealingRainCheck = PQI_VachiusaHealingRestoShaman_HealingRain_enable
	Nova_AscendanceCheck = PQI_VachiusaHealingRestoShaman_Ascendance_enable	
	Nova_AddingPlayersCTCheck = PQI_VachiusaHealingRestoShaman_AddingPlayersCT_enable
	Nova_RemovingPlayersCTCheck = PQI_VachiusaHealingRestoShaman_RemovingPlayersCT_enable
	
	VachiusaRestoShaman_PauseRotation_key = PQI_PauseRotation()
	VachiusaRestoShaman_HealingTideTotem_key = PQI_HealingTideTotem()
	VachiusaRestoShaman_HealingRainMouseover_key = PQI_HealingRainMouseover()
	VachiusaRestoShaman_HealingRain_key = PQI_HealingRain()
	VachiusaRestoShaman_Ascendance_key = PQI_Ascendance()	
	VachiusaRestoShaman_AddingPlayersCT_key = PQI_AddingPlayersCT()
	VachiusaRestoShaman_RemovingPlayersCT_key = PQI_RemovingPlayersCT()	

	--Set PQI
	if not PQI_VachiusaRestoShaman_Set and VachiusaRestoShaman_AutoOpenPQIOptions_enable ~= nil then
		RunMacroText(&amp;quot;/PQI show&amp;quot;)
		RunMacroText(&amp;quot;/PQI config show&amp;quot;)
		RunMacroText(&amp;quot;/PQI config width 220&amp;quot;)
		if not VachiusaRestoShaman_AutoOpenPQIOptions_enable then
		RunMacroText(&amp;quot;/PQI config hide&amp;quot;) end
		PQI_VachiusaRestoShaman_Set = true
	end
end

--PQI is not loading variables instantly any more ?_? need to delay till they are loaded to avoid errors!
if PQI_Variables_Loaded == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingSurgeTank</Name><Default>false</Default><SpellID>8004</SpellID><Actions></Actions><Lua>--HealingSurgeTank
if Nova_HealingSurgeTankCheck then
	if PQR_SpellAvailable(8004) 
	 and UnitAffectingCombat(&amp;quot;player&amp;quot;)	 
	 and IsUsableSpell(8004)
	 and not Nova_Moving 
	 and not UnitChannelInfo(&amp;quot;player&amp;quot;)
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;)	 
	 and not stopcasting then	 
		if #Nova_Tanks &amp;gt; 0 then
			for i=1, #Nova_Tanks do
				if UnitThreatSituation(Nova_Tanks[i].Unit) 	
				 and Nova_Tanks[i].HP &amp;lt;= Nova_HealingSurgeTank
				 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 10 		 
				 and IsSpellInRange(GetSpellInfo(8004),Nova_Tanks[i].Unit) == 1 then					 
					PQR_CustomTarget = Nova_Tanks[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealing Surge Tank!&amp;quot;)	
					return true					
				end
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- 54Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_54EventsCheck 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	local boss,bossid = bossid()
	local dispelid = 51886	
	local purgeid = 370	
	local rangecheckid = 331
	local buff = { }
	stopcasting = false
	stopfade = false
	stopdps = false
	LLdebuff = false
	LLdebuffunit = false
	if UnitExists(boss) then
		--local _, _, rdifficulty = GetInstanceInfo()
		if bossid == 71515 then --General Nazgrim
			if UnitBuffID(&amp;quot;boss1&amp;quot;, 143593) then --Defensive Stance
				stopdps = true				
			else
				stopdps = false
			end
		elseif bossid == 71995 or bossid == 71996 or bossid == 72000 then --Amalgam of Corruption - Norushen
			if UnitDebuffID(&amp;quot;player&amp;quot;,144850) --Test of Reliance
			then 
				BossSheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, 3, true, rangecheckid)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true
				local buff  = { 144514 } --Lingering Corruption
				RaidDispel(dispelid,buff) 	
			end
		elseif bossid == 71475 or bossid == 71479 or bossid == 71480 then --The Fallen Protectors
			local buff  = { 143434 } --Shadow Word: Bane
			RaidDispel(dispelid,buff) 	
		elseif bossid == 71734 then --Sha of Pride
			if UnitDebuffID(&amp;quot;player&amp;quot;,144359) then
				local buff  = { 144351 } --Mark of Arrogance
				RaidDispel(dispelid,buff) 			
			end
		elseif bossid == 71454 then --Malkorok	
			local buff  = { 142913 } 	
			RaidRangeDispel(dispelid,buff,8) 	
			if UnitDebuffID(&amp;quot;player&amp;quot;,142861) then --Ancient Miasma			
				ShieldSheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true					
			end
		elseif bossid == 71161 then --Kil&amp;apos;ruk the Wind-Reaver - Paragons of the Klaxxi
			if UnitDebuffID(&amp;quot;player&amp;quot;,141858) then --Ingenious			
				if not tIngenious or (#tIngenious &amp;gt; 0 and (GetTime() &amp;gt; tIngenious[1].Time + 30)) then
					tIngenious = { }						
					local qTime = GetTime() 
					local lastmax = 0
					local maxunit = &amp;quot;player&amp;quot;		
					local lasttype = &amp;quot;notype&amp;quot;						
					local ClassList = { {&amp;apos;WARRIOR&amp;apos;, 0 }, {&amp;apos;PALADIN&amp;apos;, 0 }, {&amp;apos;HUNTER&amp;apos;, 0 }, {&amp;apos;ROGUE&amp;apos;, 0 }, {&amp;apos;PRIEST&amp;apos;, 0 }, {&amp;apos;DEATHKNIGHT&amp;apos;, 0 }, {&amp;apos;SHAMAN&amp;apos;, 0 }, {&amp;apos;MAGE&amp;apos;, 0 }, {&amp;apos;WARLOCK&amp;apos;, 0 }, {&amp;apos;MONK&amp;apos;, 0 }, {&amp;apos;DRUID&amp;apos;, 0 } }				
					local RaceList = { {&amp;apos;Draenei&amp;apos;, 0 }, {&amp;apos;Gnome&amp;apos;, 0 }, {&amp;apos;Human&amp;apos;, 0 }, {&amp;apos;NightElf&amp;apos;, 0 }, {&amp;apos;Worgen&amp;apos;, 0 }, {&amp;apos;Pandaren&amp;apos;, 0 }, {&amp;apos;BloodElf&amp;apos;, 0 }, {&amp;apos;Goblin&amp;apos;, 0 }, {&amp;apos;Orc&amp;apos;, 0 }, {&amp;apos;Tauren&amp;apos;, 0 }, {&amp;apos;Troll&amp;apos;, 0 }, {&amp;apos;Scourge&amp;apos;, 0 } }
					for i=1,25 do
						local unitCheck = &amp;quot;raid&amp;quot;..i
					    if UnitExists(unitCheck) and UnitIsPlayer(unitCheck) then
					    	local _, unitClass = UnitClass(unitCheck)				    	
					    	local _, unitRace = UnitRace(unitCheck)				    	
					        if unitClass and UnitRace then	
								--Class
								for j=1, #ClassList do
									if unitClass == ClassList[j][1] then
										--PQR_WriteToChat(&amp;quot;Debug1 - Num: &amp;quot; ..ClassList[j][2]..&amp;quot; - Class: &amp;quot; ..ClassList[j][1])
										ClassList[j][2] = ClassList[j][2] + 1
										if ClassList[j][2] &amp;gt; lastmax then
											lastmax = ClassList[j][2]
											maxunit = unitCheck
											lasttype = ClassList[j][1]
										end												
									end		
								end
								--Race
								for j=1, #RaceList do
									if unitRace == RaceList[j][1] then
										--PQR_WriteToChat(&amp;quot;Debug1 - Num: &amp;quot; ..RaceList[j][2]..&amp;quot; - Race: &amp;quot; ..RaceList[j][1])
										RaceList[j][2] = RaceList[j][2] + 1
										if RaceList[j][2] &amp;gt; lastmax then
											lastmax = RaceList[j][2]
											maxunit = unitCheck
											lasttype = RaceList[j][1]
										end												
									end		
								end
					        end			               	
					    end
					end				
					--PQR_WriteToChat(&amp;quot;Debug1 - Unit: &amp;quot; ..maxunit..&amp;quot; - Type: &amp;quot; ..lasttype..&amp;quot; - Total: &amp;quot; ..lastmax..&amp;quot; - Time: &amp;quot; ..qTime)		
					table.insert(tIngenious, { Unit = maxunit, Type = lasttype, Total = lastmax, Time = qTime } )
					return true								
				else
					if #tIngenious &amp;gt; 0 then			
						if UnitExists(tIngenious[1].Unit) 
						and IsSpellInRange(GetSpellInfo(rangecheckid),tIngenious[1].Unit) == 1
						and CanHeal(tIngenious[1].Unit) then	
			    			TargetUnit(tIngenious[1].Unit) 
			                --Press the ExtraActionButton 
			                RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)                     
			                RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
			                --PQR_WriteToChat(&amp;quot;Ingenious Name: &amp;quot;..UnitName(tIngenious[1].Unit)..&amp;quot; - Type: &amp;quot;..tIngenious[1].Type..&amp;quot; - Total: &amp;quot;..tIngenious[1].Total..&amp;quot; - Time: &amp;quot;..tIngenious[1].Time)						        					        	   	
						end
					end				
				end   				
			else
				tIngenious = false
			end
		elseif bossid == 71529 then --Thok the Bloodthirsty
			local buff  = { 143791 } --Corrosive Blood
			RaidDispel(dispelid,buff) 
			local DeafeningScreech = GetSpellInfo(143343) --Deafening Screech
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == DeafeningScreech) then
				stopcasting = true
			end							
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- NPCMouseoverHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--NPCMouseoverHeal
if Nova_NPCMouseoverHeal
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
then
	local dispelid = 51886	
	local purgeid = 370	
	local rangecheckid = 331	
	if UnitExists(&amp;quot;mouseover&amp;quot;)				
	and not UnitIsPlayer(&amp;quot;mouseover&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;mouseover&amp;quot;):sub(6,10), 16) 				
		if npcID == 71604 --Contaminated Puddle - Immerseus - SoO
		or npcID == 71995 or npcID == 71996 or npcID == 72000 --Norushen
		or npcID == 71357 --Wrathion 
		then				
			if IsSpellInRange(GetSpellInfo(rangecheckid),&amp;quot;mouseover&amp;quot;) --HealingWave
			and Nova_UnitInfo(&amp;quot;mouseover&amp;quot;) &amp;lt; 100 then													
				if PQR_SpellAvailable(8004) 	
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)	
				and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70
		 		and IsUsableSpell(8004) then
		 			CastSpellByName(tostring(GetSpellInfo(8004)),&amp;quot;mouseover&amp;quot;)	 			 			
		 			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HSurge - Name: &amp;quot; ..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;mouseover&amp;quot;)..&amp;quot; - NPCID: &amp;quot;..npcID) 	
					return true
				end		
		
				if PQR_SpellAvailable(77472) 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and IsUsableSpell(77472) then
					CastSpellByName(tostring(GetSpellInfo(77472)),&amp;quot;mouseover&amp;quot;)	 
			 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW - Name: &amp;quot; ..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;mouseover&amp;quot;)..&amp;quot; - NPCID: &amp;quot;..npcID) 
			 		return true
				end							
			end
		end		
	elseif UnitExists(&amp;quot;focus&amp;quot;)				
	and not UnitIsPlayer(&amp;quot;focus&amp;quot;) then
		local npcID = tonumber(UnitGUID(&amp;quot;focus&amp;quot;):sub(6,10), 16) 				
		if npcID == 71604 --Contaminated Puddle - Immerseus - SoO
		or npcID == 71995 or npcID == 71996 or npcID == 72000 --Norushen
		or npcID == 71357 --Wrathion 
		then
			if IsSpellInRange(GetSpellInfo(rangecheckid),&amp;quot;focus&amp;quot;) --FlashHeal
			then		
				local focushp = CalculateHP(&amp;quot;focus&amp;quot;)
				if focushp ~= nil and select(2, CalculateHP(&amp;quot;focus&amp;quot;)) ~= nil then
					table.insert(members, { Unit = &amp;quot;focus&amp;quot;, HP = focushp, AHP = select(2, CalculateHP(&amp;quot;focus&amp;quot;)), IsNPC = true } )
				end
				if #members &amp;gt; 0 then
					table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
				end				
			end
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PrimalElementalist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--PrimalElementalist
if Nova_PrimalElementalistCheck 
and select(2,GetTalentRowSelectionInfo(6)) == 17 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if AverageHealth(Nova_PrimalElementalistLimit) &amp;lt;= Nova_PrimalElementalist then
		--FireTotem
		local _,fire = GetTotemInfo(1)
		--EarthTotem
		local _,earth = GetTotemInfo(2)
				
		if not Nova_PrimalElementalistBuffsOnlyCheck then
			--Fire totem
			if fire == &amp;quot;&amp;quot;
			and IsUsableSpell(2894) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and PQR_SpellAvailable(2894)
			then   
			  CastSpellByName(tostring(GetSpellInfo(2894),nil))	
			  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFPrimalElementalist - Fire Elemental Totem&amp;quot;) 			  
			  return true 
			elseif earth == &amp;quot;&amp;quot;
			and IsUsableSpell(2062) --Earth Elemental Totem
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and PQR_SpellAvailable(2062) then   
		  		CastSpellByName(tostring(GetSpellInfo(2062),nil))	
		  		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFPrimalElementalist - Earth Elemental Totem&amp;quot;) 	  		
		  		return true 
			end	
		end
		
		--Empower
		if fire == tostring(GetSpellInfo(2894))
		and PQR_SpellAvailable(118350)
		and not UnitBuffID(&amp;quot;PLAYER&amp;quot;, 118350)
		and select(2,GetSpellCooldown(118350)) &amp;lt; 2
		then   
		  CastSpellByName(tostring(GetSpellInfo(118350),nil))	
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFFire Elemental Totem - Cast Empower&amp;quot;) 	  
		  return true 
		end
			
		--Reinforce
		if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		and earth == tostring(GetSpellInfo(2062))
		and PQR_SpellAvailable(118347)
		and not UnitBuffID(&amp;quot;PLAYER&amp;quot;, 118347)
		and select(2,GetSpellCooldown(118347)) &amp;lt; 2
		then   
		  CastSpellByName(tostring(GetSpellInfo(118347),nil))	
		  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFEarth Elemental Totem - Cast Reinforce&amp;quot;) 		  
		  return true 
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- QueueSys</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- QueueSys
if Nova_QueueSysCheck 
then
	local dispelid2 = 77130	
	local dispelid = 51886	
	local purgeid = 370	
	local rangecheckid = 331
	if #Queue_Sys &amp;gt; 0 then	
		if PQR_SpellAvailable(dispelid) 
		and select(2,GetSpellCooldown(dispelid2)) &amp;lt; 2
		and UnitExists(Queue_Sys[1].Unit)
		and IsUsableSpell(dispelid)
		and IsSpellInRange(GetSpellInfo(dispelid),Queue_Sys[1].Unit) == 1
		and CanHeal(Queue_Sys[1].Unit)
		and not PQR_IsOutOfSight(Queue_Sys[1].Unit) then
			if not UnitChannelInfo(&amp;quot;player&amp;quot;)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
			then	
				CastSpellByName(tostring(GetSpellInfo(dispelid)),Queue_Sys[1].Unit)				
				return true	
			end
		end
	end
	
	if Queue_Spell then
		if #Queue_Spell &amp;gt; 0 then	
			if GetTime() - Queue_Spell[1].Time &amp;gt;= 10 then
				--PQR_WriteToChat(&amp;quot;Removed expired queue &amp;quot;..Queue_Spell[1].SpellID)
				Queue_Spell = { }				
				return true
			end			
			if #Queue_Spell &amp;gt; 1 then			
				if Queue_Spell[1].SpellID == Queue_Spell[2].SpellID and Queue_Spell[1].Unit == Queue_Spell[2].Unit then
					--PQR_WriteToChat(&amp;quot;Removed dup queue &amp;quot;..Queue_Spell[1].SpellID)
					table.remove(Queue_Spell,2)	
					return true	
				end
			end
			
			local qunit = &amp;quot;player&amp;quot;
			if Queue_Spell[1].Unit == &amp;quot;low&amp;quot; then
				qunit = members[1].Unit
			elseif Queue_Spell[1].Unit == &amp;quot;tank&amp;quot; then
				if #Nova_Tanks &amp;gt; 0 then
					for i=1, #Nova_Tanks do
						if UnitThreatSituation(Nova_Tanks[i].Unit) then
							qunit = Nova_Tanks[i].Unit
							break
						end
					end
				end
				if UnitThreatSituation(members[1].Unit)	== 3 then
				 	qunit = members[1].Unit
				end			
			else
				qunit = Queue_Spell[1].Unit
			end
			
			if PQR_SpellAvailable(tonumber(Queue_Spell[1].SpellID)) 
			and ((select(2,GetSpellCooldown(tonumber(Queue_Spell[1].SpellID))) &amp;lt; 2
			and Queue_Spell[1].SpellID ~= 51886)
			or (select(2,GetSpellCooldown(tonumber(dispelid2))) &amp;lt; 2
			and Queue_Spell[1].SpellID == 51886))
			and UnitExists(qunit)
			then
				if not UnitChannelInfo(&amp;quot;player&amp;quot;)
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
				then					
					local qmembers = members
					table.sort(qmembers, function(x) return UnitIsUnit(qunit,x.Unit) end)
					if UnitIsUnit(qmembers[1].Unit,qunit) then
						qunit = qmembers[1].Unit	
					else
						if IsSpellInRange(GetSpellInfo(Queue_Spell[1].SpellID),Queue_Spell[1].Unit) then
							qunit = Queue_Spell[1].Unit	
						else
							qunit = &amp;quot;player&amp;quot;				
						end
					end
					SpellSUCCEEDED(Queue_Spell[1].SpellID,qunit)
					CastSpellByName(tostring(GetSpellInfo(Queue_Spell[1].SpellID)),qunit)									
					return true						
				end
			end						
		end
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Modkey</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--HealingRainMouseover toggle function
if Nova_HealingRainMouseoverCheck then
	if not HRMMode then HRMMode = false end
	if not HRMModetimer then HRMModetimer = 0 end
	if (VachiusaRestoShaman_HealingRainMouseover_key and not GetCurrentKeyBoardFocus()) and GetTime() - HRMModetimer &amp;gt; 1 then
		HRMModetimer = GetTime()	
		if HRMMode then
			HRMMode = false
			PQR_WriteToChat(&amp;quot;|cff347C2CHealing Rain at Mouseover Mode: |cffDC143COff|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
		else
			HRMMode = true
			PQR_WriteToChat(&amp;quot;|cff347C2CHealing Rain at Mouseover Mode: |cff79BAECOn|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)		
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></SHAMAN>