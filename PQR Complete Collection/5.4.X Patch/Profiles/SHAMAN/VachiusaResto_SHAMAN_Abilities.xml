<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false
	
PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Shaman Profile Verion - 2.0.13&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
PQR_SwapCheckTimer = 0

--------------------
-- Register CVars
--------------------

Nova_ValueCheck = {
	{	Var1 = nil,	Text = &amp;quot;Healing Values&amp;quot;,					Var2 = nil		},
	{	Var1 = 80,	Text = &amp;quot;Riptide&amp;quot;,						Var2 = 1		},	
	{	Var1 = 95,	Text = &amp;quot;RiptideTank&amp;quot;,					Var2 = 1		},		
	{	Var1 = 30,	Text = &amp;quot;HealingSurge&amp;quot;,					Var2 = 1		},
	{	Var1 = 50,	Text = &amp;quot;GreaterHealingWave&amp;quot;,			Var2 = 1		},
	{	Var1 = 80,	Text = &amp;quot;HealingWave&amp;quot;,					Var2 = 1		},			
	{	Var1 = 90,	Text = &amp;quot;UnleashElements&amp;quot;,				Var2 = 1		},			
	{	Var1 = nil,	Text = &amp;quot;Cooldown Values&amp;quot;,				Var2 = nil		},
	{	Var1 = 75,	Text = &amp;quot;ChainHeal&amp;quot;,						Var2 = 1		},
	{	Var1 = 3,	Text = &amp;quot;ChainHealLimit&amp;quot;,				Var2 = 1		},
	{	Var1 = 80,	Text = &amp;quot;ManaTide&amp;quot;,						Var2 = 1		},	
	{	Var1 = 40,	Text = &amp;quot;SpiritWalkerGrace&amp;quot;,				Var2 = 1		},				
	{	Var1 = nil,	Text = &amp;quot;Misc Values&amp;quot;,					Var2 = nil		},				
	{	Var1 = 0,	Text = &amp;quot;SpiritLinkTotem&amp;quot;,				Var2 = 0		},
	{	Var1 = 0,	Text = &amp;quot;DPSTotem&amp;quot;,						Var2 = 0		},
	{	Var1 = 20,	Text = &amp;quot;HealingSurgeMana&amp;quot;,				Var2 = 1		},
	{	Var1 = 20,	Text = &amp;quot;ChainHealAutoMana&amp;quot;,				Var2 = 1		},		
	{	Var1 = 90,	Text = &amp;quot;LightningBolt&amp;quot;,					Var2 = 1		},	
	{	Var1 = 10,	Text = &amp;quot;ForceLightningBolt&amp;quot;,			Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;VAutoTarget&amp;quot;,					Var2 = 1		},			
	{	Var1 = 70,	Text = &amp;quot;PurifySpirit&amp;quot;,					Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;TremorTotemAutoDispel&amp;quot;,			Var2 = 0		},	
	--{	Var1 = 0,	Text = &amp;quot;Smart&amp;quot;,							Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;Racials&amp;quot;,						Var2 = 1		},							
	{	Var1 = 0,	Text = &amp;quot;NewEvents&amp;quot;,						Var2 = 1		},
	{	Var1 = 0,	Text = &amp;quot;OldEvents&amp;quot;,						Var2 = 0		}		
	--{	Var1 = 80,	Text = &amp;quot;LowHPThreshold&amp;quot;, 				Var2 = nil		}
}		

Nova_CooldownCheck = {
	{	Mod = 8,	Text = &amp;quot;HealingTideTotem&amp;quot;,			Var1 = 1		}, --IsRightShiftKeyDown
	{	Mod = 1,	Text = &amp;quot;PauseRotation&amp;quot;,				Var1 = 1		}, --IsLeftShiftKeyDown
	{	Mod = 2,	Text = &amp;quot;Chain_Heal&amp;quot;,				Var1 = 1		}, --IsLeftControlKeyDown
	{	Mod = 4,	Text = &amp;quot;DispelRaid&amp;quot;,				Var1 = 1		}, --IsLeftAltKeyDown		
	{	Mod = 32,	Text = &amp;quot;HealingRain&amp;quot;,				Var1 = 1		}, --IsRightAltKeyDown
	{	Mod = 16,	Text = &amp;quot;Ascendance&amp;quot;,				Var1 = 1		}  --IsRightControlKeyDown
	--{	Mod = 2,	Text = &amp;quot;RemoveFromCustomTable&amp;quot;,		Var1 = 1		}, --IsLeftControlKeyDown
	--{	Mod = 4,	Text = &amp;quot;AddToCustomTable&amp;quot;,			Var1 = 1		}  --IsLeftAltKeyDown			
}

if GetCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_WipeCustomTable&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_OverRide&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_OverRide&amp;quot;, 0) end
if GetCVar(&amp;quot;PQ_UseCustomT&amp;quot;) == nil then RegisterCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_Recording&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Recording&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_DisableCD&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1) end
if GetCVar(&amp;quot;Nova_Mouseover&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_Mouseover&amp;quot;, 0) end
if GetCVar(&amp;quot;Nova_LowHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_LowHP&amp;quot;, 80) end
if GetCVar(&amp;quot;Nova_ActualHP&amp;quot;) == nil then RegisterCVar(&amp;quot;Nova_ActualHP&amp;quot;, 0) end
-- Registering the CVars for the CustomFrame
for i=1, #Nova_ValueCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
	end
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
		RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
	end
end
for i=1, #Nova_CooldownCheck do
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text, Nova_CooldownCheck[i].Mod)
	end	
	if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;) == nil then
		RegisterCVar(&amp;quot;Nova_&amp;quot;..Nova_CooldownCheck[i].Text..&amp;quot;_Enabled&amp;quot;, Nova_CooldownCheck[i].Var1)
	end
end

--------------------
-- Slash Commands
--------------------
SLASH_WIPETABLE1 = &amp;quot;/wipetable&amp;quot;
SLASH_WIPETABLE2 = &amp;quot;/wipecustomtable&amp;quot;
SLASH_WIPETABLE3 = &amp;quot;/wt&amp;quot;
function SlashCmdList.WIPETABLE(msg, editbox)
	Nova_CustomT = { }
	if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then 
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean, and reverting to Normal Table.&amp;quot;)
		end
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Wiped Custom Table clean.&amp;quot;)
		end
	end
end

SLASH_USECUSTOMT1 = &amp;quot;/usecustomt&amp;quot;
SLASH_USECUSTOMT2 = &amp;quot;/uct&amp;quot;
SLASH_USECUSTOMT3 = &amp;quot;/usecustomtable&amp;quot;
function SlashCmdList.USECUSTOMT(msg, editbox)
	if not GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) and #Nova_CustomT &amp;gt; 0 then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Custom Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling Normal Table&amp;quot;)
		end
		SetCVar(&amp;quot;PQ_UseCustomT&amp;quot;, 0)
	end
end

SLASH_RECORDING1 = &amp;quot;/recording&amp;quot;
SLASH_RECORDING2 = &amp;quot;/recraid&amp;quot;
SLASH_RECORDING3 = &amp;quot;/recordingraid&amp;quot;
function SlashCmdList.RECORDING(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 1)
		for i=1, 20 do ChatFrame1:AddMessage(&amp;quot; &amp;quot;) end
	else
		PQR_WriteToChat(&amp;quot;Silent Mode Disabled&amp;quot;)
		SetCVar(&amp;quot;Nova_Recording&amp;quot;, 0)
	end
end

SLASH_DISABLECD1 = &amp;quot;/disablecd&amp;quot;
function SlashCmdList.DISABLECD(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableCD&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabling your Automatic Cooldown Usage&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableCD&amp;quot;, 0)
	end
end

SLASH_CLEARCHAT1 = &amp;quot;/clearchat&amp;quot;
function SlashCmdList.CLEARCHAT(msg, editbox)
	for i=1, 20 do
		ChatFrame1:AddMessage(&amp;quot; &amp;quot;)
	end
end

SLASH_DISABLEMOUSEOVER1 = &amp;quot;/mouseoverheal&amp;quot;
SLASH_DISABLEMOUSEOVER2 = &amp;quot;/mh&amp;quot;
function SlashCmdList.DISABLEMOUSEOVER(msg, editbox)
	if not GetCVarBool(&amp;quot;Nova_DisableMouseover&amp;quot;) then
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Disabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 1)
	else
		if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
			PQR_WriteToChat(&amp;quot;Enabled Mouseover.&amp;quot;)
		end
		SetCVar(&amp;quot;Nova_DisableMouseover&amp;quot;, 0)
	end		
end

-- Variables
PQR_ResetMovementTime = 0.3
PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)

-----------------------------
-- Create the CVar Macros
-----------------------------

	if PQR_LoadLua ~= nil then
		-- Load Data File
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Vachiusa_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		
		if PQR_LoadLua(&amp;quot;PQR_Vachiusa_Frame.lua&amp;quot;) == true then
			if not mmC then
				mmC = true
				MiniMapCreation()
			end
		
			-- Setup the Slash Commands for the Frame
			SLASH_NOVAFRAME1 = &amp;quot;/novaframe&amp;quot;
			SLASH_NOVAFRAME2 = &amp;quot;/nova&amp;quot;
			function SlashCmdList.NOVAFRAME(msg, editbox)
				if Setup == nil then
					Setup = true
					FrameCreation(Nova_ValueCheck, Nova_CooldownCheck)
				end
			
				if not Nova_Frame:IsShown() then
					Nova_Frame:Show()
				else
					Nova_Frame:Hide()
				end
			end
		else
			print(&amp;quot;Failed to load Frame&amp;quot;)
		end
	end
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 3 then
		PQR_WriteToChat(&amp;quot;You must be in Resto Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if UnitBuffID(&amp;quot;player&amp;quot;, 79206) then --Spiritwalker&amp;apos;s Grace
	Nova_Moving = false
elseif PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Healing Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActulHP)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true


if GetCVarBool(&amp;quot;PQ_UseCustomT&amp;quot;) then
	members = Nova_CustomT
	lowhpmembers = 0
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].HP &amp;lt; 80 then
			lowhpmembers = lowhpmembers + 1
		end
	end
	
	table.sort(members, function(x,y) return x.HP &amp;lt; y.HP end)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>EarthlivingWeapon</Name><Default>false</Default><SpellID>51730</SpellID><Actions></Actions><Lua>local WEnchant,WEnchantExpires = GetWeaponEnchantInfo()

if ( not WEnchant or ( Wenchant and WEnchantExpires/60000 &amp;lt; 10 ) ) 
and GetSpellCooldown(51730) == 0
and PQR_SpellAvailable(51730)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(51730)
then 
	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>WaterShield</Name><Default>false</Default><SpellID>52127</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(52127)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitBuffID(&amp;quot;player&amp;quot;,52127)
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingStreamTotem</Name><Default>false</Default><SpellID>5394</SpellID><Actions></Actions><Lua>local arg1, totemName, startTime, duration = GetTotemInfo( 3 )
--local est_dur = startTime+duration-GetTime() 
local HealingTideTotem = &amp;quot;Healing Tide Totem&amp;quot;
local ManaTideTotem = &amp;quot;Mana Tide Totem&amp;quot;
if totemName == HealingTideTotem or totemName == ManaTideTotem then 
	return false
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_SpellAvailable(5394)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(5394) 
and select(2,GetSpellCooldown(5394)) &amp;lt; 2
and not Nova_Moving
then
	return true
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and members[1].HP &amp;lt; 60
and lowhpmembers &amp;lt; 3
and PQR_SpellAvailable(108285) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and select(2,GetSpellCooldown(108285)) &amp;lt; 2
and select(2,GetTalentRowSelectionInfo(3)) == 7 then
	CastSpellByName(tostring(GetSpellInfo(108285),nil))	 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Call of the Elements for reset HST - HP: &amp;quot; ..members[1].HP) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Riptide</Name><Default>false</Default><SpellID>61295</SpellID><Actions></Actions><Lua>if Nova_RiptideCheck then	
	if PQR_SpellAvailable(61295) 	
	and IsUsableSpell(61295) then
		for i=1, #members do
			if not UnitBuffID(members[i].Unit, 61295, &amp;quot;PLAYER&amp;quot;)
	 		 and IsSpellInRange(GetSpellInfo(61295),members[i].Unit) == 1
			 and CanHeal(members[i].Unit)		
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			 and members[i].HP &amp;lt; Nova_Riptide then			 
			 	if GlyphCheck(63273) then			 	
			 		if Nova_CheckLastCast(61295, 2.5) then
					 	PQR_CustomTarget = members[i].Unit
					 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRiptide - HP: &amp;quot;..members[i].HP)	
					 	return true
					 end
				else
					PQR_CustomTarget = members[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRiptide - HP: &amp;quot;..members[i].HP)	
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>EarthShield</Name><Default>false</Default><SpellID>974</SpellID><Actions></Actions><Lua>local CEarthShield = false

for i=1, #members do	
	if (UnitBuffID(members[i].Unit, 52127, &amp;quot;PLAYER&amp;quot;) --water shield
	and not UnitIsUnit(members[i].Unit, &amp;quot;player&amp;quot;))
	or (UnitBuffID(members[i].Unit, 974, &amp;quot;PLAYER&amp;quot;)
	and (select(7, UnitBuffID(members[i].Unit, 974, &amp;quot;PLAYER&amp;quot;)) - GetTime() &amp;gt; 1 
	or select(4, UnitBuffID(members[i].Unit, 974, &amp;quot;PLAYER&amp;quot;)) &amp;gt; 1)
	and UnitThreatSituation(members[i].Unit) == 3)
	or UnitBuffID(&amp;quot;boss1&amp;quot;, 974)
	then
		CEarthShield = true
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield on: &amp;quot;..UnitName(members[i].Unit))
	end
end

if not CEarthShield 
and PQR_SpellAvailable(974) 
and IsUsableSpell(974) 
--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
then
	if #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			 
			 and CanHeal(Nova_Tanks[i].Unit)
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			 and IsSpellInRange(GetSpellInfo(974),Nova_Tanks[i].Unit) == 1 then
					PQR_CustomTarget = Nova_Tanks[i].Unit
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield tank!&amp;quot;)	
					return true				
			--else
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFnot Shield: &amp;quot;..UnitName(Nova_Tanks[i].Unit))	
			end
		end
	end
	
	if UnitThreatSituation(members[1].Unit) == 3	 
	 and members[1].HP &amp;lt; 30 
	 and not UnitIsUnit(members[1].Unit, &amp;quot;player&amp;quot;)
	 and CanHeal(members[1].Unit)
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	 and IsSpellInRange(GetSpellInfo(974),members[1].Unit) == 1 then
	 	PQR_CustomTarget = members[1].Unit
	 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFShield high threat member!&amp;quot;)	
	 	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingSurge</Name><Default>false</Default><SpellID>8004</SpellID><Actions></Actions><Lua>if Nova_HealingSurgeCheck then
	if PQR_SpellAvailable(8004) 
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and IsSpellInRange(GetSpellInfo(8004),members[1].Unit) == 1
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(8004)	 
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_HealingSurge and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_HealingSurgeMana 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
		 	PQR_CustomTarget = members[1].Unit
		 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HealingSurge - HP: &amp;quot; ..members[1].HP) 
		 	return true
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingWave</Name><Default>false</Default><SpellID>331</SpellID><Actions></Actions><Lua>if Nova_HealingWaveCheck then
	if PQR_SpellAvailable(331)
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(331) 	 
	 and IsSpellInRange(GetSpellInfo(331),members[1].Unit) == 1
	 --and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_HealingWave 
		--if members[1].HP &amp;gt; Nova_HealingWave 
		--and members[1].HP &amp;lt; Nova_LightningBolt
		and lowhpmembers &amp;lt; 3	
		and UnitBuffID(&amp;quot;player&amp;quot;,53390) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Tidal Waves buff
			 	PQR_CustomTarget = members[1].Unit
			 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCasting HealingWave - HP: &amp;quot; ..members[1].HP) 		
			 	return true
		end	
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>GreaterHealingWave</Name><Default>false</Default><SpellID>77472</SpellID><Actions></Actions><Lua>if Nova_GreaterHealingWaveCheck then	
	--need Unleash Elements buff?
	if PQR_SpellAvailable(77472) 
	 and CanHeal(members[1].Unit)
	 and IsUsableSpell(77472) 	 
	 and IsSpellInRange(GetSpellInfo(77472),members[1].Unit) == 1
	 and not Nova_Moving 
	 and not stopcasting then
		if members[1].HP &amp;lt; Nova_GreaterHealingWave then
			if PQR_SpellAvailable(16188) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and select(2,GetTalentRowSelectionInfo(4)) == 11 then 
				CastSpellByName(tostring(GetSpellInfo(16188),nil))	 			
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Ancestral Swiftness then GHW - HP: &amp;quot; ..members[1].HP) 
			end
			
			if UnitBuffID(&amp;quot;player&amp;quot;,53390) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then --Tidal Waves buff
		 		PQR_CustomTarget = members[1].Unit
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW - HP: &amp;quot; ..members[1].HP) 				
		 		return true
		 	elseif PQR_SpellAvailable(61295) 
		 	and IsUsableSpell(61295) 
		 	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		 	and not UnitDebuffID(members[1].Unit,61295,&amp;quot;PLAYER&amp;quot;) then
		 		PQR_CustomTarget = members[1].Unit
		 		CastSpellByName(tostring(GetSpellInfo(61295)),members[1].Unit)	 
		 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Riptide then GHW - HP: &amp;quot; ..members[1].HP) 				
		 		return true	 	
		 	end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingRain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_HealingRainCheck then	
	if Nova_Mod() == Nova_HealingRain
	--if IsRightAltKeyDown() 
	--and not GetCurrentKeyBoardFocus() 
	--and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
	and PQR_SpellAvailable(73920)
	and select(2,GetSpellCooldown(73920)) &amp;lt; 2 	
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and IsUsableSpell(73920) 
	then
		--if PQR_SpellAvailable(16188)
		--and select(2,GetTalentRowSelectionInfo(4)) == 11 then 
			--CastSpellByName(tostring(GetSpellInfo(16188),nil))	 
			--Ancestral Swiftness
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Ancestral Swiftness then HR&amp;quot;) 
		--end
	
		if PQR_SpellAvailable(73680)  
		and IsUsableSpell(73680) 				
		and Nova_UnleashElementsCheck
		--and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
		then
			local UEtank = false
			if #Nova_Tanks &amp;gt; 0 then
				for i=1, #Nova_Tanks do
					if UnitThreatSituation(Nova_Tanks[i].Unit) 
					 and select(2,GetSpellCooldown(73680)) &amp;lt; 2 
					 and CanHeal(Nova_Tanks[i].Unit)
					 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
					 and not UnitBuffID(Nova_Tanks[i].Unit, 118473)
					 and not UnitBuffID(Nova_Tanks[i].Unit, 73685)
					 and IsSpellInRange(GetSpellInfo(73680),Nova_Tanks[i].Unit) == 1 then										
					 	UEtank = true
						CastSpellByName(tostring(GetSpellInfo(73680)),Nova_Tanks[i].Unit)	 
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Unleash Elements on tank: &amp;quot;..UnitName(Nova_Tanks[i].Unit))
					end
				end
			end
			if not UEtank
			and not UnitBuffID(members[1].Unit, 118473)
			and not UnitBuffID(members[1].Unit, 73685)
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and members[1].HP &amp;lt;= Nova_UnleashElements
			and select(2,GetSpellCooldown(73680)) &amp;lt; 2 
			and CanHeal(members[1].Unit)
			and IsSpellInRange(GetSpellInfo(73680),members[1].Unit) == 1 then
				CastSpellByName(tostring(GetSpellInfo(73680)),members[1].Unit)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Unleash Elements - HP: &amp;quot;..members[1].HP)				
			end
		end
			
		CastSpellByName(tostring(GetSpellInfo(73920),nil))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFLeft Alt Key Down - Healing Rain!&amp;quot;)
	  	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PurifySpirit</Name><Default>false</Default><SpellID>51886</SpellID><Actions></Actions><Lua>--local _,earth = GetTotemInfo(2)
if Nova_DispelRaidCheck then --old id 4987?
	if Nova_Mod() == Nova_DispelRaid
	and PQR_SpellAvailable(51886)
	and IsUsableSpell(51886)	
	and select(2,GetSpellCooldown(51886)) &amp;lt; 2 then
	--and not IsLeftShiftKeyDown() 
	--and IsLeftAltKeyDown() 
	--and not GetCurrentKeyBoardFocus() then
		if members[1].HP &amp;gt; Nova_PurifySpirit then
			for i=1, #members do
				if ValidDispel(members[i].Unit) 
				and CanHeal(members[i].Unit)
				and not UnitCastingInfo(&amp;quot;player&amp;quot;)
				and IsSpellInRange(GetSpellInfo(51886),members[1].Unit) == 1 then			
					if Nova_TremorTotemAutoDispelCheck
					and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
					and earth == &amp;quot;&amp;quot;
					and IsUsableSpell(8143) 
					and PQR_SpellAvailable(8143) 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then   
						CastSpellByName(tostring(GetSpellInfo(8143),nil))	
					 	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight alt key down - Tremor Totem&amp;quot;) 				  
					else			
						PQR_CustomTarget = members[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight alt key down - Auto dispeled!&amp;quot;)
						return true
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- ToInteger --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- To Integer from String
Nova_LowHP 							= tonumber( GetCVar(&amp;quot;Nova_LowHP&amp;quot;) )
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)		
	end
end

-- To Integer for Cooldowns
Nova_HealingTideTotem				= tonumber(	GetCVar(&amp;apos;Nova_HealingTideTotem&amp;apos;) )
Nova_Chain_Heal						= tonumber(	GetCVar(&amp;apos;Nova_Chain_Heal&amp;apos;) )
Nova_DispelRaid						= tonumber(	GetCVar(&amp;apos;Nova_DispelRaid&amp;apos;) )
Nova_HealingRain					= tonumber(	GetCVar(&amp;apos;Nova_HealingRain&amp;apos;) )
Nova_Ascendance						= tonumber(	GetCVar(&amp;apos;Nova_Ascendance&amp;apos;) )
--Nova_RemoveCT						= tonumber(	GetCVar(&amp;apos;Nova_RemoveFromCustomTable&amp;apos;) )
--Nova_AddCT						= tonumber(	GetCVar(&amp;apos;Nova_AddToCustomTable&amp;apos;) )

-- To Boolean from String
Nova_Mouseover 						= GetCVarBool(&amp;quot;Nova_Mouseover&amp;quot;)
Nova_HealingTideTotemCheck			= GetCVarBool(&amp;apos;Nova_HealingTideTotem_Enabled&amp;apos;) 
Nova_Chain_HealCheck				= GetCVarBool(&amp;apos;Nova_Chain_Heal_Enabled&amp;apos;) 
Nova_DispelRaidCheck				= GetCVarBool(&amp;apos;Nova_DispelRaid_Enabled&amp;apos;) 
Nova_HealingRainCheck				= GetCVarBool(&amp;apos;Nova_HealingRain_Enabled&amp;apos;) 
Nova_AscendanceCheck				= GetCVarBool(&amp;apos;Nova_Ascendance_Enabled&amp;apos;) 
--Nova_RemoveCTCheck					= GetCVarBool(&amp;apos;Nova_RemoveFromCustomTable_Enabled&amp;apos;)
--Nova_AddCTCheck						= GetCVarBool(&amp;apos;Nova_AddToCustomTable_Enabled&amp;apos;)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--Stop Casting
if UnitExists(&amp;quot;boss1&amp;quot;) then
	local npcid = tonumber(UnitGUID(&amp;quot;boss1&amp;quot; ):sub(6,10), 16)
else
	local npcid = 0
end

local _,fire = GetTotemInfo(1)
local _,earth = GetTotemInfo(2)
--local _,water = GetTotemInfo(3)
local _,air = GetTotemInfo(4)
local _, water, waterstartTime, waterduration = GetTotemInfo(3)
local waterest_dur = waterstartTime+waterduration-GetTime()

if SpellIsTargeting() then
	SpellStopCasting()
elseif UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and ((UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(331)) --HealingWave
or ((UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(403)) and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 30)) --LightningBolt
and not IsLeftControlKeyDown() 
and (CalStop(members[1].Unit) &amp;lt; 40 or (lowhpmembers &amp;gt; 3 and CalStop(members[1].Unit) &amp;lt; 70)) 
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 12 --prevent stop loop
and IsUsableSpell(8004) then --prevent stop loop
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting HealingWave/LightningBolt - HP: &amp;quot; ..members[1].HP) 		
	return true 
elseif UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(331)) --HealingWave
and IsSpellInRange(GetSpellInfo(331),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and CalStop(members[1].Unit) &amp;gt; Nova_LightningBolt and CalStop(members[1].Unit) &amp;gt; 95 then
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Cast HealingWave - Name: &amp;quot; ..UnitName(members[1].Unit)..&amp;quot; - Current HP: &amp;quot;..CalStop(members[1].Unit)..&amp;quot; - overheal: &amp;quot;..select(2, CalStop(members[1].Unit)))	
	return true 
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(77472)) --GreaterHealingWave
and IsSpellInRange(GetSpellInfo(77472),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and not UnitIsUnit(&amp;quot;boss1&amp;quot;,members[1].Unit)
and CalStop(members[1].Unit) &amp;gt; Nova_GreaterHealingWave and CalStop(members[1].Unit) &amp;gt; Nova_LightningBolt 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	if npcid ~= 62442 and npcid ~= nil then --Tsulong
		SpellStopCasting() 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting GreaterHealingWave - HP: &amp;quot; ..members[1].HP) 		
		return true 
	end
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(8004)) --HealingSurge
and IsSpellInRange(GetSpellInfo(8004),members[1].Unit) == 1
and CanHeal(members[1].Unit)
and not UnitIsUnit(&amp;quot;boss1&amp;quot;,members[1].Unit)
and CalStop(members[1].Unit) &amp;gt; Nova_HealingSurge and CalStop(members[1].Unit) &amp;gt; Nova_LightningBolt 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	if npcid ~= 62442 and npcid ~= nil then --Tsulong
		SpellStopCasting() 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting HealingSurge - HP: &amp;quot; ..members[1].HP) 		
		return true 	
	end
elseif (UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(1064)) --ChainHeal
and (CalStop(members[1].Unit) &amp;gt; 95 or (lowhpmembers &amp;lt; 3 and CalStop(members[1].Unit) &amp;gt; 90)) 
and not UnitDebuffID(&amp;quot;player&amp;quot;,116260)
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	SpellStopCasting() 
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStop Casting ChainHeal - HP: &amp;quot; ..members[1].HP) 		
	return true	
elseif water == &amp;quot;Healing Stream Totem&amp;quot; 
and fire == &amp;quot;&amp;quot;
and earth == &amp;quot;&amp;quot; 
and air == &amp;quot;&amp;quot; then
	if waterest_dur &amp;lt;= 2 then
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFTotemic Recall HST - waterest_dur: &amp;quot;..waterest_dur) 	
		CastSpellByName(tostring(GetSpellInfo(36936),nil))			
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LightningBolt</Name><Default>false</Default><SpellID>403</SpellID><Actions></Actions><Lua>if Nova_LightningBoltCheck then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(403) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsUsableSpell(403)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	--and GlyphCheck(585)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and not Nova_Moving
	and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
	and members[1].HP &amp;gt; Nova_LightningBolt --95
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_ForceLightningBolt
	and lowhpmembers &amp;lt; 3
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not stopcasting then
		return true 
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ascendance</Name><Default>false</Default><SpellID>114049</SpellID><Actions></Actions><Lua>if Nova_AscendanceCheck then	
	if Nova_Mod() == Nova_Ascendance
	--if IsRightControlKeyDown() 
	--and not GetCurrentKeyBoardFocus() 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and select(2,GetSpellCooldown(114049)) &amp;lt; 2
	and PQR_SpellAvailable(114049)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and IsUsableSpell(114049)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 114052) then
		--SpellStopCasting()
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Control Key Down - Ascendance!&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoTarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AutoTarget
if Nova_VAutoTargetCheck then
	if (not UnitExists(&amp;quot;focus&amp;quot;)
		or UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
		or not UnitInRange(&amp;quot;focus&amp;quot;) 
		or not UnitIsConnected(&amp;quot;focus&amp;quot;)
		or not UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
		or not UnitExists(&amp;quot;target&amp;quot;))	
	and #Nova_Tanks &amp;gt; 0 then
		for i=1, #Nova_Tanks do
			if UnitThreatSituation(Nova_Tanks[i].Unit) == 3			
			and UnitAffectingCombat(&amp;quot;player&amp;quot;)		 
			and CanHeal(Nova_Tanks[i].Unit) then			
	   			TargetUnit(Nova_Tanks[i].Unit)      		
	    		RunMacroText(&amp;quot;/focus&amp;quot;)			
	            RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)			
			end
		end
	end
	
	if UnitExists(&amp;quot;focus&amp;quot;)
	--and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;) or (UnitExists(&amp;quot;target&amp;quot;) and not UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) and not (IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1 )))
	and (UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) or not UnitExists(&amp;quot;target&amp;quot;))
	and not UnitIsDeadOrGhost(&amp;quot;focustarget&amp;quot;)
	and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
	and UnitExists(&amp;quot;focustarget&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;)
	and IsSpellInRange(GetSpellInfo(403),&amp;quot;focustarget&amp;quot;) == 1
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focustarget&amp;quot;) --Elegon not work
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		TargetUnit(&amp;quot;focustarget&amp;quot;)
		return true 	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Trinket spirit 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then UseInventoryItem(14)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LightningBolt (TC)</Name><Default>false</Default><SpellID>403</SpellID><Actions></Actions><Lua>--if ((IsLeftControlKeyDown() and not IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus()) 
if Nova_ForceLightningBoltCheck then	
	if (Nova_Mod() == Nova_Chain_Heal --use same key bind with CH 
	or select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ForceLightningBolt)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(403) 
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsUsableSpell(403)
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and GlyphCheck(55453)
	--and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) --Elegon not work
	and not Nova_Moving
	and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
	and not LineOfSight(&amp;quot;target&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
	and not stopcasting then
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PurifySpirit Mouseover</Name><Default>false</Default><SpellID>51886</SpellID><Actions></Actions><Lua>if Nova_DispelRaidCheck then 
	if Nova_Mod() == Nova_DispelRaid then
		if PQR_SpellAvailable(51886) --old spellid: 77130, new: 51886
		and IsUsableSpell(51886)
		and select(2,GetSpellCooldown(51886)) &amp;lt; 2
		and UnitExists(&amp;quot;mouseover&amp;quot;)
		and IsSpellInRange(GetSpellInfo(51886),&amp;quot;mouseover&amp;quot;) == 1
		and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;)
		and CanHeal(&amp;quot;mouseover&amp;quot;)
		and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) then
			if ValidDispel(&amp;quot;mouseover&amp;quot;) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto dispeled!&amp;quot;)
				return true	
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HealingTideTotem</Name><Default>false</Default><SpellID>108280</SpellID><Actions></Actions><Lua>if Nova_HealingTideTotemCheck then	
	if Nova_Mod() == Nova_HealingTideTotem then
		local HStimer, HSTotem = GetTotemInfo(3)
		
		--if IsRightShiftKeyDown() 
		--and not GetCurrentKeyBoardFocus() 		
		if PQR_SpellAvailable(108280)		
		and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		and HSTotem ~= GetSpellInfo(16190) --Healing Mana Totem
		--and HSTotem ~= GetSpellInfo(5394) --Healing Stream Totem
		--and select(2,GetSpellCooldown(108280)) &amp;lt; 2
		and IsUsableSpell(108280)
		and select(2,GetTalentRowSelectionInfo(5)) == 13
		then 
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end	
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRight Shift Key Down - Tide totem!&amp;quot;)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Milling</Name><Default>false</Default><SpellID>0</SpellID><Actions>/cast Milling|/use Rain Poppy|/use Silkweed|/use Desecrated Herb|/use Green Tea Leaf|/use Fool&amp;apos;s Cap|/use Snow Lily</Actions><Lua>if not UnitCastingInfo(&amp;quot;player&amp;quot;) then
	return true
end</Lua><RecastDelay>5000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChainHeal (TC)</Name><Default>false</Default><SpellID>1064</SpellID><Actions></Actions><Lua>if Nova_Chain_HealCheck then	
	if Nova_Mod() == Nova_Chain_Heal
	and PQR_SpellAvailable(1064) 
	--and IsLeftControlKeyDown() 
	--and not IsLeftShiftKeyDown() 
	--and not GetCurrentKeyBoardFocus() 
	--and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
	and not UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 	
	and IsUsableSpell(1064)
	and not Nova_Moving then
		GetDistance()
		local PerfectAoETarget = {}
		for i=1, #members do
			table.insert(PerfectAoETarget, {NumberNearby = UnitsClose(members[i].Unit, 90), Unit = members[i].Unit} )
		end
		
		table.sort(PerfectAoETarget, function(x,y) return x.NumberNearby &amp;gt; y.NumberNearby end)
			
		if IsSpellInRange(GetSpellInfo(1064),PerfectAoETarget[1].Unit) == 1 
		and CanHeal(PerfectAoETarget[1].Unit) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			PQR_CustomTarget = PerfectAoETarget[1].Unit
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ManaTideTotem</Name><Default>false</Default><SpellID>16190</SpellID><Actions></Actions><Lua>if Nova_ManaTideCheck then	
	local HStimer, HSTotem = GetTotemInfo(3)
	
	if PQR_SpellAvailable(16190)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ManaTide
	and HSTotem ~= GetSpellInfo(108280) --Healing Tide Totem
	and HSTotem ~= GetSpellInfo(5394) --Healing Stream Totem
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	and not Nova_Moving then
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFManatide - Mana: &amp;quot;..select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)))	
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TotemicRecall</Name><Default>false</Default><SpellID>36936</SpellID><Actions></Actions><Lua>local _,fire = GetTotemInfo(1)
local _,earth = GetTotemInfo(2)
local _,water = GetTotemInfo(3)
local _,air = GetTotemInfo(4)


if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and PQR_IsMoving(1)
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(36936)
and fire ~= &amp;quot;Fire Elemental Totem&amp;quot; 
and earth ~= &amp;quot;Earth Elemental Totem&amp;quot; 
and water ~= &amp;quot;Mana Tide Totem&amp;quot; 
and ( fire ~= &amp;quot;&amp;quot; or earth ~= &amp;quot;&amp;quot; or water ~= &amp;quot;&amp;quot; or air ~= &amp;quot;&amp;quot; ) 
then   
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFTotemic Recall&amp;quot;) 		
  	return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RiptideTank</Name><Default>false</Default><SpellID>61295</SpellID><Actions></Actions><Lua>if Nova_RiptideTankCheck then
	if PQR_SpellAvailable(61295) 
	and IsUsableSpell(61295) 	
	--and UnitAffectingCombat(&amp;quot;player&amp;quot;) then 
	then
		if #Nova_Tanks &amp;gt; 0 then
			for i=1, #Nova_Tanks do
				if UnitThreatSituation(Nova_Tanks[i].Unit) 
				 and not UnitBuffID(Nova_Tanks[i].Unit, 61295, &amp;quot;PLAYER&amp;quot;)
				 and CanHeal(Nova_Tanks[i].Unit)				 
				 and IsSpellInRange(GetSpellInfo(61295),Nova_Tanks[i].Unit) == 1 then
					if Nova_Tanks[i].HP &amp;lt; Nova_RiptideTank 
					and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						PQR_CustomTarget = Nova_Tanks[i].Unit
						--PQR_WriteToChat(&amp;quot;\124cFFFF55FFRiptide tank - HP: &amp;quot;..Nova_Tanks[i].HP)	
						return true
					end
				end
			end
		end
	end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>SpiritwalkerGrace</Name><Default>false</Default><SpellID>79206</SpellID><Actions></Actions><Lua>if Nova_SpiritWalkerGraceCheck then
	if members[1].HP &amp;lt; Nova_SpiritWalkerGrace 
	and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
	and IsUsableSpell(79206)
	and PQR_IsMoving(1) 
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(79206)
	then 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFSpirit walker grace - HP: &amp;quot;..members[1].HP)
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- SelfSurvival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,earth = GetTotemInfo(2)

if Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then	
	if GetItemCount(5512,false,true) &amp;gt; 0	
	and PQR_SpellAvailable(5512) --Healthstone		
	and GetItemCooldown(5512) == 0
	then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		UseItemByName(5512)
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFHealthstone - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		return true
	elseif PQR_SpellAvailable(108270) --Stone Bulwark Totem
	and earth == &amp;quot;&amp;quot;
	and select(2,GetTalentRowSelectionInfo(1)) == 2 --check talent
	and IsUsableSpell(108270)
	and GetSpellCooldown(108270) == 0	
	and not Nova_Moving then
		if UnitCastingInfo(&amp;quot;player&amp;quot;) then
			SpellStopCasting()
		end		
		CastSpellByName(tostring(GetSpellInfo(108270),nil))	
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFStone Bulwark Totem - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
		--CastSpellByName(GetSpellInfo(108270),&amp;quot;player&amp;quot;)
		return true		
	elseif earth == &amp;quot;&amp;quot;
	and lowhpmembers &amp;lt; 5
	and IsUsableSpell(2062) --Earth Elemental Totem
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	and PQR_SpellAvailable(2062) then   
  		CastSpellByName(tostring(GetSpellInfo(2062),nil))	
  		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFEarth Elemental Totem - HP: &amp;quot;..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
  		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Custom Table --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--------------------------------------
-- Adding Players to Custom Table
--------------------------------------

--if Nova_AddCTCheck 	
 --and ( Nova_Mod2() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 --and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 --and Nova_Mod2() == Nova_AddCT
 if IsLeftShiftKeyDown()
 and IsLeftAltKeyDown()
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) ) then  
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			return false
		end
	end
	
	table.insert(Nova_CustomT, { GUID = UnitGUID(&amp;quot;mouseover&amp;quot;) } )
	
	if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
		PQR_WriteToChat(&amp;quot;We just added &amp;quot;..UnitName(&amp;quot;mouseover&amp;quot;)..&amp;quot; to the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
	end
	return true

end


--------------------------------------
-- Removing Players from Custom Table
--------------------------------------

--if Nova_RemoveCTCheck 	
 --and ( Nova_Mod2() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 --and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 --and Nova_Mod2() == Nova_RemoveCT
if IsLeftShiftKeyDown()
 and IsLeftControlKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and ( CanHeal(&amp;quot;mouseover&amp;quot;) 
  or UnitIsUnit(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) )then
	for i=1, #Nova_CustomT do
		if Nova_CustomT[i].GUID and Nova_CustomT[i].GUID == UnitGUID(&amp;quot;mouseover&amp;quot;) then
			if not GetCVarBool(&amp;quot;Nova_Recording&amp;quot;) then
				PQR_WriteToChat(&amp;quot;We just removed &amp;quot;..UnitName(Nova_CustomT[i].Unit)..&amp;quot; from the Custom Healing Table.&amp;quot;, &amp;quot;Alert&amp;quot;)
			end
			table.remove(Nova_CustomT, i)
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>FireTotem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--FireTotem
local _,fire = GetTotemInfo(1)

--Fire totem
if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and Nova_DPSTotemCheck
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 90
and fire == &amp;quot;&amp;quot;
and UnitExists(&amp;quot;target&amp;quot;)
and IsUsableSpell(2894) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(2894)
and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then   
  CastSpellByName(tostring(GetSpellInfo(2894),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFFire Elemental Totem&amp;quot;) 
  return true 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and Nova_DPSTotemCheck
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 90
and fire == &amp;quot;&amp;quot;
and UnitExists(&amp;quot;target&amp;quot;)
and IsUsableSpell(3599) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(3599)
and IsSpellInRange(GetSpellInfo(403),&amp;quot;target&amp;quot;) == 1
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then   
  CastSpellByName(tostring(GetSpellInfo(3599),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFSearing Totem&amp;quot;) 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AirTotem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--AirTotem
local _,air = GetTotemInfo(4)

--Air totem - maybe need to add tank range check for make sure if will effect on tank
if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and Nova_SpiritLinkTotemCheck
and air == &amp;quot;&amp;quot;
and members[1].HP &amp;lt; 30
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and lowhpmembers &amp;gt; 4
and IsUsableSpell(98008) 
and PQR_SpellAvailable(98008) then   
  CastSpellByName(tostring(GetSpellInfo(98008),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFSpirit Link Totem - HP&amp;quot;..members[1].HP) 
  return true 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 90
and air == &amp;quot;&amp;quot;
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsUsableSpell(8177) 
and PQR_SpellAvailable(8177) then   
  CastSpellByName(tostring(GetSpellInfo(8177),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFGrounding Totem&amp;quot;) 
  return true 
end

if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and air == &amp;quot;&amp;quot;
and (UnitBuffID(&amp;quot;player&amp;quot;, 32182) --Heroism
or UnitBuffID(&amp;quot;player&amp;quot;, 2825) --Bloodlust
or UnitBuffID(&amp;quot;player&amp;quot;, 80353) --Time Warp
or UnitBuffID(&amp;quot;player&amp;quot;, 90355)) --Ancient Hysteria
and IsUsableSpell(120668) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(120668) then   
  CastSpellByName(tostring(GetSpellInfo(120668),nil))	
  --PQR_WriteToChat(&amp;quot;\124cFFFF55FFStormlash Totem&amp;quot;) 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TsulongHeal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then
	local bossCheck = &amp;quot;boss1&amp;quot; 
	
	if UnitExists(bossCheck) then 
		local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16) 	        
		if npcID ~= 62442 then --Tsulong then
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFDebug NPCID: &amp;quot; ..npcID) 
			return false
		end
	end
		
	if PQR_SpellAvailable(77472)  	
	 and IsUsableSpell(77472) 
	 and not UnitCastingInfo(&amp;quot;player&amp;quot;)
	 and IsSpellInRange(GetSpellInfo(77472),&amp;quot;boss1&amp;quot;) == 1
	 and not Nova_Moving then
		if Nova_UnitInfo(&amp;quot;boss1&amp;quot;) &amp;lt; 100 then	
			--if PQR_SpellAvailable(73680)  
			--and IsUsableSpell(73680) 		
			--and select(2,GetSpellCooldown(73680)) &amp;lt; 2 then
				--if not UnitBuffID(&amp;quot;boss1&amp;quot;, 118473) --Unleashed Fury 
				--and not UnitBuffID(&amp;quot;boss1&amp;quot;, 73685) then										
					--CastSpellByName(tostring(GetSpellInfo(73680)),&amp;quot;boss1&amp;quot;)	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Unleash Elements on Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))											
				--end			
			--end
					
			if PQR_SpellAvailable(974) 			
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and IsUsableSpell(974) then
				if UnitBuffID(&amp;quot;boss1&amp;quot;, 974, &amp;quot;player&amp;quot;) then
					if select(7, UnitBuffID(&amp;quot;boss1&amp;quot;, 974, &amp;quot;player&amp;quot;)) - GetTime() &amp;lt;= 1 
					 or select(4, UnitBuffID(&amp;quot;boss1&amp;quot;, 974, &amp;quot;player&amp;quot;)) &amp;lt;= 1 
					 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
						CastSpellByName(tostring(GetSpellInfo(974)),&amp;quot;boss1&amp;quot;)	 
						PQR_WriteToChat(&amp;quot;\124cFFFF55FFRenew Earth Shield Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))
					end
				else
					CastSpellByName(tostring(GetSpellInfo(974)),&amp;quot;boss1&amp;quot;)	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Earth Shield Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;))
				end
			end
			
			if PQR_SpellAvailable(61295) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and IsUsableSpell(61295) 
			and not UnitBuffID(&amp;quot;boss1&amp;quot;,61295,&amp;quot;PLAYER&amp;quot;) then			
				CastSpellByName(tostring(GetSpellInfo(61295)),&amp;quot;boss1&amp;quot;)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Riptide Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 							
			end	
				
			if PQR_SpellAvailable(16188) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and select(2,GetSpellCooldown(16188)) &amp;lt; 2
			and (UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Омовение светом&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;))
			and select(2,GetTalentRowSelectionInfo(4)) == 11 then 
				CastSpellByName(tostring(GetSpellInfo(16188)),&amp;quot;player&amp;quot;)	 			
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Ancestral Swiftness then GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 			
				CastSpellByName(tostring(GetSpellInfo(77472)),&amp;quot;boss1&amp;quot;)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 				
				return true							
			end
						
			if PQR_SpellAvailable(8004) 	
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)	
			--and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitIsUnit(&amp;quot;mouseover&amp;quot;, &amp;quot;boss1&amp;quot;))
			and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; 70 or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Bathed in Light&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;Омовение светом&amp;quot;) or UnitDebuff(&amp;quot;player&amp;quot;,&amp;quot;In Licht gebadet&amp;quot;)) --Bathed in Light buff		
	 		and IsUsableSpell(8004) then
	 			CastSpellByName(tostring(GetSpellInfo(8004)),&amp;quot;boss1&amp;quot;)	 
	 			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast HSurge on Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
				return true
			end		
	
			if members[1].HP &amp;gt; 30 --Prevent raid wipe
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and lowhpmembers &amp;lt; 10 then 
				CastSpellByName(tostring(GetSpellInfo(77472)),&amp;quot;boss1&amp;quot;)	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 				
				return true	
			else		
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFNOOOOOOOOOOOOOOOOOT Cast GHW Tsulong - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;boss1&amp;quot;)) 	
				return false
			end
			
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ( Nova_Mod() == tonumber(GetCVar(&amp;apos;Nova_PauseRotation&amp;apos;))
 and GetCVarBool(&amp;apos;Nova_PauseRotation_Enabled&amp;apos;) )
 or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
 or IsMounted() 
 or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink 
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Only takes effect when we&amp;apos;re 90
--if UnitLevel(&amp;quot;player&amp;quot;) == 90
 if not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
 and Nova_CheckLastCast(6, 2) then
 	--if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	--end
	-- If we are in a 5 man instance
	if IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Party (VachiusaResto)&amp;quot;)	
	-- If we are in a 10m raid 
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid10 (VachiusaResto)&amp;quot;)
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) then
		FirstRun = false
		PQR_SwapRotation(&amp;quot;Raid25 (VachiusaResto)&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Master Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_ChainHeal&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_ChainHealLimit&amp;quot;, 3)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;party&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaResto)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 4 or select(3, GetInstanceInfo()) == 6 or select(3, GetInstanceInfo()) == 7 or select(3, GetInstanceInfo()) == 6) 
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaResto)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 File --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (not IsInInstance() or select(2, GetInstanceInfo()) ~= &amp;quot;raid&amp;quot;) 
and (select(3, GetInstanceInfo()) == 3 or select(3, GetInstanceInfo()) == 5)
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	PQR_SwapRotation(&amp;quot;Master (VachiusaResto)&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Party Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_ChainHeal&amp;quot;, 80)  
	SetCVar(&amp;quot;Nova_ChainHealLimit&amp;quot;, 3)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid10 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_ChainHeal&amp;quot;, 75)  
	SetCVar(&amp;quot;Nova_ChainHealLimit&amp;quot;, 4)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raid25 Settings --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FirstRun 
 and not GetCVarBool(&amp;quot;Nova_OverRide&amp;quot;) then
	FirstRun = true	
	SetCVar(&amp;quot;Nova_ChainHeal&amp;quot;, 75)  
	SetCVar(&amp;quot;Nova_ChainHealLimit&amp;quot;, 4)  
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ChainHealSmart</Name><Default>false</Default><SpellID>1064</SpellID><Actions></Actions><Lua>if Nova_ChainHealCheck then
	--if Nova_SmartCheck then
		if PQR_SpellAvailable(1064) 
		 and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_ChainHealAutoMana 
		 and IsUsableSpell(1064)		 
		 and not Nova_Moving
		 --and lowhpmembers &amp;gt;= Nova_ChainHealLimit --Nova_ChainHealLimit --Nova_ChainHeal
		 and AverageHealth(Nova_ChainHealLimit) &amp;lt;= Nova_ChainHeal
		 --and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		 and not stopcasting 
		 and not LLdebuff 
		 then
			PRGetDistanceTable((Nova_ChainHeal+5), 13, 3) --12.5	
			PRGetDistanceTablebyHP(Nova_ChainHeal,3)
				
			if IsSpellInRange(GetSpellInfo(1064),prdistancebyhp[1].Unit) 
			and CanHeal(prdistancebyhp[1].Unit)
			and prdistancebyhp[1].PD &amp;gt;= 3
			and prdistancebyhp[1].HP &amp;lt;= Nova_ChainHeal 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then	
				--CastSpellByName(tostring(GetSpellInfo(1064)),prdistance[1].Unit)
				PQR_CustomTarget = prdistancebyhp[1].Unit
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast CH - Name: &amp;quot; ..UnitName(prdistancebyhp[1].Unit)..&amp;quot; - HP: &amp;quot;..prdistancebyhp[1].HP..&amp;quot; - PD: &amp;quot;..prdistancebyhp[1].PD) 
				return true							
			end
		end
	--end
end</Lua><RecastDelay>300</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ResAndMRes</Name><Default>false</Default><SpellID>51886</SpellID><Actions></Actions><Lua>--ResAndMRes
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitIsConnected(&amp;quot;mouseover&amp;quot;)
and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 			
and UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) 
and not UnitHasIncomingResurrection(&amp;quot;mouseover&amp;quot;) 
then		
	if PQR_SpellAvailable(83968) 		
	and not UnitDebuff(&amp;quot;mouseover&amp;quot;, GetSpellInfo(95223)) ----Mass Resurrection debuff
	--and (IsSpellInRange(GetSpellInfo(83968),&amp;quot;mouseover&amp;quot;) == 1) - not work?
	--and UnitInRange(&amp;quot;mouseover&amp;quot;) 	
	and Nova_CheckLastCast(83968, 2.0)		
	then
		if IsInRaid() then
				group = &amp;quot;raid&amp;quot;
		elseif IsInGroup() then
				group = &amp;quot;party&amp;quot;
		end
		local deadnum = 0
		if group then
			for i = 1, GetNumGroupMembers() do 
				local member = group..i
				if UnitIsDeadOrGhost(member) then
					if not UnitDebuff(member, GetSpellInfo(95223)) then ----Mass Resurrection debuff 
						deadnum = deadnum + 1
					end
				end
			end
		end		
		if deadnum &amp;gt;= 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			CastSpellByName(tostring(GetSpellInfo(83968),nil)) --Mass Resurrection	 
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto MasRes!&amp;quot;)
			return false		
		end
	end
	
	if PQR_SpellAvailable(2008)
	and IsUsableSpell(2008) 	
	and not UnitCastingInfo(&amp;quot;player&amp;quot;)	
	and Nova_CheckLastCast(2008, 2.0)	
	and (IsSpellInRange(GetSpellInfo(2008),&amp;quot;mouseover&amp;quot;) == 1) 		
	and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;) then 
		CastSpellByName(tostring(GetSpellInfo(2008)),&amp;quot;mouseover&amp;quot;) --Resurrection	 
		--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMouseover - Auto Res!&amp;quot;)
		return false			
	end	
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Drink</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 50
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
--and GetItemCount(80618,false,true) &amp;gt; 0	
and PQR_SpellAvailable(80618) --Mage cookies	
and not UnitBuffID(&amp;quot;player&amp;quot;, 104269)
and not Nova_Moving 
and GetItemCooldown(80618) == 0 then
	UseItemByName(80618)
	--PQR_WriteToChat(&amp;quot;\124cFFFF55FFMage cookies - HP: &amp;quot; ..Nova_UnitInfo(&amp;quot;player&amp;quot;)) 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- NewEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_NewEventsCheck then
	local boss,bossid = bossid()
	local dispelid = 51886	
	local purgeid = 370	
	local buff = { }
	stopcasting = false
	stopfade = false
	LLdebuff = false
	LLdebuffunit = false	
	if UnitExists(boss) then
		local _, _, rdifficulty = GetInstanceInfo()
		--TFT raid		
		if bossid == 69465 and (rdifficulty == 5 or rdifficulty ==6) then --Jin&amp;apos;rokh the Breaker
			local buff = { 138732 } --Ionization 
			local fluiditydebuff  = 138002 --Fluidity
			RaidJBDispel(dispelid,buff,fluiditydebuff,5)
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 
			if LLdebuff
			and UnitBuffID(LLdebuffunit, 974, &amp;quot;PLAYER&amp;quot;) 
			and PQR_SpellAvailable(974) 
			and IsUsableSpell(974) then
				CastSpellByName(tostring(GetSpellInfo(974)),&amp;quot;player&amp;quot;)	
				return true
			end			
		elseif bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68476 then --Horridon
			--local buff  = { 136708, 136719, 136587, 136710, 136512 } --Magic, Magic, Poison, Disease, Curse
			local buff  = { 136708, 136719, 136512 }
			RaidDispel(dispelid,buff) 
		elseif bossid == 68065 or bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head 
		-- Players affected by  Cinders should be quick to run over any existing  Icy Ground void zones, and then move to a safe location (out of the way of the raid) to be dispelled.		
			local buff  = { 139822 } 	
			RaidRangeDispel(dispelid,buff,10) 		
		elseif bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispelDelay(dispelid,buff,5)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end			
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then 
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff) --Protectors of the Endless, Lightning Prison
			SBossDispel(117283,purgeid) --Protectors of the Endless, Cleansing Waters 	
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		--else
			--PQR_WriteToChat(&amp;quot;\124cFFFF55FFBossid: &amp;quot;..bossid..&amp;quot; - boss: &amp;quot;..boss)
		end		
		
		--HoF raid
		if bossid == 62397 then
			--BossDispel(122149,purgeid,boss) --Wind Lord Mel&amp;apos;jarak, Quickening debuff 
			SBossDispel(122149,purgeid)
		--MSV raid
		elseif bossid == 60701 or bossid == 60708 or bossid == 60709 or bossid == 60710 then
			--BossDispel(117697,purgeid,boss) --Zian of the Endless Shadow, Shield of Darkness	
			SBossDispel(117697,purgeid)
		--TeS raid
		elseif bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- OldEvents</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_OldEventsCheck then --Old raid
	local boss,bossid = bossid()
	if UnitExists(boss) then					
		if bossid == 55294 then
			local PQ_SN = PQ_Shrapnel
			local PQ_FL = PQ_FadingLight
			local PQ_HOT = PQ_HourOfTwilight				
		
			-- Fading Light Debuff
			for i=1,#PQ_FL do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
			
			-- Hour of Twilight
			--if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() then	
			if false then
				if PQR_SpellAvailable(115176)
				and select(2,GetSpellCooldown(115176)) &amp;lt; 2
				then SpellStopCasting() CastSpellByName(tostring(GetSpellInfo(115176)),&amp;quot;player&amp;quot;) return true end
			else
				local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(boss) 
				for i=1,#PQ_HOT do
					if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 0.7 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
					end
				end
			end
		end
		
		if bossid == 56173 then
			-- Target for Shrapnel
			for i=1,#PQ_SN do
				if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i]))
					and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_SN[i])) - GetTime() &amp;lt; 2 then
						SpellStopCasting()
						RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Racials</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RacialsCheck
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then

	local PQ_Class = select(2, UnitClass(&amp;quot;player&amp;quot;)) 
	
	--Draenei 
	local GiftOfTheNaaru = 59542	
	--Blood Elf
	local ArcaneTorrent = 28730 --mana regen
	
	if PQ_Class == &amp;quot;PALADIN&amp;quot; then
		GiftOfTheNaaru = 59542	
	elseif PQ_Class == &amp;quot;MONK&amp;quot; then 
		GiftOfTheNaaru = 121093
		ArcaneTorrent = 129597 --chi regen
	elseif PQ_Class == &amp;quot;PRIEST&amp;quot; then  
		GiftOfTheNaaru = 59544
	elseif PQ_Class == &amp;quot;SHAMAN&amp;quot; then 
		GiftOfTheNaaru = 59547
	end

	--Troll 
	local Berserking = 26297 
	--Undead
	local WillOfTheForsaken = 7744  
	--Dwarven 
	local Stoneform = 20594 
	--Human 
	local EveryManForHimself = 59752
	--Undead 
	--local Cannibalize = 20577 --not much helpful
	--Orc 
	local BloodFury = 33702
	--Gloves Engineer
	local _, GECooldown, GEReady = GetInventoryItemCooldown(&amp;quot;player&amp;quot;, 10)
			
	--HP
	if IsSpellKnown(GiftOfTheNaaru) 
	and GetSpellCooldown(GiftOfTheNaaru) == 0 
	and PQR_SpellAvailable(GiftOfTheNaaru)
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 30	
	then		
		CastSpellByName(tostring(GetSpellInfo(GiftOfTheNaaru),nil))	 
		return true 
	end
	
	--Mana
	if IsSpellKnown(ArcaneTorrent) 
	and PQ_Class ~= &amp;quot;MONK&amp;quot;
	and GetSpellCooldown(ArcaneTorrent) == 0 
	and PQR_SpellAvailable(ArcaneTorrent)
	and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= 80	
	then		
		CastSpellByName(tostring(GetSpellInfo(ArcaneTorrent),nil))	 
		return true 
	end	
  	
  	--CDs
  	if not racialcds then
	  	function racialcds()
			if IsSpellKnown(BloodFury) 
			and GetSpellCooldown(BloodFury) == 0 
			and PQR_SpellAvailable(BloodFury)	
			then		
				CastSpellByName(tostring(GetSpellInfo(BloodFury),nil))	 
				return true 
			elseif IsSpellKnown(Berserking) 
			and GetSpellCooldown(Berserking) == 0 
			and PQR_SpellAvailable(Berserking)	
			then		
				CastSpellByName(tostring(GetSpellInfo(Berserking),nil))	 
				return true 
			elseif GECooldown == 0 
			and GEReady == 1 then
				UseInventoryItem(10)
			end
		end
	end
  	
  	if lowhpmembers &amp;gt;=5 then
  		racialcds()
  	end
  	
  	--Removes any Charm, Fear and Sleep effect
	if not GotFear then
		function GotFear(t) 
			local debuff = { 10326, 8122, 2094, 5782, 5484, 6358, 5246 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end
	if IsSpellKnown(WillOfTheForsaken) 
	and GetSpellCooldown(WillOfTheForsaken) == 0 
	and PQR_SpellAvailable(WillOfTheForsaken)	
	and GotFear(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(WillOfTheForsaken),nil))	 
		return true 
	end  
	
	--Removes all poison, disease and bleed effects and reduces all damage taken by 10% for 8 sec
	if not GotPoison then
		function GotPoison(t)
			local i, debuff = 1, select(5,UnitDebuff(t, 1)) 
			while debuff do
				if debuff == &amp;quot;Poison&amp;quot; or debuff == &amp;quot;Disease&amp;quot; then return true end
				i = i + 1 debuff = select(5,UnitDebuff(t, i)) 
			end
		end
	end	
	if IsSpellKnown(Stoneform) 
	and GetSpellCooldown(Stoneform) == 0 
	and PQR_SpellAvailable(Stoneform)	
	and GotPoison(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(Stoneform),nil))	 
		return true 
	end    	
	
	--Removes all movement impairing effects and all effects which cause loss of control of your character
	if not LostControl then
		function LostControl(t) 
			local debuff = { 122, 10326, 8122, 2094, 5782, 5484, 6358, 5246, 408 }
			for i=1, #debuff do if UnitDebuffID(t,debuff[i]) then return true end end
		end
	end  
	if IsSpellKnown(EveryManForHimself) 
	and GetSpellCooldown(EveryManForHimself) == 0 
	and PQR_SpellAvailable(EveryManForHimself)	
	and LostControl(&amp;quot;player&amp;quot;)
	then		
		CastSpellByName(tostring(GetSpellInfo(EveryManForHimself),nil))	 
		return true 
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></SHAMAN>