<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,5384)
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or UnitBuffID(&amp;quot;player&amp;quot;, 77769)
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or not UnitExists(&amp;quot;target&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Searing Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not (totemX and totemY) then
    totemX,totemY = 0,0
end

local Blacklist = {
    120668,
    2062,
    2894

}

function totemDistance()
    local totemName = select(2,GetTotemInfo(1)) or select(2,GetTotemInfo(2))
    local fire = GetSpellInfo(2894)
    local earth = GetSpellInfo(2062)

    if totemX ~= (0 or nil) and totemY ~= (0 or nil) and totemName ~= (fire or earth) then
        local a,b,c,d,e,f,g,h,i,j = GetAreaMapInfo(GetCurrentMapAreaID())
        local a1 , b1 = GetPlayerMapPosition(&amp;quot;Player&amp;quot;)
        local x1 , y1 = a1 * 1000, b1 * 1000
        local a2 , b2 = totemX, totemY
        local x2 , y2 = a2 * 1000, b2 * 1000
        local w = (d - e)
        local h = (f - g)
        local distance = sqrt(min(x1 - x2, w - (x1 - x2))^2 + min(y1 - y2, h - (y1-y2))^2)
        
        return distance
    else
        return 0
    end
end

    

if GetTotemTimeLeft(1) &amp;lt; 3 or totemDistance() &amp;gt;= 25 then
    totemX,totemY = GetPlayerMapPosition(&amp;quot;Player&amp;quot;)
    CastSpellByName(GetSpellInfo(3599))
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Stormstrike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ss
local Ascendance = UnitBuffID(&amp;quot;player&amp;quot;, 114050)
local SBAvil = PQR_SpellAvailable(115356)
local SSAvil = PQR_SpellAvailable(17364)
local Flameshock = UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)

if AoE then
	if not Flameshock then
		return false
	end
	if PQR_SpellAvailable(60103) --Lava Lash
	or PQR_SpellAvailable(1535)  then --Fire Nova
		return false
	end
 end




if SBAvil
and Ascendance then   
	CastSpellByName(tostring(GetSpellInfo(115356))) 
end

if SSAvil
and not Ascendance then 
	_castSpell(17364) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Lava Lash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--ll
local Flameshock = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)) 

if AoE
and Flameshock == nil then
	return false
end

_castSpell(60103, &amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Flame Shock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--fs
local Flameshock = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;))  

if not AoE then
	if not Flameshock 
	or Flameshock - GetTime() &amp;lt; 7 then
		_castSpell(8050, &amp;quot;Target&amp;quot;)
	end
else
	if not Flameshock 
	or Flameshock - GetTime() &amp;lt; 13 then
		_castSpell(8050, &amp;quot;Target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Unleash Elements</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Flameshock = UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)
local _, talent = GetTalentRowSelectionInfo(6)



if AoE then
	if not Flameshock then
		return false
	end
	if cdRemains(60103) &amp;lt; 1.5 then --Lava Lash
		return false
	end
	
	_castSpell(73680)
 end

if not AoE 
and PQR_SpellAvailable(73680) then
	if not inMelee() then
		_castSpell(73680)
	end
	if talent == 16 then
		_castSpell(73680)
	elseif not PQR_SpellAvailable(60103)  --Lava Lash
	and not PQR_SpellAvailable(17364)  then--Stormstrike
		_castSpell(73680)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Earth Shock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Flameshock = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)) 

if Flameshock ~= nil
and Flameshock - GetTime() &amp;lt; 7 then
	return false 
else 
	_castSpell(8042, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Surge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHp = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local _, _, _, msStack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )


if HealMode then
	if HealingRainKey then
		return false
	end

	if myHp &amp;lt; hsHp 
	and msStack == 5 then
	    _castSpell(8004, &amp;quot;player&amp;quot;)
	end
	
	if PQR_SpellAvailable(8004) then
		for i=1, #members do
			if members[i].HP &amp;lt; hsHp 
			and PQR_IsOutOfSight(members[i].Unit) == false  
			and msStack == 5 then
				_castSpell(8004, members[i].Unit)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Lightning Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID( &amp;quot;player&amp;quot;, 324 ) == nil then
	_castSpell(324)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Fire Nova</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AoE  then
	_castSpell(1535)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Main Hand</Name><Default>false</Default><SpellID>8232</SpellID><Actions></Actions><Lua>local arg1= GetWeaponEnchantInfo()

if arg1 == nil then

	return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Off Hand</Name><Default>false</Default><SpellID>8024</SpellID><Actions></Actions><Lua>local arg1, arg2, arg3, arg4 = GetWeaponEnchantInfo()

if arg4 == nil then

	return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Lightning Bolt 3+</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )

if HealingRainKey then
	return false
end


if not AoE 
and not HealMode then
	if MS ~= nil then
		if Stack &amp;gt;= 4  then
			_castSpell(403, &amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Stormlash Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD
and AutoStormlash then
	_castSpell(120668)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Status --</Name><Default>false</Default><SpellID>1535</SpellID><Actions></Actions><Lua>if StatusReport then
	PQR_status()
 	
	StatusReport = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Elemental Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )
local AS = UnitBuffID(&amp;quot;player&amp;quot;, 16188)


if AS
and PQR_SpellAvailable(117014) then
	_castSpell(117014, &amp;quot;Target&amp;quot;)
end

if MS ~= nil then
	if Stack &amp;gt;= 1  
	and PQR_SpellAvailable(117014) then
		_castSpell(117014, &amp;quot;Target&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Cooldowns</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--This section included all CDs that are off the GCD. 
--I think its just simpler to have them all togeather instead of having 5 diffrent abilities.


local _, talent = GetTalentRowSelectionInfo(4)
local Ascendance = UnitBuffID(&amp;quot;player&amp;quot;, 114050)
local AscendanceAvil = PQR_SpellAvailable(114049)
local VirmensBitePotion = GetItemCount(76089, nil, true) 
local VirmenPotCD = select(2,GetItemCooldown(76089))

if UseCD then
	-- Gloves
	if UseGloves
	and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10) == 0 then 		
		UseInventoryItem(10)
	end
	
	--Pot during lust
	if UnitBuffID(&amp;quot;player&amp;quot;,105697) == nil and POTION_USED ~= true then
		if UsePot then
			if VirmensBitePotion == nil or VirmensBitePotion == 0 then
				return false
			end
			
			if UnitBuffID(&amp;quot;player&amp;quot;,32182)
			or UnitBuffID(&amp;quot;player&amp;quot;,2825)
			or UnitBuffID(&amp;quot;player&amp;quot;,80353) then
				if VirmensBitePotion &amp;gt; 0 and VirmenPotCD == 0 then
					UseItemByName(76089)
					POTION_USED = true
				end
			end
		end	
	end
	
	--Trinkets
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
		UseInventoryItem(13)
	end
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14) == 0 then 
		UseInventoryItem(14)
	end
	
	--Orc
	if PQR_SpellAvailable(33697) then
		CastSpellByName(tostring(GetSpellInfo(33697)))  
	end
	
	--Troll
	if PQR_SpellAvailable(26297) then 
		CastSpellByName(tostring(GetSpellInfo(26297))) 
	end
	
	--Elem Mastery
	if PQR_SpellAvailable(16166) then 
		_castSpell(16166)
	end
	
	--AS
	if PQR_SpellAvailable(16188)  then 
		_castSpell(16188)
	end
	
	--Ascendance
	if not Ascendance 
	and AscendanceAvil then
		_castSpell(114049)
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Init ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_StopRotation()
end
 

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Cpoworks_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Cpoworks_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

 

-- OPTIONS -- 
hsHp = PQI_CpoworksEnhancement_HealingSurge_value
hstHp = PQI_CpoworksEnhancement_HealingStream_value
HealthStoneHP = PQI_CpoworksEnhancement_Healthstone_value
HealMode = PQI_CpoworksEnhancement_EnableHealing_enable
AutoStormlash = PQI_CpoworksEnhancement_EnableStormlash_enable
UseFireEle = PQI_CpoworksEnhancement_EnableFireEle_enable 
UseEarthEle = PQI_CpoworksEnhancement_EnableEarthEle_enable
AoECL = PQI_CpoworksEnhancement_AoEChainLightning_enable
PQR_FSMO = PQI_CpoworksEnhancement_FlameShockMouseOver_enable
TurnOffCDsOutOfCombat = PQI_CpoworksEnhancement_DisableCDsafterleavingCombat_enable
UseGloves = PQI_CpoworksEnhancement_UseGloves_enable
UsePot = PQI_CpoworksEnhancement_UsePotDuringLust_enable

GroupInfo() 

--Keybinds
AoEKey	 			= PQI:IsHotkeys(PQI_CpoworksEnhancement_AoEMode_key) 
DefenciveKey		= PQI:IsHotkeys(PQI_CpoworksEnhancement_Defensives_key)
CooldownsKey		= PQI:IsHotkeys(PQI_CpoworksEnhancement_CooldownsKey_key)
PauseKey			= PQI:IsHotkeys(PQI_CpoworksEnhancement_Pause_key)
ProjectionKey		= PQI:IsHotkeys(PQI_CpoworksEnhancement_TotemicProjection_key)
HexKey 				= IsMouseButtonDown(5)
HealingRainKey		= IsMouseButtonDown(4)



GroupInfo()
CastClick()


--Do Not Touch
if not EnhLoaded then 
	UseCD		= false
	AoE			= false 
	EnhLoaded	= true  
	UseHR 		= false
	UseCHAuto 	= false
	UseCHMO 	= false
end


if PQI_CpoworksEnhancement_HealSelector_enable then
	if PQI_CpoworksEnhancement_HealSelector_value == 1 then
		UseHR = true
		UseCHAuto = false
		UseCHMO = false
	end
	if PQI_CpoworksEnhancement_HealSelector_value == 2 then
		UseHR = false
		UseCHAuto = true
		UseCHMO = false
	end
	if PQI_CpoworksEnhancement_HealSelector_value == 3 then
		UseHR = false
		UseCHAuto = false
		UseCHMO = true
	end
end

--AoE
if not aoekeydown then aoekeydown = 0 end
if not GetCurrentKeyBoardFocus() and AoEKey and GetTime() - aoekeydown &amp;gt; 1 then
	aoekeydown = GetTime()
  	if AoE  then 
		AoE  = false 
		PQR_WriteToChat(&amp;quot;AoE: |cFFFF0000Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)
  	else 
		AoE  = true 
		PQR_WriteToChat(&amp;quot;AoE: |cFF00FF00Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
  	end
end

--Cooldowns
if not controllkeydown then controllkeydown = 0 end
if not GetCurrentKeyBoardFocus() and CooldownsKey and GetTime() - controllkeydown &amp;gt; 1 then
	controllkeydown = GetTime()
  	if UseCD  then 
   		UseCD = false 
		PQR_WriteToChat(&amp;quot;Cooldowns: |cFFFF0000Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)  		
	else 
		UseCD = true 
		PQR_WriteToChat(&amp;quot;Cooldowns: |cFF00FF00Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
  	end
end

if PauseKey
or IsMounted() then
	return true
end

function PQR_status()
	PQR_WriteToChat(&amp;quot;Current Cooldown/AoE Status&amp;quot;)
	if UseCD then
		PQR_WriteToChat(&amp;quot;Cooldowns: |cFF00FF00Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
	else
		PQR_WriteToChat(&amp;quot;Cooldowns: |cFFFF0000Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)
	end
	if AoE then
		PQR_WriteToChat(&amp;quot;AoE: |cFF00FF00Enabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE: Enabled&amp;quot;,nil,&amp;quot;00FF00&amp;quot;)
	else
		PQR_WriteToChat(&amp;quot;AoE: |cFFFF0000Disabled&amp;quot;)
		PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;AoE: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;)
	end
end

--------------------
-- Slash Commands
--------------------
SLASH_STATUS1 = &amp;quot;/status&amp;quot;
SLASH_STATUS2 = &amp;quot;/pqrstatus&amp;quot;
function SlashCmdList.STATUS(msg, editbox)
	PQR_status()
end

--------------------------------------
if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	POTION_USED = false
end


if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	InCombat = true
end

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not UseCD
and InCombat then
	InCombat = false
end

if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
and TurnOffCDsOutOfCombat
and UseCD 
and InCombat then
	UseCD = false
	InCombat = false
	print(&amp;quot;Hey man, I turned off your CDs because you left combat.&amp;quot;)
	PQR_WriteToChat(&amp;quot;Cooldowns: |cFFFF0000Disabled&amp;quot;)
	PQR_Event(&amp;quot;PQR_Text&amp;quot;,&amp;quot;Cooldowns: Disabled&amp;quot;,nil,&amp;quot;FF0000&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Wolves</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD then
	_castSpell(51533)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Earth Ele</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD 
and UseEarthEle then
	_castSpell(2062)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Fire Ele</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UseCD
and UseFireEle then
	_castSpell(2894)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if PlayerHP &amp;lt; HealthStoneHP
and GetItemCount(5512,false,false) &amp;gt; 0 
and ( select(2, GetItemCooldown(5512)) == 0 ) then
    UseItemByName(5512)
    return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Flame Shock mouseover</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--fsmo
local Flameshock = select(7,UnitDebuffID(&amp;quot;mouseover&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;)) 


if PQR_FSMO then
	if UnitExists(&amp;quot;mouseover&amp;quot;) 
	and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) then	
		if Flameshock == nil
		or Flameshock - GetTime() &amp;lt; 7 then
			_castSpell(8050, &amp;quot;mouseover&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Decurse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ValidDispel(&amp;quot;player&amp;quot;) then
    CastSpellByName(GetSpellInfo(51886), &amp;quot;player&amp;quot;)
end

if PQR_SpellAvailable(51886) then
	for i=1, #members do
		if ValidDispel(members[i].Unit)
		and PQR_IsOutOfSight(members[i].Unit) == false then
			_castSpell(51886, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Chain Lightning</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )
local AS = UnitBuffID(&amp;quot;player&amp;quot;, 16188)



if not AoECL then
	return false
end

if AoE == true then
	if AS then
		_castSpell(421, &amp;quot;Target&amp;quot;)
	end

	if MS ~= nil then
		if Stack == 5  then
			_castSpell(421, &amp;quot;Target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Defensives</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if DefenciveKey then	
  CastSpellByName(tostring(GetSpellInfo(108271))) --Astral Shift
  CastSpellByName(tostring(GetSpellInfo(30823))) --Sham Rage 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Purge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local purgeThis2 = {
117283, -- Corrupted water (Protectors)
122149, -- Quickening (Wind Lord)
117697 -- Shield of Darkness (Spirit Kings)
}


if UnitExists(&amp;quot;target&amp;quot;) then
	for i=1, #purgeThis2 do
		if UnitBuffID(&amp;quot;target&amp;quot;, purgeThis2[i]) ~= nil
		and PQR_IsOutOfSight(&amp;quot;target&amp;quot;, 0.1) == false then
			_castSpell(370, &amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Hex</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if HexKey then 
	if UnitExists(&amp;quot;focus&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;focus&amp;quot;) ~= nil
	and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;, 0.1) == false
	and IsSpellInRange(GetSpellInfo(51514), &amp;quot;focus&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(51514), &amp;quot;focus&amp;quot;)
		return true
	end
	
	
	if UnitExists(&amp;quot;mouseover&amp;quot;)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) ~= nil
	and PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;, 0.1) == false
	and IsSpellInRange(GetSpellInfo(51514), &amp;quot;mouseover&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(51514), &amp;quot;mouseover&amp;quot;)
		return true
	end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Rain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )


if HealingRainKey
and UseHR
and PQR_SpellAvailable(73920)
and Stack == 5 then
  _castSpell(73920)
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enh : Lightning Bolt 5</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )
local AS = UnitBuffID(&amp;quot;player&amp;quot;, 16188)

if not AoE 
or not AoECL then
	if AS then
		_castSpell(403, &amp;quot;target&amp;quot;)
	end

	if MS ~= nil then
		if Stack == 5 then	
			_castSpell(403, &amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing : Healing Stream</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(5394) then
	for i=1, #members do
		if members[i].HP &amp;lt; hstHp 
		and PQR_IsOutOfSight(members[i].Unit) == false 
		and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 
		and not UnitIsEnemy(members[i].Unit, &amp;quot;player&amp;quot;) then
			_castSpell(5394)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing :  Chain Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )


if HealingRainKey
and UseCHAuto
and PQR_SpellAvailable(1064) then
	if Stack == 5 then
		_castSpell(1064, members[1].Unit)
	end
end

if HealingRainKey
and UseCHMO
and UnitExists(&amp;quot;mouseover&amp;quot;)
and PQR_SpellAvailable(1064) then
	if Stack == 5 then
		_castSpell(1064, &amp;quot;Mouseover&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All : Totamic Projection</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ProjectionKey then
	if IsSpellKnown(108287) then
		CastSpellByName(GetSpellInfo(108287))
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></SHAMAN>