<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>--Start--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- PQInterface is an absolute requirement from now on.
--if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
--	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
--	PQR_StopRotation()
--end
 

-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	StatusReport = true
	
	-- Load required data files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_SigShammyPvP.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_SigShammyPvP.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

if not macros then
macros = true
if not GetMacroInfo(&amp;quot;Hexer&amp;quot;) then
CreateMacro(&amp;quot;Hexer&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Hex\\n/Hexer&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Rooot&amp;quot;) then
CreateMacro(&amp;quot;Rooot&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Earthbind Totem\\n/Rooot&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Heal&amp;quot;) then
CreateMacro(&amp;quot;Heal&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Healing Surge\\n/Heeel&amp;quot;, 1)
end
if not GetMacroInfo(&amp;quot;Eblast&amp;quot;) then
CreateMacro(&amp;quot;Eblast&amp;quot;, &amp;quot;INV_MISC_QUESTIONMARK&amp;quot;, &amp;quot;#showtooltip Elemental Blast\\n/Eblast&amp;quot;, 1)
end
end
	
 
--------------------
	-- Register CVars -- 
	--------------------
	Nova_ValueCheck = {
		{	Var1 = 0,	Text = &amp;quot;Hexer&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Rooot&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Eblast&amp;quot;,				Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;HealKey&amp;quot;,			Var2 = nil		},
		{	Var1 = 0,	Text = &amp;quot;Pett&amp;quot;,			Var2 = nil		}		
	}		

	-----------------------------------------------
	-- Registering the CVars for the CustomFrame --
	-----------------------------------------------
	for i=1, #Nova_ValueCheck do
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;), Nova_ValueCheck[i].Var1) 
		end
		if GetCVar(&amp;quot;Nova_&amp;quot;..Nova_ValueCheck[i].Text..&amp;apos;_Enabled&amp;apos;) == nil then 
			RegisterCVar(&amp;quot;Nova_&amp;quot;..string.gsub(Nova_ValueCheck[i].Text, &amp;quot;%s&amp;quot;, &amp;quot;_&amp;quot;)..&amp;apos;_Enabled&amp;apos;, Nova_ValueCheck[i].Var2) 
		end
	end

	

----------------------------
-- To Integer from String --
----------------------------
for i=1, #Nova_ValueCheck do
	if Nova_ValueCheck[i].Var1 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)] = tonumber(GetCVar(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)))
	end
	if Nova_ValueCheck[i].Var2 ~= nil then
		_G[&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;Check&amp;apos;] = GetCVarBool(&amp;apos;Nova_&amp;apos;..string.gsub(Nova_ValueCheck[i].Text, &amp;apos;%s&amp;apos;, &amp;apos;_&amp;apos;)..&amp;apos;_Enabled&amp;apos;)
	end
end

--------------------
-- Slash Commands --
--------------------
if not slash then
slash = true

-- revive pet
	SLASH_HEXER1 = &amp;quot;/Hexer&amp;quot;
	function SlashCmdList.HEXER(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Hexer&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFPet Revive Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Hexer&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFPet Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Hexer&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
	
	-- revive pet
	SLASH_PETT1 = &amp;quot;/Pett&amp;quot;
	function SlashCmdList.PETT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Pett&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFPet Revive Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pett&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FFPet Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Pett&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
		-- revive pet
	SLASH_ROOOT1 = &amp;quot;/Rooot&amp;quot;
	function SlashCmdList.ROOOT(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Rooot&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FFPet Earthbind Totem Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Rooot&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Earthbind Totem Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Rooot&amp;quot;, 0)
		--	burstTarget = 0
		end
	end
			-- revive pet
	SLASH_HEEEL1 = &amp;quot;/Heeel&amp;quot;
	function SlashCmdList.HEEEL(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_HealKey&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF HealKey Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_HealKey&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF HealKey Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_HealKey&amp;quot;, 0)
		end
	end
--Eblast
SLASH_EBLAST1 = &amp;quot;/Eblast&amp;quot;
	function SlashCmdList.EBLAST(msg, editbox)
		if not GetCVarBool(&amp;quot;Nova_Eblast&amp;quot;) then
			xrn:message(&amp;quot;\124cFF0000FF Eblast Queued.&amp;quot;)
			SetCVar(&amp;quot;Nova_Eblast&amp;quot;, 1)
		else
			xrn:message(&amp;quot;\124cFFCC99FF Eblast Canceled.&amp;quot;)
			SetCVar(&amp;quot;Nova_Eblast&amp;quot;, 0)
		end
	end
	
end

if IsPlayerSpell(51485)
then 
Rootspell = 51485
else 
Rootspell = 2484
end

if cdRemains(117014) &amp;gt; 2
and Nova_Eblast == 1 then
SetCVar(&amp;quot;Nova_Eblast&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Eblast Engaged!.&amp;quot;)
end 
if cdRemains(Rootspell) &amp;gt; 2
and cdRemains(108269) &amp;gt; 2  
and Nova_Rooot == 1 then
SetCVar(&amp;quot;Nova_Rooot&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Rooot Engaged!.&amp;quot;)
end 
if cdRemains(51533) &amp;gt; 2
and cdRemains(2894) &amp;gt; 2  
and Nova_Pett == 1 then
SetCVar(&amp;quot;Nova_Pett&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Pett Engaged!.&amp;quot;)
end 
if cdRemains(51514) &amp;gt; 2 
and Nova_Hexer == 1 then
SetCVar(&amp;quot;Nova_Hexer&amp;quot;, 0)
xrn:message(&amp;quot;\124cFFCC99FF Hexer Engaged!.&amp;quot;)
end 

cokx:message(&amp;quot;Defencive Heals = &amp;quot;..onOff(Nova_HealKey)..&amp;quot;| Hex Focus =&amp;quot;..onOff(Nova_Hexer)..&amp;quot; &amp;quot;)

-- OPTIONS -- 
HealingSurge = PQI_ArneShammySig_HealingSurge_value
HealingStream = PQI_ArneShammySig_HealingStream_value
HealingTide = PQI_ArneShammySig_HealingTide_value
SBT = PQI_ArneShammySig_SBT_value
HPpot = PQI_ArneShammySig_Healthstone_value
AutoSprint = PQI_ArneShammySig_AutoSpiritWalk_enable
AutoShamRage = PQI_ArneShammySig_AutoShamRage_enable
AutoStormlash = PQI_ArneShammySig_AutoStormlash_enable
AutoSpiritwalkersGrace = PQI_ArneShammySig_AutoSpiritWalk_enable
Lbolt = PQI_ArneShammySig_LightningBolt_enable
AutoFocus = PQI_ArneShammySig_AutoFocus_enable
FreezingR = true
TwoFocus = PQI_ArneShammySig_TwosFocus_enable
UseNSebE = PQI_ArneShammySig_UseNSBURST_enable

GroupInfo() 

RunHeal = UnitBuffID(&amp;quot;player&amp;quot;, 79206)
Ascendance = UnitBuffID(&amp;quot;player&amp;quot;, 114050)
playerTad = PQR_UnitDistance(&amp;quot;Player&amp;quot;,&amp;quot;Target&amp;quot;)
PlayerHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
TargutHP = 100 * UnitHealth(&amp;quot;Target&amp;quot;) / UnitHealthMax(&amp;quot;Target&amp;quot;)
MS, _, _, Stack = UnitBuffID( &amp;quot;player&amp;quot;, 53817 )
Flameshock = select(7,UnitDebuffID(&amp;quot;target&amp;quot;,8050,&amp;quot;PLAYER&amp;quot;))

--Keybinds
if Stack == nil then Stack = 0 end
if not PQI_ArneShammySig_BurstKey_enable then 
	burstKey				= IsMouseButtonDown(3)
else 
 	burstKey				= PQI:IsHotkeys(PQI_ArneShammySig_BurstKey_key)
end



if not PQI_ArneShammySig_Pause_enable then 
	PauseKey = false
end
if not PQI_ArneShammySig_DefenciveKey_enable then 
	DefenciveKey = false 
end

if UnitExists(&amp;quot;target&amp;quot;)
and PQR_UnitFacing(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
then
IsFacing = true
else
IsFacing = false
end

if Groundingslol == nil then Groundingslol = 0 end

--if PauseKey
--or IsMounted() then
	--return true
--end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Pause--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PauseKey
or IsMounted() 
--or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
or Nova_Rooot == 1
or Nova_Pett == 1 
--or (Nova_HealKey == 1 and not PQR_IsMoving(.5))
or UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
--or not UnitExists(&amp;quot;target&amp;quot;) 
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--Totem Range--</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil then
	timerLoaded = false
	return true
end



--Position and range query set values to 0 on load to avoid nil errors. 
	if not timerLoaded then 
	    x1, y1 = 0,0 
	    x2, y2 = 0,0 
	    playerTargetDistance = 0 
	    readyTimer = 0      
	     
	    timerLoaded = true 
	end 
	
	-- Store our Position if in combat and have valid target. 
	if readyTimer == 0 then 
	    if UnitExists(&amp;quot;Target&amp;quot;) and UnitCanAttack(&amp;quot;Player&amp;quot;,&amp;quot;Target&amp;quot;) and UnitAffectingCombat(&amp;quot;Player&amp;quot;) then 
	        x1, y1 = PQR_UnitInfo(&amp;quot;target&amp;quot;) 
	        playerTargetDistance = PQR_UnitDistance(&amp;quot;Player&amp;quot;,&amp;quot;Target&amp;quot;) 
	        w = 100000 
	        h = 100000 
	        totemDistance = sqrt(min(x1 - x2, w - (x1 - x2))^2 + min(y1 - y2, h - (y1-y2))^2) 
	        --print(&amp;quot;Distance form Totem to target: &amp;quot;..floor(totemDistance)..&amp;quot; // Distance to Target: &amp;quot;..floor(playerTargetDistance))
	        readyTimer = GetTime() 
	    end 
	end 
	
	-- This part is delaying the script to check only once every seconds. 
	if readyTimer ~= 0 then 
	    timerCheck = GetTime() - readyTimer 
	end 
	if timerCheck &amp;gt; 3 then 
	    readyTimer = 0 
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto:Sham Rage</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local getOutofCC = {	
						44572,		-- Deep Freeze
						110698,		-- Hammer of Justice 
						105593,		-- Fist of Justice
						853		-- Hammer of Justice
}

if AutoShamRage 
and cdRemains(30823) == 0 then
	if GCDCheck(30823) then
		for i = 1, #getOutofCC do
			if (UnitDebuffID(&amp;quot;player&amp;quot;, getOutofCC[i]) or PlayerHP &amp;lt; 55)
			then
				CastSpellByName(tostring(GetSpellInfo(30823)))
			end
		end
	end                         
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key:Burst</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey
then
    if Nova_HealKey == 1 then
		SetCVar(&amp;quot;Nova_HealKey&amp;quot;, 0)
	end
	--Trinkets
	if GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
			UseInventoryItem(13) 
	end
	
	--Orc
	if GCDCheck(33697) then
		CastSpellByName(tostring(GetSpellInfo(33697)))  
	end
	
	--Elem Mastery
	if IsPlayerSpell(16166)
	and GCDCheck(16166) then 
		_castSpell(16166)
	end
	--Heals
	if IsPlayerSpell(108281)
	then 
		_castSpell(108281)
	end
	
	---Ascendance
	if not Ascendance 
	and cdRemains(17364) &amp;gt; 2 
	and cdRemains(117014) &amp;gt; 2 
	then
		_castSpell(114049)
	end	
end
--if cdRemains(114049) &amp;gt; 57
--and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
--			UseInventoryItem(13) 
--end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto:Ghost Wolf</Name><Default>false</Default><SpellID>2645</SpellID><Actions></Actions><Lua>if GCDCheck(2645) 
and not burstKey then
if UnitExists(&amp;quot;target&amp;quot;)
and not CheckInteractDistance(&amp;quot;target&amp;quot;, 3)
--and playerTad &amp;gt; 9
and not UnitBuffID( &amp;quot;player&amp;quot;, 2645 )
and not Ascendance then
return true
end
end</Lua><RecastDelay>5000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Grounding Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 
51505,	 	-- Lava Burst
116858,		--Chaos Bolt
113092, 	--Frost Bomb
48181, 		--Haunt
78674,      --starsurge
102051, 	--Frost Jaw
117014,		--Elemental Blast
5782,		-- Fear
118699,		-- Fear
118,		-- Polymorph
61305,		-- Polymorph: Black Cat
28272,		-- Polymorph: Pig
61721,		-- Polymorph: Rabbit
61780,		-- Polymorph: Turkey
28271,		-- Polymorph: Turtle
33786, 		-- Cyclone
113506, 	-- Cyclone
20066,		-- Repentance
51514,		-- Hex
605,		-- Dominate Mind
14515,        --ss
--12058,       --test
--77160,
 

}
if cdRemains(8177) == 0 then
for y=1, #custTars do 
	if UnitExists(custTars[y]) then
		local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
		for i=1, #InterruptSpells do
			if GetSpellInfo(InterruptSpells[i]) == spellName then
				if select(2, Nova_CastingInfo(custTars[y])) &amp;gt;= 50 then
					Groundingslol = 1
					--_castSpell(8177)
				end
			end
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto:Healthstone</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PlayerHP &amp;lt; HPpot
and GetItemCount(5512,false,false) &amp;gt; 0 
and ( select(2, GetItemCooldown(5512)) == 0 ) then
    UseItemByName(5512)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Purge</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>purgemeter = 0
if UnitExists(&amp;quot;target&amp;quot;) 
then
	if  not LineOfSight(&amp;quot;target&amp;quot;)
        and GCDCheck(370)
	and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 40
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and HaveBuff(&amp;quot;target&amp;quot;,{12472,6346,16166,79206,1022,974,108978},1.5)
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and UnitIsPlayer(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	and not HaveBuff(&amp;quot;player&amp;quot;,114049,0)
        and not HaveBuff(&amp;quot;player&amp;quot;,114051,0)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	then
        _castSpell(370, &amp;quot;target&amp;quot;)
	end
	end
	
if UnitExists(&amp;quot;target&amp;quot;) 
then
	if  not LineOfSight(&amp;quot;target&amp;quot;)
        and GCDCheck(370)
	and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 40
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and (HaveBuff(&amp;quot;target&amp;quot;,{11426},4))
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and UnitIsPlayer(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
	and not HaveBuff(&amp;quot;player&amp;quot;,114049,0)
        and not HaveBuff(&amp;quot;player&amp;quot;,114051,0)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	then
	purgemeter = select(15, UnitBuff(&amp;quot;target&amp;quot;,GetSpellInfo(11426),nil))
	if purgemeter &amp;gt; 30000 then
	_castSpell(370, &amp;quot;target&amp;quot;)
	end
	end
	end
	
	if UnitExists(&amp;quot;target&amp;quot;) 
    then
	if  not LineOfSight(&amp;quot;target&amp;quot;)
        and GCDCheck(370)
	and 100 * ( UnitPower(&amp;quot;player&amp;quot;)) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 40
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),1)
	and (HaveBuff(&amp;quot;target&amp;quot;,{17},4))
	and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
	and UnitIsPlayer(&amp;quot;target&amp;quot;)
	and not HaveBuff(&amp;quot;target&amp;quot;,iSpell(),1)
        and not HaveBuff(&amp;quot;player&amp;quot;,114051,0)
        and not HaveBuff(&amp;quot;player&amp;quot;,114049,0)
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
	then
	purgemeter = select(15, UnitBuff(&amp;quot;target&amp;quot;,GetSpellInfo(17),nil))
	if purgemeter &amp;gt; 30000 then
	_castSpell(370, &amp;quot;target&amp;quot;)
	end
	end
	end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto:Spirit Walk</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoSprint 
and cdRemains(58875) == 0 then
	if GCDCheck(58875)
	and hasRoot(&amp;quot;player&amp;quot;)
	and not inMelee()
	then
		CastSpellByName(tostring(GetSpellInfo(58875)))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto:Tremor Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local fears = {
--111397,  -- Blood Fear
5484,  -- Howl
8122,  -- scream
5782,   -- Fear
5246, -- Intimidating Shout
19386, --wyvern sting
145067, -- paly fear
113004  -- Intimidating Shout (druid symbio) 
}
local DelayTremor = 0.4
if cdRemains(8143) == 0 
and GCDCheck(8143) then
	for i = 1, #members do
		for f = 1, #fears do
			local isFeared, _, _, _, _, Dur = UnitDebuffID(members[i].Unit, fears[f])
			if isFeared
			and Dur &amp;gt;= 4 --Most full fears are 6 or 8 seconds
			and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 then
				if CleanseTime3 == nil then
				CleanseTime3 = GetTime() + DelayTremor 
				elseif GetTime() &amp;gt;= CleanseTime3 then
				_castSpell(8143)
			end
		end
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto:Hex</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Hexer == 1
and cdRemains(16188) == 0
and UnitExists(&amp;quot;focus&amp;quot;)
and not hasCC(&amp;quot;focus&amp;quot;)
and not HaveBuff(&amp;quot;focus&amp;quot;,druidcheck(),0) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 16188) then
_castSpell(16188)
end

if Nova_Hexer == 1
and UnitExists(&amp;quot;focus&amp;quot;)
and not LineOfSight(&amp;quot;focus&amp;quot;)
and not hasCC(&amp;quot;focus&amp;quot;)
and (not PQR_IsMoving(.5) or UnitBuffID(&amp;quot;player&amp;quot;, 79206) or UnitBuffID(&amp;quot;player&amp;quot;, 16188) or Stack &amp;gt;= 3 )
and not HaveBuff(&amp;quot;focus&amp;quot;,druidcheck(),0) 
then
_castSpell(51514, &amp;quot;focus&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto: Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoFocus
and not UnitExists(&amp;quot;focus&amp;quot;) 
then
for j=1 , #cTar do
if UnitExists(cTar[j])
and not UnitIsDeadOrGhost(cTar[j])
and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
and UnitIsPlayer(cTar[j])
and IsHealer(cTar[j])
then
FocusUnit(cTar[j])
end
end
end

--2v2 Code
if TwoFocus 
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
then
for j=1 , #cTar do
if UnitExists(cTar[j])
and not UnitIsDeadOrGhost(cTar[j])
and not UnitIsUnit(cTar[j],&amp;quot;target&amp;quot;) 
and not UnitIsUnit(cTar[j],&amp;quot;focus&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,cTar[j]) 
and UnitIsPlayer(cTar[j])
--and IsHealer(cTar[j])
then
FocusUnit(cTar[j])
end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:FlameShock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not Flameshock or Flameshock - GetTime() &amp;lt; 7
and UnitExists(&amp;quot;target&amp;quot;)
and cdRemains(8050) == 0
and GCDCheck(8050)
and not LineOfSight(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and IsFacing
then
	_castSpell(8050, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:EarthShock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Flameshock ~= nil
and Flameshock - GetTime() &amp;lt; 7 then
	return false 
elseif not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and UnitExists(&amp;quot;target&amp;quot;)
and cdRemains(8042) == 0
and GCDCheck(8042)
and not LineOfSight(&amp;quot;target&amp;quot;) 
and IsFacing
then
	_castSpell(8042, &amp;quot;Target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:FrostShock</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
and cdRemains(8056) == 0
and Flameshock
and not isSlowed(&amp;quot;target&amp;quot;)
and GCDCheck(8056)
and not immuneToSlow(&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;)  
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and IsFacing
then
	_castSpell(8056, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Lava Lash</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and UnitExists(&amp;quot;target&amp;quot;)
and GCDCheck(60103)
and IsFacing
and not LineOfSight(&amp;quot;target&amp;quot;) 
then
_castSpell(60103, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Elemental Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Lbolt then
if MS ~= nil then
	if Stack &amp;gt;= 3
	and IsPlayerSpell(117014)
	and GCDCheck(117014)
	and UnitExists(&amp;quot;target&amp;quot;)
	
	and Nova_Hexer == 0
	--and UnitIsPlayer(&amp;quot;target&amp;quot;)
	and Nova_HealKey == 0
	and cdRemains(73680) &amp;gt; 2
	and not LineOfSight(&amp;quot;target&amp;quot;) 
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
	and IsFacing
	then
		_castSpell(117014, &amp;quot;target&amp;quot;)
	end	

    if Stack == 5
    and UnitExists(&amp;quot;target&amp;quot;)
    and GCDCheck(403)
    
	and Nova_Hexer == 0
	and (cdRemains(117014) &amp;gt; 2 or not IsPlayerSpell(117014))
	and Nova_HealKey == 0
	and not LineOfSight(&amp;quot;target&amp;quot;) 
	and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
	and IsFacing
	then
		_castSpell(403, &amp;quot;target&amp;quot;)
	end	
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local arg1, arg2, arg3, arg4 = GetWeaponEnchantInfo()
if UnitBuffID( &amp;quot;player&amp;quot;, 324 ) == nil then
	_castSpell(324)
end

if arg1 == nil then
_castSpell(8232)
end

if arg4 == nil then
_castSpell(8024)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps:Searing Totem</Name><Default>false</Default><SpellID>3599</SpellID><Actions></Actions><Lua>local TOT1, TOTNAME, startTime, duration = GetTotemInfo(1)
local TOTEXPIRE = startTime + duration - GetTime()
------------------------------------------------------------- 

local FireEle = GetSpellInfo(2894)

if TOTNAME == FireEle then 
return false

elseif TOTNAME ~= tostring(GetSpellInfo(2894))
and inMelee()
and GCDCheck(3599) then
if TOTEXPIRE == nil 
or TOTEXPIRE &amp;lt; 2
or totemDistance &amp;gt; 25 then
x2,y2 = PQR_UnitInfo(&amp;quot;Player&amp;quot;)
return true
end
end</Lua><RecastDelay>4000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CD:StormLash Totem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey
and cdRemains(120668) == 0 
then
	_castSpell(120668)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: StormStrike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GCDCheck(17364) then
if Ascendance
and UnitExists(&amp;quot;target&amp;quot;) 
and not LineOfSight(&amp;quot;target&amp;quot;)  
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0) 
and IsFacing
then
_castSpell(17364)   
CastSpellByName(tostring(GetSpellInfo(115356))) 
end
end

if GCDCheck(17364) then
if not LineOfSight(&amp;quot;target&amp;quot;)
and UnitExists(&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
and not Ascendance 
and IsFacing
then
_castSpell(17364) 

end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dps: Ue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
and GCDCheck(73680)
and Stack &amp;gt;= 3
--and IsFacing
and (cdRemains(117014) &amp;lt; 3 or not IsPlayerSpell(117014))   ---edit
and Nova_HealKey == 0 
and not LineOfSight(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
then
_castSpell(73680, &amp;quot;Target&amp;quot;)
end

if cdRemains(114049) &amp;gt; 57
and GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13) == 0 then 
			UseInventoryItem(13) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>TrapBox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FreezingR then

if not JukeBoxHero then
	JukeBoxHero = CreateFrame(&amp;quot;FRAME&amp;quot;, nil, UIParent)
	JukeBoxHero:Hide()
end

function JukeBoxHero_OnEvent(self, event, ...)
	local type, _, sourceGUID, sourceNAME, _, _, destGUID, destNAME = select(2, ...)
	if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then
		if type == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
			if cdRemains(8177) == 0 
			then
				local spellId = select(12, ...)
				local listId = {
					1499, --Freezing Trap
					19503, -- Scatter Shot
					12058,       --test
					77160,       --test2
					60192 --Freezing Trap
				}
				for j = 1, #listId do
				if listId[j] == spellId then
					for i=1, #cTar do
           			if UnitExists(cTar[i])
            		and UnitGUID(cTar[i]) == sourceGUID
            		and UnitCanAttack(&amp;quot;player&amp;quot;, cTar[i])
            		and IsSpellInRange(GetSpellInfo(8050), cTar[i]) == 1 
            		--and PQR_UnitDistance(&amp;quot;player&amp;quot;, cTar[i]) &amp;lt; 30
            		then
					Groundingslol = 1
					print(&amp;quot;yolo&amp;quot;)
					end
				end
			end
		end
	end
end
end  
end
JukeBoxHero:SetScript(&amp;quot;OnEvent&amp;quot;, JukeBoxHero_OnEvent)
JukeBoxHero:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Support:Decurse</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Delay = 0.6

for i=1, #members do
	if HaveDebuff(members[i].Unit, 51514,3)
	and GCDCheck(51886)
	and not LineOfSight(members[i].Unit) then
		if CleanseTime == nil then
		CleanseTime = GetTime() + Delay 
		elseif GetTime() &amp;gt;= CleanseTime then
		_castSpell(51886, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Support:Healing Tide</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if cdRemains(108280) == 0 then
for i=1, #members do
	if members[i].HP &amp;lt; HealingTide 
	and GCDCheck(108280)
	and not LineOfSight(members[i].Unit)
	and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 
	and not UnitIsEnemy(members[i].Unit, &amp;quot;player&amp;quot;) then
		_castSpell(108280)
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Support: Healing Stream</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local TOT3 = select(1,GetTotemInfo(3))

if cdRemains(5394) == 0 
and not TOT3 
then
for i=1, #members do
	if members[i].HP &amp;lt; HealingStream 
	and GCDCheck(5394)
	and not LineOfSight(members[i].Unit)
	and IsSpellInRange(GetSpellInfo(8004), members[i].Unit) == 1 
	and not UnitIsEnemy(members[i].Unit, &amp;quot;player&amp;quot;) then
		_castSpell(5394)
	end
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Support:StoneBT</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(108270)
and PlayerHP &amp;lt; SBT 
and GCDCheck(108270) then
_castSpell(108270)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key:Pets</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsPlayerSpell(51485)
then 
Rootspell = 51485
else 
Rootspell = 2484
end

if Nova_Pett == 1 then
if cdRemains(51533) == 0
and GCDCheck(51533)
then
_castSpell(51533)
end

if cdRemains(2894) == 0
and GCDCheck(2894) 
then
_castSpell(2894)
end
end

if Nova_Rooot == 1 
and GCDCheck(108269)
then
_castSpell(108269)
end

if Nova_Rooot == 1 
and GCDCheck(Rootspell) 
then
_castSpell(Rootspell)
end



RootsandSlows = {339,102359,122,96294,91807, 19975, 128405, 45334,102359,110693, 50245,54706,4167,111340,116706,113275,123407,113275,87194,114404,115197,64695,63685,107566}
if IsPlayerSpell(108273) 
then
if cdRemains(108273) == 0 
and cdRemains(58875) ~= 0
then 
	for i=1, #members do
		for j = 1, #RootsandSlows do
			if IsMelee(members[i].Unit)
			and TargutHP &amp;lt; 65
			and UnitDebuffID(members[i].Unit,RootsandSlows[j]) 
			and IsSpellInRange(GetSpellInfo(546), members[i].Unit) == 1 then
				_castSpell(108273) 
			end
		end
	end
end
end
if IsPlayerSpell(108285) then
if cdRemains(8143) + cdRemains(5394) + cdRemains(8177) + cdRemains(108273) &amp;gt; 70
then
_castSpell(108285)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Wind Shear</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = { 
331,     --Healing Wave
77472,   --Greater Healing Wave
8004,    --Healing Surge
8936,    --Regrowth
50464,   --Nourish(chuck Nourish)
2061,    --Flash Heal
2060,    --Greater Heal
32546,   --Binding Heal
19750,   --Flash of Light
82326,   --Divine Light
7328,    --Redemption
51514,   --Hex
33786,   --Cyclone
5782,    --Fear
605,     --Dominate Mind   
20066,   --Repentance 
118,     --Polymorph
61305,   --Polymorph
28272,   --Polymorph
61721,   --Polymorph 
61780,   --Polymorph
28271,   --Polymorph
112948,  --frost bomb
113724,  --Ring of Frost
116858,    --Chaos Bolt
111771, -- Demonic Gateway	(cast)
78674,     --Starsurge
8092,      -- ss
102051,    --frostjaw
51505,    --lava burst
117014,		--Elemental Blast

 

}

maxMSinterrupt =(math.random(35,65))

--if GCDCheck(57994) then
	for y=1, #custTars do 
		if UnitExists(custTars[y])
		--and UnitIsPlayer(custTars[y])
		and UnitIsEnemy(custTars[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(57994), custTars[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, custTars[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if select(2, Nova_CastingInfo(custTars[y])) &amp;gt;= maxMSinterrupt
					and select(3, Nova_CastingInfo(custTars[y])) &amp;gt; 0.2 then
						_castSpell(57994, custTars[y])
					end
				end
			end
		end
	end
--end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key:Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--if Nova_HealKey == 1
--and UnitIsFriend(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
--and not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
--then
--_castSpell(8004,&amp;quot;target&amp;quot;)
--xrn:message(&amp;quot;\124cFFCC99FF HealKey Canceled.&amp;quot;)
--SetCVar(&amp;quot;Nova_HealKey&amp;quot;, 0)
--end

--if Nova_HealKey == 1
--and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
--then
--_castSpell(8004,&amp;quot;player&amp;quot;)
--xrn:message(&amp;quot;\124cFFCC99FF HealKey Canceled.&amp;quot;)
--SetCVar(&amp;quot;Nova_HealKey&amp;quot;, 0)
--end




if Nova_HealKey == 1 
and Stack == 5 
then
--if PQR_IsMoving(.5)
--then
--_castSpell(79206)
--end




--for i=1, #members do
	if members[1].HP &amp;lt; HealingSurge 
	and GCDCheck(8004)
	and PQR_SpellAvailable(8004)
	--and (RunHeal or Stack == 5 )
	and not LineOfSight(members[1].Unit)
	and IsSpellInRange(GetSpellInfo(8004), members[1].Unit) == 1 
	then
		_castSpell(8004, members[1].Unit)
	end
--end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Key:Eblast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_Eblast == 1
and UnitExists(&amp;quot;target&amp;quot;)
and not LineOfSight(&amp;quot;target&amp;quot;)
then
_castSpell(117014, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Auto Wind Shear2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local InterruptSpells = {
2006, -- Resurrection		(cast)
7328, -- Redemption		(cast)
2008, -- Ancestral Spirit	(cast)
50769, -- Revive		(cast)
982, -- Revive Pet		(cast)
111771, -- Demonic Gateway	(cast)
51514,   --Hex
33786,   --Cyclone
5782,    --Fear
605,     --Dominate Mind   
20066,   --Repentance 
118,     --Polymorph
61305,   --Polymorph
28272,   --Polymorph
61721,   --Polymorph 
61780,   --Polymorph
28271,   --Polymorph
112948,  --frost bomb
113724,  --Ring of Frost
102051,   --frostjaw
145067,   --Paladong fear
}
--Heals
local InterruptSpells3 = {
331,     --Healing Wave
77472,   --Greater Healing Wave
8004,    --Healing Surge
8936,    --Regrowth
50464,   --Nourish(chuck Nourish)
2061,    --Flash Heal
2060,    --Greater Heal
32546,   --Binding Heal
19750,   --Flash of Light
82326,   --Divine Light
635, -- Holy Light		(cast)
}

maxMSinterrupt =(math.random(35,65))
--Rez and CC
if cdRemains(57994) == 0 then
	for y=1, #custTars do 
		if UnitExists(custTars[y])
		and UnitIsPlayer(custTars[y])
		and UnitIsEnemy(custTars[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(57994), custTars[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, custTars[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells do
				if GetSpellInfo(InterruptSpells[i]) == spellName and canInterrupt == false then
					if select(2, Nova_CastingInfo(custTars[y])) &amp;gt;= maxMSinterrupt 
					and select(4, Nova_CastingInfo(custTars[y])) &amp;gt;= 0.6
					and select(3, Nova_CastingInfo(custTars[y])) &amp;gt;= 0.25 then
						_castSpell(57994, custTars[y])
					end
				end
			end
		end
	end
end

local TargetHp = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
if UnitExists(&amp;quot;target&amp;quot;)
and cdRemains(57994) == 0 
and TargetHp &amp;lt; 65 then
	for y=1, #custTars do 
		if UnitExists(custTars[y])
		and UnitIsPlayer(custTars[y])
		and UnitIsEnemy(custTars[y], &amp;quot;player&amp;quot;) 
		and IsSpellInRange(GetSpellInfo(57994), custTars[y]) == 1 
		and PQR_UnitFacing(&amp;quot;player&amp;quot;, custTars[y]) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(custTars[y])
			for i=1, #InterruptSpells3 do
				if GetSpellInfo(InterruptSpells3[i]) == spellName and canInterrupt == false then
					if select(2, Nova_CastingInfo(custTars[y])) &amp;gt;= maxMSinterrupt 
					and select(4, Nova_CastingInfo(custTars[y])) &amp;gt;= 0.6
					and select(3, Nova_CastingInfo(custTars[y])) &amp;gt;= 0.25 then
						_castSpell(57994, custTars[y])
					end
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--SigBrain</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>function xelperFrame_OnEvent(self,event,...)

    --Combat log events
    if event == &amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot; then    
        local SubEvent = select(2, ...)
        local SourceName = select(5, ...)
        local DestName = select(9, ...)
        local SpellID = select(12, ...)
        local SpellName = select(13, ...)
        local ExtraSpellID = select(15, ...)
        local ExtraSpellName = select(16, ...)
        
        if SubEvent == &amp;quot;SPELL_CAST_SUCCESS&amp;quot; then
            if SourceName == UnitName(&amp;quot;player&amp;quot;) then
            
                --Cleanse528 8177 8143
                if SpellID == 51886 then
                    CleanseTime = nil
                end
                 if SpellID == 8143 then
                    CleanseTime3 = nil
                end
                if SpellID == 8177 then
                    Groundingslol = 0
                end
            end 
        end
    end
end

if PQR_LoadEventFrame == nil then
    PQR_LoadEventFrame = true

    xelperFrame = CreateFrame(&amp;quot;Frame&amp;quot;)
    xelperFrame:RegisterEvent(&amp;quot;COMBAT_LOG_EVENT_UNFILTERED&amp;quot;)
    xelperFrame:SetScript(&amp;quot;OnEvent&amp;quot;, xelperFrame_OnEvent)
    xelperFrame:Show()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ForceGround</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Groundingslol == 1
and cdRemains(8177) == 0
then
CastSpellByName(tostring(GetSpellInfo(8177))) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Force EB</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if burstKey
then

if UnitExists(&amp;quot;target&amp;quot;)
and cdRemains(73680) == 0 
and not LineOfSight(&amp;quot;target&amp;quot;)
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
then
_castSpell(73680, &amp;quot;Target&amp;quot;)
end

if UseNSebE
and cdRemains(16188) == 0
and cdRemains(117014) == 0
and Stack &amp;lt; 4
and UnitExists(&amp;quot;target&amp;quot;)
and not UnitBuffID(&amp;quot;player&amp;quot;, 16188) then
_castSpell(16188)
end

if UnitExists(&amp;quot;target&amp;quot;) 
and cdRemains(117014) == 0
and not LineOfSight(&amp;quot;target&amp;quot;) 
and not HaveBuff(&amp;quot;target&amp;quot;,iDMG(),0)
then
_castSpell(117014, &amp;quot;target&amp;quot;)
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></SHAMAN>