if not PQR_LoadedDataFile then
	PQR_LoadedDateFile = 1
	print("|cffFFBE69Cpoworks Monk Data File v1.0 - April 21, 2013|cffffffff")
end


-- PQInterface Settings
	local config = {
		name	= "Windwalker",
		author	= "Cpoworks",
		abilities = {
			{ 	name	= "Expel Harm",
				enable	= true,
				widget	= { type = "numBox",
					value	= 40,
					step	= 5,
					tooltip	= "HP to cast Expel Harm.",
				},
			},
			{ 	name	= "Healthstone",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "Set automatic Healthstone usage.",
				},
			},
			{ 	name	= "Enable Storm Earth and Fire",
				tooltip	= "Enable/Disable the usage of Storm Earth and Fire",
				enable	= false,
			},  
			{ 	name	= "Use Fist of Fury",
				tooltip	= "Enable/Disable Automatic use of Fist of Fury.",
				enable	= true,
			}, 
		},
		hotkeys = {
			{	name	= "AoEMode",
				enable	= true,
				hotkeys	= {'ls'},
			},
			{	name	= "Pause",
				enable	= true,
				hotkeys	= {'la'},
			},
			{	name	= "Defensives",
				enable	= true,
				hotkeys	= {'lc'},
			},
			{	name	= "Cooldowns",
				enable	= true,
				hotkeys	= {'rc'},
			},
		},
	}
		CPOWORKS_ELEMENTAL = PQI:AddRotation(config)

-------------------------------------------
--Functions
-------------------------------------------
function PQR_status()
	PQR_WriteToChat("Current Cooldown/AoE Status")
	if UseCD then
		PQR_WriteToChat("Cooldowns: |cFF00FF00Enabled")
		PQR_Event("PQR_Text","Cooldowns: Enabled",nil,"00FF00")
	else
		PQR_WriteToChat("Cooldowns: |cFFFF0000Disabled")
		PQR_Event("PQR_Text","Cooldowns: Disabled",nil,"FF0000")
	end
	if AoE == false then
		PQR_WriteToChat("AoE: |cFFFF0000Disabled")
		PQR_Event("PQR_Text","AoE: Disabled",nil,"FF0000")
	else
		PQR_WriteToChat("AoE: |cFF00FF00Enabled")
		PQR_Event("PQR_Text","AoE: Enabled",nil,"00FF00")
	end
end




function inMelee()
	if UnitAffectingCombat("player") ~= nil
	and IsSpellInRange(GetSpellInfo(100780),"target") == 1
	and UnitExists("target") ~= nil
	and UnitCanAttack("player","target") ~= nil
	then return true
	end
end


function HaveBuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == "number" then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local buff = select(7,UnitBuff(UnitID,spell,rank,Filter)) 
      if buff and ( buff == 0 or buff - GetTime() > TimeLeft ) then return true end
    end
  end
end

function HaveDebuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == "number" then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local debuff = select(7,UnitDebuff(UnitID,spell,rank,Filter)) 
      if debuff and ( debuff == 0 or debuff - GetTime() > TimeLeft ) then return true end
    end
  end
end

function CalculateHP(t)
  incomingheals = UnitGetIncomingHeals(t) or 0
  return 100 * ( UnitHealth(t) + incomingheals ) / UnitHealthMax(t)
end

function CanHeal(t)
  if UnitInRange(t) and UnitCanCooperate("player",t) and not UnitIsEnemy("player",t) 
  and not UnitIsCharmed(t) and not UnitIsDeadOrGhost(t) and not PQR_IsOutOfSight(t) 
  and UnitExists(t)
  then return true end 
end

function GroupInfo()
  members, group = { { Unit = "player", HP = CalculateHP("player") } }, { low = 0, tanks = { } } 
  group.type = IsInRaid() and "raid" or "party" 
  group.number = GetNumGroupMembers()
  for i=1,group.number do if CanHeal(group.type..i) then 
    local unit, hp = group.type..i, CalculateHP(group.type..i) 
    table.insert( members,{ Unit = unit, HP = hp } ) 
    if hp <= 94 then group.low = group.low + 1 end 
    if UnitGroupRolesAssigned(unit) == "TANK" then table.insert(group.tanks,unit) end 
  end end 
  if group.type == "raid" and #members > 1 then table.remove(members,1) end 
  table.sort(members, function(x,y) return x.HP < y.HP end)
  local customtarget = CanHeal("target") and "target" -- or CanHeal("mouseover") and GetMouseFocus() ~= WorldFrame and "mouseover" 
  if customtarget then table.sort(members, function(x) return UnitIsUnit(customtarget,x.Unit) end) end 
end

function CastClick()
  if IsMouseButtonDown(1) and MainMenuBar:IsShown() then 
    local mousefocus = GetMouseFocus() 
    if mousefocus and mousefocus.feedback_action 
    then SpellCancelQueuedSpell() PQR_DelayRotation(1) end
  end
end

GroupInfo() 


  
  
  
  
  