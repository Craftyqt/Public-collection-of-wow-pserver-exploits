if not PQR_LoadedDataFile then
	PQR_LoadedDataFile = 1
	print("|cffFFBE69 SigPallyPvP Data File FULL PIKK, 2013|cffffffff")
    print("|cffFFBE69 Stopp pikken æi vil av|cffffffff")

end


if not cTar
then
	cTar = {"target","focus","mouseover","arena1","arena2","arena3","arena4","arena5"}
end

PQR_Spec = GetSpecialization()
class = select(2, UnitClass("player"))
if PQR_Spec == 1 
and class == "WARRIOR" then
-- PQInterface Settings
	local config = {
		name	= "War",
		author	= "Sig",
		abilities = {	 
			{ 	name	= "AutoIntervene",
				tooltip	= "Enable/Disable AutoIntervene scatter.",
				enable	= false,
			},  
			{ 	name	= "Auto Spellreflect",
				tooltip	= "Enable/Disable Auto Spellreflect.",
				enable	= false,
			},  
			{ 	name	= "Full pikk",
				tooltip	= "Enable/Disable Jer ikkje steike støv.. eller jer den?.",
				enable	= false,
			},
			{ 	name	= "Auto Shatter",
				tooltip	= "Enable/Disable AutoShatter",
				enable	= false,
			},
			{ 	name	= "Auto Disarm",
				tooltip	= "Enable/Disable AutoDisarm.",
				enable	= false,
			},
			{ 	name	= "Auto Wall", newSection = true,
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Shield Wall.",
				},
			},
			{ 	name	= "Auto Rally",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Auto Rally",
				},
			}, 
		},
		hotkeys = { 
			{	name	= "Pause",
				enable	= true,
				hotkeys	= {'rs'},
			},
			{	name	= "Shout Toggle",
				enable	= true,
				hotkeys	= {'ra'},
			}, 
			{	name	= "Burst Key",
				enable	= false,
				hotkeys	= {'lc'},
			},
			{	name	= "Fear Key",
				enable	= true,
				hotkeys	= {'ls'},
			},
			{	name	= "banner Key",
				enable	= true,
				hotkeys	= {'la'},
			},
			{	name	= "Heroic Leap",
				enable	= true,
				hotkeys	= {'lc'},
			},
		},
	}
		Sig_War = PQI:AddRotation(config)
end
		
if PQR_Spec == 3 then
-- PQInterface Settings
	local config = {
		name	= "Ret",
		author	= "Sig",
		abilities = {	 
			{ 	name	= "AutoFreedom",
				tooltip	= "Enable/Disable Automatic use of Freedom.",
				enable	= false,
			},  
			{ 	name	= "Full pikk",
				tooltip	= "Enable/Disable Jer ikkje steike støv.. eller jer den?.",
				enable	= false,
			},
			{ 	name	= "Auto Sac",
				tooltip	= "Enable/Disable Auto Sac",
				enable	= false,
			},
			{ 	name	= "Auto Buff",
				tooltip	= "Enable/Disable AutoBuff.",
				enable	= false,
			},
			{ 	name	= "Divine Shield", newSection = true,
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Divine Shield.",
				},
			},
			{ 	name	= "Auto BoP",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "Auto BoP Healers and Casters",
				},
			}, 
			{ 	name	= "Divine Protection",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Divine Protection, Auto Deepfreeze",
				},
			}, 
				{ 	name	= "Auto Blind", newSection = true,
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Auto Blind.",
				},
			},
			{ 	name	= "Heal Self",
				enable	= true,
				widget	= { type = "numBox",
					value	= 80,
					step	= 5,
					tooltip	= "HP to HealSelf.",
				},
			},
			{ 	name	= "Heal Other",
				enable	= true,
				widget	= { type = "numBox",
					value	= 60,
					step	= 5,
					tooltip	= "Heal Others.",
				},
			},
			{ 	name	= "Auto Stun",
				enable	= true,
				widget	= { type = "numBox",
					value	= 60,
					step	= 5,
					tooltip	= "Auto Stun Focus.",
				},
			},
		},
		hotkeys = { 
			{	name	= "Pause",
				enable	= true,
				hotkeys	= {'rs'},
			},
			{	name	= "Blinding Light key",
				enable	= true,
				hotkeys	= {'ls'},
			}, 
			{	name	= "Burst Key",
				enable	= false,
				hotkeys	= {'ra'},
			},
			{	name	= "Stun Key",
				enable	= true,
				hotkeys	= {'lc'},
			},
			{	name	= "Aoe Key",
				enable	= true,
				hotkeys	= {'rc'},
			},
			{	name	= "Fear Key",
				enable	= true,
				hotkeys	= {'rs'},
			},
			{	name	= "Fol Key",
				enable	= true,
				hotkeys	= {'la'},
			},
		},
	}
		Sig_Ret = PQI:AddRotation(config)
end		

if PQR_Spec == 1 
and class == "HUNTER" then
-- PQInterface Settings
	local config = {
		name	= "Hunter",
		author	= "Sig",
		abilities = {	 
			{ 	name	= "Auto Target",
				tooltip	= "Enable/Disable Auto Target get tank target",
				enable	= false,
			},
			{ 	name	= "Full Pikk",
				tooltip	= "Enable/Disable Auto Target get tank target",
				enable	= false,
			},
			{ 	name	= "Auto Beast",
				tooltip	= "Enable/Disable Auto Beast CC",
				enable	= false,
			},
			{ 	name	= "Manual Beastw",
				tooltip	= "Enable/Disable ManualBeastw.",
				enable	= false,
			},
			{ 	name	= "Deterrence", newSection = true,
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Deterrence.",
				},
			},
			{ 	name	= "Healthstone",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "Healthstone",
				},
			}, 
			{ 	name	= "Pet Select",
				enable	= true,
				widget	= { type = "numBox",
					value	= 1,
					step	= 1,
					max = 5,
                    min = 1,
					tooltip	= "Pet Selector",
				},
			}, 
			{ 	name	= "Exhilaration",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Exhilaration",
				},
			}, 
			{ 	name	= "Exhilaration Pet",
				enable	= true,
				widget	= { type = "numBox",
					value	= 80,
					step	= 5,
					tooltip	= "HP to Exhilaration Pet.",
				},
			},
		},
		hotkeys = {   
			{	name	= "Pause",
				enable	= true,
				hotkeys	= {'rs'},
			},
			{	name	= "Burst Key",
				enable	= true,
				hotkeys	= {'lc'},
			},
			{	name	= "Freezing Trap",
				enable	= true,
				hotkeys	= {'ls'},
			},
			{	name	= "Aoe Key",
				enable	= true,
				hotkeys	= {'la'},
			},
			{	name	= "Fire Trap key",
				enable	= true,
				hotkeys	= {'rc'},
			},
		},
	}
		Sig_Hunter = PQI:AddRotation(config)
end		

  -------------------------------------------
--Functions
-------------------------------------------

if not IsLineOfSight then
        LoSTable = { }
        function IsLineOfSight(targetCheck, time)
            local time=time or 3
            targetGUID = UnitGUID(targetCheck) or 0    
    
             for i=1, #LoSTable do
                 if time < (GetTime() - LoSTable[i].time) then
                     table.remove(LoSTable, i)
                     break
                 end
            end
    
             function LoSCheck(self, event, ...)
                 local targetGUID = targetGUID
                 local Log = {...}
                 local AlreadyTabled = false
                 if Log[2] and Log[2] == "SPELL_CAST_FAILED" and targetGUID then
                     if Log[4] and Log[4]==UnitGUID("player") then
                         if Log[15] and Log[15]==SPELL_FAILED_LINE_OF_SIGHT then
                             for j=1, #LoSTable do
                                 if targetGUID == LoSTable[j].unit then
                                     AlreadyTabled = true
                                     break
                                 end
                             end
                             if not AlreadyTabled then
                                 table.insert(LoSTable, { unit=targetGUID, time=GetTime() } )
                                 targetGUID = nil
                                 _G.NovaLineOfSight:UnregisterAllEvents()
                             end
                         end
                     end
                 end
                 
             end
    
            if not NovaLineOfSight then
                 frameLOS = CreateFrame("frame", "NovaLineOfSight")
                 frameLOS:SetScript("OnEvent", LoSCheck)
            end
            
             for k=1, #LoSTable do
                  if targetGUID and targetGUID == LoSTable[k].unit then
                     return false
                 end
            end
            
            
            _G.NovaLineOfSight:RegisterEvent("COMBAT_LOG_EVENT_UNFILTERED")
            return true
    
        end
    end  
    
    --CastSpell--
function _castSpell(spellid,tar)
	if IsPlayerSpell(spellid) == true
	and GCDCheck(spellid)
	--and IsLineOfSight(tar, 1) 
	then
		if tar ~= nil
		and rangeCheck(spellid,tar) == nil
			then
			return false
		elseif tar ~= nil
		and rangeCheck(spellid,tar) == true
			then
			CastSpellByName(GetSpellInfo(spellid),tar)
			return true
		elseif tar == nil
			then
			CastSpellByName(GetSpellInfo(spellid))
			return true
		else
	return false
	end
end
end

function GCDCheck(SpellID)
if (GetSpellCooldown(GetSpellInfo(SpellID))+select(2,GetSpellCooldown(GetSpellInfo(SpellID)))-GetTime()< 0.1)
then 
return true
else
return false
end
end


--Combat and Melee Check--

function inMelee()
	if UnitAffectingCombat("player") ~= nil
	and IsSpellInRange(GetSpellInfo(35395),"target") == 1 or IsSpellInRange(GetSpellInfo(78),"target") == 1
	and UnitExists("target") ~= nil
	and UnitCanAttack("player","target") ~= nil
	then return true
	end
end

--Range Check Simple--
function rangeCheck(spellid,unit)
if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
then
	return true
end
end


--Amount of Cooldown that remains--
function cdRemains(spellid)
	if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime()) > 0
		then return select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime())
	else return 0
	end
end

local dispellableCCids 			= {  
	44572,		-- Deep Freeze
	118,		-- Polymorph
	61305,		-- Polymorph: Black Cat
	28272,		-- Polymorph: Pig
	61721,		-- Polymorph: Rabbit
	61780,		-- Polymorph: Turkey
	28271,		-- Polymorph: Turtle
	3355		-- Freezing Trap
}
function dispellableCC(unit)
for i=1,#dispellableCCids do
	if UnitDebuffID(unit,dispellableCCids[i]) ~= nil
		then
			return true
		end
	end
end


--Function Check Snares--
local PvPslows 			= {
	45524,		-- Chains of Ice
	50435,		-- Chilblains
	115000,		-- Remorseless Winter
	50259,		-- Dazed 
	58180,		-- Infected Wounds
	61391,		-- Typhoon
	127797,		-- Ursol's Vortex
	82941,		-- Ice Trap (Hunter)
	135299,		-- IceTrap Debuff
	35101,		-- Concussive Barrage
	5116,		-- Concussive Shot
	61394,		-- Frozen Wake 
	13810,		-- Ice Trap
	50433,		-- Ankle Crack 
	54644,		-- Frost Breath 
	121288,		-- Chilled 
	120,		-- Cone of Cold
	116,		-- Frostbolt
	44614,		-- Frostfire Bolt
	113092,		-- Frost Bomb
	31589,		-- Slow
	116095,		-- Disable
	118585,		-- Leer of the Ox
	123727,		-- Dizzying Haze
	123586,		-- Flying Serpent Kick
	110300,		-- Burden of Guilt
	63529,		-- Dazed - Avenger's Shield
	20170,		-- Seal of Justice
	15407,		-- Mind Flay
	3409,		-- Crippling Poison
	26679,		-- Deadly Throw
	119696,		-- Debilitation
	3600,		-- Earthbind 
	77478,		-- Earthquake 
	8034,		-- Frostbrand Attack
	8056,		-- Frost Shock
	51490,		-- Thunderstorm
	18223,		-- Curse of Exhaustion
	47960,		-- Shadowflame
	1715,		-- Hamstring
	12323,		-- Piercing Howl

				}
function isSlowed(unit)
for i=1,#PvPslows do
	if UnitDebuffID(unit,PvPslows[i]) ~= nil
		then
			return true
		end
	end
end

local immunDMG = {
33786, -- Cyclone
113506, -- Cyclone
45438,	-- Ice Block
110700,		-- Divine Shield (Paladin)
110696,		-- Ice Block (Mage)
19263,		-- Deterrence
45438,		-- Ice Block
642		-- Divine Shield
}
function iDMG()
return immunDMG
end

local roots				= {
						96294,	--Chains Of Ice
						91807,	--ShamblingRush
						339,		-- Entangling Roots
						19975,		-- Entangling Roots (Nature's Grasp)
						45334,		-- Immobilized (Wild Charge - Bear)
						102359,		-- Mass Entanglement
						110693,		-- Frost Nova (Mage)
						19185,		-- Entrapment
						128405,		-- Narrow Escape
						50245,		-- Pin (Crab)
						54706,		-- Venom Web Spray (Silithid)
						4167,		-- Web (Spider)
						122,		-- Frost Nova
						111340,		-- Ice Ward
						116706,		-- Disable
						113275,		-- Entangling Roots (Symbiosis)
						123407,		-- Spinning Fire Bloss
						113275,		-- Entangling Roots (Symbiosis)
						87194,		-- Glyph of Mind Blast
						114404,		-- Void Tendril's Grasp
						115197,		-- Partial Paralysis
						64695,		-- Earthgrab (Earthgrab Totem)
						63685,		-- Freeze (Frozen Power)
						107566,		-- Staggering Shout
						39965,		-- Frost Grenade
						55536,		-- Frostweave Net
						13099		-- Net-o-Matic
}
function hasRoot(unit)
for i=1,#roots do
	if UnitDebuffID(unit,roots[i]) ~= nil
		then
			return true
		end
	end
end

local cccheck1 = {
108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	33786,		-- Cyclone
	99,			-- Disorienting Roar
	2637,		-- Hibernate
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	110698,		-- Hammer of Justice 
	113004,		-- Intimidating Roar 
	113056,		-- Intimidating Roar 
	117526,		-- Binding Shot
	3355,		-- Freezing Trap
	1513,		-- Scare Beast
	19503,		-- Scatter Shot
	19386,		-- Wyvern Sting
	90337,		-- Bad Manner 
	24394,		-- Intimidation
	50519,		-- Sonic Blast 
	56626,		-- Sting 
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	31661,		-- Dragon's Breath
	118,		-- Polymorph
	61305,		-- Polymorph: Black Cat
	28272,		-- Polymorph: Pig
	61721,		-- Polymorph: Rabbit
	61780,		-- Polymorph: Turkey
	28271,		-- Polymorph: Turtle
	82691,		-- Ring of Frost
	123393,		-- Breath of Fire 
	126451,		-- Clash
	122242,		-- Clash 
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	115078,		-- Paralysis
	105421,		-- Blinding Light
	115752,		-- Blinding Light 
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	119072,		-- Holy Wrath
	20066,		-- Repentance
	10326,		-- Turn Evil
	113506,		-- Cyclone 
	605,		-- Dominate Mind
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror 
	9484,		-- Shackle Undead
	87204,		-- Sin and Punishment
	2094,		-- Blind
	1833,		-- Cheap Shot
	1776,		-- Gouge
	408,		-- Kidney Shot
	113953,		-- Paralysis 
	6770,		-- Sap
	76780,		-- Bind Elemental
	77505,		-- Earthquake
	51514,		-- Hex
	118905,		-- Static Charge 
	118345,		-- Pulverize
	710,		-- Banish
	54786,		-- Demonic Leap
	5782,		-- Fear 
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	104045,		-- Sleep 
	89766,		-- Axe Toss 
	115268,		-- Mesmerize 
	6358,		-- Seduction 
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout 
	20511,		-- Intimidating Shout 
	132168,		-- Shockwave
	105771,		-- Warbringer
	107079,		-- Quaking Palm
	13327,		-- Reckless Charge
	20549		-- War Stomp
}

function cccheck()
return cccheck1
end

---GroupInfo--
function HaveBuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == "number" then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local buff = select(7,UnitBuff(UnitID,spell,rank,Filter)) 
      if buff and ( buff == 0 or buff - GetTime() > TimeLeft ) then return true end
    end
  end
end

function HaveDebuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == "number" then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local debuff = select(7,UnitDebuff(UnitID,spell,rank,Filter)) 
      if debuff and ( debuff == 0 or debuff - GetTime() > TimeLeft ) then return true end
    end
  end
end
 
 
function CanHeal(t)
  if UnitCanCooperate("player",t)
  and not UnitIsEnemy("player",t) 
  and not UnitIsCharmed(t)
  and not UnitIsDeadOrGhost(t)
  and not PQR_IsOutOfSight(t,1)
  and not UnitDebuffID(t,33786) 
  and not UnitDebuffID(t,122370)
  then
  	return true
  end 
end

function CalculateHP(t)
  incomingheals = UnitGetIncomingHeals(t) or 0
  return 100 * ( UnitHealth(t) ) / UnitHealthMax(t)
end

function IsHealer(t)
local class = select(2, UnitClass(t))
if (class == "DRUID" or class =="PALADIN" or class =="PRIEST" or class =="MONK" or class =="SHAMAN")
and UnitPowerMax(t) >= 290000
and not UnitBuffID(t, 24858)
and not UnitBuffID(t, 15473)
and not UnitBuffID(t, 324)
then
return true
end
end

  

function GroupInfo()
  members, group = { { Unit = "player", HP = CalculateHP("player"), UTT = "playertarget" } }, { low = 0 } 
  group.type = IsInRaid() and "raid" or "party" 
  group.number = GetNumGroupMembers()
  for i=1,group.number do
  if CanHeal(group.type..i)
  then 
    local unit, hp, utt = group.type..i, CalculateHP(group.type..i), group.type..i.."target" 
    table.insert( members,{ Unit = unit, HP = hp , UTT = utt} ) 
    if hp < 98
    then
   	group.low = group.low + 1 
   end 
  end
  end 
  if group.type == "raid"
  and #members > 1
  then 
 	table.remove(members,1) 
  end 
  table.sort(members, function(x,y) return x.HP < y.HP end)
  local customtarget = CanHeal("target") and ("target") -- or CanHeal("mouseover") and GetMouseFocus() ~= WorldFrame and "mouseover" 
  	if customtarget
  	then
	  table.sort(members, function(x) return UnitIsUnit(customtarget,x.Unit) end) 
	end 
end

local InterruptSpells = { 118,116,61305,28271,28272,61780,61721,2637,33786,5185,8936,50464,19750,82326,2061,9484,605,8129,331,8004,51505,403,77472,51514,5782,1120,48181,30108,
33786, -- Cyclone		(cast)
28272, -- Pig Poly		(cast)
118, -- Sheep Poly		(cast)
61305, -- Cat Poly		(cast)
61721, -- Rabbit Poly		(cast)
61780, -- Turkey Poly		(cast)
28271, -- Turtle Poly		(cast)
51514, -- Hex			(cast)
51505, -- Lava Burst		(cast)
339, -- Entangling Roots	(cast)
30451, -- Arcane Blast		(cast)
605, -- Dominate Mind		(cast)
20066, --Repentance		(cast)
116858, --Chaos Bolt		(cast)
113092, --Frost Bomb		(cast)
8092, --Mind Blast		(cast)
11366, --Pyroblast		(cast)
48181, --Haunt			(cast)
102051, --Frost Jaw		(cast)
1064, -- Chain Heal		(cast)
77472, -- Greater Healing Wave	(cast)
8004, -- Healing Surge		(cast)
73920, -- Healing Rain		(cast)
51505, -- Lava Burst		(cast)
8936, -- Regrowth		(cast)
2061, -- Flash Heal		(cast)
2060, -- Greater Heal		(cast)
32375, -- Mass Dispel		(cast)
2006, -- Resurrection		(cast)
5185, -- Healing Touch		(cast)
596, -- Prayer of Healing	(cast)
19750, -- Flash of Light	(cast)
635, -- Holy Light		(cast)
7328, -- Redemption		(cast)
2008, -- Ancestral Spirit	(cast)
50769, -- Revive		(cast)
2812, -- Denounce		(cast)
82327, -- Holy Radiance		(cast)
10326, -- Turn Evil		(cast)
145067, -- Turn Evil		(cast)
82326, -- Divine Light		(cast)
82012, -- Repentance		(cast)
116694, -- Surging Mist		(cast)
124682, -- Enveloping Mist	(cast)
115151, -- Renewing Mist	(cast)
115310, -- Revival		(cast)
126201, -- Frost Bolt		(cast)
44614, -- Frostfire Bolt	(cast)
133, -- Fireball		(cast)
982, -- Revive Pet		(cast)
111771, -- Demonic Gateway			(cast)
118297, -- Immolate				(cast)
124465, -- Vampiric Touch			(cast)
32375 -- Mass Dispel				(cast) 
}
function castInt()
return InterruptSpells
end
  
local InterruptChannel = { 
1120, -- Drain Soul		(channeling cast)
12051, -- Evocation		(channeling cast)
115294, -- Mana Tea		(channeling cast)
115175, -- Soothing Mist	(channeling cast)
64843, -- Divine Hymn		(channeling cast)
64901, -- Hymn of Hope		(channeling cast)
47540 -- Penance
 }
function channelInt()
return InterruptChannel
end

local Dpoison 			= {  

19386,		-- Wyvern Sting
113953		-- Paralysis (Paralytic Poison)	

}
function Dpoisons(unit)
	for i=1,#Dpoison do
		if UnitDebuffID(unit,Dpoison[i]) ~= nil then
			return true
		end
	end
end	