if not Alpha_Frame_First then
	Alpha_Frame_First = true
	--ChatFrame1:SetBackdrop({bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", tile = true, tileSize = 300})
	
	Alpha_Colors = {
	   blue        = "|cff".."00aaff",
	   lightBlue   = "|cff".."00ffff",
	   purple      = "|cff".."00ffff",
	   white       = "|cff".."B7B7B7",
	}
	
	local ButtonValue = {
	   [1] =     { Text = "|cffb048f8General|cffffffff",       Icon = nil               },
	   [2] =     { Text = "|cffb048f8Farming|cffffffff",       Icon = "FarmingIcon"     },
	   [3] =     { Text = "|cffb048f8Milling|cffffffff",       Icon = "MillingIcon"     },
	   [4] =     { Text = "|cffb048f8Prospecting|cffffffff",   Icon = "ProspectingIcon" },
	   [5] =     { Text = "|cffb048f8Disenchanting|cffffffff", Icon = "DisenchantIcon"  },
	   [6] =     { Text = "|cffb048f8Information|cffffffff",   Icon = nil               },
	   [7] =     { Text = "|cffb048f8Change log|cffffffff",    Icon = nil               },
	   [8] =     { Text = "|cffb048f8Help|cffffffff",          Icon = nil               },
	}
	local IconsTable = {
	   [1] = { FrameName = "FarmingIcon",      Frame = "SettingFrame2", IconTexture = "Interface/ICONS/INV_Misc_Shovel_01"      },
	   [2] = { FrameName = "MillingIcon",      Frame = "SettingFrame3", IconTexture = "Interface/ICONS/Ability_Miling"             },
	   [3] = { FrameName = "ProspectingIcon",  Frame = "SettingFrame4", IconTexture = "Interface/ICONS/INV_Misc_Gem_BloodGem_01"},
	   [4] = { FrameName = "DisenchantIcon",   Frame = "SettingFrame5", IconTexture = "Interface/ICONS/INV_Enchant_Disenchant"  },
	}
	local ScrollValue = {
	   [1] =     { Text = "|cFFFF6060   --All Previous Changes Plus Some|cffffffff"                                             },
	   [2] =     { Text = "|cFFFFFAFAVersion 2.0.1 - Initial Release|cffffffff"                                                 },
	   [3] =     { Text = "|cFFFF6060    --PQR_UnitFacing is checked by default.|cffffffff"                                      },
	   [4] =     { Text = "|cFFFF6060    --Added checkboxes to select what form of Mangle/Shred to use.|cffffffff"            },
	   [5] =     { Text = "|cFFFF6060   --Cooldown frame updated extensively with more functions.|cffffffff"                  },
	   [6] =     { Text = "|cFFFF6060    --Look here for change logs of what has changed from the version before.|cffffffff"  },
	   [7] =     { Text = "|cFFFF6060   --Information Frame coded into Nova Frame|cffffffff"                                   },
	   [8] =     { Text = "|cFFFF6060    --Main frame not connected to anything and CD Checks not working.|cffffffff"          },
	   [9] =     { Text = "|cFFFF6060    --Not Fully Functional As of yet.|cffffffff"                                           },
	   [10] =    { Text = "|cFFFF6060   --Nova Frame Incorperated into profile|cffffffff"                                       },
	   [11] =    { Text = "|cFFFFFAFAVersion 2.1"                                                                              },
	   [12] =    { Text = "|cFFFF6060   --All Current Coded Working Changes moved over.|cffffffff"                              },
	   [13] =    { Text = "|cFFFF6060   --Changed from Nova Frame to Custom Frame.|cffffffff"                                 },
	   [14] =    { Text = "|cFFFFFAFAVersion 2.1.1"               }--[[,
	    [15] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [16] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [17] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [18] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [19] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [20] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [21] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [22] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [23] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [24] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [25] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [26] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [27] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [28] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [29] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [30] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [31] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [32] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [33] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [34] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [35] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [36] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     },
	    [37] =     { Text = "|cFFFFFAFAAbilities|cffffffff"     }]]--
	}
	
	local FarmingSettingsList = {
	   [1]    =    {    text = Alpha_Colors.white.."Enable Farming",            Enable = true    },
	   [2]    =    {    text = Alpha_Colors.white.."Plant Seed",                Enable = true    },
	   [3]    =    {    text = Alpha_Colors.white.."Till Soil",                 Enable = false   },
	   [4]    =    {    text = Alpha_Colors.white.."Use Bug Spray",             Enable = false   },
	   [5]    =    {    text = Alpha_Colors.white.."Use Watering Can",          Enable = false   },
	   [6]    =    {    text = Alpha_Colors.white.."Force Target Tilled Soil",  Enable = true    },
	   [7]    =    {    text = Alpha_Colors.white.."Harvest Plant",             Enable = true    },
	   [8]    =    {    text = Alpha_Colors.white.."Destroy Targeted Plant",    Enable = true    },
	}
	
	local PlantSeedMenu = {
	   { text = "Select an Seed",          isTitle = true},
	   { text = "Enigma Seed",             func = function() Alpha_Farm_Seed = 1;  SetPlantSeed(1)  end },
	   { text = "Green Cabbage Seed",      func = function() Alpha_Farm_Seed = 2;  SetPlantSeed(2)  end },
	   { text = "Jade Squash Seed",        func = function() Alpha_Farm_Seed = 3;  SetPlantSeed(3)  end },
	   { text = "Juicycrunch Carrot Seed", func = function() Alpha_Farm_Seed = 4;  SetPlantSeed(4)  end },
	   { text = "Magebulb Seed",           func = function() Alpha_Farm_Seed = 5;  SetPlantSeed(5)  end },
	   { text = "Mogu Pumpkin Seed",       func = function() Alpha_Farm_Seed = 6;  SetPlantSeed(6)  end },
	   { text = "Pink Turnip Seed",        func = function() Alpha_Farm_Seed = 7;  SetPlantSeed(7)  end },
	   { text = "Raptorleaf Seed",         func = function() Alpha_Farm_Seed = 8;  SetPlantSeed(8)  end },
	   { text = "Red Blossom Leek Seed",   func = function() Alpha_Farm_Seed = 9;  SetPlantSeed(9)  end },
	   { text = "Scallion Seed",           func = function() Alpha_Farm_Seed = 10; SetPlantSeed(10) end },
	   { text = "Snakeroot Seed",          func = function() Alpha_Farm_Seed = 11; SetPlantSeed(11) end },
	   { text = "Songbell Seed",           func = function() Alpha_Farm_Seed = 12; SetPlantSeed(12) end },
	   { text = "Striped Melon Seed",      func = function() Alpha_Farm_Seed = 13; SetPlantSeed(13) end },
	   { text = "White Turnip Seed",       func = function() Alpha_Farm_Seed = 14; SetPlantSeed(14) end },
	   { text = "Windshear Cactus Seed",   func = function() Alpha_Farm_Seed = 15; SetPlantSeed(15) end },
	   { text = "Witchberry Seed",         func = function() Alpha_Farm_Seed = 16; SetPlantSeed(16) end },
	}
	
	local MillingSettingsList = {
	   [1]    =    {    text = Alpha_Colors.white.."Enable Milling",        Enable = true    },
	   [2]    =    {    text = Alpha_Colors.white.."Mill MoP Herbs",        Enable = true    },
	   [3]    =    {    text = Alpha_Colors.white.."Mill Cata Herbs",       Enable = true    },
	   [4]    =    {    text = Alpha_Colors.white.."Mill WotLK Herbs",      Enable = true    },
	   [5]    =    {    text = Alpha_Colors.white.."Mill BC Herbs",         Enable = true    },
	   [6]    =    {    text = Alpha_Colors.white.."Mill Vanilla Herbs",    Enable = true    },
	   [7]    =    {    text = Alpha_Colors.white.."Pause Milling",         Enable = true    },
	}
	
	local ProspectingSettingsList = {
	   [1]    =    {    text = Alpha_Colors.white.."Enable Prospecting",        Enable = true    },
	   [2]    =    {    text = Alpha_Colors.white.."Prospect MoP Herbs",        Enable = true    },
	   [3]    =    {    text = Alpha_Colors.white.."Prospect Cata Herbs",       Enable = true    },
	   [4]    =    {    text = Alpha_Colors.white.."Prospect WotLK Herbs",      Enable = true    },
	   [5]    =    {    text = Alpha_Colors.white.."Prospect BC Herbs",         Enable = true    },
	   [6]    =    {    text = Alpha_Colors.white.."Prospect Vanilla Herbs",    Enable = true    },
	   [7]    =    {    text = Alpha_Colors.white.."Pause Prospecting",         Enable = true    },
	}
	
	local DisenchantingSettingsList = {
	   [1]    =    {    text = Alpha_Colors.white.."Enable Disenchanting",        Enable = true    },
	   [2]    =    {    text = Alpha_Colors.white.."J.C. Neck & Ring (|cff0080ffBlues|cffffffff)",        Enable = true    },
	   [3]    =    {    text = Alpha_Colors.white.."J.C. Neck & Ring (|cff1eff00Greens|cffffffff)",       Enable = true    },
	   [4]    =    {    text = Alpha_Colors.white.."Tailor Wrists",                  Enable = true    },
	   [5]    =    {    text = Alpha_Colors.white.."Custom Disenchant",           Enable = false   },
	   [6]    =    {    text = Alpha_Colors.white.."Test Custom Disenchant",      Enable = true    },
	   [7]    =    {    text = Alpha_Colors.white.."Pause Disenchanting",         Enable = true    },
	}
	
	local HotKeyTable = {
	   [1]    =    { text = Alpha_Colors.white.."Left Shift",      value = 1    },
	   [2]    =    { text = Alpha_Colors.white.."Left Control",    value = 2    },
	   [3]    =    { text = Alpha_Colors.white.."Left Alt",        value = 4    },
	   [4]    =    { text = Alpha_Colors.white.."Right Shift",     value = 8    },
	   [5]    =    { text = Alpha_Colors.white.."Right Control",   value = 16   },
	   [6]    =    { text = Alpha_Colors.white.."Right Alt",       value = 32   },
	}
	
	------------------------------------------------------------------
	--                   Settings Button Creation                   --
	------------------------------------------------------------------
	Frame = CreateFrame("Button", 'Frame', UIParent, "UIGoldBorderButtonTemplate")
	Frame:SetSize(300,30)
	Frame:SetPoint("TOP", 0, 6)
	Frame.text = Frame:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	Frame.text:SetText("|cff00aaffAlpha Utilitie Settings")
	Frame.text:SetPoint("CENTER")
	Frame:RegisterForClicks("LeftButtonDown")
	Frame:SetScript('OnClick',
	   function() 
	      if Frame.Settings:IsVisible() then
	         Frame.Settings:Hide()
	      else
	         Frame.Settings:Show()
	      end 
	end )
	Frame:Show()
	
	------------------------------------------------------------------
	--                     Main Frame Creation                      --
	------------------------------------------------------------------
	Frame.Settings = CreateFrame("Frame", 'Frame.Settings', Frame)
	Frame.Settings:SetSize(305,400)
	Frame.Settings:SetPoint("TOP", Frame, 0, -25)
	Frame.Settings:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	Frame.Settings:SetBackdropColor(0,0,0,.93)
	Frame.Settings:EnableMouse(true)
	Frame.Settings:Hide()
	
	Frame.Settings.BackButton =  CreateFrame("Button", 'Frame.Settings.BackButton', Frame.Settings,"UIGoldBorderButtonTemplate")
	Frame.Settings.BackButton:SetSize(75,20)
	Frame.Settings.BackButton:SetPoint("BOTTOMRIGHT", -7, 6)
	Frame.Settings.BackButton:RegisterForClicks("LeftButtonDown")
	Frame.Settings.BackButton:SetScript('OnClick', 
	   function(self) 
	      Frame.Settings.BackButton:Hide()
	      Frame.ButtonFrame:Show()
	      for i=1, #ButtonValue do
	         _G["SettingFrame"..i]:Hide()
	      end
	      for i=1, #IconsTable do
	         _G[IconsTable[i].FrameName.."Icon"]:UnlockHighlight() 
	      end
	end)
	Frame.Settings.BackButton.text = Frame.Settings.BackButton:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	Frame.Settings.BackButton.text:SetText("|cffB7B7B7Back")
	Frame.Settings.BackButton.text:SetPoint("CENTER")
	Frame.Settings.BackButton:Hide()
	
	Frame.ButtonFrame = CreateFrame("Frame", "Frame.ButtonFrame", Frame.Settings)
	Frame.ButtonFrame:SetSize(300,400)
	Frame.ButtonFrame:SetPoint("TOP", Frame, 0, -25)
	Frame.ButtonFrame:Show()
	
	HotKeyFrame = CreateFrame("Frame", "HotKeyFrame", Frame.Settings)
	
	local ButtonOffSet =  25
	for i=1, #ButtonValue do
	   local OptionsName = "SettingFrame"..tonumber(i)
	   Frame.Options = CreateFrame("Frame", OptionsName, Frame.Settings)
	   Frame.Options:SetSize(300,370)
	   Frame.Options:SetPoint("TOP", Frame, 0, -25)
	   Frame.Options:SetID(i)
	   Frame.Options:SetBackdrop({
	         bgFile = "Interface/Tooltips/UI-Tooltip-Background", 
	         edgeFile = "Interface/Tooltips/UI-Tooltip-Border", 
	         tile = true, tileSize = 16, edgeSize = 16, 
	         insets = { left = 4, right = 4, top = 4, bottom = 4 }
	   });
	   Frame.Options:SetBackdropColor(0,0,0,0)
	   Frame.Options:SetBackdropBorderColor(0,0,0,0)  
	   Frame.Options:Hide()
	   
	   local ButtonName = "SettingButtonFrame.Button"..tonumber(i)
	   ButtonOffSet = ButtonOffSet - 45
	   Frame.ButtonFrame.Button = CreateFrame("Button", ButtonName, Frame.ButtonFrame)
	   Frame.ButtonFrame.Button:SetSize(275,40)
	   Frame.ButtonFrame.Button:SetID(i)
	   Frame.ButtonFrame.Button:SetHighlightTexture("Interface/\WorldStateFrame/WORLDSTATEFINALSCORE-HIGHLIGHT", 'ADD')
	   Frame.ButtonFrame.Button:SetPoint("TOP", 0, ButtonOffSet)
	   Frame.ButtonFrame.Button.text = Frame.ButtonFrame.Button:CreateFontString(nil, "BACKGROUND", "PVPInfoTextFont")
	   Frame.ButtonFrame.Button.text:SetText(ButtonValue[i].Text)
	   Frame.ButtonFrame.Button.text:SetPoint("CENTER")
	   Frame.ButtonFrame.Button:Show()
	   Frame.ButtonFrame.Button:RegisterForClicks("LeftButtonDown")
	   Frame.ButtonFrame.Button:SetScript('OnClick',
	      function(self)
	         Frame.ButtonFrame:Hide()
	         Frame.Settings.BackButton:Show()
	         Frame.Settings.BackButton:Hide()
	         Frame.Settings.BackButton:Show()
	         _G["SettingFrame"..self:GetID()]:Show()
	         for i=1, #IconsTable do
	            _G[IconsTable[i].FrameName.."Icon"]:UnlockHighlight() 
	         end
	         if ButtonValue[i].Icon then
	        	 _G[ButtonValue[i].Icon.."Icon"]:LockHighlight()
	        end 
	   end )
	end 
	
	local IconFrameOffSet = 100
	for i=1, #IconsTable do 
	   IconFrameOffSet = IconFrameOffSet - 100
	   IconFrame = CreateFrame("Frame", IconsTable[i].FrameName, Frame.Settings)
	   IconFrame:SetFrameLevel(15)
	   IconFrame:SetSize(100,100)
	   IconFrame:SetPoint("TOPLEFT", Frame.Settings, "TOPLEFT", -80, IconFrameOffSet )
	   IconFrame:SetBackdrop({
	         bgFile = "Interface/DialogFrame/UI-DialogBox-Gold-Dragon",
	   });
	   local iconName = IconsTable[i].FrameName.."Icon"
	   IconFrame_icon = CreateFrame("Button", iconName, _G[IconsTable[i].FrameName])
	   IconFrame_icon:SetFrameLevel(1)
	   IconFrame_icon:SetSize(65,65)
	   IconFrame_icon:SetPoint("CENTER", _G[IconsTable[i].FrameName], "CENTER", 6, 2)
	   --IconFrame_icon:SetHighlightTexture("Interface/CHATFRAME/UI-ChatIcon-BlinkHilight")
	   --IconFrame_icon:SetHighlightTexture("Interface/BUTTONS/ButtonHilight-SquareQuickslot")
	   IconFrame_icon:SetHighlightTexture("Interface/BUTTONS/CheckButtonHilight") 
	   IconFrame_icon:SetBackdrop({
	         bgFile = IconsTable[i].IconTexture,
	         edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	         edgeSize = 20, sets = { left = 2, right = 2, top = 2, bottom = 2 }
	   })
	   IconFrame_icon:RegisterForClicks("LeftButtonDown")
	   IconFrame_icon:SetScript('OnClick', 
	      function(self) 
	         for i=1, #IconsTable do
	            _G[IconsTable[i].FrameName.."Icon"]:UnlockHighlight() 
	         end
	         if _G[IconsTable[i].Frame]:IsVisible() then
	            for i=1, #ButtonValue do
	               _G["SettingFrame"..i]:Hide()
	            end
	            Frame.Settings.BackButton:Hide()
	            Frame.ButtonFrame:Show()
	            self:UnlockHighlight() 
	         else
	            for i=1, #ButtonValue do
	               _G["SettingFrame"..i]:Hide()
	            end
	            self:LockHighlight() 
	            Frame.ButtonFrame:Hide()
	            Frame.Settings.BackButton:Show()
	            Frame.Settings.BackButton:Hide()
	            Frame.Settings.BackButton:Show()
	            _G[IconsTable[i].Frame]:Show()
	         end
	   end)
	end
	
	------------------------------------------------------------------
	--                      Change Log Frame                        --
	------------------------------------------------------------------
	InfoFrame = CreateFrame("Frame", "InfoFrame", SettingFrame7)
	InfoFrame.width     = 260
	InfoFrame.height    = 370
	
	InfoFrame:SetSize(InfoFrame.width, InfoFrame.height)    
	InfoFrame:SetPoint("TOP", SettingFrame7, -10, -20)
	InfoFrame:SetBackdrop({
	      tile         = true,
	      tileSize     = 32,
	      edgeSize     = 32,
	      insets         = { left = 8, right = 8, top = 8, bottom = 8 }
	}) 
	
	InfoFrame.text = InfoFrame:CreateFontString(nil, "BACKGROUND", "PVPInfoTextFont")
	InfoFrame.text:SetText("|cffb048f8Change log|cffffffff")
	InfoFrame.text:SetPoint("TOP", 0, 0)
	
	--InfoFrame:SetBackdropColor(0, 0, 0, 1)
	InfoFrame:EnableMouse(true)
	InfoFrame:EnableMouseWheel(true)
	InfoFrame:Show()
	
	if type(ScrollValue) ~= "nil" then
	   -- ScrollingMessageFrame
	   local InfoMessage = CreateFrame("ScrollingMessageFrame", InfoMessage, InfoFrame)
	   InfoMessage:SetPoint("CENTER", 0, 0 )
	   InfoMessage:SetSize(InfoFrame.width, InfoFrame.height - 60)
	   InfoMessage:SetFontObject(GameFontWhite)
	   InfoMessage:SetJustifyH("LEFT")
	   InfoMessage:SetHyperlinksEnabled(true)
	   InfoMessage:SetIndentedWordWrap(true)
	   InfoMessage:SetFading(false)
	   InfoMessage:SetInsertMode("TOP")
	   InfoMessage:SetMaxLines(#(ScrollValue))
	   
	   InfoMessage:Clear()
	   for i=1, #ScrollValue do
	      InfoMessage:AddMessage(ScrollValue[i].Text)
	   end
	   -------------------------------------------------------------------------------
	   -- Scroll bar
	   -------------------------------------------------------------------------------
	   local ScrollBar = CreateFrame("Slider", "ScrollBar", InfoFrame, "UIPanelScrollBarTemplate")
	   
	   ScrollBar:ClearAllPoints()    
	   ScrollBar:SetPoint("RIGHT", SettingFrame7, "RIGHT", 0, -25)    
	   ScrollBar:SetSize(30, InfoFrame.height - 75)    
	   ScrollBar:SetMinMaxValues(0, #(ScrollValue) - 1)
	   ScrollBar:SetValueStep(1)
	   ScrollBar:SetScript("OnValueChanged", function(self, value)        
	         InfoMessage:SetScrollOffset(value)
	   end)
	   
	   ScrollBar:SetValue(0)
	   
	   InfoFrame:SetScript("OnMouseWheel", function(self, delta)
	         
	         local cur_val = ScrollBar:GetValue()
	         local min_val, max_val = ScrollBar:GetMinMaxValues()
	         
	         if delta < 0 and cur_val < max_val then
	            cur_val = math.min(max_val, cur_val + 1)
	            ScrollBar:SetValue(cur_val)            
	         elseif delta > 0 and cur_val > min_val then
	            cur_val = math.max(min_val, cur_val - 1)
	            ScrollBar:SetValue(cur_val)        
	         end    
	   end)
	end
	
	------------------------------------------------------------------
	--                        Farming Frame                         --
	------------------------------------------------------------------    
	FarmFrame = CreateFrame("Frame", "FarmFrame", SettingFrame2)
	FarmFrame:ClearAllPoints()
	FarmFrame:SetSize(300,400)
	FarmFrame:SetPoint("TOPLEFT", SettingFrame2, 0, -20)
	FarmFrame.text = FarmFrame:CreateFontString(nil, "BACKGROUND", "PVPInfoTextFont")
	FarmFrame.text:SetAllPoints()
	FarmFrame.text:SetJustifyV("TOP")
	FarmFrame.text:SetJustifyH("CENTER")
	FarmFrame.text:SetText("|cffb048f8Farming Settings|cffffffff")
	
	local SettingNamePoint = -40
	for i=1, #FarmingSettingsList do
	   local frameName = 'FarmSetting'..tonumber(i)
	   SettingNamePoint = SettingNamePoint - 25
	   if i == 3 or i == 7 or i == 8 then
	      SettingNamePoint = SettingNamePoint - 25
	   end
	   FarmSetting = CreateFrame("Frame", frameName, SettingFrame2)
	   FarmSetting:ClearAllPoints()
	   FarmSetting:SetHeight(20)
	   FarmSetting:SetWidth(200)
	   FarmSetting:SetPoint("TOP", -30,SettingNamePoint)
	   FarmSetting:SetID(i)
	   FarmSetting.text = FarmSetting:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   FarmSetting.text:SetAllPoints()
	   FarmSetting.text:SetJustifyV("LEFT")
	   FarmSetting.text:SetJustifyH("CENTER")
	   FarmSetting.text:SetText(FarmingSettingsList[i].text)        
	   
	   local ButtonName = "FarmButon"..tonumber(i)
	   FarmSetting.button = CreateFrame('Checkbutton', ButtonName, SettingFrame2, "UICheckButtonTemplate")
	   FarmSetting.button:ClearAllPoints()
	   FarmSetting.button:SetPoint("TOP", 90, SettingNamePoint)
	   FarmSetting.button:SetHeight(20)
	   FarmSetting.button:SetWidth(20)
	   FarmSetting.button:SetID(i)
	   FarmSetting.button:RegisterForClicks('LeftButtonDown')
	   FarmSetting.button:SetChecked(FarmingSettingsList[i].Enable)
	   FarmSetting.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         else
	            self:SetChecked(true)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         end
	   end)
	   FarmSetting.button:Show()
	end
	function SetPlantSeed(num)
	   FarmSetting.button2.text:SetText(Alpha_Colors.white.."Planting Seed: "..PlantSeedMenu[num+1].text)
	   Alpha_Farm_Seed = num + 1
	   print(Alpha_Colors.lightBlue..Alpha_Farm_Seed)
	end
	FarmSetting.Menu = CreateFrame("Frame", "FarmSetting.Menu", SettingFrame2, "UIDropDownMenuTemplate")
	DropDownList1MenuBackdrop:SetBackdropColor(0,0,0,1)
	DropDownList1MenuBackdrop:SetBackdropBorderColor(0,0,0,20)
	FarmSetting.button2 = CreateFrame("Button", 'FarmSetting.button2', SettingFrame2, "UIGoldBorderButtonTemplate")
	FarmSetting.button2:SetSize(260,20) --160
	FarmSetting.button2:SetPoint("TOP", FarmFrame, 0, -95 )
	FarmSetting.button2:RegisterForClicks('LeftButtonDown')
	FarmSetting.button2.text = FarmSetting.button2:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	if Alpha_Farm_Seed ~= nil then SetPlantSeed(Alpha_Farm_Seed) else FarmSetting.button2.text:SetText(Alpha_Colors.white.."Select a Seed to Plant!") end
	FarmSetting.button2.text:SetPoint("CENTER")    
	FarmSetting.button2:SetScript("OnClick",
	   function()
	      if DropDownList1:IsVisible() then
	         DropDownList1MenuBackdrop:Hide()
	         DropDownList1:Hide()
	      else
	         EasyMenu(PlantSeedMenu, FarmSetting.Menu,FarmSetting.button2, 0 , 0, "MENU")
	      end
	      HotKeyFrame.FarmB3:Hide()
	      HotKeyFrame.FarmB4:Hide()
	      HotKeyFrame.FarmB5:Hide()
	end)
	FarmSetting.button2:Show()
	
	FarmSetting.button3 = CreateFrame("Button", 'FarmSetting.button3', SettingFrame2, "UIGoldBorderButtonTemplate")
	FarmSetting.button3:SetSize(130,20)
	FarmSetting.button3:SetPoint("TOP", FarmSetting6, 0, -25 )
	FarmSetting.button3:RegisterForClicks('LeftButtonDown')
	FarmSetting.button3.text = FarmSetting.button3:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	FarmSetting.button3.text:SetText(Alpha_Colors.white.."^ Set HotKeys ^")
	FarmSetting.button3.text:SetPoint("CENTER")
	FarmSetting.button3:Show()
	FarmSetting.button3:SetScript("OnClick", 
	   function() 
	      if HotKeyFrame.FarmB3:IsVisible() then
	         HotKeyFrame.FarmB3:Hide()
	      else 
	         HotKeyFrame.FarmB3:Show() 
	      end
	      HotKeyFrame.FarmB4:Hide()
	      HotKeyFrame.FarmB5:Hide()
	end)
	
	HotKeyFrame.FarmB3 = CreateFrame("Frame", 'HotKeyFrame.FarmB3', FarmSetting.button3)
	HotKeyFrame.FarmB3:SetFrameLevel(15)
	HotKeyFrame.FarmB3:SetSize(135,165)
	HotKeyFrame.FarmB3:SetPoint("TOP", FarmSetting.button3, "CENTER", 0, -7)
	HotKeyFrame.FarmB3:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	HotKeyFrame.FarmB3:SetBackdropColor(0,0,0,1)
	HotKeyFrame.FarmB3:Hide()
	
	local HotKey_FarmB3F_SetPoint = 15
	local HotKey_FarmB3B_SetPoint = 0
	for i=1, #HotKeyTable do
	   local frameName = 'HotKeyFarmB3'..tonumber(i)
	   HotKey_FarmB3F_SetPoint = HotKey_FarmB3F_SetPoint - 25
	   HotKey_FarmB3B_SetPoint = HotKey_FarmB3B_SetPoint - 25
	   HotKeyFrame.FarmB3.HotKey = CreateFrame("Button", frameName, HotKeyFrame.FarmB3)
	   HotKeyFrame.FarmB3.HotKey:ClearAllPoints()
	   HotKeyFrame.FarmB3.HotKey:SetHeight(20)
	   HotKeyFrame.FarmB3.HotKey:SetWidth(110)
	   HotKeyFrame.FarmB3.HotKey:SetPoint("TOP", -10, HotKey_FarmB3F_SetPoint)
	   HotKeyFrame.FarmB3.HotKey:SetID(i)
	   HotKeyFrame.FarmB3.HotKey:SetHighlightTexture("Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight")
	   HotKeyFrame.FarmB3.HotKey.text = HotKeyFrame.FarmB3.HotKey:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   HotKeyFrame.FarmB3.HotKey.text:SetAllPoints()
	   HotKeyFrame.FarmB3.HotKey.text:SetJustifyV("MIDDLE")
	   HotKeyFrame.FarmB3.HotKey.text:SetJustifyH("CENTER")
	   HotKeyFrame.FarmB3.HotKey.text:SetText(HotKeyTable[i].text)
	   HotKeyFrame.FarmB3.HotKey:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.FarmB3.HotKey:SetScript("PostClick",
	      function(self)
	         local frame = _G["FarmB3_HotKey_button"..self:GetID()]
	         if frame:GetChecked() then
	            frame:SetChecked(false)
	         else
	            frame:SetChecked(true)
	         end
	   end)
	   
	   local ButtonName = "FarmB3_HotKey_button"..tonumber(i)
	   HotKeyFrame.FarmB3.HotKey.button = CreateFrame('Checkbutton', ButtonName, HotKeyFrame.FarmB3, "UICheckButtonTemplate")
	   HotKeyFrame.FarmB3.HotKey.button:ClearAllPoints()
	   HotKeyFrame.FarmB3.HotKey.button:SetPoint("TOPRIGHT", -10, HotKey_FarmB3B_SetPoint + 15)
	   HotKeyFrame.FarmB3.HotKey.button:SetHeight(20)
	   HotKeyFrame.FarmB3.HotKey.button:SetWidth(20)
	   HotKeyFrame.FarmB3.HotKey.button:SetID(i)
	   HotKeyFrame.FarmB3.HotKey.button:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.FarmB3.HotKey.button:SetChecked(HotKeyTable[i].Enable)
	   HotKeyFrame.FarmB3.HotKey.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	         else
	            self:SetChecked(true)
	         end
	   end)
	   HotKeyFrame.FarmB3.HotKey.button:Show()
	end
	
	FarmSetting.button4 = CreateFrame("Button", 'FarmSetting.button4', SettingFrame2, "UIGoldBorderButtonTemplate")
	FarmSetting.button4:SetSize(130,20)
	FarmSetting.button4:SetPoint("TOP", FarmSetting7, 0, -25 )
	FarmSetting.button4:RegisterForClicks('LeftButtonDown')
	FarmSetting.button4.text = FarmSetting.button4:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	FarmSetting.button4.text:SetText(Alpha_Colors.white.."^ Set HotKeys ^")
	FarmSetting.button4.text:SetPoint("CENTER")  
	FarmSetting.button4:Show()
	FarmSetting.button4:SetScript("OnClick", 
	   function() 
	      if HotKeyFrame.FarmB4:IsVisible() then
	         HotKeyFrame.FarmB4:Hide()
	      else 
	         HotKeyFrame.FarmB4:Show() 
	      end
	      HotKeyFrame.FarmB3:Hide()
	      HotKeyFrame.FarmB5:Hide()
	end)
	
	HotKeyFrame.FarmB4 = CreateFrame("Frame", 'HotKeyFrame.FarmB4', FarmSetting.button4)
	HotKeyFrame.FarmB4:SetFrameLevel(15)
	HotKeyFrame.FarmB4:SetSize(135,165)
	HotKeyFrame.FarmB4:SetPoint("TOP", FarmSetting.button4, "CENTER", 0, -7)
	HotKeyFrame.FarmB4:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border",
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	HotKeyFrame.FarmB4:SetBackdropColor(0,0,0,1)
	HotKeyFrame.FarmB4:Hide()
	
	local HotKey_FarmB4F_SetPoint = 15
	local HotKey_FarmB4B_SetPoint = 0
	for i=1, #HotKeyTable do
	   local frameName = 'HotKeyFarmB4'..tonumber(i)
	   HotKey_FarmB4F_SetPoint = HotKey_FarmB4F_SetPoint - 25
	   HotKey_FarmB4B_SetPoint = HotKey_FarmB4B_SetPoint - 25
	   HotKeyFrame.FarmB4.HotKey = CreateFrame("Button", frameName, HotKeyFrame.FarmB4)
	   HotKeyFrame.FarmB4.HotKey:ClearAllPoints()
	   HotKeyFrame.FarmB4.HotKey:SetHeight(20)
	   HotKeyFrame.FarmB4.HotKey:SetWidth(110)
	   HotKeyFrame.FarmB4.HotKey:SetPoint("TOP", -10, HotKey_FarmB4F_SetPoint)
	   HotKeyFrame.FarmB4.HotKey:SetID(i)
	   HotKeyFrame.FarmB4.HotKey:SetHighlightTexture("Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight")
	   HotKeyFrame.FarmB4.HotKey.text = HotKeyFrame.FarmB4.HotKey:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   HotKeyFrame.FarmB4.HotKey.text:SetAllPoints()
	   HotKeyFrame.FarmB4.HotKey.text:SetJustifyV("MIDDLE")
	   HotKeyFrame.FarmB4.HotKey.text:SetJustifyH("CENTER")
	   HotKeyFrame.FarmB4.HotKey.text:SetText(HotKeyTable[i].text)
	   HotKeyFrame.FarmB4.HotKey:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.FarmB4.HotKey:SetScript("PostClick",
	      function(self)
	         local frame = _G["FarmB4_HotKey_button"..self:GetID()]
	         if frame:GetChecked() then
	            frame:SetChecked(false)
	         else
	            frame:SetChecked(true)
	         end
	   end)
	   
	   local ButtonName = "FarmB4_HotKey_button"..tonumber(i)
	   HotKeyFrame.FarmB4.HotKey.button = CreateFrame('Checkbutton', ButtonName, HotKeyFrame.FarmB4, "UICheckButtonTemplate")
	   HotKeyFrame.FarmB4.HotKey.button:ClearAllPoints()
	   HotKeyFrame.FarmB4.HotKey.button:SetPoint("TOPRIGHT", -10, HotKey_FarmB4B_SetPoint + 15)
	   HotKeyFrame.FarmB4.HotKey.button:SetHeight(20)
	   HotKeyFrame.FarmB4.HotKey.button:SetWidth(20)
	   HotKeyFrame.FarmB4.HotKey.button:SetID(i)
	   HotKeyFrame.FarmB4.HotKey.button:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.FarmB4.HotKey.button:SetChecked(HotKeyTable[i].Enable)
	   HotKeyFrame.FarmB4.HotKey.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	         else
	            self:SetChecked(true)
	         end
	   end)
	   HotKeyFrame.FarmB4.HotKey.button:Show()
	end
	
	FarmSetting.button5 = CreateFrame("Button", 'FarmSetting.button5', SettingFrame2, "UIGoldBorderButtonTemplate")
	FarmSetting.button5:SetSize(130,20)
	FarmSetting.button5:SetPoint("TOP", FarmSetting8, 0, -25 )
	FarmSetting.button5:RegisterForClicks('LeftButtonDown')
	FarmSetting.button5.text = FarmSetting.button5:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	FarmSetting.button5.text:SetText(Alpha_Colors.white.."^ Set HotKeys ^")
	FarmSetting.button5.text:SetPoint("CENTER")
	FarmSetting.button5:Show()
	FarmSetting.button5:SetScript("OnClick", 
	   function() 
	      if HotKeyFrame.FarmB5:IsVisible() then
	         HotKeyFrame.FarmB5:Hide()
	      else 
	         HotKeyFrame.FarmB5:Show() 
	      end
	      HotKeyFrame.FarmB4:Hide()
	      HotKeyFrame.FarmB3:Hide()
	end)
	
	HotKeyFrame.FarmB5 = CreateFrame("Frame", 'HotKeyFrame.FarmB5', FarmSetting.button5)
	HotKeyFrame.FarmB5:SetFrameLevel(15)
	HotKeyFrame.FarmB5:SetSize(135,165)
	HotKeyFrame.FarmB5:SetPoint("TOP", FarmSetting.button5, "CENTER", 0, -7)
	HotKeyFrame.FarmB5:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	HotKeyFrame.FarmB5:SetBackdropColor(0,0,0,1)
	HotKeyFrame.FarmB5:Hide()
	
	local HotKey_FarmB5F_SetPoint = 15
	local HotKey_FarmB5B_SetPoint = 0
	for i=1, #HotKeyTable do
	   local frameName = 'HotKeyFarmB5'..tonumber(i)
	   HotKey_FarmB5F_SetPoint = HotKey_FarmB5F_SetPoint - 25
	   HotKey_FarmB5B_SetPoint = HotKey_FarmB5B_SetPoint - 25
	   HotKeyFrame.FarmB5.HotKey = CreateFrame("Button", frameName, HotKeyFrame.FarmB5)
	   HotKeyFrame.FarmB5.HotKey:ClearAllPoints()
	   HotKeyFrame.FarmB5.HotKey:SetHeight(20)
	   HotKeyFrame.FarmB5.HotKey:SetWidth(110)
	   HotKeyFrame.FarmB5.HotKey:SetPoint("TOP", -10, HotKey_FarmB5F_SetPoint)
	   HotKeyFrame.FarmB5.HotKey:SetID(i)
	   HotKeyFrame.FarmB5.HotKey:SetHighlightTexture("Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight")
	   HotKeyFrame.FarmB5.HotKey.text = HotKeyFrame.FarmB5.HotKey:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   HotKeyFrame.FarmB5.HotKey.text:SetAllPoints()
	   HotKeyFrame.FarmB5.HotKey.text:SetJustifyV("MIDDLE")
	   HotKeyFrame.FarmB5.HotKey.text:SetJustifyH("CENTER")
	   HotKeyFrame.FarmB5.HotKey.text:SetText(HotKeyTable[i].text)
	   HotKeyFrame.FarmB5.HotKey:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.FarmB5.HotKey:SetScript("PostClick",
	      function(self)
	         local frame = _G["FarmB5_HotKey_button"..self:GetID()]
	         if frame:GetChecked() then
	            frame:SetChecked(false)
	         else
	            frame:SetChecked(true)
	         end
	   end)
	   
	   local ButtonName = "FarmB5_HotKey_button"..tonumber(i)
	   HotKeyFrame.FarmB5.HotKey.button = CreateFrame('Checkbutton', ButtonName, HotKeyFrame.FarmB5, "UICheckButtonTemplate")
	   HotKeyFrame.FarmB5.HotKey.button:ClearAllPoints()
	   HotKeyFrame.FarmB5.HotKey.button:SetPoint("TOPRIGHT", -10, HotKey_FarmB5B_SetPoint + 15)
	   HotKeyFrame.FarmB5.HotKey.button:SetHeight(20)
	   HotKeyFrame.FarmB5.HotKey.button:SetWidth(20)
	   HotKeyFrame.FarmB5.HotKey.button:SetID(i)
	   HotKeyFrame.FarmB5.HotKey.button:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.FarmB5.HotKey.button:SetChecked(HotKeyTable[i].Enable)
	   HotKeyFrame.FarmB5.HotKey.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	         else
	            self:SetChecked(true)
	         end
	   end)
	   HotKeyFrame.FarmB5.HotKey.button:Show()
	end
	
	------------------------------------------------------------------
	--                        Milling Frame                         --
	------------------------------------------------------------------  
	
	MilFrame = CreateFrame("Frame", "MilFrame", SettingFrame3)
	MilFrame:ClearAllPoints()
	MilFrame:SetSize(300,400)
	MilFrame:SetPoint("TOPLEFT", SettingFrame2, 0, -20)
	MilFrame.text = MilFrame:CreateFontString(nil, "BACKGROUND", "PVPInfoTextFont")
	MilFrame.text:SetAllPoints()
	MilFrame.text:SetJustifyV("TOP")
	MilFrame.text:SetJustifyH("CENTER")
	MilFrame.text:SetText("|cffb048f8Milling Settings|cffffffff")
	
	local SettingNamePoint = -40
	for i=1, #MillingSettingsList do
	   local frameName = 'MilSetting'..tonumber(i)
	   SettingNamePoint = SettingNamePoint - 30
	   --if i == 3 or i == 7 or i == 8 then
	   --   SettingNamePoint = SettingNamePoint - 20
	   --end
	   MilSetting = CreateFrame("Frame", frameName, SettingFrame3)
	   MilSetting:ClearAllPoints()
	   MilSetting:SetHeight(20)
	   MilSetting:SetWidth(200)
	   MilSetting:SetPoint("TOP", -30, SettingNamePoint)
	   MilSetting:SetID(i)
	   MilSetting.text = MilSetting:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   MilSetting.text:SetAllPoints()
	   MilSetting.text:SetJustifyV("LEFT")
	   MilSetting.text:SetJustifyH("CENTER")
	   MilSetting.text:SetText(MillingSettingsList[i].text)        
	   
	   local ButtonName = "MilButon"..tonumber(i)
	   MilSetting.button = CreateFrame('Checkbutton', ButtonName, SettingFrame3, "UICheckButtonTemplate")
	   MilSetting.button:ClearAllPoints()
	   MilSetting.button:SetPoint("TOP", 90, SettingNamePoint)
	   MilSetting.button:SetHeight(20)
	   MilSetting.button:SetWidth(20)
	   MilSetting.button:SetID(i)
	   MilSetting.button:RegisterForClicks('LeftButtonDown')
	   MilSetting.button:SetChecked(MillingSettingsList[i].Enable)
	   MilSetting.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         else
	            self:SetChecked(true)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         end
	   end)
	   MilSetting.button:Show()
	end
	
	MilSetting.button1 = CreateFrame("Button", 'MilSetting.button1', SettingFrame3, "UIGoldBorderButtonTemplate")
	MilSetting.button1:SetSize(130,20)
	MilSetting.button1:SetPoint("TOP", MilSetting7, 0, -25 )
	MilSetting.button1:RegisterForClicks('LeftButtonDown')
	MilSetting.button1.text = MilSetting.button1:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	MilSetting.button1.text:SetText(Alpha_Colors.white.."^ Set HotKeys ^")
	MilSetting.button1.text:SetPoint("CENTER")
	MilSetting.button1:Show()
	MilSetting.button1:SetScript("OnClick", 
	   function() 
	      if HotKeyFrame.MilB1:IsVisible() then
	         HotKeyFrame.MilB1:Hide()
	      else 
	         HotKeyFrame.MilB1:Show() 
	      end
	end)
	
	HotKeyFrame.MilB1 = CreateFrame("Frame", 'HotKeyFrame.MilB1', MilSetting.button1)
	HotKeyFrame.MilB1:SetFrameLevel(15)
	HotKeyFrame.MilB1:SetSize(135,165)
	HotKeyFrame.MilB1:SetPoint("TOP", MilSetting.button1, "CENTER", 0, -7)
	HotKeyFrame.MilB1:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	HotKeyFrame.MilB1:SetBackdropColor(0,0,0,1)
	HotKeyFrame.MilB1:Hide()
	
	local HotKey_MilB1F_SetPoint = 15
	local HotKey_MilB1B_SetPoint = 0
	for i=1, #HotKeyTable do
	   local frameName = 'HotKeyMilB1'..tonumber(i)
	   HotKey_MilB1F_SetPoint = HotKey_MilB1F_SetPoint - 25
	   HotKey_MilB1B_SetPoint = HotKey_MilB1B_SetPoint - 25
	   HotKeyFrame.MilB1.HotKey = CreateFrame("Button", frameName, HotKeyFrame.MilB1)
	   HotKeyFrame.MilB1.HotKey:ClearAllPoints()
	   HotKeyFrame.MilB1.HotKey:SetHeight(20)
	   HotKeyFrame.MilB1.HotKey:SetWidth(110)
	   HotKeyFrame.MilB1.HotKey:SetPoint("TOP", -10, HotKey_MilB1F_SetPoint)
	   HotKeyFrame.MilB1.HotKey:SetID(i)
	   HotKeyFrame.MilB1.HotKey:SetHighlightTexture("Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight")
	   HotKeyFrame.MilB1.HotKey.text = HotKeyFrame.MilB1.HotKey:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   HotKeyFrame.MilB1.HotKey.text:SetAllPoints()
	   HotKeyFrame.MilB1.HotKey.text:SetJustifyV("MIDDLE")
	   HotKeyFrame.MilB1.HotKey.text:SetJustifyH("CENTER")
	   HotKeyFrame.MilB1.HotKey.text:SetText(HotKeyTable[i].text)
	   HotKeyFrame.MilB1.HotKey:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.MilB1.HotKey:SetScript("PostClick",
	      function(self)
	         local frame = _G["MilB1_HotKey_button"..self:GetID()]
	         if frame:GetChecked() then
	            frame:SetChecked(false)
	         else
	            frame:SetChecked(true)
	         end
	   end)
	   
	   local ButtonName = "MilB1_HotKey_button"..tonumber(i)
	   HotKeyFrame.MilB1.HotKey.button = CreateFrame('Checkbutton', ButtonName, HotKeyFrame.MilB1, "UICheckButtonTemplate")
	   HotKeyFrame.MilB1.HotKey.button:ClearAllPoints()
	   HotKeyFrame.MilB1.HotKey.button:SetPoint("TOPRIGHT", -10, HotKey_MilB1B_SetPoint + 15)
	   HotKeyFrame.MilB1.HotKey.button:SetHeight(20)
	   HotKeyFrame.MilB1.HotKey.button:SetWidth(20)
	   HotKeyFrame.MilB1.HotKey.button:SetID(i)
	   HotKeyFrame.MilB1.HotKey.button:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.MilB1.HotKey.button:SetChecked(HotKeyTable[i].Enable)
	   HotKeyFrame.MilB1.HotKey.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	         else
	            self:SetChecked(true)
	         end
	   end)
	   HotKeyFrame.MilB1.HotKey.button:Show()
	end
	
	------------------------------------------------------------------
	--                      Prospecting Frame                       --
	------------------------------------------------------------------  
	
	ProspectFrame = CreateFrame("Frame", "ProspectFrame", SettingFrame4)
	ProspectFrame:ClearAllPoints()
	ProspectFrame:SetSize(300,400)
	ProspectFrame:SetPoint("TOPLEFT", SettingFrame4, 0, -20)
	ProspectFrame.text = ProspectFrame:CreateFontString(nil, "BACKGROUND", "PVPInfoTextFont")
	ProspectFrame.text:SetAllPoints()
	ProspectFrame.text:SetJustifyV("TOP")
	ProspectFrame.text:SetJustifyH("CENTER")
	ProspectFrame.text:SetText("|cffb048f8Prospecting Settings|cffffffff")
	
	local SettingNamePoint = -40
	for i=1, #ProspectingSettingsList do
	   local frameName = 'ProspectSetting'..tonumber(i)
	   SettingNamePoint = SettingNamePoint - 30
	   --if i == 3 or i == 7 or i == 8 then
	   --   SettingNamePoint = SettingNamePoint - 20
	   --end
	   ProspectSetting = CreateFrame("Frame", frameName, SettingFrame4)
	   ProspectSetting:ClearAllPoints()
	   ProspectSetting:SetHeight(20)
	   ProspectSetting:SetWidth(200)
	   ProspectSetting:SetPoint("TOP", -30, SettingNamePoint)
	   ProspectSetting:SetID(i)
	   ProspectSetting.text = ProspectSetting:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   ProspectSetting.text:SetAllPoints()
	   ProspectSetting.text:SetJustifyV("LEFT")
	   ProspectSetting.text:SetJustifyH("CENTER")
	   ProspectSetting.text:SetText(ProspectingSettingsList[i].text)        
	   
	   local ButtonName = "ProspectButon"..tonumber(i)
	   ProspectSetting.button = CreateFrame('Checkbutton', ButtonName, SettingFrame4, "UICheckButtonTemplate")
	   ProspectSetting.button:ClearAllPoints()
	   ProspectSetting.button:SetPoint("TOP", 90, SettingNamePoint)
	   ProspectSetting.button:SetHeight(20)
	   ProspectSetting.button:SetWidth(20)
	   ProspectSetting.button:SetID(i)
	   ProspectSetting.button:RegisterForClicks('LeftButtonDown')
	   ProspectSetting.button:SetChecked(ProspectingSettingsList[i].Enable)
	   ProspectSetting.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         else
	            self:SetChecked(true)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         end
	   end)
	   ProspectSetting.button:Show()
	end
	
	ProspectSetting.button1 = CreateFrame("Button", 'ProspectSetting.button1', SettingFrame4, "UIGoldBorderButtonTemplate")
	ProspectSetting.button1:SetSize(130,20)
	ProspectSetting.button1:SetPoint("TOP", ProspectSetting7, 0, -25 )
	ProspectSetting.button1:RegisterForClicks('LeftButtonDown')
	ProspectSetting.button1.text = ProspectSetting.button1:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	ProspectSetting.button1.text:SetText(Alpha_Colors.white.."^ Set HotKeys ^")
	ProspectSetting.button1.text:SetPoint("CENTER")
	ProspectSetting.button1:Show()
	ProspectSetting.button1:SetScript("OnClick", 
	   function() 
	      if HotKeyFrame.ProsB1:IsVisible() then
	         HotKeyFrame.ProsB1:Hide()
	      else 
	         HotKeyFrame.ProsB1:Show() 
	      end
	end)
	
	HotKeyFrame.ProsB1 = CreateFrame("Frame", 'HotKeyFrame.ProsB1', ProspectSetting.button1)
	HotKeyFrame.ProsB1:SetFrameLevel(15)
	HotKeyFrame.ProsB1:SetSize(135,165)
	HotKeyFrame.ProsB1:SetPoint("TOP", ProspectSetting.button1, "CENTER", 0, -7)
	HotKeyFrame.ProsB1:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	HotKeyFrame.ProsB1:SetBackdropColor(0,0,0,1)
	HotKeyFrame.ProsB1:Hide()
	
	local HotKey_ProsB1F_SetPoint = 15
	local HotKey_ProsB1B_SetPoint = 0
	for i=1, #HotKeyTable do
	   local frameName = 'HotKeyProsB1'..tonumber(i)
	   HotKey_ProsB1F_SetPoint = HotKey_ProsB1F_SetPoint - 25
	   HotKey_ProsB1B_SetPoint = HotKey_ProsB1B_SetPoint - 25
	   HotKeyFrame.ProsB1.HotKey = CreateFrame("Button", frameName, HotKeyFrame.ProsB1)
	   HotKeyFrame.ProsB1.HotKey:ClearAllPoints()
	   HotKeyFrame.ProsB1.HotKey:SetHeight(20)
	   HotKeyFrame.ProsB1.HotKey:SetWidth(110)
	   HotKeyFrame.ProsB1.HotKey:SetPoint("TOP", -10, HotKey_ProsB1F_SetPoint)
	   HotKeyFrame.ProsB1.HotKey:SetID(i)
	   HotKeyFrame.ProsB1.HotKey:SetHighlightTexture("Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight")
	   HotKeyFrame.ProsB1.HotKey.text = HotKeyFrame.ProsB1.HotKey:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   HotKeyFrame.ProsB1.HotKey.text:SetAllPoints()
	   HotKeyFrame.ProsB1.HotKey.text:SetJustifyV("MIDDLE")
	   HotKeyFrame.ProsB1.HotKey.text:SetJustifyH("CENTER")
	   HotKeyFrame.ProsB1.HotKey.text:SetText(HotKeyTable[i].text)
	   HotKeyFrame.ProsB1.HotKey:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.ProsB1.HotKey:SetScript("PostClick",
	      function(self)
	         local frame = _G["ProsB1_HotKey_button"..self:GetID()]
	         if frame:GetChecked() then
	            frame:SetChecked(false)
	         else
	            frame:SetChecked(true)
	         end
	   end)
	   
	   local ButtonName = "ProsB1_HotKey_button"..tonumber(i)
	   HotKeyFrame.ProsB1.HotKey.button = CreateFrame('Checkbutton', ButtonName, HotKeyFrame.ProsB1, "UICheckButtonTemplate")
	   HotKeyFrame.ProsB1.HotKey.button:ClearAllPoints()
	   HotKeyFrame.ProsB1.HotKey.button:SetPoint("TOPRIGHT", -10, HotKey_ProsB1B_SetPoint + 15)
	   HotKeyFrame.ProsB1.HotKey.button:SetHeight(20)
	   HotKeyFrame.ProsB1.HotKey.button:SetWidth(20)
	   HotKeyFrame.ProsB1.HotKey.button:SetID(i)
	   HotKeyFrame.ProsB1.HotKey.button:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.ProsB1.HotKey.button:SetChecked(HotKeyTable[i].Enable)
	   HotKeyFrame.ProsB1.HotKey.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	         else
	            self:SetChecked(true)
	         end
	   end)
	   HotKeyFrame.ProsB1.HotKey.button:Show()
	end
	
	------------------------------------------------------------------
	--                      Disenchanting Frame                       --
	------------------------------------------------------------------  
	
	DisenchantFrame = CreateFrame("Frame", "DisenchantFrame", SettingFrame5)
	DisenchantFrame:ClearAllPoints()
	DisenchantFrame:SetSize(300,400)
	DisenchantFrame:SetPoint("TOPLEFT", SettingFrame5, 0, -20)
	DisenchantFrame.text = DisenchantFrame:CreateFontString(nil, "BACKGROUND", "PVPInfoTextFont")
	DisenchantFrame.text:SetAllPoints()
	DisenchantFrame.text:SetJustifyV("TOP")
	DisenchantFrame.text:SetJustifyH("CENTER")
	DisenchantFrame.text:SetText("|cffb048f8Disenchanting Settings|cffffffff")
	
	local SettingNamePoint = -40
	for i=1, #DisenchantingSettingsList do
	   local frameName = 'DisenchantSetting'..tonumber(i)
	   SettingNamePoint = SettingNamePoint - 30
	   if i == 6 then
	      SettingNamePoint = SettingNamePoint - 60
	   end
	   DisenchantSetting = CreateFrame("Frame", frameName, SettingFrame5)
	   DisenchantSetting:ClearAllPoints()
	   DisenchantSetting:SetHeight(20)
	   DisenchantSetting:SetWidth(200)
	   DisenchantSetting:SetPoint("TOP", -30, SettingNamePoint)
	   DisenchantSetting:SetID(i)
	   DisenchantSetting.text = DisenchantSetting:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   DisenchantSetting.text:SetAllPoints()
	   DisenchantSetting.text:SetJustifyV("LEFT")
	   DisenchantSetting.text:SetJustifyH("CENTER")
	   DisenchantSetting.text:SetText(DisenchantingSettingsList[i].text)        
	   
	   local ButtonName = "DisenchantButon"..tonumber(i)
	   DisenchantSetting.button = CreateFrame('Checkbutton', ButtonName, SettingFrame5, "UICheckButtonTemplate")
	   DisenchantSetting.button:ClearAllPoints()
	   DisenchantSetting.button:SetPoint("TOP", 90, SettingNamePoint)
	   DisenchantSetting.button:SetHeight(20)
	   DisenchantSetting.button:SetWidth(20)
	   DisenchantSetting.button:SetID(i)
	   DisenchantSetting.button:RegisterForClicks('LeftButtonDown')
	   DisenchantSetting.button:SetChecked(DisenchantingSettingsList[i].Enable)
	   DisenchantSetting.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         else
	            self:SetChecked(true)
	            print(tostring(self)..": "..tostring(self:GetChecked()))
	         end
	   end)
	   DisenchantSetting.button:Show()
	end
	
	DisenchantSetting.button1 = CreateFrame("Button", 'DisenchantSetting.button1', SettingFrame5, "UIGoldBorderButtonTemplate")
	DisenchantSetting.button1:SetSize(130,20)
	DisenchantSetting.button1:SetPoint("TOP", DisenchantSetting7, 0, -25 )
	DisenchantSetting.button1:RegisterForClicks('LeftButtonDown')
	DisenchantSetting.button1.text = DisenchantSetting.button1:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	DisenchantSetting.button1.text:SetText(Alpha_Colors.white.."^ Set HotKeys ^")
	DisenchantSetting.button1.text:SetPoint("CENTER")
	DisenchantSetting.button1:Show()
	DisenchantSetting.button1:SetScript("OnClick", 
	   function() 
	      if HotKeyFrame.DisB1:IsVisible() then
	         HotKeyFrame.DisB1:Hide()
	      else 
	         HotKeyFrame.DisB1:Show() 
	      end
	end)
	
	HotKeyFrame.DisB1 = CreateFrame("Frame", 'HotKeyFrame.DisB1', DisenchantSetting.button1)
	HotKeyFrame.DisB1:SetFrameLevel(15)
	HotKeyFrame.DisB1:SetSize(135,165)
	HotKeyFrame.DisB1:SetPoint("TOP", DisenchantSetting.button1, "CENTER", 0, -7)
	HotKeyFrame.DisB1:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	HotKeyFrame.DisB1:SetBackdropColor(0,0,0,1)
	HotKeyFrame.DisB1:Hide()
	
	local HotKey_DisB1F_SetPoint = 15
	local HotKey_DisB1B_SetPoint = 0
	for i=1, #HotKeyTable do
	   local frameName = 'HotKeyDisB1'..tonumber(i)
	   HotKey_DisB1F_SetPoint = HotKey_DisB1F_SetPoint - 25
	   HotKey_DisB1B_SetPoint = HotKey_DisB1B_SetPoint - 25
	   HotKeyFrame.DisB1.HotKey = CreateFrame("Button", frameName, HotKeyFrame.DisB1)
	   HotKeyFrame.DisB1.HotKey:ClearAllPoints()
	   HotKeyFrame.DisB1.HotKey:SetHeight(20)
	   HotKeyFrame.DisB1.HotKey:SetWidth(110)
	   HotKeyFrame.DisB1.HotKey:SetPoint("TOP", -10, HotKey_DisB1F_SetPoint)
	   HotKeyFrame.DisB1.HotKey:SetID(i)
	   HotKeyFrame.DisB1.HotKey:SetHighlightTexture("Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight")
	   HotKeyFrame.DisB1.HotKey.text = HotKeyFrame.DisB1.HotKey:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
	   HotKeyFrame.DisB1.HotKey.text:SetAllPoints()
	   HotKeyFrame.DisB1.HotKey.text:SetJustifyV("MIDDLE")
	   HotKeyFrame.DisB1.HotKey.text:SetJustifyH("CENTER")
	   HotKeyFrame.DisB1.HotKey.text:SetText(HotKeyTable[i].text)
	   HotKeyFrame.DisB1.HotKey:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.DisB1.HotKey:SetScript("PostClick",
	      function(self)
	         local frame = _G["DisB1_HotKey_button"..self:GetID()]
	         if frame:GetChecked() then
	            frame:SetChecked(false)
	         else
	            frame:SetChecked(true)
	         end
	   end)
	   
	   local ButtonName = "DisB1_HotKey_button"..tonumber(i)
	   HotKeyFrame.DisB1.HotKey.button = CreateFrame('Checkbutton', ButtonName, HotKeyFrame.DisB1, "UICheckButtonTemplate")
	   HotKeyFrame.DisB1.HotKey.button:ClearAllPoints()
	   HotKeyFrame.DisB1.HotKey.button:SetPoint("TOPRIGHT", -10, HotKey_DisB1B_SetPoint + 15)
	   HotKeyFrame.DisB1.HotKey.button:SetHeight(20)
	   HotKeyFrame.DisB1.HotKey.button:SetWidth(20)
	   HotKeyFrame.DisB1.HotKey.button:SetID(i)
	   HotKeyFrame.DisB1.HotKey.button:RegisterForClicks('LeftButtonDown')
	   HotKeyFrame.DisB1.HotKey.button:SetChecked(HotKeyTable[i].Enable)
	   HotKeyFrame.DisB1.HotKey.button:SetScript("PostClick",
	      function(self)
	         if not self:GetChecked() then
	            self:SetChecked(false)
	         else
	            self:SetChecked(true)
	         end
	   end)
	   HotKeyFrame.DisB1.HotKey.button:Show()
	end
	
	DisCustomDE_Backdrop = CreateFrame("Frame", "DisCustomDE_Backdrop", SettingFrame5)
	DisCustomDE_Backdrop:SetHeight(60)
	DisCustomDE_Backdrop:SetWidth(260)
	DisCustomDE_Backdrop:SetPoint("TOP", 0, -215)
	DisCustomDE_Backdrop:SetBackdrop({
	      bgFile = "Interface/RAIDFRAME/UI-RaidFrame-GroupBg", 
	      edgeFile = "Interface/DialogFrame/UI-DialogBox-Gold-Border", 
	      tile = true, tileSize = 300, edgeSize = 16, 
	      insets = { left = 4, right = 4, top = 4, bottom = 4 }
	});
	DisCustomDE_Backdrop:SetBackdropColor(0,0,0,1)
	
	DisCustomDE_Scroll = CreateFrame("ScrollFrame", "DisCustomDE_Scroll", SettingFrame5)
	DisCustomDE_Scroll:SetPoint("TOP", 0, -225)
	DisCustomDE_Scroll:SetHeight(40)
	DisCustomDE_Scroll:SetWidth(250)
	DisCustomDE_Scroll:SetScript("OnMouseWheel", 
	   function(self, delta)
	      local cur_val = DisCustomDE_Scroll:GetVerticalScroll()
	      local min_val, max_val = 0, DisCustomDE_Scroll:GetVerticalScrollRange()
	      if delta < 0 and cur_val < max_val then
	         cur_val = math.min(max_val, cur_val + 12)
	         DisCustomDE_Scroll:SetVerticalScroll(cur_val)            
	      elseif delta > 0 and cur_val > min_val then
	         cur_val = math.max(min_val, cur_val - 12)
	         DisCustomDE_Scroll:SetVerticalScroll(cur_val)        
	      end
	end)
	--DisCustomDE_Scroll:RegisterForClicks('LeftButtonDown')
	DisCustomDE_Scroll:SetScript("OnMouseDown", 
	   function()
	      DisCustomDE:SetFocus()
	end)
	DisCustomDE = CreateFrame("EditBox", "DisCustomDE", DisCustomDE_Scroll)
	DisCustomDE:SetHeight(40)
	DisCustomDE:SetWidth(250)
	DisCustomDE:SetPoint("CENTER", DisCustomDE_Scroll, 0, 150)
	DisCustomDE:SetMaxLetters(255)
	DisCustomDE:SetFont("Fonts\\ARIALN.TTF", 12)
	DisCustomDE:SetTextInsets(10, 10, 0, 0)
	DisCustomDE:SetTextColor(.85,.85,.85,1)
	DisCustomDE:SetMaxLetters(255)
	DisCustomDE:SetMultiLine(true)
	DisCustomDE:SetAutoFocus(false)
	DisCustomDE:SetScript("OnEscapePressed", 
	   function(self)
	      self:ClearFocus()
	end)
	DisCustomDE_Scroll:SetScrollChild(DisCustomDE) 
end