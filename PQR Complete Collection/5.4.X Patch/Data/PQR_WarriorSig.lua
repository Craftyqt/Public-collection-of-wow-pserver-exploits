if not PQR_LoadedDataFile then
	PQR_LoadedDataFile = 1
	print("|cffFFBE69SigWarPvP Data File FULL PIKK, 2013|cffffffff")
      print("|cffFFBE69  Stopp pikken Ã¦i vil av|cffffffff")

end


if not cTar
then
	cTar = {"target","focus","mouseover","arena1","arena2","arena3","arena4","arena5","arenapet1","arenapet2","arenapet3","arenapet4","arenapet5","pettarget"}
end
PQR_Spec = GetSpecialization()
class = select(2, UnitClass("player"))
if PQR_Spec == 1 
and class == "WARRIOR" then
-- PQInterface Settings
	local config = {
		name	= "War",
		author	= "Sig", 
		abilities = {
			{ 	name	= "OMGDISARMREFLECT",
				tooltip	= "Enable/Disable AutoIntervene scatter.",
				enable	= false,
			}, 
			{ 	name	= "Auto Berserker",
				tooltip	= "Enable/Disable Auto Berserker.",
				enable	= false,
			}, 
			{ 	name	= "Auto Slow Melee",
				tooltip	= "Enable/Disable Auto Slow Melee.",
				enable	= false,
			}, 
			{ 	name	= "Focus Fear",
				tooltip	= "Enable/Disable Auto Fear focus.",
				enable	= false,
			},   
			{ 	name	= "Auto Spellreflect",
				tooltip	= "Enable/Disable Auto Spellreflect.",
				enable	= false,
			},  
			{ 	name	= "Reflect Trap",
				tooltip	= "Enable/Disable Auto Spellreflect.",
				enable	= false,
			},  
			{ 	name	= "Auto Shatter",
				tooltip	= "Enable/Disable AutoShatter",
				enable	= false,
			},
			{ 	name	= "Auto Disarm",
				tooltip	= "Enable/Disable AutoDisarm.",
				enable	= false,
			},
			{ 	name	= "Auto Focus",
				tooltip	= "Enable/Disable Focus Healer.",
				enable	= false,
			},
			{ 	name	= "Auto Wall", newSection = true,
				enable	= true,
				widget	= { type = "numBox", 
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Shield Wall.",
				},
			},
			{ 	name	= "Auto Stance", newSection = true,
				enable	= true,
				widget	= { type = "numBox", 
					value	= 30,
					step	= 5,
					tooltip	= "HP to Change Stance.",
				},
			},
			{ 	name	= "Auto DieBTS", newSection = true,
				enable	= true,
				widget	= { type = "numBox", 
					value	= 30,
					step	= 5,
					tooltip	= "HP to Change Stance.",
				},
			},
			{ 	name	= "Auto Rally",
				enable	= true,
				widget	= { type = "numBox",
					value	= 30,
					step	= 5,
					tooltip	= "HP to cast Auto Rally",
				},
			}, 
		},
		hotkeys = { 
			{	name	= "Burst Key",
				enable	= false,
				hotkeys	= {'lc'},
			},
			{	name	= "Fear Key",
				enable	= true,
				hotkeys	= {'ls'},
			},
			{	name	= "Banner Key",
				enable	= true,
				hotkeys	= {'la'},
			},
		},
	}
		Sig_War = PQI:AddRotation(config)
end

if not tLOS then tLOS={} end
if not fLOS then fLOS=CreateFrame("Frame") end

	function LineOfSight(target)
		local updateRate=2
		fLOS:RegisterEvent("COMBAT_LOG_EVENT_UNFILTERED")
		function fLOSOnEvent(self,event,...)
			if event=="COMBAT_LOG_EVENT_UNFILTERED" then
				local cLOG={...}
				if cLOG[2]=="SPELL_CAST_FAILED" then
					local player=UnitGUID("player") or ""
					if cLOG[4]==player then 
						if cLOG[15]==SPELL_FAILED_LINE_OF_SIGHT then
							tinsert(tLOS,{unit=target,time=GetTime()})
						end
					end
				else
					table.sort(tLOS,function(x,y) return x.time>y.time end)
					for i=1,#tLOS do
						local time=tLOS[i].time or GetTime()
						if GetTime()>time+updateRate then
							tremove(tLOS,i)
						end
					end
				end
			end
		end
		fLOS:SetScript("OnEvent",fLOSOnEvent)
		for i=1,#tLOS do
			if tLOS[i].unit==target then
				return true
			end
		end
	end

function _castSpell(spellid,tar)
	if IsPlayerSpell(spellid) == true
	--and GCDCheck(spellid)
	then
		if tar ~= nil
		and rangeCheck(spellid,tar) == nil
			then
			return false
		elseif tar ~= nil
		and rangeCheck(spellid,tar) == true
			then
			CastSpellByName(GetSpellInfo(spellid),tar)
			return true
		elseif tar == nil
			then
			CastSpellByName(GetSpellInfo(spellid))
			return true
		else
	return false
	end
end
end


function GCDCheck(SpellID)
if (GetSpellCooldown(GetSpellInfo(SpellID))+select(2,GetSpellCooldown(GetSpellInfo(SpellID)))-GetTime()< 0.1)
then 
return true
else
return false
end
end

Nova_CastingInfo = nil
function Nova_CastingInfo(PQ_Unit)
	local PQ_Casting = nil
	local percentRemaining = nil
	local secondsRemaining = nil

	if UnitCastingInfo(PQ_Unit) then
		local spellName,_,_,_,startTimer,endTimer = UnitCastingInfo(PQ_Unit)
		local durationTimer = ((endTimer) - (startTimer))
		local timeRemaining = (endTimer - GetTime() * 1000)
		percentRemaining = (100 - ((timeRemaining/durationTimer) * 100))
		secondsRemaining = endTimer/1000 - GetTime()
		PQ_Casting = spellName
		
		-- Name of spell, % remaining on spell, seconds remaining on spell
		return PQ_Casting, percentRemaining, secondsRemaining
	else return false end
end

--Combat and Melee Check--

function inMelee()
	if UnitAffectingCombat("player") ~= nil
	and IsSpellInRange(GetSpellInfo(35395),"target") == 1 or IsSpellInRange(GetSpellInfo(78),"target") == 1
	and UnitExists("target") ~= nil
	and UnitCanAttack("player","target") ~= nil
	then return true
	end
end

--Combat Check--
function inCombat()
if UnitAffectingCombat("player") ~= nil
	then
		return true
	end
end

--Get HP simple--
function getHp(unit)
if UnitExists(unit) ~= nil
	then
		return 100 * UnitHealth(unit) / UnitHealthMax(unit)
	end
end

--Range Check Simple--
function rangeCheck(spellid,unit)
if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
then
	return true
end
end


--Amount of Cooldown that remains--
function cdRemains(spellid)
	if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime()) > 0
		then return select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime())
	else return 0
	end
end

--Function Check Slow Immunes--
local immuneToSlowID 	= {
					-- DEATH KNIGHT
					-- DRUID
					-- HUNTER (Master's Call / Bestial Wrath)
						54216,
						19574,
					-- MAGE (Ice Block)
						45438,
					-- MONK
					-- PALADIN (Hand of Freedom / Hand of Protection / Divine Shield)
						1044,
						1022,
						642,
					-- PRIEST (Dispersion)
						47585,
					-- ROGUE
					-- SHAMAN (Windwalk Totem)
						114896,
					-- WARLOCK
					-- WARRIOR (Bladestorm)
						46924
				}
function immuneToSlow(unit)
for i=1,#immuneToSlowID do
	if UnitBuffID(unit,immuneToSlowID[i]) ~= nil
		then
			return true
		end
	end
end

function interrupt()
maxMSinterrupt = math.random(50,90) -- start interrupt @ random number between (10-90)%
minMSinterrupt = 90  -- dont interrupt above 95 %
channelInterruptmin = math.random(15,40) --start interrupt @ random number between (10-36)%
channelInterruptmax = math.random(50,80) -- dont interrupt above random number between (50,80) %
end


--Function Check Immunities--
local immuneID			= {
						110700, --Divine Shield
						1022, 	--Hand of Protection
						45438, 	--Ice Block
						31224,	--Cloak of Shadows
						19263, 	--Deterrence
						97417	--BrittleBarrier
}
function isImmune(unit)
	for i=1,#immuneID do
		if UnitBuffID(unit,immuneID[i]) ~= nil
			then
				return true
			end
		end
end

--Function Check if unit is CC'ed--
local ccIDs 			= { 
	108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	33786,		-- Cyclone
	99,			-- Disorienting Roar
	2637,		-- Hibernate
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	110698,		-- Hammer of Justice 
	113004,		-- Intimidating Roar 
	113056,		-- Intimidating Roar 
	117526,		-- Binding Shot
	3355,		-- Freezing Trap
	1513,		-- Scare Beast
	19503,		-- Scatter Shot
	19386,		-- Wyvern Sting
	90337,		-- Bad Manner 
	24394,		-- Intimidation
	50519,		-- Sonic Blast 
	56626,		-- Sting 
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	31661,		-- Dragon's Breath
	118,		-- Polymorph
	61305,		-- Polymorph: Black Cat
	28272,		-- Polymorph: Pig
	61721,		-- Polymorph: Rabbit
	61780,		-- Polymorph: Turkey
	28271,		-- Polymorph: Turtle
	82691,		-- Ring of Frost
	123393,		-- Breath of Fire 
	126451,		-- Clash
	122242,		-- Clash 
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	115078,		-- Paralysis
	105421,		-- Blinding Light
	115752,		-- Blinding Light 
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	119072,		-- Holy Wrath
	20066,		-- Repentance
	10326,		-- Turn Evil
	113506,		-- Cyclone 
	605,		-- Dominate Mind
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror 
	9484,		-- Shackle Undead
	87204,		-- Sin and Punishment
	2094,		-- Blind
	1833,		-- Cheap Shot
	1776,		-- Gouge
	408,		-- Kidney Shot
	113953,		-- Paralysis 
	6770,		-- Sap
	76780,		-- Bind Elemental
	77505,		-- Earthquake
	51514,		-- Hex
	118905,		-- Static Charge 
	118345,		-- Pulverize
	710,		-- Banish
	54786,		-- Demonic Leap
	5782,		-- Fear 
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	104045,		-- Sleep 
	89766,		-- Axe Toss 
	115268,		-- Mesmerize 
	6358,		-- Seduction 
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout 
	20511,		-- Intimidating Shout 
	132168,		-- Shockwave
	105771,		-- Warbringer
	107079,		-- Quaking Palm
	13327,		-- Reckless Charge
	20549		-- War Stomp
}
function hasCC(unit)
for i=1,#ccIDs do
	if UnitDebuffID(unit,ccIDs[i]) ~= nil
		then
			return true
		end
	end
end

function HaveBuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == "number" then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local buff = select(7,UnitBuff(UnitID,spell,rank,Filter)) 
      if buff and ( buff == 0 or buff - GetTime() > TimeLeft ) then return true end
    end
  end
end

function HaveDebuff(UnitID,SpellID,TimeLeft,Filter) 
  if not TimeLeft then TimeLeft = 0 end
  if type(SpellID) == "number" then SpellID = { SpellID } end 
  for i=1,#SpellID do 
    local spell, rank = GetSpellInfo(SpellID[i])
    if spell then
      local debuff = select(7,UnitDebuff(UnitID,spell,rank,Filter)) 
      if debuff and ( debuff == 0 or debuff - GetTime() > TimeLeft ) then return true end
    end
  end
end
 
 
function CanHeal(t)
  if UnitCanCooperate("player",t)
  and not UnitIsEnemy("player",t) 
  and not UnitIsCharmed(t)
  and not UnitIsDeadOrGhost(t)
  and not PQR_IsOutOfSight(t,1)
  and not UnitDebuffID(t,33786) 
  and not UnitDebuffID(t,122370)
  then
  	return true
  end 
end

function CalculateHP(t)
  incomingheals = UnitGetIncomingHeals(t) or 0
  return 100 * ( UnitHealth(t) ) / UnitHealthMax(t)
end

function IsHealer(t)
local class = select(2, UnitClass(t))
if (class == "DRUID" or class =="PALADIN" or class =="PRIEST" or class =="MONK" or class =="SHAMAN")
and UnitPowerMax(t) >= 290000
and not UnitBuffID(t, 24858)
and not UnitBuffID(t, 15473)
and not UnitBuffID(t, 324)
then
return true
end
end
local InterruptSpells = { 118,28271,28272,61780,61721,33786,5185,8936,50464,19750,82326,2061,605,331,8004,51514,5782,1120,48181,30108,
33786, -- Cyclone		(cast)
28272, -- Pig Poly		(cast)
118, -- Sheep Poly		(cast)
145067,   --Paladong fear
61305, -- Cat Poly		(cast)
61721, -- Rabbit Poly		(cast)
61780, -- Turkey Poly		(cast)
28271, -- Turtle Poly		(cast)
51514, -- Hex			(cast)
339, -- Entangling Roots	(cast)
605, -- Dominate Mind		(cast)
20066, --Repentance		(cast)
116858, --Chaos Bolt		(cast)
113092, --Frost Bomb		(cast)
8092, --Mind Blast		(cast)
48181, --Haunt			(cast)
102051, --Frost Jaw		(cast)
77472, -- Greater Healing Wave	(cast)
8004, -- Healing Surge		(cast)
8936, -- Regrowth		(cast)
2061, -- Flash Heal		(cast)
2060, -- Greater Heal		(cast)
2006, -- Resurrection		(cast)
5185, -- Healing Touch		(cast)
596, -- Prayer of Healing	(cast)
19750, -- Flash of Light	(cast)
635, -- Holy Light		(cast)
7328, -- Redemption		(cast)
2008, -- Ancestral Spirit	(cast)
50769, -- Revive		(cast)
10326, -- Turn Evil		(cast)
82326, -- Divine Light		(cast)
82012, -- Repentance		(cast)
116694, -- Surging Mist		(cast)
124682, -- Enveloping Mist	(cast)
115151, -- Renewing Mist	(cast)
115310, -- Revival		(cast)
982, -- Revive Pet		(cast)
111771, -- Demonic Gateway			(cast)
124465, -- Vampiric Touch			(cast)
113724  -- ring-of-frost
}
function castInt()
return InterruptSpells
end
  
local InterruptChannel = { 
1120, -- Drain Soul		(channeling cast)
12051, -- Evocation		(channeling cast)
115294, -- Mana Tea		(channeling cast)
115175, -- Soothing Mist	(channeling cast)
64843, -- Divine Hymn		(channeling cast)
64901, -- Hymn of Hope		(channeling cast)
47540 -- Penance
 }
function channelInt()
return InterruptChannel
end

local fears = {
5782, --fear
145067, --Palladong fear
20066, --- Repentance
8122, --psychic scream
5484, --Howl of terror
5246, --Intimidating shout
64044, --Psychic horror
111397, --Blood fear
113792, --Pcychic terror
16508 --Intimidating roar
}
function fear()
return fears
end

local disarmDamage = {
51271, -- Pillar of Frost
49016, -- Unholy Frenzy
13750, -- Adrenaline Rush
79140, -- Vendetta
51713, -- Shadow Dance
121471, -- Shadow Blades
31884, --  Avenging Wrath
107574, --  Avatar
12292, -- Bloodbath
1719, -- Recklessness

}
function disarmdmg()
return disarmDamage
end

if SetFunctions == nil then


	-- Nova Notification Frame
	-- Update Debug Frame
	Nova_NotifyFrame = nil
	function Nova_NotifyFrame_OnUpdate()
		if (Nova_NotifyFrameTime < GetTime() - 0.2) then
			local alpha = Nova_NotifyFrame:GetAlpha()
			if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .5) end
			if (aplha == 0) then Nova_NotifyFrame:Hide() end
		end
	end
	-- Debug messages.
	function Nova_Notify(message)
		Nova_NotifyFrame.text:SetText(message)
		Nova_NotifyFrame:SetAlpha(1)
		Nova_NotifyFrame:Show()
		Nova_NotifyFrameTime = GetTime()
	end
	-- Debug Notification Frame
	Nova_NotifyFrame = CreateFrame('Frame')
	Nova_NotifyFrame:ClearAllPoints()
	Nova_NotifyFrame:SetHeight(300)
	Nova_NotifyFrame:SetWidth(300)
	Nova_NotifyFrame:SetScript('OnUpdate', Nova_NotifyFrame_OnUpdate)
	Nova_NotifyFrame:Hide()
	Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, 'BACKGROUND', 'PVPInfoTextFont')
	Nova_NotifyFrame.text:SetAllPoints()
	Nova_NotifyFrame:SetPoint('LEFT', 40, - 75)
	Nova_NotifyFrameTime = 0
	
	function CastClick()
		if IsMouseButtonDown(1) 
	  	  and MainMenuBar:IsShown() then
	  		local mousefocus = GetMouseFocus()
			if mousefocus 
			  and mousefocus.feedback_action then 
		  		SpellCancelQueuedSpell() 
		  		PQR_DelayRotation(1) 
		  	end
		end 	
	end
	
	-- xrn Chat Overlay 
	local function onUpdate(self,elapsed) 
	  if self.time < GetTime() - 2.8 then
	    if self:GetAlpha() == 0 then self:Hide() else self:SetAlpha(self:GetAlpha() - .05) end
	  end
	end
	xrn = CreateFrame("Frame",nil,ChatFrame1) 
	xrn:SetSize(ChatFrame1:GetWidth(),30)
	xrn:Hide()
	xrn:SetScript("OnUpdate",onUpdate)
	xrn:SetPoint("TOP", UIParent, "TOP", 0, -200)
	xrn.text = xrn:CreateFontString(nil,"OVERLAY","MovieSubtitleFont")
	xrn.text:SetAllPoints()
	xrn.texture = xrn:CreateTexture()
	xrn.texture:SetAllPoints()
	xrn.texture:SetTexture(0,0,0,.50) 
	xrn.time = 0
	function xrn:message(message) 
	  self.text:SetText(message)
	  self:SetAlpha(1)
	  self.time = GetTime() 
	  self:Show() 
	end
	
	Nova_CustomT = { }
	
	  SetFunctions = true

end

local PvPCSLOW 			= {
	45524,		-- Chains of Ice
	50435,		-- Chilblains
	115000,		-- Remorseless Winter
	50259,		-- Dazed 
	58180,		-- Infected Wounds
	61391,		-- Typhoon
	127797,		-- Ursol's Vortex
	82941,		-- Ice Trap (Hunter)
	135299,		-- IceTrap Debuff
	35101,		-- Concussive Barrage
	5116,		-- Concussive Shot
	61394,		-- Frozen Wake 
	13810,		-- Ice Trap
	50433,		-- Ankle Crack 
	54644,		-- Frost Breath 
	121288,		-- Chilled 
	120,		-- Cone of Cold
	116,		-- Frostbolt
	44614,		-- Frostfire Bolt
	113092,		-- Frost Bomb
	31589,		-- Slow
	116095,		-- Disable
	118585,		-- Leer of the Ox
	123727,		-- Dizzying Haze
	123586,		-- Flying Serpent Kick
	110300,		-- Burden of Guilt
	63529,		-- Dazed - Avenger's Shield
	20170,		-- Seal of Justice
	15407,		-- Mind Flay
	3409,		-- Crippling Poison
	26679,		-- Deadly Throw
	119696,		-- Debilitation
	3600,		-- Earthbind 
	77478,		-- Earthquake 
	8034,		-- Frostbrand Attack
	8056,		-- Frost Shock
	51490,		-- Thunderstorm
	18223,		-- Curse of Exhaustion
	47960,		-- Shadowflame
	1715,		-- Hamstring
	12323,		-- Piercing Howl
	96294,	--Chains Of Ice
	91807,	--ShamblingRush
	339,		-- Entangling Roots
	19975,		-- Entangling Roots (Nature's Grasp)
	45334,		-- Immobilized (Wild Charge - Bear)
	102359,		-- Mass Entanglement
	110693,		-- Frost Nova (Mage)
	19185,		-- Entrapment
	128405,		-- Narrow Escape
	50245,		-- Pin (Crab)
	54706,		-- Venom Web Spray (Silithid)
	4167,		-- Web (Spider)
	122,		-- Frost Nova
        111340,		-- Ice Ward
	116706,		-- Disable
	113275,		-- Entangling Roots (Symbiosis)
	123407,		-- Spinning Fire Bloss
	113275,		-- Entangling Roots (Symbiosis)
	87194,		-- Glyph of Mind Blast
	114404,		-- Void Tendril's Grasp
	115197,		-- Partial Paralysis
	64695,		-- Earthgrab (Earthgrab Totem)
	63685,		-- Freeze (Frozen Power)
	107566,		-- Staggering Shout
	39965,		-- Frost Grenade
	55536,		-- Frostweave Net
	13099		-- Net-o-Matic

				}
function isCCS(unit)
for i=1,#PvPCSLOW do
	if UnitDebuffID(unit,PvPCSLOW[i]) ~= nil
		then
			return true
		end
	end
end

local immunDMG = {
45438,	-- Ice Block
122464,  -- Monk SHIT
110700,		-- Divine Shield (Paladin)
110696,		-- Ice Block (Mage)
19263,		-- Deterrence
45438,		-- Ice Block
642		-- Divine Shield
}
function iDMG()
return immunDMG
end

--Custom Target Tables--							
arenaTars				= { "arena1",
							"arena2",
							"arena3",
							"arena4",
							"arena5"
							}
custTars 				= {"target",
							"focus",
							"arena1",
							"arena2",
							"arena3",
							"arena4",
							"arena5"
						 }					 
totemTars 				= {"Spirit Link Totem",
						"Healing Tide Totem",
						"Mana Tide Totem",
						"Capacitor Totem",
						"Earthgrab Totem",
						"Earthbind Totem",
						"Stone Bulwark Totem"
						}
						
local immuneSlow = {
					1044,--Hand of Freedom
					47585,--Dispersion
					46924, --Bladestorm
					34692, --Beast Within
					53271, --masters call
					122464,  -- Monk SHIT
					19263,    --ss
					54216,
					1022,
					642,
					114896,
					46924,
}
				
function iSlow()
return immuneSlow
end

function inRange(t,spellID)
if UnitExists(t)
and IsSpellInRange(GetSpellInfo(spellID),t) == 1
 and UnitCanAttack("player",t)
	then
		return true
	end
end

local immunDispel = {
	45438,		-- Ice Block
	110700,		-- Divine Shield (Paladin)
	110696,		-- Ice Block (Mage)
	45438,		-- Ice Block
	122464,  -- Monk SHIT
	1022, 		--Hand of Protection
	642			-- Divine Shield
}
function iDispel()
return immunDispel
end

function IsMelee(Ctarget)
local class = select(2, UnitClass(Ctarget))
if (class == "DRUID" or class =="PALADIN" or class =="WARRIOR" or class =="MONK" or class =="SHAMAN" or class =="DEATHKNIGHT" or class =="ROGUE" )
and UnitPowerMax(Ctarget) < 70000
then
return true
end
end

local immunDebuff = {
33786, -- Cyclone
113506, -- Cyclone
122464  -- Monk SHIT
}
function iDebuff()
return immunDebuff
end
local cccheck1 = {
108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	33786,		-- Cyclone
	99,			-- Disorienting Roar
	2637,		-- Hibernate
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	110698,		-- Hammer of Justice 
	113004,		-- Intimidating Roar 
	113056,		-- Intimidating Roar 
	117526,		-- Binding Shot
	3355,		-- Freezing Trap
	1513,		-- Scare Beast
	19503,		-- Scatter Shot
	19386,		-- Wyvern Sting
	90337,		-- Bad Manner 
	24394,		-- Intimidation
	50519,		-- Sonic Blast 
	56626,		-- Sting 
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	31661,		-- Dragon's Breath
	118,		-- Polymorph
	61305,		-- Polymorph: Black Cat
	28272,		-- Polymorph: Pig
	61721,		-- Polymorph: Rabbit
	61780,		-- Polymorph: Turkey
	28271,		-- Polymorph: Turtle
	82691,		-- Ring of Frost
	123393,		-- Breath of Fire 
	126451,		-- Clash
	122242,		-- Clash 
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	115078,		-- Paralysis
	105421,		-- Blinding Light
	115752,		-- Blinding Light 
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	119072,		-- Holy Wrath
	20066,		-- Repentance
	10326,		-- Turn Evil
	113506,		-- Cyclone 
	605,		-- Dominate Mind
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror 
	9484,		-- Shackle Undead
	87204,		-- Sin and Punishment
	2094,		-- Blind
	1833,		-- Cheap Shot
	1776,		-- Gouge
	408,		-- Kidney Shot
	113953,		-- Paralysis 
	6770,		-- Sap
	76780,		-- Bind Elemental
	77505,		-- Earthquake
	51514,		-- Hex
	118905,		-- Static Charge 
	118345,		-- Pulverize
	710,		-- Banish
	54786,		-- Demonic Leap
	5782,		-- Fear 
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	104045,		-- Sleep 
	89766,		-- Axe Toss 
	115268,		-- Mesmerize 
	6358,		-- Seduction 
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout 
	20511,		-- Intimidating Shout 
	132168,		-- Shockwave
	105771,		-- Warbringer
	107079,		-- Quaking Palm
	13327,		-- Reckless Charge
	20549		-- War Stomp
}

function cccheck()
return cccheck1
end
local dmgCC = {
	108194,		-- Asphyxiate
	115001,		-- Remorseless Winter
	91800,		-- Gnaw
	91797,		-- Monstrous Blow (Dark Transformation)
	102795,		-- Bear Hug
	22570,		-- Maim
	5211,		-- Mighty Bash
	9005,		-- Pounce
	102546,		-- Pounce (Incarnation)
	110698,		-- Hammer of Justice (Paladin)
	113004,		-- Intimidating Roar [Fleeing in fear] (Warrior)
	118271,		-- Combustion Impact
	44572,		-- Deep Freeze
	126451,		-- Clash
	122242,		-- Clash (not sure which one is right)
	119392,		-- Charging Ox Wave
	119381,		-- Leg Sweep
	105593,		-- Fist of Justice
	853,		-- Hammer of Justice
	88625,		-- Holy Word: Chastise
	64044,		-- Psychic Horror
	8122,		-- Psychic Scream
	113792,		-- Psychic Terror (Psyfiend)
	1833,		-- Cheap Shot
	408,		-- Kidney Shot
	113953,		-- Paralysis (Paralytic Poison)
	51514,		-- Hex
	118905,		-- Static Charge (Capacitor Totem)
	54786,		-- Demonic Leap (Metamorphosis)
	5782,		-- Fear
	118699,		-- Fear
	5484,		-- Howl of Terror
	6789,		-- Mortal Coil
	30283,		-- Shadowfury
	89766,		-- Axe Toss (Felguard/Wrathguard)
	7922,		-- Charge Stun
	118895,		-- Dragon Roar
	5246,		-- Intimidating Shout (aoe)
	132168,		-- Shockwave
	105771		-- Warbringer
	}
function dCC()
return dmgCC
end

local roots				= {
						96294,	--Chains Of Ice
						91807,	--ShamblingRush
						339,		-- Entangling Roots
						19975,		-- Entangling Roots (Nature's Grasp)
						45334,		-- Immobilized (Wild Charge - Bear)
						102359,		-- Mass Entanglement
						110693,		-- Frost Nova (Mage)
						19185,		-- Entrapment
						128405,		-- Narrow Escape
						50245,		-- Pin (Crab)
						54706,		-- Venom Web Spray (Silithid)
						4167,		-- Web (Spider)
						122,		-- Frost Nova
						111340,		-- Ice Ward
						116706,		-- Disable
						113275,		-- Entangling Roots (Symbiosis)
						123407,		-- Spinning Fire Bloss
						113275,		-- Entangling Roots (Symbiosis)
						87194,		-- Glyph of Mind Blast
						114404,		-- Void Tendril's Grasp
						115197,		-- Partial Paralysis
						64695,		-- Earthgrab (Earthgrab Totem)
						63685,		-- Freeze (Frozen Power)
						107566,		-- Staggering Shout
						39965,		-- Frost Grenade
						55536,		-- Frostweave Net
						13099		-- Net-o-Matic
}
function hasRoot(unit)
for i=1,#roots do
	if UnitDebuffID(unit,roots[i]) ~= nil
		then
			return true
		end
	end
end