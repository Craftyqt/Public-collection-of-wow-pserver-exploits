<?xml version="1.0" encoding="utf-8" ?><HUNTER><Ability><Name>-- Functions --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FuncLoaded then
	FuncLoaded = true
	print(&amp;quot;fucntions loaded&amp;quot;)
	function CalculateHP(t)
		local ActualWithIncoming = 100 * UnitHealth(t) / UnitHealthMax(t)
		if ActualWithIncoming then
			return ActualWithIncoming
		else
			return 100
		end
	end
		
	function CanHeal(t)
		if not UnitIsCharmed(t) 
		and not UnitIsDeadOrGhost(t) 
		and not UnitDebuffID(t, 33786) then --Clone
			return true 
		end 
	end




	--New Healing Engine
	function SheuronEngine(MO, TARGETHEAL, LOWHP, HEALPET)
		local MouseoverCheck = MO or false
		local LowHPTarget = LOWHP or 80
		local TargetHealCheck = TARGETHEAL or false
		local HEALPET = HEALPET or true
		lowhpmembers = 0
		
		playerHP = CalculateHP(&amp;quot;player&amp;quot;)
			
		members = { { 	
			Unit = &amp;quot;player&amp;quot;, 
			HP = playerHP, 
			GUID = UnitGUID(&amp;quot;player&amp;quot;), 
			IsPlayer = true, 
			} } 
			
		--Adding player to low hp table
		if playerHP &amp;lt; LowHPTarget then
			lowhpmembers = lowhpmembers + 1
		end	
			
			
		local group = &amp;quot;party&amp;quot;
		local groupmembers = GetNumPartyMembers()

		if GetNumRaidMembers() &amp;gt; 0 then
			group = &amp;quot;raid&amp;quot;
			groupmembers = GetNumRaidMembers()
		end
			
			
		for i = 1, groupmembers do 
			local member, memberhp, uidmember = group..i, CalculateHP(group..i), UnitGUID(group..i)	
			-- Checking all Party/Raid Members for Range/Health
			if ((UnitExists(member) and CanHeal(member)) or UnitIsUnit(&amp;quot;player&amp;quot;,member))
			and member ~= nil and memberhp ~= nil and uidmember ~= nil then 	
				table.insert( members,{ Unit = member, HP = memberhp, GUID = uidmember, IsPlayer = true } ) 
					
				-- Setting Low HP Members variable for AoE Healing
				if memberhp &amp;lt; LowHPTarget then
					lowhpmembers = lowhpmembers + 1
				end	
			end 
				
			-- Checking Pets in the group
			if HEALPET and lowhpmembers == 0 and UnitExists(group..i..&amp;quot;pet&amp;quot;) and CanHeal(group..i..&amp;quot;pet&amp;quot;) then
				local memberpet, memberpethp,  uidmemberpet = nil, nil, nil
				memberpet = group..i..&amp;quot;pet&amp;quot; 
				memberpethp = CalculateHP(memberpet)		
				uidmemberpet = UnitGUID(memberpet)
						
				if memberpet ~= nil and memberpethp ~= nil and uidmemberpet ~= nil then
					table.insert(members, { Unit = memberpet, HP = memberpethp, GUID = uidmemberpet, IsPlayer = false } )
				end			
			end
		end 
		-- Checking Priority Targeting
		if TargetHealCheck and CanHeal(&amp;quot;target&amp;quot;) then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;target&amp;quot;,x.Unit) end)
		elseif MouseoverCheck and CanHeal(&amp;quot;mouseover&amp;quot;) and GetMouseFocus() ~= WorldFrame then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;mouseover&amp;quot;,x.Unit) end)
		end
	end


	--CastSpell--
	function _castSpell(spellid,tar)
		if UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
		and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
		--and IsPlayerSpell(spellid) == true
		and cdRemains(spellid) == 0
		then
			if tar ~= nil
			and rangeCheck(spellid,tar) == nil
				then
				return false
			elseif tar ~= nil
			and rangeCheck(spellid,tar) == true
				then
				CastSpellByID(spellid, tar)
				return true
			elseif tar == nil
				then
				CastSpellByID(spellid)
				return true
			else
		return false
		end
	end
	end
	
	
	--Combat Check--
	function inCombat()
	if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
		then
			return true
		end
	end
	
	--Get HP simple--
	function getHp(unit)
	if UnitExists(unit) ~= nil
		then
			return 100 * UnitHealth(unit) / UnitHealthMax(unit)
		end
	end
	
	--Range Check Simple--
	function rangeCheck(spellid,unit)
	if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
	then
		return true
	end
	end
	
	
	--Amount of Cooldown that remains--
	function cdRemains(spellid)
		if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime()) &amp;gt; 0
			then return select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime())
		else return 0
		end
	end


	-- Checks if our Cleanse will have a valid Debuff to Cleanse
	function ValidDispel(t)
		local HasValidDispel = false
		local i = 1
		local debuff = UnitDebuff(t, i)
		while debuff do
			local debuffType = select(5, UnitDebuff(t, i))
			if debuffType == &amp;quot;Curse&amp;quot;
			or debuffType  == &amp;quot;Poison&amp;quot;  
			or debuffType  == &amp;quot;Disease&amp;quot;  then
				HasValidDispel = true
			end
			i = i + 1
			debuff = UnitDebuff(t, i)
		end
		return HasValidDispel
	end


--End for FuncLoad
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Hunters Mark</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Mark = UnitDebuffID(&amp;quot;target&amp;quot;, 53338)

if not Mark then
	_castSpell(53338, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Serpent Sting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>ss = UnitDebuffID(&amp;quot;target&amp;quot;, 49001)

if not ss then
	_castSpell(49001, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Chimera Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>_castSpell(53209,&amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Aimed Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>_castSpell(49050,&amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Steady Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>_castSpell(49052,&amp;quot;target&amp;quot;)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or SpellIsTargeting()
or UnitInVehicle(&amp;quot;player&amp;quot;)
or UnitIsDead(&amp;quot;target&amp;quot;) 
or UnitIsDead(&amp;quot;player&amp;quot;)
or not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or not UnitExists(&amp;quot;target&amp;quot;) then
	if IsPetAttackActive() then
		PetStopAttack()
	end
	StopAttack()
	SpellStopCasting()
	return true
end

--Feign Death
if UnitBuffID(&amp;quot;player&amp;quot;, 5384) then
	StopAttack()
	SpellStopCasting()
	ClearTarget()
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Pet Revive</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitIsDead(&amp;quot;pet&amp;quot;) 
  and not IsMounted() then
	_castSpell(982)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Call Pet</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitExists(&amp;quot;pet&amp;quot;) 
and not IsMounted() 
and not UnitIsDead(&amp;quot;pet&amp;quot;)  then 
	_castSpell(883)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Pet Attack</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitIsUnit(&amp;quot;target&amp;quot;,&amp;quot;pettarget&amp;quot;) then
	PetAttack()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Aspects</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PlayerMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

if PlayerMana &amp;lt; 10 
and not UnitBuffID(&amp;quot;player&amp;quot;, 34074)    then
	_castSpell(34074)
end


if PlayerMana &amp;gt; 90
and not UnitBuffID(&amp;quot;player&amp;quot;, 61847)   then
	_castSpell(61847)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Trueshot Aura</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>Tsa = UnitBuffID(&amp;quot;player&amp;quot;, 19506)

if not Tsa then
	_castSpell(19506)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Kill Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local unithealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)


if  unithealth &amp;lt;= 20 then
	_castSpell(61006, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Silencing Shot</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>_castSpell(34490)</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability></HUNTER>