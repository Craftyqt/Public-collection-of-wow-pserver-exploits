<?xml version="1.0" encoding="utf-8" ?><SHAMAN><Ability><Name>-- Hotkeys --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not leftkeydown then leftkeydown = 0 end

if IsLeftControlKeyDown()  and GetTime() - leftkeydown &amp;gt; 1 then
	leftkeydown = GetTime()
  	if StopRota  then
		StopRota  = false 
		PQR_WriteToChat(&amp;quot;Rotation \124cFF15E615reenabled!&amp;quot;)
  	else 
		StopRota  = true 
		PQR_WriteToChat(&amp;quot;Rotation \124cFFE61515stopped!&amp;quot;)
  	end
end

if modtime == nil then
	modtime = 0
end

if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if AOE then
		AOE = false
		PQR_WriteToChat(&amp;quot;AOE \124cFFE61515Disabled&amp;quot;)
	else
		AOE = true
		PQR_WriteToChat(&amp;quot;AOE \124cFF15E615Enabled&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Offensive Spells --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or ( not UnitAffectingCombat(&amp;quot;target&amp;quot;) and not UnitIsPlayer(&amp;quot;target&amp;quot;) )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if StopRota
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
or IsMounted()
or UnitChannelInfo(&amp;quot;player&amp;quot;) ~= nil
or UnitCastingInfo(&amp;quot;player&amp;quot;) ~= nil
or UnitBuff(&amp;quot;player&amp;quot;, &amp;quot;Drink&amp;quot;)
or UnitBuff(&amp;quot;player&amp;quot;, &amp;quot;Food&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use:Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)
if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
and UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitLevel(&amp;quot;target&amp;quot;) == -1
then 
  UseInventoryItem(13) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use:Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)
if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
and UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitLevel(&amp;quot;target&amp;quot;) == -1
then 
  UseInventoryItem(14) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use:Mouseover Skill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) and IsMouseButtonDown()
	then RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName()) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>E:-- Hotkeys --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not leftkeydown then leftkeydown = 0 end

if IsLeftControlKeyDown()  and GetTime() - leftkeydown &amp;gt; 1 then
	leftkeydown = GetTime()
  	if StopRota  then
		StopRota  = false 
		PQR_WriteToChat(&amp;quot;Rotation \124cFF15E615reenabled!&amp;quot;)
  	else 
		StopRota  = true 
		PQR_WriteToChat(&amp;quot;Rotation \124cFFE61515stopped!&amp;quot;)
  	end
end

if modtime == nil then
	modtime = 0
end

if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if COL then
		COL = false
		PQR_WriteToChat(&amp;quot;Chain Lighting \124cFFE61515Disabled&amp;quot;)
	else
		COL = true
		PQR_WriteToChat(&amp;quot;Chain Lighting \124cFF15E615Enabled&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Lightning Shield</Name><Default>false</Default><SpellID>49281</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,49281) ~= nil then return false else return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Earth Shock</Name><Default>false</Default><SpellID>49231</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and ( UnitDebuffID(&amp;quot;target&amp;quot;, 49233, &amp;quot;player&amp;quot;) or UnitDebuffID(&amp;quot;target&amp;quot;, 49236, &amp;quot;player&amp;quot;) )
and not CooldownRemains(49231)
and IsSpellInRange(GetSpellInfo(49231), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Fire Nova</Name><Default>false</Default><SpellID>61657</SpellID><Actions></Actions><Lua>haveTotem, totemName, startTime, duration = GetTotemInfo(1)

if IsSpellInRange(GetSpellInfo(17364), &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(61657)
and AOE
and select(2, GetTotemInfo(1)) ~= &amp;quot;&amp;quot;
 then
	CastSpellByID(61657)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Flame Shock</Name><Default>false</Default><SpellID>49233</SpellID><Actions></Actions><Lua>local flameshock, _, _, _, _, _, timer = UnitDebuffID(&amp;quot;target&amp;quot;, 49233, &amp;quot;player&amp;quot;)

if ( flameshock == nil or ( flameshock and timer - GetTime() &amp;lt; 3.2 ) )
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(49233)
and IsSpellInRange(GetSpellInfo(49233), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Magma Totem</Name><Default>false</Default><SpellID>58734</SpellID><Actions></Actions><Lua>haveTotem, totemName, startTime, duration = GetTotemInfo(1)

if AOE
and totemName ~= &amp;quot;Magma Totem&amp;quot;
and IsSpellInRange(GetSpellInfo(17364), &amp;quot;target&amp;quot;) == 1
then return true else end</Lua><RecastDelay>8500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>E:Lightning Bolt</Name><Default>false</Default><SpellID>49238</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(49238), &amp;quot;target&amp;quot;) == 1
and PQR_IsCastingSpell(49238) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>E:Elemental Mastery</Name><Default>false</Default><SpellID>16166</SpellID><Actions></Actions><Lua>if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(16166)
and IsSpellInRange(GetSpellInfo(49238), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>E:Chain Lightning</Name><Default>false</Default><SpellID>49271</SpellID><Actions></Actions><Lua>if COL == true
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(49271)
and IsSpellInRange(GetSpellInfo(49271), &amp;quot;target&amp;quot;) == 1
and PQR_IsCastingSpell(49271) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>E:Lava Burst</Name><Default>false</Default><SpellID>60043</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and UnitDebuffID(&amp;quot;target&amp;quot;, 49233, &amp;quot;player&amp;quot;)
and not CooldownRemains(60043)
and IsSpellInRange(GetSpellInfo(60043), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>E:Flametongue Weapon</Name><Default>false</Default><SpellID>58790</SpellID><Actions></Actions><Lua>local _,enchant,_,_,_,_,_,_ = GetWeaponEnchantInfo()

if enchant == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Earth Shield</Name><Default>false</Default><SpellID>49284</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;focus&amp;quot;)
and (not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;))
and UnitInRange(&amp;quot;focus&amp;quot;)
and UnitBuffID(&amp;quot;focus&amp;quot;,49284,&amp;quot;player&amp;quot;) == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Cleanse Spirit</Name><Default>false</Default><SpellID>51886</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 25 then return false end
local i = 1
local baddispel = nil
local goodtodispel = nil

local dontdispel = { 47843, 65812, 68154, 68155, 68156, 70867, 70338, 70405 }
for _,v in ipairs(dontdispel) do if UnitDebuffID(PQR_CustomTarget,v) then baddispel = 1 end end

local i = 1
local buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
while buff do
  if bufftype == &amp;quot;Poison&amp;quot; or bufftype == &amp;quot;Disease&amp;quot; or bufftype == &amp;quot;Curse&amp;quot;
  and duration &amp;gt; 6 
  and count ~= 1 
  and not baddispel 
  and UnitIsFriend(&amp;quot;player&amp;quot;,PQR_CustomTarget) 
  then return true end
  i = i + 1;
  buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Lesser Healing Wave</Name><Default>false</Default><SpellID>49276</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 95 
and PQR_IsCastingSpell(49276) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Chain Heal</Name><Default>false</Default><SpellID>55459</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 90 
and PQR_IsCastingSpell(55459) == false
and lowhpmembers &amp;gt;= 2 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Tidal Force</Name><Default>false</Default><SpellID>55198</SpellID><Actions></Actions><Lua>if lowhpmembers &amp;gt;= 5
or PQR_CustomTargetHP &amp;lt; 30
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Nature&amp;apos;s Swiftness</Name><Default>false</Default><SpellID>16188</SpellID><Actions></Actions><Lua>if lowhpmembers &amp;gt;= 5
or PQR_CustomTargetHP &amp;lt; 30
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Riptide</Name><Default>false</Default><SpellID>61301</SpellID><Actions></Actions><Lua>if UnitBuffID(PQR_CustomTarget, 61301,&amp;quot;player&amp;quot;) == nil 
and (PQR_CustomTargetHP &amp;lt; 95 or UnitThreatSituation(PQR_CustomTarget) == 3) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Earthliving Weapon</Name><Default>false</Default><SpellID>51994</SpellID><Actions></Actions><Lua>local _,enchant,_,_,_,_,_,_ = GetWeaponEnchantInfo()

if enchant == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Water Shield</Name><Default>false</Default><SpellID>57960</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,57960) ~= nil or UnitBuffID(&amp;quot;player&amp;quot;,49284) ~= nil then return false else return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Healing Wave</Name><Default>false</Default><SpellID>49273</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 90
and PQR_IsCastingSpell(49273) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Lightning Bolt</Name><Default>false</Default><SpellID>49238</SpellID><Actions></Actions><Lua>local maelstrom, _, _, maelstromstack = UnitBuffID(&amp;quot;player&amp;quot;, 53817)

if maelstromstack == 5
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(49238), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Lava Lash</Name><Default>false</Default><SpellID>60103</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and valid(&amp;quot;target&amp;quot;, 60103)
and not CooldownRemains(60103)
and IsSpellInRange(GetSpellInfo(60103), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Shamanistic Rage</Name><Default>false</Default><SpellID>30823</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 40
and not CooldownRemains(30823)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Stormstrike</Name><Default>false</Default><SpellID>17364</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(17364)
and IsSpellInRange(GetSpellInfo(17364), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Feral Spirit</Name><Default>false</Default><SpellID>51533</SpellID><Actions>/petattack</Actions><Lua>if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(51533)
and IsSpellInRange(GetSpellInfo(17364), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Windfury + Flametongue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,MH,_,_,OH,_,_,_ = GetWeaponEnchantInfo()

if MH == nil
then
    CastSpellByID(58804)
end

if OH == nil
then
    CastSpellByID(58790)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Earth Shield</Name><Default>false</Default><SpellID>49284</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,49284) ~= nil then return false else return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Windfury + Frostbrand</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,MH,_,_,OH,_,_,_ = GetWeaponEnchantInfo()

if MH == nil or false
then
    CastSpellByID(58804)
end

if OH == nil or false
then
    CastSpellByID(58796)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Call of the Elements</Name><Default>false</Default><SpellID>66842</SpellID><Actions></Actions><Lua>local _, FireTotem = GetTotemInfo(1)
local _, EarthTotem = GetTotemInfo(2)
local _, WaterTotem = GetTotemInfo(3)
local _, AirTotem = GetTotemInfo(4)

if WaterTotem == &amp;quot;&amp;quot;
and FireTotem == &amp;quot;&amp;quot;
and AirTotem == &amp;quot;&amp;quot;
and EarthTotem == &amp;quot;&amp;quot;
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Fire Elemental Totem</Name><Default>false</Default><SpellID>2894</SpellID><Actions></Actions><Lua>haveTotem, totemName, startTime, duration = GetTotemInfo(1)

if totemName ~= &amp;quot;Fire Elemental Totem&amp;quot;
and UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(2894)
then return true else end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Riptide</Name><Default>false</Default><SpellID>61301</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 85
and not CooldownRemains(61301)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Healing Wave</Name><Default>false</Default><SpellID>49273</SpellID><Actions></Actions><Lua>local maelstrom, _, _, maelstromstack = UnitBuffID(&amp;quot;player&amp;quot;, 53817)

if maelstromstack == 5
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 55
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Chain Lightning</Name><Default>false</Default><SpellID>49271</SpellID><Actions></Actions><Lua>local maelstrom, _, _, maelstromstack = UnitBuffID(&amp;quot;player&amp;quot;, 53817)

if maelstromstack == 5
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(49271)
and IsSpellInRange(GetSpellInfo(49271), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- DarhangeR --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- I&amp;apos;m the original developer of dat profiles. Any changes, copying or sharing without my knowledge direct copyright infringement. For more info: 
-- Discord official chanel: https://discord.gg/fX9frDY
-- VK: https://vk.com/darhanger
-- FB: https://fb.com/darhanger
-- E-mail: civayan@gmail.com</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Shamanistic Rage(Burst)</Name><Default>false</Default><SpellID>30823</SpellID><Actions></Actions><Lua>if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(30823)
and IsSpellInRange(GetSpellInfo(17364), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Chain Heal (Spam 2)</Name><Default>false</Default><SpellID>55459</SpellID><Actions></Actions><Lua>if Heal == true
and PQR_IsCastingSpell(55459) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:-- Hotkeys --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not leftkeydown then leftkeydown = 0 end

if IsLeftControlKeyDown()  and GetTime() - leftkeydown &amp;gt; 1 then
	leftkeydown = GetTime()
  	if StopRota  then
		StopRota  = false 
		PQR_WriteToChat(&amp;quot;Rotation \124cFF15E615reenabled!&amp;quot;)
  	else 
		StopRota  = true 
		PQR_WriteToChat(&amp;quot;Rotation \124cFFE61515stopped!&amp;quot;)
  	end
end

if modtime == nil then
	modtime = 0
end

if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if Heal then
		Heal = false
		PQR_WriteToChat(&amp;quot;Spaming Chain Heal \124cFFE61515Disabled&amp;quot;)
	else
		Heal = true
		PQR_WriteToChat(&amp;quot;Spaming Chain Heal \124cFF15E615Enabled&amp;quot;)
	end
end

if IsRightAltKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if ELE then
		ELE = false
		PQR_WriteToChat(&amp;quot;Elemental DPS \124cFFE61515Disabled&amp;quot;)
	else
		ELE = true
		PQR_WriteToChat(&amp;quot;Elemental DPS \124cFF15E615Enabled&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Frost Shock</Name><Default>false</Default><SpellID>49236</SpellID><Actions></Actions><Lua>local frostshock, _, _, _, _, _, timer = UnitDebuffID(&amp;quot;target&amp;quot;, 49236, &amp;quot;player&amp;quot;)

if ( frostshock == nil or ( frostshock and timer - GetTime() &amp;lt; 2.2 ) )
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(49236)
and IsSpellInRange(GetSpellInfo(49236), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Interrupt Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- New Interrupt Engine // Новый движок--
if xelperInterruptInit == nil then
		xelperInterruptInit = true
		function PQR_InterruptSpell()
			local _, playerClass = UnitClass(&amp;quot;player&amp;quot;)
		
			if playerClass == &amp;quot;DEATHKNIGHT&amp;quot; then
				return 47528
			elseif playerClass == &amp;quot;HUNTER&amp;quot; then
				return 34490
			elseif playerClass == &amp;quot;MAGE&amp;quot; then
				return 2139
			elseif playerClass == &amp;quot;PRIEST&amp;quot; then
				return 15487
			elseif playerClass == &amp;quot;ROGUE&amp;quot; then
				return 1766
			elseif playerClass == &amp;quot;SHAMAN&amp;quot; then
				return 57994
			elseif playerClass == &amp;quot;WARRIOR&amp;quot; then
				local BattleStance = UnitBuffID(&amp;quot;player&amp;quot;, 2457)
				if BattleStance ~= nil then
					return 57755
				else
				local DefensiveStance = UnitBuffID(&amp;quot;player&amp;quot;, 71)
				if DefensiveStance ~= nil then
					return 72
				else
				local BerserkerStance = UnitBuffID(&amp;quot;player&amp;quot;, 2458)
				if BerserkerStance ~= nil then
					return 6552
				else
					return 57755
					end	
				end
			end
		end
	end
end

-- Сore / Ядро -- 

local customTarget = &amp;quot;target&amp;quot;
local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(customTarget)
local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(customTarget)

if channelName ~= nil then
	--target is channeling a spell that is interruptable
	--load the channel variables into the cast variables to make logic a little easier.
	castName = channelName
	castStartTime = channelStartTime
	castEndTime = channelEndTime
	castInterruptable = channelInterruptable
end

--This is actually &amp;quot;Not Interruptable&amp;quot;... so lets swap it around to use in the positive.
if castInterruptable == false then
	castInterruptable = true
else
	castInterruptable = false
end

--we can&amp;apos;t attack the target.
if UnitCanAttack(&amp;quot;player&amp;quot;, customTarget) == nil then
	return false
end

if castInterruptable then
	--target is casting something that is interruptable.
	--the following 2 variables are named logically... value is in seconds.
	local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000
	local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
	local castTime = castEndTime - castStartTime
	local currentPercent = timeSinceStart / castTime * 100000
	
	--interrupt percentage check
	if currentPercent &amp;lt; PQR_InterruptPercent then
		return false
	end

	--minimum interrupt time.
	if timeSinceStart - PQR_InterruptDelay &amp;lt; 0 then
		return false
	end

	--make sure the interrupt spell is available
	local interruptSpell = PQR_InterruptSpell()
	if interruptSpell ~= 0 then
		
		local interruptName = GetSpellInfo(interruptSpell)
		if not PQR_SpellAvailable(interruptSpell) or not IsSpellInRange(interruptName, customTarget) then
			return false
		end
	else
		return false
	end

	--Finally, make sure the spell they are casting is on the interrupt list or interrupt all is checked
	--if PQR_IsInterruptAll() then
		PQR_Debug(&amp;quot;Casting interrupt on &amp;quot;..customTarget)
		CastSpellByID(interruptSpell, customTarget)
		return true
	--end
	
end

--PQR_InterruptStarted is a global flag to indicate that a new interrupt rotation has started.

if not PQR_InterruptStart then
	PQR_InterruptStart = true

	--Only interrupt these abilities:
	--PQR_AddInterrupt(&amp;quot;Holy Light&amp;quot;)
	--PQR_AddInterrupt(&amp;quot;Flash of Light&amp;quot;)
	--PQR_AddInterrupt(GetSpellInfo(16914)) --Hurricane

	--This is the delay before interrupting in seconds.
	PQR_InterruptDelay = 0.05
	
	--This is the percentage of the cast to wait before interrupting
	PQR_InterruptPercent = math.random(30,60)
end

if not spells then
	spells = {
		&amp;quot;Greater Heal&amp;quot;, --Priest Heal
		&amp;quot;Penance&amp;quot;, --Priest Direct channel heal
		&amp;quot;Flash Heal&amp;quot;, --Priest quick big heal&amp;quot;
		&amp;quot;Heal&amp;quot;, --Priest normal heal
		&amp;quot;Binding Heal&amp;quot;, --Priest heal for themself and another
		&amp;quot;Lesser Heal&amp;quot;, --Priest small heal
		&amp;quot;Prayer of Healing&amp;quot;, --Priest AoE heal
		&amp;quot;Chain Heal&amp;quot;, --Shaman AoE heal
		&amp;quot;Healing Wave&amp;quot;, --Shaman heal
		&amp;quot;Lesser Healing Wave&amp;quot;, --Shaman minor heal
		&amp;quot;Flash of Light&amp;quot;, --Paladin quick heal
		&amp;quot;Holy Light&amp;quot;, --Paladin small heal
		&amp;quot;Nourish&amp;quot;, --Druid heals
		&amp;quot;Healing Touch&amp;quot;, --Druid heal
		&amp;quot;Regrowth&amp;quot;, --Druid AoE
		&amp;quot;Rebirth&amp;quot;, --Druid brez
		&amp;quot;Tranquility&amp;quot;, --Druid AoE heal
		&amp;quot;Hex&amp;quot;, --Shaman CC
		&amp;quot;Cyclone&amp;quot;,
		&amp;quot;Polymorph&amp;quot;
		}
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Function --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not functionsloaded then

		-- Combat Check --
	function inCombat()
	if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
		then
			return true
		end
	end
	
		-- Get HP simple --
	function getHp(unit)
	if UnitExists(unit) ~= nil
		then
			return 100 * UnitHealth(unit) / UnitHealthMax(unit)
		end
	end
	
		-- Calculate HP simple --
	function CalculateHP(t)
	local ActualWithIncoming = 100 * UnitHealth(t) / UnitHealthMax(t)
		if ActualWithIncoming then
			return ActualWithIncoming
		else
			return 100
		end
	end
		
		-- Spell Cooldown remaining check --
	CooldownRemains = nil
	function CooldownRemains(spell)
		local start, duration, enable = GetSpellCooldown(spell)
		if ( start &amp;gt; 0 and duration &amp;gt; 1.5 ) then
			return start + duration - GetTime()
		else
			return false
		end
	end

		-- Amount of Cooldown that remains --
	function cdRemains(spellid)
		if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime()) &amp;gt; 0
			then return select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime())
		else return 0
		end
	end

		-- Item Cooldown remaining check --
	ItemCooldownRemains = nil
	function ItemCooldownRemains(item)
		local start, duration, enable = GetItemCooldown(item)
		if ( start &amp;gt; 0 and duration &amp;gt; 1.5 ) then
			return start + duration - GetTime()
		else
			return false
		end
	end
	
		-- Range Check Simple --
	function rangeCheck(spellid,unit)
	if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
	then
		return true
		end
	end
	
		-- Threat --
	function threat(t)
	if UnitExists(t)
		and UnitThreatSituation(t) ~= nil then
			return UnitThreatSituation(t)
		else
			return 0
		end
	end
	
		-- Validator --
	valid = nil
	function valid(t, spellid)
		if UnitExists(t)
		 and not UnitIsDeadOrGhost(t)
		 and UnitCanAttack(&amp;quot;player&amp;quot;, t) == 1
		 and UnitDebuffID(&amp;quot;target&amp;quot;, 33786) == nil
		 and IsSpellInRange(GetSpellInfo(spellid), t) == 1
		 then
			return true
		else
			return false
		end
	end

		-- CastSpell --
	function _castSpell(spellid,tar)
		if UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
		and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
		--and IsPlayerSpell(spellid) == true
		and cdRemains(spellid) == 0
		then
			if tar ~= nil
			and rangeCheck(spellid,tar) == nil
				then
				return false
			elseif tar ~= nil
			and rangeCheck(spellid,tar) == true
				then
				CastSpellByID(spellid, tar)
				return true
			elseif tar == nil
				then
				CastSpellByID(spellid)
				return true
			else
		return false
		end
	end
	end
	
		-- Tabled Cast Time Checking for When you Last Cast Something.
	CheckCastTime = {}
	Nova_CheckLastCast = nil
	function Nova_CheckLastCast(spellid, ytime) -- SpellID of Spell To Check, How long of a gap are you looking for?
		if ytime &amp;gt; 0 then
			if #CheckCastTime &amp;gt; 0 then
				for i=1, #CheckCastTime do
					if CheckCastTime[i].SpellID == spellid then
						if GetTime() - CheckCastTime[i].CastTime &amp;gt; ytime then
							CheckCastTime[i].CastTime = GetTime()
							return true
						else
							return false
						end
					end
				end
			end
			table.insert(CheckCastTime, { SpellID = spellid, CastTime = GetTime() } )
			return true
		elseif ytime &amp;lt;= 0 then
			return true
		end
		return false
	end
	
		-- Checks if our Cleanse will have a valid Debuff to Cleanse --
	function ValidDispel(t)
		local HasValidDispel = false
		local i = 1
		local debuff = UnitDebuff(t, i)
		local blacklist = {70338, 70337, --Necrotic Plauge
			           71503, 70311, 70405, 24673
				}
		for n = 1, #blacklist do
			if UnitDebuffID(t, blacklist[n]) then return false end
		end
		while debuff do
			local debuffType = select(5, UnitDebuff(t, i))
			if debuffType == &amp;quot;Curse&amp;quot;
			or debuffType  == &amp;quot;Poison&amp;quot;  
			or debuffType  == &amp;quot;Disease&amp;quot;  then
				HasValidDispel = true
			end
			i = i + 1
			debuff = UnitDebuff(t, i)
		end
		return HasValidDispel
	end

	function DispelCount()
		local DispelNumbers = 0
		for i = 1, #members do
			if ValidDispel(members[i].Unit) then
				DispelNumbers = DispelNumbers + 1
			end
		end
		return DispelNumbers
	end

		-- New Healing Engine --
	function SheuronEngine(MO, TARGETHEAL, LOWHP, HEALPET)
		local MouseoverCheck = MO or false
		local LowHPTarget = LOWHP or 80
		local TargetHealCheck = TARGETHEAL or false
		local HEALPET = HEALPET or true
		lowhpmembers = 0
		
		playerHP = CalculateHP(&amp;quot;player&amp;quot;)
		members = {
			 --{ 	
			--Unit = &amp;quot;player&amp;quot;, 
			--HP = playerHP, 
			--GUID = UnitGUID(&amp;quot;player&amp;quot;), 
			--IsPlayer = true, 
			--}
			} 
			
		-- Adding player to low hp table --
		if playerHP &amp;lt; LowHPTarget then
			lowhpmembers = lowhpmembers + 1
		end	
			
			
		local group = &amp;quot;party&amp;quot;
		local groupmembers = GetNumPartyMembers()

		if GetNumRaidMembers() &amp;gt; 0 then
			group = &amp;quot;raid&amp;quot;
			groupmembers = GetNumRaidMembers()
		end
			
			
		for i = 1, groupmembers do 
			local member, memberhp, uidmember = group..i, CalculateHP(group..i), UnitGUID(group..i)	
		
		-- Checking all Party/Raid Members for Range/Health
			if ((UnitExists(member) and CanHeal(member)) or UnitIsUnit(&amp;quot;player&amp;quot;,member))
			and member ~= nil and memberhp ~= nil and uidmember ~= nil then 	
				table.insert( members,{ Unit = member, HP = memberhp, GUID = uidmember, IsPlayer = true } ) 
					
				-- Setting Low HP Members variable for AoE Healing
				if memberhp &amp;lt; LowHPTarget and UnitPower(member) &amp;lt; 1500000 then
					lowhpmembers = lowhpmembers + 1
				end	
			end 
				
		-- Checking Pets in the group --
			if HEALPET and lowhpmembers == 0 and UnitExists(group..i..&amp;quot;pet&amp;quot;) and CanHeal(group..i..&amp;quot;pet&amp;quot;) then
				local memberpet, memberpethp,  uidmemberpet = nil, nil, nil
				memberpet = group..i..&amp;quot;pet&amp;quot; 
				memberpethp = CalculateHP(memberpet)		
				uidmemberpet = UnitGUID(memberpet)
						
				if memberpet ~= nil and memberpethp ~= nil and uidmemberpet ~= nil then
					--table.insert(members, { Unit = memberpet, HP = memberpethp, GUID = uidmemberpet, IsPlayer = false } )
				end			
			end
		end 
		
		-- Checking Priority Targeting --
		if TargetHealCheck and CanHeal(&amp;quot;target&amp;quot;) then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;target&amp;quot;,x.Unit) end)
		elseif MouseoverCheck and CanHeal(&amp;quot;mouseover&amp;quot;) and GetMouseFocus() ~= WorldFrame then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;mouseover&amp;quot;,x.Unit) end)
		end
	end

		-- Checking Distance --
	function CheckDistance(unit1,unit2) 
		local a1,b1 = GetPlayerMapPosition(unit1)
		local a2,b2 = GetPlayerMapPosition(unit2)
		local _, h, w = GetMapInfo()
		local x1 , y1 = a1 * 1000, b1 * 1000
		local x2 , y2 = a2 * 1000, b2 * 1000

				local distance = sqrt(min(x1 - x2, w - (x1 - x2))^2 + min(y1 - y2, h - (y1-y2))^2)
			
			return distance
	end

	function UnitsClose(t) 
		local n = -1
		for i=1,#members do
		  if CheckDistance(t,members[i].Unit) &amp;lt; 9 and members[i].HP &amp;lt; 95 then n = n + 1 end
		end 
		return n
	end
		
		-- Check Faction -- 
		PlayerHorde = nil
	function PlayerHorde()
		local race = UnitRace(&amp;quot;player&amp;quot;)
		if race == &amp;quot;Blood Elf&amp;quot;
		or race == &amp;quot;Forest Troll&amp;quot;
		or race == &amp;quot;Pandaren&amp;quot;
		or race == &amp;quot;Saurok&amp;quot;
		or race == &amp;quot;Goblin&amp;quot;
		or race == &amp;quot;Troll&amp;quot;
		or race == &amp;quot;Tauren&amp;quot;
		or race == &amp;quot;Undead&amp;quot;
		or race == &amp;quot;Orc&amp;quot;
		then
			return true
		else
			return false
		end
	end

	TargetHorde = nil
	function TargetHorde(t)
		local race = UnitRace(t)
		if UnitExists(t)
		and ( race == &amp;quot;Blood Elf&amp;quot;
		or race == &amp;quot;Forest Troll&amp;quot;
		or race == &amp;quot;Pandaren&amp;quot;
		or race == &amp;quot;Saurok&amp;quot;
		or race == &amp;quot;Goblin&amp;quot;
		or race == &amp;quot;Troll&amp;quot;
		or race == &amp;quot;Tauren&amp;quot;
		or race == &amp;quot;Undead&amp;quot;
		or race == &amp;quot;Orc&amp;quot; )
		then
			return true
		else
			return false
		end
	end

	SameFaction = nil
	function SameFaction(t)
		if UnitExists(t) then
		if PlayerHorde() == true and TargetHorde(t) == true then
			return true
		end
		if PlayerHorde() == false and TargetHorde(t) == false then
			return true
		end
		if PlayerHorde() == true and TargetHorde(t) == false then
			return false
		end
		if PlayerHorde == false and TargetHorde(t) == true then
			return false
		end
		end
	end

	ZoneHealCheck = nil
	function ZoneHealCheck(t)
		if GetZoneText() == &amp;quot;Winterspring&amp;quot; or GetZoneText() == &amp;quot;Blade&amp;apos;s Edge Mountains&amp;quot; or GetZoneText() == &amp;quot;The Storm Peaks&amp;quot; or GetZoneText() == &amp;quot;Eastern Plaguelands&amp;quot; then
			if UnitExists(t) and SameFaction(t) == true then
				return true
			else
				return false
			end
		else
			return true
		end
	end

functionsloaded = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Chain Lightning/Bolt</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local maelstrom, _, _, maelstromstack = UnitBuffID(&amp;quot;player&amp;quot;, 53817)

if maelstrom ~= nil
and maelstromstack == 5
and UnitExists(&amp;quot;target&amp;quot;)
and IsSpellInRange(GetSpellInfo(49271), &amp;quot;target&amp;quot;) == 1
and CooldownRemains(49233)
then
	if AOE then
		CastSpellByID(49271)
		return true
	else
		CastSpellByID(49238)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Enc:Frostbrand + Flametongue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,MH,_,_,OH,_,_,_ = GetWeaponEnchantInfo()

if MH == nil
then
    CastSpellByID(58796)
end

if OH == nil
then
    CastSpellByID(58790)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Racial</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5782) --Fear

if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 8122) --Psychic scream
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5484) --Howl of Terror
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 2637) --Hibernate
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5246) --Intimidating Shout
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 6358) --Seduction
end
if pvpdebuffCheck ~= nil then
	if (expire - GetTime()) &amp;gt;= 4 then 
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Undead&amp;quot; and IsSpellKnown(7744) and not CooldownRemains(7744) then
		CastSpellByID(7744)
		return true
		end
	end
end

if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
then
	--Troll Berserking--
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Troll&amp;quot; and IsSpellKnown(26297) and not CooldownRemains(26297) then
		CastSpellByID(26297)
		return true
	end
	--Orc Blood Fury 2--
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Orc&amp;quot; and IsSpellKnown(20572) and not CooldownRemains(20572) then
		CastSpellByID(20572)
		return true
	end
	--Orc Blood Fury--
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Orc&amp;quot; and IsSpellKnown(33697) and not CooldownRemains(33697) then 
		CastSpellByID(33697)
		return true
	end
end

if UnitExists(&amp;quot;target&amp;quot;)
then
	--Dwarf Stoneform--
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 40 
	and UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Dwarf&amp;quot; and IsSpellKnown(20594) and not CooldownRemains(20594) then
		CastSpellByID(20594)
		return true
	end
	--Draenei Stoneform--
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 40 
	and UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Draenei&amp;quot; and IsSpellKnown(28880) and not CooldownRemains(28880) then
		CastSpellByID(28880)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Heal Target Eng(Sim)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
  and UnitIsDead(&amp;quot;target&amp;quot;) == nil
  and UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
  and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
  and UnitHasVehicleUI(&amp;quot;target&amp;quot;) == false
  then PQR_CustomTarget = &amp;quot;target&amp;quot;
          PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
else 

PQR_CustomTarget = &amp;quot;player&amp;quot;
PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()
lowhpmembers = 0

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
  local memberhp = 100 * UnitHealth(member) / UnitHealthMax(member)
  if UnitInRange(member) 
  and UnitIsFriend(&amp;quot;player&amp;quot;, member)
  and UnitIsDeadOrGhost(member) == nil  then
    if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 1 end
    if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
    if UnitBuffID(member, 53563) ~= nil then memberhp = memberhp + 7 end
    if memberhp &amp;lt; 85 then lowhpmembers = lowhpmembers +1 end
    if memberhp &amp;lt; PQR_CustomTargetHP then
      PQR_CustomTarget = member
      PQR_CustomTargetHP = memberhp
    end
  end
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>R:Elem DPS</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if ELE
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
and IsSpellInRange(GetSpellInfo(17364), &amp;quot;target&amp;quot;) == 1
and UnitAffectingCombat(&amp;quot;player&amp;quot;) == 1
 then
	if UnitLevel(&amp;quot;target&amp;quot;) == -1 and not CooldownRemains(16166) then
		CastSpellByID(16166)
	end
	if not CooldownRemains(49233) then
		CastSpellByID(49233)
		return true
	end	
	if not CooldownRemains(60043)
	 then
		CastSpellByID(60043)
		return true
	end
	if not CooldownRemains(49271) then
		CastSpellByID(49271)
		return true
	end
	if UnitDebuffID(&amp;quot;target&amp;quot;, 49233, &amp;quot;player&amp;quot;)
	 and CooldownRemains(60043) then	
		CastSpellByID(49238)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Searing Totem</Name><Default>false</Default><SpellID>58704</SpellID><Actions></Actions><Lua>haveTotem, totemName, startTime, duration = GetTotemInfo(1)

if totemName ~= &amp;quot;&amp;quot;
and UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
then return false 
else return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Purge</Name><Default>false</Default><SpellID>8012</SpellID><Actions></Actions><Lua>for i=1,40 do
  local name, icon, _, _, _, _, _, canPurge = UnitBuff(&amp;quot;target&amp;quot;,i)
  if canPurge then
    CastSpellByID(8012, &amp;quot;target&amp;quot;)
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Autotarget --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Autotarget script --
if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitExists(&amp;quot;target&amp;quot;) == nil 
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability></SHAMAN>