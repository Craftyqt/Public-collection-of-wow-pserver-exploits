<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>H:Power Word: Shield (Low HP)</Name><Default>false</Default><SpellID>48066</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt;= 85
and UnitDebuffID(PQR_CustomTarget,6788) == nil 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Vampiric Touch</Name><Default>false</Default><SpellID>48160</SpellID><Actions></Actions><Lua>local VT, _, _, _, _, _, timer = UnitDebuffID(&amp;quot;target&amp;quot;, 48160, &amp;quot;player&amp;quot;)

if ( VT == nil or ( VT and timer - GetTime() &amp;lt; 2 ) )
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(48160), &amp;quot;target&amp;quot;) == 1
and ( select(7, GetSpellInfo(48160)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Inner Fire</Name><Default>false</Default><SpellID>48168</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,48168) == nil
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Mind Blast</Name><Default>false</Default><SpellID>48127</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and GetUnitSpeed(&amp;quot;player&amp;quot;) == 0
and IsSpellInRange(GetSpellInfo(48127), &amp;quot;target&amp;quot;) == 1
and not CooldownRemains(48127)
and PQR_IsCastingSpell(48127) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Prayer of Spirit</Name><Default>false</Default><SpellID>48074</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,48074) == nil
and GetItemCount(44615) &amp;gt;= 1
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Vampiric Embrace</Name><Default>false</Default><SpellID>15286</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,15286) == nil
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Shadowfiend</Name><Default>false</Default><SpellID>34433</SpellID><Actions>/petattack|/petaggressive|/cast Shadowcrawl</Actions><Lua>if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and not CooldownRemains(34433)
then return true end</Lua><RecastDelay>1</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Shadowform</Name><Default>false</Default><SpellID>15473</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,15473) == nil
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Shadow Word: Pain</Name><Default>false</Default><SpellID>48125</SpellID><Actions></Actions><Lua>local sw={UnitBuff(&amp;quot;player&amp;quot;, 15258)}
local SWP, _, _, _, _, _, timer = UnitDebuffID(&amp;quot;target&amp;quot;, 48125, &amp;quot;player&amp;quot;)

if ( SWP == nil or ( SWP and timer - GetTime() &amp;lt; 4.3 ) )
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(48125), &amp;quot;target&amp;quot;) == 1 
then return true end</Lua><RecastDelay>1</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Mind Flay</Name><Default>false</Default><SpellID>48156</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and GetUnitSpeed(&amp;quot;player&amp;quot;) == 0
and IsSpellInRange(GetSpellInfo(48156), &amp;quot;target&amp;quot;) == 1
and PQR_IsCastingSpell(48127) == false
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Shadow Word: Death</Name><Default>false</Default><SpellID>48158</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 35
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(48158), &amp;quot;target&amp;quot;) == 1 
then return true end</Lua><RecastDelay>1</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Heal Target Eng(Simp)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
  and UnitIsDead(&amp;quot;target&amp;quot;) == nil
  and UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
  and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
  and UnitInRange(&amp;quot;target&amp;quot;) ~= nil
  then PQR_CustomTarget = &amp;quot;target&amp;quot;
          PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
else 

PQR_CustomTarget = &amp;quot;player&amp;quot;
PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()
lowhpmembers = 0
needfortitude = 0
needshadow = 0
needspirit = 0

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
  local memberhp = 100 * UnitHealth(member) / UnitHealthMax(member)
  if UnitInRange(member) 
  and UnitIsFriend(&amp;quot;player&amp;quot;, member)
  and UnitIsDeadOrGhost(member) == nil  then
    if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 1 end
    if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
    if UnitBuffID(member, 53563) ~= nil then memberhp = memberhp + 7 end
    if UnitBuffID(member, 48162) == nil and UnitBuffID(member, 48161) == nil then needfortitude = needfortitude + 1 end
    if UnitBuffID(member, 48170) == nil and UnitBuffID(member, 48169) == nil then needshadow = needshadow + 1 end
    if UnitBuffID(member, 48074) == nil and UnitBuffID(member, 48073) == nil then needspirit = needspirit + 1 end
    if memberhp &amp;lt; 85 then lowhpmembers = lowhpmembers +1 end
    if memberhp &amp;lt; PQR_CustomTargetHP then
      PQR_CustomTarget = member
      PQR_CustomTargetHP = memberhp
    end
  end
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Start Fight --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if StopRota
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
or IsMounted()
or UnitChannelInfo(&amp;quot;player&amp;quot;) ~= nil
or UnitCastingInfo(&amp;quot;player&amp;quot;) ~= nil
or UnitBuff(&amp;quot;player&amp;quot;, &amp;quot;Drink&amp;quot;)
or UnitBuff(&amp;quot;player&amp;quot;, &amp;quot;Food&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Hotkeys --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not leftkeydown then leftkeydown = 0 end

if IsLeftControlKeyDown()  and GetTime() - leftkeydown &amp;gt; 1 then
	leftkeydown = GetTime()
  	if StopRota  then
		StopRota  = false 
		PQR_WriteToChat(&amp;quot;Rotation \124cFF15E615reenabled!&amp;quot;)
  	else 
		StopRota  = true 
		PQR_WriteToChat(&amp;quot;Rotation \124cFFE61515stopped!&amp;quot;)
  	end
end

if modtime == nil then
	modtime = 0
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Mass Dispel</Name><Default>false</Default><SpellID>32375</SpellID><Actions></Actions><Lua>if IsShiftKeyDown() 
and GetCurrentKeyBoardFocus() == nil 
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then
  CastSpellByName(&amp;quot;Massenbannung&amp;quot;)
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Click</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use:Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)
if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
and UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitLevel(&amp;quot;target&amp;quot;) == -1
then 
  UseInventoryItem(13) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use:Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)
if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
and UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitLevel(&amp;quot;target&amp;quot;) == -1
then 
  UseInventoryItem(14) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Offensive Spells --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
or ( not UnitAffectingCombat(&amp;quot;target&amp;quot;) and not UnitIsPlayer(&amp;quot;target&amp;quot;) )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use:Mouseover Skill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) and IsMouseButtonDown()
	then RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName()) end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Flash Heal</Name><Default>false</Default><SpellID>48071</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 85
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 30
and PQR_IsCastingSpell(48071) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Renew</Name><Default>false</Default><SpellID>48068</SpellID><Actions></Actions><Lua>if UnitBuffID(PQR_CustomTarget, 48068,&amp;quot;player&amp;quot;) == nil 
and (PQR_CustomTargetHP &amp;lt; 95 or UnitThreatSituation(PQR_CustomTarget) == 3) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Prayer of Mending</Name><Default>false</Default><SpellID>48113</SpellID><Actions></Actions><Lua>if lowhpmembers &amp;gt;= 2 
and UnitBuffID(PQR_CustomTarget, 48113,&amp;quot;player&amp;quot;) == nil
and ( select(7, GetSpellInfo(48113)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Prayer of Healing</Name><Default>false</Default><SpellID>48072</SpellID><Actions></Actions><Lua>if lowhpmembers &amp;gt;= 3
and PQR_IsCastingSpell(48072) == false
and ( select(7, GetSpellInfo(48072)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Cure Disease</Name><Default>false</Default><SpellID>528</SpellID><Actions></Actions><Lua>local buff = { }
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()
if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 0, members, 1 do
  if i==0 then mem = &amp;quot;player&amp;quot; else mem = group..tostring(i) end
  if UnitInRange(mem) and UnitIsDeadOrGhost(mem) == nil then
   local candispel = 1
   for k,v in ipairs(buff) do
    if UnitDebuffID(mem,v) then candispel = nil end
   end
   local j = 1
   local debuff,_,_,count,bufftype,dur = UnitDebuff(mem, j)
   while debuff do
    if bufftype == &amp;quot;Disease&amp;quot; and dur &amp;gt; 1 and candispel then
     CastSpellByID(528,mem)
     return true
    end
    j = j + 1;
    debuff,_,_,count,bufftype,duration = UnitDebuff(mem, j)
    end
  end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Power Word: Shield</Name><Default>false</Default><SpellID>48066</SpellID><Actions></Actions><Lua>if UnitDebuffID(PQR_CustomTarget,6788) == nil 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Power Word: Shield (Ally)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()

if UnitDebuffID(&amp;quot;player&amp;quot;, 6788) == nil
   then CastSpellByID(48066, &amp;quot;player&amp;quot;) end

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
    if UnitDebuffID(member, 6788) == nil
    and UnitInRange(member)
    and UnitIsFriend(&amp;quot;player&amp;quot;, member)
    and UnitIsDeadOrGhost(member) == nil
    and UnitHasVehicleUI(member) == false
    then
        CastSpellByID(48066, member)
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Dispel Magic</Name><Default>false</Default><SpellID>988</SpellID><Actions></Actions><Lua>local i = 1
local baddispel = nil
local goodtodispel = nil

local dontdispel = { 47843, 65812, 68154, 68155, 68156, 70867 }
for _,v in ipairs(dontdispel) do if UnitDebuffID(PQR_CustomTarget,v) then baddispel = 1 end end

local i = 1
local buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
while buff do
  if bufftype == &amp;quot;Magic&amp;quot; 
  and duration &amp;gt; 6 
  and count ~= 1 
  and not baddispel 
  and UnitIsFriend(&amp;quot;player&amp;quot;,PQR_CustomTarget) 
  then return true end
  i = i + 1;
  buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Mass Dispel</Name><Default>false</Default><SpellID>32375</SpellID><Actions></Actions><Lua>if IsLeftAltKeyDown() 
and GetCurrentKeyBoardFocus() == nil 
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then
  CastSpellByName(&amp;quot;Mass Dispel&amp;quot;)
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Click</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Pain Suppression</Name><Default>false</Default><SpellID>33206</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 20
and not CooldownRemains(33206)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Power Infusion</Name><Default>false</Default><SpellID>10060</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;focus&amp;quot;)
and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
and UnitLevel(PQR_CustomTarget..&amp;quot;target&amp;quot;) == -1
and not CooldownRemains(10060)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Penance</Name><Default>false</Default><SpellID>53007</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 85
and not CooldownRemains(53007)
and ( select(7, GetSpellInfo(53007)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Flash Heal</Name><Default>false</Default><SpellID>48071</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 80 
and PQR_IsCastingSpell(48071) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Renew</Name><Default>false</Default><SpellID>48068</SpellID><Actions></Actions><Lua>if UnitBuffID(PQR_CustomTarget, 48068,&amp;quot;PLAYER&amp;quot;) == nil 
and (PQR_CustomTargetHP &amp;lt; 95 or UnitThreatSituation(PQR_CustomTarget) == 3) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Renew (Alle)</Name><Default>false</Default><SpellID>48068</SpellID><Actions></Actions><Lua>local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()

if UnitBuffID(&amp;quot;player&amp;quot;, 48068) == nil
   then CastSpellByID(48068, &amp;quot;player&amp;quot;) end

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
    if UnitBuffID(member, 48068) == nil
    and UnitInRange(member)
    and UnitIsFriend(&amp;quot;player&amp;quot;, member)
    and UnitIsDeadOrGhost(member) == nil
    and UnitHasVehicleUI(member) == false
    then
        CastSpellByID(48068, member)
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Prayer of Mending</Name><Default>false</Default><SpellID>48113</SpellID><Actions></Actions><Lua>if lowhpmembers &amp;gt;= 2 
and UnitBuffID(PQR_CustomTarget, 48113,&amp;quot;player&amp;quot;) == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Prayer of Healing</Name><Default>false</Default><SpellID>48072</SpellID><Actions></Actions><Lua>if lowhpmembers &amp;gt;= 4
and PQR_IsCastingSpell(48072) == false
and ( select(7, GetSpellInfo(48072)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Greater Heal</Name><Default>false</Default><SpellID>48063</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 80
and PQR_IsCastingSpell(48063) == false
and ( select(7, GetSpellInfo(48063)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Cure Disease</Name><Default>false</Default><SpellID>528</SpellID><Actions></Actions><Lua>if DoNotDispell then return false end
if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 50 then return false end
local i = 1
local baddispel = nil
local goodtodispel = nil

local dontdispel = { 70338, 70405 }
for _,v in ipairs(dontdispel) do if UnitDebuffID(PQR_CustomTarget,v) then baddispel = 1 end end

local i = 1
local buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
while buff do
  if bufftype == &amp;quot;Disease&amp;quot; 
  and duration &amp;gt; 6 
  and count ~= 1 
  and not baddispel 
  and UnitIsFriend(&amp;quot;player&amp;quot;,PQR_CustomTarget) 
  then return true end
  i = i + 1;
  buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Circle of Healing</Name><Default>false</Default><SpellID>48089</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 90
and lowhpmembers &amp;gt;= 3
and not CooldownRemains(48089)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Power Word: Shield</Name><Default>false</Default><SpellID>48066</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 80
and UnitDebuffID(PQR_CustomTarget,6788) == nil 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Dispel Magic</Name><Default>false</Default><SpellID>988</SpellID><Actions></Actions><Lua>if DoNotDispell then return false end
if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 50 then return false end
local i = 1
local baddispel = nil
local goodtodispel = nil

local dontdispel = { 47843, 65812, 68154, 68155, 68156, 70867}
for _,v in ipairs(dontdispel) do if UnitDebuffID(PQR_CustomTarget,v) then baddispel = 1 end end

local i = 1
local buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
while buff do
  if bufftype == &amp;quot;Magic&amp;quot; 
  and duration &amp;gt; 6 
  and count ~= 1 
  and not baddispel 
  and UnitIsFriend(&amp;quot;player&amp;quot;,PQR_CustomTarget) 
  then return true end
  i = i + 1;
  buff,_,_,count,bufftype,duration = UnitDebuff(PQR_CustomTarget, i)
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Shadowfiend</Name><Default>false</Default><SpellID>0</SpellID><Actions>/petattack|/petaggressive|/cast Shadowcrawl</Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 70 
and GetSpellCooldown(34433) == 0
and UnitIsEnemy(&amp;quot;player&amp;quot;,PQR_CustomTarget..&amp;quot;target&amp;quot;) 
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
and UnitCastingInfo(&amp;quot;player&amp;quot;) == nil  
and UnitLevel(PQR_CustomTarget..&amp;quot;target&amp;quot;) == -1
then 
  CastSpellByID(34433,PQR_CustomTarget..&amp;quot;target&amp;quot;) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Binding Heal</Name><Default>false</Default><SpellID>48120</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 80
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 90 
and UnitIsUnit(&amp;quot;player&amp;quot;, PQR_CustomTarget) == nil
and PQR_IsCastingSpell(32546) == false
and ( select(7, GetSpellInfo(48120)) == 0 or GetUnitSpeed(&amp;quot;player&amp;quot;) == 0 )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Desperate Prayer</Name><Default>false</Default><SpellID>48173</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt;= 12
and not CooldownRemains(48173)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Devouring Plague</Name><Default>false</Default><SpellID>48300</SpellID><Actions></Actions><Lua>local DP, _, _, _, _, _, timer = UnitDebuffID(&amp;quot;target&amp;quot;, 48300, &amp;quot;player&amp;quot;)

if ( DP == nil or ( DP and timer - GetTime() &amp;lt; 4.3 ) )
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(48300), &amp;quot;target&amp;quot;) == 1 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Dispersion</Name><Default>false</Default><SpellID>47585</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt;= 5 
or 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt;= 30 
then return true end</Lua><RecastDelay>1</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Fade</Name><Default>false</Default><SpellID>586</SpellID><Actions></Actions><Lua>if UnitThreatSituation(&amp;quot;player&amp;quot;) == 3
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Fear Ward</Name><Default>false</Default><SpellID>6346</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,6346) == nil
and not CooldownRemains(6346)
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Prayer of Fortitude</Name><Default>false</Default><SpellID>48162</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,48162) == nil
and GetItemCount(44615) &amp;gt;= 1
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Prayer of Shadow Protection</Name><Default>false</Default><SpellID>48170</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;,48170) == nil
and GetItemCount(44615) &amp;gt;= 1
and not UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
and not IsMounted()
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Power Infusion</Name><Default>false</Default><SpellID>10060</SpellID><Actions></Actions><Lua>if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
and not CooldownRemains(10060)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- DarhangeR --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- I&amp;apos;m the original developer of dat profiles. Any changes, copying or sharing without my knowledge direct copyright infringement. For more info: 
-- Discord official chanel: https://discord.gg/fX9frDY
-- VK: https://vk.com/darhanger
-- FB: https://fb.com/darhanger
-- E-mail: civayan@gmail.com</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Pain Suppression(Self)</Name><Default>false</Default><SpellID>33206</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt;= 50 
and not CooldownRemains(33206)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:-- Hotkeys --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not leftkeydown then leftkeydown = 0 end

if IsLeftControlKeyDown()  and GetTime() - leftkeydown &amp;gt; 1 then
	leftkeydown = GetTime()
  	if StopRota  then
		StopRota  = false 
		PQR_WriteToChat(&amp;quot;Rotation \124cFF15E615reenabled!&amp;quot;)
  	else 
		StopRota  = true 
		PQR_WriteToChat(&amp;quot;Rotation \124cFFE61515stopped!&amp;quot;)
  	end
end

if modtime == nil then
	modtime = 0
end

if not rightkeydown then rightkeydown = 0 end

if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - modtime &amp;gt; 0.3 then
	modtime = GetTime()
	if MS then
		MS = false
		PQR_WriteToChat(&amp;quot;Mind Sear \124cFFE61515Disabled&amp;quot;)
	else
		MS = true
		PQR_WriteToChat(&amp;quot;Mind Sear \124cFF15E615Enabled&amp;quot;)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Mind Sear (AoE)</Name><Default>false</Default><SpellID>53023</SpellID><Actions></Actions><Lua>if MS == true
and IsSpellInRange(&amp;quot;Mind Sear&amp;quot;, &amp;quot;target&amp;quot;) == 1
and PQR_IsCastingSpell(53023) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Autotarget --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Autotarget script --
if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and UnitExists(&amp;quot;target&amp;quot;) == nil 
then TargetNearestEnemy() end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Smite</Name><Default>false</Default><SpellID>48123</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 33151)
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(48123), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Interrupt Engine --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- New Interrupt Engine // Новый движок--
if xelperInterruptInit == nil then
		xelperInterruptInit = true
		function PQR_InterruptSpell()
			local _, playerClass = UnitClass(&amp;quot;player&amp;quot;)
		
			if playerClass == &amp;quot;DEATHKNIGHT&amp;quot; then
				return 47528
			elseif playerClass == &amp;quot;HUNTER&amp;quot; then
				return 34490
			elseif playerClass == &amp;quot;MAGE&amp;quot; then
				return 2139
			elseif playerClass == &amp;quot;PRIEST&amp;quot; then
				return 15487
			elseif playerClass == &amp;quot;ROGUE&amp;quot; then
				return 1766
			elseif playerClass == &amp;quot;SHAMAN&amp;quot; then
				return 57994
			elseif playerClass == &amp;quot;WARRIOR&amp;quot; then
				local BattleStance = UnitBuffID(&amp;quot;player&amp;quot;, 2457)
				if BattleStance ~= nil then
					return 57755
				else
				local DefensiveStance = UnitBuffID(&amp;quot;player&amp;quot;, 71)
				if DefensiveStance ~= nil then
					return 72
				else
				local BerserkerStance = UnitBuffID(&amp;quot;player&amp;quot;, 2458)
				if BerserkerStance ~= nil then
					return 6552
				else
					return 57755
					end	
				end
			end
		end
	end
end

-- Сore / Ядро -- 

local customTarget = &amp;quot;target&amp;quot;
local castName, _, _, _, castStartTime, castEndTime, _, _, castInterruptable = UnitCastingInfo(customTarget)
local channelName, _, _, _, channelStartTime, channelEndTime, _, channelInterruptable = UnitChannelInfo(customTarget)

if channelName ~= nil then
	--target is channeling a spell that is interruptable
	--load the channel variables into the cast variables to make logic a little easier.
	castName = channelName
	castStartTime = channelStartTime
	castEndTime = channelEndTime
	castInterruptable = channelInterruptable
end

--This is actually &amp;quot;Not Interruptable&amp;quot;... so lets swap it around to use in the positive.
if castInterruptable == false then
	castInterruptable = true
else
	castInterruptable = false
end

--we can&amp;apos;t attack the target.
if UnitCanAttack(&amp;quot;player&amp;quot;, customTarget) == nil then
	return false
end

if castInterruptable then
	--target is casting something that is interruptable.
	--the following 2 variables are named logically... value is in seconds.
	local timeSinceStart = (GetTime() * 1000 - castStartTime) / 1000
	local timeLeft = ((GetTime() * 1000 - castEndTime) * -1) / 1000
	local castTime = castEndTime - castStartTime
	local currentPercent = timeSinceStart / castTime * 100000
	
	--interrupt percentage check
	if currentPercent &amp;lt; PQR_InterruptPercent then
		return false
	end

	--minimum interrupt time.
	if timeSinceStart - PQR_InterruptDelay &amp;lt; 0 then
		return false
	end

	--make sure the interrupt spell is available
	local interruptSpell = PQR_InterruptSpell()
	if interruptSpell ~= 0 then
		
		local interruptName = GetSpellInfo(interruptSpell)
		if not PQR_SpellAvailable(interruptSpell) or not IsSpellInRange(interruptName, customTarget) then
			return false
		end
	else
		return false
	end

	--Finally, make sure the spell they are casting is on the interrupt list or interrupt all is checked
	--if PQR_IsInterruptAll() then
		PQR_Debug(&amp;quot;Casting interrupt on &amp;quot;..customTarget)
		CastSpellByID(interruptSpell, customTarget)
		return true
	--end
	
end

--PQR_InterruptStarted is a global flag to indicate that a new interrupt rotation has started.

if not PQR_InterruptStart then
	PQR_InterruptStart = true

	--Only interrupt these abilities:
	--PQR_AddInterrupt(&amp;quot;Holy Light&amp;quot;)
	--PQR_AddInterrupt(&amp;quot;Flash of Light&amp;quot;)
	--PQR_AddInterrupt(GetSpellInfo(16914)) --Hurricane

	--This is the delay before interrupting in seconds.
	PQR_InterruptDelay = 0.05
	
	--This is the percentage of the cast to wait before interrupting
	PQR_InterruptPercent = math.random(30,60)
end

if not spells then
	spells = {
		&amp;quot;Greater Heal&amp;quot;, --Priest Heal
		&amp;quot;Penance&amp;quot;, --Priest Direct channel heal
		&amp;quot;Flash Heal&amp;quot;, --Priest quick big heal&amp;quot;
		&amp;quot;Heal&amp;quot;, --Priest normal heal
		&amp;quot;Binding Heal&amp;quot;, --Priest heal for themself and another
		&amp;quot;Lesser Heal&amp;quot;, --Priest small heal
		&amp;quot;Prayer of Healing&amp;quot;, --Priest AoE heal
		&amp;quot;Chain Heal&amp;quot;, --Shaman AoE heal
		&amp;quot;Healing Wave&amp;quot;, --Shaman heal
		&amp;quot;Lesser Healing Wave&amp;quot;, --Shaman minor heal
		&amp;quot;Flash of Light&amp;quot;, --Paladin quick heal
		&amp;quot;Holy Light&amp;quot;, --Paladin small heal
		&amp;quot;Nourish&amp;quot;, --Druid heals
		&amp;quot;Healing Touch&amp;quot;, --Druid heal
		&amp;quot;Regrowth&amp;quot;, --Druid AoE
		&amp;quot;Rebirth&amp;quot;, --Druid brez
		&amp;quot;Tranquility&amp;quot;, --Druid AoE heal
		&amp;quot;Hex&amp;quot;, --Shaman CC
		&amp;quot;Cyclone&amp;quot;,
		&amp;quot;Polymorph&amp;quot;
		}
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Function --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not functionsloaded then

		-- Combat Check --
	function inCombat()
	if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
		then
			return true
		end
	end
	
		-- Get HP simple --
	function getHp(unit)
	if UnitExists(unit) ~= nil
		then
			return 100 * UnitHealth(unit) / UnitHealthMax(unit)
		end
	end
	
		-- Calculate HP simple --
	function CalculateHP(t)
	local ActualWithIncoming = 100 * UnitHealth(t) / UnitHealthMax(t)
		if ActualWithIncoming then
			return ActualWithIncoming
		else
			return 100
		end
	end
		
		-- Spell Cooldown remaining check --
	CooldownRemains = nil
	function CooldownRemains(spell)
		local start, duration, enable = GetSpellCooldown(spell)
		if ( start &amp;gt; 0 and duration &amp;gt; 1.5 ) then
			return start + duration - GetTime()
		else
			return false
		end
	end

		-- Amount of Cooldown that remains --
	function cdRemains(spellid)
		if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime()) &amp;gt; 0
			then return select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime())
		else return 0
		end
	end

		-- Item Cooldown remaining check --
	ItemCooldownRemains = nil
	function ItemCooldownRemains(item)
		local start, duration, enable = GetItemCooldown(item)
		if ( start &amp;gt; 0 and duration &amp;gt; 1.5 ) then
			return start + duration - GetTime()
		else
			return false
		end
	end
	
		-- Range Check Simple --
	function rangeCheck(spellid,unit)
	if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
	then
		return true
		end
	end
	
		-- Threat --
	function threat(t)
	if UnitExists(t)
		and UnitThreatSituation(t) ~= nil then
			return UnitThreatSituation(t)
		else
			return 0
		end
	end
	
		-- Validator --
	valid = nil
	function valid(t, spellid)
		if UnitExists(t)
		 and not UnitIsDeadOrGhost(t)
		 and UnitCanAttack(&amp;quot;player&amp;quot;, t) == 1
		 and UnitDebuffID(&amp;quot;target&amp;quot;, 33786) == nil
		 and IsSpellInRange(GetSpellInfo(spellid), t) == 1
		 then
			return true
		else
			return false
		end
	end

		-- CastSpell --
	function _castSpell(spellid,tar)
		if UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
		and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
		--and IsPlayerSpell(spellid) == true
		and cdRemains(spellid) == 0
		then
			if tar ~= nil
			and rangeCheck(spellid,tar) == nil
				then
				return false
			elseif tar ~= nil
			and rangeCheck(spellid,tar) == true
				then
				CastSpellByID(spellid, tar)
				return true
			elseif tar == nil
				then
				CastSpellByID(spellid)
				return true
			else
		return false
		end
	end
	end
	
		-- Tabled Cast Time Checking for When you Last Cast Something.
	CheckCastTime = {}
	Nova_CheckLastCast = nil
	function Nova_CheckLastCast(spellid, ytime) -- SpellID of Spell To Check, How long of a gap are you looking for?
		if ytime &amp;gt; 0 then
			if #CheckCastTime &amp;gt; 0 then
				for i=1, #CheckCastTime do
					if CheckCastTime[i].SpellID == spellid then
						if GetTime() - CheckCastTime[i].CastTime &amp;gt; ytime then
							CheckCastTime[i].CastTime = GetTime()
							return true
						else
							return false
						end
					end
				end
			end
			table.insert(CheckCastTime, { SpellID = spellid, CastTime = GetTime() } )
			return true
		elseif ytime &amp;lt;= 0 then
			return true
		end
		return false
	end
	
		-- Checks if our Cleanse will have a valid Debuff to Cleanse --
	function ValidDispel(t)
		local HasValidDispel = false
		local i = 1
		local debuff = UnitDebuff(t, i)
		local blacklist = {70338, 70337, --Necrotic Plauge
			           71503, 70311, 70405, 24673
				}
		for n = 1, #blacklist do
			if UnitDebuffID(t, blacklist[n]) then return false end
		end
		while debuff do
			local debuffType = select(5, UnitDebuff(t, i))
			if debuffType == &amp;quot;Curse&amp;quot;
			or debuffType  == &amp;quot;Poison&amp;quot;  
			or debuffType  == &amp;quot;Disease&amp;quot;  then
				HasValidDispel = true
			end
			i = i + 1
			debuff = UnitDebuff(t, i)
		end
		return HasValidDispel
	end

	function DispelCount()
		local DispelNumbers = 0
		for i = 1, #members do
			if ValidDispel(members[i].Unit) then
				DispelNumbers = DispelNumbers + 1
			end
		end
		return DispelNumbers
	end

		-- New Healing Engine --
	function SheuronEngine(MO, TARGETHEAL, LOWHP, HEALPET)
		local MouseoverCheck = MO or false
		local LowHPTarget = LOWHP or 80
		local TargetHealCheck = TARGETHEAL or false
		local HEALPET = HEALPET or true
		lowhpmembers = 0
		
		playerHP = CalculateHP(&amp;quot;player&amp;quot;)
		members = {
			 --{ 	
			--Unit = &amp;quot;player&amp;quot;, 
			--HP = playerHP, 
			--GUID = UnitGUID(&amp;quot;player&amp;quot;), 
			--IsPlayer = true, 
			--}
			} 
			
		-- Adding player to low hp table --
		if playerHP &amp;lt; LowHPTarget then
			lowhpmembers = lowhpmembers + 1
		end	
			
			
		local group = &amp;quot;party&amp;quot;
		local groupmembers = GetNumPartyMembers()

		if GetNumRaidMembers() &amp;gt; 0 then
			group = &amp;quot;raid&amp;quot;
			groupmembers = GetNumRaidMembers()
		end
			
			
		for i = 1, groupmembers do 
			local member, memberhp, uidmember = group..i, CalculateHP(group..i), UnitGUID(group..i)	
		
		-- Checking all Party/Raid Members for Range/Health
			if ((UnitExists(member) and CanHeal(member)) or UnitIsUnit(&amp;quot;player&amp;quot;,member))
			and member ~= nil and memberhp ~= nil and uidmember ~= nil then 	
				table.insert( members,{ Unit = member, HP = memberhp, GUID = uidmember, IsPlayer = true } ) 
					
				-- Setting Low HP Members variable for AoE Healing
				if memberhp &amp;lt; LowHPTarget and UnitPower(member) &amp;lt; 1500000 then
					lowhpmembers = lowhpmembers + 1
				end	
			end 
				
		-- Checking Pets in the group --
			if HEALPET and lowhpmembers == 0 and UnitExists(group..i..&amp;quot;pet&amp;quot;) and CanHeal(group..i..&amp;quot;pet&amp;quot;) then
				local memberpet, memberpethp,  uidmemberpet = nil, nil, nil
				memberpet = group..i..&amp;quot;pet&amp;quot; 
				memberpethp = CalculateHP(memberpet)		
				uidmemberpet = UnitGUID(memberpet)
						
				if memberpet ~= nil and memberpethp ~= nil and uidmemberpet ~= nil then
					--table.insert(members, { Unit = memberpet, HP = memberpethp, GUID = uidmemberpet, IsPlayer = false } )
				end			
			end
		end 
		
		-- Checking Priority Targeting --
		if TargetHealCheck and CanHeal(&amp;quot;target&amp;quot;) then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;target&amp;quot;,x.Unit) end)
		elseif MouseoverCheck and CanHeal(&amp;quot;mouseover&amp;quot;) and GetMouseFocus() ~= WorldFrame then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;mouseover&amp;quot;,x.Unit) end)
		end
	end

		-- Checking Distance --
	function CheckDistance(unit1,unit2) 
		local a1,b1 = GetPlayerMapPosition(unit1)
		local a2,b2 = GetPlayerMapPosition(unit2)
		local _, h, w = GetMapInfo()
		local x1 , y1 = a1 * 1000, b1 * 1000
		local x2 , y2 = a2 * 1000, b2 * 1000

				local distance = sqrt(min(x1 - x2, w - (x1 - x2))^2 + min(y1 - y2, h - (y1-y2))^2)
			
			return distance
	end

	function UnitsClose(t) 
		local n = -1
		for i=1,#members do
		  if CheckDistance(t,members[i].Unit) &amp;lt; 9 and members[i].HP &amp;lt; 95 then n = n + 1 end
		end 
		return n
	end
		-- Checking Faction --
	PlayerHorde = nil
	function PlayerHorde()
		local race = UnitRace(&amp;quot;player&amp;quot;)
		if race == &amp;quot;Blood Elf&amp;quot;
		or race == &amp;quot;Forest Troll&amp;quot;
		or race == &amp;quot;Pandaren&amp;quot;
		or race == &amp;quot;Saurok&amp;quot;
		or race == &amp;quot;Goblin&amp;quot;
		or race == &amp;quot;Troll&amp;quot;
		or race == &amp;quot;Tauren&amp;quot;
		or race == &amp;quot;Undead&amp;quot;
		or race == &amp;quot;Orc&amp;quot;
		then
			return true
		else
			return false
		end
	end

	TargetHorde = nil
	function TargetHorde(t)
		local race = UnitRace(t)
		if UnitExists(t)
		and ( race == &amp;quot;Blood Elf&amp;quot;
		or race == &amp;quot;Forest Troll&amp;quot;
		or race == &amp;quot;Pandaren&amp;quot;
		or race == &amp;quot;Saurok&amp;quot;
		or race == &amp;quot;Goblin&amp;quot;
		or race == &amp;quot;Troll&amp;quot;
		or race == &amp;quot;Tauren&amp;quot;
		or race == &amp;quot;Undead&amp;quot;
		or race == &amp;quot;Orc&amp;quot; )
		then
			return true
		else
			return false
		end
	end

	SameFaction = nil
	function SameFaction(t)
		if UnitExists(t) then
		if PlayerHorde() == true and TargetHorde(t) == true then
			return true
		end
		if PlayerHorde() == false and TargetHorde(t) == false then
			return true
		end
		if PlayerHorde() == true and TargetHorde(t) == false then
			return false
		end
		if PlayerHorde == false and TargetHorde(t) == true then
			return false
		end
		end
	end

		-- Zone Check --
	ZoneHealCheck = nil
	function ZoneHealCheck(t)
		if GetZoneText() == &amp;quot;Winterspring&amp;quot; or GetZoneText() == &amp;quot;Blade&amp;apos;s Edge Mountains&amp;quot; or GetZoneText() == &amp;quot;The Storm Peaks&amp;quot; then
			if UnitExists(t) and SameFaction(t) == true then
				return true
			else
				return false
			end
		else
			return true
		end
	end
	
functionsloaded = true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Shadow Word: Death(Always)</Name><Default>false</Default><SpellID>48158</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt;= 99
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
and IsSpellInRange(GetSpellInfo(48158), &amp;quot;target&amp;quot;) == 1 
then return true end</Lua><RecastDelay>1</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Power Word: Shield(Focus)</Name><Default>false</Default><SpellID>48066</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;focus&amp;quot;) and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;) then
	local FocusHP = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
	--if not UnitDebuffID(&amp;quot;focus&amp;quot;, 6788)
	if threat(&amp;quot;focus&amp;quot;) &amp;gt;= 2
	 and UnitDebuffID(&amp;quot;focus&amp;quot;, 6788) == nil
	 --and UnitBuffID(members[i].Unit, 48066) == nil then
	 and not UnitBuffID(&amp;quot;focus&amp;quot;, 48066)
	 and ( UnitExists(&amp;quot;target&amp;quot;) and UnitName(&amp;quot;target&amp;quot;) ~= &amp;quot;Brutallus&amp;quot; or not UnitExists(&amp;quot;target&amp;quot;) )
	 --and FocusHP &amp;lt; 100 
	 then
		_castSpell(48066, &amp;quot;focus&amp;quot;)
		return true
	end
	if UnitExists(&amp;quot;target&amp;quot;) and UnitName(&amp;quot;target&amp;quot;) == &amp;quot;Brutallus&amp;quot;
	 and UnitCastingInfo(&amp;quot;target&amp;quot;) == &amp;quot;Meteor Slash&amp;quot;
	 and not UnitDebuffID(&amp;quot;focus&amp;quot;, 6788)
	 and not UnitBuffID(&amp;quot;focus&amp;quot;, 48066) then
		_castSpell(48066, &amp;quot;focus&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>All:Racial</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5782) --Fear

if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 8122) --Psychic scream
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5484) --Howl of Terror
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 2637) --Hibernate
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5246) --Intimidating Shout
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 6358) --Seduction
end
if pvpdebuffCheck ~= nil then
	if (expire - GetTime()) &amp;gt;= 4 then 
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Undead&amp;quot; and IsSpellKnown(7744) and not CooldownRemains(7744) then
		CastSpellByID(7744)
		return true
		end
	end
end

if UnitLevel(&amp;quot;target&amp;quot;) == -1
and UnitExists(&amp;quot;target&amp;quot;)
then
	--Troll Berserking--
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Troll&amp;quot; and IsSpellKnown(26297) and not CooldownRemains(26297) then
		CastSpellByID(26297)
		return true
	end
	--Orc Blood Fury 2--
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Orc&amp;quot; and IsSpellKnown(20572) and not CooldownRemains(20572) then
		CastSpellByID(20572)
		return true
	end
	--Orc Blood Fury--
	if UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Orc&amp;quot; and IsSpellKnown(33697) and not CooldownRemains(33697) then 
		CastSpellByID(33697)
		return true
	end
end

if UnitExists(&amp;quot;target&amp;quot;)
then
	--Dwarf Stoneform--
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 40 
	and UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Dwarf&amp;quot; and IsSpellKnown(20594) and not CooldownRemains(20594) then
		CastSpellByID(20594)
		return true
	end
	--Draenei Stoneform--
	if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 40 
	and UnitRace(&amp;quot;player&amp;quot;) == &amp;quot;Draenei&amp;quot; and IsSpellKnown(28880) and not CooldownRemains(28880) then
		CastSpellByID(28880)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>D:Heal Target Eng(Simp)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
  and UnitIsDead(&amp;quot;target&amp;quot;) == nil
  and UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
  and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
  and UnitInRange(&amp;quot;target&amp;quot;) ~= nil
  then PQR_CustomTarget = &amp;quot;target&amp;quot;
          PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
else 

PQR_CustomTarget = &amp;quot;player&amp;quot;
PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()
lowhpmembers = 0
needfortitude = 0
needshadow = 0
needspirit = 0
needshield = 0

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
  local memberhp = 100 * UnitHealth(member) / UnitHealthMax(member)
  local haveshield = nil
  if UnitInRange(member) 
  and UnitIsFriend(&amp;quot;player&amp;quot;, member)
  and UnitHasVehicleUI(member) == false
  and UnitIsDeadOrGhost(member) == nil  then
    if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 1 end
    if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
    if UnitBuffID(member, 53563) ~= nil then memberhp = memberhp + 7 end
    if UnitBuffID(member, 48162) == nil and UnitBuffID(member, 48161) == nil then needfortitude = needfortitude + 1 end
    if UnitBuffID(member, 48170) == nil and UnitBuffID(member, 48169) == nil then needshadow = needshadow + 1 end
    if UnitBuffID(member, 48074) == nil and UnitBuffID(member, 48073) == nil then needspirit = needspirit + 1 end
    if UnitDebuffID(member, 6788) == nil then needshield = needshield + 1 end
    if UnitDebuffID(member, 6788) then haveshield = true end
    if memberhp &amp;lt; 85 then lowhpmembers = lowhpmembers +1 end
    if memberhp &amp;lt; PQR_CustomTargetHP then
      PQR_CustomTarget = member
      PQR_CustomTargetHP = memberhp
    end
  end
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>S:Psychic Scream</Name><Default>false</Default><SpellID>10890</SpellID><Actions></Actions><Lua>if CheckInteractDistance(&amp;quot;target&amp;quot;, 3)
and UnitExists(&amp;quot;target&amp;quot;)
and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Guardian Spirit</Name><Default>false</Default><SpellID>47788</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 12
and not CooldownRemains(47788)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Flash Heal(Buff)</Name><Default>false</Default><SpellID>48071</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 50
and UnitBuffID(&amp;quot;player&amp;quot;,33151)
and PQR_IsCastingSpell(48071) == false
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>H:Renew(PvP)</Name><Default>false</Default><SpellID>48068</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 65
and UnitBuffID(PQR_CustomTarget, 48068,&amp;quot;player&amp;quot;) == nil
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability></PRIEST>