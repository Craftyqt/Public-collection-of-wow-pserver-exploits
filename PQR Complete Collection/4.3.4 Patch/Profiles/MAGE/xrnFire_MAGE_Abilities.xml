<?xml version="1.0" encoding="utf-8" ?><MAGE><Ability><Name>--- initialize ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_LoadLua(&amp;quot;PQR_xrn.lua&amp;quot;) then
  PQR_WriteToChat(&amp;quot;PQR_xrn.lua is missing. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
  PQR_StopRotation()
  return true
end

CastClick() 
HealEngine() 

if IsLeftAltKeyDown() 
or IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- special events ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Avoid sudden death on Ultraxion
local fadingtime = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,110070))
if fadingtime and fadingtime - GetTime() &amp;lt; 1.5 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

-- Avoid Hour of Twilight on Ultraxion, Delete next 3 lines if you are working as tank
local channelSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
if channelSpell == GetSpellInfo(109417) and endTime/1000 - GetTime() &amp;lt; 1.1 
then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

-- Avoid sudden death on Madness 
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 1 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ice Block</Name><Default>false</Default><SpellID>45438</SpellID><Actions></Actions><Lua>if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 10 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Molten Armor</Name><Default>false</Default><SpellID>30482</SpellID><Actions></Actions><Lua>if not HaveBuff(&amp;quot;player&amp;quot;,{30482,6117,7302}) 
and select(2,GetSpellCooldown(30482)) == 0 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Brilliance</Name><Default>false</Default><SpellID>1459</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and select(2,GetSpellCooldown(1459)) == 0 
then
  for i=1,#members do 
    if not HaveBuff(members[i].Unit,{1459,61316}) then return true end
  end
end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mana Gem</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) then 

  if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 90 
  and IsUsableItem(36799) 
  and GetItemCooldown(36799) == 0 
  and ( UnitBuffID(&amp;quot;player&amp;quot;,12042) or not IsSpellKnown(12042) )
  then 
    if not UnitCastingInfo(&amp;quot;player&amp;quot;) then UseItemByName(GetItemInfo(36799),nil) end 
    return true 
  end

else

  if GetItemCount(36799) == 0 
  and select(2,GetSpellCooldown(759)) == 0 
  and not PQR_IsMoving(1) 
  then 
    CastSpellByID(759) 
    PQR_DelayRotation(4) 
  end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Evocation</Name><Default>false</Default><SpellID>12051</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 35 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Assist Tank</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetNumPartyMembers() &amp;gt; 0 and not UnitInRaid(&amp;quot;player&amp;quot;) then

local heisthetank = nil

for i = 1, GetNumPartyMembers(), 1 do
  if UnitGroupRolesAssigned(&amp;quot;party&amp;quot;..tostring(i)) == &amp;quot;TANK&amp;quot; then heisthetank = &amp;quot;party&amp;quot;..tostring(i) end
end

if heisthetank 
and not UnitExists(&amp;quot;target&amp;quot;) 
and UnitAffectingCombat(heisthetank) 
and UnitAffectingCombat(heisthetank..&amp;quot;target&amp;quot;) 
and not UnitIsDead(heisthetank..&amp;quot;target&amp;quot;) 
and UnitCanAttack(&amp;quot;player&amp;quot;,heisthetank..&amp;quot;target&amp;quot;)
then TargetUnit(heisthetank..&amp;quot;target&amp;quot;) end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- offensive spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false
  local Spells = { 122, 1953, 80353, 66, 130, 543 }
  for _,v in ipairs(Spells) do PQR_AddToSpellDelayList(v,0,1) end
  PQR_AddToSpellDelayList(79476,58091,1)
end

if UnitIsDead(&amp;quot;target&amp;quot;) 
or ImmuneTarget(&amp;quot;target&amp;quot;) 
or not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
or tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(5,5),16) == 4
or ( not UnitAffectingCombat(&amp;quot;target&amp;quot;) and not SpecialAggro(&amp;quot;target&amp;quot;) and not UnitIsPlayer(&amp;quot;target&amp;quot;) )
or IsSpellInRange(tostring(GetSpellInfo(133)),&amp;quot;target&amp;quot;) == 0 
or UnitBuffID(&amp;quot;player&amp;quot;,32612)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spellsteal</Name><Default>false</Default><SpellID>30449</SpellID><Actions></Actions><Lua>if not StealThisBuff then
  function StealThisBuff(t)
    local buff = { 43242, 92965, 93631, 76634, 88186, 76307, 31884, 2825, 32182, 80353, 1719, 17, 33763, 96802, 
                         6940, 102599, 89542, 11426 }
    for _,v in ipairs(buff) do if UnitBuffID(t,v) then return true end end
  end
end

if StealThisBuff(&amp;quot;target&amp;quot;) then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Gloves</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10)

if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then 
  UseInventoryItem(10) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then 
  UseInventoryItem(13) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

if cd == 0 and havecd == 1  
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then 
  UseInventoryItem(14) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mirror Image</Name><Default>false</Default><SpellID>55342</SpellID><Actions></Actions><Lua>if UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; UnitHealthMax(&amp;quot;player&amp;quot;)*10 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flame Orb</Name><Default>false</Default><SpellID>82731</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Combustion</Name><Default>false</Default><SpellID>11129</SpellID><Actions></Actions><Lua>if HaveDebuff(&amp;quot;target&amp;quot;,44457,1,&amp;quot;PLAYER&amp;quot;) 
and HaveDebuff(&amp;quot;target&amp;quot;,12654,1,&amp;quot;PLAYER&amp;quot;) 
and HaveDebuff(&amp;quot;target&amp;quot;,{92315,11366},1,&amp;quot;PLAYER&amp;quot;) 
and not AboutToDie(&amp;quot;target&amp;quot;) 
and not HoldCooldown(1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Living bomb</Name><Default>false</Default><SpellID>44457</SpellID><Actions></Actions><Lua>if not CheckLV then
  function CheckLV(t)
    if IsSpellInRange(tostring(GetSpellInfo(44457)),t) == 1 
    and not UnitDebuffID(t,44457,&amp;quot;PLAYER&amp;quot;) 
    and not AboutToDie(t) 
    and UnitCanAttack(&amp;quot;player&amp;quot;,t) 
    and not UnitIsDeadOrGhost(t) 
    and not PQR_IsOutOfSight(t) 
    then return true end 
  end
end

if CheckLV(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot;
  return true
elseif CheckLV(&amp;quot;focus&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;focus&amp;quot;
  return true
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fire Blast</Name><Default>false</Default><SpellID>2136</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() 
and UnitDebuffID(&amp;quot;target&amp;quot;,44457,&amp;quot;PLAYER&amp;quot;) 
and UnitBuffID(&amp;quot;player&amp;quot;, 64343) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dragon&amp;apos;s Breath</Name><Default>false</Default><SpellID>31661</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() 
and not UnitChannelInfo(&amp;quot;player&amp;quot;)  
and CheckInteractDistance(&amp;quot;target&amp;quot;, 3) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blast Wave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and select(2,GetSpellCooldown(11113)) ~= 15 
then 
  CastSpellByName(tostring(GetSpellInfo(11113)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flamestrike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus() 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then 
  CastSpellByName(tostring(GetSpellInfo(2120)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fireball</Name><Default>false</Default><SpellID>133</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Scorch</Name><Default>false</Default><SpellID>2948</SpellID><Actions></Actions><Lua>if PQR_IsMoving(1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pyroblast</Name><Default>false</Default><SpellID>11366</SpellID><Actions></Actions><Lua>if not pyroFrame then
  pyroFrame = CreateFrame(&amp;quot;Frame&amp;quot;) 
  pyroFrame:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;) 
  pyroFrame:SetScript(&amp;quot;OnEvent&amp;quot;,function(...) if select(7,...)==11366 or select(7,...)==92315 then pyroTime = GetTime() end end)
end

if not pyroTime or GetTime() - pyroTime &amp;gt; 2.5 then
  if IsUsableSpell(92315) then CastSpellByName(GetSpellInfo(92315)) return true end 
  if not HaveDebuff(&amp;quot;target&amp;quot;,{22959,17800},1,&amp;quot;PLAYER&amp;quot;) and not PQR_IsMoving(1) then return true end 
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MAGE>