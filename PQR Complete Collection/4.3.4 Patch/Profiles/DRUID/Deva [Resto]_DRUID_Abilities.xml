<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>--- Targeting System</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
elseif SafeTarget(&amp;quot;mouseover&amp;quot;) and GetMouseFocus() ~= WorldFrame then 
  PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;mouseover&amp;quot;) 
else 
  lowhpmembers = 0
  missingfortitude = false
  missingshadow = false
  havemending = false
  priodispel = nil
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
    local memberhp = CalculateHP(member)
    if SafeTarget(member)  then
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 1 end
      if UnitBuffID(&amp;quot;player&amp;quot;, PQ_BeaconofLight) then memberhp = memberhp + 4 end
      if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
      if memberhp &amp;lt; 82 then lowhpmembers = lowhpmembers + 1 end
      if memberhp &amp;lt; PQR_CustomTargetHP then
        PQR_CustomTarget = member
        PQR_CustomTargetHP = memberhp
      end
      if DangerousMagic(member) and not DontDispel(member) then priodispel = member end 

    end
  end

  if priodispel then PQR_CustomTarget = priodispel end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Functions and Constants</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
	PQR_RotationStarted = false

PQR_WriteToChat(&amp;quot;|cff0088FFRestoration Druid Profile Version - |cff33CC00v 0.4&amp;quot;)
  function CalculateHP(t)
    local incomingheal = 0
    if UnitGetIncomingHeals(t) then incomingheal = UnitGetIncomingHeals(t)  end
    return 100 * ( UnitHealth(t) + incomingheal ) / UnitHealthMax(t)
  end

  function SafeTarget(t)
    if IsSpellInRange(tostring(GetSpellInfo(PQ_Rejuvenation)),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
    and PQR_IsOutOfSight(t) == false 
    then return true end 
  end

  -- Checking if there&amp;apos;s a dangerous Debuff we shouldn&amp;apos;t Cleanse
  --[[function DontDispel(t)
    local buff  = { 96328, 96325, 96326, 86788, 30108, 34914, 109325 } 
    for _,v in ipairs(buff) do 
    	if UnitDebuffID(t,v) then
    		if select(11, UnitDebuff(t, GetSpellInfo(v))) == 30108 then
    			if UnitDebuffID(t, 31117) then
    				if select(11, UnitDebuff(t, GetSpellInfo(31117))) == 31117 then
    					return false
    				end
    			elseif UnitDebuffID(t, 5782) then
    				return false
    			else
    		 		return true
    		 	end
    		 elseif UnitDebuffID(t, 109325) then
    		 	if UnitDebuffID(t, 110317) then
    		 		return false
    		 	else
    		 		return true
    		 	end
    		else
    		 	return true
    		end
    	end 
    end
  end]]--
  
  -- Rewrite
  function DontDispel(t)
      local buff  = { 96328, 96325, 96326, 86788, 30108, 34914, 109325 }
      local DontDispelCheck = false
      for i=1, #buff do
      	if UnitDebuffID(t, buff[i]) then
			if select(11, UnitDebuff(t, GetSpellInfo(buff[i]))) == 30108 then
		    	if UnitDebuffID(t, 31117) then
		    		if select(11, UnitDebuff(t, GetSpellInfo(31117))) == 31117 then
		    				DontDispelCheck = false
		    				break
		    		end
		    	elseif UnitDebuffID(t, 5782) then
		    			DontDispelCheck = false
		    	else
		    	 		DontDispelCheck = true
		    	end
		    elseif UnitDebuffID(t, 109325) then
		     	if UnitDebuffID(t, 110317) then
		     		DontDispelCheck = false
		     		break
		     	else
		     		DontDispelCheck = true
		     	end
		    else
		     	DontDispelCheck = true
		    end
		end
	  end
	  return DontDispelCheck
  end

  -- Checking if there&amp;apos;s a Dangerous Debuff we need to cleanse Immediately
  function DangerousMagic(t)
    local buff = { 5782, 118, 122, 339, 1499, 6358, 605, 20066, 853, 5484, 71757, 104601, 107629, 99567, 31117, 110317 }
    for _,v in ipairs(buff) do if UnitDebuffID(t,v) then return true end end
  end
  
  -- Checks if our Cleanse will have a valid Debuff to Cleanse
  function ValidDispel(t)
  	local HasValidDispel = false
  	local i = 1
  	local debuff = UnitDebuff(t, i)
  	while debuff do
  		local debuffType = select(5, UnitDebuff(t, i))
  		if debuffType == &amp;quot;Magic&amp;quot; or debuffType == &amp;quot;Poison&amp;quot; or debuffType == &amp;quot;Curse&amp;quot; then
  			HasValidDispel = true
  		end
  		i = i + 1
  		debuff = UnitDebuff(t, i)
  	end
  	return HasValidDispel
  end

	if PQR_LoadLua ~= nil then
		-- Load Data File
		if PQR_LoadLua(&amp;quot;PQR_Deva_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Deva_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

if PQR_LoadLua ~= nil then
	local CurrentSpec = GetPrimaryTalentTree()
	-- Reload Data File
	if PQR_SavedSpec ~= CurrentSpec or PQR_LevelInfo &amp;lt; UnitLevel(&amp;quot;player&amp;quot;) then
		PQR_LoadLua(&amp;quot;PQR_Deva_Data.lua&amp;quot;, true)
	end
end

if IsMounted() or GetShapeshiftForm() == 6 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Variables --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Set the Variable Cast Time based off Haste and Current Procs
local spellsToCheck = { PQ_Nourish, PQ_HealingTouch, PQ_Regrowth }
for i=1, #spellsToCheck do
 if PQ_Spell[spellsToCheck[i]] then
  PQ_Spell[spellsToCheck[i]].castTime = (select(7, GetSpellInfo(spellsToCheck[i])) / 1000)
 end
end

local manaToCheck = { PQ_Nourish, PQ_HealingTouch, PQ_Regrowth, PQ_WildGrowth, PQ_Barkskin, PQ_Lifebloom, PQ_Rejuvenation, PQ_Swiftmend }
for i=1, #manaToCheck do
	if PQ_Spell[manaToCheck[i]] then
		PQ_Spell[manaToCheck[i]].manaCost = select(4, GetSpellInfo(manaToCheck[i]))
	end
end

local SlashFocus     = &amp;quot;/tankswitch&amp;quot;

FocusSwitch = true
RejuvTank = true
RejuvSelf = false

-- Toggle tanks with /tankswitch
SLASH_TANKTOGGLE1 = SlashFocus
function SlashCmdList.TANKTOGGLE(msg, editbox)
  if GetNumRaidMembers() &amp;gt; 0 then
    local Current = GetUnitName(&amp;quot;focus&amp;quot;, true)
    for i  = 1, GetNumRaidMembers(), 1 do
      local member = &amp;quot;raid&amp;quot;..tostring(i)
      if UnitExists(member) and
         UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; and
         GetUnitName(member, true) ~= Current
      then
        FocusOn = GetUnitName(member, true)
        FocusSwitch = false
        break
      end
    end
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Preliminary Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local SpellInfo, _, _, _, _, endCast = UnitCastingInfo(&amp;quot;player&amp;quot;)
local SI = { 50464, 5185, 8936 }
-- If the heal would overheal the target to the % we set per heal of their health, Stop the Cast.

for i=1,#SI do
	if SpellInfo == GetSpellInfo(SI[1]) then
		if PQR_CustomTargetHP &amp;gt; PQ_Spell[SI[1]].overHealLimit then
			SpellStopCasting()
		end
	elseif SpellInfo == GetSpellInfo(SI[2]) then
		if PQR_CustomTargetHP &amp;gt; PQ_Spell[SI[2]].overHealLimit then
			SpellStopCasting()
		end
	elseif SpellInfo == GetSpellInfo(SI[3]) then
		if PQR_CustomTargetHP &amp;gt; PQ_Spell[SI[3]].overHealLimit then
			SpellStopCasting()
		end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wild Growth</Name><Default>false</Default><SpellID>48438</SpellID><Actions></Actions><Lua>--if PQ_Spell[PQ_WildGrowth].check then -- I think this is where the bug is, for some reason.
	if lowhpmembers &amp;gt;= PQ_Spell[PQ_WildGrowth].targetNumber then
		if PQ_Spell[PQ_WildGrowth].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;))
		and PQR_SpellAvailable(PQ_WildGrowth) then
			return true
		end
	end
--end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Innervate</Name><Default>false</Default><SpellID>29166</SpellID><Actions></Actions><Lua>if select(3, PQ_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; PQ_Spell[PQ_Innervate].playerMana then
	if PQR_SpellAvailable(PQ_Innervate) then
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Swiftmend Onya</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQ_Spell[PQ_Swiftmend].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;))
and PQR_SpellAvailable(PQ_Swiftmend) then
   local HRtarget = findGoodTarget()
   if HRtarget ~= nil then
  PQR_CustomTarget = HRtarget
  
		local Regrowth = UnitBuffID(HRtarget, 8936)
		local Rejuvenation = UnitBuffID(HRtarget, 774)
		
		if Rejuvenation == nil 
		and Regrowth == nil 
		and PQ_Spell[PQ_Rejuvenation].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) then
			CastSpellByID(774,HRtarget)
			return true
		else
			CastSpellByID(18562,HRtarget)
			return true
		end
   end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Spell Disabling ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 16870) -- Buff for Clearcasting
 and (select(7, UnitBuffID(&amp;quot;player&amp;quot;, 16870)) - GetTime()) &amp;gt; 2 then -- And more than 2 seconds remaining on buff
	PQ_Spell[PQ_Nourish].check = false
	PQ_Spell[PQ_Regrowth].targetHealth = 48
	PQ_Spell[PQ_HealingTouch].targetHealth = 78
else
	PQ_Spell[PQ_Nourish].check = true
	PQ_Spell[PQ_Regrowth].targetHealth = 28
	PQ_Spell[PQ_HealingTouch].targetHealth = 58
end

if GetPrimaryTalentTree() ~= 3 then
	local TimerReset
	if not TimerReset then TimerReset = GetTime() - 15 end
	if GetTime() - TimerReset &amp;gt; 15 then
		PQ_Notify(&amp;quot;You are not in Restoration Spec, this profile ONLY works in Restoration Spec. Please change.&amp;quot;)
		return true
	else
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Onya Target Finder --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if GetNumRaidMembers() &amp;gt; 0 then
hrtargethealth = PQ_Spell[PQ_Swiftmend].targetHealth
hrsecondaryhealth = PQ_Spell[PQ_Swiftmend].secondarytargetHealth
hrrange = PQ_Spell[PQ_Swiftmend].range
hrsecondarytargets = PQ_Spell[PQ_Swiftmend].targetNumber
else
hrtargethealth = PQ_Spell[PQ_Swiftmend].targetHealth
hrsecondaryhealth = PQ_Spell[PQ_Swiftmend].secondarytargetHealth
hrrange = PQ_Spell[PQ_Swiftmend].range
hrsecondarytargets = 1
end

if not onyainit then

function onyaGetPlayerMapPosition(unit)
  local x,y = GetPlayerMapPosition(unit)  
  return x,y
end

function NewScaleFactor(unit1,dist)
   local x1,y1 = onyaGetPlayerMapPosition(unit1)
   local x2,y2 = onyaGetPlayerMapPosition(&amp;quot;player&amp;quot;)
   local xx= x1 - x2
   local yy = y1 -y2
   sft = tostring (dist/sqrt(((xx) * (xx))  + (((yy) * 0.6666666666666) ^ 2)))
   return sft
end

function DistanceBetweenUnits(unit1,unit2)
   if unit2 == unit1 then return 0 end
   local x1,y1 = onyaGetPlayerMapPosition(unit1)
   local x2,y2 = onyaGetPlayerMapPosition(unit2)
   if x1 == 0 and y1 == 0 and x2 ==0 and y2 == 0 then return 0 end
   return (sqrt((((x2 - x1)  * sf) ^ 2)  + (((y2 - y1)  * sf / 1.5) ^ 2)))
end

function IsInRange(u1,u2)
  local range = DistanceBetweenUnits(member[u1].name,member[u2].name)
   if range &amp;lt;= hrrange  then
       return true
   end
end

function getDefHealth(unit)
   return (100 - member[unit].health)
end

function sortDefHealth(aUnit, anotherUnit)
    return getDefHealth(aUnit) &amp;gt; getDefHealth(anotherUnit)
end

function findGoodTarget()
   if table.maxn(hrtargets) ~=0 and table.maxn(hrsecondary) &amp;gt;= hrsecondarytargets then   
      table.sort(hrtargets, sortDefHealth)  
      table.sort(hrsecondary, sortDefHealth)
      for x = 1, table.maxn(hrtargets) do
          local inrangecount = 0
          for y = 1, table.maxn(hrsecondary) do
            if IsInRange(hrtargets[x],hrsecondary[y]) then inrangecount = inrangecount + 1 end
            if inrangecount == hrsecondarytargets then return member[hrtargets[x]].name end
          end
      end
   end
 end 


onyainit = true
end

local currentmap = GetMapInfo()
local currentlevel = tostring(GetCurrentMapDungeonLevel()) or &amp;quot;0&amp;quot;
local grp = &amp;quot;party&amp;quot;
local mems = GetNumPartyMembers()
if GetNumRaidMembers() &amp;gt; 0 then
  grp = &amp;quot;raid&amp;quot;
  mems = GetNumRaidMembers()
end

if (sfm ~= currentmap) or (sfl ~= currentlevel) then
  sf = 6000
  sfm = currentmap
  sfl = currentlevel
end

 for mmm = 1, mems do
   local checktarget = grp..tostring(mmm)
   local range = DistanceBetweenUnits(&amp;quot;player&amp;quot;,checktarget)
   if (range &amp;gt; 28) and (CheckInteractDistance(checktarget,1)) then
     sf =  NewScaleFactor(checktarget,28)
   end
   if (range &amp;gt; 11.11) and (CheckInteractDistance(checktarget,2)) then
      sf =  NewScaleFactor(checktarget,11.11)
   end
   if (range &amp;gt; 9.9) and (CheckInteractDistance(checktarget,3)) then
      sf =  NewScaleFactor(checktarget,9.9)
   end
   if (range &amp;gt; 40) and (UnitInRange(checktarget)) then
      sf =  NewScaleFactor(checktarget,40)
   end
 end
 
hrtargets = {}
hrsecondary = {} 
member = {}
 
for i = 0, mems, 1 do
   member[i] = {}
   if i==0 then member[i].name = &amp;quot;player&amp;quot; else member[i].name = grp..tostring(i) end
   local memberin = UnitGetIncomingHeals(member[i].name) or 0
   member[i].health= 100 * (UnitHealth(member[i].name)+ memberin ) / UnitHealthMax(member[i].name)
   if not UnitIsDeadOrGhost(member[i].name) then 
     if member[i].health &amp;lt; hrtargethealth 
        --and IsSpellInRange(&amp;quot;Swiftmend&amp;quot;, member[i].name) -- Bad idea.
        and IsSpellInRange(tostring(GetSpellInfo(18562)),member[i].name) -- Good idea!
       then table.insert(hrtargets,i) end
     if member[i].health &amp;lt; hrsecondaryhealth then table.insert(hrsecondary,i) end
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rejuvenation</Name><Default>false</Default><SpellID>774</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; PQ_Spell[PQ_Rejuvenation].targetHealth then
	if PQ_Spell[PQ_Rejuvenation].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) and PQR_SpellAvailable(PQ_Rejuvenation) and UnitBuffID(PQR_CustomTarget,PQ_Rejuvenation) == nil then
		CurrentHealth = PQR_CustomTargetHP
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Rejuvenation Target: &amp;quot;..UnitName(PQR_CustomTarget, true), 10, &amp;quot;00B500&amp;quot;)
		CastSpellByID(PQ_Rejuvenation,PQR_CustomTarget)
		return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Leveling Layout Example --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- How to code in an ability that makes you leveling profile perfect for you :D

-- Set the the level cap you want (IE if we are under level 70)
if UnitLevel(&amp;quot;player&amp;quot;) &amp;lt; 70 then
	-- All main healing abilities are based off this variable targetHealth, change that
	-- and you change how the heal works
	PQ_Spell[PQ_Nourish].targetHealth = 70
	PQ_Spell[PQ_HealingTouch].targetHealth = 30
	PQ_Spell[PQ_Regrowth].targetHealth = 20
	PQ_Spell[PQ_Rejuvenation].targetHealth = 80
end

-- You can setup more than just one level cap at a time with this. Plan you&amp;apos;re whole trip to 85 ahead of time :D
-- Raiders can also set values for themselves depending on how their gear is. I bse my numbers off whats best for me, that may not work for your.
if UnitLevel(&amp;quot;player&amp;quot;) &amp;lt; 50 then
	PQ_Spell[PQ_Nourish].targetHealth = 60
	PQ_Spell[PQ_HealingTouch].targetHealth = 30
	PQ_Spell[PQ_Regrowth].targetHealth = 20
	PQ_Spell[PQ_Rejuvenation].targetHealth = 80
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Test Abilities</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Spells = { PQ_Nourish, PQ_HealingTouch, PQ_Regrowth, PQ_Rejuvenation }
if not TimeTester then TimeTester = 0 end

if IsLeftControlKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - TimeTester &amp;gt; 3 then
	TimeTester = GetTime()
	print(&amp;quot;PQR_CustomTarget is: &amp;quot;..PQR_CustomTarget)
	for i=1, #PQ_Spells do
		print(PQ_Spell[v].targetHealth)
		print(PQ_Spell[v].manaCost)
		if PQ_Spell[v].check == true then
			print(select(1, GetSpellInfo(v))..&amp;quot; is Enabled&amp;quot;)
		end
		if PQ_Spell[v].isKnown == true then
			print(select(1, GetSpellInfo(v))..&amp;quot; is Known&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ability Tester</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not TestTimer then TestTimer = GetTime() i = 1 end

if GetTime() - TestTimer &amp;gt;= 10 then
	i = i + 1
	TestTimer = GetTime()
	PQ_Notify(&amp;quot;This is Message &amp;quot;.. i)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Targeting System (NO MO) --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
else
  lowhpmembers = 0
  priodispel = nil
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
    local memberhp = CalculateHP(member)
    if SafeTarget(member)  then
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 1 end
      if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
      if memberhp &amp;lt; 82 then lowhpmembers = lowhpmembers + 1 end
		-- Searing Plasma Check
		--[[local searingplasmadebuffs = { 105479,109363,109364 }
			for i=1, #searingplasmadebuffs do
				if UnitDebuffID(member,searingplasmadebuffs[i]) then
					memberhp = memberhp - 10
				end
			end]]--
      if memberhp &amp;lt; PQR_CustomTargetHP then
        PQR_CustomTarget = member
        PQR_CustomTargetHP = memberhp
      end
      if DangerousMagic(member) and not DontDispel(member) then priodispel = member end 

    end
  end

  if priodispel then PQR_CustomTarget = priodispel end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Raiding/Arena Layout Example --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Only takes effect when we&amp;apos;re 85
if UnitLevel(&amp;quot;player&amp;quot;) == 85 then
	-- If we are in a 5 man instance
	if IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;party&amp;quot; then
		PQ_Spell[PQ_Nourish].targetHealth = 92
		PQ_Spell[PQ_Nourish].check = true
		PQ_Spell[PQ_HealingTouch].targetHealth = 58
		PQ_Spell[PQ_Regrowth].targetHealth = 32
		PQ_Spell[PQ_Swiftmend].check = true
		PQ_Spell[PQ_Swiftmend].targetHealth = 80
		PQ_Spell[PQ_Rejuvenation].targetHealth = 95
	-- If we are in a raid of any size
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;raid&amp;quot; then
		PQ_Spell[PQ_Nourish].targetHealth = 90
		PQ_Spell[PQ_Nourish].check = true
		PQ_Spell[PQ_HealingTouch].targetHealth = 65
		PQ_Spell[PQ_Regrowth].targetHealth = 25
		PQ_Spell[PQ_Swiftmend].check = true
		PQ_Spell[PQ_Swiftmend].targetHealth = 85
		PQ_Spell[PQ_Rejuvenation].targetHealth = 93
	-- If we are in a Battleground
	elseif IsInInstance() and select(2, GetInstanceInfo()) == &amp;quot;pvp&amp;quot; and IsActiveBattlefieldArena() == 0 then
		PQ_Spell[PQ_Nourish].targetHealth = 92
		PQ_Spell[PQ_Nourish].check = true
		PQ_Spell[PQ_HealingTouch].targetHealth = 65
		PQ_Spell[PQ_Regrowth].targetHealth = 38
		PQ_Spell[PQ_Swiftmend].check = false
		PQ_Spell[PQ_Rejuvenation].targetHealth = 95
		PQ_Spell[PQ_Barkskin].playerHealth = 60
	-- If we are in an Arena Battle
	elseif IsInInstance() and IsActiveBattlefieldArena() == 1 then
		PQ_Spell[PQ_Nourish].check = false
		PQ_Spell[PQ_HealingTouch].targetHealth = 75
		PQ_Spell[PQ_Regrowth].targetHealth = 70
		PQ_Spell[PQ_Swiftmend].check = false
		PQ_Spell[PQ_Rejuvenation].targetHealth = 95
	-- Open world catch-all
	else
		PQ_Spell[PQ_Nourish].targetHealth = 92
		PQ_Spell[PQ_Nourish].check = true
		PQ_Spell[PQ_HealingTouch].targetHealth = 58
		PQ_Spell[PQ_Regrowth].targetHealth = 32
		PQ_Spell[PQ_Swiftmend].check = true
		PQ_Spell[PQ_Swiftmend].targetHealth = 85
		PQ_Spell[PQ_Rejuvenation].targetHealth = 95
	end
end

-- We can set global settings as well. Such as how much overheal to allow before saying NO.
PQ_Spell[PQ_Nourish].overHealLimit = 107
PQ_Spell[PQ_HealingTouch].overHealthLimit = 112
PQ_Spell[PQ_Regrowth].overHealLimit = 102</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Encounters --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Special Event --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Edited with Mentally&amp;apos;s Code
-- Fading Light
local FadingLight = {110070, 105925, 109075, 110079, 110069, 110070, 110080, 110068, 110078}
for i,v in ipairs(FadingLight) do
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, v)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;, v)) - GetTime() &amp;lt; 1.2 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end

-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
local HourOfTwilight = {109415, 106371, 109416, 109415, 109417}
	
for i,v in ipairs(HourOfTwilight) do
	if HoT == GetSpellInfo(v) and timer/1000 - GetTime() &amp;lt; 1.2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end

-- Try to aim on Darkmoon Faerie Cannon
local canontime = select(7,UnitBuffID(&amp;quot;player&amp;quot;,102116))
if canontime and canontime - GetTime() &amp;lt; 1.07 then CancelUnitBuff(&amp;quot;player&amp;quot;,&amp;quot;Magic Wings&amp;quot;) end
-- Code provided by Kickmydog
-- Avoid Fragmentation on Madness
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 3 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Nourish</Name><Default>false</Default><SpellID>50464</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; PQ_Spell[PQ_Nourish].targetHealth then
	if PQ_Spell[PQ_Nourish].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) and PQR_SpellAvailable(PQ_Nourish) then
		CurrentHealth = PQR_CustomTargetHP
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Nourish Target: &amp;quot;..UnitName(PQR_CustomTarget, true), 10, &amp;quot;00B500&amp;quot;)
		CastSpellByID(PQ_Nourish,PQR_CustomTarget)
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Remove Corruption</Name><Default>false</Default><SpellID>2782</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;gt; 80 then
	local group = &amp;quot;party&amp;quot;
	local members = GetNumPartyMembers()
	local needToCleanse = false
	if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end
	
	for i=1, members, 1 do 
		local PQ_CleanseTarget = group..tostring(i)
		if not DontDispel(PQ_CleanseTarget) 
		  and ValidDispel(PQ_CleanseTarget)
		  and UnitCanCooperate(&amp;quot;player&amp;quot;, PQ_CleanseTarget)
		  and IsSpellInRange(GetSpellInfo(PQ_RemoveCorruption), PQ_CleanseTarget) == 1
		  and not PQR_IsOutOfSight(PQ_CleanseTarget) then
			PQR_CustomTarget = PQ_CleanseTarget
			needToCleanse = true
		end
	end
	if not DontDispel(&amp;quot;player&amp;quot;) and ValidDispel(&amp;quot;player&amp;quot;) then 
		PQR_CustomTarget = &amp;quot;player&amp;quot; 
		return true 
	elseif needToCleanse == true then 
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Remove Corruption (Priority)</Name><Default>false</Default><SpellID>2782</SpellID><Actions></Actions><Lua>if not DontDispel(PQR_CustomTarget) 
  and DangerousMagic(PQR_CustomTarget) 
  and ValidDispel(PQR_CustomTarget) 
  and PQR_CustomTargetHP &amp;gt;= 50 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Healing Touch</Name><Default>false</Default><SpellID>5185</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; PQ_Spell[PQ_HealingTouch].targetHealth then
	if PQ_Spell[PQ_HealingTouch].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) and PQR_SpellAvailable(PQ_HealingTouch) then
		CurrentHealth = PQR_CustomTargetHP
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;HealingTouch Target: &amp;quot;..UnitName(PQR_CustomTarget, true), 10, &amp;quot;00B500&amp;quot;)
		CastSpellByID(PQ_HealingTouch,PQR_CustomTarget)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Regrowth</Name><Default>false</Default><SpellID>8936</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; PQ_Spell[PQ_Regrowth].targetHealth then
	if PQ_Spell[PQ_Regrowth].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;))  and PQR_SpellAvailable(PQ_Regrowth) and UnitBuffID(PQR_CustomTarget,PQ_Regrowth) == nil then
		if UnitBuffID(PQR_CustomTarget,PQ_Regrowth) == nil then
			CurrentHealth = PQR_CustomTargetHP
			PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Regrowth Target: &amp;quot;..UnitName(PQR_CustomTarget, true), 10, &amp;quot;00B500&amp;quot;)
			CastSpellByID(PQ_Regrowth,PQR_CustomTarget)
			return true
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Barkskin</Name><Default>false</Default><SpellID>22812</SpellID><Actions></Actions><Lua>if PQ_Spell[PQ_Barkskin].playerHealth &amp;gt; PQ_UnitInfo(&amp;quot;player&amp;quot;) 
  and PQR_SpellAvailable(PQ_Barkskin)
  and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
		CastSpellByID(PQ_Barkskin,&amp;quot;player&amp;quot;)
		return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mark of the Wild</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuff(&amp;quot;player&amp;quot;, GetSpellInfo(PQ_MotW)) or UnitBuffID(&amp;quot;player&amp;quot;, 20217) then
	return false
else
	CastSpellByID(PQ_MotW, &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lifebloom</Name><Default>false</Default><SpellID>33763</SpellID><Actions></Actions><Lua>local LifebloomExpire = 0
local LifebloomStacks = 0

if PQ_Spell[PQ_Lifebloom].check 
 and PQ_Spell[PQ_Lifebloom].isKnown then
		
	--------------------------------
	-- Select a New Lifebloom Target
	--------------------------------
	if not PQ_LifebloomTargetGUID then PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;player&amp;quot;) end
	
	if UnitExists(&amp;quot;focus&amp;quot;) and SafeTarget(&amp;quot;focus&amp;quot;) then
		PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;focus&amp;quot;)
	end
	if IsLeftControlKeyDown() 
	 and not GetCurrentKeyBoardFocus()
	 and UnitExists(&amp;quot;mouseover&amp;quot;)
	 and UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) then
		PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;mouseover&amp;quot;)
		PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
		return true
	end
	
	
	--------------------------------
	-- Search for a Lifebloomed Target
	--------------------------------
	local PQ_TargetWithLifebloom, LifebloomInRange
	local group, members = &amp;quot;party&amp;quot;, GetNumPartyMembers()
	if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end
	for i=0, members, 1 do
		local member = group..tostring(i)
		if PQ_LifebloomTargetGUID == UnitGUID(member) then
			if IsSpellInRange(GetSpellInfo(33763), member) == 1
			 and not PQR_IsOutOfSight(member) then
			  	PQ_TargetWithLifebloom = member
			  	LifebloomInRange = true
			  	break
			 else
			 	PQ_TargetWithLifebloom = member
			 	LifebloomInRange = false
			 	break
			 end
		end
		if i == members  then
			if PQ_LifebloomTargetGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				PQ_TargetWithLifebloom = &amp;quot;player&amp;quot;
				LifebloomInRange = true
			end
		end
	end	


	if PQ_TargetWithLifebloom then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Lifebloom Target: &amp;quot;..UnitName(PQ_TargetWithLifebloom, true), 10, &amp;quot;00B500&amp;quot;)
	end
	--------------------------------
	-- Lifebloom a Target
	--------------------------------
	if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() then
		local RepeatTimer
		if not RepeatTimer then RepeatTimer = GetTime() - 5 end
		if GetTime() - RepeatTimer &amp;gt;= 5 then
			RepeatTimer = GetTime()
			if PQ_TargetWithLifebloom then
				print(PQ_TargetWithLifebloom)
				print(UnitName(PQ_TargetWithLifebloom, true))
			else print(&amp;quot;nil&amp;quot;) end
			if LifebloomInRange then
				print(&amp;quot;true&amp;quot;)
			else print(&amp;quot;false&amp;quot;) end
			print(tostring(PQ_LifebloomTargetGUID))
		end
	end
	if PQ_TargetWithLifebloom and LifebloomInRange then
		if not UnitBuffID(PQ_TargetWithLifebloom, 33763) then
			PQR_CustomTarget = PQ_TargetWithLifebloom
			return true
		else
			LifebloomExpire = select(7, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime()
			LifebloomStacks = select(4, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;))
			if LifebloomExpire &amp;lt;= 3 or LifebloomStacks &amp;lt; 3 then
				PQR_CustomTarget = PQ_TargetWithLifebloom
				return true
			end
		end
	elseif PQ_TargetWithLifebloom and not LifebloomInRange then
		local LifebloomExpire = select(7, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime()
		local LifebloomStacks = select(4, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;))
		if LifebloomExpire &amp;lt;= 3 or LifebloomStacks &amp;lt; 3 then
			if not PQ_LifebloomReminderTimer then PQ_LifebloomReminderTimer = GetTime() - 10 end
			if GetTime() - PQ_LifebloomReminderTimer &amp;gt;= 10 then
				PQ_LifebloomReminderTimer = GetTime()
				PQ_Notify(&amp;quot;|cffFF0066Your |cffFFFF77Lifebloom |cffFF0066is about to drop on a Target Outside of your Lifebloom Range, or Line of Sight!!!&amp;quot;)
				return false
			end
		end
	elseif not PQ_TargetWithLifebloom and not LifebloomInRange then
		PQ_Notify(&amp;quot;|cffFF0066We couldn&amp;apos;t find a target with |cffFFFF77Lifebloom|cffFF0066. Defaulting back to |cffFF6600Player.&amp;quot;)
		PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;player&amp;quot;)
		PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Focus Switcher --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FocusOn ~= false and
   FocusSwitch == false
then

  FocusUnit(FocusOn)
  FocusOn = false

elseif FocusSwitch == true and
         UnitExists(&amp;quot;target&amp;quot;) and
         UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == nil and
         UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) == nil
then

  local Current = GetUnitName(&amp;quot;focus&amp;quot;, true)

  for i  = 1, GetNumRaidMembers(), 1 do
    local member = &amp;quot;raid&amp;quot;..tostring(i)
    if UnitExists(member) and
       UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; and
       UnitThreatSituation(member, &amp;quot;target&amp;quot;) == 3 and
       GetUnitName(member, true) ~= Current
    then
      FocusUnit(member)
      break
    end
  end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Wild Growth Onya</Name><Default>false</Default><SpellID>48438</SpellID><Actions></Actions><Lua>hrtargethealth = PQ_Spell[PQ_WildGrowth].targetHealth
hrsecondaryhealth = PQ_Spell[PQ_WildGrowth].targetHealth
hrrange = PQ_Spell[PQ_WildGrowth].range
hrsecondarytargets = PQ_Spell[PQ_WildGrowth].targetNumber

if PQ_Spell[PQ_WildGrowth].manaCost &amp;lt; select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) and PQR_SpellAvailable(PQ_WildGrowth) then
	local HRtarget = findGoodTarget()
	if HRtarget ~= nil then
		PQR_CustomTarget = HRtarget
		CastSpellByID(PQ_WildGrowth,HRtarget)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lifebloom 2</Name><Default>false</Default><SpellID>33763</SpellID><Actions></Actions><Lua>local LifebloomExpire = 0
local LifebloomStacks = 0

if PQ_Spell[PQ_Lifebloom].check 
 and PQ_Spell[PQ_Lifebloom].isKnown then
		
	--------------------------------
	-- Select a New Lifebloom Target
	--------------------------------
	if not PQ_LifebloomTargetGUID then PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;player&amp;quot;) end

	if UnitExists(&amp;quot;focus&amp;quot;) and SafeTarget(&amp;quot;focus&amp;quot;) then
		PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;focus&amp;quot;)
		if not UnitBuffID(&amp;quot;focus&amp;quot;, PQ_Lifebloom, &amp;quot;PLAYER&amp;quot;) then 
			PQR_CustomTarget = &amp;quot;focus&amp;quot;
			return true 
		end
	elseif IsRightControlKeyDown() 
	 and not GetCurrentKeyBoardFocus()
	 and UnitExists(&amp;quot;mouseover&amp;quot;)
	 and UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) then
		PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;mouseover&amp;quot;)
		PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
		return true
	end
	
	
	--------------------------------
	-- Search for a Lifebloomed Target
	--------------------------------
	local PQ_TargetWithLifebloom, LifebloomInRange
	local group, members = &amp;quot;party&amp;quot;, GetNumPartyMembers()
	if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end
	for i=0, members, 1 do
		local member = group..tostring(i)
		if PQ_LifebloomTargetGUID == UnitGUID(member) then
			if UnitBuffID(member, 33763) then
				if IsSpellInRange(GetSpellInfo(33763), member) == 1
				 and not PQR_IsOutOfSight(member) then
				  	PQ_TargetWithLifebloom = member
				  	LifebloomInRange = true
				  	break
				 else
				 	PQ_TargetWithLifebloom = member
				 	LifebloomInRange = false
				 	break
				 end
			end
		end
		if i == members  then
			if PQ_LifebloomTargetGUID == UnitGUID(&amp;quot;player&amp;quot;) then
				PQ_TargetWithLifebloom = &amp;quot;player&amp;quot;
				LifebloomInRange = true
			end
		end
	end	


	if PQ_TargetWithLifebloom then
		PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Lifebloom Target: &amp;quot;..UnitName(PQ_TargetWithLifebloom, true), 10, &amp;quot;00B500&amp;quot;)
	end
	--------------------------------
	-- Lifebloom a Target
	--------------------------------
	if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() then
		local RepeatTimer
		if not RepeatTimer then RepeatTimer = GetTime() - 5 end
		if GetTime() - RepeatTimer &amp;gt;= 5 then
			RepeatTimer = GetTime()
			if PQ_TargetWithLifebloom then
				print(PQ_TargetWithLifebloom)
				print(UnitName(PQ_TargetWithLifebloom, true))
			else print(&amp;quot;nil&amp;quot;) end
			if LifebloomInRange then
				print(&amp;quot;true&amp;quot;)
			else print(&amp;quot;false&amp;quot;) end
			print(tostring(PQ_LifebloomTargetGUID))
		end
	end
	if not PQ_TargetWithLifebloom and not LifebloomInRange then
		PQ_Notify(&amp;quot;|cffFF0066We couldn&amp;apos;t find a target with |cffFFFF77Lifebloom|cffFF0066. Defaulting back to |cffFF6600Player.&amp;quot;)
		PQ_LifebloomTargetGUID = UnitGUID(&amp;quot;player&amp;quot;)
		PQR_CustomTarget = &amp;quot;player&amp;quot;
			return true
	elseif PQ_TargetWithLifebloom and LifebloomInRange then
		if not UnitBuffID(PQ_TargetWithLifebloom, 33763) then
			PQR_CustomTarget = PQ_TargetWithLifebloom
			return true
		else
			LifebloomExpire = select(7, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime()
			LifebloomStacks = select(4, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;))
			if LifebloomExpire &amp;lt;= 3 or LifebloomStacks &amp;lt; 3 then
				PQR_CustomTarget = PQ_TargetWithLifebloom
				return true
			end
		end
	elseif PQ_TargetWithLifebloom and not LifebloomInRange then
		local LifebloomExpire = select(7, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;)) - GetTime()
		local LifebloomStacks = select(4, UnitBuffID(PQ_TargetWithLifebloom, 33763, &amp;quot;PLAYER&amp;quot;))
		if LifebloomExpire &amp;lt;= 3 or LifebloomStacks &amp;lt; 3 then
			if not PQ_LifebloomReminderTimer then PQ_LifebloomReminderTimer = GetTime() - 10 end
			if GetTime() - PQ_LifebloomReminderTimer &amp;gt;= 10 then
				PQ_LifebloomReminderTimer = GetTime()
				PQ_Notify(&amp;quot;|cffFF0066Your |cffFFFF77Lifebloom |cffFF0066is about to drop on a Target Outside of your Lifebloom Range, or Line of Sight!!!&amp;quot;)
				return false
			end
		end
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DRUID>