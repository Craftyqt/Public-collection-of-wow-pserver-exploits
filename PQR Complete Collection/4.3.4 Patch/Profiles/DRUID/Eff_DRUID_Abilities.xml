<?xml version="1.0" encoding="utf-8" ?><DRUID><Ability><Name>Healing Touch</Name><Default>false</Default><SpellID>5185</SpellID><Actions></Actions><Lua>-- Check if targets HP is &amp;lt;= 40% and Nature&amp;apos;s Swiftness CD
if PQR_CustomTargetHP &amp;lt;= 40 and
   GetSpellCooldown(17116) == 0 and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then
 
  -- Cast it!
  CastSpellByID(17116)

end

-- Check player is not moving, or has Nature&amp;apos;s Swiftness
if ( UnitAura(&amp;quot;player&amp;quot;, 17116) or
   PQR_IsMoving(1) == false ) and
   PQR_CustomTargetHP &amp;lt; 65 and
   spellCheck(5185, PQR_CustomTarget) == 1
then

  -- Cast it!
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Innervate</Name><Default>false</Default><SpellID>29166</SpellID><Actions></Actions><Lua>-- Check mana is &amp;lt; 65% and CD is up
if Mana &amp;lt; 65 and
   GetSpellCooldown(29166) == 0 and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then

  -- Cast it!
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Lifebloom</Name><Default>false</Default><SpellID>33763</SpellID><Actions></Actions><Lua>local CastOn = &amp;quot;focus&amp;quot;
local Name,_,_,Stacks,_,_,Duration = UnitBuffID(CastOn, 33763)

-- Set target to heal, defa/focuults to focus, player if none found
-- Also allows for casting on custom target when in tree of life
if UnitAura(&amp;quot;player&amp;quot;, 33891) and
   UnitExists(PQR_CustomTarget) and
   Name ~= nil and
   Stacks == 3 and
   Duration - GetTime() &amp;gt; 3
then
  CastOn = PQR_CustomTarget
end

-- Basic exists, not dead, is friendly, in range and not LoS checks
if spellCheck(33763, CastOn) == 1
then

  -- Get the LB stacks/duration
  local _,_,_,Stacks,_,_,Duration = UnitBuffID(CastOn, 33763)

  -- Check player is not holding right shift to let it bloom
  if IsRightAltKeyDown() == nil then
  
    -- Check LB stack doesn&amp;apos;t exist, is less than 3 or is about to expire
    if Stacks == nil or
       ( Stacks ~= nil and Stacks &amp;lt; 3 ) or
       ( Stacks ~= nil and Duration - GetTime() &amp;lt;= 3 )
    then
	
      -- Cast it!
      PQR_CustomTarget = CastOn
      return true
	  
    end
	
  end

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Nourish</Name><Default>false</Default><SpellID>50464</SpellID><Actions></Actions><Lua>if PQR_IsMoving(1) == false and
   PQR_CustomTargetHP &amp;lt; 85 and
   spellCheck(50464, PQR_CustomTarget) == 1
then

  -- Cast it!
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Regrowth</Name><Default>false</Default><SpellID>8936</SpellID><Actions></Actions><Lua>-- Check for Clearcasting and the last Nature&amp;apos;s Grace Proc
local Regrowth     = UnitBuffID(PQR_CustomTarget, 8936)
local Clearcasting = UnitBuffID(&amp;quot;player&amp;quot;, 16870)
local GraceProc    =  GetTime() - NaturesGrace

-- Check if either Clearcasting is up, Natures Grace is off CD or target is very low
-- As well as a few other basic movement or mana checks
if ( Clearcasting ~= nil or
   GraceProc &amp;gt; 60 or
   PQR_CustomTargetHP &amp;lt; 35 ) and
   PQR_CustomTargetHP &amp;lt; 55 and
   Regrowth == nil and
   Mana &amp;gt; 15 and
   PQR_IsMoving(1) == false and 
   spellCheck(8936, PQR_CustomTarget) == 1
then

  -- Update last proc time and cast it!
  NaturesGrace = GetTime()
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Rejuvenation</Name><Default>false</Default><SpellID>774</SpellID><Actions></Actions><Lua>-- Self and Focus Rejuv
RejuvUnit(&amp;quot;player&amp;quot;)
RejuvUnit(&amp;quot;focus&amp;quot;)

-- Get targets Rejuv status
local Rejuvenation = UnitBuffID(PQR_CustomTarget, 774)
local Current, Ground = GetUnitSpeed(PQR_CustomTarget)

-- Check HP, current Rejuv and if mounted
if PQR_CustomTargetHP &amp;lt; 95 and
   Rejuvenation == nil and
   Ground &amp;lt; 16 and
   spellCheck(774, PQR_CustomTarget) == 1
then

  -- Cast it!
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Swiftmend</Name><Default>false</Default><SpellID>18562</SpellID><Actions></Actions><Lua>-- Get targets Rejuv, Regrowth and movement status
local Rejuvenation = UnitBuffID(PQR_CustomTarget, 774)
local Regrowth = UnitBuffID(PQR_CustomTarget, 8936)

-- Check Rejuv status, HP and Swiftmend CD
if GetSpellCooldown(18562) == 0 and
   ( Rejuvenation ~= nil or Regrowth ~= nil ) and
   PQR_CustomTargetHP &amp;lt; 95 and
   GetUnitSpeed(PQR_CustomTarget) == 0 and
   spellCheck(18562, PQR_CustomTarget) == 1
then

  -- Cast it!
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Tranquility</Name><Default>false</Default><SpellID>740</SpellID><Actions></Actions><Lua>-- Check player is not moving, it&amp;apos;s off CD and they&amp;apos;re holding Left Shift
if PQR_IsMoving(1) == false and
   GetSpellCooldown(740) == 0 and
   IsLeftControlKeyDown() and
   GetCurrentKeyBoardFocus() == nil and
   IsMounted() == nil and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
 then

  -- Cast it!
  SpellStopCasting()
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Wild Growth</Name><Default>false</Default><SpellID>48438</SpellID><Actions></Actions><Lua>-- Check Wild Growth CD and HP
if GetSpellCooldown(48438) == 0 and
   PQR_CustomTargetHP &amp;lt; 95 and
   spellCheck(43438, PQR_CustomTarget) == 1
then

  -- Cast it!
   return true

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Tree of Life</Name><Default>false</Default><SpellID>33891</SpellID><Actions></Actions><Lua>-- Make sure it&amp;apos;s not already on CD and that the user is holding left shift to activate
if IsLeftShiftKeyDown() and
   GetCurrentKeyBoardFocus() == nil and
   GetSpellCooldown(33891) == 0 and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
then

  -- Cast it
  SpellStopCasting()
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>--- Defensive Spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Mana check for following abilities
Mana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

-- Group check for targeting and dispelling
GroupType        = &amp;quot;party&amp;quot;
GroupMembers = ( GetNumPartyMembers() + 1 )

if GetNumRaidMembers() &amp;gt; 0 then
  GroupType        = &amp;quot;raid&amp;quot;
  GroupMembers = GetNumRaidMembers()
end

-- General state checks to stop continuation
if IsMounted() or
   UnitChannelInfo(&amp;quot;player&amp;quot;) or
   UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
then

  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>--- Offensive Spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Stop processing if dead
if UnitIsDeadOrGhost(&amp;quot;player&amp;quot;)
then

  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Remove Corruption</Name><Default>false</Default><SpellID>2782</SpellID><Actions></Actions><Lua>-- Check player is holding right alt
if ( ( IsRightShiftKeyDown() and
   GetCurrentKeyBoardFocus() == nil ) or
   GetCVar(&amp;quot;decurse&amp;quot;) == &amp;quot;1&amp;quot; ) and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then

  -- Loop found Members
  for i = 1, GroupMembers, 1 do

    local HasDebuff = false

    -- Change to party/raid member if found
    if GroupType == &amp;quot;party&amp;quot; and GroupMembers &amp;gt; 1 and i &amp;gt; 1 then Member = GroupType..tostring(( i - 1 ))
    elseif GroupType == &amp;quot;raid&amp;quot; then Member = GroupType..tostring(i)
    else Member = &amp;quot;player&amp;quot; end

    -- Get and Check Debuffs
    for k,d in ipairs(Debuffs) do
      local _,_,_,_,Type,Duration,Expires = UnitDebuff(Member, d)
      if ( Type == &amp;quot;Curse&amp;quot; or Type == &amp;quot;Poison&amp;quot; or Type == &amp;quot;Magic&amp;quot; ) and
         Expires - GetTime() &amp;gt; 2
      then
        HasDebuff = d
      end
    end
   
    -- General range/LoS checks if there is something to dispell
    if HasDebuff ~= false and
       spellCheck(2782, PQR_CustomTarget) == 1 and
       GetTime() - LastMessage &amp;gt;= 2
    then

      -- Print Message
      print(&amp;quot;Removing&amp;quot;, HasDebuff, &amp;quot;from&amp;quot;, classColor(UnitName(Member), false))
      LastMessage = GetTime()

      -- Set them as custom target and cast
      PQR_CustomTarget = Member
      return true

    end

  end

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>--- Functions ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_MYCONSTANTS then

--------------------
--  CONFIG --
--------------------

-- List of debuffs to be dispelled by Remove Corruption
Debuffs = { &amp;quot;Corruption&amp;quot;, &amp;quot;Immolate&amp;quot;, &amp;quot;Soul Burn&amp;quot;, &amp;quot;Shadow Word: Pain&amp;quot;, &amp;quot;Twilight Sheer&amp;quot;, &amp;quot;Disrupting Shadows&amp;quot;, &amp;quot;Shackles of Ice&amp;quot; }

-- Change depending on if you have Nature&amp;apos;s Cure or not
DispellEnhance = true

-- Enable or Disable the optional ignore player functions
IgnorePlayers = true

-- Enable or Disable the optional focus switching based on target agro
FocusSwitch = true

-- Customise slash commands
-- If you want to make them into a macro simply change the name below to avoid any checks Blizzard may do
local SlashBlacklist = &amp;quot;/blclear&amp;quot;
local SlashDecurse = &amp;quot;/decurse&amp;quot;
local SlashFocus     = &amp;quot;/tankswitch&amp;quot;
local SlashRejuv     = &amp;quot;/rejuv&amp;quot;

-----------------------------------------
-- GLOBAL VARIABLES --
-----------------------------------------

FocusOn = false
NeedMotW = false
CurrentEncounter = &amp;quot;false&amp;quot;
NaturesGrace = 0
LastMessage = 0
IgnoreList = { }

--------------------------
-- CVAR TEST --
--------------------------
RegisterCVar(&amp;quot;decurse&amp;quot;, &amp;quot;0&amp;quot;)
RegisterCVar(&amp;quot;rejuv&amp;quot;, &amp;quot;0&amp;quot;)

----------------------------------------
-- SLASH COMMANDS --
----------------------------------------

-- Clear the current healing blacklist with /blclear
SLASH_CLEARBLACKLIST1 = SlashBlacklist
function SlashCmdList.CLEARBLACKLIST(msg, editbox)
  IgnoreList = { }
  print(&amp;quot;Healing ignore cleared.&amp;quot;)
end

-- Toggle decurse on/off with /decurse
SLASH_DECURSE1 = SlashDecurse
function SlashCmdList.DECURSE(msg, editbox)
  if GetCVar(&amp;quot;decurse&amp;quot;) == &amp;quot;0&amp;quot; then
    SetCVar(&amp;quot;decurse&amp;quot;, &amp;quot;1&amp;quot;)
    print(&amp;quot;Decursing enabled.&amp;quot;)
  else
    SetCVar(&amp;quot;decurse&amp;quot;, &amp;quot;0&amp;quot;)
    print(&amp;quot;Decursing disabled.&amp;quot;)
  end
end

-- Toggle tanks with /tankswitch
SLASH_TANKTOGGLE1 = SlashFocus
function SlashCmdList.TANKTOGGLE(msg, editbox)
  if GetNumRaidMembers() &amp;gt; 0 then
    local Current = GetUnitName(&amp;quot;focus&amp;quot;, true)
    for i  = 1, GetNumRaidMembers(), 1 do
      local Member = &amp;quot;raid&amp;quot;..tostring(i)
      if UnitExists(Member) and
         UnitGroupRolesAssigned(Member) == &amp;quot;TANK&amp;quot; and
         GetUnitName(Member, true) ~= Current
      then
        FocusOn = GetUnitName(Member, true)
        FocusSwitch = false
        break
      end
    end
  end
end

-- Toggle rejuv spam on/off with /rejuv
SLASH_REJUV1 = SlashRejuv
function SlashCmdList.REJUV(msg, editbox)
  if GetCVar(&amp;quot;rejuv&amp;quot;) == &amp;quot;0&amp;quot; then
    SetCVar(&amp;quot;rejuv&amp;quot;, &amp;quot;1&amp;quot;)
    print(&amp;quot;Rejuving ALL THE THINGS!!!!!11 :D&amp;quot;)
  else
    SetCVar(&amp;quot;rejuv&amp;quot;, &amp;quot;0&amp;quot;)
    print(&amp;quot;Rejuving none of the things? :(&amp;quot;)
  end
end

---------------------------
-- FUNCTIONS --
---------------------------

-- FUNCTION: spellCheck
-- ACCEPTS: SpellID or Name and Unit
-- PERFORMS: Various range, afinity and other checks to ensure a spell should be cast
-- RETURNS: 1 or 0 depending on the check results
function spellCheck(spell, target)

  local Cast = 1;
  local SpellName = GetSpellInfo(spell)

  if UnitExists(target) == nil or
     UnitIsDeadOrGhost(target) or
     UnitCanCooperate(&amp;quot;player&amp;quot;, target) == nil or
     IsSpellInRange(SpellName, target) == 0 or
     UnitChannelInfo(&amp;quot;player&amp;quot;) ~= nil or 
     PQR_IsOutOfSight(target) or
     IsLeftControlKeyDown() or
     IsLeftShiftKeyDown() or
     ( ( IgnorePlayers == true and ignoreCheck(target) == 1 ) or IgnorePlayers == false )
  then Cast = 0 end

  -- Check if Yor&amp;apos;sahj has purple debuff
  if CurrentEncounter ~= &amp;quot;false&amp;quot; and
     CurrentEncounter == &amp;quot;YorsahjHC&amp;quot; and
     ( UnitBuffID(&amp;quot;boss1&amp;quot;, 104896) ~= nil or UnitDebuffID(target, 105171) ~= nil )
  then

    -- Get Deep Corruption stack info
    local _,_,_,Stacks = UnitDebuffID(target, 105171)

    -- If more than 4 stacks or not using HT, don&amp;apos;t cast
    if Stacks ~= nil and Stacks &amp;gt;= 4 then Cast = 0
    elseif spell ~= 5185 and spell ~= 18562 then Cast = 0 end

  end

  -- return value
  return Cast

end

-- FUNCTION: ignoreCheck
-- ACCEPTS: PlayerName
-- PERFORMS: A check to ensure they are not on your custom ignore list
-- RETURNS: 1 if they are on ignore, 0 if not
function ignoreCheck(unit)
  local ignore = 0

  if UnitExists(unit) then

    local name, realm = UnitName(unit)

    for k,v in ipairs(IgnoreList) do
      if v == name then ignore = 1 end
    end

  end

  return ignore
end

-- FUNCTION: classColor
-- ACCEPTS: String Name, Boolean use [ ] around name?
-- PERFORMS: Builds a class coloured hyperlink to be used in chat
-- RETURNS: A hyperlink string
function classColor(name, brackets)
  local str = name

  if UnitExists(name) then
    local playerClass, englishClass = UnitClass(name)
    local color = RAID_CLASS_COLORS[englishClass]
    str = Hex(color)..&amp;quot;|Hplayer:&amp;quot;..name..&amp;quot;|h&amp;quot;
    if brackets == true then str = str..&amp;quot;[&amp;quot;..name..&amp;quot;]|h|r&amp;quot; else str = str..name..&amp;quot;|h|r&amp;quot; end
  end

  return str
end

function Hex(r, g, b)

  if(type(r) == &amp;apos;table&amp;apos;) then if(r.r) then r, g, b = r.r, r.g, r.b else r, g, b = unpack(r) end end
  if(not r or not g or not b) then r, g, b = 1, 1, 1 end
  return format(&amp;apos;|cff%02x%02x%02x&amp;apos;, tonumber(r*255), tonumber(g*255), tonumber(b*255))

end

function RejuvUnit(unit)

  local Rejuvenation = UnitBuffID(unit, 774)

  if Rejuvenation == nil and
     UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil and
     spellCheck(774, unit) == 1
  then
    CastSpellByID(774, unit)
  end

end

  PQR_MYCONSTANTS = true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use: Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Check Trinket Cooldown info
local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

-- Check Cooldown and Combat status
if Cooldown == 0 and
   Ready == 1 and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
then

  UseInventoryItem(13) 
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Use: Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Check Trinket Cooldown info
local _, Cooldown, Ready = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

-- Check Cooldown and Combat status
if Cooldown == 0 and
   Ready == 1 and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
then

  UseInventoryItem(14) 
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Ignore Player</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IgnorePlayers == true and
   UnitExists(&amp;quot;target&amp;quot;) and
   IsRightControlKeyDown() and
   IsShiftKeyDown() == nil
then

  local name, realm = UnitName(&amp;quot;target&amp;quot;)

  -- Already being ignored, remove
  if ignoreCheck(&amp;quot;target&amp;quot;) == 1 then

    local remove = { }

    for k,v in ipairs(IgnoreList) do
      if v == name then table.insert(remove, k) end
    end

    for k,v in ipairs(remove) do
      table.remove(IgnoreList, v)
    end

    print(classColor(name, true), &amp;quot;has been removed from healing ignore.&amp;quot;)

  -- Not ignored currently, add
  else

    table.insert(IgnoreList, name)
 
    local IgnoreMessage = &amp;quot;You are currently ignoring&amp;quot;
    local loop = 0
    for k,v in ipairs(IgnoreList) do
      if loop == 0 then IgnoreMessage = IgnoreMessage..&amp;quot;: &amp;quot; else IgnoreMessage = IgnoreMessage..&amp;quot;, &amp;quot; end
      IgnoreMessage = IgnoreMessage..classColor(v, false)
      loop = loop + 1
    end

    print(classColor(name, true), &amp;quot;has been added to healing ignore.&amp;quot;)
    print(IgnoreMessage)

  end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Barkskin</Name><Default>false</Default><SpellID>22812</SpellID><Actions></Actions><Lua>local Health = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

-- Quick HP and CD check
if Health &amp;lt; 65 and
   GetSpellCooldown(22812) == 0 and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then

  -- Cast it!
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Mark of the Wild</Name><Default>false</Default><SpellID>1126</SpellID><Actions></Actions><Lua>if ( UnitBuffID(&amp;quot;player&amp;quot;, 1126) == nil or NeedMotW == true ) and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) == nil
then

  NeedMotW = false
  return true

end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Set Focus</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if FocusOn ~= false and
   FocusSwitch == false
then

  FocusUnit(FocusOn)
  FocusOn = false

elseif FocusSwitch == true and
         UnitExists(&amp;quot;target&amp;quot;) and
         UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == nil and
         UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) == nil
then

  local Current = GetUnitName(&amp;quot;focus&amp;quot;, true)

  for i  = 1, GetNumRaidMembers(), 1 do
    local Member = &amp;quot;raid&amp;quot;..tostring(i)
    if UnitExists(Member) and
       UnitGroupRolesAssigned(Member) == &amp;quot;TANK&amp;quot; and
       UnitThreatSituation(Member, &amp;quot;target&amp;quot;) == 3 and
       GetUnitName(Member, true) ~= Current
    then
      FocusUnit(Member)
      break
    end
  end

end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Encounter: Ultraxion</Name><Default>false</Default><SpellID>0</SpellID><Actions>/click ExtraActionButton1</Actions><Lua>if CurrentEncounter ~= &amp;quot;false&amp;quot; and
   ( CurrentEncounter == &amp;quot;Ultraxion&amp;quot; or CurrentEncounter == &amp;quot;UltraxionHC&amp;quot; ) and
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
then

  -- Avoid sudden death on Ultraxion
  local fadingtime = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,110070))
  if fadingtime and fadingtime - GetTime() &amp;lt; 1.3 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

  -- Avoid Hour of Twilight on Ultraxion, Delete next 3 lines if you are working as tank
  local channelSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
  if channelSpell == GetSpellInfo(109417) and endTime/1000 - GetTime() &amp;lt; 1.3 
  then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Rebirth</Name><Default>false</Default><SpellID>20484</SpellID><Actions></Actions><Lua>-- Check current casting
local Casting = UnitCastingInfo(&amp;quot;player&amp;quot;)

-- Check CD is up
if UnitExists(&amp;quot;mouseover&amp;quot;) and
   UnitIsDeadOrGhost(&amp;quot;mouseover&amp;quot;) and
   UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) and
   IsSpellInRange(&amp;quot;Rebirth&amp;quot;, &amp;quot;mouseover&amp;quot;) and 
   GetSpellCooldown(20484) == 0 and
   UnitChannelInfo(&amp;quot;player&amp;quot;) == nil and
   Casting ~= &amp;quot;Rebirth&amp;quot;
then

  -- Cast it!
  SpellStopCasting()
  return true

end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Auto Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Get current spell cast
local Spell = UnitCastingInfo(&amp;quot;player&amp;quot;)

-- Check target hp and spell
if UnitExists(PQR_CustomTarget) and
   PQR_CustomTargetHP &amp;gt;= 95 and
   ( Spell == &amp;quot;Nourish&amp;quot; or Spell == &amp;quot;Healing Touch&amp;quot; )
then

  SpellStopCasting()

end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Auto Target Low HP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- If we already have a target, use that
if UnitExists(&amp;quot;target&amp;quot;) and
   UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) == nil and
   UnitCanCooperate(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) and
   UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) == nil
then

  PQR_CustomTarget      = &amp;quot;target&amp;quot;
  PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

-- Otherwise find a low HP target
else 

  PQR_CustomTarget      = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

  for i = 1, GroupMembers, 1 do

    -- Get the target
    if GroupType == &amp;quot;party&amp;quot; and GroupMembers &amp;gt; 1 and i &amp;gt; 1 then Member = GroupType..tostring(( i - 1 ))
    elseif GroupType == &amp;quot;raid&amp;quot; then Member = GroupType..tostring(i)
    else Member = &amp;quot;player&amp;quot; end

    -- Generate target health based on incoming heals from other targets
    local Health   = UnitHealth(Member)
    local MaxHP  = UnitHealthMax(Member)
    local myHeal  = UnitGetIncomingHeals(Member, &amp;quot;player&amp;quot;) or 0
    local allHeal   = UnitGetIncomingHeals(Member) or 0

    -- Build HP with incoming heals / 2
    if myHeal &amp;gt;= allHeal then allHeal = 0 else allHeal = ( allHeal - myHeal ) / 2 end
    MemberHP = 100 * (  Health + allHeal ) / MaxHP

    -- General range, alive and LoS checks
    if UnitExists(Member) and
       UnitInRange(Member) and
       UnitCanCooperate(&amp;quot;player&amp;quot;, Member) and
       UnitCanAttack(&amp;quot;player&amp;quot;, Member) == nil and
       UnitIsDeadOrGhost(Member) == nil and
       PQR_IsOutOfSight(Member) == false
    then

      -- MotW/Kings Check
      if UnitBuffID(Member, 1126) == nil and UnitBuffID(Member, 20217) then NeedMotW = true end

      -- Tank Priority
      if UnitGroupRolesAssigned(Member) == &amp;quot;TANK&amp;quot; then MemberHP = MemberHP - 1 end
      if UnitThreatSituation(Member) == 3 then MemberHP = MemberHP - 3 end

      -- Set Custom Target if HP lower than current
      if MemberHP &amp;lt; PQR_CustomTargetHP then

        PQR_CustomTarget      = Member
        PQR_CustomTargetHP = MemberHP

      end

    end

  end

end

-- HP Check for following abilities
HP = 100 * UnitHealth(PQR_CustomTarget) / UnitHealthMax(PQR_CustomTarget)</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>--- Encounters ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Check it&amp;apos;s a boss fight
if UnitExists(&amp;quot;boss1&amp;quot;) then

  local Boss = UnitName(&amp;quot;boss1&amp;quot;)
  local Diff   = GetCurrentRaidDifficulty()

  -- Check if it&amp;apos;s Morchok Heroic
  if Boss == &amp;quot;Morchok&amp;quot; then CurrentEncounter = &amp;quot;Morchok&amp;quot;

  -- Check for Yor&amp;apos;sahj Heroic
  elseif Boss == &amp;quot;Yor&amp;apos;sahj the Unsleeping&amp;quot; then CurrentEncounter = &amp;quot;Yorsahj&amp;quot;

  -- Check for Ultraxion
  elseif Boss == &amp;quot;Ultraxion&amp;quot; then CurrentEncounter = &amp;quot;Ultraxion&amp;quot;

  -- Otherwise, no events to manage
  else CurrentEncounter = &amp;quot;false&amp;quot; end

  if Diff == 3 or Diff == 4 then CurrentEncounter = CurrentEncounter..&amp;quot;HC&amp;quot; end

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Encounter: Rejuv Blanket</Name><Default>false</Default><SpellID>774</SpellID><Actions></Actions><Lua>if ( ( CurrentEncounter ~= &amp;quot;false&amp;quot; and CurrentEncounter == &amp;quot;MorchokHC&amp;quot; ) or
   GetCVar(&amp;quot;rejuv&amp;quot;) == &amp;quot;1&amp;quot; ) and 
   UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
then

  for i = 1, GroupMembers, 1 do

    -- Get the target
    if GroupType == &amp;quot;party&amp;quot; and GroupMembers &amp;gt; 1 and i &amp;gt; 1 then Member = GroupType..tostring(( i - 1 ))
    elseif GroupType == &amp;quot;raid&amp;quot; then Member = GroupType..tostring(i)
    else Member = &amp;quot;player&amp;quot; end

    -- Get their Rejuv status
    local Rejuvenation = UnitBuffID(Member, 774, &amp;quot;PLAYER&amp;quot;)
    if Rejuvenation == nil and
       spellCheck(774, Member) == 1
    then

      PQR_CustomTarget = Member
      return true

    end

  end

end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Encounter: Yor&amp;apos;sahj Heroic</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Check if Yor&amp;apos;sahj has purple debuff
if CurrentEncounter ~= &amp;quot;false&amp;quot; and
   CurrentEncounter == &amp;quot;YorsahjHC&amp;quot; and
   ( UnitBuffID(&amp;quot;boss1&amp;quot;, 104896) ~= nil or UnitDebuffID(PQR_CustomTarget, 105171) ~= nil )
then

  -- Get Deep Corruption stack info
  local _,_,_,Stacks = UnitDebuffID(PQR_CustomTarget, 105171)
  if Stacks ~= nil and Stacks &amp;gt;= 3 then SpellStopCasting() end

  -- Only heal group during this phase
  GroupType = &amp;quot;party&amp;quot;
  GroupMembers = 5

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability></DRUID>