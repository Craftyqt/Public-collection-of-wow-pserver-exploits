<?xml version="1.0" encoding="utf-8" ?><PALADIN><Ability><Name>Autotarget Low HP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) 
  and UnitIsDead(&amp;quot;target&amp;quot;) == nil
  and UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
  and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
  then PQR_CustomTarget = &amp;quot;target&amp;quot;
          PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
elseif UnitExists(&amp;quot;mouseover&amp;quot;) and UnitIsDead(&amp;quot;mouseover&amp;quot;) == nil 
  and UnitIsDead(&amp;quot;mouseover&amp;quot;) == nil 
  and UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)
  and UnitCanCooperate(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) 
  and GetMouseFocus() ~= WorldFrame 
  then PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
          PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;mouseover&amp;quot;) / UnitHealthMax(&amp;quot;mouseover&amp;quot;)
else 

PQR_CustomTarget = &amp;quot;player&amp;quot;
PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()
lowhpmembers = 0
local lowest = 100

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
  local memberhp = 100 * UnitHealth(member) / UnitHealthMax(member)
  if UnitInRange(member) 
  and UnitIsFriend(&amp;quot;player&amp;quot;, member)
  and UnitIsDeadOrGhost(member) == nil 
  and UnitDebuffID(member,33786) == nil then
    if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 1 end
    if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
    if UnitBuffID(member, 53563) ~= nil then memberhp = memberhp + 7 end
    if UnitBuffID(member, 23333) ~= nil then if memberhp &amp;lt;= 90 and memberhp &amp;gt;= 80 then memberhp = memberhp - 10 end end
    if UnitBuffID(member, 23333) ~= nil then if memberhp &amp;lt;=79 and memberhp &amp;gt;= 60 then memberhp = memberhp - 20 end end
    if UnitBuffID(member, 23333) ~= nil then if memberhp &amp;lt;= 59 and memberhp &amp;gt;= 40 then memberhp = memberhp - 30 end end
    if UnitBuffID(member, 23335) ~= nil then if memberhp &amp;lt;= 90 and memberhp &amp;gt;= 80 then memberhp = memberhp - 10 end end
    if UnitBuffID(member, 23335) ~= nil then if memberhp &amp;lt;=79 and memberhp &amp;gt;= 60 then memberhp = memberhp - 20 end end
    if UnitBuffID(member, 23335) ~= nil then if memberhp &amp;lt;= 59 and memberhp &amp;gt;= 40 then memberhp = memberhp - 30 end end
    if memberhp &amp;lt; 85 then lowhpmembers = lowhpmembers +1 end
    if memberhp &amp;lt; lowest then
      PQR_CustomTarget = member
      lowest = memberhp
      PQR_CustomTargetHP = 100 * UnitHealth(PQR_CustomTarget) / UnitHealthMax(PQR_CustomTarget)
    end
  end
end

end
PQ_StopDispelHP = PQR_CustomTargetHP</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Seal of Insight</Name><Default>false</Default><SpellID>20165</SpellID><Actions></Actions><Lua>local SoI = UnitBuffID(&amp;quot;player&amp;quot;, 20165)

if SoI == nil then 
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>ConcentrationAura</Name><Default>false</Default><SpellID>19746</SpellID><Actions></Actions><Lua>local Aura = GetShapeshiftForm(&amp;quot;player&amp;quot;)

if Aura ~= 3 and IsMounted() == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>CrusaderAura</Name><Default>false</Default><SpellID>32223</SpellID><Actions></Actions><Lua>local Aura = GetShapeshiftForm(&amp;quot;player&amp;quot;)

if Aura ~= 5 and IsMounted() then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Don&amp;apos;t Dismount</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted() then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>AutoStopCasting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local Spell = UnitCastingInfo(&amp;quot;player&amp;quot;)

if PQR_CustomTargetHP &amp;lt; 90 then
	if Spell == &amp;quot;Holy Light&amp;quot; and  UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 20000 then
		SpellStopCasting()
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Judgement</Name><Default>false</Default><SpellID>20271</SpellID><Actions></Actions><Lua>if UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Polymorph&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Freezing Trap&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Scatter Shot&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Bad Manner&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Ring of Frost&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Fear&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Sap&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Blind&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Hungering Cold&amp;quot;) then 
	return false 
end 

local SoI = UnitBuffID(&amp;quot;player&amp;quot;, 20165)
local SoJ = UnitBuffID(&amp;quot;player&amp;quot;, 20164)
local SoR = UnitBuffID(&amp;quot;player&amp;quot;, 20154)
local SoT = UnitBuffID(&amp;quot;player&amp;quot;, 31801)
local JotP1 = UnitBuffID(&amp;quot;player&amp;quot;, 53655)
local JotP2 = UnitBuffID(&amp;quot;player&amp;quot;, 53656)
local JotP3 = UnitBuffID(&amp;quot;player&amp;quot;, 53657)
local inRange = IsSpellInRange(&amp;quot;Judgement&amp;quot;, &amp;quot;target&amp;quot;)
local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if (SoR ~= nil or SoT ~= nil or SoJ ~= nil or SoI ~= nil) and JotP1== nil and JotP2 == nil and JotP3 == nil then
		if IsSpellInRange(&amp;quot;Judgement&amp;quot;, PQR_CustomTargettarget) == 1 then
			CastSpellByID(20271,PQR_CustomTargettarget)
		end
	elseif PQR_CustomTargetHP &amp;gt; 80 then
		if UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) and inRange == 1 then
			return true
		end
	end
end

if myMana &amp;lt; 15 then
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Word of Glory</Name><Default>false</Default><SpellID>85673</SpellID><Actions></Actions><Lua>local myHolyPower = UnitPower(&amp;quot;player&amp;quot;, 9)
local sDivinePurpose = UnitBuffID(&amp;quot;player&amp;quot;, 90174) 

if PQR_CustomTargetHP &amp;lt; 85 and myHolyPower == 3 then 
	return true
end
if PQR_CustomTargetHP &amp;lt; 20 and myHolyPower == 2 then 
	return true
end
if PQR_CustomTargetHP &amp;lt; 70 and sDivinePurpose ~= nil then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Shock</Name><Default>false</Default><SpellID>20473</SpellID><Actions></Actions><Lua>local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
local enemy = UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)

if PQR_CustomTargetHP &amp;lt; 94 then 
	return true
elseif myMana &amp;gt; 20 and enemy then
	CastSpellByID(20473, &amp;quot;target&amp;quot;)
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Plea</Name><Default>false</Default><SpellID>54428</SpellID><Actions></Actions><Lua>local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

if myMana &amp;lt; 75 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Avenging Wrath</Name><Default>false</Default><SpellID>31884</SpellID><Actions>/use Ruthless Gladiator&amp;apos;s Badge of Victory</Actions><Lua>if PQR_CustomTargetHP &amp;lt; 60 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Turn Undead</Name><Default>false</Default><SpellID>10326</SpellID><Actions></Actions><Lua>local TU = UnitDebuffID(&amp;quot;mouseover&amp;quot;, 10326)
local HW = UnitDebuffID(&amp;quot;mouseover&amp;quot;, 2812)
local hasFocus = UnitExists(&amp;quot;mouseover&amp;quot;)
local type= UnitCreatureType(&amp;quot;mouseover&amp;quot;)


if hasFocus ~= nil then
	if type == &amp;quot;Undead&amp;quot; or type == &amp;quot;Demon&amp;quot; then
		if TU == nil and HW == nil then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Wrath</Name><Default>false</Default><SpellID>2812</SpellID><Actions></Actions><Lua>if modkeystate ~= nil  then return true end</Lua><RecastDelay>500</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash of Light</Name><Default>false</Default><SpellID>19750</SpellID><Actions></Actions><Lua>local start,duration,enabled = GetSpellCooldown(20473)


if PQR_CustomTargetHP &amp;lt; 92 and PQR_IsMoving(0.1) == false then 
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Light</Name><Default>false</Default><SpellID>82326</SpellID><Actions></Actions><Lua>local AM = UnitBuffID(&amp;quot;player&amp;quot;, 31821)

if PQR_CustomTargetHP &amp;lt; 85 and PQR_IsMoving(0.1) == false and AM ~= nil then 
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash of Light (proc)</Name><Default>false</Default><SpellID>19750</SpellID><Actions></Actions><Lua>local Infusion = UnitBuffID(&amp;quot;player&amp;quot;, 54149)

if PQR_CustomTargetHP &amp;lt; 85 and PQR_IsMoving(0.1) and Infusion ~= nil then
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Light (Proc)</Name><Default>false</Default><SpellID>82326</SpellID><Actions></Actions><Lua>local Infusion = UnitBuffID(&amp;quot;player&amp;quot;, 54149)

if PQR_CustomTargetHP &amp;lt; 90 and PQR_IsMoving(0.1) == false and Infusion ~= nil  then 
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Favor (AM)</Name><Default>false</Default><SpellID>31842</SpellID><Actions></Actions><Lua>local AM = UnitBuffID(&amp;quot;player&amp;quot;, 31821)

if AM ~= nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Radiance</Name><Default>false</Default><SpellID>82327</SpellID><Actions></Actions><Lua>local _, _, _, cost = GetSpellInfo(82327)
local mana = UnitPower(&amp;quot;player&amp;quot;) 
local spell = UnitCastingInfo(&amp;quot;player&amp;quot;)

if mana &amp;gt; cost and spell ~= GetSpellInfo(82327) then
   local HRtarget = findGoodTarget()
   if HRtarget ~= nil then
      PQR_CustomTarget = HRtarget
      return true
   end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Denounce</Name><Default>false</Default><SpellID>879</SpellID><Actions></Actions><Lua>if UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Polymorph&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Freezing Trap&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Scatter Shot&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Bad Manner&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Ring of Frost&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Fear&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Sap&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Blind&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Hungering Cold&amp;quot;) then 
	return false 
end 

local Denounce, _, _, _, _, _, Dexpire = UnitDebuffID(&amp;quot;target&amp;quot;, 85509)
local target = UnitExists(&amp;quot;target&amp;quot;)
local enemy = UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
local targetHealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if target and enemy then
	if Denounce ~= nil then
		Dexpire = (Dexpire - GetTime())
		if PQR_CustomTargetHP &amp;gt; 90 and Dexpire &amp;lt;= 3 then
			return true
		elseif PQR_CustomTargetHP &amp;gt; 90 and targetHealth &amp;lt; 50 then
			return true
		end
	else
		if PQR_CustomTargetHP &amp;gt; 90 then
			return true
		end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Shield</Name><Default>false</Default><SpellID>642</SpellID><Actions></Actions><Lua>local myHealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local HordeFlag = UnitBuffID(&amp;quot;player&amp;quot;, 23333)

if myHealth &amp;lt; 17 and (HordeFlag == nil or UnitBuffID(&amp;quot;player&amp;quot;, 23335) == nil) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Protection</Name><Default>false</Default><SpellID>498</SpellID><Actions></Actions><Lua>local myHealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
local hofdp = UnitBuffID (&amp;quot;player&amp;quot;, 1044 )

if hofdp ~= nil then
	return true
end

if myHealth &amp;lt; 65 and UnitBuffID(&amp;quot;player&amp;quot;,642) ~= nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleanse</Name><Default>false</Default><SpellID>4987</SpellID><Actions></Actions><Lua>local Spell = UnitCastingInfo(&amp;quot;player&amp;quot;)


function CheckMagic(unitid)
  local i = 1
  local buff,_,_,count,bufftype,duration = UnitDebuff(unitid, i)
  while buff do
    if bufftype == &amp;quot;Magic&amp;quot; or bufftype == &amp;quot;Poison&amp;quot; then return true end
    i = i + 1;
    buff,_,_,count,bufftype,duration = UnitDebuff(unitid, i)
  end
end



local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
  if UnitInRange(member) 
  and UnitIsCharmed(member) == nil
  and UnitIsDeadOrGhost(member) == nil 
 then
    if CheckMagic(member) then PQR_CustomTarget = member end
  end
end
local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
local start,duration,enabled = GetSpellCooldown(20473)
if (start+duration-GetTime()) &amp;gt; 1.2 and (start+duration-GetTime()) &amp;lt; 1.5 then return false end
if Spell == &amp;quot;Holy Shock&amp;quot; or Spell == &amp;quot;Holy Light&amp;quot; or Spell == &amp;quot;Flash of Light&amp;quot; or Spell == &amp;quot;Divine Light&amp;quot; then return false end
if CheckMagic(PQR_CustomTarget) and UnitDebuffID(PQR_CustomTarget,34914) == nil and UnitDebuffID(PQR_CustomTarget,30108) == nil  and myMana &amp;gt; 20 then return true end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BoM</Name><Default>false</Default><SpellID>19740</SpellID><Actions></Actions><Lua>local BoK = UnitBuffID(&amp;quot;player&amp;quot;, 20217)
local BoM = UnitBuffID(&amp;quot;player&amp;quot;, 19740)

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and BoK == nil and BoM == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>GoAK</Name><Default>false</Default><SpellID>86150</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(PQR_CustomTarget) and PQR_CustomTargetHP &amp;lt; 30 then
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleanse CC</Name><Default>false</Default><SpellID>4987</SpellID><Actions></Actions><Lua>function CheckDispel(unitid)
local debuffdispel = { 49203,11129, 19386, 3355, 44572,118,82691,31661,853,20066,10326,605,64044,8122,9484,15487,6789,5782,5484,6358,30283,24259,18498,33395,122}

for i,v in ipairs(debuffdispel) do
 if UnitDebuffID(unitid,v) then return true end
end
end

if not healinit then


  function SafeTarget(t)
    if IsSpellInRange(tostring(GetSpellInfo(635)),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
    and UnitDebuffID(t,30108) == nil
    and UnitDebuffID(t,34914) == nil
    and UnitDebuffID(t,33786) == nil
    then return true end
  end

  healinit = true

end

if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
else 
  lowhpmembers = 0
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
      if SafeTarget(member)  then
      if CheckDispel(member) then
        PQR_CustomTarget = member
        end 

    end
  end

end

local myHealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)


if PQ_StopDispelHP &amp;gt; 40 and CheckDispel(PQR_CustomTarget) and PQR_IsOutOfSight(PQR_CustomTarget) == false then return true end

if PQ_StopDispelHP &amp;gt; 60 and CheckDispel(PQR_CustomTarget) and myHealth &amp;gt; 80  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Denounce (LeftAlt)</Name><Default>false</Default><SpellID>879</SpellID><Actions></Actions><Lua>local target = UnitExists(&amp;quot;target&amp;quot;)

if IsLeftAltKeyDown() and GetCurrentKeyBoardFocus() == nil then
	if target then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BoL</Name><Default>false</Default><SpellID>53563</SpellID><Actions></Actions><Lua>local bol = UnitBuffID(PQR_CustomTarget, 53563)
local BeaconTarget = nil
local BeaconTank = nil
local BeaconTankTarget = nil
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

if group == &amp;quot;raid&amp;quot; then
 	for i = 1, members, 1 do
    		local member = group..tostring(i)
		local beacon = UnitBuffID(member, 53563, &amp;quot;PLAYER&amp;quot;)
    		if UnitBuffID(member, 23333)~=nil then 
			BeaconTank = member
			CastSpellByID(53563, BeaconTarget)
		end
  	end
end

if BeaconTarget ~= nil then
	local _, _, _, _, _, _, expire = UnitBuffID(BeaconTarget, 53563)
	expire = (expire  - GetTime())
	if expire &amp;lt; 5 then
		CastSpellByID(53563, BeaconTarget)
	end
end

if PQR_CustomTargetHP &amp;lt; 75 and PQR_CustomTargetHP &amp;gt; 30 and BeaconTarget == nil and bol == nil  then 
	return true
end</Lua><RecastDelay>30000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BoK</Name><Default>false</Default><SpellID>20217</SpellID><Actions></Actions><Lua>local BoK = UnitBuffID(&amp;quot;player&amp;quot;, 20217)
local BoM = UnitBuffID(&amp;quot;player&amp;quot;, 19740)
local MotW = UnitBuffID(&amp;quot;player&amp;quot;, 1126)

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) and BoK == nil and BoM == nil and MotW == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Crusader Strike</Name><Default>false</Default><SpellID>35395</SpellID><Actions></Actions><Lua>if IsSpellInRange(&amp;quot;Crusader Strike&amp;quot;, &amp;quot;target&amp;quot;) == 1 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Light</Name><Default>false</Default><SpellID>635</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 95 and PQR_IsMoving(0.1) == false then 
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Gift of the Naaru</Name><Default>false</Default><SpellID>59542</SpellID><Actions></Actions><Lua>if IsSpellKnown(59542) and PQR_CustomTargetHP &amp;lt; 20 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InterruptCast</Name><Default>false</Default><SpellID>96231</SpellID><Actions></Actions><Lua>local buff = { 118,116,61305,28271,28272,61780,61721,2637,33786,5185,8936,50464,19750,82326,2061,9484,605,8129,331,8004,51505,403,77472,51514,5782,1120,48181,30108 }

local castingSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;target&amp;quot;)
for i,v in ipairs(buff) do
if IsSpellInRange(&amp;quot;Rebuke&amp;quot;, &amp;quot;target&amp;quot;)   and PQR_IsOutOfSight(&amp;quot;target&amp;quot;) == false and castingSpell == GetSpellInfo(v) and endTime/1000 - GetTime() &amp;lt; 0.5  then
if not UnitBuffID(&amp;quot;target&amp;quot;, 31821) and not UnitBuffID(&amp;quot;target&amp;quot;, 89489) then
 return true end end end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InterruptCastFocus</Name><Default>false</Default><SpellID>96231</SpellID><Actions></Actions><Lua>local buff = { 118,116,61305,28271,28272,61780,61721,2637,33786,5185,8936,50464,19750,82326,2061,9484,605,8129,331,8004,51505,403,77472,51514,5782,1120,48181,30108 }

local castingSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;focus&amp;quot;)
for i,v in ipairs(buff) do
if IsSpellInRange(&amp;quot;Rebuke&amp;quot;, &amp;quot;focus&amp;quot;)  and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;) == false and castingSpell == GetSpellInfo(v) and endTime/1000 - GetTime() &amp;lt; 0.5  then 
if not UnitBuffID(&amp;quot;target&amp;quot;, 31821) and not UnitBuffID(&amp;quot;target&amp;quot;, 89489) then
return true end end end</Lua><RecastDelay>0</RecastDelay><Target>Focus</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InterruptCastArena</Name><Default>false</Default><SpellID>96231</SpellID><Actions></Actions><Lua>local InterruptSpells = { 635, 47540, 19750, 82326, 51505, 62809, 331, 77472, 48500, 8936, 5782 }

if select(2, GetSpellCooldown(96231)) == 0 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 5 then
	for y=1, 5 do
		local aTarget = &amp;quot;arena&amp;quot;..tostring(y)
		if UnitExists(aTarget) and IsSpellInRange(GetSpellInfo(96231), aTarget) == 1 then
			local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(aTarget)
			for _, v in ipairs(InterruptSpells) do
				if GetSpellInfo(v) == spellName and canInterrupt == false then
					if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
						PQR_CustomTarget = aTarget
						return true
					end
				end
			end
		end
	end
	local fTarget = &amp;quot;focus&amp;quot;
	if UnitExists(fTarget) and IsSpellInRange(GetSpellInfo(96231), fTarget) == 1 then
		local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(fTarget)
		for _, v in ipairs(InterruptSpells) do
			if GetSpellInfo(v) == spellName and canInterrupt == false then
				if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
					PQR_CustomTarget = fTarget
					return true
				end
			end
		end
	end
	local tTarget = &amp;quot;target&amp;quot;
	if UnitExists(tTarget) and IsSpellInRange(GetSpellInfo(96231), tTarget) == 1 then
		local spellName, _, _, _, _, endCast, _, _, canInterrupt = UnitCastingInfo(tTarget)
		for _, v in ipairs(InterruptSpells) do
			if GetSpellInfo(v) == spellName and canInterrupt == false then
				if ((endCast/1000) - GetTime()) &amp;lt; 0.5 then
					PQR_CustomTarget = tTarget
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blessing of Protection</Name><Default>false</Default><SpellID>1022</SpellID><Actions></Actions><Lua>local buff = { 73975, 59879,59921,1943,76577,703,31801,31804,8033,1822,33878,33876,6785,81170,80965,5221,772,1715,86346,1978,82654,53238,43235 }

for i,v in ipairs(buff) do
 if UnitDebuffID(PQR_CustomTarget,v) then havedebuff = 1 end
end
if PQR_CustomTargetHP &amp;lt; 30 and (UnitBuffID(PQR_CustomTarget, 23333) == nil or UnitBuffID(PQR_CustomTarget, 23335) == nil) and havedebuff == 1 and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;) and UnitAffectingCombat(PQR_CustomTarget) then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>InterruptCasttest</Name><Default>false</Default><SpellID>96231</SpellID><Actions>/stopcasting</Actions><Lua>local buff = { 118,116,61305,28271,28272,61780,61721,2637,33786,5185,8936,50464,19750,82326,2061,9484,605,8129,331,8004,51505,403,77472,51514,5782,1120,48181,30108 }

local castingSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;target&amp;quot;)
for i,v in ipairs(buff) do
if IsSpellInRange(&amp;quot;Rebuke&amp;quot;, &amp;quot;target&amp;quot;)   and PQR_IsOutOfSight(&amp;quot;target&amp;quot;) == false and castingSpell == GetSpellInfo(v) and 1-((endTime/1000 - GetTime()/endTime) &amp;gt; 0.5  then return true end end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Wrath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
local unithealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local unithealthf = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
local unithealthone = 100 * UnitHealth(&amp;quot;arena1&amp;quot;) / UnitHealthMax(&amp;quot;arena1&amp;quot;)
local unithealthtwo = 100 * UnitHealth(&amp;quot;arena2&amp;quot;) / UnitHealthMax(&amp;quot;arena2&amp;quot;)
local unithealththree = 100 * UnitHealth(&amp;quot;arena3&amp;quot;) / UnitHealthMax(&amp;quot;arena3&amp;quot;)
local unithealthfour = 100 * UnitHealth(&amp;quot;arena4&amp;quot;) / UnitHealthMax(&amp;quot;arena4&amp;quot;)
local unithealthfive = 100 * UnitHealth(&amp;quot;arena5&amp;quot;) / UnitHealthMax(&amp;quot;arena5&amp;quot;)

if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;target&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;target&amp;quot;) == false and unithealth &amp;lt;=20
then
	CastSpellByID(24275,&amp;quot;target&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;focus&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;) == false and unithealthf &amp;lt;= 20
then
	CastSpellByID(24275,&amp;quot;focus&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena1&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;arena1&amp;quot;) == false and unithealthone &amp;lt;= 20
then
	CastSpellByID(24275,&amp;quot;arena1&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena2&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;arena2&amp;quot;) == false and unithealthtwo &amp;lt;= 20
then
	CastSpellByID(24275,&amp;quot;arena2&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena3&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;arena3&amp;quot;) == false and unithealththree &amp;lt;= 20
then
	CastSpellByID(24275,&amp;quot;arena3&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena4&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;arena4&amp;quot;) == false and unithealthfour &amp;lt;= 20
then
	CastSpellByID(24275,&amp;quot;arena4&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena5&amp;quot;) == 1 and PQR_CustomTargetHP &amp;gt; 50 and myMana &amp;gt; 10 and PQR_IsOutOfSight(&amp;quot;arena5&amp;quot;) == false and unithealthfive &amp;lt;= 20
then
	CastSpellByID(24275,&amp;quot;arena5&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Plea Abort</Name><Default>false</Default><SpellID>0</SpellID><Actions>/cancelaura Divine Plea</Actions><Lua>local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

if myMana &amp;gt;30 and PQR_CustomTargetHP &amp;lt; 30 and UnitBuffID(&amp;quot;player&amp;quot;,54428)~=nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Justice</Name><Default>false</Default><SpellID>853</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;mouseover&amp;quot;) 
and IsLeftShiftKeyDown() 
and not GetCurrentKeyBoardFocus() 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Favor</Name><Default>false</Default><SpellID>31842</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt; 30 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Special ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if modkeytime == nil then modkeytime = 0 end
if IsRightControlKeyDown() and GetTime() - modkeytime &amp;gt; 1  then
  modkeytime = GetTime()
  if modkeystate then 
    modkeystate = nil 
    print(&amp;quot;Rotation mode: \124cFFDBFA2ALOS Mode on&amp;quot;)
  else 
    modkeystate = 1 
    print(&amp;quot;Rotation mode: \124cFFFA652ALOS Mode off&amp;quot;)
  end
end


if PQ_StopDispelHP == nil then
PQ_StopDispelHP = 100
end


-- Edited with Mentally&amp;apos;s Code
-- Fading Light
local FadingLight = {110070, 105925, 109075, 110079, 110069, 110070, 110080, 110068, 110078}
for i,v in ipairs(FadingLight) do
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, v)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;, v)) - GetTime() &amp;lt; 3 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end

-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
local HourOfTwilight = {109415, 106371, 109416, 109415, 109417}
	
for i,v in ipairs(HourOfTwilight) do
	if HoT == GetSpellInfo(v) and timer/1000 - GetTime() &amp;lt; 3 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end

-- Avoid sudden death on Madness 
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 1 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Onya HR TargetFinder</Name><Default>false</Default><SpellID>53563</SpellID><Actions></Actions><Lua>if GetNumRaidMembers() &amp;gt; 0 then
hrtargethealth = 95
hrsecondaryhealth = 95
hrrange = 13
hrsecondarytargets = 5
else
hrtargethealth = 85
hrsecondaryhealth = 85
hrrange = 10
hrsecondarytargets = 4
end

if not onyainit then
print(&amp;quot;loading libraries&amp;quot;)

function onyaGetPlayerMapPosition(unit)
  local x,y = GetPlayerMapPosition(unit)  
  return x,y
end

function NewScaleFactor(unit1,dist)
   local x1,y1 = onyaGetPlayerMapPosition(unit1)
   local x2,y2 = onyaGetPlayerMapPosition(&amp;quot;player&amp;quot;)
   local xx= x1 - x2
   local yy = y1 -y2
   sft = tostring (dist/sqrt(((xx) * (xx))  + (((yy) * 0.6666666666666) ^ 2)))
   return sft
end

function DistanceBetweenUnits(unit1,unit2)
   if unit2 == unit1 then return 0 end
   local x1,y1 = onyaGetPlayerMapPosition(unit1)
   local x2,y2 = onyaGetPlayerMapPosition(unit2)
   if x1 == 0 and y1 == 0 and x2 ==0 and y2 == 0 then return 0 end
   return (sqrt((((x2 - x1)  * sf) ^ 2)  + (((y2 - y1)  * sf / 1.5) ^ 2)))
end

function IsInRange(u1,u2)
  local range = DistanceBetweenUnits(member[u1].name,member[u2].name)
   if range &amp;lt;= hrrange  then
       return true
   end
end

function getDefHealth(unit)
   return (100 - member[unit].health)
end

function sortDefHealth(aUnit, anotherUnit)
    return getDefHealth(aUnit) &amp;gt; getDefHealth(anotherUnit)
end

function findGoodTarget()
   if table.maxn(hrtargets) ~=0 and table.maxn(hrsecondary) &amp;gt;= hrsecondarytargets then   
      table.sort(hrtargets, sortDefHealth)  
      table.sort(hrsecondary, sortDefHealth)
      for x = 1, table.maxn(hrtargets) do
          local inrangecount = 0
          for y = 1, table.maxn(hrsecondary) do
            if IsInRange(hrtargets[x],hrsecondary[y]) then inrangecount = inrangecount + 1 end
            if inrangecount == hrsecondarytargets then return member[hrtargets[x]].name end
          end
      end
   end
 end 


onyainit = true
end

local currentmap = GetMapInfo()
local currentlevel = tostring(GetCurrentMapDungeonLevel()) or &amp;quot;0&amp;quot;
local grp = &amp;quot;party&amp;quot;
local mems = GetNumPartyMembers()
if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; mems = GetNumRaidMembers() end


if (sfm ~= currentmap) or (sfl ~= currentlevel) then
  sf = 6000
  sfm = currentmap
  sfl = currentlevel
end

 for mmm = 1, mems do
   local checktarget = grp..tostring(mmm)
   local range = DistanceBetweenUnits(&amp;quot;player&amp;quot;,checktarget)
   if (range &amp;gt; 28) and (CheckInteractDistance(checktarget,1)) then
     sf =  NewScaleFactor(checktarget,28)
   end
   if (range &amp;gt; 11.11) and (CheckInteractDistance(checktarget,2)) then
      sf =  NewScaleFactor(checktarget,11.11)
   end
   if (range &amp;gt; 9.9) and (CheckInteractDistance(checktarget,3)) then
      sf =  NewScaleFactor(checktarget,9.9)
   end
   if (range &amp;gt; 40) and (UnitInRange(checktarget)) then
      sf =  NewScaleFactor(checktarget,40)
   end
 end
 
hrtargets = {}
hrsecondary = {} 
member = {}
 
for i = 0, mems, 1 do
   member[i] = {}
   if i==0 then member[i].name = &amp;quot;player&amp;quot; else member[i].name = grp..tostring(i) end
   local memberin = UnitGetIncomingHeals(member[i].name) or 0
   member[i].health= 100 * (UnitHealth(member[i].name)+ memberin ) / UnitHealthMax(member[i].name)
   if not UnitIsDeadOrGhost(member[i].name) then 
     if member[i].health &amp;lt; hrtargethealth 
        and not (UnitBuffID(member[i].name, 82327)) 
        and IsSpellInRange(&amp;quot;Holy Radiance&amp;quot;, member[i].name) 
       then table.insert(hrtargets,i) end
     if member[i].health &amp;lt; hrsecondaryhealth then table.insert(hrsecondary,i) end
   end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Exorcism</Name><Default>false</Default><SpellID>879</SpellID><Actions></Actions><Lua>local sAoW = UnitBuffID(&amp;quot;player&amp;quot;, 59578)
 
if sAoW ~= nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Hammer of Wrath</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myMana = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)
local unithealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local unithealthf = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
local unithealthone = 100 * UnitHealth(&amp;quot;arena1&amp;quot;) / UnitHealthMax(&amp;quot;arena1&amp;quot;)
local unithealthtwo = 100 * UnitHealth(&amp;quot;arena2&amp;quot;) / UnitHealthMax(&amp;quot;arena2&amp;quot;)
local unithealththree = 100 * UnitHealth(&amp;quot;arena3&amp;quot;) / UnitHealthMax(&amp;quot;arena3&amp;quot;)
local unithealthfour = 100 * UnitHealth(&amp;quot;arena4&amp;quot;) / UnitHealthMax(&amp;quot;arena4&amp;quot;)
local unithealthfive = 100 * UnitHealth(&amp;quot;arena5&amp;quot;) / UnitHealthMax(&amp;quot;arena5&amp;quot;)

if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;target&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;target&amp;quot;) == false and unithealth &amp;lt;=25
then
	CastSpellByID(24275,&amp;quot;target&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;focus&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;focus&amp;quot;) == false and unithealthf &amp;lt;= 25
then
	CastSpellByID(24275,&amp;quot;focus&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena1&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;arena1&amp;quot;) == false and unithealthone &amp;lt;= 25
then
	CastSpellByID(24275,&amp;quot;arena1&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena2&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;arena2&amp;quot;) == false and unithealthtwo &amp;lt;= 25
then
	CastSpellByID(24275,&amp;quot;arena2&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena3&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;arena3&amp;quot;) == false and unithealththree &amp;lt;= 25
then
	CastSpellByID(24275,&amp;quot;arena3&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena4&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;arena4&amp;quot;) == false and unithealthfour &amp;lt;= 25
then
	CastSpellByID(24275,&amp;quot;arena4&amp;quot;)
end
if IsSpellInRange(&amp;quot;Hammer of Wrath&amp;quot;, &amp;quot;arena5&amp;quot;) == 1 and PQR_IsOutOfSight(&amp;quot;arena5&amp;quot;) == false and unithealthfive &amp;lt;= 25
then
	CastSpellByID(24275,&amp;quot;arena5&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Judgement</Name><Default>false</Default><SpellID>20271</SpellID><Actions></Actions><Lua>if UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Polymorph&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Freezing Trap&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Scatter Shot&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Bad Manner&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Ring of Frost&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Sap&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Blind&amp;quot;) or UnitDebuff(&amp;quot;target&amp;quot;, &amp;quot;Hungering Cold&amp;quot;) then 
	return false 
end 

sSoR = UnitBuffID(&amp;quot;player&amp;quot;, 20154) 
sSoT = UnitBuffID(&amp;quot;player&amp;quot;, 31801) 
sSoJ = UnitBuffID(&amp;quot;player&amp;quot;, 20164) 
sSoI = UnitBuffID(&amp;quot;player&amp;quot;, 20165) 

if sSoR ~= nil or sSoT ~= nil or sSoJ ~= nil or sSoI ~= nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Templars Verdict</Name><Default>false</Default><SpellID>85256</SpellID><Actions></Actions><Lua>local sDivinePurpose = UnitBuffID(&amp;quot;player&amp;quot;, 90174) 
		
if UnitPower(&amp;quot;player&amp;quot;, 9) == 3 or sDivinePurpose ~= nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Zealotry</Name><Default>false</Default><SpellID>85696</SpellID><Actions></Actions><Lua>local sDivinePurpose = UnitBuffID(&amp;quot;player&amp;quot;, 90174) 
		
if IsRightShiftKeyDown() and sDivinePurpose ~= nil
and not GetCurrentKeyBoardFocus() then
	return true
end

if IsRightShiftKeyDown() and UnitPower(&amp;quot;player&amp;quot;, 9) == 3
and not GetCurrentKeyBoardFocus() then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inquisition</Name><Default>false</Default><SpellID>84963</SpellID><Actions></Actions><Lua>local sDivinePurpose = UnitBuffID(&amp;quot;player&amp;quot;, 90174) 
local inqBuff, _, _, _, _, _, inqExpireTime = UnitBuffID(&amp;quot;player&amp;quot;, 84963)

if inqBuff ~= nil then
	local inqExpire = (inqExpireTime - GetTime())
	if inqExpire &amp;lt; 5 then
		if UnitPower(&amp;quot;player&amp;quot;, 9) == 3 or sDivinePurpose ~= nil then
			return true
		end
	end
else
	if UnitPower(&amp;quot;player&amp;quot;, 9) == 3 or sDivinePurpose ~= nil then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hammer of Wrath Proc</Name><Default>false</Default><SpellID>24275</SpellID><Actions></Actions><Lua>local sAW = UnitBuffID(&amp;quot;player&amp;quot;, 31884)

if sAW ~= nil  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Avenging Wrath</Name><Default>false</Default><SpellID>31884</SpellID><Actions>/use Ruthless Gladiator&amp;apos;s Badge of Victory|/use 13</Actions><Lua>if IsRightShiftKeyDown() 
and not GetCurrentKeyBoardFocus() 
then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Cleansing Ret</Name><Default>false</Default><SpellID>4987</SpellID><Actions></Actions><Lua>local buff = { 45524, 1715, 3408, 59638, 20164, 25809, 31589, 51585, 50040, 50041, 31126, 31124, 122, 44614, 1604, 45524, 50040, 339, 45334, 58179, 61391, 19306, 19185, 35101, 5116, 61394, 2974, 54644, 50245, 50271, 54706, 4167, 33395, 83302, 55080, 11113, 6136, 120, 116, 44614, 31589, 63529, 20170, 87194, 31125, 3409, 26679, 64695, 63685, 8056, 8034, 18118, 18223, 63311, 23694, 1715, 12323, 39965, 55536, 13099, 29703 }
local havebuff = nil



for i,v in ipairs(buff) do
 if UnitDebuffID(&amp;quot;player&amp;quot;,v) then havebuff = 1 end
end

if IsSpellInRange(&amp;quot;Crusader Strike&amp;quot;, &amp;quot;target&amp;quot;)  ~= 1 and havebuff == 1 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Hand of Freedom (Party) melee</Name><Default>false</Default><SpellID>1044</SpellID><Actions></Actions><Lua>function CheckSlow(unitid)
local buff = { 45524, 1715, 3408, 59638, 20164, 25809, 31589, 51585, 50040, 50041, 31126, 31124, 122, 44614, 1604, 45524, 50040, 339, 45334, 58179, 61391, 19306, 19185, 35101, 5116, 61394, 2974, 54644, 50245, 50271, 54706, 4167, 33395, 83302, 55080, 11113, 6136, 120, 116, 44614, 31589, 63529, 20170, 87194, 31125, 3409, 26679, 64695, 63685, 8056, 8034, 18118, 18223, 63311, 23694, 1715, 12323, 39965, 55536, 13099, 29703 }

for i,v in ipairs(buff) do
 if UnitDebuffID(unitid,v) then return true end
end
end

if not healinit then

  function CalculateHP(t)
    local incomingheal = 0
    if UnitGetIncomingHeals(t) then incomingheal = UnitGetIncomingHeals(t)  end
    return 100 * ( UnitHealth(t) + incomingheal ) / UnitHealthMax(t)
  end

  function SafeTarget(t)
    if IsSpellInRange(tostring(GetSpellInfo(635)),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
    and PQR_IsOutOfSight(t) == false then return true end
  end

  healinit = true

end

if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
else 
  lowhpmembers = 0
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  local targethp = CalculateHP(&amp;quot;player&amp;quot;) + 20
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
    local memberhp = CalculateHP(member)
      if SafeTarget(member)  then
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; and UnitBuffID(member, 53563) == nil  then memberhp = memberhp - 1 else memberhp = memberhp + 5  end
      if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
     if UnitBuffID(member, 23333) then memberhp = memberhp - 40 end
      if CheckSlow(member) then
        PQR_CustomTarget = member
        targethp = memberhp
      end 

    end
  end

end


if UnitBuffID(PQR_CustomTarget, 23333) ~= nil then return true end
if UnitPowerMax(PQR_CustomTarget) &amp;lt; 30000 and CheckSlow(PQR_CustomTarget) and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;)  then return true end
if PQR_CustomTargetHP &amp;lt; 95 and CheckSlow(PQR_CustomTarget) and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;)  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>RetributionAura</Name><Default>false</Default><SpellID>7294</SpellID><Actions></Actions><Lua>local Aura = GetShapeshiftForm(&amp;quot;player&amp;quot;)

if Aura ~= 2 and IsMounted() == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- Ret Specials ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if modkeytime == nil then modkeytime = 0 end
if IsRightControlKeyDown() and GetTime() - modkeytime &amp;gt; 1  then
  modkeytime = GetTime()
  if modkeystate then 
    modkeystate = nil 
    print(&amp;quot;Rotation mode: \124cFFDBFA2ASingle Mode&amp;quot;)
  else 
    modkeystate = 1 
    print(&amp;quot;Rotation mode: \124cFFFA652AAOE Mode&amp;quot;)
  end
end

if supportkeytime == nil then supportkeytime = 0 end
if IsRightAltKeyDown() and GetTime() - supportkeytime &amp;gt; 1  then
  supportkeytime = GetTime()
  if supportkeystate then 
    supportkeystate = nil 
    print(&amp;quot;Rotation mode: \124cFFDBFA2ADamage Mode&amp;quot;)
  else 
    supportkeystate = 1 
    print(&amp;quot;Rotation mode: \124cFFFA652ASupport Mode&amp;quot;)
  end
end



-- Edited with Mentally&amp;apos;s Code
-- Fading Light
local FadingLight = {110070, 105925, 109075, 110079, 110069, 110070, 110080, 110068, 110078}
for i,v in ipairs(FadingLight) do
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;, v)) and select(7,UnitDebuffID(&amp;quot;player&amp;quot;, v)) - GetTime() &amp;lt; 2 then
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end

-- Hour of Twilight
local HoT,_,_,_,_,timer = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
local HourOfTwilight = {109415, 106371, 109416, 109415, 109417}
	
for i,v in ipairs(HourOfTwilight) do
	if HoT == GetSpellInfo(v) and timer/1000 - GetTime() &amp;lt; 2 then
		RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
	end
end

-- Avoid sudden death on Madness 
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 1 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Divine Light</Name><Default>false</Default><SpellID>82326</SpellID><Actions></Actions><Lua>if supportkeystate ~= nil and PQR_CustomTargetHP &amp;lt; 75 and PQR_IsMoving(0.1) == false then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PauseRotation</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsLeftControlKeyDown() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Repentance</Name><Default>false</Default><SpellID>20066</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;mouseover&amp;quot;) 
and IsLeftAltKeyDown() 
and not GetCurrentKeyBoardFocus() 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Holy Light</Name><Default>false</Default><SpellID>635</SpellID><Actions></Actions><Lua>local Crusade = UnitBuffID(&amp;quot;player&amp;quot;, 94686)
if supportkeystate ~= nil and Crusade ~= nil and PQR_CustomTargetHP &amp;lt; 95 and PQR_IsMoving(0.1) == false then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Seal of Truth</Name><Default>false</Default><SpellID>31801</SpellID><Actions></Actions><Lua>local SoT = UnitBuffID(&amp;quot;player&amp;quot;, 31801)

if SoT == nil and modkeystate == nil then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Seal of Righteousness</Name><Default>false</Default><SpellID>20154</SpellID><Actions></Actions><Lua>local SoT = UnitBuffID(&amp;quot;player&amp;quot;, 20154)

if SoT == nil and modkeystate ~= nil then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret friendly Cleanse</Name><Default>false</Default><SpellID>4987</SpellID><Actions></Actions><Lua>function CheckMagic(unitid)
  local i = 1
  local buff,_,_,count,bufftype,duration = UnitDebuff(unitid, i)
  while buff do
    if bufftype == &amp;quot;Poison&amp;quot; or bufftype == &amp;quot;Disease&amp;quot;  then return true end
    i = i + 1;
    buff,_,_,count,bufftype,duration = UnitDebuff(unitid, i)
  end
end


PQR_CustomTarget = &amp;quot;player&amp;quot;
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()

if GetNumRaidMembers() &amp;gt; 0 then
  group = &amp;quot;raid&amp;quot;
  members = GetNumRaidMembers()
end

for i = 1, members, 1 do
  local member = group..tostring(i)
  if UnitInRange(member) 
  and UnitIsCharmed(member) == nil
  and UnitIsDeadOrGhost(member) == nil 
  and PQR_IsOutOfSight(member) == false then
    if CheckMagic(member) then PQR_CustomTarget = member end
  end
end

if CheckMagic(PQR_CustomTarget) and UnitDebuffID(PQR_CustomTarget,30108) == nil then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Divine Storm</Name><Default>false</Default><SpellID>53385</SpellID><Actions></Actions><Lua>if modkeystate ~= nil  then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Ret Autotarget Low HP</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not healinit then

  function CalculateHP(t)
    local incomingheal = 0
    if UnitGetIncomingHeals(t) then incomingheal = UnitGetIncomingHeals(t)  end
    return 100 * ( UnitHealth(t) + incomingheal ) / UnitHealthMax(t)
  end

  function SafeTarget(t)
    if IsSpellInRange(tostring(GetSpellInfo(635)),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
    and PQR_IsOutOfSight(t) == false 
    then return true end 
  end

  healinit = true

end

if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
else 
  lowhpmembers = 0
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  local targethp = CalculateHP(&amp;quot;player&amp;quot;) + 20
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
    local memberhp = CalculateHP(member)
      if SafeTarget(member)  then
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; and UnitBuffID(member, 53563) == nil  then memberhp = memberhp - 1 else memberhp = memberhp + 3  end
      if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
      if memberhp &amp;lt; 88 then lowhpmembers = lowhpmembers +1 end
      if memberhp &amp;lt; targethp then
        PQR_CustomTarget = member
        targethp = memberhp
        PQR_CustomTargetHP = 100 * UnitHealth(PQR_CustomTarget) / UnitHealthMax(PQR_CustomTarget)
      end 

    end
  end

end

if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; CalculateHP(PQR_CustomTarget) then
	PQR_CustomTarget = &amp;quot;player&amp;quot;
	PQR_CustomTargetHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>New HoF</Name><Default>false</Default><SpellID>1044</SpellID><Actions></Actions><Lua>if modkeystate == nil then
function CheckSlow(unitid)
local buff = { 45524, 1715, 3408, 59638, 20164, 25809, 31589, 51585, 50040, 50041, 31126, 31124, 122, 44614, 1604, 45524, 50040, 339, 45334, 58179, 61391, 19306, 19185, 35101, 5116, 61394, 2974, 54644, 50245, 50271, 54706, 4167, 33395, 83302, 55080, 11113, 6136, 120, 116, 44614, 31589, 63529, 20170, 87194, 31125, 3409, 26679, 64695, 63685, 8056, 8034, 18118, 18223, 63311, 23694, 1715, 12323, 39965, 55536, 13099, 29703 }

for i,v in ipairs(buff) do
 if UnitDebuffID(unitid,v) then return true end
end
end

if not healinit then

  function CalculateHP(t)
    local incomingheal = 0
    if UnitGetIncomingHeals(t) then incomingheal = UnitGetIncomingHeals(t)  end
    return 100 * ( UnitHealth(t) + incomingheal ) / UnitHealthMax(t)
  end

  function SafeTarget(t)
    if IsSpellInRange(tostring(GetSpellInfo(635)),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
    and PQR_IsOutOfSight(t) == false then return true end
  end

  healinit = true

end

if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
else 
  lowhpmembers = 0
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  local targethp = CalculateHP(&amp;quot;player&amp;quot;) + 20
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
    local memberhp = CalculateHP(member)
      if SafeTarget(member)  then
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; and UnitBuffID(member, 53563) == nil  then memberhp = memberhp - 1 else memberhp = memberhp + 5  end
      if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
     if UnitBuffID(member, 23333) then memberhp = memberhp - 40 end
      if CheckSlow(member) then
        PQR_CustomTarget = member
        targethp = memberhp
      end 

    end
  end

end


if UnitBuffID(PQR_CustomTarget, 23333) ~= nil then return true end
if UnitPowerMax(PQR_CustomTarget) &amp;lt; 30000 and CheckSlow(PQR_CustomTarget) and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;)  then return true end
if PQR_CustomTargetHP &amp;lt; 80 and CheckSlow(PQR_CustomTarget) and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;)  then return true end
end

if modkeystate == 1 then
function CheckSlow(unitid)
local buff = { 45524, 1715, 3408, 59638, 20164, 25809, 31589, 51585, 50040, 50041, 31126, 31124, 122, 44614, 1604, 45524, 50040, 339, 45334, 58179, 61391, 19306, 19185, 35101, 5116, 61394, 2974, 54644, 50245, 50271, 54706, 4167, 33395, 83302, 55080, 11113, 6136, 120, 116, 44614, 31589, 63529, 20170, 87194, 31125, 3409, 26679, 64695, 63685, 8056, 8034, 18118, 18223, 63311, 23694, 1715, 12323, 39965, 55536, 13099, 29703 }

for i,v in ipairs(buff) do
 if UnitDebuffID(unitid,v) then return true end
end
end

if not healinit then

  function CalculateHP(t)
    local incomingheal = 0
    if UnitGetIncomingHeals(t) then incomingheal = UnitGetIncomingHeals(t)  end
    return 100 * ( UnitHealth(t) + incomingheal ) / UnitHealthMax(t)
  end

  function SafeTarget(t)
    if IsSpellInRange(tostring(GetSpellInfo(635)),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
     then return true end
  end

  healinit = true

end

if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
else 
  lowhpmembers = 0
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;party&amp;quot;
  local members = GetNumPartyMembers()
  local targethp = CalculateHP(&amp;quot;player&amp;quot;) + 20
  if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

  for i = 1, members, 1 do
    local member = group..tostring(i)
    local memberhp = CalculateHP(member)
      if SafeTarget(member)  then
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; and UnitBuffID(member, 53563) == nil  then memberhp = memberhp - 1 else memberhp = memberhp + 5  end
      if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
     if UnitBuffID(member, 23333) then memberhp = memberhp - 40 end
      if CheckSlow(member) then
        PQR_CustomTarget = member
        targethp = memberhp
      end 

    end
  end

end


if UnitBuffID(PQR_CustomTarget, 23333) ~= nil and UnitBuffID(PQR_CustomTarget, 6940)== nil then return true end
if UnitBuffID(PQR_CustomTarget, 23335) ~= nil and UnitBuffID(PQR_CustomTarget, 6940)== nil then return true end
if UnitPowerMax(PQR_CustomTarget) &amp;lt; 30000  and UnitBuffID(PQR_CustomTarget, 6940)== nil and CheckSlow(PQR_CustomTarget) and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;)  then return true end
if UnitBuffID(PQR_CustomTarget, 6940)== nil  and CheckSlow(PQR_CustomTarget) and UnitPower(PQR_CustomTarget) ~= UnitPower(&amp;quot;player&amp;quot;)  then return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>LayonHands</Name><Default>false</Default><SpellID>633</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(PQR_CustomTarget) and PQR_CustomTargetHP &amp;lt; 15 and UnitBuffID(PQR_CustomTarget, 23333) ~= nil then 
	return true
end
if UnitAffectingCombat(PQR_CustomTarget) and PQR_CustomTargetHP &amp;lt; 15 and UnitBuffID(PQR_CustomTarget, 23335) ~= nil then 
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>HandofSacrifice</Name><Default>false</Default><SpellID>6940</SpellID><Actions></Actions><Lua>if IsLeftAltKeyDown() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>BOL PVE</Name><Default>false</Default><SpellID>53563</SpellID><Actions></Actions><Lua>if not PQ_BeaconTarget then
	PQ_BeaconTarget = &amp;quot;player&amp;quot;
	BeaconTargetName = UnitName(&amp;quot;player&amp;quot;, true)
end

local hasMouseover = UnitExists(&amp;quot;mouseover&amp;quot;)
local mouseoverFriend = UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)
local group = &amp;quot;party&amp;quot;
local members = GetNumPartyMembers()

if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

if IsLeftAltKeyDown() and GetCurrentKeyBoardFocus() == nil then
	if hasMouseover and mouseoverFriend then
		local nameMouseover = UnitName(&amp;quot;mouseover&amp;quot;, true)
		for i = 1, members, 1 do
			local member = group..tostring(i)
    			if nameMouseover == UnitName(member, true) and IsSpellInRange(GetSpellInfo(53563), &amp;quot;mouseover&amp;quot;) == 1 then
    				PQ_BeaconTarget = member
    				PQ_BeaconTargetName = nameMouseover
    				PQR_CustomTarget = PQ_BeaconTarget
    				return true
    			end

		end
			if nameMouseover == UnitName(&amp;quot;player&amp;quot;, true)  and IsSpellInRange(GetSpellInfo(53563), &amp;quot;mouseover&amp;quot;) == 1 then
				PQ_BeaconTarget = &amp;quot;player&amp;quot;
				PQ_BeaconTargetName = nameMouseover
				PQR_CustomTarget = &amp;quot;player&amp;quot;
				return true
			end 
	 end
end

local Beacon = UnitBuffID(PQ_BeaconTarget, 53563)

if UnitName(PQ_BeaconTarget) == PQ_BeaconTargetName then	
	if Beacon then
		local BeaconExpire = select(7,UnitBuffID(PQ_BeaconTarget, 53563)) - GetTime()
		if BeaconExpire &amp;lt; 10  and IsSpellInRange(GetSpellInfo(53563), PQ_BeaconTarget) == 1 then
			PQR_CustomTarget = PQ_BeaconTarget
			return true
		end
	else 
		PQR_CustomTarget = PQ_BeaconTarget
		return true		
	end
else
	for i = 1, members, 1 do
		local member = group..tostring(i)
		if PQ_BeaconTargetName == UnitName(member, true) and IsSpellInRange(GetSpellInfo(53563), member) == 1 then
			PQ_BeaconTarget = member
			PQR_CustomTarget = PQ_BeaconTarget
			return true
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PALADIN>