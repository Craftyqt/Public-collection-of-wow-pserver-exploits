<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>-- Initialize --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then

  ----------------------------------
  -- Load Data Files
  ----------------------------------
	if not PQR_LoadLua(&amp;quot;PQR_idTip_core.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing the idTip lua file to view Spell ID&amp;apos;s!!!&amp;quot;, &amp;quot;Error&amp;quot;)
	end
	if not PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) then
		PQR_WriteToChat(&amp;quot;You are missing a key file: PQR_Nova_Data.lua. Please put this file in the Data folder and reload PQR. Thank You!&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_RotationStop()
		return true
	end

  ----------------------------------
  -- Activate Our Functions
  ----------------------------------
  CalculateHP = nil
  function CalculateHP(t)
    local incomingheal = 0
    if UnitGetIncomingHeals(t) then incomingheal = UnitGetIncomingHeals(t)  end
    return 100 * ( UnitHealth(t) + incomingheal ) / UnitHealthMax(t)
  end

  SafeTarget = nil
  function SafeTarget(t)
    if IsSpellInRange(GetSpellInfo(115175),t) == 1 
    and UnitIsCharmed(t) == nil
    and UnitIsDeadOrGhost(t) == nil 
    and UnitCanCooperate(&amp;quot;player&amp;quot;,t) 
    and PQR_IsOutOfSight(t) == false 
    then return true end 
  end
  
  StanceSelection = nil
  function StanceSelection(y)
  	if y == 1 then
  		if GetShapeshiftForm() ~= 1 then
  			CastSpellByID(115070, &amp;quot;player&amp;quot;)
  		end
  	elseif y == 2 then
	  	if GetShapeshiftForm() ~= 2 then
	  		CastSpellByID(103985, &amp;quot;player&amp;quot;)
  		end
  	end
  end
  
    -- Checks if our Cleanse will have a valid Debuff to Cleanse
  ValidDispel = nil
  function ValidDispel(t)
  	local HasValidDispel = false
  	local i = 1
  	local debuff = UnitDebuff(t, i)
  	while debuff do
  		local debuffType = select(5, UnitDebuff(t, i))
  		if debuffType == &amp;quot;Magic&amp;quot; or debuffType == &amp;quot;Poison&amp;quot; or debuffType == &amp;quot;Bleed&amp;quot; then
  			HasValidDispel = true
  		end
  		i = i + 1
  		debuff = UnitDebuff(t, i)
  	end
  	return HasValidDispel
  end
  
  ----------------------------------
  -- Register CVar&amp;apos;s
  ----------------------------------
  if GetCVar(&amp;quot;PlaceHolder1&amp;quot;) == nil then RegisterCVar(&amp;quot;PlaceHolder1&amp;quot;, 1) end
  if GetCVar(&amp;quot;PlaceHolder2&amp;quot;) == nil then RegisterCVar(&amp;quot;PlaceHolder2&amp;quot;, 1) end
  if GetCVar(&amp;quot;PlaceHolder3&amp;quot;) == nil then RegisterCVar(&amp;quot;PlaceHolder3&amp;quot;, 1) end
  if GetCVar(&amp;quot;PlaceHolder4&amp;quot;) == nil then RegisterCVar(&amp;quot;PlaceHolder4&amp;quot;, 1) end
  
  if not GetCVar(&amp;quot;LoadRotation&amp;quot;) then RegisterCVar(&amp;quot;LoadRotation&amp;quot;, 0) end

  if GetMacroInfo(&amp;quot;Load1&amp;quot;) ~= &amp;quot;Load1&amp;quot; then CreateMacro(&amp;quot;Load1&amp;quot;, 1, &amp;quot;/script if GetCVar(LoadRotation) then SetCVar(LoadRotation, 1) end&amp;quot;, 1, nil) end
  if GetMacroInfo(&amp;quot;Load2&amp;quot;) ~= &amp;quot;Load2&amp;quot; then CreateMacro(&amp;quot;Load2&amp;quot;, 1, &amp;quot;/script if GetCVar(LoadRotation) then SetCVar(LoadRotation, 2) end&amp;quot;, 1, nil) end
  if GetMacroInfo(&amp;quot;Load3&amp;quot;) ~= &amp;quot;Load3&amp;quot; then CreateMacro(&amp;quot;Load3&amp;quot;, 1, &amp;quot;/script if GetCVar(LoadRotation) then SetCVar(LoadRotation, 3) end&amp;quot;, 1, nil) end
  if GetMacroInfo(&amp;quot;Load4&amp;quot;) ~= &amp;quot;Load4&amp;quot; then CreateMacro(&amp;quot;Load4&amp;quot;, 1, &amp;quot;/script if GetCVar(LoadRotation) then SetCVar(LoadRotation, 4) end&amp;quot;, 1, nil) end
	
if tonumber(GetCVar(&amp;quot;LoadRotation&amp;quot;)) ~= 0 then 
	local RotationNumber = tonumber(GetCVar(&amp;quot;LoadRotation&amp;quot;))
	SetCVar(&amp;quot;LoadRotation&amp;quot;, 0)
	PQR_SwapRotation(RotationNumber)  
end
  
  
  ----------------------------------
  -- Setup Spell Delays
  ----------------------------------
  print(&amp;quot;Added&amp;quot;)
  PQR_AddToSpellDelayList(115070, 0, 1)
  PQR_AddToSpellDelayList(103985, 0, 1)
	PQR_RotationStarted = false
end

-- Monk Globals
PQ_Stance = GetShapeshiftForm()</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Jab</Name><Default>false</Default><SpellID>100780</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(100780)
	and not IsSpellKnown(115693)
	and PQ_ValidUnit
	and select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 40 
	and IsSpellInRange(GetSpellInfo(100780), PQ_ValidUnit) == 1 then
		StanceSelection(2)
		PQR_CustomTarget = PQ_ValidUnit
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>UnitPower Checker</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not InfoTimer then InfoTimer = GetTime() - 10 end

if GetTime() - InfoTimer &amp;gt;= 10 then
	InfoTimer = GetTime()
		PQR_WriteToChat(&amp;quot;PLAYER&amp;quot;, &amp;quot;Message&amp;quot;)
	for i =1, 5 do
		PQR_WriteToChat(select(i, PQ_UnitInfo(&amp;quot;player&amp;quot;)), &amp;quot;Message&amp;quot;)
	end
	if UnitExists(&amp;quot;target&amp;quot;) then
		PQR_WriteToChat(&amp;quot;TARGET&amp;quot;, &amp;quot;Message&amp;quot;)
		for i =1, 5 do
			PQR_WriteToChat(select(i, PQ_UnitInfo(&amp;quot;target&amp;quot;)), &amp;quot;Message&amp;quot;)
		end
	end
	if UnitExists(PQR_CustomTarget) then
		PQR_WriteToChat(&amp;quot;CUSTOM TARGET&amp;quot;, &amp;quot;Message&amp;quot;)
		for i =1, 5 do
			PQR_WriteToChat(select(i, PQ_UnitInfo(PQR_CustomTarget)), &amp;quot;Message&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tiger Palm</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(100787)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(100787), PQ_ValidUnit) == 1
	and (UnitPower(&amp;quot;player&amp;quot;, 12) &amp;gt; 3 or select(4, PQ_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; select(4, GetSpellInfo(100780)))
	and 100 * UnitHealth(PQR_CustomTarget) / UnitHealthMax(PQ_ValidUnit) &amp;gt;= 35 then
		StanceSelection(2)
		PQR_CustomTarget = PQ_ValidUnit
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blackout Kick</Name><Default>false</Default><SpellID>100784</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(100784)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(100784), PQ_ValidUnit) == 1
	and UnitPower(&amp;quot;player&amp;quot;, 12) &amp;gt;= 2 then
--	and select(1, PQ_UnitInfo(PQR_CustomTarget)) &amp;lt;= 35 then
		StanceSelection(2)
		PQR_CustomTarget = PQ_ValidUnit
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Tester</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not InfoTimer then InfoTimer = GetTime() - 10 end
local PQ_Stance = GetShapeshiftForm()

if GetTime() - InfoTimer &amp;gt;= 10 then
	if PQ_Stance == 1 then
		StanceSelection(2)
	elseif PQ_Stance == 2 then
		StanceSelection(1)
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Touch of Death</Name><Default>false</Default><SpellID>115080</SpellID><Actions></Actions><Lua>-- Touch of Death
if UnitBuffID(&amp;quot;player&amp;quot;, 115203)
 and PQR_SpellAvailable(115080)
 and UnitHealth(&amp;quot;target&amp;quot;) &amp;lt;= UnitHealth(&amp;quot;player&amp;quot;) then
 	StanceSelection(2)
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Stance Selector</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not AutoSwapTimer or not CombatCheckTimer then 
	AutoSwapTimer = GetTime() - 5 
	CombatCheckTimer = GetTime() - 5 
end
------------------------------

if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if GetTime() - CombatCheckTimer &amp;gt; 5 then
		AutoSwapTimer = GetTime()
		CombatCheckTimer = GetTime()
	end
	if GetTime() - AutoSwapTimer &amp;gt;= math.random(1000, 2500) / 1000 then
 	 	StanceSelection(1)
 	end
end

if PQR_CustomTargetHP &amp;gt;= 95 then
	if select(2, GetSpellCooldown(115098)) == 0
	 and select(5, PQ_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 
	 and PQ_Stance ~= 1 then
	 	PQR_DebugP(&amp;quot;We See this!&amp;quot;)
	 	StanceSelection(1)
	 	return true
	end
elseif PQR_CustomTargetHP &amp;lt;= 90 then
	if PQ_Stance ~= 1 then
		StanceSelection(1)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soothing Mists</Name><Default>false</Default><SpellID>115175</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt;= 80
 and PQR_SpellAvailable(115175)
 and not PQR_IsOutOfSight(PQR_CustomTarget) then
 	StanceSelection(1)
 	return true
end

if IsLeftShiftKeyDown() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Auto Target --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if SafeTarget(&amp;quot;target&amp;quot;) then 
  PQR_CustomTarget = &amp;quot;target&amp;quot; 
  PQR_CustomTargetHP = CalculateHP(&amp;quot;target&amp;quot;) 
else 
  lowhpmembers = 0
  PQR_CustomTarget = &amp;quot;player&amp;quot;
  PQR_CustomTargetHP = CalculateHP(&amp;quot;player&amp;quot;)
  local group = &amp;quot;&amp;quot;
  if IsInGroup() == true then
  	group = &amp;quot;party&amp;quot;
  elseif IsInRaid() == true and IsInGroup() == false then
  	group = &amp;quot;raid&amp;quot;
  end
  local members = GetNumGroupMembers() - 1

  for i = 1, members, 1 do
    local member = group..tostring(i)
	local memberhp = CalculateHP(member)
	if SafeTarget(member)  then
	  if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; then memberhp = memberhp - 2 end
	  if UnitThreatSituation(member) == 3 then memberhp = memberhp - 3 end
	  if memberhp &amp;lt; 82 then lowhpmembers = lowhpmembers + 1 end
	  if memberhp &amp;lt; PQR_CustomTargetHP then
	    PQR_CustomTarget = member
	    PQR_CustomTargetHP = memberhp
	  end
	end
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chi Wave</Name><Default>false</Default><SpellID>115098</SpellID><Actions></Actions><Lua>-- Chi Wave
if PQR_CustomTargetHP &amp;lt;= 90
 and PQR_SpellAvailable(115098)
 and not PQR_IsOutOfSight(PQR_CustomTarget) then
 	StanceSelection(1)
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Attack --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Target validation.
PQ_ValidUnit = nil
if UnitExists(&amp;quot;target&amp;quot;)
	and (UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) or UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;))
	and (not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) and not UnitIsCorpse(&amp;quot;target&amp;quot;))
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
then
	PQ_ValidUnit = &amp;quot;target&amp;quot;
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Stop Cast --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Spell Stop Casting
if UnitChannelInfo(&amp;quot;player&amp;quot;) then
	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175) then
		if PQR_CustomTargetHP &amp;gt;= 95 then
			SpellStopCasting()
			return true
		end
	end
end

if UnitCastingInfo(&amp;quot;player&amp;quot;) then
	if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(116694) then
		if PQR_CustomTargetHP &amp;gt;= 100 then
			SpellStopCasting()
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fortifying Brew</Name><Default>false</Default><SpellID>115203</SpellID><Actions></Actions><Lua>if IsLeftAltKeyDown()
 and not GetCurrentKeyBoardFocus()
 and PQR_SpellAvailable(115203) then
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chi Wave (Attack)</Name><Default>false</Default><SpellID>115098</SpellID><Actions></Actions><Lua>-- Chi Wave
if PQ_ValidUnit
 and PQR_SpellAvailable(115098)
 and not PQR_IsOutOfSight(PQ_ValidUnit) then
 	StanceSelection(1)
 	PQR_CustomTarget = PQ_ValidUnit
 	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Surging Mist</Name><Default>false</Default><SpellID>116694</SpellID><Actions></Actions><Lua>if PQR_CustomTargetHP &amp;lt;= 60
 and PQR_SpellAvailable(116694)
 and UnitChannelInfo(&amp;quot;player&amp;quot;)
 and not PQR_IsOutOfSight(PQR_CustomTarget) then
 	if UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115175) then
	 	StanceSelection(1)
	 	return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Detox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQ_Spell[PQ_Cleanse].check and PQ_Spell[PQ_Cleanse].isKnown then
	if PQR_CustomTargetHP &amp;gt; 80 then
		local group = &amp;quot;&amp;quot;
		if IsInGroup() then
			group = &amp;quot;party&amp;quot;
		elseif IsInRaid() then
			group = &amp;quot;raid&amp;quot;
		end
 		local members = GetNumGroupMembers() - 1
		local needToCleanse = false
		
		for i=1, members, 1 do 
			local PQ_CleanseTarget = group..tostring(i)
			if not DontDispel(PQ_CleanseTarget) 
			  and ValidDispel(PQ_CleanseTarget)
			  and UnitCanCooperate(&amp;quot;player&amp;quot;, PQ_CleanseTarget)
			  and IsSpellInRange(GetSpellInfo(PQ_Cleanse), PQ_CleanseTarget) == 1
			  and not PQR_IsOutOfSight(PQ_CleanseTarget) then
				PQR_CustomTarget = PQ_CleanseTarget
				needToCleanse = true
			end
		end
		if not DontDispel(&amp;quot;player&amp;quot;) and ValidDispel(&amp;quot;player&amp;quot;) then 
			PQR_CustomTarget = &amp;quot;player&amp;quot; 
			return true 
		elseif needToCleanse == true then 
			return true 
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Ability Tester --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>for i = 1, 10 do
 io.write(&amp;quot;TIME TO FIGHT!!!!&amp;quot;, &amp;quot;i&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>