<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>--- healing spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsSpellKnown(88625) then return PQR_SwapRotation(&amp;quot;Holy PvE [6/32/3] (xrnHoly)&amp;quot;) end

if UnitCastingInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(605) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Power Word: Fortitude</Name><Default>false</Default><SpellID>21562</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then

  if not CheckFort then
    function CheckFort(t)
      local buff = { 21562, 469, 6307, 90364 } 
      for i=1, #buff do if UnitBuffID(t,buff[i]) then return true end end
    end
  end

  for i=1,#members do 
    if not CheckFort(members[i].Unit) and UnitInRange(members[i].Unit) and not UnitIsDeadOrGhost(members[i].Unit) 
    then return true end
  end

end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Protection</Name><Default>false</Default><SpellID>27683</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then

  if not CheckShad then
    function CheckShad(t)
      local buff = { 79107, 19891 } 
      for i=1, #buff do if UnitBuffID(t,buff[i]) then return true end end
    end
  end

  for i=1,#members do 
    if not CheckShad(members[i].Unit) and UnitInRange(members[i].Unit) and not UnitIsDeadOrGhost(members[i].Unit) 
    then return true end
  end

end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renew</Name><Default>false</Default><SpellID>139</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 95 
and not UnitBuffID(members[1].Unit, 139,&amp;quot;PLAYER&amp;quot;) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Power Word: Shield</Name><Default>false</Default><SpellID>17</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 100
and not UnitDebuffID(members[1].Unit,6788) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inner Will</Name><Default>false</Default><SpellID>73413</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 588) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 73413) 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowfiend</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 70 
and select(2,GetSpellCooldown(34433)) &amp;lt; 2
and UnitIsEnemy(&amp;quot;player&amp;quot;,members[1].Unit..&amp;quot;target&amp;quot;) 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then 
  CastSpellByID(34433,members[1].Unit..&amp;quot;target&amp;quot;) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash Heal</Name><Default>false</Default><SpellID>2061</SpellID><Actions></Actions><Lua>if ( members[1].HP &amp;lt; 85 or UnitBuffID(&amp;quot;player&amp;quot;,88688) ) 
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 30 
and ( not PQR_IsMoving(1) or UnitBuffID(&amp;quot;player&amp;quot;,88688) )
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heal</Name><Default>false</Default><SpellID>2050</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 85
and not PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Penance</Name><Default>false</Default><SpellID>47540</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 85 
and not PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mass Dispel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsLeftControlKeyDown() 
and not GetCurrentKeyBoardFocus() 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then
  CastSpellByName(tostring(GetSpellInfo(32375)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispel Magic</Name><Default>false</Default><SpellID>527</SpellID><Actions></Actions><Lua>if not CheckMagics then 
  function CheckMagics(t)
    for n=1,40 do 
      local buff,_,_,count,bufftype,duration = UnitDebuff(t, n)
      if buff then 
        if bufftype == &amp;quot;Magic&amp;quot; then return true end 
      else
        break 
      end       
    end
  end
end

for i=1,#members do
  if not BadEffects(members[i].Unit) 
  and CheckMagics(members[i].Unit) 
  then 
    PQR_CustomTarget = members[i].Unit
    return true 
  end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pain Suppression</Name><Default>false</Default><SpellID>33206</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 40
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Desesperate Prayer</Name><Default>false</Default><SpellID>19236</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 20
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inner Focus</Name><Default>false</Default><SpellID>89485</SpellID><Actions></Actions><Lua>if CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 60 
and not PQR_IsMoving(1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Prayer of Mending</Name><Default>false</Default><SpellID>33076</SpellID><Actions></Actions><Lua>if not MendingUp then
  function MendingUp()
    for i = 1, #members do
    if UnitBuffID(members[i].Unit,33076,&amp;quot;PLAYER&amp;quot;) then return true end
    end
  end 
end 

if not MendingUp() 
and members[1].HP &amp;lt; 100
and PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Binding Heal</Name><Default>false</Default><SpellID>32546</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 90 
and CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 90 
and not UnitIsUnit(&amp;quot;player&amp;quot;, members[1].Unit) 
and not PQR_IsCastingSpell(32546) 
and not PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Torrent</Name><Default>false</Default><SpellID>28730</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 80
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- offensive spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitIsDead(&amp;quot;target&amp;quot;) 
or ImmuneTarget(&amp;quot;target&amp;quot;) 
or not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
or tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(5,5),16) == 4
or ( not UnitAffectingCombat(&amp;quot;target&amp;quot;) and not SpecialAggro(&amp;quot;target&amp;quot;) and not UnitIsPlayer(&amp;quot;target&amp;quot;) )
or members[1].HP &amp;lt; 85
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Fire</Name><Default>false</Default><SpellID>14914</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Death</Name><Default>false</Default><SpellID>32379</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 25 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Smite</Name><Default>false</Default><SpellID>585</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Power Infusion</Name><Default>false</Default><SpellID>10060</SpellID><Actions></Actions><Lua>if not PQR_IsMoving(1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mana Burn</Name><Default>false</Default><SpellID>8129</SpellID><Actions></Actions><Lua>if select(2,UnitPowerType(&amp;quot;target&amp;quot;)) == &amp;quot;MANA&amp;quot; 
and 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 40 
and 100 * UnitPower(&amp;quot;target&amp;quot;) / UnitPowerMax(&amp;quot;target&amp;quot;) &amp;gt; 10 
and UnitPowerMax(&amp;quot;target&amp;quot;) &amp;gt; 100000
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispel Magic Offensive</Name><Default>false</Default><SpellID>527</SpellID><Actions></Actions><Lua>if not EnemyBuff then
  function EnemyBuff(t)
    local buff = { 43242, 92965, 93631, 76634, 88186, 76307, 31884, 2825, 32182, 80353, 1719, 17, 
                   96802, 6940, 11426, 29166, 54428 } 
    for i=1, #buff do if UnitBuffID(t,buff[i]) then return true end end
  end
end

if EnemyBuff(&amp;quot;target&amp;quot;) then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Control</Name><Default>false</Default><SpellID>605</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() 
and not GetCurrentKeyBoardFocus() 
then 
  if UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;mouseover&amp;quot;) then 
    PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
  else 
    PQR_CustomTarget = &amp;quot;target&amp;quot; 
  end
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Word: Pain</Name><Default>false</Default><SpellID>589</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 40 
and not UnitDebuffID(&amp;quot;target&amp;quot;, 589,&amp;quot;PLAYER&amp;quot;) 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Devouring Plague</Name><Default>false</Default><SpellID>2944</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;gt; 40 
and not UnitDebuffID(&amp;quot;target&amp;quot;, 2944,&amp;quot;PLAYER&amp;quot;) 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Spike</Name><Default>false</Default><SpellID>73510</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 40 
and not UnitDebuffID(&amp;quot;target&amp;quot;, 2944,&amp;quot;PLAYER&amp;quot;) 
and not UnitDebuffID(&amp;quot;target&amp;quot;, 589,&amp;quot;PLAYER&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mind Blast</Name><Default>false</Default><SpellID>8092</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) &amp;lt; 40 
and ( select(4,UnitDebuffID(&amp;quot;target&amp;quot;,87178)) == 3 
       or ( select(4,UnitDebuffID(&amp;quot;target&amp;quot;,87178)) == 2 and PQR_IsCastingSpell(73510) ) )
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Sheep Breaker</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local enemy = { &amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;, &amp;quot;arena1&amp;quot;, &amp;quot;arena2&amp;quot;, &amp;quot;arena3&amp;quot;, &amp;quot;arena4&amp;quot;, &amp;quot;arena5&amp;quot; }
for i=1, #enemy do
  local spell,_,_,_,_,endtime = UnitCastingInfo(enemy[i])
  if spell == tostring(GetSpellInfo(118)) 
  and endtime 
  and endtime - GetTime()*1000 &amp;lt; 400 
  and not PQR_IsOutOfSight(enemy[i]) 
  and not UnitBuffID(&amp;quot;player&amp;quot;,17) 
  and not UnitBuffID(&amp;quot;player&amp;quot;,76669) 
  and not UnitBuffID(&amp;quot;player&amp;quot;,47515) 
  then
    SpellStopCasting()
    CastSpellByID(32379,enemy[i])
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

if cd == 0 and havecd == 1 
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 20
and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil 
then 
  UseInventoryItem(13) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- initialize ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_LoadLua(&amp;quot;PQR_xrn.lua&amp;quot;) then
  PQR_WriteToChat(&amp;quot;PQR_xrn.lua is missing. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
  PQR_StopRotation()
  return true
end

CastClick() 
HealEngine() 

-- Uncoment next line to show healing target on focus
-- if members[1].Unit then FocusUnit(members[1].Unit) end 

if IsLeftAltKeyDown() 
or IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PRIEST>