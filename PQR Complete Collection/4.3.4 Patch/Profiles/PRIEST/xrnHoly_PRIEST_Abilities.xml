<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>--- initialize ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_LoadLua(&amp;quot;PQR_xrn.lua&amp;quot;) then
  PQR_WriteToChat(&amp;quot;PQR_xrn.lua is missing. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
  PQR_StopRotation()
  return true
end

CastClick() 
HealEngine() 
ModSwitch(&amp;quot;\124cFFFFE640Serenity Enabled&amp;quot;,&amp;quot;\124cFF40C9FFSanctuary Enabled&amp;quot;) 

-- Uncoment next line to show healing target on focus
-- if members[1].Unit then FocusUnit(members[1].Unit) end 

if IsLeftAltKeyDown() 
or IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- special events ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Avoid sudden death on Ultraxion
local fadingtime = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,110070))
if fadingtime and fadingtime - GetTime() &amp;lt; 1.5 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

-- Avoid Hour of Twilight on Ultraxion, Delete next 3 lines if you are working as tank
local channelSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
if channelSpell == GetSpellInfo(109417) and endTime/1000 - GetTime() &amp;lt; 1.1 
then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

-- Avoid sudden death on Madness 
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 1 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Chakra</Name><Default>false</Default><SpellID>14751</SpellID><Actions></Actions><Lua>if ( UnitAffectingCombat(&amp;quot;player&amp;quot;) or IsLeftShiftKeyDown() ) 
and ( ( canAOE and not UnitBuffID(&amp;quot;player&amp;quot;, 81206) ) or ( not canAOE and not UnitBuffID(&amp;quot;player&amp;quot;, 81208) ) ) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadow Protection</Name><Default>false</Default><SpellID>27683</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then

  if not CheckShad then
    function CheckShad(t)
      local buff = { 79107, 19891 } 
      for i=1, #buff do if UnitBuffID(t,buff[i]) then return true end end
    end
  end

  for i=1,#members do 
    if not CheckShad(members[i].Unit) and UnitInRange(members[i].Unit) and not UnitIsDeadOrGhost(members[i].Unit) 
    then return true end
  end

end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Power Word: Fortitude</Name><Default>false</Default><SpellID>21562</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then

  if not CheckFort then
    function CheckFort(t)
      local buff = { 21562, 469, 6307, 90364 } 
      for i=1, #buff do if UnitBuffID(t,buff[i]) then return true end end
    end
  end

  for i=1,#members do 
    if not CheckFort(members[i].Unit) and UnitInRange(members[i].Unit) and not UnitIsDeadOrGhost(members[i].Unit) 
    then return true end
  end

end</Lua><RecastDelay>10000</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inner Fire</Name><Default>false</Default><SpellID>588</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 588) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 73413) 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Mass Dispel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsRightAltKeyDown() 
and not GetCurrentKeyBoardFocus() 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then
  CastSpellByName(tostring(GetSpellInfo(32375)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Lightwell</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsRightShiftKeyDown() 
and not GetCurrentKeyBoardFocus() 
and select(2,GetSpellCooldown(724)) &amp;lt; 2 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then
  CastSpellByName(tostring(GetSpellInfo(724)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Fade</Name><Default>false</Default><SpellID>586</SpellID><Actions></Actions><Lua>if UnitThreatSituation(&amp;quot;player&amp;quot;) == 3 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arcane Torrent</Name><Default>false</Default><SpellID>28730</SpellID><Actions></Actions><Lua>if IsSpellKnown(28730) 
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 80
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- healing spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false
  local spells = { 64843, 64901 }
  for i=1, #spells do PQR_AddToSpellDelayList(spells[i],0,1) end
end

if IsSpellKnown(47540) then return PQR_SwapRotation(&amp;quot;Discipline PvP [31/10/0] (xrnDisc)&amp;quot;) end

local InCombat = false
for i=1, #members do if UnitAffectingCombat(members[i].Unit) then InCombat = true end end
if not InCombat and not IsLeftShiftKeyDown() 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shadowfiend</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 70 
and select(2,GetSpellCooldown(34433)) &amp;lt; 2
and UnitIsEnemy(&amp;quot;player&amp;quot;,members[1].Unit..&amp;quot;target&amp;quot;) 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then 
  CastSpellByID(34433,members[1].Unit..&amp;quot;target&amp;quot;) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Guardian Spirit</Name><Default>false</Default><SpellID>47788</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 10 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dispel Magic</Name><Default>false</Default><SpellID>527</SpellID><Actions></Actions><Lua>if not CheckMagics then 
  function CheckMagics(t)
    for n=1,40 do 
      local buff,_,_,count,bufftype,duration = UnitDebuff(t, n)
      if buff then 
        if bufftype == &amp;quot;Magic&amp;quot; then return true end 
      else
        break 
      end       
    end
  end
end

for i=1,#members do
  if not BadEffects(members[i].Unit) 
  and CheckMagics(members[i].Unit) 
  then 
    PQR_CustomTarget = members[i].Unit
    return true 
  end
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Prayer of Mending</Name><Default>false</Default><SpellID>33076</SpellID><Actions></Actions><Lua>if not MendingUp then
  function MendingUp()
    for i = 1, #members do
    if UnitBuffID(members[i].Unit,33076,&amp;quot;PLAYER&amp;quot;) then return true end
    end
  end 
end 

if ( ( group.low &amp;gt; 1 and not MendingUp() )  or ( canAOE and UnitBuffID(&amp;quot;player&amp;quot;,14751) ) ) 
and ( canAOE or ( not canAOE and UnitBuffID(&amp;quot;player&amp;quot;,81208) ) or select(2,GetSpellCooldown(14751)) == 30 ) 
then 
  PQR_CustomTarget = members[1].Unit 
  return true 
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Circle of Healing</Name><Default>false</Default><SpellID>34861</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 95 
and group.low &amp;gt; 3 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Prayer of Healing</Name><Default>false</Default><SpellID>596</SpellID><Actions></Actions><Lua>if ( group.low &amp;gt; 4 or ( canAOE and UnitBuffID(&amp;quot;player&amp;quot;,14751) and not PQR_IsCastingSpell(596) ) ) 
and ( canAOE or ( not canAOE and UnitBuffID(&amp;quot;player&amp;quot;,81208) ) ) 
and select(4,UnitBuffID(&amp;quot;player&amp;quot;, 63735)) == 2
and not PQR_IsCastingSpell(596) 
and not PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Renew</Name><Default>false</Default><SpellID>139</SpellID><Actions></Actions><Lua>if ( members[1].HP &amp;lt; 50 
or ( ( members[1].HP &amp;lt; 99 or UnitGroupRolesAssigned(members[1].Unit) == &amp;quot;TANK&amp;quot; ) and UnitThreatSituation(members[1].Unit) == 3 ) 
or ( members[1].HP &amp;lt; 90 and PQR_IsMoving(1) ) ) 
and not UnitBuffID(members[1].Unit,139,&amp;quot;PLAYER&amp;quot;) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>500</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Holy Word</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsUsableSpell(88685) 
and select(2,GetSpellCooldown(88685)) &amp;lt; 2 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and not PQR_IsMoving(1)
then
  CastSpellByName(tostring(GetSpellInfo(88685)))
  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end 
  return true
end

if members[1].HP &amp;lt; 95 
and IsUsableSpell(88684) 
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
and select(2,GetSpellCooldown(88684)) &amp;lt; 2 then
  CastSpellByName(GetSpellInfo(88684),members[1].Unit)
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Greater Heal</Name><Default>false</Default><SpellID>2060</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 60 
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 50  
and ( select(4,UnitBuffID(&amp;quot;player&amp;quot;, 63735)) == 2 or ( select(4,UnitBuffID(&amp;quot;player&amp;quot;, 63735)) == 1 and PQR_IsCastingSpell(2061) ) )
and ( not canAOE or ( canAOE and UnitBuffID(&amp;quot;player&amp;quot;, 81206) ) or select(2,GetSpellCooldown(14751)) == 30 ) 
and not PQR_IsMoving(1)
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Binding Heal</Name><Default>false</Default><SpellID>32546</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 60 
and CalculateHP(&amp;quot;player&amp;quot;) &amp;lt; 90
and not UnitIsUnit(&amp;quot;player&amp;quot;, members[1].Unit)
and not PQR_IsMoving(1) 
and ( not canAOE or ( canAOE and UnitBuffID(&amp;quot;player&amp;quot;, 81206) ) or select(2,GetSpellCooldown(14751)) == 30 ) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Flash Heal</Name><Default>false</Default><SpellID>2061</SpellID><Actions></Actions><Lua>if ( members[1].HP &amp;lt; 60 or UnitBuffID(&amp;quot;player&amp;quot;,88688) ) 
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 50 
and ( not canAOE or ( canAOE and UnitBuffID(&amp;quot;player&amp;quot;, 81206) ) or select(2,GetSpellCooldown(14751)) == 30 ) 
and not PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heal</Name><Default>false</Default><SpellID>2050</SpellID><Actions></Actions><Lua>if ( members[1].HP &amp;lt; 95 or ( members[1].HP &amp;lt; 100 and not UnitBuffID(members[1].Unit, 139) ) ) 
and ( not canAOE or ( canAOE and UnitBuffID(&amp;quot;player&amp;quot;, 81206) ) or select(2,GetSpellCooldown(14751)) == 30 ) 
and not PQR_IsMoving(1) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Power Word: Shield</Name><Default>false</Default><SpellID>17</SpellID><Actions></Actions><Lua>if members[1].HP &amp;lt; 40 
and not UnitDebuffID(members[1].Unit,6788) 
then
  PQR_CustomTarget = members[1].Unit
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Extra Follow</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not SLASH_EXTRAFOLLOW1 then
  SLASH_EXTRAFOLLOW1 = &amp;quot;/extra&amp;quot;
  SlashCmdList.EXTRAFOLLOW = function(msg)
    if not extrafollowactive then extrafollowactive = true else extrafollowactive = false end
    if extrafollowactive then print(&amp;quot;Auto follow TANK enabled&amp;quot;) else print(&amp;quot;Auto follow TANK disabled&amp;quot;) end
  end
end

if not HaveTank then
  function HaveTank()
    local group = &amp;quot;party&amp;quot;
    local members = GetNumPartyMembers()
    if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end
    for i = 1, members, 1 do
      local member = group..tostring(i)
      if UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot; 
      and not UnitIsDeadOrGhost(member) 
      then return member end
    end
  end
end

if HaveTank() and extrafollowactive then
  px,py = GetPlayerMapPosition(&amp;quot;player&amp;quot;)
  tx,ty = GetPlayerMapPosition(HaveTank())
  angle = floor ( ( math.pi - math.atan2(px-tx,ty-py) - GetPlayerFacing() ) / (math.pi*2) * 32 + 0.5 ) % 32
  if not IsMouselooking() and px ~= 0 and tx ~= 0 then
    if angle &amp;gt; 0 and angle &amp;lt; 16 then TurnLeftStart() end
    if angle &amp;gt; 15 and angle &amp;lt; 31 then TurnRightStart() end
    if angle == 31 or angle == 0 then 
      TurnRightStop() TurnLeftStop() 
      if not CheckInteractDistance(HaveTank(), 4) and not UnitChannelInfo(&amp;quot;player&amp;quot;) and not UnitCastingInfo(&amp;quot;player&amp;quot;) 
      then MoveForwardStart() else MoveForwardStop() end
    end
    manualcontrol = false
  end
end

if not manualcontrol and IsMouselooking() then
  manualcontrol = true MoveForwardStop() TurnRightStop() TurnLeftStop() 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PRIEST>