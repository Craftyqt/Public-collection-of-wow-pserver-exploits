<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>All: Battle Shout</Name><Default>false</Default><SpellID>6673</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;)
  and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and ( UnitAffectingCombat(&amp;quot;player&amp;quot;) or UnitAffectingCombat(&amp;quot;target&amp;quot;) or UnitAffectingCombat(&amp;quot;targettarget&amp;quot;) )
  and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 60 then
  return true
end</Lua><RecastDelay>60000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All: Rend</Name><Default>false</Default><SpellID>772</SpellID><Actions></Actions><Lua>if UnitDebuffID(&amp;quot;target&amp;quot;, 94009) == nil then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All: Heroic Strike</Name><Default>false</Default><SpellID>78</SpellID><Actions></Actions><Lua>if IsSpellKnown(78)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 1
  and select(2, GetSpellCooldown(78)) == 0 
then if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 45 then return true end end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>All: Slam</Name><Default>false</Default><SpellID>1464</SpellID><Actions></Actions><Lua>local currentSpec = 0
local spec = &amp;quot;&amp;quot;
for i = 1, GetNumTalentTabs() do
	local _,_,_,_,pointsSpent = GetTalentTabInfo(i)
	if pointsSpent &amp;gt;= currentSpec then
		currentSpec = pointsSpent;
		spec = i;
	end
end

if spec == 1 and SpellIsTargeting() == nil then
	return true
else
	local bloodsurge = UnitBuffID(&amp;quot;player&amp;quot;, 46916)
	
	if bloodsurge ~= nil and SpellIsTargeting() == nil then
		return true
	end
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Trinket</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 14</Actions><Lua>if UnitFactionGroup(&amp;quot;player&amp;quot;) == &amp;quot;Alliance&amp;quot; then
	if GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 64793 then
		myTrinket = GetItemCooldown(64793)	
	else
		myTrinket = nil
	end
else
	if GetInventoryItemID(&amp;quot;player&amp;quot;, 14) == 64794 then
		
		myTrinket = GetItemCooldown(64794)	
	else
		myTrinket = nil
	end
end

if myTrinket ~= nil then
	--check if we have a debuff
	if myTrinket == 0 then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 118) --Polymorph
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 605) --Mind Control
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 51514) --Hex
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 6358) --Seduction
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 853) --Hammer of Justice	
end

		if pvpdebuffCheck ~= nil then
			if (expire - GetTime()) &amp;gt;= 4 then
				return true
			else
				return false
			end
		else
			return false
		end
	else
		return false
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Victory Rush</Name><Default>false</Default><SpellID>34428</SpellID><Actions></Actions><Lua>local VictoryRushTime, _, _, _, _, _, VictoryRushExpireTime = UnitBuffID(&amp;quot;player&amp;quot;, 32216)
local myHealth = UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100
local targetHealth = UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) * 100
	
if IsSpellKnown(34428)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and IsSpellInRange(GetSpellInfo(34428), &amp;quot;target&amp;quot;) == 1
  and select(2, GetSpellCooldown(34428)) == 0 then	
	if VictoryRushTime then
		VictoryRushTime = VictoryRushExpireTime - GetTime()
		if VictoryRushTime &amp;lt; 5 
		  or myHealth &amp;lt; 65 
		  or targetHealth &amp;lt; 30 then
			return true
		end
	else
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Enraged Regeneration</Name><Default>false</Default><SpellID>55694</SpellID><Actions></Actions><Lua>local enraged = UnitBuffID(&amp;quot;player&amp;quot;, 14202)
local unithealth = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)
		
if IsSpellKnown(55694)
  and UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and unithealth &amp;lt; 50
  and select(2, GetSpellCooldown(55694)) == 0
  and enraged
then return true end</Lua><RecastDelay>180000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Berserker Rage</Name><Default>false</Default><SpellID>18499</SpellID><Actions></Actions><Lua>pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 5782) --fear
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 8122) --psychic scream
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 6770) --sap
end
if pvpdebuffCheck == nil then
	pvpdebuffCheck, _, _, _, _, _, expire = UnitDebuffID(&amp;quot;player&amp;quot;, 20066) --Repentance
end
if pvpdebuffCheck ~= nil then
	if (expire - GetTime()) &amp;gt;= 4 then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Shattering Throw</Name><Default>false</Default><SpellID>64382</SpellID><Actions></Actions><Lua>local bDS = UnitBuffID(&amp;quot;target&amp;quot;, 642) --Divine Shield
local bBOP = UnitBuffID(&amp;quot;target&amp;quot;, 1022) --Hand of Protection
local bIB = UnitBuffID(&amp;quot;target&amp;quot;, 45438) --Ice Block
local stance = GetShapeshiftForm()

if IsSpellKnown(64382)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and IsSpellInRange(GetSpellInfo(64382), &amp;quot;target&amp;quot;) == 1
  and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
  and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 25 then
	if bDS or bBOP or bIB then
		if stance ~= 1 then
			CastSpellByName(GetSpellInfo(2457))
			return true
		else
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Hamstring</Name><Default>false</Default><SpellID>1715</SpellID><Actions>/startattack</Actions><Lua>local levelCheck = UnitLevel(&amp;quot;target&amp;quot;)
if levelCheck == -1 then
	--boss level is -1... do not cast this on a boss.
	return false
end

if UnitName(&amp;quot;target&amp;quot;) ~= nil then
	bHoF = UnitBuffID(&amp;quot;target&amp;quot;, 1044) --Hand of Freedom
	if bHoF == nil then
		bHoF = UnitBuffID(&amp;quot;target&amp;quot;, 53271) --Master&amp;apos;s Call
	end
	bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 1715) --Hamstring
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 45524) --Chains of Ice
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 16979) --Feral Charge
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 2974) --Wing Clip
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 13809) --Frost Trap...
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 5116) --Conc Shot
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 116) --Frostbolt
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 120) --Cone of Cold
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 11113) --Blast Wave
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 31589) --Slow
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 15407) --Mind Flay
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 3408) --Crippling Poison
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 26679) --Deadly Throw
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 8056) --Frost Shock
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 3600) --Earthbind
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 18223) --Curse of Exhaustion
	end
	if bSlow == nil then
		bSlow = UnitDebuffID(&amp;quot;target&amp;quot;, 12323) --Piercing Howl
	end
	if bHoF == nil and bSlow == nil then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Throwdown</Name><Default>false</Default><SpellID>85388</SpellID><Actions>/startattack</Actions><Lua>local targetHealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)

if IsSpellKnown(85388)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
  and PQR_SpellAvailable(85388)
  and IsSpellInRange(GetSpellInfo(85388), &amp;quot;target&amp;quot;) == 1 then
	if IsActiveBattlefieldArena() == 1 then
		if targetHealth &amp;lt; 40
		  or ( UnitCastingInfo(&amp;quot;target&amp;quot;) and not PQR_SpellAvailable(6552) ) then
			return true
		end
	else 
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Colossus Smash</Name><Default>false</Default><SpellID>86346</SpellID><Actions>/startattack</Actions><Lua>local csDebuff = UnitDebuffID(&amp;quot;target&amp;quot;, 86346, &amp;quot;player&amp;quot;)

if PQR_SpellAvailable(86346)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and IsSpellInRange(GetSpellInfo(86346), &amp;quot;target&amp;quot;) == 1 then
	if not csDebuff and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 25 then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Mortal Strike</Name><Default>false</Default><SpellID>12294</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(12294)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and IsSpellInRange(GetSpellInfo(12294), &amp;quot;target&amp;quot;) == 1
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Execute</Name><Default>false</Default><SpellID>5308</SpellID><Actions></Actions><Lua>local unithealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local count = select(4, UnitBuffID(&amp;quot;player&amp;quot;,90806))

if IsSpellKnown(5308)
  and UnitExists(&amp;quot;target&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
  and IsSpellInRange(GetSpellInfo(5308), &amp;quot;target&amp;quot;) == 1
  and select(2, GetSpellCooldown(5308)) == 0 then
	if unithealth &amp;lt; 20 then
		if count ~= 5 or UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 65 then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Overpower</Name><Default>false</Default><SpellID>7384</SpellID><Actions>/startattack</Actions><Lua>local stance = GetShapeshiftForm()

if IsSpellKnown(7384)
  and IsSpellInRange(GetSpellInfo(7384), &amp;quot;target&amp;quot;) == 1
  and select(2, GetSpellCooldown(7384)) == 0
  and UnitExists(&amp;quot;target&amp;quot;)
  and stance == 1
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- defensive spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- offensive spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local buff = { 642, 45438, 31224, 23920, 33786, 19263, 97417, 97977 }
local mob = { &amp;quot;Training Dummy&amp;quot;, &amp;quot;Raider&amp;apos;s Training Dummy&amp;quot;, &amp;quot;Twisted Spirit&amp;quot;, &amp;quot;AmaniÂ´shi Hatcher&amp;quot;, &amp;quot;Hakkar&amp;apos;s Chains&amp;quot;, &amp;quot;Exposed Head of Magmaw&amp;quot; }
local noaggromobs = nil
local immunity = nil

for i,v in ipairs(buff) do
  if UnitBuffID(&amp;quot;target&amp;quot;,v) then immunity = 1 end
end

for i,v in ipairs(mob) do
  if UnitName(&amp;quot;target&amp;quot;) == v then noaggromobs = 1 end
end

if UnitIsDead(&amp;quot;target&amp;quot;)
or immunity
or UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) == nil
or (UnitAffectingCombat(&amp;quot;target&amp;quot;) == nil and noaggromobs == nil and UnitIsPlayer(&amp;quot;target&amp;quot;) == nil)
or tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(5,5),16) == 4
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Mortal Strike</Name><Default>false</Default><SpellID>12294</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Overpower</Name><Default>false</Default><SpellID>7384</SpellID><Actions>/startattack</Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Colossus Smash</Name><Default>false</Default><SpellID>86346</SpellID><Actions>/startattack</Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Execute</Name><Default>false</Default><SpellID>5308</SpellID><Actions></Actions><Lua>local unithealth = 100 * UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;)
local _,_,_,count = UnitBuffID(&amp;quot;player&amp;quot;,90806)
		
if unithealth &amp;lt; 20 then
if count ~= 5 or UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 65 then
  return true
end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Victory Rush</Name><Default>false</Default><SpellID>34428</SpellID><Actions></Actions><Lua>local VictoryRushTime, _, _, _, _, _, VictoryRushExpireTime = UnitBuffID(&amp;quot;player&amp;quot;, 32216)
local myHealth = UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) * 100
local targetHealth = UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) * 100
		
if VictoryRushTime ~= nil then
VictoryRushTime = VictoryRushExpireTime - GetTime()
if VictoryRushTime &amp;lt; 5 or myHealth &amp;lt; 65 or targetHealth &amp;lt; 30 then
	return true
end
else
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Battle Shout</Name><Default>false</Default><SpellID>6673</SpellID><Actions></Actions><Lua>local BattleShout, _, _, _, _, _, BattleShoutExpire = UnitBuffID(&amp;quot;player&amp;quot;, 57330)

if BattleShout ~= nill then
	if UnitAffectingCombat(&amp;quot;player&amp;quot;)
	  and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 60 
	  and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
		return true
	end
	BattleShoutExpire =(BattleShoutExpire - GetTime())
	if BattleShoutExpire &amp;lt; 10 then
		return true
	end
else
	return true
end</Lua><RecastDelay>60000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Cleave</Name><Default>false</Default><SpellID>845</SpellID><Actions></Actions><Lua>local BS = UnitBuffID(&amp;quot;player&amp;quot;, 46924)

if BS == nil then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Heroic Strike</Name><Default>false</Default><SpellID>78</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 70 then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Rend</Name><Default>false</Default><SpellID>772</SpellID><Actions></Actions><Lua>local Rend, _, _, _, _, _, RendExpire = UnitDebuffID(&amp;quot;target&amp;quot;, 94009)

if Rend ~= nil then
	Rend = RendExpire - GetTime()
	if RendExpire &amp;lt;= 2 then
		return true
	end 
else
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Slam</Name><Default>false</Default><SpellID>1464</SpellID><Actions></Actions><Lua>local rage = UnitPower(&amp;quot;player&amp;quot;)

if rage &amp;gt; 20 then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Inner Rage</Name><Default>false</Default><SpellID>1134</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 90 then return true end</Lua><RecastDelay>30000</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Autotarget</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitExists(&amp;quot;target&amp;quot;) == nil then
  TargetNearestEnemy()
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Heroic Strike (proc)</Name><Default>false</Default><SpellID>78</SpellID><Actions></Actions><Lua>local BattleTrance1 = UnitBuffID(&amp;quot;player&amp;quot;, 12322)
local BattleTrance2 = UnitBuffID(&amp;quot;player&amp;quot;, 85741)
local BattleTrance3 = UnitBuffID(&amp;quot;player&amp;quot;, 85742)

if BattleTrance1 ~= ni or BattleTrance2 ~= ni or BattleTrance3 ~= nil then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Bladestorm</Name><Default>false</Default><SpellID>46924</SpellID><Actions></Actions><Lua>if IsSpellInRange(&amp;quot;Heroic Strike&amp;quot;, &amp;quot;target&amp;quot;) == 1 then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Thunderclap</Name><Default>false</Default><SpellID>6343</SpellID><Actions></Actions><Lua>local BS = UnitBuffID(&amp;quot;player&amp;quot;, 46924)

if BS == nil then
return true
end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Charge</Name><Default>false</Default><SpellID>100</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() 
  and not GetCurrentKeyBoardFocus()
  and select(2, GetSpellCooldown(100)) == 0
  and IsSpellInRange(GetSpellInfo(100), &amp;quot;mouseover&amp;quot;) == 1
  and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
  and UnitExists(&amp;quot;mouseover&amp;quot;)
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arms: Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsLeftShiftKeyDown() and GetCurrentKeyBoardFocus() == nil then
return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Throw</Name><Default>false</Default><SpellID>57755</SpellID><Actions></Actions><Lua>if UnitExists(&amp;quot;target&amp;quot;) and IsSpellInRange(tostring(GetSpellInfo(78)), &amp;quot;target&amp;quot;) == 0 then
	if select(2, GetSpellCooldown(57755)) == 0 then
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spell Reflect</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_SpellReflect == false then
	return false
end

if not CheckIfOkFunction then
	function CheckIfOk(spellID, target) 
		if spellID == &amp;quot;30451&amp;quot; then
			if select(4, UnitDebuffID(&amp;quot;player&amp;quot;, 30451)) &amp;lt; 2 then
				return false
			else
				return true
			end
		end
		if spellID == &amp;quot;51505&amp;quot; then
			if UnitIsPlayer(target..&amp;quot;target&amp;quot;) then
				return true
			else
				return false
			end
		end
		
		return true
	end
	
	Nova_Notify(&amp;quot;Loaded Spell Reflect Function&amp;quot;)
	CheckIfOkFunction = true
end

local ReflectID = { 
	5782, -- Fear
	33786, -- Cyclone
	28272, -- Pig Poly
	118, -- Sheep Poly
	61305, -- Cat Poly
	61721, -- Rabbit Poly
	61780, -- Turkey Poly
	28271, -- Turtle Poly
	51514, -- Hex
	51505, -- Lava Burst
	339, -- Entangling Roots
	30451, -- Acrane Blast
	605 -- Mind Control
}
local CastingTarget = nil
local stance = GetShapeshiftForm()
local srCD = select(2, GetSpellCooldown(23920))

-- Only try this bit of code if we have enough rage to cast Spell Reflection
if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 15 then
	for _, reflectID in ipairs(ReflectID) do
		if IsActiveBattlefieldArena() == 1 then

			-- Checking Arena Target Frames 1-5
			for i=1, 5 do
				local aTarget = &amp;quot;arena&amp;quot;..tostring(i)
				local ainRange = IsSpellInRange(GetSpellInfo(57755), aTarget)
				if UnitExists(aTarget) 
				  and not PQR_IsOutOfSight(aTarget)
				  and not UnitIsDeadOrGhost(aTarget)
				  and ainRange == 1 then
					if UnitCastingInfo(aTarget) == GetSpellInfo(reflectID) then
						local spellname, _, _, _, astartTimer, aendTimer = UnitCastingInfo(aTarget)
						if (srCD == 0 or UnitBuffID(&amp;quot;player&amp;quot;, 23920))
						  and CheckIfOk(reflectID, aTarget..&amp;quot;target&amp;quot;) then
							if PercentCasted(astartTimer, aendTimer) &amp;gt;= 25 then
								if stance == 1 or stance == 2 then
									Nova_Notify(&amp;quot;We are currently reflecting: &amp;quot;..spellname)
									spellReflect = 1
									CastingTarget = aTarget
								else
									CastSpellByID(2457, &amp;quot;player&amp;quot;)
									spellReflect = 1
									CastingTarget = aTarget
								end
							end
						end
					end
				end
			end
		else	
			--Checking Focus Target Unitframe now
			local finRange = IsSpellInRange(GetSpellInfo(57755), &amp;quot;focus&amp;quot;)
			if UnitExists(&amp;quot;focus&amp;quot;) 
			  and finRange == 1 
			  and not PQR_IsOutOfSight(&amp;quot;focus&amp;quot;)
			  and not UnitIsDeadOrGhost(&amp;quot;focus&amp;quot;)
			  and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;)
			  and UnitIsPlayer(&amp;quot;focustarget&amp;quot;) then
				if UnitCastingInfo(&amp;quot;focus&amp;quot;) == GetSpellInfo(reflectID) then
					local spellname, _, _, _, fstartTimer, fendTimer = UnitCastingInfo(&amp;quot;focus&amp;quot;)
					if srCD == 0 or UnitBuffID(&amp;quot;player&amp;quot;, 23920) then
						if PercentCasted(fstartTimer, fendTimer) &amp;gt;= 25 then
							if stance == 1 or stance == 2 then
								Nova_Notify(&amp;quot;We are currently reflecting: &amp;quot;..spellname)
								spellReflect = 1
								CastingTarget = &amp;quot;focus&amp;quot;
							else
								CastSpellByID(2457, &amp;quot;player&amp;quot;)
								spellReflect = 1
								CastingTarget = &amp;quot;focus&amp;quot;
							end
						end
					end
				end
			end

			--Checking Target Unitfame now
			local tinRange = IsSpellInRange(GetSpellInfo(57755), &amp;quot;target&amp;quot;)
			if UnitExists(&amp;quot;target&amp;quot;) 
			  and tinRange == 1
			  and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
			  and not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;)
			  and UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;)
			  and UnitIsPlayer(&amp;quot;targettarget&amp;quot;) then
				if UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(reflectID) then
					local _, _, _, _,  tstartTimer, tendTimer= UnitCastingInfo(&amp;quot;target&amp;quot;)
					if srCD == 0 or UnitBuffID(&amp;quot;player&amp;quot;, 23920) then
						local spellname, _, _, _, tstartTimer, tendTimer = UnitCastingInfo(&amp;quot;target&amp;quot;)
						if PercentCasted(tstartTimer, tendTimer) &amp;gt;= 25 then
							if stance == 1 or stance == 2 then
								Nova_Notify(&amp;quot;We are currently reflecting: &amp;quot;..spellname)
								spellReflect = 1
								CastingTarget = &amp;quot;target&amp;quot;
							else
								CastSpellByID(2457, &amp;quot;player&amp;quot;)
								spellReflect = 1
								CastingTarget = &amp;quot;target&amp;quot;
							end
						end
					end
				end
			end
		end
	end
end

if spellReflect == 1 and CastingTarget then
	if IsEquippedItemType(&amp;quot;Shields&amp;quot;) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 23920) and UnitCastingInfo(CastingTarget) then
			return true
		elseif not UnitCastingInfo(CastingTarget)  then
			spellReflect = nil
			RunMacroText(&amp;quot;/equip Ruthless Gladiator&amp;apos;s Decapitator&amp;quot;)
			return true
		elseif UnitCastingInfo(CastingTarget) then
			CastSpellByID(23920, &amp;quot;player&amp;quot;)
			return true
		end
	elseif not IsEquippedItemType(&amp;quot;Shields&amp;quot;) then
		if UnitCastingInfo(CastingTarget) then
			RunMacroText(&amp;quot;/equip Riftrent Waraxe&amp;quot;)
			RunMacroText(&amp;quot;/equip Catapult Loading Scoop&amp;quot;)
			return true
		elseif not UnitCastingInfo(CastingTarget) then
			spellReflect = nil
		end
	end
elseif IsEquippedItemType(&amp;quot;Shields&amp;quot;) then
	spellReflect = nil
	RunMacroText(&amp;quot;/equip Ruthless Gladiator&amp;apos;s Decapitator&amp;quot;)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disarm</Name><Default>false</Default><SpellID>71</SpellID><Actions></Actions><Lua>local DisarmDebuffs = {31884, 59016, 18499, 2825, 32182, 2825, 32182, 51713, 51271, 33702, 20572, 33697, 99740, 1719, 46924, 12472, 687 }
local DisarmCD = GetSpellCooldown(676)
local stance = GetShapeshiftForm()

if DisarmCD == 0 
  and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 15 then
	for _, v in ipairs(DisarmDebuffs) do
		for i = 1, 5 do
			local aTarget = &amp;quot;arena&amp;quot;..tostring(i)
			local ainRange = IsSpellInRange(GetSpellInfo(676), aTarget)
			if UnitExists(aTarget) 
			 and ainRange == 1 
			 and not PQR_IsOutOfSight(aTarget)
			 and PQR_UnitFacing(&amp;quot;player&amp;quot;, aTarget) then
				if UnitBuffID(aTarget, v) then
					if stance == 2 then
						Nova_Notify(&amp;quot;We are disarming target because of: &amp;quot;..GetSpellInfo(v))
						CastSpellByID(676, aTarget)
						return false
					else
						return true
					end
				end
			end
		end
		local tinRange = IsSpellInRange(GetSpellInfo(676), &amp;quot;target&amp;quot;)
		if UnitExists(&amp;quot;target&amp;quot;) 
		 and tinRange == 1 
		 and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
		 and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) then
			if UnitBuffID(&amp;quot;target&amp;quot;, v) then
				if stance == 2 then
					Nova_Notify(&amp;quot;We are disarming target because of: &amp;quot;..GetSpellInfo(v))
					CastSpellByID(676, &amp;quot;target&amp;quot;)
					return false
				else
					return true
				end
			end
		end
		local finRange = IsSpellInRange(GetSpellInfo(676), &amp;quot;focus&amp;quot;)
		if UnitExists(&amp;quot;focus&amp;quot;) 
		 and finRange == 1
		 and not PQR_IsOutOfSight(&amp;quot;focus&amp;quot;)
		 and PQR_UnitFacing(&amp;quot;player&amp;quot;, &amp;quot;focus&amp;quot;) then
			if UnitBuffID(&amp;quot;focus&amp;quot;, v) then
				if stance == 2 then
					Nova_Notify(&amp;quot;We are disarming target because of: &amp;quot;..GetSpellInfo(v))
					CastSpellByID(676, &amp;quot;focus&amp;quot;)
					return false
				else
					return true
				end
			end
		end
	end
-- elseif stance == 2  then
--	if GetPrimaryTalentTree() ~= 3 then -- Check if you are MainSpec Prot
--		CastSpellByName(tostring(GetSpellInfo(2457)), &amp;quot;player&amp;quot;)
--		return false
--	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Disarm Test</Name><Default>false</Default><SpellID>71</SpellID><Actions></Actions><Lua>if GetShapeshiftForm() == 2 then
	CastSpellByName(tostring(GetSpellInfo(2457)), &amp;quot;player&amp;quot;)
else
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Arena: Pummel</Name><Default>false</Default><SpellID>6552</SpellID><Actions></Actions><Lua>local InterruptSpells = { 635, 47540, 19750, 82326, 51505, 62809, 331, 77472, 48500, 8936, 5782 }
Nova_SpellReflect = true

if select(2, GetSpellCooldown(6552)) == 0 and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 5 then
	for y=1, 5 do
		local aTarget = &amp;quot;arena&amp;quot;..tostring(y)
		if UnitExists(aTarget) 
		 and IsSpellInRange(GetSpellInfo(6552), aTarget) == 1 
		 and PQR_UnitFacing(&amp;quot;player&amp;quot;, aTarget) then
			local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(aTarget)
			for _, v in ipairs(InterruptSpells) do
				if GetSpellInfo(v) == spellName and canInterrupt == false then
					Nova_SpellReflect = false
					if PercentCasted(startCast, endCast) &amp;gt;= 85 then
						Nova_Notify(&amp;quot;Interrupted: &amp;quot;..spellName)
						PQR_CustomTarget = aTarget
						return true
					end
				end
			end
		end
	end
	local fTarget = &amp;quot;focus&amp;quot;
	if UnitExists(fTarget) 
	 and IsSpellInRange(GetSpellInfo(6552), fTarget) == 1 
	 and PQR_UnitFacing(&amp;quot;player&amp;quot;, fTarget) then
		local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(fTarget)
		for _, v in ipairs(InterruptSpells) do
			if GetSpellInfo(v) == spellName and canInterrupt == false then
				Nova_SpellReflect = false
				if PercentCasted(startCast, endCast) &amp;gt;= 85 then
					Nova_Notify(&amp;quot;Interrupted: &amp;quot;..spellName)
					PQR_CustomTarget = fTarget
					return true
				end
			end
		end
	end
	local tTarget = &amp;quot;target&amp;quot;
	if UnitExists(tTarget) 
	 and IsSpellInRange(GetSpellInfo(6552), tTarget) == 1 
	 and PQR_UnitFacing(&amp;quot;player&amp;quot;, tTarget) then
		local spellName, _, _, _, startCast, endCast, _, _, canInterrupt = UnitCastingInfo(tTarget)
		for _, v in ipairs(InterruptSpells) do
			if GetSpellInfo(v) == spellName and canInterrupt == false then
				Nova_SpellReflect = false
				if PercentCasted(startCast, endCast) &amp;gt;= 85 then
					Nova_Notify(&amp;quot;Interrupted: &amp;quot;..spellName)
					PQR_CustomTarget = tTarget
					return true
				end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hamstring</Name><Default>false</Default><SpellID>1715</SpellID><Actions></Actions><Lua>if not lastHamstring then
	lastHamstring = 0
	print(&amp;quot;Hamstring Loaded Successfully&amp;quot;)
end

local hCD = select(2, GetSpellCooldown(1715))
local sCD = select(2, GetSpellCooldown(1464))
local checkImmunity = { 1044, 53271, 85388 }
local canHamstring = false
local bHoF = false

if UnitExists(&amp;quot;target&amp;quot;) 
  and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) 
  and IsSpellInRange(GetSpellInfo(1715), &amp;quot;target&amp;quot;) == 1
  and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;) then
	for _, immunities in ipairs(checkImmunity) do
		if UnitBuffID(&amp;quot;target&amp;quot;, immunities) then
			bHoF = true
		end
	end
	if not bHoF and UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 10 then
		canHamstring = true
	end
end

if canHamstring and hCD == 0 and hCD == sCD then
	local iHamstring = select(5, GetTalentInfo(1, 11))
	local hasHamstring, _, _, _, _, _, endTimer = UnitDebuff(&amp;quot;target&amp;quot;, GetSpellInfo(1715))
	if hasHamstring then
		if iHamstring == 1 and (GetTime() - lastHamstring) &amp;gt; 60 then
			if PQR_IsMoving(0.1) then
				lastHamstring = GetTime()
				return true
			end
		elseif iHamstring == 2 and (GetTime() - lastHamstring) &amp;gt; 30 then
			if PQR_IsMoving(0.1) then
--				print(&amp;quot;Before our variable was at: &amp;quot;..lastHamstring)
--				PQR_WriteToChat(&amp;quot;GO GO IMPROVED HAMSTRING!!!&amp;quot;)
				lastHamstring = GetTime()
--				print(&amp;quot;Now our variable is at: &amp;quot;..lastHamstring)
				return true
			end
		else
			endTimer = endTimer - GetTime()
			if endTimer &amp;lt; 1 then
				return true
			end
		end
	else
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hamstring Backup</Name><Default>false</Default><SpellID>1715</SpellID><Actions>/startattack</Actions><Lua>if not lastHamstring then
	lastHamstring = 0
	print(&amp;quot;Hamstring Loaded Successfully&amp;quot;)
end

local checkSlows = { 45524, 16979, 2974, 13829, 5116, 116, 120, 11113, 31589, 15407, 3408, 26679, 8056, 3600, 18223, 12323 }
local checkImmunity = { 1044, 53271 }
local canHamstring = false
local bSlow = false
local bHoF = false

if UnitExists(&amp;quot;target&amp;quot;) and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) and IsSpellInRange(GetSpellInfo(1715), &amp;quot;target&amp;quot;) == 1 then
	for _, slows in ipairs(checkSlows) do
		if UnitDebuff(&amp;quot;target&amp;quot;, GetSpellInfo(slows)) then
			bSlow = true
		end
	end
	for _, immunities in ipairs(checkImmunity) do
		if UnitBuffID(&amp;quot;target&amp;quot;, immunities) then
			bHoF = true
		end
	end
	if not bHoF and not bSlow then
		canHamstring = true
	end
end

if canHamstring then
	local iHamstring = select(5, GetTalentInfo(1, 13))
	local hasHamstring, _, _, _, _, _, endTimer = UnitDebuff(&amp;quot;target&amp;quot;, GetSpellInfo(1715))
	if hasHamstring then
		if iHamstring == 1 and (GetTime() - lastHamstring) &amp;gt; 60 then
			if PQR_IsMoving(0.1) then
				lastHamstring = GetTime()
				return true
			end
		elseif hasHamstring and (GetTime() - lastHamstring) &amp;gt; 30 then
			if PQR_IsMoving(0.1) then
				lastHamstring = GetTime()
				return true
			end
		else
			endTimer = endTimer - GetTime()
			if endTimer &amp;lt; 1 then
				return true
			end
		end
	else
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Hamstring Mentally</Name><Default>false</Default><SpellID>1715</SpellID><Actions></Actions><Lua>local checkSlows = { 45524,16979,2974,13829,5116,116,120,11113,31589,15407,3408,26679,8056,3600,18223,12323 }
local checkImmunity = { 1044,53271,85388 }
local hamstring = false
local bSlow = false
local bHoF = false
local GCD = (select(2,GetSpellCooldown(1715)) == select(2,GetSpellCooldown(772)))

-- Initialize Hamstring
if not lastHamstring then
	lastHamstring = 0
	print(&amp;quot;Hamstring Loaded Successfully&amp;quot;)
end

if IsSpellKnown(1715)
	and UnitExists(&amp;quot;target&amp;quot;)
	and IsSpellInRange(GetSpellInfo(1715), &amp;quot;target&amp;quot;) == 1
	and UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;)
then
	-- Check for Immunities
	for _, immune in ipairs(checkImmunity) do
		if UnitBuffID(&amp;quot;target&amp;quot;, immune) then
			bHoF = true
		end
	end
	-- Let&amp;apos;s set Hamstring to true if we&amp;apos;re gold
	if not bHoF and not bSlow and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 10 then
		hamstring = true
	end
end

-- Continue the check if we can Hamstring
if hamstring and GCD then
	local iHS = select(5,GetTalentInfo(1,11))
	local HS,_,_,_,_,_,timer = UnitDebuffID(&amp;quot;target&amp;quot;, 1715)
	
	-- If we have Hamstring on our target
	if HS then
		if iHS == 1 and (GetTime() - lastHamstring) &amp;gt; 60 then
			if PQR_IsMoving(1) then
				lastHamstring = GetTime()
				return true
			end
		elseif iHS == 2 and (GetTime() - lastHamstring) &amp;gt; 30 then
			if PQR_IsMoving(1) then
				-- PQR_WriteToChat(&amp;quot;GO GO IMPROVED HAMSTRING!!!&amp;quot;)
				lastHamstring = GetTime()
				return true
			end
		else
			if timer - GetTime() &amp;lt; 1 then return true end
		end
	else return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Function --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	PQR_RotationStarted = false
	if PQR_LoadLua ~= nil then
		-- Load Data File
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Nova_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

if not PercentFunction then
	function PercentCasted(startTimer, endTimer)
		local durationTimer = ((endTimer) - (startTimer))
		local timeRemaining = (endTimer - GetTime() * 1000)
		local percentRemaining = (100 - ((timeRemaining/durationTimer) * 100))

		if percentRemaining &amp;gt; 100 then
			return 0
		else
--			print(&amp;quot;Duration Timer: &amp;quot;..durationTimer)
--			print(&amp;quot;Time Remaining: &amp;quot;..timeRemaining)
--			print(&amp;quot;Percent Remaining: &amp;quot;..percentRemaining)
			return percentRemaining
		end
	end

	PercentFunction = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Spell Reflect Backup</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_SpellReflect == false then
	return false
end

local ReflectID = { 
	5782, -- Fear
	33786, -- Cyclone
	28272, -- Pig Poly
	118, -- Sheep Poly
	61305, -- Cat Poly
	61721, -- Rabbit Poly
	61780, -- Turkey Poly
	28271, -- Turtle Poly
	51514, -- Hex
	51505, -- Lava Burst
	339, -- Entangling Roots
	30451, -- Acrane Blast
	605 -- Mind Control
}
local CastingTarget = nil
local srCD = select(2, GetSpellCooldown(23920))

-- Only try this bit of code if we have enough rage to cast Spell Reflection
if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 15 then
	for _, reflectID in ipairs(ReflectID) do
		-- Checking Arena Target Frames 1-5
		for i=1, 5 do
			local aTarget = &amp;quot;arena&amp;quot;..tostring(i)
			local ainRange = IsSpellInRange(GetSpellInfo(57755), aTarget)
			if UnitExists(aTarget) and ainRange == 1 then
				if UnitCastingInfo(aTarget) == GetSpellInfo(reflectID) then
					local _, _, _, _, astartTimer, aendTimer = UnitCastingInfo(aTarget)
					if srCD == 0 or UnitBuffID(&amp;quot;player&amp;quot;, 23920) then
					local stance = GetShapeshiftForm()
					if PercentCasted(astartTimer, aendTimer) &amp;gt;= 70 then
						if stance == 1 or stance == 2 then
							spellReflect = 1
							CastingTarget = aTarget
						else
							CastSpellByID(2457, &amp;quot;player&amp;quot;)
							spellReflect = 1
							CastingTarget = aTarget
						end
					end
				end
			end
		end
		end
	end
	
	--Checking Focus Target Unitframe now
	local finRange = IsSpellInRange(GetSpellInfo(57755), &amp;quot;focus&amp;quot;)
	if UnitExists(&amp;quot;focus&amp;quot;) and finRange == 1 then
		if UnitCastingInfo(&amp;quot;focus&amp;quot;) == GetSpellInfo(reflectID) then
			local _, _, _, _, fstartTimer, fendTimer = UnitCastingInfo(&amp;quot;focus&amp;quot;)
			if srCD == 0 or UnitBuffID(&amp;quot;player&amp;quot;, 23920) then
				local stance = GetShapeshiftForm()
				if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 15 and PercentCasted(fstartTimer, fendTimer) &amp;gt;= 70  then
					if stance == 1 or stance == 2 then
						spellReflect = 1
						CastingTarget = &amp;quot;focus&amp;quot;
					else
						CastSpellByID(2457, &amp;quot;player&amp;quot;)
						spellReflect = 1
						CastingTarget = &amp;quot;focus&amp;quot;
					end
				end
			end
		end
	end
	local tinRange = IsSpellInRange(GetSpellInfo(57755), &amp;quot;target&amp;quot;)
	if UnitExists(&amp;quot;target&amp;quot;) and tinRange then
		if UnitCastingInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(reflectID) then
			local _, _, _, _,  tstartTimer, tendTimer= UnitCastingInfo(&amp;quot;target&amp;quot;)
			if srCD == 0 or UnitBuffID(&amp;quot;player&amp;quot;, 23920) then
				local stance = GetShapeshiftForm()
				local _, _, _, _, tstartTimer, tendTimer = UnitCastingInfo(&amp;quot;target&amp;quot;)
				if UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 15 and PercentCasted(tstartTimer, tendTimer) &amp;gt;= 70 then
					if stance == 1 or stance == 2 then
						print(&amp;quot;NOW!!!!!&amp;quot;)
						spellReflect = 1
						CastingTarget = &amp;quot;target&amp;quot;
					else
						CastSpellByID(2457, &amp;quot;player&amp;quot;)
						spellReflect = 1
						CastingTarget = &amp;quot;target&amp;quot;
					end
				end
			end
		end
	end
end

if spellReflect == 1 and CastingTarget then
	if IsEquippedItemType(&amp;quot;Shields&amp;quot;) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 23920) and UnitCastingInfo(CastingTarget) then
			return true
		elseif not UnitCastingInfo(CastingTarget)  then
			spellReflect = nil
			RunMacroText(&amp;quot;/equip Ruthless Gladiator&amp;apos;s Decapitator&amp;quot;)
			return true
		elseif UnitCastingInfo(CastingTarget) then
			CastSpellByID(23920, &amp;quot;player&amp;quot;)
			return true
		end
	elseif not IsEquippedItemType(&amp;quot;Shields&amp;quot;) then
		if UnitCastingInfo(CastingTarget) then
			RunMacroText(&amp;quot;/equip Riftrent Waraxe&amp;quot;)
			RunMacroText(&amp;quot;/equip Catapult Loading Scoop&amp;quot;)
			return true
		elseif not UnitCastingInfo(CastingTarget) then
			spellReflect = nil
		end
	end
elseif IsEquippedItemType(&amp;quot;Shields&amp;quot;) then
	spellReflect = nil
	RunMacroText(&amp;quot;/equip Ruthless Gladiator&amp;apos;s Decapitator&amp;quot;)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Notify Frame --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not NotifySetup then
-- Update Debug Frame
function Nova_NotifyFrame_OnUpdate()
	if (Nova_NotifyFrameTime &amp;lt; GetTime() - 5) then
		local alpha = Nova_NotifyFrame:GetAlpha()
		if (alpha ~= 0) then Nova_NotifyFrame:SetAlpha(alpha - .02) end
		if (aplha == 0) then Nova_NotifyFrame:Hide() end
	end
end

-- Debug messages.
function Nova_Notify(message)
	Nova_NotifyFrame.text:SetText(message)
	Nova_NotifyFrame:SetAlpha(1)
	Nova_NotifyFrame:Show()
	Nova_NotifyFrameTime = GetTime()
end

-- Debug Notification Frame
Nova_NotifyFrame = CreateFrame(&amp;apos;Frame&amp;apos;)
Nova_NotifyFrame:ClearAllPoints()
Nova_NotifyFrame:SetHeight(300)
Nova_NotifyFrame:SetWidth(300)
Nova_NotifyFrame:SetScript(&amp;apos;OnUpdate&amp;apos;, Nova_NotifyFrame_OnUpdate)
Nova_NotifyFrame:Hide()
Nova_NotifyFrame.text = Nova_NotifyFrame:CreateFontString(nil, &amp;apos;BACKGROUND&amp;apos;, &amp;apos;PVPInfoTextFont&amp;apos;)
Nova_NotifyFrame.text:SetAllPoints()
Nova_NotifyFrame:SetPoint(&amp;apos;CENTER&amp;apos;, 0, 200)
Nova_NotifyFrameTime = 0
	
	
	NotifySetup = true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Berserker Stance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local stance = GetShapeshiftForm()
local Berserker = false
local ArenaSeesMe = false
if not TestTime then TestTime = GetTime() end

-- This will check if we are in Arena or not :)
if UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	if IsActiveBattlefieldArena() == 1 then
		for i=1, 5 do
			local aTarget = &amp;quot;arena&amp;quot;..tostring(i)
			if UnitExists(aTarget)
			  and UnitIsPlayer(aTarget..&amp;quot;target&amp;quot;) then
				ArenaSeesMe = true
			end
		end
		if not ArenaSeesMe then
			Berserker = true
		end
	-- If we aren&amp;apos;t in Arena (IE BG) I wanted to just test is always
	else Berserker = true
	end
end

-- This makes sure we always have Rend up, and switch back to Battle whenever Taste for Blood is up
if UnitBuffID(&amp;quot;player&amp;quot;, 60503) then
	local TfBexpire =  select(7, UnitBuffID(&amp;quot;player&amp;quot;, 60503)) - GetTime()
	if stance == 1 then
		Berserker = false
	elseif TfBexpire &amp;lt; 5
	  and IsSpellInRange(GetSpellInfo(7384), &amp;quot;target&amp;quot;) == 1 then
		Berserker = false
	end
elseif not UnitDebuffID(&amp;quot;target&amp;quot;, 94009)
  and IsSpellInRange(GetSpellInfo(772), &amp;quot;target&amp;quot;) == 1 then
	Berserker = false
end

-- The override that keeps us in Berserker for Burst Damage with Recklessness
if UnitBuffID(&amp;quot;player&amp;quot;, 1719) then
	Berserker = true
end

-- This does the switching magic.
if Berserker then
	if stance ~= 3 then
		Nova_Notify(&amp;quot;Changing to Berserker&amp;quot;)
		CastSpellByName(GetSpellInfo(2458))
	end
else
	if stance ~= 1 then
		Nova_Notify(&amp;quot;Changing to Battle Stance&amp;quot;)
		CastSpellByName(GetSpellInfo(2457))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-- Target Check --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local targetCheck = { &amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;, &amp;quot;arena1&amp;quot;, &amp;quot;arena2&amp;quot;, &amp;quot;arena3&amp;quot;, &amp;quot;arena4&amp;quot;, &amp;quot;arena5&amp;quot; }
local noTarget = true

for _, target in ipairs(targetCheck) do
	if UnitExists(target) and UnitCanAttack(&amp;quot;player&amp;quot;, target) and not UnitIsDeadOrGhost(target) then
		noTarget = false
		return false
	end
end

if noTarget then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Leap</Name><Default>false</Default><SpellID>6544</SpellID><Actions></Actions><Lua>if IsSpellKnown(6544)
  and select(2, GetSpellCooldown(6544)) == 0
  and IsLeftControlKeyDown()
  and GetCurrentKeyBoardFocus() == nil then
	if IsActiveBattlefieldArena() == 1 then
		if UnitExists(&amp;quot;target&amp;quot;) then
			return true
		end
	else return true end
end</Lua><RecastDelay>0</RecastDelay><Target>Click</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Intervene</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myStance = GetShapeshiftForm()

if IsSpellKnown(3411)
--  and UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and UnitExists(&amp;quot;mouseover&amp;quot;)
  and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 10
--  and UnitIsFriend(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)
--  and not PQR_IsOutOfSight(&amp;quot;mouseover&amp;quot;)
  and select(2, GetSpellCooldown(3411)) == 0 then
	if IsLeftAltKeyDown() and not GetCurrentKeyBoardFocus() then
		if stance ~= 2 then
			CastSpellByName(GetSpellInfo(71), &amp;quot;player&amp;quot;)
			return true
		else
			CastSpellByName(GetSpellInfo(3411), &amp;quot;mouseover&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Piercing Howl</Name><Default>false</Default><SpellID>12323</SpellID><Actions></Actions><Lua>if IsSpellKnown(12323)
  and UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and UnitPower(&amp;quot;player&amp;quot;) &amp;gt; 10
  and CheckInteractDistance(&amp;quot;target&amp;quot;, 3) == 1
  and IsSpellInRange(GetSpellInfo(1715), &amp;quot;target&amp;quot;) == 0
  and not UnitDebuffID(&amp;quot;target&amp;quot;, 1715) 
  and PQR_IsMoving(0.3)
  and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
then return true end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>PvP: Heroic Throw</Name><Default>false</Default><SpellID>57755</SpellID><Actions></Actions><Lua>if IsSpellKnown(57755)
  and UnitExists(&amp;quot;target&amp;quot;) 
  and IsSpellInRange(GetSpellInfo(78), &amp;quot;target&amp;quot;) == 0
  and IsSpellInRange(GetSpellInfo(57755), &amp;quot;target&amp;quot;) == 1
  and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
  and select(2, GetSpellCooldown(57755)) == 0
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Defensive Stance</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsRightAltKeyDown() and not GetCurrentKeyBoardFocus() then
	CastSpellByName(GetSpellInfo(71), &amp;quot;player&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Berserker Stance (Burst)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local stance = GetShapeshiftForm()
local Berserker = false

-- The override that keeps us in Berserker for Burst Damage with Recklessness
if UnitBuffID(&amp;quot;player&amp;quot;, 1719) then
	Berserker = true
end

-- This does the switching magic.
if Berserker then
	if stance ~= 3 then
		Nova_Notify(&amp;quot;Changing to Berserker&amp;quot;)
		CastSpellByName(GetSpellInfo(2458))
	end
else
	if stance ~= 1 then
		Nova_Notify(&amp;quot;Changing to Battle Stance&amp;quot;)
		CastSpellByName(GetSpellInfo(2457))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>