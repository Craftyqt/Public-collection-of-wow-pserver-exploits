<?xml version="1.0" encoding="utf-8" ?><WARRIOR><Ability><Name>--- initialize ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not PQR_LoadLua(&amp;quot;PQR_xrn.lua&amp;quot;) then
  PQR_WriteToChat(&amp;quot;PQR_xrn.lua is missing. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
  PQR_StopRotation()
  return true
end

CastClick() 
HealEngine() 
ModSwitch(&amp;quot;\124cFFD4D4D4Single target&amp;quot;,&amp;quot;\124cFF3BB0FFArea of Effect&amp;quot;) 

if IsLeftAltKeyDown() 
or IsMounted()
or SpellIsTargeting()
or UnitBuffID(&amp;quot;player&amp;quot;,80169)
or UnitBuffID(&amp;quot;player&amp;quot;,87959)
or UnitChannelInfo(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- special events ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Avoid sudden death on Ultraxion
local fadingtime = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,110070))
if fadingtime and fadingtime - GetTime() &amp;lt; 1.5 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

-- Avoid Hour of Twilight on Ultraxion, Delete next 3 lines if you are working as tank
local channelSpell, _, _, _, _, endTime = UnitCastingInfo(&amp;quot;boss1&amp;quot;)
if channelSpell == GetSpellInfo(109417) and endTime/1000 - GetTime() &amp;lt; 1.1 
and not UnitBuffID(&amp;quot;player&amp;quot;,871) and not UnitBuffID(&amp;quot;player&amp;quot;,12975) 
then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end 

-- Avoid sudden death on Madness 
local tentacledeath = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if tentacledeath and tentacledeath - GetTime() &amp;lt; 1 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Command / Battle Shout</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
and select(2,GetSpellCooldown(469)) &amp;lt; 2
and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 60 
then
  if not UnitBuffID(&amp;quot;player&amp;quot;, 79105)  
  and not UnitBuffID(&amp;quot;player&amp;quot;, 90364)  
  and not UnitBuffID(&amp;quot;player&amp;quot;, 6307) 
  and ( not UnitBuffID(&amp;quot;player&amp;quot;,469) or select(8,UnitBuffID(&amp;quot;player&amp;quot;,469)) == &amp;quot;player&amp;quot; ) 
  then 
    CastSpellByID(469) 
    return true
  else 
    CastSpellByID(6673) 
    return true 
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Vigilance</Name><Default>false</Default><SpellID>50720</SpellID><Actions></Actions><Lua>if not UnitAffectingCombat(&amp;quot;player&amp;quot;) then

  if not CheckVigilance then
    function CheckVigilance() 
      local VigilanceUp, TopUnit, TopHP = false, nil, 0
      for i=1, #members do 
        if UnitBuffID(members[i].Unit,50720,&amp;quot;PLAYER&amp;quot;) then VigilanceUp = true end 
        if UnitHealthMax(members[i].Unit) &amp;gt; TopHP and UnitGroupRolesAssigned(members[i].Unit) ~= &amp;quot;HEALER&amp;quot; and not UnitIsUnit(&amp;quot;player&amp;quot;,members[i].Unit) then 
          TopUnit = members[i].Unit
          TopHP = UnitHealthMax(members[i].Unit)
        end
      end
      return VigilanceUp, TopUnit
    end
  end

  local VigilanceUp, TopUnit = CheckVigilance()
  if not VigilanceUp then
    if UnitInRaid(&amp;quot;player&amp;quot;) and GetNumRaidMembers() == #members then PQR_CustomTarget = TopUnit return true end 
    if not UnitInRaid(&amp;quot;player&amp;quot;) and GetNumPartyMembers() &amp;gt; 0 and GetNumPartyMembers()+1 == #members then PQR_CustomTarget = TopUnit return true end 
  end

end</Lua><RecastDelay>10000</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shield Block</Name><Default>false</Default><SpellID>2565</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 90 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Enraged Regeneration</Name><Default>false</Default><SpellID>55694</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 12976) 
and 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 90 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>--- offensive spells ---</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
  PQR_RotationStarted = false
  local spells = { 6544, 5246 }
  for i=1, #spells do PQR_AddToSpellDelayList(spells[i],0,1) end
end

if IsSpellKnown(23881) then return PQR_SwapRotation(&amp;quot;Fury PvE [8/31/2] (xrnFury)&amp;quot;) end

if UnitIsDead(&amp;quot;target&amp;quot;) 
or ImmuneTarget(&amp;quot;target&amp;quot;) 
or not UnitCanAttack(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) 
or tonumber(UnitGUID(&amp;quot;target&amp;quot;):sub(5,5),16) == 4
or ( not UnitAffectingCombat(&amp;quot;target&amp;quot;) and not SpecialAggro(&amp;quot;target&amp;quot;) and not UnitIsPlayer(&amp;quot;target&amp;quot;) )
or ( UnitGroupRolesAssigned(&amp;quot;targettarget&amp;quot;) == &amp;quot;TANK&amp;quot; and not UnitIsUnit(&amp;quot;player&amp;quot;,&amp;quot;targettarget&amp;quot;) and UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;target&amp;quot;) ~= 0 and not canAOE ) 
then return true end

StartAttack()</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Gloves</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,10)

if cd == 0 and havecd == 1  
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then 
  UseInventoryItem(10) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Trinket 1</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,13)

if cd == 0 and havecd == 1  
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then 
  UseInventoryItem(13) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>USE: Trinket 2</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _,cd,havecd = GetInventoryItemCooldown(&amp;quot;player&amp;quot;,14)

if cd == 0 and havecd == 1  
and not UnitChannelInfo(&amp;quot;player&amp;quot;) 
then 
  UseInventoryItem(14) 
  return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Throw</Name><Default>false</Default><SpellID>57755</SpellID><Actions></Actions><Lua>if not CheckInteractDistance(&amp;quot;target&amp;quot;, 3) 
and CheckInteractDistance(&amp;quot;target&amp;quot;, 1) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Concussion Blow</Name><Default>false</Default><SpellID>12809</SpellID><Actions></Actions><Lua>if GetSpellCooldown(6552) ~= 0 
and select(9,UnitCastingInfo(&amp;quot;target&amp;quot;)) == false 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Victory Rush</Name><Default>false</Default><SpellID>34428</SpellID><Actions></Actions><Lua>if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 80 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Inner Rage</Name><Default>false</Default><SpellID>1134</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 90 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heroic Strike / Cleave</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitPower(&amp;quot;player&amp;quot;) &amp;gt;= 65 
and GetSpellCooldown(78) == 0 
then
  if canAOE then 
    CastSpellByID(845) 
    return true
  else 
    CastSpellByID(78) 
    return true 
  end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shockwave</Name><Default>false</Default><SpellID>46968</SpellID><Actions></Actions><Lua>if CheckInteractDistance(&amp;quot;target&amp;quot;, 3) 
and canAOE 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Thunder Clap</Name><Default>false</Default><SpellID>6343</SpellID><Actions></Actions><Lua>if CheckInteractDistance(&amp;quot;target&amp;quot;, 3) 
and ( not UnitDebuffID(&amp;quot;target&amp;quot;, 6343) or canAOE ) 
then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Shield Slam</Name><Default>false</Default><SpellID>23922</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Revenge</Name><Default>false</Default><SpellID>6572</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rend</Name><Default>false</Default><SpellID>772</SpellID><Actions></Actions><Lua>if not UnitDebuffID(&amp;quot;target&amp;quot;, 94009,&amp;quot;PLAYER&amp;quot;) 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Demoralizing Shout</Name><Default>false</Default><SpellID>1160</SpellID><Actions></Actions><Lua>if not UnitDebuffID(&amp;quot;target&amp;quot;, 1160) 
then return true end</Lua><RecastDelay>500</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Devastate</Name><Default>false</Default><SpellID>20243</SpellID><Actions></Actions><Lua>return true</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Taunt</Name><Default>false</Default><SpellID>355</SpellID><Actions></Actions><Lua>if not ShouldTaunt then
  function ShouldTaunt()
    if UnitInRange(&amp;quot;targettarget&amp;quot;) 
    and not UnitIsUnit(&amp;quot;player&amp;quot;,&amp;quot;targettarget&amp;quot;) 
    and UnitThreatSituation(&amp;quot;player&amp;quot;,&amp;quot;targettarget&amp;quot;) ~= 3 then 

      local debuff = { 103687, 104849, 108043, 101239 }
      for _,v in ipairs(debuff) do 
        local debuffstacks = select(4,UnitDebuffID(&amp;quot;targettarget&amp;quot;,v))
        if debuffstacks and debuffstacks &amp;gt; 2 and not UnitDebuffID(&amp;quot;player&amp;quot;,v) then return true end     
      end

      local debuff = { 110078, 104936, 101007, 95172, 99476 }
      for _,v in ipairs(debuff) do 
        if UnitDebuffID(&amp;quot;targettarget&amp;quot;,v) and not UnitDebuffID(&amp;quot;player&amp;quot;,v) then return true end 
      end

      if UnitChannelInfo(&amp;quot;target&amp;quot;) == GetSpellInfo(109631) then return true end 

    end
  end
end

if ShouldTaunt() then return true end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></WARRIOR>