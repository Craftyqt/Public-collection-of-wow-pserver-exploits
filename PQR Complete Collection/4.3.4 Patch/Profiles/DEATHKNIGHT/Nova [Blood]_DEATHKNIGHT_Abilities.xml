<?xml version="1.0" encoding="utf-8" ?><DEATHKNIGHT><Ability><Name>Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(43265)
 and IsLeftShiftKeyDown()
 and not GetCurrentKeyBoardFocus() then 
	CastSpellByName(GetSpellInfo(43265))
	if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
	return true 
end</Lua><RecastDelay>100</RecastDelay><Target>Mouseover</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-------- Functions --------</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted then
	PQR_RotationStarted = false
	
	-- Load LUA Data Files
	if PQR_LoadLua ~= nil then
		-- Load the data
		if PQR_LoadLua(&amp;quot;PQR_Nova_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffFFCCFFYou&amp;apos;re missing PQR_Nova_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

-- Let&amp;apos;s automagically put ourself in Blood Presence.
if not UnitBuffID(&amp;quot;player&amp;quot;,48263,&amp;quot;PLAYER&amp;quot;)
	then CastSpellByName(GetSpellInfo(48263),&amp;quot;player&amp;quot;)
end

-- Death Rune on CD Check
function DeathRuneCD()
	local DRunesOnCD = 0
	local DRunesOffCD = 0
	for i=1, 6 do
		if GetRuneType(i) == 4 and select(3, GetRuneCooldown(i)) == false then
			DRunesOnCD = DRunesOnCD + 1
		elseif GetRuneType(i) == 4 and select(3, GetRuneCooldown(i)) == true then
			DRunesOffCD = DRunesOffCD + 1
		end
	end
	
	return DRunesOnCD, DRunesOffCD
end

-- Death Rune checker.
function DeathRuneCheck()
	local numDeathRunes = 0
	for i=1, 6 do
		if GetRuneType(i) == 4 then
			numDeathRunes = numDeathRunes + 1
		end
	end
	
	return numDeathRunes
end

-- Is it safe to Death Strike?
function SafeToDeathStrike()
	local SafeToCast = false
	local NonDROffCD = 0
	for i=3, 6 do
		if select(3, GetRuneCooldown(i)) == true and GetRuneType(i) ~= 4 then
			NonDROffCD = NonDROffCD + 1
		end
	end
	if NonDROffCD + select(2, DeathRuneCD()) &amp;gt; 2 then
		SafeToCast = true
	elseif NonDROffCD + select(2, DeathRuneCD()) == 2 then
		for i=3, 6 do
			local CDRemaining = GetRuneCooldown(i) + select(2, GetRuneCooldown(i)) - GetTime()
			if CDRemaining &amp;gt; 0 and CDRemaining &amp;lt;= 1.5 then
				SafeToCast = true
			end
		end
	end
	return SafeToCast
end

-- Target validation.
PQ_ValidUnit = false
if UnitExists(&amp;quot;target&amp;quot;)
	and (UnitIsEnemy(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;) or UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;target&amp;quot;))
	and (not UnitIsDeadOrGhost(&amp;quot;target&amp;quot;) and not UnitIsCorpse(&amp;quot;target&amp;quot;))
	and not PQR_IsOutOfSight(&amp;quot;target&amp;quot;)
then
	PQ_ValidUnit = true
	PQR_CustomTarget = &amp;quot;target&amp;quot;
end

-- No accidental deaths
if IsMounted() or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) then
	return true
end


----------------------------------------
---- Test AoE Toggle Code
----------------------------------------
if not GetCVar(&amp;quot;BloodAoEToggle&amp;quot;) then RegisterCVar(&amp;quot;BloodAoEToggle&amp;quot;, 0) end
if not GetCVar(&amp;quot;InGameToggle&amp;quot;) then RegisterCVar(&amp;quot;InGameToggle&amp;quot;, 0) end

if tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 0 then 
	InGameSwitcher = false
elseif tonumber(GetCVar(&amp;quot;InGameToggle&amp;quot;)) == 1 then
	InGameSwitcher = true
end
if not SwitchTimer then SwitchTimer = GetTime() - 1 end

if IsRightShiftKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and not InGameSwitcher
 and GetTime() - SwitchTimer &amp;gt;= 1 then
 	SwitchTimer = GetTime()
	if tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 0 then 
		SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 2) 
	elseif tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 5 then
		SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 1)
	end
end

if tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 1 then SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 0) PQR_SwapRotation(&amp;quot;Blood Tanking (Nova [Blood])&amp;quot;) 
elseif tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 2 then SetCVar(&amp;quot;BloodAoEToggle&amp;quot;, 5) PQR_SwapRotation(&amp;quot;Blood AoE Tanking (Nova [Blood])&amp;quot;) end

if tonumber(GetCVar(&amp;quot;BloodAoEToggle&amp;quot;)) == 5 then AoEToggle = true else AoEToggle = false end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-------- Debuff Handler --------</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local FF,_,_,_,_,_,FFtimer = UnitDebuffID(PQR_CustomTarget,55095,&amp;quot;player&amp;quot;)
local BP,_,_,_,_,_,BPtimer = UnitDebuffID(PQR_CustomTarget,55078,&amp;quot;player&amp;quot;)

if PQ_Pestilence == nil then PQ_Pestilence = false end
if IsSpellKnown(77575)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(77575),PQR_CustomTarget) == 1
then
	-- If Outbreak is on Cooldown we&amp;apos;ll check if the diseases are up.
	if GetSpellCooldown(77575) ~= 0 then
		if FF then
			-- If less than 3 seconds left on Frost Fever, reapply is Outbreak is down.
			if FFtimer - GetTime() &amp;lt; 3 then
				PQ_Pestilence = true
				CastSpellByID(45477,PQR_CustomTarget)
			end
		-- If Frost Fever isn&amp;apos;t on Target, apply with Icey Touch if Outbreak is down.
		else
			PQ_Pestilence = true
			CastSpellByID(45477,PQR_CustomTarget)
			end
		
		if BP then
			-- If less than 3 seconds left on Blood Plague, reapply is Outbreak is down.
			if BPtimer - GetTime() &amp;lt; 3 then
				PQ_Pestilence = true
				CastSpellByID(45462,PQR_CustomTarget)
			end
		-- If Blood Plague isn&amp;apos;t on Target, apply with Icey Touch if Outbreak is down.
		else
			PQ_Pestilence = true
			CastSpellByID(45462,PQR_CustomTarget)
		end
	else
		-- If Outbreak is off Cooldown, and either FF or BP isn&amp;apos;t on target, cast Outbreak
		if not FF or not BP then
			PQ_Pestilence = true
			CastSpellByID(77575,PQR_CustomTarget)
		else
			-- If both Diseases are on, but either one has less than 3 seconds remaining, Cast Outbreak.
			if (FF and FFtimer - GetTime() &amp;lt; 3) or (BP and BPtimer - GetTime() &amp;lt; 3)
			then
				PQ_Pestilence = true
				CastSpellByID(77575,PQR_CustomTarget)
			end
		end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raise Ally</Name><Default>false</Default><SpellID>61999</SpellID><Actions></Actions><Lua>local members = GetNumPartyMembers()
local group = &amp;quot;party&amp;quot;
if GetNumRaidMembers() &amp;gt; 0 then group = &amp;quot;raid&amp;quot; members = GetNumRaidMembers() end

if PQR_SpellAvailable(61999) then
	for i=1, members, 1 do
		local member = group..tostring(i)
		if ( UnitIsDead(member) or UnitIsCorpse(member) )
		  and not PQR_IsOutOfSight(member)
		  and IsSpellInRange(GetSpellInfo(61999), member) == 1
		  and UnitAffectingCombat(&amp;quot;player&amp;quot;)
		  and ( UnitGroupRolesAssigned(member) == &amp;quot;TANK&amp;quot;
		   or UnitGroupRolesAssigned(member) == &amp;quot;HEALER&amp;quot; ) then
			PQR_CustomTarget = member
			return true
		end
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Horn of Winter</Name><Default>false</Default><SpellID>57330</SpellID><Actions></Actions><Lua>local HoW = UnitBuffID(&amp;quot;player&amp;quot;, 57330)

if PQR_SpellAvailable(57330) then
	if HoW then
		local HoWexpire = select(7, UnitBuffID(&amp;quot;player&amp;quot;, 57330)) - GetTime()
		if HoWexpire &amp;lt;= 3 then
			return true
		elseif UnitAffectingCombat(&amp;quot;player&amp;quot;) and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; 20 then
			return true
		end	
	else
		return true
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Empower Rune Weapon</Name><Default>false</Default><SpellID>47568</SpellID><Actions></Actions><Lua>local RunesOnCD = 0

if not UnitBuffID(&amp;quot;player&amp;quot;, 51460)
	and PQR_SpellAvailable(47568)
	and UnitPower(&amp;quot;player&amp;quot;) &amp;lt; select(4, GetSpellInfo(56815))
	and PQ_ValidUnit
	and not AoEToggle
	and UnitExists(PQR_CustomTarget)
	and ( UnitLevel(PQR_CustomTarget) == -1 or UnitIsUnit(PQR_CustomTarget, &amp;quot;boss1&amp;quot;) ) then
		for i=1, 6 do
			if not select(3, GetRuneCooldown(i)) then
				RunesOnCD = RunesOnCD + 1
			end
		end
end

if RunesOnCD == 5 then
	Nova_Notify(&amp;quot;Popped Empower Rune Weapon&amp;quot;)
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Use: Mouseover Skill</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
  and IsMouseButtonDown()
 then RunMacroText(&amp;quot;/click &amp;quot;..GetMouseFocus():GetName()) end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Heart Strike</Name><Default>false</Default><SpellID>55050</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(55050)
	and PQ_ValidUnit
	and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt;= 70
	and IsSpellInRange(GetSpellInfo(55050), PQR_CustomTarget) == 1 then
		BR1start, BR1duration, BR1ready = GetRuneCooldown(1)
		BR2start, BR2duration, BR2ready = GetRuneCooldown(2)
		
		if BR1ready or BR2ready or select(2, DeathRuneCD()) &amp;gt;= 1 then
			if BR1ready or BR2ready then return true
			--[[ elseif BR1ready and not BR2ready then
				if BR2start + BR2duration - GetTime() &amp;lt;= 1.5 then return true end
			elseif not BR1ready and BR2ready then
				if BR1start + BR2duration - GetTime() &amp;lt;= 1.5 then return true end ]]--
			elseif select(2, DeathRuneCD()) &amp;gt;= 1 then return true end
		end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Boil</Name><Default>false</Default><SpellID>48721</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48721)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(55050), PQR_CustomTarget) == 1
	and AoEToggle
	and (UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;) or UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;PLAYER&amp;quot;)) then
		BR1start, BR1duration, BR1ready = GetRuneCooldown(1)
		BR2start, BR2duration, BR2ready = GetRuneCooldown(2)
		if BR1ready or BR2ready or select(2, DeathRuneCD()) &amp;gt;= 1 then return true end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rune Strike</Name><Default>false</Default><SpellID>56815</SpellID><Actions></Actions><Lua>local RunesOffCD = 0
if PQR_SpellAvailable(56815)
	and PQ_ValidUnit
	and IsSpellInRange(GetSpellInfo(56815), PQR_CustomTarget) == 1 then
		for i=3, 6 do
			if select(3, GetRuneCooldown(i)) == true then
				RunesOffCD = RunesOffCD + 1
			end
		end
		
		if RunesOffCD == 4 and select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 95 then return false
		elseif SafeToDeathStrike() and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 95 then return false
		elseif RunesOffCD &amp;gt;= 2 and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt; 60 then return false
		elseif select(4, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= select(4, GetSpellInfo(56815)) then return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Bone Shield</Name><Default>false</Default><SpellID>49222</SpellID><Actions></Actions><Lua>local BoneShield = UnitBuffID(&amp;quot;player&amp;quot;, 49222)

if PQR_SpellAvailable(49222)
  and BoneShield 
  and not UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	local BoneShieldCount = select(4, UnitBuffID(&amp;quot;player&amp;quot;, 49222))
	if BoneShieldCount &amp;lt;= 2 then
		return true
	end
elseif PQR_SpellAvailable(49222)
  and not BoneShield then
	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Death Strike</Name><Default>false</Default><SpellID>49998</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(55050)
  and PQ_ValidUnit
  and IsSpellInRange(GetSpellInfo(55050), PQR_CustomTarget) == 1
  and SafeToDeathStrike() then
  	if select(2, DeathRuneCD()) == 0 then
	  	return true
	elseif Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;gt;= 70 and select(2, DeathRuneCD()) &amp;gt;= 1 then
		return false
	end
end</Lua><RecastDelay>100</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Rune Tap</Name><Default>false</Default><SpellID>48982</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48982)
  and Nova_UnitInfo(&amp;quot;player&amp;quot;) &amp;lt;= 50 then
  	return true
end</Lua><RecastDelay>100</RecastDelay><Target>Player</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Special Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FL = PQ_FL
-- Fading Light Debuff
for i=1,#PQ_FL do
	if select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i]))
		and select(7,UnitDebuffID(&amp;quot;player&amp;quot;,PQ_FL[i])) - GetTime() &amp;lt; 1.2 then
			SpellStopCasting()
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
			return false
	end
	return false
end

-- Hour of Twilight
if not UnitBuffID(&amp;quot;player&amp;quot;,48707) and not UnitBuffID(&amp;quot;player&amp;quot;,48792) then
	local HourOfTwilight,_,_,_,_,endTime = UnitCastingInfo(&amp;quot;boss1&amp;quot;) 
	for i=1,#PQ_HOT do
		if HourOfTwilight == GetSpellInfo(PQ_HOT[i]) and endTime/1000 - GetTime() &amp;lt; 1.5 then
			SpellStopCasting()
			RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
			return false
		end
	end
end

-- Target for Sharpnel
local sharpnel = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,109597))
if sharpnel and sharpnel - GetTime() &amp;lt; 1.5 then RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Pestilence</Name><Default>false</Default><SpellID>50842</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(50842)
	and PQ_ValidUnit
	and PQ_Pestilence
	and AoEToggle
	and IsSpellInRange(GetSpellInfo(55050), PQR_CustomTarget) == 1
	and (UnitDebuffID(&amp;quot;target&amp;quot;,55095,&amp;quot;PLAYER&amp;quot;) and UnitDebuffID(&amp;quot;target&amp;quot;,55078,&amp;quot;PLAYER&amp;quot;)) then
		_, _, BR1ready = GetRuneCooldown(1)
		_, _, BR2ready = GetRuneCooldown(2)
		if BR1ready or BR2ready or select(2, DeathRuneCD()) &amp;gt;= 1 then
			PQ_Pestilence = false
			return true
		end
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>False</SkipUnknown></Ability><Ability><Name>Death Grip</Name><Default>false</Default><SpellID>49576</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(49576)
 and IsLeftControlKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and IsSpellInRange(GetSpellInfo(49576), &amp;quot;mouseover&amp;quot;) == 1
 and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)
 and UnitThreatSituation(&amp;quot;player&amp;quot;, &amp;quot;mouseovertarget&amp;quot;) &amp;lt; 2 then
	PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Dark Command</Name><Default>false</Default><SpellID>56222</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(56222)
 and IsLeftAltKeyDown() 
 and not GetCurrentKeyBoardFocus()
 and UnitExists(&amp;quot;mouseover&amp;quot;)
 and IsSpellInRange(GetSpellInfo(56222), &amp;quot;mouseover&amp;quot;) == 1
 and UnitCanAttack(&amp;quot;player&amp;quot;, &amp;quot;mouseover&amp;quot;)
 and UnitThreatSituation(&amp;quot;player&amp;quot;, &amp;quot;mouseovertarget&amp;quot;) &amp;lt; 2 then
	PQR_CustomTarget = &amp;quot;mouseover&amp;quot;
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Custom</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DEATHKNIGHT>