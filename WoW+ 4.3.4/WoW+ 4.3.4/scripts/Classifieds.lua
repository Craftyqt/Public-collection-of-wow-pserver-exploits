-- Classifieds v1.0 by Jadd
-- Programmed for WoWPlus v1.1


---------------------------------------------------
--                   Variables                   --
---------------------------------------------------

-- Message settings
AdvertisementMessage             = "";
AdvertisementChatSay             = false;
AdvertisementChatYell            = false;
AdvertisementChatTrade           = false;
AdvertisementRepeatCount         = 20; -- Amount of announcement callbacks before switching to a new character
AdvertisementRepeatAnnounceCount = 2;  -- Amount of announcements every x seconds
AdvertisementRepeatTime          = 30; -- Amount of seconds between each announcement callback

-- Character creation settings
CreationCharacters   = { "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" };
CreationAllianceRace = "1"; -- Human
CreationHordeRace    = "7"; -- Orc

-- Character teleport settings
TeleportAllianceCity = { -8859.41, 648.77, 104.40 }; -- Stormwind
TeleportHordeCity    = { 1571.58, -4399.07, 15.97 }; -- Orgrimmar

-- control variables
CurrentStatusLabel = nil;
StartStopButton    = nil;

-- bot variables
Started                  = false;
TeleportActive           = false;
CurrentFaction           = "Horde";
CurrentAnnouncementCount = 0;



---------------------------------------------------
--                 Startup & GUI                 --
---------------------------------------------------

function Load()
	-- Initialize GUI
	MainFrame = Frame.Create( "Classifieds", 270, 65, false, 0x90008080 );
	StatusLabel = Label.Create( MainFrame, "Status:", 10, 0 );
	CurrentStatusLabel = Label.Create( MainFrame, "Idle...", 65, 0 );
	StartStopButton = Button.Create( MainFrame, "Start", 10, 20, 250, 20 );
	
	-- Initialize Start/Stop button event
	Event.RegisterFrameCallback( OnStartStopClicked, StartStopButton, "OnClick" );
end

function Unload()
end



---------------------------------------------------
--                     Events                    --
---------------------------------------------------

function OnStartStopClicked( eventID, button )
	if Started then
		-- Stop the bot
		Started = false;

		-- Reset control text
		StartStopButton:SetText( "Start" );
		CurrentStatusLabel:SetText( "Idle..." );
	else
		if not IsAtCharacterSelection() then
			CurrentStatusLabel:SetText( "Error!" );
			return;
		end
		
		-- Start the bot
		Started = true;
		TeleportActive = false;
		CurrentFaction = "Horde";
		CurrentAnnouncementCount = 0;
		
		-- Set control text
		StartStopButton:SetText( "Stop" );
		
		-- Create the first character
		StartCreateCharacter();
	end
end

function StartCreateCharacter( eventID, signal )
	if eventID ~= nil then
		Event.RemoveSignalCallback( eventID );
	end
	
	if Started then
		CurrentStatusLabel:SetText( "Creating character..." );
		
		Plus.DoString( "CharSelectCreateCharacterButton:Click()" );
		
		-- Wait 100ms for character creation to load
		Event.RegisterTimerCallback( CreateCharacter, 100, false );
	end
end

function CreateCharacter( eventID, timer )
	if Started then
		-- Register character list update callback
		Event.RegisterSignalCallback( OnCharacterListUpdate, 7 ); -- Unnamed event.. hmm..
		
		if CurrentFaction == "Horde" then
			Plus.DoString( "SetSelectedRace( " .. CreationHordeRace .. " )" );
		else
			Plus.DoString( "SetSelectedRace( " .. CreationAllianceRace .. " )" );
		end
		
		Plus.DoString( "CreateCharacter( \"" .. GenerateString( CreationCharacters, 12 ) .. "\" )" );
	end
end

function StartDeleteAndContinue( eventID, signal )
	Event.RemoveSignalCallback( eventID );
	
	if Started then
		CurrentStatusLabel:SetText( "Deleting character..." );
		
		-- Wait 100ms for character creation to load
		Event.RegisterTimerCallback( DeleteAndContinue, 100, false );
	end
end

function DeleteAndContinue( eventID, timer )
	if Started then
		Event.RegisterSignalCallback( StartCreateCharacter, 7 ); -- Unnamed event.. hmm..
		Plus.DoString( "DeleteCharacter( GetCharIDFromIndex( CharacterSelect.selectedIndex ) )" );
	end
end

function OnCharacterListUpdate( eventID, signal )
	Event.RemoveSignalCallback( eventID );
	
	if Started then
		Event.RegisterSignalCallback( OnCinematicStart, FRAMEEVENT_CINEMATIC_START );

		CurrentStatusLabel:SetText( "Entering world..." );
		
		-- Wait 500ms to enter world
		Event.RegisterTimerCallback( EnterWorld, 500, false );
	end
end

function EnterWorld( eventID, timer )
	if Started then
		Plus.DoString( "EnterWorld()" );
	end
end

function OnCinematicStart( eventID, signal )
	Event.RemoveSignalCallback( eventID );
	
	if Started then
		CurrentStatusLabel:SetText( "Moving to city..." );
		
		Event.RegisterTimerCallback( TeleportToCity, 1000, true );
		Plus.DoString( "StopCinematic()" );
	end
end

function TeleportToCity( eventID, timer )
	if Started then
		if TeleportActive then
			-- Waiting for teleport
			
			if not Plus.IsTeleportActive() then
				-- Teleport complete!
				TeleportActive = false;
				
				-- Remove current timer repeat
				Event.RemoveTimerCallback( eventID );
				
				-- Register the spam function
				id = Event.RegisterTimerCallback( AnnounceMessage, AdvertisementRepeatTime * 1000, true );
				
				-- Call the first announcement manually
				AnnounceMessage( id );
			end
		else
			if CurrentFaction == "Horde" then
				successful = Plus.CreateTeleportEvent( TeleportHordeCity[1], TeleportHordeCity[2], TeleportHordeCity[3] );
			else
				successful = Plus.CreateTeleportEvent( TeleportAllianceCity[1], TeleportAllianceCity[2], TeleportAllianceCity[3] );
			end
			
			if successful then
				TeleportActive = true;
			end
		end
	else
		Event.RemoveTimerCallback( eventID );
	end
end

function AnnounceMessage( eventID, timer )
	if Started then
		CurrentAnnouncementCount = CurrentAnnouncementCount + 1;
		CurrentStatusLabel:SetText( string.format( "Announcing message (%d/%d)...", CurrentAnnouncementCount, AdvertisementRepeatCount ) );
		
		for i = 1, AdvertisementRepeatAnnounceCount do
			if AdvertisementChatSay then
				Plus.DoString( "SendChatMessage( \"" .. AdvertisementMessage .. "\", \"SAY\" )" );
			end
			
			if AdvertisementChatYell then
				Plus.DoString( "SendChatMessage( \"" .. AdvertisementMessage .. "\", \"YELL\" )" );
			end
			
			if AdvertisementChatTrade then
				Plus.DoString( "SendChatMessage( \"" .. AdvertisementMessage .. "\", \"CHANNEL\", nil, \"2\" )" );
			end
		end
		
		if CurrentAnnouncementCount == AdvertisementRepeatCount then
			CurrentAnnouncementCount = 0;
			
			if CurrentFaction == "Horde" then
				CurrentFaction = "Alliance";
			else
				CurrentFaction = "Horde";
			end
			
			Event.RemoveTimerCallback( eventID );
			Event.RegisterSignalCallback( StartDeleteAndContinue, 7 ); -- Unnamed event.. hmm..
			
			Plus.DoString( "Logout()" );
		end
	else
		Event.RemoveTimerCallback( eventID );
	end
end



---------------------------------------------------
--                Misc. Functions                --
---------------------------------------------------

function GenerateString( charset, length )
	result = "";
	lastchar = "";
	math.randomseed( os.time() ); -- Required
	
	for i = 1, length do
		newchar = lastchar;
		while lastchar == newchar do
			newchar = charset[ math.random( 1, #charset ) ];
		end
		
		lastchar = newchar;
		result = result .. newchar;
	end
	
	return result;
end



---------------------------------------------------
--               DoString Functions              --
---------------------------------------------------

function IsAtCharacterSelection()
	return Plus.DoString( "return CharacterSelect:IsShown()" ) == "1";
end