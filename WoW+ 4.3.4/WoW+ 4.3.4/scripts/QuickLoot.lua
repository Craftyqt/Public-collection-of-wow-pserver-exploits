-- QuickLoot v1.1 by Jadd
-- Programmed for WoWPlus v1.1


---------------------------------------------------
--                   Variables                   --
---------------------------------------------------

-- Management variables
Blacklist = { };
WaitingForLootFrame = false;


---------------------------------------------------
--                 Startup & GUI                 --
---------------------------------------------------

function Load()
	-- Print script loaded
	Plus.PrintChat( "QuickLoot v1.1 loaded!" );

	-- Initialize mob checking timer
	Event.RegisterTimerCallback( CheckMobs, 500, true );
	
	-- Initialize loot opened callback
	Event.RegisterSignalCallback( OnLootOpened, FRAMEEVENT_LOOT_OPENED );
end

function Unload()
end



---------------------------------------------------
--                Object Functions               --
---------------------------------------------------

function IsMobBlacklisted( object )
	return Blacklist[object] == true;
end

function GetDistance( object1, object2 )
	x1, y1, z1 = object1:GetLocation();
	x2, y2, z2 = object2:GetLocation();

	dx = x1 - x2;
	dy = y1 - y2;
	dz = z1 - z2;

	return math.sqrt( dx * dx + dy * dy + dz * dz );
end

function IsLootable( object )
	-- Check if object is unit
	if object:GetType() ~= 3 then
		return false;
	end

	-- Check if unit is lootable
	-- ( Lootable | TaggedByMe ) == 0x9
	return Bit.And( object:GetDescriptor( UNIT_DYNAMIC_FLAGS, "int" ), 0x9 ) == 0x9;
end



---------------------------------------------------
--                     Events                    --
---------------------------------------------------

function CheckMobs( eventID, timer )
	-- Check if the player is waiting for the loot frame to show, if the player has a target, or if the player is in combat
	-- This stops spam and other annoyances.
	if WaitingForLootFrame or IsInCombat() or ObjectManager.GetCurrentTarget() ~= nil then
		return;
	end

	player = ObjectManager.GetActivePlayer();
	entryCount = ObjectManager.GetObjectListEntryCount();
	
	for i = 1, entryCount do
		object = ObjectManager.GetObjectListEntry( i );

		if not IsMobBlacklisted( object ) and IsLootable( object ) and GetDistance( player, object ) < 4 then
			Blacklist[object] = true;
			Player.Interact( object );

			WaitingForLootFrame = true;
			return;
		end
	end
end

function OnLootOpened( identifier, event )
	WaitingForLootFrame = false;
end



---------------------------------------------------
--               DoString functions              --
---------------------------------------------------

function IsInCombat()
	return Plus.DoString( "return UnitAffectingCombat( \"player\" )" ) == "1";
end