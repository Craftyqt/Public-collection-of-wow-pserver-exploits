-- FlagPicker 1.2 by Whoknowsit
-- Programmed for WoWPlus

---------------------------------------------------
--                   Variables                   --
---------------------------------------------------

local eTimer = nil;
local objectList = {};

---------------------------------------------------
--                    Startup                    --
---------------------------------------------------

function Load()
    Plus.PrintChat("FlagPicker loaded.");
    Event.RegisterSignalCallback(tick, 0xAD); -- EVENT_ZONE_CHANGED_NEW_AREA
    tick(); -- Just in case, the event has already been fired (Script reload, etc.)
end

function Unload()
    Plus.PrintChat("Thank you for using FlagPicker by Whoknowsit :)");
    Plus.PrintChat("Check out http://www.wow-pl.us for more, useful stuff.");
end

---------------------------------------------------
--                     Events                    --
---------------------------------------------------

function tick(eventID, timer)
	local m = Plus.GetMapID();
	
	if m == 489  -- Warsong Gulch
	or m == 726  -- Twin Peaks
	or m == 566  -- Eye of the storm
	then
		if eTimer == nil then
			eTimer = Event.RegisterTimerCallback(findFlag, 30, true);
		end
	else
        if eTimer ~= nil then
			Event.RemoveTimerCallback(eTimer);
		end
	end
end

---------------------------------------------------
--                 Main Functions                --
---------------------------------------------------

function findFlag()
    RemoveInvalidObjects();
    
    local entryCount = ObjectManager.GetObjectListEntryCount();
    
    for i = 1, entryCount, 1 do
        local obj = ObjectManager.GetObjectListEntry(i);
        local objID = obj:GetDescriptor(0x5, "int"); -- OBJECT_FIELD_ENTRY
      
        if  obj:IsValid()
		and obj:GetType() == 5
		and (   objID == 179785 -- Silverwing Flag (Alliance)
		     or objID == 179786 -- Warsong Flag (Horde)
			 or objID == 184142 -- Netherstorm Flag (Neutral)
			)
		then
            if objectList[obj] == nil then
                objectList[obj] = objID;
                obj:SetTracked(true);
                
                Plus.DoString('PlaySoundFile([[Sound\\Interface\\PVPFlagTakenMono.wav]], "Master")');
                Plus.PrintWarning("Flag dropped close to you. Go, Go, Go!");
            end
            
            grabFlag(obj);
        end        
    end
end

function grabFlag(object)
    if Plus.DoString("return UnitIsDeadOrGhost(\"player\")") ~= "nil" then
        return;
    end
    
    local player = ObjectManager.GetActivePlayer();
    local px, py, pz = player:GetLocation();
    local ox, oy, oz = object:GetLocation();
    local result = D3D.TraceLine(ox, oy, oz + 2.35, px, py, pz + 2.35, INTERSECT_WMO);
    
    if result == nil then
        Player.Interact(object);
    end
end

---------------------------------------------------
--                 Misc Functions                --
---------------------------------------------------

function RemoveInvalidObjects()
    for k, v in pairs(objectList) do
        if not k:IsValid() then
            objectList[k] = nil;
        end
    end
end