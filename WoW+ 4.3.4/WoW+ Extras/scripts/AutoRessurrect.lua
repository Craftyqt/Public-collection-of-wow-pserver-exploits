-- PortTo v1.5 by Whoknowsit
-- Programmed for WoWPlus

---------------------------------------------------
--                   Variables                   --
---------------------------------------------------

local AutoRelease = true;
local PortToCorpse = true;
local AutoRessurrect = true;
local gui = false;
local fFrame = nil;
local buffer = Memory.Allocate();

---------------------------------------------------
--                    Startup                    --
---------------------------------------------------

function Load()
    Plus.PrintChat("AutoRessurrect loaded.");
    
    fFrame = Frame.Create("AutoRessurrect", 290, 90);
    fFrame:SetVisible(false);

    cbAutoRelease = CheckBox.Create(fFrame, "Release Spirit automatically", 8, 0, AutoRelease);
    cbPortToCorpse = CheckBox.Create(fFrame, "Teleport to Corpse", 8, 25, PortToCorpse);
    cbAutoRessurrect = CheckBox.Create(fFrame, "Ressurrect automatically", 8, 50, AutoRessurrect);
            
    Event.RegisterFrameCallback(AutoReleaseChanged, cbAutoRelease, "OnClick");
    Event.RegisterFrameCallback(PortToCorpseChanged, cbPortToCorpse, "OnClick");
    Event.RegisterFrameCallback(AutoRessurrectChanged, cbAutoRessurrect, "OnClick");
    
    Event.RegisterTimerCallback(RessurectMe, 1000, true);
    
    -- Write the assembly code (ret) to our buffer.
    -- We need this to force a return on a detoured function.
    Memory.WriteBuffer(buffer, 0xC3);

    -- Hook the SendChatMessage function
    Memory.Hook(LoadGUI, Memory.GetModuleBase() + 0x4E8840);
end

function Unload()
    Memory.Free(buffer);
    Plus.PrintChat("Thank you for using AutoRessurect by Whoknowsit :)");
    Plus.PrintChat("Check out http://www.wow-pl.us for more, useful stuff.");
end

---------------------------------------------------
--                     Hooks                     --
---------------------------------------------------

function RessurectMe()
    if Plus.IsTeleportActive() or (not AutoRelease and not PortToCorpse and not AutoRessurrect) then
        return;
    end
    
    local x,y,z = ObjectManager:GetCorpseLocation()
    local IsDead = Plus.DoString("return UnitIsDead(\"player\")");
    local IsGhost = Plus.DoString("return UnitIsGhost(\"player\")");
    local isMounted = Plus.DoString("return IsMounted()");
    local RecoveryDelay = tonumber(Plus.DoString("return GetCorpseRecoveryDelay()"));
    local IsInInstance = Plus.DoString("return IsInInstance()");
    
    -- Don't do anything, if we're instanced (pvp, raid, etc)
    if IsInInstance ~= "nil" then
        return;
    end
    
    -- First, we have to release the spirit
    if AutoRelease and isDead ~= "nil" and IsGhost ~= "1" then
        Plus.DoString("RepopMe()");
        return;
    end
    
    -- Port to corpse and ressurrect
    if IsGhost ~= "nil" and isMounted ~= "1" and RecoveryDelay <= 0 then
        if PortToCorpse then
            Plus.CreateTeleportEvent(x, y, z+1);
        end
        
        if AutoRessurrect then
            Plus.DoString("RetrieveCorpse()");
			return;
        end
    elseif RecoveryDelay > 0 and RecoveryDelay%10 == 0 then
        Plus.PrintChat("Recovery delay. Wating " .. RecoveryDelay .. " seconds.");
		return;
    end
end

---------------------------------------------------
--                     GUI                       --
---------------------------------------------------

function LoadGUI(hookID, address, eax, ebp, ebx, ecx, edi, edx, eip, esi, esp)
    if Memory.ReadString(esi) == "!ar" then
        if gui then
            gui = nil;
            fFrame:SetVisible(false);
        else
            gui = true;
            fFrame:SetVisible(true);
        end
        
        Memory.HookSetContext(eax, ebp, ebx, ecx, edi, edx, buffer, esi, esp);        
    end
end

---------------------------------------------------
--                     Events                    --
---------------------------------------------------

function AutoReleaseChanged(eventID, cbSender)
    AutoRelease = cbSender:GetChecked();
end

function PortToCorpseChanged(eventID, cbSender)
    PortToCorpse = cbSender:GetChecked();
end

function AutoRessurrectChanged(eventID, cbSender)
    AutoRessurrect = cbSender:GetChecked();
end