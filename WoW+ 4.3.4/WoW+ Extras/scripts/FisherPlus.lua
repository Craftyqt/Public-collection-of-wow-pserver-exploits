-- FisherPlus by Jadd
-- Updated by Whoknowsit
-- Programmed for WoWPlus v1.3.1

---------------------------------------------------
--                   Variables                   --
---------------------------------------------------

-- Required IDs
FishingID = 131474;
BobberID = 35591;

AnimationFlags = 0xC0;

-- control variables
MainFrame = nil;
StatusLabel = nil;
StartStopButton = nil;

-- event variables
RefreshBotEvent = nil;

-- bot variables
Started = nil;
Bobber = nil;
HighlightCube = nil;

---------------------------------------------------
--                 Startup & GUI                 --
---------------------------------------------------

function Load()
    -- Print script loaded
    Plus.PrintChat( "FisherPlus v1.1.2 loaded!" );

    -- Initialize frame
    MainFrame = Frame.Create( "FisherPlus v1.1.2", 220, 65, false, 0x90509050 );

    -- Initialize unalterable controls
    Label.Create( MainFrame, "Status:", 10, 0 );

    -- Initialize alterable controls
    StatusLabel = Label.Create( MainFrame, "Idle...", 65, 0 );
    StartStopButton = Button.Create( MainFrame, "Start", 10, 20, 200, 20 );

    -- Initialize Start/Stop button event
    Event.RegisterFrameCallback( OnStartStopClicked, StartStopButton, "OnClick" );
end

function Unload()
end

---------------------------------------------------
--                Object Functions               --
---------------------------------------------------

function GetBobber()
    player = ObjectManager.GetActivePlayer();
    playerGUID = player:GetGUID();

    -- Iterate through objects list
    for i = 1, ObjectManager.GetObjectListEntryCount() do
        object = ObjectManager.GetObjectListEntry( i );

        -- Check if the object is a bobber
        if object:GetDescriptor(0x5, "int") == BobberID then
            -- Check if the bobber is mine
            if GetObjectCasterGUID( object ) == playerGUID then
                return object;
            end
        end
    end
end

function GetAnimationFlags( object )
    return Memory.Read( object:GetPointer() + AnimationFlags, "int" );
end

function GetObjectCasterGUID( object )
    return object:GetDescriptor( DYNAMICOBJECT_FIELD_CASTER, "int64" );
end

---------------------------------------------------
--                     Events                    --
---------------------------------------------------

function OnStartStopClicked( eventID, button )
    if Started then
        -- Stop the bot
        Started = false;

        -- Set button text
        StartStopButton:SetText( "Start" );

        -- Set the status label
        StatusLabel:SetText( "Idle..." );

        -- Destroy the previous cube
        if HighlightCube ~= nil and HighlightCube:IsValid() then
            HighlightCube:Destroy();
        end

        -- Remove bot refresh callback
        Event.RemoveTimerCallback( RefreshBotEvent );
    else
        -- Start the bot
        Started = true;

        -- Set button text
        StartStopButton:SetText( "Stop" );

        -- Create bot refresh callback
        RefreshBotEvent = Event.RegisterTimerCallback( RefreshBot, 500, true );
    end
end

function RefreshBot( eventID, timer )
    if IsChannelling() then
        -- Check if we have found our bobber
        if Bobber ~= nil then
            -- Check if the bobber still exists
            if Bobber:IsValid() == false then
                -- Destroy the previous cube
                if HighlightCube ~= nil and HighlightCube:IsValid() then
                    HighlightCube:Destroy();
                end

                -- Reset the bobber
                Bobber = nil;
                return;
            end

            -- Check if the bobber is splashing
            if Bit.And( GetAnimationFlags( Bobber ), 0x00000001 ) ~= 0 then
                -- Set the status label
                StatusLabel:SetText( "Taking loot!" );

                -- Take the loot!
                Player.Interact( Bobber );

                -- Reset the bobber
                Bobber = nil;
                return;
            end

            -- Set the status label
            StatusLabel:SetText( "Waiting..." );
        else
            Bobber = GetBobber();

            -- Check if the bobber was found
            if Bobber ~= nil then
                -- Draw a fancy cube on the bobber

                -- Destroy the previous cube
                if HighlightCube ~= nil and HighlightCube:IsValid() then
                    HighlightCube:Destroy();
                end

                -- Get the 3D coordinates of the bobber
                x, y, z = Bobber:GetLocation();

                -- Draw a new cube on the bobber
                HighlightCube = Cube.Create( x, y, z, 1.5, 1.5, 1, true, 0x90000000, 0xFF509050, 0.2 );
            end
        end
    else
        -- Reset the bobber
        Bobber = nil;

        -- Set the status label
        StatusLabel:SetText( "Casting rod..." );

        -- Cast the fishing spell
        Player.CastSpellByID( FishingID );
    end
end

---------------------------------------------------
--               DoString Functions              --
---------------------------------------------------

function IsChannelling()
    return Plus.DoString( "return UnitChannelInfo( 'player' ) ~= nil" ) == "true";
end