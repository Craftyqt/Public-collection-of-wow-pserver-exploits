-----------------------------------
-- Bot Settings
-----------------------------------
-- Rotation based on Beastmaster 1.4
-- v1.4
-- -Small fixes, regains Hp/Mana before looting now and turns around right after we walk out to shoot
-- -Added information on the screen of monster and players, you can disable it the settings (borrowed some for-statements from Beniamins rogue script for this)
-- v1.3
-- -Fixed the move back function
-- -Removed the timer after using Aspect of the Cheetah to not look so "botish"
-- v1.2
-- -Fixed logical errors when the player is in level range 1-12
-- -Added the move back function to run out and shoot if pet has aggro
-- v1.1
-- -Fixed ChooseAspect function
-- -Fixed check for Mend Pet (update 2017-03-10)
-- -Updated the check for targeting enemy players/pets, see the enemyFaction setting

-- Version 1.5 by SomebodyFound
-- v1.5
-- -added: Bandage logic
-- -added: Potion logic
-- -added: new eat logic
-- -added: new drink logic
-- all 4 logics are based on beniamin's rogue rotation
-- -added: new assign target logic
-- -added: pullDistance may now be configured
-- 1.5b
-- added: will now cast Feign Death if (2 or more enemies attacking us) or if (1 enemy attacking us and below 50% hp)
-- added: some new functions
-- fixed(?): sometimes drinking and looting were overlaping
-- fixed: clearing targeting after feeding pet
-- 1.5c
-- tried to improve the drinking/looting logic

bot_ = 1; -- Bot or Rotation (0)

eatList = {"Spinefin Halibut","Deep Fried Plantains","Raw Spotted Yellowtail","Homemade Cherry Pie","Bobbing Apple","Roasted Quail", "Cured Ham Steak","Dried King Bolete","Roasted Boar Meat","Spiced Wolf Meat"}; -- string or table of strings
drinkList = {"Morning Glory Dew","Moonberry Juice","Refreshing Spring Water","Ice Cold Milk"}; -- string or table of strings
eatHealth = 60; -- percentage of player's health to eat food
drinkMana = 50; -- Drink if we are below 50% mana

potionList = {"Major Healing Potion","Combat Healing Potion","Superior Healing Potion","Greater Healing Potion","Healing Potion","Lesser Healing Potion", "Minor Healing Potion"}; -- string or table of strings
usePotionHealth = 30; -- percentage of player's health to use a healing potion

bandageList = {"Heavy Linen Bandage", "Linen Bandage", "Wool Bandage"}; -- list of bandages
rejuvenationHealth = 99;

drawUnitsData = true; -- Draw info of monsters and players on the screen
maxLevelDiff = 1; -- pull mobs who are maximum 1 level above our level
minLevelDiff = 5; -- pull mobs who are minimum 5 levels below our level
stopOnFullBags = false; -- stop bot when full bags
hsWhenStop = true; -- use hearthstone when bot stops
hsBag = 1; -- HS in backpack (1rst bag)
hsSlot = 1; -- HS in slot 1 of the bag: hsBag
-- Mount settings
useMount = true; -- use mount (true) or not (false)
mountItemName = "Blue Skeletal Horse"; -- The mount-item name in your bag
mountBuffName = "Blue Skeletal Horse"; -- The buff-name when mounted
-- Quiver settings
quiverBagNr = 5; -- last bag slot (5th) slot is quiver
stopWhenQuiverEmpty = false; -- stop bot if ammo runs out
-- Pet settings
hasPet = true; -- uses pet (false = no pet)
bagWithPetFood = 4; -- 4th bag slot has pet food in it (ALWAYS PUT PET FOOD IN THE LAST SLOT OF THE BAG!)
stopWhenNoPetFood = false; -- stop bot if no pet food
pullDistance = 45;
-----------------------------------
-- Script functions below
-----------------------------------

function AssignTarget(localObj, bot_) 
	if (bot_ == 1) then
		-- Set Monster Level that shall be pulled
		SetMinTargetLevel(GetLevel(localObj) - minLevelDiff); 
		SetMaxTargetLevel(GetLevel(localObj) + maxLevelDiff); 
		-- Set pull distance
		SetPullDistance(pullDistance); 
		targetObj = 0; 
		lastTarget = GetTarget(); 
		nearestTarget = GetNearestEnemy();
		lastTargetHP = GetHealthPercentage(lastTarget); 
		nearestTargetHP = GetHealthPercentage(nearestTarget);
		-- Check: Swap to the nearest enemy if not in combat yet
		if (IsInCombat() == 0 and GetDistance(nearestTarget) < GetDistance(lastTarget)) then 
			lastTarget = nearestTarget; 
		end
		-- Check: Set a target that is not nil, not dead or tapped by other players
		if (lastTarget ~= 0 and IsDead(lastTarget) == 0 and lastTargetHP <= nearestTargetHP and GetUnitsTarget(nearestTarget) ~= localObj and
			(IsTapped(lastTarget) == 0 or IsTappedByMe(lastTarget) == 1)) then 
			targetObj = lastTarget;
		elseif (nearestTarget ~= 0 and IsDead(nearestTarget) == 0 and (IsTapped(nearestTarget) == 0 or IsTappedByMe(nearestTarget) == 1)) then 
			targetObj = nearestTarget;
		else 
			if (IsDead(GetTarget()) == 0 and (IsTapped(GetTarget()) == 0 or IsTappedByMe(GetTarget()) == 1)) then
				targetObj = GetTarget(); 
				AutoAttack(targetObj); 
			else
				-- Clear target if it's tapped already
				ClearTarget();
				return 0;
			end 
		end
	else 
		targetObj = GetTarget(); -- Set target for rotation (player selection) 
	end
	return targetObj;
end

function IsTimeGood() 
	if (GetVar('timer') == 0 or GetVar('timer') < GetTimeX()) then 
		return 1;
	end 
	return 0;
end

function UpdateTimer() 
	SetVar('timer', GetTimeX() + 1700);
end

function EnemiesAttackingUs() -- returns number of enemies attacking us
    local unitsAttackingUs = 0; 
    local currentObj, typeObj = GetFirstObject(); 
    local localObj = GetLocalPlayer();
    while currentObj ~= 0 do 
    	if typeObj == 3 then
			if CanAttack(currentObj) == 1 and IsDead(currentObj) == 0 and ((IsTapped(currentObj) == 0 or IsTappedByMe(currentObj) == 1)) then
                if (GetUnitsTarget(currentObj) == localObj) then 
                	unitsAttackingUs = unitsAttackingUs + 1; 
                end 
            end 
       	end
        currentObj, typeObj = GetNextObject(currentObj); 
    end
    return unitsAttackingUs;
end

function EatDrink()
	--UpdateStatus(5);
	--if ExitForm() then SetWaitTimer(1); end
	
	-- Drink Water

	if (IsTimeGood() == 1) then if (IsDrinking() == 0 and localMana < drinkMana) then if (IsMoving() == 1 and IsInCombat() == 0) then StopMoving(); return true; end

		if type(drinkList) == "string" then drinkList = {drinkList} 			end;
		for _,v in pairs (drinkList) do
			if v == "" or v == nil or  type(v) ~= "string" then
				v = "nil"
			end
			if HasItem(v) == 1 then
				if UseItem(v) == 1 then
					UpdateTimer();
					end
					return true;
				end
			end
		end
	end

	-- Eat Food

	if (IsEating() == 0 and (localHealth < eatHealth or (IsDrinking() == 1 and localHealth < 80))) then
		if (IsMoving() == 1) then StopMoving(); return true; 			end
		if type(eatList) == "string" then eatList = {eatList} 			end;
		for _,v in pairs (eatList) do
			if v == "" or v == nil or  type(v) ~= "string" then
				v = "nil"
			end
			if HasItem(v) == 1 then
				if UseItem(v) == 1 then
					UpdateTimer(0);
				end
				return true;
			end
		end
	end
	return false;
end


function UpdateBandageTimer() -- Set the CD time for the bandage debuff (60s) 
	SetVar('bandageTimer', GetTimeX() + 62000); 
end 


function CanBandage() -- Has the bandage debuff CD timer passed?
	if ( HasDebuff(localObj, "Recently Bandaged") == 0 and (GetVar('bandageTimer') == 0 or GetVar('bandageTimer') < GetTimeX())) then 
		return 1; 
	end
	return 0; 
end 

-- use bandage when hp low enough
function Bandage() -- use bandage
	if(type(bandageList) == "string") then bandageList = {bandagelist} end
	if(CanBandage() == 1 and IsInCombat() == 0 and localHealth < eatHealth and IsEating() == 0) then
		for _,v in pairs (bandageList) do
			if v == "" or v == nil or  type(v) ~= "string" then	
				v = "nil"
			end
			if HasItem(v) == 1 then
				if UseItem(v) == 1 then
					UpdateTimer(3);	
					UpdateBandageTimer(); 
					debugText = "Using "..v.." (no target)";
					ToConsole("used bandage");
					return true;
				end
			end
		end
	end
	return false;
end

function usePotion()
	if (localHealth < usePotionHealth) then
		if type(potionList) == "string" then potionList = {potionList} end;
		for _,v in pairs (potionList) do
			if v == "" or v == nil or  type(v) ~= "string" then
				v = "nil"
			end
			if HasItem(v) == 1 then
				if UseItem(v) == 1 then
					UpdateTimer(0.5);
					--UpdateStatus(17); 
					return;
				end
			end
		end
	end
end
-----------------------------------
function round(num, numDecimalPlaces) return tonumber(string.format("%." .. (numDecimalPlaces or 0) .. "f", num)) end

function Cast(spellName, target)
	if (HasSpell(spellName) == 1) then if (IsSpellInRange(target, spellName) == 1) then if (IsSpellOnCD(spellName) == 0) then if (IsAutoCasting(spellName) == 0) then
		SetSatusText('Casting: ', spellName);
		FaceTarget(target); CastSpellByName(spellName); SetGlobalCDTime(); return true; end end end
	end
	return false; -- return false if we can't cast the spell
end

function DrawMonsterDataOnScreen(target)
	local player = GetLocalPlayer();
	local distance = GetDistance(target);
	local tX, tY, onScreen = WorldToScreen(GetUnitsPosition(target));
	if (onScreen == 1) then
		DrawText('Monster', tX, tY-10, 0, 255, 0);
		if (GetTarget() == target) then DrawText('(targeted)', tX+50, tY-10, 255, 0, 0); end
		DrawText('Health: ' .. GetHealth(target) .. '%', tX, tY, 255, 0, 0);
		DrawText('Distance: ' .. math.floor(distance) .. ' yd.', tX, tY+10, 255, 255, 255);
	end
end

function DrawPlayerDataOnScreen(target)
	local player = GetLocalPlayer();
	if (target == player) then 
		DrawToonDataOnScreen();
	else
		local distance = GetDistance(target);
		local tX, tY, onScreen = WorldToScreen(GetUnitsPosition(target));
		if (onScreen == 1) then
			if (CanAttack(target) == 1) then DrawText('Enemy Player', tX, tY-10, 255, 0, 0); else DrawText('Friendly Player', tX, tY-10, 0, 255, 0); end
			DrawText('Health: ' .. GetHealth(target) .. '%', tX, tY, 255, 0, 0);
			DrawText('Distance: ' .. math.floor(distance) .. ' yd.', tX, tY+10, 255, 255, 255);
			if (GetUnitsTarget(target) == player) then DrawText('IS TARGETING US!', tX, tY+20, 255, 0, 0); end
		end
	end
end

function DrawToonDataOnScreen()
	local player = GetLocalPlayer();
	local distance = GetDistance(target);
	local tX, tY, onScreen = WorldToScreen(GetUnitsPosition(player));
	if (onScreen == 1) then
		DrawText('The Beastmaster', tX+65, tY-100, 255, 255, 0);
		DrawText('Health: ' .. math.floor(GetHealthPercentage(player)) .. '%', tX+65, tY-90, 0, 255, 0);
		DrawText('Mana: ' .. math.floor(GetManaPercentage(player)) .. '%', tX+65, tY-80, 0, 255, 255);
	end
	if (IsDead(GetPet()) == 0) then
		DrawText('The Beast', tX+65, tY-60, 255, 255, 0);
		DrawText('Health: ' .. math.floor(GetHealthPercentage(GetPet())) .. '%', tX+65, tY-50, 0, 255, 0);
		DrawText('Distance: ' .. math.floor(GetDistance(GetPet())) .. ' yd.', tX+65, tY-40, 255, 255, 255);
	end
end

function GetObjects()
	local objectTable = {};
	local obj_, type_ = GetFirstObject();
	while obj_ ~= 0 do
		if type_ == 3 or type_ == 4 then
			local objX, objY, objZ = GetUnitsPosition(obj_);
			local objR = GetLevel(obj_) - GetLevel(GetLocalPlayer()) + 25
			local objGUID = GetGUID(obj)
			objectTable[obj_] = {x = objX, y = objY, z = objZ, type = type_, r = objR, GUID = objGUID};
		end
		obj_, type_ = GetNextObject(obj_);
	end
	return objectTable;
end

function DrawMonstersAndPlayersOnScreen()
	local objectTable = GetObjects();
	for i,v in pairs(objectTable) do
		if IsDead(i) == 0
		and v.type == 3
		and CanAttack(i) == 1
		and IsCritter(i) == 0 then
			DrawMonsterDataOnScreen(i);
		end
	end
	for i,v in pairs(objectTable) do
		if IsDead(i) == 0
		and v.type == 4
		and IsCritter(i) == 0 then
			DrawPlayerDataOnScreen(i);
		end
	end
end

function SetGlobalCDTime() SetVar('timer', GetTimeX() + 1700); end -- Global CD set to 1800ms : 1500 + 300 ms server lag
function GlobalCDPassed() if (GetVar('timer') == 0) then return 1; end if (GetVar('timer') < GetTimeX()) then return 1; end return 0; end

function SetFeedTimer() SetVar('feedTimer', GetTimeX() + 20000); end -- 20s duration on Feed Pet 
function IsFeedPetDone() if (GetVar('feedTimer') == 0) then return 1; end if (GetVar('feedTimer') < GetTimeX()) then return 1; end return 0; end

function SetWaitTimer(x) SetVar('waitTimer', GetTimeX() + (x*1000)); end -- Sets the script to wait x seconds
function Wait() if (GetVar('waitTimer') == 0) then return 1; end if (GetVar('waitTimer') < GetTimeX()) then return 1; end return 0; end

function doPullRoutine(targetObj, bot_) 
	SetSatusText('Not in combat:', 'Pulling the next target...');
	-- Check: Dismount 
	if (HasBuff(localObj, mountBuffName) == 1) then UseItem(mountItemName); return; end
	-- Mark the target with Hunter's Mark
	if (HasDebuff(targetObj, "Hunter's Mark") == 0 and IsSpellOnCD("Hunter's Mark") == 0 and GetDistance(targetObj) < 50 and IsInLineOfSight(targetObj) == 1) then
		CastSpellByName("Hunter's Mark"); end
	-- Let pet loose early to get aggro (even before we are in range ourselves)
	PetAttack(); 	
	-- Check: If we are already in meele range before pull, use Raptor Strike
	if (GetDistance(targetObj) < 5) then
		if (Cast('Raptor Strike', targetObj) and IsSpellOnCD("Raptor Strike") == 0) then
			FaceTarget(targetObj); return; end end -- Perhaps we are not facing the target
	-- If Bot: Move to the target if not in line of sight or not in range
	if (bot_ == 1) then

		-- Check if we need to stand up after eating and/or drinking
		if (IsStanding() == 0 and localHealth >= 98 and localMana >= 98) then 
			StopMoving(); 
			return; 
		end 
 
		-- Move to target if not in line of sight or not in range
		if (IsInLineOfSight(targetObj) == 0 or GetDistance(targetObj) > 35) then MoveToTarget(targetObj); return;
		else if (IsMoving(localObj) == 1) then StopMoving(); end end end -- Stop moving if in range and in line of sight
	-- Pull with Concussive Shot to make it easier for pet to get aggro
	if (Cast('Concussive Shot', targetObj) and HasSpell('Concussive Shot') == 1) then FaceTarget(targetObj); StopMoving(); return;
	-- If no concussive shot pull with Serpent Sting
	elseif (Cast('Serpent Sting', targetObj)) then StopMoving(); return;
	-- If no special attacks available for pull use Auto Shot
	else if (Cast('Auto Shot', targetObj)) then FaceTarget(targetObj); StopMoving(); return; end end
end

function doInCombatRoutine(targetObj, bot_) 
	SetSatusText('In Combat', 'Doing the combat routine...');
	-- Check: Dismount 
	if (HasBuff(localObj, mountBuffName) == 1) then UseItem(mountItemName); return; end
	ResetNavigate();

	if (usePotion()) then
		return;
	end
	if (EnemiesAttackingUs() >= 2) then
		Cast(Cast('Feign Death', localObj));
	end
	if (EnemiesAttackingUs() == 1 and localHealth < 50) then
		Cast(Cast('Feign Death', localObj));
	end

	targetHealth = GetHealthPercentage(targetObj); -- update target's HP
	local pet = GetPet(); -- get pet

	-- Check: If pet is too far away set it to follow us, else attack
	if (GetDistance(pet) > 34) then PetFollow(); return; else PetAttack(); end

	-- Check: Move backwards if too close to shoot when the pet has aggro
	if (GetUnitsTarget(targetObj) == pet and bot_ == 1) then 
		if (RunBackwards(targetObj, 14)) then SetSatusText('Target to close!', 'Trying to move out to shoot...'); return; else FaceTarget(targetObj); end 
	end

	-- Check: If we are in meele range and have no pet or rotation use meele abilities
	if (GetDistance(targetObj) < 5 and bot_ == 1) then
		-- Meele Skill: Raptor Strike
		if (localMana > 10 and IsSpellOnCD('Raptor Strike') == 0) then if (Cast('Raptor Strike', targetObj)) then return; end end
		-- Meele Skill: Wing Clip (keeps the debuff up)
		if (localMana > 10 and HasDebuff(targetObj, 'Wing Clip') == 0 and HasSpell('Wing Clip')) then if (Cast('Wing Clip', targetObj)) then return; end end
		FaceTarget(targetObj); return; -- Always face the target
	end
	
	-- Check: If pet is stunned, feared etc use Bestial Wrath
	if ((IsStunned(pet) or IsConfused(pet) or IsFleeing(pet)) and UnitExists("Pet") and HasSpell('Bestial Wrath')) then if (Cast('Bestial Wrath', targetObj)) then return; end end
	
	if (bot_ == 1) then -- If Bot: Move to target if not in line of sight or out of range	
		if (IsInLineOfSight(targetObj) == 0 or GetDistance(targetObj) > 35) then MoveToTarget(targetObj); return;
		else if (IsMoving() == 1 and GetDistance(targetObj) > 15) then StopMoving(); end end -- Stop moving if in range and in line of sight
	end 

	-- Keep up the debuff: Hunter's Mark 
	if (HasDebuff(targetObj, "Hunter's Mark") == 0 and IsSpellOnCD("Hunter's Mark") == 0) then if (Cast("Hunter's Mark", targetObj)) then return; end end
	-- Attack: Use Auto Shot 
	if (Cast('Auto Shot', targetObj)) then return; end
	-- Check: Let pet get aggro, dont use special attacks before the mob has less than 90% HP
	if (targetHealth > 90 and UnitExists("Pet")) then return; end
	-- Check: Intimidation is ready and mob HP high
	if (IsSpellOnCD('Intimidation') == 0 and targetHealth > 50) then if (Cast('Intimidation', targetObj)) then return; end end
	-- Check: Use Troll Racial if the mob has less than 80% HP 
	if (targetHealth < 80 and IsSpellOnCD('Berserking') == 0 and HasSpell('Berserking')) then CastSpellByName('Berserking'); return; end 		
	-- Special attack: Serpent Sting (Keep the DOT up!)
	if (HasDebuff(targetObj, 'Serpent Sting') == 0 and IsSpellOnCD('Serpent Sting') == 0 and GetCreatureType(targetObj) ~= 'Elemental') then if (Cast('Serpent Sting', targetObj)) then return; end end
	-- Special attack: Arcane Shot (Only when mana above 70% mana)
	if (IsSpellOnCD('Arcane Shot') == 0 and localMana > 70) then if (Cast('Arcane Shot', targetObj)) then return; end end
end

function chooseAspect() 
	-- Check: Don't try to change Aspect if we are on a mount
	if (HasBuff(localObj, mountBuffName) == 0) then 		
		hasHawk, hasMonkey, hasCheetah = HasSpell("Aspect of the Hawk"), HasSpell("Aspect of the Monkey"), HasSpell("Aspect of the Cheetah");
		if (hasMonkey ~= 0 and GetLevel(localObj) < 10) then if (HasBuff(localObj, 'Aspect of the Monkey') == 0) then SetSatusText('Choosing Aspect: ', 'Aspect of the Monkey...'); CastSpellByName('Aspect of the Monkey'); SetGlobalCDTime(); return; end	
		elseif (hasCheetah ~= 0 and IsInCombat() == 0 and GetNearestEnemy() == 0) then if (HasBuff(localObj, 'Aspect of the Cheetah') == 0) then SetSatusText('Choosing Aspect: ', 'Aspect of the Cheetah...'); CastSpellByName('Aspect of the Cheetah'); return; end
		elseif (hasHawk ~= 0 and IsInCombat() == 1) then if (HasBuff(localObj, 'Aspect of the Hawk') == 0) then SetSatusText('Choosing Aspect: ', 'Aspect of the Hawk...'); CastSpellByName('Aspect of the Hawk'); SetGlobalCDTime(); return; end end
	end
end

-- Run backwards if target is within range
function RunBackwards(targetObj, range) 
	local localObj = GetLocalPlayer();
 local closestEnemy = 0;
	
 	if CanAttack(targetObj) == 1
 and GetDistance(targetObj) <= range and IsDead(targetObj) == 0 then
						
 		local xT, yT, zT = GetPosition(targetObj);
 local xP, yP, zP = GetPosition(localObj);
 local distance = GetDistance(targetObj);
 		local xV, yV, zV = xP - xT, yP - yT, zP - zT;	
 		local vectorLength = math.sqrt(xV^2 + yV^2 + zV^2);
		
 		local xUV, yUV, zUV = (1/vectorLength)*xV, (1/vectorLength)*yV, (1/vectorLength)*zV
;		
 		local moveX, moveY, moveZ = xT + xUV*100, yT + yUV*100, zT + zUV*100
;		
 		if (distance < range) then
 Move(moveX, moveY, moveZ);
 return true;
 end
	
	end
end
-----------------------------------
-- Script starts from here
-----------------------------------
-- Get Local Variables
localObj = GetLocalPlayer(); localMana = GetManaPercentage(localObj); localManaVal = GetMana(localObj); localHealth = GetHealthPercentage(localObj); localLevel = GetLevel(localObj);

-- Display Player and Monster data on the screen
if (drawUnitsData) then DrawMonstersAndPlayersOnScreen(); end

-- Checks: If dead, channeling, casting or if the global cd has passed, or if the wait timer has passed
if (IsDead(localObj) == 1) then SetSatusText('Dead:', 'Running to corpse to ressurect...'); Grave(); return; end if (IsChanneling() == 1) then return; end if (IsCasting() == 1) then return; end if (GlobalCDPassed() == 0) then return; end if (Wait() == 0) then SetSatusText('Targeted a player:', 'Waiting 30s...'); return; end 

-- Check: If the target is player or a player's pet, set the script to wait 30 seconds...
if (UnitPlayerControlled("target") and GetTarget() ~= localObj and bot_ == 1 and UnitFactionGroup("target") == enemyFaction) then SetSatusText('Target is player controlled:', 'Clear target and wait 30s...'); SetWaitTimer(30); targetObj = 0; ClearTarget(); return; end

-- Do rotation or bot
if (bot_ == 0) then 
	-- Rotation: Pause the script until the player stops moving
	if (IsMoving() == 1) then 
		return; 
	end 	
else
	-- Bot: Loot routine, regain HP/Mana before we loot
	local canLoot = true;
	local rest = false;
	if (IsInCombat() == 0) then 
		-- Check: Should we rest before looting/pulling mobs
		if ((localHealth < eatHealth) or (localMana < drinkMana) or (IsEating() == 1) or (IsDrinking() == 1)) then
			rest = true; 
			canLoot = false;
			if (EatDrink()) then
				return;
			end
		end
		-- Check: Loot if there is no enemy within 30 yards before we eat/drink
		if (GetDistance(GetNearestEnemy()) > 30) then
			if (Loot() == 1 ) then
				return;
			end
		end
		-- Check: Loot
		if (canLoot) then 
			if (Loot() == 1) then
				--UpdateStatus(11); 
				return; 
			end
		end
	-- Choose and buff with the right Aspect
	end
	chooseAspect(); 
end

if (bot_ == 1) then -- If Bot, find the next target to be killed
	if ((localHealth > eatHealth) and (localMana > drinkMana) and (IsEating() == 0) and (IsDrinking() == 0)) then
		targetObj = AssignTarget(localObj, bot_);
	end
end

-- Check: Stop and HS when bags are full
if (stopOnFullBags and IsInCombat() == 0) then
	inventoryFull = true;
	-- Check bags 1-5, except the quiver bag (quiverBagNr)
	for i=1,5 do if (i ~= quiverBagNr) then for y=1,GetContainerNumSlots(i-1) do texture, itemCount, locked, quality, readable = GetContainerItemInfo(i-1,y);
			if (itemCount == 0 or itemCount == nil) then inventoryFull = false; end end end end
	if (inventoryFull) then
		SetSatusText('Inventory is full', 'Stopping the bot...'); StopMoving();
		if (GetContainerItemCooldown(hsBag-1,hsSlot) == 0 and hsWhenStop) then UseItem('Hearthstone'); SetGlobalCDTime(); return; else Logout(); StopBot(); return; end end
end

-- Check: Stop if the quiver is empty (no arrows/ammunition)
if (stopWhenQuiverEmpty and IsInCombat() == 0) then
	quiverEmpty = true;
	for y=1,GetContainerNumSlots(quiverBagNr-1) do
		texture, itemCount, locked, quality, readable = GetContainerItemInfo(quiverBagNr-1,y);
		if (itemCount ~= nil) then quiverEmpty = false; end end
	if (quiverEmpty and IsInCombat() == 0) then
		SetSatusText('No more ammo', 'Stopping the bot...'); StopMoving();
		if (GetContainerItemCooldown(hsBag-1,hsSlot) == 0 and hsWhenStop) then
		UseItem('Hearthstone'); SetGlobalCDTime(); return; else return; end end
end

-- Check: Stop if we ran out of pet food in the "pet food slot"
if (stopWhenNoPetFood and hasPet and IsInCombat() == 0) then
	texture, itemCount, locked, quality, readable = GetContainerItemInfo(bagWithPetFood-1, GetContainerNumSlots(bagWithPetFood-1));
	if (itemCount == nil) then
		SetSatusText('No more pet food', 'Stopping the bot...'); 
		if (IsMoving() == 1) then StopMoving(); return; end
		if (GetContainerItemCooldown(hsBag-1,hsSlot) == 0 and hsWhenStop) then UseItem('Hearthstone'); SetGlobalCDTime(); return; else return; end end
end

-- Check: If pet is dismissed then Call pet 
if (GetPet() == 0 and hasPet) then
	SetSatusText('Pet is missing', 'Calling pet...');
	CastSpellByName('Call Pet'); SetGlobalCDTime(); return;
end

-- Check: If pet is dead, Revive pet
if (hasPet and IsDead(GetPet()) == 1 and IsInCombat() == 0) then	
	SetSatusText('Pet is dead', 'Reviving pet...');
	if (IsMoving() == 1) then StopMoving(); return; end
	if (IsStanding() == 0) then StopMoving(); SetGlobalCDTime(); return; end
	__, __, __, __, reviveCost = GetSpellInfoX('Revive Pet');
	if (localMana >= reviveCost) then CastSpellByName('Revive Pet'); SetGlobalCDTime(); return; else return; end
end

-- Check: If pet isn't happy, feed it (see the bagWithPetFood, pet food have to be in the last slot of the bag)
happiness, damagePercentage, loyaltyRate = GetPetHappiness();
if (UnitExists("Pet") and IsFeedPetDone() == 1 and IsInCombat() == 0 and hasPet and UnitHealth("pet") > 0) then
	if (happiness < 3 or loyaltyRate < 0) then
		SetSatusText('Pet is not happy!', 'Feeding the pet...');
		if (IsStanding() == 0) then SitOrStand(); return; end
		CastSpellByName("Feed Pet"); TargetUnit("Pet"); PickupContainerItem(bagWithPetFood-1, GetContainerNumSlots(bagWithPetFood-1));
		-- Set a 20 seconds timer for this check (Feed Pet duration)
		SetFeedTimer(); SetGlobalCDTime(); end
		ClearTarget();
end	

-- Check: Mend the pet if it has lower than 70% HP and out of combat
if (HasSpell("Mend Pet") == 1) then
	if (hasPet and UnitHealth("pet")/UnitHealthMax("pet") < 0.70 and IsInCombat() == 0 and UnitHealth("pet") > 0) then
		__, __, __, __, mendCost = GetSpellInfoX('Mend Pet');
		SetSatusText('Pet has lower than 70 procent HP!', 'Mend pet if not in combat...');
		if (IsMoving() == 1) then StopMoving(); return end
		if (IsDrinking() == 0 and GetMana(localObj) >= mendCost and GetDistance(GetPet()) < 20) then CastSpellByName("Mend Pet"); SetGlobalCDTime(); return; end 
	end
end

-- Check: Pause if the pet has lower than 70% HP and out of combat and we dont got Mend Pet
if (usePet and IsInCombat() == 0) then
	if (UnitHealth("pet")/UnitHealthMax("pet") < 0.70) then
		SetSatusText('Pet is low on HP!', 'Waiting for at least 70% HP...');
		return;
	end
end

--Check: Mend the pet if it has less than 35% HP and we are in combat and pet not dead
if (HasSpell("Mend Pet") == 1) then
	if (hasPet and UnitHealth("pet")/UnitHealthMax("pet") < 0.35 and IsInCombat() == 1 and UnitHealth("pet") ~= nil) then
		SetSatusText('Pet has lower than 35% HP!', 'Mend pet...');
		__, __, __, __, mendCost = GetSpellInfoX('Mend Pet');
		-- Check: If in range to mend the pet 
		if (GetDistance(GetPet()) < 20 and GetMana(localObj) >= mendCost and IsInLineOfSight(GetPet()) == 1) then if (IsMoving(localObj) == 1 and GetDistance(GetPet()) < 20) then StopMoving(); return; end CastSpellByName("Mend Pet"); SetGlobalCDTime(); return;
		elseif (GetMana(localObj) >= mendCost) then MoveToTarget(targetObj); return; end 
	end
end
	


if (targetObj ~= 0 and targetObj ~= localObj) then
	-- Can't attack dead targets
	if (IsDead(targetObj) == 1) then 
		if (GetTarget() == targetObj) then 
			-- Add short delay so we get out of combat and we can loot...
			SetWaitTimer(random(0.2,0.6));
			ClearTarget(); 
		end 
		return; 
	end
	-- Check: Dismount when in stealth range
	if (GetDistance(targetObj) < 30 and HasBuff(localObj, mountBuffName) == 1) then UseItem(mountItemName); return; end
	AutoAttack(targetObj); -- Auto Attack
	if (bot_ == 1) then if (IsStanding() == 0) then StopMoving(); return; end end -- Bot: Stand up if sitting
	-- Do Pull or Combat routine
	if (IsInCombat() == 0) then doPullRoutine(targetObj, bot_);
	else doInCombatRoutine(targetObj, bot_); end
else
	-- Bot: If no target or target just died check if we need to drink and or eat 
	if (bot_ == 1) then

		if (Bandage()) then
			return;
		end
		if (EatDrink()) then 
			return; 
		end 	

		-- Mount before we navigate
		if (useMount and HasItem(mountItemName) == 1 and HasBuff(localObj, mountBuffName) == 0) then if (IsMoving() == 1) then StopMoving(); return; end if (UseItem(mountItemName)) then return; end end
		if (Navigate() == 1) then return; end end
 end