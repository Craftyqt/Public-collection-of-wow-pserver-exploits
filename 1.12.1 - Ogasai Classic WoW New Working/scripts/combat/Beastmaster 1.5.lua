---------------------------------------------------------
-- Level Bot for oGasai 2.17 : Beastmaster 1.5 for Hunter
---------------------------------------------------------
bot_ = 1; -- Bot or Rotation (0)

-- Auto delete grey items parameter
deleteGrey = false;

-- Eat & Drink variables
---------------------------------------------------------
eatHealth = 50; -- eat when under x % hp
drinkMana = 50; -- drink when under x % mana
eatName = 'Haunch of Meat';
drinkName = "Ice Cold Milk";

-- Pet settings
---------------------------------------------------------
hasPet = true; -- uses pet (false = no pet)
bagWithPetFood = 4; -- 4th bag slot has pet food in it
-- You don't need much food when the pet is happy, just when it's new
-- (ALWAYS PUT PET FOOD IN THE LAST SLOT OF THE BAG!)
stopWhenNoPetFood = false; -- stop bot if we run out of pet food

-- Quiver settings
---------------------------------------------------------
quiverBagNr = 5; -- last bag slot (5th) slot is quiver
stopWhenQuiverEmpty = false; -- stop bot if ammo runs out

-- Mount settings
---------------------------------------------------------
useMount = false; -- use mount (true) or not (false)
mountItemName = ""; -- The mount-item name in your bag
mountBuffName = ""; -- The buff-name when mounted

-- Target selection settings
---------------------------------------------------------
pullDistance = 88; -- pulls enemies within X yards
maxLevelDiff = 1; -- pull mobs who are maximum X level above our level
minLevelDiff = 5; -- pull mobs who are minimum X levels below our level
skipHumanoid = false; -- Skip killing humanoid (usually in groups etc...)
skipUndead = false; -- Skip killing undead (usually in groups etc...)
skipElemental = false; -- Skip killing Elemental (usually in groups etc Arathi Highlands...)
skipDemon = false; -- Skip killing Demon

-- Paranoid feature: Pauses if players are within the paranoidRange
---------------------------------------------------------
paranoid = false; -- true = enabled, pausing the script if we are out of combat and any player is within 'paranoidRange' yards
paranoidRange = 60; -- X yards

-- Drawing info parameters
---------------------------------------------------------
drawUnitsData = true; -- Draw info of monsters and players on the screen
drawPlayers = true;
drawMonsters = true;

-- Stop script and HS variables
---------------------------------------------------------
logOutIfStuck = false;
stuckTimeOut = 60; -- if stuck longer then X seconds we log out
stopOnFullBags = false; -- stop bot when full bags
hsWhenStop = true; -- use hearthstone when bot stops
hsBag = 1; -- HS in backpack (1rst bag)
hsSlot = 1; -- HS in slot 1 of the bag: hsBag

-----------------------------------
-- Script functions below
-----------------------------------
function UseScrolls()
	if (HasItem('Scroll of Agility') == 1 or HasItem('Scroll of Strength') == 1
		or HasItem('Scroll of Stamina') == 1 or HasItem('Scroll of Intellect') == 1
		or HasItem('Scroll of Protection') == 1 or HasItem('Scroll of Spirit') == 1) then
		if (UseItem('Scroll of Agility') == 1) then return true; end
		if (UseItem('Scroll of Strength') == 1) then return true; end
		if (UseItem('Scroll of Protection') == 1) then return true; end
		if (UseItem('Scroll of Stamina') == 1) then return true; end
		if (UseItem('Scroll of Spirit') == 1) then return true; end
		if (UseItem('Scroll of Intellect') == 1) then return true; end
	end
	return false;
end	

function SaveStuckTarget(target)
	SetVar('stuckTarget', target);
end

function GetStuckTarget() if (GetVar('stuckTarget') ~= 0) then return GetVar('stuckTarget'); else return 0; end end

function SavePos() 
	local x, y, z = GetUnitsPosition(GetLocalPlayer());
	SetVar('myX', x); 
	SetVar('myY', y);
	SetVar('myZ', z);  
	SetVar('myTime', GetTimeX());
end

function GetSavedX() if (GetVar('myX') ~= 0) then return GetVar('myX'); else return 0; end end
function GetSavedY() if (GetVar('myY') ~= 0) then return GetVar('myY'); else return 0; end end
function GetSavedZ() if (GetVar('myZ') ~= 0) then return GetVar('myZ'); else return 0; end end
function GetSavedTime() if (GetVar('myTime') ~= 0) then return GetVar('myTime'); else return 0; end end

function GetDistanceDif()
	local x, y, z = GetUnitsPosition(GetLocalPlayer());
	local xV = GetSavedX()-x;
	local yV = GetSavedY()-y;
	local zV = GetSavedZ()-z;
	return math.sqrt(xV^2 + yV^2 + zV^2);
end

function StopIfStuck()
	-- Save our pos if we moved more then 20 yards or if we are in combat or eating/drinking
	if (GetDistanceDif() > 20 or IsInCombat() == 1 or IsEating() == 1 or IsDrinking() == 1) then
		SavePos();
		SetSatusText('Saving pos; ', 'Saving our position, we moved ' .. GetDistanceDif() .. ' yards...'); 
		return false;
	end

	-- Check if we are stuck/standing still (moved less than 10 yards) since stuckTimeOut seconds since last saved position
	if (GetDistanceDif() < 20 and ((GetTimeX()-GetSavedTime())/1000) > stuckTimeOut) then
		if (logOutIfStuck) then 
			Logout(); 
		end
		StopBot();
		return true;
	end

	-- Try to unstuck if a third of the stuckTimeout passed
	if (((GetTimeX()-GetSavedTime())/1000) > (stuckTimeOut/3) and GetStuckTarget() ~= 0 and AreBagsFull() == 0) then
		if (GetDistance(GetStuckTarget()) > 20) then
			MoveToTarget(GetStuckTarget());
			SetSatusText('Trying to unstuck', 'Walking towards the last killed mob...');
			return true;
		else
			return false;
		end
	end
	
	return false;
end

function DrawMonsterDataOnScreen(target)
	local player = GetLocalPlayer();
	local distance = GetDistance(target);
	local tX, tY, onScreen = WorldToScreen(GetUnitsPosition(target));
	if (onScreen == 1) then
		DrawText(GetCreatureType(target) .. ' Level:' .. GetLevel(target), tX, tY-10, 255, 255, 0);
		if (GetTarget() == target) then 
			DrawText('(targeted)', tX, tY-20, 255, 0, 0); 
		end
		DrawText('Health: ' .. GetHealth(target) .. '%', tX, tY, 255, 0, 0);
		DrawText('Distance: ' .. math.floor(distance) .. ' yd.', tX, tY+10, 255, 255, 255);
	end
end

function DrawPlayerDataOnScreen(target)
	local player = GetLocalPlayer();
	if (target == player) then 
		DrawToonDataOnScreen();
	else
		local distance = GetDistance(target);
		local tX, tY, onScreen = WorldToScreen(GetUnitsPosition(target));
		if (onScreen == 1) then
			if (CanAttack(target) == 1) then 
				DrawText('Enemy Player', tX, tY-10, 255, 0, 0);
			else 
				DrawText('Friendly Player', tX, tY-10, 0, 255, 0);
			end
			DrawText('Health: ' .. GetHealth(target) .. '%', tX, tY, 255, 0, 0);
			DrawText('Distance: ' .. math.floor(distance) .. ' yd.', tX, tY+10, 255, 255, 255);
			if (GetUnitsTarget(target) == player) then 
				DrawText('IS TARGETING US!', tX, tY+20, 255, 0, 0); 
			end
		end
	end
end

function DrawToonDataOnScreen()
	local player = GetLocalPlayer();
	local distance = GetDistance(target);
	local tX, tY, onScreen = WorldToScreen(GetUnitsPosition(player));
	if (onScreen == 1) then
		DrawText('Beastmaster 1.5', tX+65, tY-105, 255, 255, 0);
		DrawLine(tX+65, tY-90, tX+170, tY-90, 255, 255, 0, 2);
		DrawText('Health: ' .. math.floor(GetHealthPercentage(player)) .. '%', tX+65, tY-90, 0, 255, 0);
		DrawText('Mana: ' .. math.floor(GetManaPercentage(player)) .. '%', tX+65, tY-80, 0, 225, 225);
		DrawText('Pull range: ' .. pullDistance .. ' yd. ' .. 
			 	'Level range: ' .. (GetLevel(localObj) - minLevelDiff) .. '-' .. (GetLevel(localObj) + maxLevelDiff), tX+65, tY-70, 255, 255, 255);
		if (logOutIfStuck) then 
			DrawText('Stuck timeout: ' .. 'Logging out in' .. ' ' .. math.floor(stuckTimeOut-((GetTimeX()-GetSavedTime())/1000)) .. ' s...', tX+65, tY-60, 255, 255, 0); 
		else
			DrawText('Stuck timeout: Feature disabled...', tX+65, tY-60, 255, 255, 0); 
		end
		if (IsDead(GetPet()) == 0) then
			DrawText('The Beast', tX+65, tY-40, 255, 255, 0);
			DrawText('Health: ' .. math.floor(GetHealthPercentage(GetPet())) .. '%', tX+65, tY-30, 0, 255, 0);
			DrawText('Distance: ' .. math.floor(GetDistance(GetPet())) .. ' yd.', tX+65, tY-20, 255, 255, 255);
		end
	end
end

function DrawMonstersAndPlayersOnScreen()
	local objectTable = GetObjects();
	if (drawMonsters) then
		for i,v in pairs(objectTable) do
			if IsDead(i) == 0
			and v.type == 3
			and CanAttack(i) == 1
			and IsCritter(i) == 0 then
				DrawMonsterDataOnScreen(i);
			end
		end
	end
	if (drawPlayers) then
		for i,v in pairs(objectTable) do
			if IsDead(i) == 0
			and v.type == 4
			and IsCritter(i) == 0 then
				DrawPlayerDataOnScreen(i);
			end
		end
	end
end

function Paranoid(range)
	local currentObj, typeObj = GetFirstObject(); 
	local localObj = GetLocalPlayer();
	while currentObj ~= 0 do 
		if typeObj == 4 then -- player
	    	if (GetDistance(currentObj) < range and currentObj ~= localObj and IsInCombat() == 0) then 
	    		return true;
	    	end 
	    end
		currentObj, typeObj = GetNextObject(currentObj);
    end
	return false;
end

function round(num, numDecimalPlaces) return tonumber(string.format("%." .. (numDecimalPlaces or 0) .. "f", num)) end

function Cast(spellName, target)
	if (HasSpell(spellName) == 1) then 
		if (IsSpellInRange(target, spellName) == 1) then 
			if (IsSpellOnCD(spellName) == 0) then 
				if (IsAutoCasting(spellName) == 0) then
					SetSatusText('Casting: ', spellName);
					FaceTarget(target); 
					CastSpellByName(spellName); 
					SetGlobalCDTime(); 
					return true; 
				end 
			end 
		end
	end
	return false; -- return false if we can't cast the spell
end

function SetGlobalCDTime() SetVar('timer', GetTimeX() + 1800); end -- Global CD set to 1800ms : 1500 + 300 ms server lag
function GlobalCDPassed() if (GetVar('timer') == 0) then return 1; end if (GetVar('timer') < GetTimeX()) then return 1; end return 0; end

function SetFeedTimer() SetVar('feedTimer', GetTimeX() + 20000); end -- 20s duration on Feed Pet 
function IsFeedPetDone() if (GetVar('feedTimer') == 0) then return 1; end if (GetVar('feedTimer') < GetTimeX()) then return 1; end return 0; end

function SetWaitTimer(x) SetVar('waitTimer', GetTimeX() + (x*1000)); end -- Sets the script to wait x seconds
function Wait() if (GetVar('waitTimer') == 0) then return 1; end if (GetVar('waitTimer') < GetTimeX()) then return 1; end return 0; end
function GetWaitTime() return (GetVar('waitTimer')-GetTimeX())/1000; end

function doPullRoutine(targetObj, bot_) 
	SetSatusText('Not in combat:', 'Pulling the next target...');
	-- Check: Dismount 
	if (HasBuff(localObj, mountBuffName) == 1) then UseItem(mountItemName); return; end
	-- Mark the target with Hunter's Mark
	if (HasDebuff(targetObj, "Hunter's Mark") == 0 and IsSpellOnCD("Hunter's Mark") == 0 and GetDistance(targetObj) < 50) then
		CastSpellByName("Hunter's Mark"); 
	end
	-- Let pet loose early to get aggro (even before we are in range ourselves)
	PetAttack(); 	
	
	-- Check: If we can auto attack, before moving "in line of sight"
	local canDoRangeAttacks = 0;
	-- Attack: Use Auto Shot 
	if (IsAutoCasting('Auto Shot') == 0 and GetDistance(targetObj) < 35 and GetDistance(targetObj) > 13) then
		if (Cast('Auto Shot', targetObj)) then canDoRangeAttacks = 1; end
	elseif (IsAutoCasting('Auto Shot') == 1) then
		canDoRangeAttacks = 1;
	end
	
	if (canDoRangeAttacks == 1) then
		if (doPullAttacks(targetObj)) then
			if (IsMoving() == 1) then StopMoving(); end
			return;
		end
	end
	
	-- Check: If we are already in meele range before pull, use Raptor Strike
	if (GetDistance(targetObj) < 5) then
		if (Cast('Raptor Strike', targetObj) and IsSpellOnCD("Raptor Strike") == 0) then
			FaceTarget(targetObj); return; end end -- Perhaps we are not facing the target
	
	-- If Bot: Move to the target if not in line of sight or not in range
	if (bot_ == 1) then 
		-- Move to target if not in line of sight or not in range
		if (IsInLineOfSight(targetObj) == 0 or GetDistance(targetObj) > 35 or GetDistance(targetObj) < 14) then MoveToTarget(targetObj); return;
		else if (IsMoving(localObj) == 1) then StopMoving(); end end -- Stop moving if in range and in line of sight
	end
	
	doPullAttacks(targetObj);
end

function doPullAttacks(targetObj)
	-- Pull with Concussive Shot to make it easier for pet to get aggro
	if (Cast('Concussive Shot', targetObj)) then return true; end
	-- If no concussive shot pull with Serpent Sting
	if (GetCreatureType(targetObj) ~= 'Elemental') then
		if (Cast('Serpent Sting', targetObj)) then return true; end
	end
	-- If no special attacks available for pull use Auto Shot
	if (Cast('Auto Shot', targetObj)) then return true; end
end

function doInCombatRoutine(targetObj, bot_) 
	SetSatusText('In Combat', 'Doing the combat routine...');
	if (GetHealthPercentage(targetObj) < 10) then SaveStuckTarget(targetObj); end-- for unstuck
	-- Check: Dismount 
	if (HasBuff(localObj, mountBuffName) == 1) then UseItem(mountItemName); return; end
	--ResetNavigate();
	targetHealth = GetHealthPercentage(targetObj); -- update target's HP
	local pet = GetPet(); -- get pet

	-- Check: If pet is too far away set it to follow us, else attack
	if (GetDistance(pet) > 34) then PetFollow(); else PetAttack(); end

	-- Check: If in range, try to use range attacks before moving "in line of sight"
	if (GetDistance(targetObj) < 35 and GetDistance(targetObj) > 13) then
		if(doRangeAttack(targetObj)) then
			if (IsMoving() == 1) then StopMoving(); end
			return;
		end
	end

	-- Movement
	local dist = 0;
	if (GetStuckTarget() ~= 0 and GetPet() ~= 0) then
		local px, py = GetPosition(GetPet());
		local cx, cy = GetPosition(GetStuckTarget());
		dist = math.sqrt((px-cx)^2+(py-cy)^2);
	end
	if (GetDistance(targetObj) < 14 and dist > 12 and GetUnitsTarget(targetObj) == pet and hasPet) then
		SetSatusText("Target to close", "Walking towards last killed mob...");
		MoveToTarget(GetStuckTarget());
		return;
	elseif (IsInLineOfSight(targetObj) == 0 or GetDistance(targetObj) > 35) then
		MoveToTarget(targetObj);
		return;
	elseif (GetDistance(targetObj) < 12 and GetDistance(targetObj) > 3) then
		MoveToTarget(targetObj);
		return;
	else
		if(IsInLineOfSight(targetObj) == 1 and (GetDistance(targetObj) < 35 or GetDistance(targetObj) < 4)) then 
			FaceTarget(targetObj);
			if (IsMoving(localObj) == 1) then
				StopMoving(); 
			end
		end
	end
	
	-- Check: If we are in meele range and have no pet or rotation use meele abilities
	if (GetDistance(targetObj) < 5 and bot_ == 1) then
		FaceTarget(targetObj);
		-- Meele Skill: Raptor Strike
		if (localMana > 10 and IsSpellOnCD('Raptor Strike') == 0) then 
			if (Cast('Raptor Strike', targetObj)) then 
				return; 
			end 
		end
		-- Meele Skill: Wing Clip (keeps the debuff up)
		if (localMana > 10 and HasDebuff(targetObj, 'Wing Clip') == 0 and HasSpell('Wing Clip')) then if (Cast('Wing Clip', targetObj)) then return; end end
	end
	
	-- Check: If pet is stunned, feared etc use Bestial Wrath
	if ((IsStunned(pet) or IsConfused(pet) or IsFleeing(pet)) and UnitExists("Pet") and HasSpell('Bestial Wrath')) then if (Cast('Bestial Wrath', targetObj)) then return; end end
	
	if (bot_ == 1) then -- If Bot: Move to target if not in line of sight or out of range	
		if (IsInLineOfSight(targetObj) == 0 or GetDistance(targetObj) > 35) then MoveToTarget(targetObj); return;
		else if (IsMoving() == 1 and GetDistance(targetObj) > 15) then StopMoving(); end end -- Stop moving if in range and in line of sight
	end 

	doRangeAttack(targetObj);
end

function doRangeAttack(targetObj)
	-- Keep up the debuff: Hunter's Mark 
	if (HasDebuff(targetObj, "Hunter's Mark") == 0 and IsSpellOnCD("Hunter's Mark") == 0) then if (Cast("Hunter's Mark", targetObj)) then return true; end end
	-- Attack: Use Auto Shot 
	if (IsAutoCasting('Auto Shot') == 0) then
		if (Cast('Auto Shot', targetObj)) then return true; end
	end
	-- Check: Let pet get aggro, dont use special attacks before the mob has less than 95% HP
	if (GetHealthPercentage(targetObj) > 95 and UnitExists("Pet")) then return true; end
	-- Check: Intimidation is ready and mob HP high
	if (IsSpellOnCD('Intimidation') == 0 and targetHealth > 50) then if (Cast('Intimidation', targetObj)) then return true; end end
	-- Check: Use Troll Racial if the mob has less than 80% HP 
	if (targetHealth < 80 and IsSpellOnCD('Berserking') == 0 and HasSpell('Berserking') == 1) then CastSpellByName('Berserking'); return true; end 		
	-- Special attack: Serpent Sting (Keep the DOT up!)
	if (HasDebuff(targetObj, 'Serpent Sting') == 0 and IsSpellOnCD('Serpent Sting') == 0 and GetCreatureType(targetObj) ~= 'Elemental') then if (Cast('Serpent Sting', targetObj)) then return true; end end
	-- Special attack: Arcane Shot (Only when mana above 70% mana)
	if (IsSpellOnCD('Arcane Shot') == 0 and localMana > 70) then if (Cast('Arcane Shot', targetObj)) then return true; end end
	-- Check if we are able to attack
	if (IsAutoCasting('Auto Shot') == 1) then
		return true;
	end
end

function chooseAspect() 
	-- Check: Don't try to change Aspect if we are on a mount
	if (HasBuff(localObj, mountBuffName) == 0) then 		
		hasHawk, hasMonkey, hasCheetah = HasSpell("Aspect of the Hawk"), HasSpell("Aspect of the Monkey"), HasSpell("Aspect of the Cheetah");
		if (hasMonkey ~= 0 and GetLevel(localObj) < 10) then 
			if (HasBuff(localObj, 'Aspect of the Monkey') == 0) then  
				SetSatusText('Choosing Aspect: ', 'Aspect of the Monkey...'); 
				CastSpellByName('Aspect of the Monkey'); 
				SetGlobalCDTime(); 
				return; 
			end	
		elseif (hasCheetah ~= 0 and IsInCombat() == 0 and GetNearestEnemy() == 0) then 
			if (HasBuff(localObj, 'Aspect of the Cheetah') == 0) then 
				SetSatusText('Choosing Aspect: ', 'Aspect of the Cheetah...'); 
				CastSpellByName('Aspect of the Cheetah'); 
				return; 
			end
		elseif (hasHawk ~= 0 and IsInCombat() == 1) then 
			if (HasBuff(localObj, 'Aspect of the Hawk') == 0) then 
				SetSatusText('Choosing Aspect: ', 'Aspect of the Hawk...'); 
				CastSpellByName('Aspect of the Hawk'); 
				SetGlobalCDTime(); 
				return; 
			end 
		end
	end
end

function GetObjects()
	local objectTable = {};
	local obj_, type_ = GetFirstObject();
	while obj_ ~= 0 do
		if type_ == 3 or type_ == 4 then
			local objX, objY, objZ = GetUnitsPosition(obj_);
			local objR = GetLevel(obj_) - GetLevel(GetLocalPlayer()) + 25
			local objGUID = GetGUID(obj)
			objectTable[obj_] = {x = objX, y = objY, z = objZ, type = type_, r = objR, GUID = objGUID};
		end
		obj_, type_ = GetNextObject(obj_);
	end
	return objectTable;
end

-- Run backwards if target is within range
function RunBackwards(targetObj, range) 
	local localObj = GetLocalPlayer();
 	local closestEnemy = 0;
 	if CanAttack(targetObj) == 1 and GetDistance(targetObj) <= range and IsDead(targetObj) == 0 then			
 		local xT, yT, zT = GetPosition(targetObj);
 		local xP, yP, zP = GetPosition(localObj);
	 	local distance = GetDistance(targetObj);
 		local xV, yV, zV = xP - xT, yP - yT, zP - zT;	
 		local vectorLength = math.sqrt(xV^2 + yV^2 + zV^2);
 		local xUV, yUV, zUV = (1/vectorLength)*xV, (1/vectorLength)*yV, (1/vectorLength)*zV;		
 		local moveX, moveY, moveZ = xT + xUV*10, yT + yUV*10, zT + zUV;		
 		if (distance < range) then
 			Move(moveX, moveY, moveZ);
 			return true;
 		end
	end
end

function AssignTarget(localObj, bot_) 
	if (bot_ == 1) then
		targetObj = 0; 
		-- Fetch last target
		lastTarget = GetTarget(); 
		-- Clear last target if it's dead or tapped by other player
		if (IsDead(lastTarget) == 1 or (IsTapped(lastTarget) == 1 and IsTappedByMe(lastTarget) == 0)) then
			ClearTarget();
			lastTarget = 0;
		else
			targetObj = lastTarget;
		end
		-- Fetch the nearest valid target
		nearestTarget = 0;
		mobDistance = pullDistance;
		local objectTable = GetObjects();
		for i,v in pairs(objectTable) do
			if IsDead(i) == 0 and v.type == 3 and CanAttack(i) == 1 and IsCritter(i) == 0 
			and ((GetLevel(i) <= GetLevel(localObj) + maxLevelDiff and GetLevel(i) >= GetLevel(localObj) - minLevelDiff) or GetUnitsTarget(i) == localObj or GetUnitsTarget(i) == GetPet())
			and GetDistance(i) < pullDistance and (IsTapped(i) == 0 or IsTappedByMe(i) == 1) then
				if (skipHumanoid and GetCreatureType(i) == 'Humanoid' and GetUnitsTarget(i) ~= localObj) then
					-- do nothing
				elseif (skipElemental and GetCreatureType(i) == 'Elemental' and GetUnitsTarget(i) ~= localObj) then
					-- do nothing
				elseif (skipUndead and GetCreatureType(i) == 'Undead' and GetUnitsTarget(i) ~= localObj) then
					-- do nothing
				elseif (skipDemon and GetCreatureType(i) == 'Demon' and GetUnitsTarget(i) ~= localObj) then
					-- do nothing
				else
					-- return the closest mob, or a mob that is attacking us
					if (GetDistance(i) < mobDistance) then
						-- New closest distance
						mobDistance = GetDistance(i);	
						nearestTarget = i;
					end
				end
			end
		end

		-- Select the closest target if our last target is dead
		if (lastTarget == 0) then
			targetObj = nearestTarget;
		end

		-- Check: If we are in combat but we have no targets perhaps it's low level mob, kill it
		if (lastTarget == 0 and nearestTarget == 0 and (IsInCombat() == 1)) then
			targetObj = GetTarget();
		end

		-- Check: Swap to the nearest enemy if not in combat yet
		if (IsInCombat() == 0 and GetDistance(nearestTarget) < GetDistance(lastTarget)) then 
			targetObj = nearestTarget; 
		end

		-- Check: Swap to the target with lowest HP
		lastTargetHP = GetHealthPercentage(lastTarget); 
		nearestTargetHP = GetHealthPercentage(nearestTarget);
		if (lastTargetHP >= nearestTargetHP and GetUnitsTarget(nearestTarget) == localObj) then 
			targetObj = nearestTarget;
		end
	else 
		targetObj = GetTarget(); -- Set target for rotation (player selection) 
	end
	return targetObj;
end

-----------------------------------
-- Script starts from here
-----------------------------------
-- Get Local Variables
localObj = GetLocalPlayer();
localMana = GetManaPercentage(localObj);
localManaVal = GetMana(localObj);
localHealth = GetHealthPercentage(localObj);
localLevel = GetLevel(localObj);
canLoot = true;
petHP = math.floor(GetHealthPercentage(GetPet()));

if (hasPet) then
	if (localLevel < 10) then
		SetSatusText("Below level 10:", "Setting hasPet to false...");
		hasPet = false;
	end
end

-- Display Player and Monster data on the screen
if (drawUnitsData) then 
	DrawMonstersAndPlayersOnScreen(); 
end

-- Check: Run the stop if stuck function
if (logOutIfStuck) then
	if (StopIfStuck()) then
		return;
	end
end

-- Check: If dead
if (IsDead(localObj) == 1) then 
	SavePos();
	SetSatusText('Dead:', 'Running to corpse to ressurect...'); 
	Grave(); 
	if (GetCorpseRecoveryDelay() == 0) then 
		RetrieveCorpse(); 
	end; 
	return; 
end 

-- Check: Delete grey items
if (IsInCombat() == 0 and IsDead(localObj) == 0 and deleteGrey) then
		
	for bag = 0, 4 do 
		for slot = 1, GetContainerNumSlots(bag) do 
			local name = GetContainerItemLink(bag,slot)
			if name and string.find(name,"ff9d9d9d") then 
				PickupContainerItem(bag,slot); 
				DeleteCursorItem(); 
			end 
		end 
	end

end

-- Use Scrolls
if (UseScrolls() == 1) then SetWaitTimer(2); return; end

-- Check: Delete grey items
if (IsInCombat() == 0 and IsDead(localObj) == 0 and deleteGrey) then
		
	for bag = 0, 4 do 
		for slot = 1, GetContainerNumSlots(bag) do 
			local name = GetContainerItemLink(bag,slot)
			if name and string.find(name,"ff9d9d9d") then 
				PickupContainerItem(bag,slot); 
				DeleteCursorItem(); 
			end 
		end 
	end

end

-- Checks: If channeling, casting or if the global cd has passed, or if the wait timer has passed
if (IsChanneling() == 1 or IsCasting() == 1) then 
	return; 
end 
if (GlobalCDPassed() == 0) then 
	return; 
end 
if (Wait() == 0) then 
	SetSatusText('Wait-timer has been set:', 'Waiting ' .. GetWaitTime() .. ' s...'); 
	return; 
end

-- Check: Let the feed pet duration last, don't engage new targets
if (IsFeedPetDone() == 0 and IsInCombat() == 0) then 
	if (GetDistance(GetPet()) > 8) then
		PetFollow();
		SetGlobalCDTime();
	end
	SetSatusText('Feeding the pet:', 'Pausing...'); SavePos(); return; 
end

-- Check: If Paranoid enabled, pause the bot when other players are within paranoidRange and we are not in combat
if (paranoid and Paranoid(paranoidRange) and IsInCombat() == 0 and bot_ == 1) then 
	SavePos();
	ClearTarget(); 
	SetSatusText('Paranoid:', 'Players within paranoid range, pausing...');
	if (HasSpell("Shadowmeld") == 1 and HasBuff(localObj, "Shadowmeld") == 0) then
		CastSpellByName("Shadowmeld");
	end
	return; 
end

-- Check: If the target is player or a player's pet, set the script to wait 10-30 seconds
if (UnitPlayerControlled("target") and bot_ == 1 and UnitFactionGroup("target") == enemyFaction) then 
	SetSatusText('Target is player controlled:', 'Clear target and wait 10-30s...'); 
	SetWaitTimer(random(10,30)); 
	targetObj = 0; 
	SavePos();
	ClearTarget(); 
	if (HasSpell("Shadowmeld") == 1 and HasBuff(localObj, "Shadowmeld") == 0) then
		CastSpellByName("Shadowmeld");
	end
	return; 
end

-- Check: Stop and HS when bags are full
if (stopOnFullBags and IsInCombat() == 0) then
	inventoryFull = true;
	-- Check bags 1-5, except the quiver bag (quiverBagNr)
	for i=1,5 do 
		if (i ~= quiverBagNr) then 
			for y=1,GetContainerNumSlots(i-1) do 
				texture, itemCount, locked, quality, readable = GetContainerItemInfo(i-1,y);
				if (itemCount == 0 or itemCount == nil) then 
					inventoryFull = false; 
				end 
			end 
		end 
	end

	if (inventoryFull) then
		SetSatusText('Inventory is full', 'Stopping the bot...'); 
		StopMoving();
		if (GetContainerItemCooldown(hsBag-1,hsSlot) == 0 and hsWhenStop) then 
			UseItem('Hearthstone'); 
			SetGlobalCDTime(); 
			return; 
		else 
			Logout(); 
			StopBot(); 
			return; 
		end 
	end
end
	
-- Check: Stop if the quiver is empty (no arrows/ammunition)
if (stopWhenQuiverEmpty and IsInCombat() == 0) then
	quiverEmpty = true;
	for y=1,GetContainerNumSlots(quiverBagNr-1) do
		texture, itemCount, locked, quality, readable = GetContainerItemInfo(quiverBagNr-1,y);
		if (itemCount ~= nil) then 
			quiverEmpty = false; 
			end 
		end

	if (quiverEmpty and IsInCombat() == 0) then
		SetSatusText('No more ammo', 'Stopping the bot...'); 
		StopMoving();
		if (GetContainerItemCooldown(hsBag-1,hsSlot) == 0 and hsWhenStop) then
			UseItem('Hearthstone');
			SetGlobalCDTime(); 
			return; 
		else 
			Logout(); 
			StopBot(); 
			return; 
		end 
	end
end
	
-- Check: Stop if we ran out of pet food in the "pet food slot"
if (stopWhenNoPetFood and hasPet and IsInCombat() == 0) then
	texture, itemCount, locked, quality, readable = GetContainerItemInfo(bagWithPetFood-1, GetContainerNumSlots(bagWithPetFood-1));
	if (itemCount == nil) then
		SetSatusText('No more pet food', 'Stopping the bot...'); 
		if (IsMoving() == 1) then 
			StopMoving(); 
			return; 
		end
		if (GetContainerItemCooldown(hsBag-1,hsSlot) == 0 and hsWhenStop) then 
			UseItem('Hearthstone'); 
			SetGlobalCDTime(); 
			return; 
		else 
			return; 
		end 
	end
end
	
-- Check: If pet is dismissed then Call pet 
if (GetPet() == 0 and hasPet) then
	SetSatusText('Pet is missing', 'Calling pet...');
	CastSpellByName('Call Pet'); 
	SetGlobalCDTime(); 
	return;
end
	
-- Check: If pet is dead, Revive pet
if (hasPet and IsDead(GetPet()) == 1 and IsInCombat() == 0) then	
	SetSatusText('Pet is dead', 'Reviving pet...');
	if (IsMoving() == 1 or IsStanding() == 0) then 
		StopMoving(); 
		return; 
	end
	__, __, __, __, reviveCost = GetSpellInfoX("Revive Pet");
	if (localMana >= reviveCost) then 
		SavePos();
		CastSpellByName('Revive Pet'); 
		SetGlobalCDTime(); 
		return; 
	else 
		SetSatusText('Pet is dead', 'Need more mana to ress it...');
		if (IsDrinking() == 0 and HasItem(drinkName) == 1) then
			UseItem(drinkName);
			SetGlobalCDTime();
		end
		return; 
	end
end

if (petHP > 0 and hasPet) then	
	-- Check: If pet isn't happy, feed it (see the bagWithPetFood, pet food have to be in the last slot of the bag)
	local happiness, damagePercentage, loyaltyRate = GetPetHappiness();
	if (IsDead(GetPet()) == 0 and IsFeedPetDone() == 1 and IsInCombat() == 0 and hasPet and petHP > 0) then
		if (happiness < 3 or loyaltyRate < 0) then
			SetSatusText('Pet is not happy!', 'Feeding the pet...');
			if (IsStanding() == 0) then 
				SitOrStand(); 
				return; 
			end
			CastSpellByName("Feed Pet"); 
			TargetUnit("Pet"); 
			PickupContainerItem(bagWithPetFood-1, GetContainerNumSlots(bagWithPetFood-1));
			-- Set a 20 seconds timer for this check (Feed Pet duration)
			SetFeedTimer(); 
			SetGlobalCDTime(); 
		end
	end	


	-- If we have skill Mend Pet
	local mendPet = HasSpell("Mend Pet");
	if (mendPet == 1) then
		-- Check: Mend the pet if it has lower than 70% HP and out of combat
		if (hasPet and IsDead(GetPet()) == 0 and petHP < 70 and IsInCombat() == 0) then
			SavePos();
			if (GetDistance(GetPet()) > 8) then
				PetFollow();
				SetGlobalCDTime();
			end
			if (HasSpell("Mend Pet") == 1 and GetDistance(GetPet()) < 20) then
				if (hasPet and petHP < 70 and IsInCombat() == 0 and petHP > 0) then
					__, __, __, __, mendCost = GetSpellInfoX('Mend Pet');
					SetSatusText('Pet has lower than 70 procent HP!', 'Mend pet if not in combat...');
					if (IsMoving() == 1) then StopMoving(); return end
					if (IsDrinking() == 0 and GetMana(localObj) >= mendCost and GetDistance(GetPet()) < 20) then CastSpellByName("Mend Pet"); SetGlobalCDTime(); return; end 
				end
			end
		end

		-- Check: Mend the pet if it has less than 35% HP and we are in combat and pet not dead
		if (hasPet and IsDead(GetPet()) == 0 and petHP < 35) then
			if (hasPet and petHP < 35 and IsInCombat() == 1 and petHP ~= nil) then
				SetSatusText('Pet has lower than 35% HP!', 'Mend pet...');
				_, _, _, _, mendCost = GetSpellInfoX("Mend Pet");
				-- Check: If in range to mend the pet 
				if (GetDistance(GetPet()) < 20 and GetMana(localObj) >= mendCost and IsInLineOfSight(GetPet()) == 1) then 
					if (IsMoving(localObj) == 1 and GetDistance(GetPet()) < 20) then 
						StopMoving(); 
						return; 
					end 
					CastSpellByName("Mend Pet"); 
					SetGlobalCDTime(); 
					return;
				elseif (GetMana(localObj) >= mendCost) then 
					MoveToTarget(targetObj); 
					return; 
				end 
			end
		end
	else
		if (IsInCombat() == 0 and hasPet and petHP < 70) then
			SetSatusText("Pet Low Hp:", "Waiting for pet to 70 percent HP...");
			SavePos();
			if (GetDistance(GetPet()) > 8) then
				PetFollow();
				SetGlobalCDTime();
			end
			return;
		end
	end
end

-- Do rotation or bot
if (bot_ == 0) then
	-- Rotation: Don't do anything until the player stops moving
	if (IsMoving() == 1) then 
		return; 
	end 
else 	
	-- Bot
	-- Check: We need to eat or we are eating before looting or if bags are full
	if ((IsInCombat() == 0 
		and (AreBagsFull() == 1 or (localHealth < eatHealth)) or (localMana < drinkMana)  
	   	or IsDrinking() == 1 or IsEating() == 1) ) then 
		canLoot = false; 
	end

	-- Check: Vendor
	if (IsInCombat() == 0) then
		if (canLoot and Vendor() == 1) then
			SavePos();
			if (CanMerchantRepair()) then 
				RepairAllItems(); 
			end
            		if (useMount and HasItem(mountItemName) == 1 and HasBuff(localObj, mountBuffName) == 0) then 
            			if (IsMoving() == 1) then 
                			StopMoving(); 
                			return; 
                		end 
                		if (UseItem(mountItemName)) then
                			return;
               			end 
           		end
            	return;
        	end
	end

	-- Check: Loot if we can
	if (canLoot and Loot() == 1) then 
		SetWaitTimer(0.2); 
		return; 
	end 

	-- Choose and buff with the right Aspect
	if(IsDrinking() == 0 and IsEating() == 0) then 
		chooseAspect(); 
	end 

	-- Fetch a new target or set target to 0 if we should rest and we are not in combat
	if (not canLoot or (Loot() == 1 and IsInCombat() == 0)) then 
		targetObj = 0; 
	else 
		targetObj = AssignTarget(localObj, bot_); 
	end
end

--Check: If target is a valid enemy, dismount and do the pull
if (targetObj ~= 0) then
	-- Can't Attack dead targets
	if (IsDead(targetObj) == 1) then 
		targetObj = 0; 
		ClearTarget(); 
		return; 
	end 
	
	-- Auto Attack
	AutoAttack(targetObj); 

	-- Bot: Stand up if sitting
	if (bot_ == 1) then 
		if (IsStanding() == 0) then 
			StopMoving(); 
			return; 
		end 
	end 
	
	-- Do Pull or Combat routine
	if (IsInCombat() == 0) then 
		doPullRoutine(targetObj, bot_);
	else 
		doInCombatRoutine(targetObj, bot_); 
	end
else
	-- Bot: If no target or target just died check if we need to drink and or eat 
	if (bot_ == 1) then
		if (IsStanding() == 1) then
			if (localMana < drinkMana and IsDrinking() == 0 and IsInCombat() == 0) then 
				SetSatusText('Drinking:', drinkName);
				if (IsMoving() == 1) then 
					StopMoving(); 
					SetGlobalCDTime(); 
					return; 
				end 
				if(HasItem(drinkName) == 1) then 
					if (UseItem(drinkName) == 1) then 
						SetGlobalCDTime();
					end 
					return; 
				end 
			end
		
			if (localHealth < eatHealth and IsEating() == 0 and IsInCombat() == 0) then 
				SetSatusText('Low HP', 'Trying to eat something...');
				if (IsMoving() == 1) then 
					StopMoving(); 
					SetGlobalCDTime(); 
					return; 
				end
				if(HasItem(eatName) == 1) then 
					if (UseItem(eatName) == 1) then 
						SetGlobalCDTime();
					end 
					return; 
				end 
			end 
		end
	
		-- Logic: When to stand up, when rested
		if(localMana >= 98 and localHealth >= 98 and IsStanding() == 0) then 
			StopMoving(); 
			return; 
		end
		
		-- Logic: When to stand up, when rested
		if(IsStanding() == 0 and localMana > drinkMana and IsDrinking() == 0 
			and localHealth > eatHealth and IsEating() == 0) then 
			StopMoving(); 
			return; 
		end
		
		-- Logic: Keep resting 
		if(localMana < drinkMana or localHealth < eatHealth) then 
			if (IsMoving() == 1) then 
				StopMoving(); 
			end 
			return; 
		end
		
		-- Keep drinking and/or eating 
		if (IsDrinking() == 1 or IsEating() == 1) then 
			return; 
		end
		
		-- Navigate
		if (Navigate() == 1) then 
			SetWaitTimer(0.2); 
			return; 
		end 
	end
 end