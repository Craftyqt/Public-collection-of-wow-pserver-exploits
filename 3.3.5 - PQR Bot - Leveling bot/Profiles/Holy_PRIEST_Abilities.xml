<?xml version="1.0" encoding="utf-8" ?><PRIEST><Ability><Name>-- Functions --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not FuncLoaded then
	FuncLoaded = true

	function CalculateHP(t)
		local ActualWithIncoming = 100 * UnitHealth(t) / UnitHealthMax(t)
		if ActualWithIncoming then
			return ActualWithIncoming
		else
			return 100
		end
	end
		
	function CanHeal(t)
		if not UnitIsCharmed(t) 
		and not UnitIsDeadOrGhost(t) 
		and not UnitDebuffID(t, 33786) then --Clone
			return true 
		end 
	end




	--New Healing Engine
	function SheuronEngine(MO, TARGETHEAL, LOWHP, HEALPET)
		local MouseoverCheck = MO or false
		local LowHPTarget = LOWHP or 80
		local TargetHealCheck = TARGETHEAL or false
		local HEALPET = HEALPET or true
		lowhpmembers = 0
		
		playerHP = CalculateHP(&amp;quot;player&amp;quot;)
			
		members = { { 	
			Unit = &amp;quot;player&amp;quot;, 
			HP = playerHP, 
			GUID = UnitGUID(&amp;quot;player&amp;quot;), 
			IsPlayer = true, 
			} } 
			
		--Adding player to low hp table
		if playerHP &amp;lt; LowHPTarget then
			lowhpmembers = lowhpmembers + 1
		end	
			
			
		local group = &amp;quot;party&amp;quot;
		local groupmembers = GetNumPartyMembers()

		if GetNumRaidMembers() &amp;gt; 0 then
			group = &amp;quot;raid&amp;quot;
			groupmembers = GetNumRaidMembers()
		end
			
			
		for i = 1, groupmembers do 
			local member, memberhp, uidmember = group..i, CalculateHP(group..i), UnitGUID(group..i)	
			-- Checking all Party/Raid Members for Range/Health
			if ((UnitExists(member) and CanHeal(member)) or UnitIsUnit(&amp;quot;player&amp;quot;,member))
			and member ~= nil and memberhp ~= nil and uidmember ~= nil then 	
				table.insert( members,{ Unit = member, HP = memberhp, GUID = uidmember, IsPlayer = true } ) 
					
				-- Setting Low HP Members variable for AoE Healing
				if memberhp &amp;lt; LowHPTarget then
					lowhpmembers = lowhpmembers + 1
				end	
			end 
				
			-- Checking Pets in the group
			if HEALPET and lowhpmembers == 0 and UnitExists(group..i..&amp;quot;pet&amp;quot;) and CanHeal(group..i..&amp;quot;pet&amp;quot;) then
				local memberpet, memberpethp,  uidmemberpet = nil, nil, nil
				memberpet = group..i..&amp;quot;pet&amp;quot; 
				memberpethp = CalculateHP(memberpet)		
				uidmemberpet = UnitGUID(memberpet)
						
				if memberpet ~= nil and memberpethp ~= nil and uidmemberpet ~= nil then
					table.insert(members, { Unit = memberpet, HP = memberpethp, GUID = uidmemberpet, IsPlayer = false } )
				end			
			end
		end 
		-- Checking Priority Targeting
		if TargetHealCheck and CanHeal(&amp;quot;target&amp;quot;) then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;target&amp;quot;,x.Unit) end)
		elseif MouseoverCheck and CanHeal(&amp;quot;mouseover&amp;quot;) and GetMouseFocus() ~= WorldFrame then
			table.sort(members, function(x) return UnitIsUnit(&amp;quot;mouseover&amp;quot;,x.Unit) end)
		end
	end


	function CheckDistance(unit1,unit2) 
		local a1,b1 = GetPlayerMapPosition(unit1)
		local a2,b2 = GetPlayerMapPosition(unit2)
		local _, h, w = GetMapInfo()
		local x1 , y1 = a1 * 1000, b1 * 1000
		local x2 , y2 = a2 * 1000, b2 * 1000

				local distance = sqrt(min(x1 - x2, w - (x1 - x2))^2 + min(y1 - y2, h - (y1-y2))^2)
			
			return distance
	end

	function UnitsClose(t) 
		local n = -1
		for i=1,#members do
		  if CheckDistance(t,members[i].Unit) &amp;lt; 9 and members[i].HP &amp;lt; 95 then n = n + 1 end
		end 
		return n
	end



	--CastSpell--
	function _castSpell(spellid,tar)
		if UnitCastingInfo(&amp;quot;player&amp;quot;) == nil
		and UnitChannelInfo(&amp;quot;player&amp;quot;) == nil
		--and IsPlayerSpell(spellid) == true
		and cdRemains(spellid) == 0
		then
			if tar ~= nil
			and rangeCheck(spellid,tar) == nil
				then
				return false
			elseif tar ~= nil
			and rangeCheck(spellid,tar) == true
				then
				CastSpellByID(spellid, tar)
				return true
			elseif tar == nil
				then
				CastSpellByID(spellid)
				return true
			else
		return false
		end
	end
	end
	
	
	--Combat Check--
	function inCombat()
	if UnitAffectingCombat(&amp;quot;player&amp;quot;) ~= nil
		then
			return true
		end
	end
	
	--Get HP simple--
	function getHp(unit)
	if UnitExists(unit) ~= nil
		then
			return 100 * UnitHealth(unit) / UnitHealthMax(unit)
		end
	end
	
	--Range Check Simple--
	function rangeCheck(spellid,unit)
	if IsSpellInRange(GetSpellInfo(spellid),unit) == 1
	then
		return true
	end
	end
	
	
	--Amount of Cooldown that remains--
	function cdRemains(spellid)
		if select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime()) &amp;gt; 0
			then return select(2,GetSpellCooldown(spellid)) + (select(1,GetSpellCooldown(spellid)) - GetTime())
		else return 0
		end
	end


	-- Checks if our Cleanse will have a valid Debuff to Cleanse
	function ValidDispel(t)
		local HasValidDispel = false
		local i = 1
		local debuff = UnitDebuff(t, i)
		local blacklist = {70338, 70337, --Necrotic Plauge
			           71503, 70311, 70405, --Professor Putricide Abom
				}
		for n = 1, #blacklist do
			if UnitDebuffID(t, blacklist[n]) then return false end
		end
		while debuff do
			local debuffType = select(5, UnitDebuff(t, i))
			if debuffType  == &amp;quot;Disease&amp;quot;  then
				HasValidDispel = true
			end
			i = i + 1
			debuff = UnitDebuff(t, i)
		end
		return HasValidDispel
	end



--End for FuncLoad
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Init --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>SheuronEngine(false,false,CircleOfHealingTargets,true)

--Mount Pause
if IsMounted() then
	return true
end

--Drink Pause
if UnitBuffID(&amp;quot;player&amp;quot;, 57073)
or UnitBuffID(&amp;quot;player&amp;quot;, 43183)  then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>-- Options --</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>CircleOfHealingHP = 90
CircleOfHealingTargets = 2
GreaterHealHP = 40
FlashHealHP = 80
BindingHealHP = 70
PrayerOfHealingHP = 60
PrayerOfHealingTargets = 4
PrayerOfMendingHP = 90
PowerWordShieldHP = 70
RenewHP = 95

-- This option will auto focus the highest HP party member
AutoFocus =  true


-- This option will give everyone in the raid with a single target Fort, Divine Spirit, and Shadow prot
AutoRaidBuff = false</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Flash Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48071) then
	for i=1,#members do
		if members[i].HP &amp;lt; FlashHealHP then
			_castSpell(48071 ,members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Greater Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local _, _, _, serenStack = UnitBuffID( &amp;quot;player&amp;quot;, 63734 )

if PQR_SpellAvailable(48063)
and serenStack == 3 then
	for i=1,#members do
		if members[i].HP &amp;lt; GreaterHealHP then
			_castSpell(14751)
			_castSpell(48063 ,members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Binding Heal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myHP = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

if PQR_SpellAvailable(48120) then
	for i=1, #members do
		if members[i].HP &amp;lt; BindingHealHP 
		and myHP &amp;lt; BindingHealHP 
		and UnitName(&amp;quot;player&amp;quot;) ~= UnitName(members[i].Unit) then
			_castSpell(48120, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Prayer of Healing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48072) then
	for i=1,#members do
		if members[i].HP &amp;lt; PrayerOfHealingHP 
		and lowhpmembers &amp;gt;= PrayerOfHealingTargets then
			_castSpell(48072 ,members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Circle of Healing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48089) then
	for i=1,#members do
		if members[i].HP &amp;lt; CircleOfHealingHP
		and lowhpmembers &amp;gt;= CircleOfHealingTargets then
			_castSpell(48089 ,members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Power Word Shield</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48066) then
	if UnitExists(&amp;quot;focus&amp;quot;) then
		local FocusHP = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
		if not UnitDebuffID(&amp;quot;focus&amp;quot;, 6788)
		and not UnitBuffID(&amp;quot;focus&amp;quot;, 48066)
		and FocusHP &amp;lt; PowerWordShieldHP then
			_castSpell(48066, &amp;quot;focus&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Renew</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48068) then
	if UnitExists(&amp;quot;focus&amp;quot;) then
		local FocusHP = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
		if not UnitBuffID(&amp;quot;focus&amp;quot;, 48068)
		and FocusHP &amp;lt; RenewHP then
			_castSpell(48068, &amp;quot;focus&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Inner Fire</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;, 48168) then
	_castSpell(48168)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Fort
if not UnitBuffID(&amp;quot;player&amp;quot;, 48161) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 48162) 
then
	_castSpell(48161)
end

-- Shadow Prot
if not UnitBuffID(&amp;quot;player&amp;quot;, 48169) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 48170) 
then
	_castSpell(48169)
end

--Divine Spirit
if not UnitBuffID(&amp;quot;player&amp;quot;, 48073) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 48074) 
then
	_castSpell(48073)
end

if AutoRaidBuff then
for i=1, #members do
	-- Fort
	if not UnitBuffID(members[i].Unit, 48161) 
	and not UnitBuffID(members[i].Unit, 48162) 
	then
		_castSpell(48161, members[i].Unit)
	end

	-- Shadow Prot
	if not UnitBuffID(members[i].Unit, 48169) 
	and not UnitBuffID(members[i].Unit, 48170) 
	then
		_castSpell(48169, members[i].Unit)
	end

	--Divine Spirit
	if not UnitBuffID(members[i].Unit, 48073) 
	and not UnitBuffID(members[i].Unit, 48074) 
	then
		_castSpell(48073, members[i].Unit)
	end


end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Shadow Fiend</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local myMP = 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;)

if PQR_SpellAvailable(34433) then
	if myMP &amp;lt;= 70  then
		for i=1,#members do
			sftar = members[i].Unit..&amp;quot;target&amp;quot;
			if UnitExist(sftar)
			and UnitIsEnemy(&amp;quot;player&amp;quot;, sftar) then
				_castSpell(34433, sftar)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Lightwell</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsRightControlKeyDown()  then
	if IsSpellKnown(48087) then
		CastSpellByID(48087)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Mass Dispel</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if IsRightShiftKeyDown()  then
	if IsSpellKnown(32375) then
		CastSpellByID(32375)
		if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		return true 
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Targeting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if AutoFocus then

mostHP = members[1].Unit
for i=1, #members do
	if UnitHealthMax(members[i].Unit) &amp;gt; UnitHealthMax(mostHP)  then
		mostHP =  members[i].Unit
	end
end

if UnitExists(mostHP)
and UnitName(mostHP) ~= UnitName(&amp;quot;player&amp;quot;)
and rangeCheck(48071,mostHP)  then
	FocusUnit(mostHP)
else
	ClearFocus()
end

end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Guardian Spirit</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(47788) then
	for i=1,#members do
		if members[i].HP &amp;lt; 20  then
			_castSpell(47788,members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Abolish Disease</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(522) then
	for i=1, #members do
		if not UnitBuffID(members[i].Unit, 522)
		and ValidDispel(members[i].Unit)  then
			_castSpell(522, members[i].Unit)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability><Ability><Name>Prayer of Mending</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(48113) then
	if UnitExists(&amp;quot;focus&amp;quot;) then
		local FocusHP = 100 * UnitHealth(&amp;quot;focus&amp;quot;) / UnitHealthMax(&amp;quot;focus&amp;quot;)
		if not UnitBuffID(&amp;quot;focus&amp;quot;, 48113)
		and FocusHP &amp;lt; PrayerOfMendingHP then
			_castSpell(48113, &amp;quot;focus&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><LuaBefore></LuaBefore><LuaAfter></LuaAfter></Ability></PRIEST>