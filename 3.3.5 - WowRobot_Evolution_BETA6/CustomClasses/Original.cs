using System;
using System.Threading;

public class Main : WowManager.WoW.SpellManager.ICustomClass
{
    #region Initialize_CustomClass

    internal static float range = 3.5f;
    public static bool loop = true;

    public float Range
    {
        get { return range; }
    }

    public void Initialize()
    {
        WowManager.Log.AddLog("Loading WoW-RoboT CC");

        switch (WowManager.WoW.ObjectManager.ObjectManager.Me.WowClass)
        {
            case WowManager.MiscEnums.WoWClass.DeathKnight:
                Deathknight ccDK = new Deathknight();
                break;
            case WowManager.MiscEnums.WoWClass.Druid:
                WowManager.MiscStructs.Spell Mangle = new WowManager.MiscStructs.Spell("Mangle (Cat)");
                if (Mangle.KnownSpell)
                {
                    WowManager.Log.AddLog("Druit Deral CC selected.");
                    DruidDeral ccDRB = new DruidDeral();
                }
                else
                {
                    WowManager.Log.AddLog("Druit Balance CC selected.");
                    DruidBalance ccDRD = new DruidBalance();
                }
                break;
            case WowManager.MiscEnums.WoWClass.Hunter:
                WowManager.Log.AddLog("Hunter CC selected.");
                Hunter ccHU = new Hunter();
                break;
            case WowManager.MiscEnums.WoWClass.Mage:
                WowManager.Log.AddLog("Mage CC selected.");
                Mage ccMA = new Mage();
                break;
            case WowManager.MiscEnums.WoWClass.Paladin:
                WowManager.Log.AddLog("Paladin CC selected.");
                Paladin ccPA = new Paladin();
                break;
            case WowManager.MiscEnums.WoWClass.Priest:
                WowManager.Log.AddLog("Priest CC selected.");
                Priest ccPR = new Priest();
                break;
            case WowManager.MiscEnums.WoWClass.Rogue:
                WowManager.Log.AddLog("Rogue CC selected.");
                Rogue ccRO = new Rogue();
                break;
            case WowManager.MiscEnums.WoWClass.Shaman:
                WowManager.Log.AddLog("Shaman CC selected.");
                Shaman ccCH = new Shaman();
                break;
            case WowManager.MiscEnums.WoWClass.Warlock:
                WowManager.Log.AddLog("Warlock CC selected.");
                Warlock ccWAL = new Warlock();
                break;
            case WowManager.MiscEnums.WoWClass.Warrior:
                WowManager.Log.AddLog("Warrior CC selected.");
                Warrior ccWA = new Warrior();
                break;
            default:
                Dispose();
                break;
        }
        WowManager.Log.AddLog("WoWRoboT CC closed.");
    }

    #endregion Initialize_CustomClass

    #region Dispose_CustomClass

    public void Dispose()
    {
        WowManager.Log.AddLog("Closing WoW-RoboT CC");
        loop = false;
    }

    #endregion Dispose_CustomClass
}

#region CustomClass

public class Paladin
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Seal_of_Command = new WowManager.MiscStructs.Spell("Seal of Command");
    WowManager.MiscStructs.Spell Seal_of_Righteousness = new WowManager.MiscStructs.Spell("Seal of Righteousness");

    WowManager.MiscStructs.Spell Blessing_of_Might = new WowManager.MiscStructs.Spell("Blessing of Might");

    WowManager.MiscStructs.Spell Judgement_of_Wisdom = new WowManager.MiscStructs.Spell("Judgement of Wisdom");
    WowManager.MiscStructs.Spell Judgement_of_Light = new WowManager.MiscStructs.Spell("Judgement of Light");

    WowManager.MiscStructs.Spell Retribution_Aura = new WowManager.MiscStructs.Spell("Retribution Aura");
    WowManager.MiscStructs.Spell Devotion_Aura = new WowManager.MiscStructs.Spell("Devotion Aura");

    WowManager.MiscStructs.Spell Lay_on_Hands = new WowManager.MiscStructs.Spell("Lay on Hands");
    WowManager.MiscStructs.Spell Flash_of_Light = new WowManager.MiscStructs.Spell("Flash of Light");
    WowManager.MiscStructs.Spell Holy_Light = new WowManager.MiscStructs.Spell("Holy Light");

    WowManager.MiscStructs.Spell Exorcism = new WowManager.MiscStructs.Spell("Exorcism");
    WowManager.MiscStructs.Spell Crusader_Strike = new WowManager.MiscStructs.Spell("Crusader Strike");
    WowManager.MiscStructs.Spell Hammer_of_Wrath = new WowManager.MiscStructs.Spell("Hammer of Wrath");
    WowManager.MiscStructs.Spell Consecration = new WowManager.MiscStructs.Spell("Consecration");
    WowManager.MiscStructs.Spell Divine_Protection = new WowManager.MiscStructs.Spell("Divine Protection");
    WowManager.MiscStructs.Spell Hammer_of_Justice = new WowManager.MiscStructs.Spell("Hammer of Justice");
    WowManager.MiscStructs.Spell Divine_Storm = new WowManager.MiscStructs.Spell("Divine Storm");
    #endregion InitializeSpell

    public Paladin()
    {
        Main.range = 3.6f; // Range

        UInt64 lastTarget = 0;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && Judgement_of_Light.IsDistanceGood)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {
        Judgement();
    }

    public void Combat()
    {
        Heal();

        Judgement();

        Others();
    }

    public void Patrolling()
    {
        if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
        {
            Seal();
            Blessing();
            Aura();
        }
    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////

    private void Seal()
    {

        if (Seal_of_Command.KnownSpell)
        {
            if (!Seal_of_Command.HaveBuff && Seal_of_Command.IsSpellUsable)
            {
                Seal_of_Command.Launch();
            }
        }
        else if (Seal_of_Righteousness.KnownSpell)
            if (!Seal_of_Righteousness.HaveBuff && Seal_of_Righteousness.IsSpellUsable)
            {
                {
                    Seal_of_Righteousness.Launch();
                }
            }
    }

    private void Blessing()
    {
        if (Blessing_of_Might.KnownSpell && !Blessing_of_Might.HaveBuff && Blessing_of_Might.IsSpellUsable)
        {
            Blessing_of_Might.Launch();
        }
    }

    private void Judgement()
    {

        if (Judgement_of_Wisdom.KnownSpell &&
            Judgement_of_Wisdom.IsDistanceGood &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage < 60 &&
            Judgement_of_Wisdom.IsSpellUsable)
        {
            Judgement_of_Wisdom.Launch();
        }
        else if (Judgement_of_Light.KnownSpell &&
                Judgement_of_Light.IsDistanceGood &&
                Judgement_of_Light.IsSpellUsable)
        {
            Judgement_of_Light.Launch();
        }

    }

    private void Aura()
    {

        if (Retribution_Aura.KnownSpell)
        {
            if (!Retribution_Aura.HaveBuff &&
            Retribution_Aura.IsSpellUsable)
            {
                Retribution_Aura.Launch();
            }
        }
        else if (Devotion_Aura.KnownSpell)
        {
            if (!Devotion_Aura.HaveBuff &&
            Devotion_Aura.IsSpellUsable)
            {
                Devotion_Aura.Launch();
            }
        }
    }

    private void Heal()
    {

        if (Lay_on_Hands.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 0 &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent < 20 &&
            Lay_on_Hands.IsSpellUsable)
        {
            Lay_on_Hands.Launch();
            return;
        }

        if (Flash_of_Light.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 50 &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent < 70 &&
            Flash_of_Light.IsSpellUsable)
        {
            Flash_of_Light.Launch();
        }

        if (Holy_Light.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 0 &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent < 50 &&
            Holy_Light.IsSpellUsable)
        {
            Holy_Light.Launch();
        }

    }

    private void Others()
    {
        if (Exorcism.KnownSpell &&
            Exorcism.IsDistanceGood &&
            Exorcism.IsSpellUsable)
        {
            Exorcism.Launch();
        }
        if (Divine_Storm.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.GetNumberAttackPlayer() >= 2 &&
            Divine_Storm.IsSpellUsable)
        {
            Divine_Storm.Launch();
        }
        
        if (Crusader_Strike.KnownSpell &&
            Crusader_Strike.IsDistanceGood &&
            Crusader_Strike.IsSpellUsable)
        {
            Crusader_Strike.Launch();
        }

        if (Hammer_of_Wrath.KnownSpell &&
            Hammer_of_Wrath.IsDistanceGood &&
            Hammer_of_Wrath.IsSpellUsable)
        {
            Hammer_of_Wrath.Launch();
        }
        if (Hammer_of_Justice.KnownSpell &&
            Hammer_of_Justice.IsDistanceGood &&
            Hammer_of_Justice.IsSpellUsable)
        {
            Hammer_of_Justice.Launch();
        }

        if (Consecration.KnownSpell &&
            Consecration.IsDistanceGood &&
            Consecration.IsSpellUsable)
        {
            if (WowManager.WoW.ObjectManager.ObjectManager.GetNumberAttackPlayer() > 1)
                Consecration.Launch();
        }

        if (Divine_Protection.KnownSpell &&
            Divine_Protection.IsDistanceGood &&
            Divine_Protection.IsSpellUsable)
        {
            if (WowManager.WoW.ObjectManager.ObjectManager.GetNumberAttackPlayer() > 1)
                Divine_Protection.Launch();
        }

    }
}

public class Deathknight
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Death_Grip = new WowManager.MiscStructs.Spell("Death Grip");
    WowManager.MiscStructs.Spell Icy_Touch = new WowManager.MiscStructs.Spell("Icy Touch");
    WowManager.MiscStructs.Spell Frost_Ever = new WowManager.MiscStructs.Spell("Frost Ever");
    WowManager.MiscStructs.Spell Blood_Plague = new WowManager.MiscStructs.Spell("Blood Plague");
    WowManager.MiscStructs.Spell Plague_Strike = new WowManager.MiscStructs.Spell("Plague Strike");
    WowManager.MiscStructs.Spell Death_Strike = new WowManager.MiscStructs.Spell("Death Strike");
    WowManager.MiscStructs.Spell Blood_Strike = new WowManager.MiscStructs.Spell("Blood Strike");
    WowManager.MiscStructs.Spell Horn_of_Winter = new WowManager.MiscStructs.Spell("Horn of Winter");
    WowManager.MiscStructs.Spell Rune_Strike = new WowManager.MiscStructs.Spell("Rune Strike");

    #endregion InitializeSpell

    public Deathknight()
    {
        Main.range = 3.6f; // Range

        UInt64 lastTarget = 0;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && Icy_Touch.IsDistanceGood)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {
        if (Death_Grip.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance > 15 &&
            Death_Grip.IsSpellUsable &&
            Death_Grip.IsDistanceGood)
        {
            Death_Grip.Launch();
        }
        else if (Icy_Touch.KnownSpell &&
            Icy_Touch.IsSpellUsable &&
            Icy_Touch.IsDistanceGood)
        {
            Icy_Touch.Launch();
        }
    }

    public void Combat()
    {
        Buff();


        if (!Frost_Ever.HaveBuff &&
            Icy_Touch.KnownSpell &&
            Icy_Touch.IsSpellUsable &&
            Icy_Touch.IsDistanceGood)
        {
            Icy_Touch.Launch();
            FastCheck();
        }

        if (!Blood_Plague.HaveBuff &&
            Plague_Strike.KnownSpell &&
            Plague_Strike.IsSpellUsable &&
            Plague_Strike.IsDistanceGood)
        {
            Plague_Strike.Launch();
            FastCheck();
        }

        if (Death_Strike.KnownSpell)
        {

            if (Death_Strike.IsSpellUsable &&
            Death_Strike.IsDistanceGood)
            {
                Death_Strike.Launch();
                FastCheck();
            }

        }
        else if (Blood_Strike.KnownSpell)
        {

            if (Blood_Strike.IsSpellUsable &&
            Blood_Strike.IsDistanceGood)
            {
                Blood_Strike.Launch();
                FastCheck();
            }
        }

    }

    public void Patrolling()
    {
        Buff();
    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////

    private void Buff()
    {
        if (!Horn_of_Winter.HaveBuff &&
            Horn_of_Winter.KnownSpell &&
            Horn_of_Winter.IsSpellUsable)
        {
            Horn_of_Winter.Launch();
        }
    }

    private void FastCheck()
    {
        if (Rune_Strike.KnownSpell &&
            Rune_Strike.IsSpellUsable &&
            Rune_Strike.IsDistanceGood)
        {
            Rune_Strike.Launch();
        }
    }
}

public class Warrior
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Battle_Stance = new WowManager.MiscStructs.Spell("Battle Stance");
    WowManager.MiscStructs.Spell Charge = new WowManager.MiscStructs.Spell("Charge");
    WowManager.MiscStructs.Spell Victory_Rush = new WowManager.MiscStructs.Spell("Victory Rush");
    WowManager.MiscStructs.Spell Battle_Shout = new WowManager.MiscStructs.Spell("Battle Shout");
    WowManager.MiscStructs.Spell Execute = new WowManager.MiscStructs.Spell("Execute");
    WowManager.MiscStructs.Spell Rend = new WowManager.MiscStructs.Spell("Rend");
    WowManager.MiscStructs.Spell Slam = new WowManager.MiscStructs.Spell("Slam");
    WowManager.MiscStructs.Spell Heroic_Strike = new WowManager.MiscStructs.Spell("Heroic Strike");
    WowManager.MiscStructs.Spell Hamstring = new WowManager.MiscStructs.Spell("Hamstring");
    WowManager.MiscStructs.Spell Bloodrage = new WowManager.MiscStructs.Spell("Bloodrage");

    #endregion InitializeSpell

    public Warrior()
    {
        Main.range = 3.6f; // Range

        UInt64 lastTarget = 0;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && Charge.IsDistanceGood)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {
        if (!Battle_Stance.HaveBuff)
            Battle_Stance.Launch();


        if (Charge.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance > 15 &&
            Charge.IsSpellUsable &&
            Charge.IsDistanceGood)
        {
            Charge.Launch();
        }
    }

    public void Combat()
    {
        //----------------------------------------------------
        // Bloodrage
        //----------------------------------------------------

        if (Bloodrage.KnownSpell &&
            Bloodrage.IsSpellUsable &&
            Bloodrage.IsDistanceGood &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 40)
        {
            Bloodrage.Launch();
        }

        //----------------------------------------------------
        // Hamstring
        //----------------------------------------------------

        if (Hamstring.KnownSpell &&
            Hamstring.IsSpellUsable &&
            Hamstring.IsDistanceGood)
        {
            Hamstring.Launch();
        }

        //----------------------------------------------------
        // Victory Rush
        //----------------------------------------------------

        if (Victory_Rush.KnownSpell &&
            Victory_Rush.IsSpellUsable &&
            Victory_Rush.IsDistanceGood)
        {
            Victory_Rush.Launch();
        }

        //----------------------------------------------------
        // Battle Shout
        //----------------------------------------------------

        else if (Battle_Shout.KnownSpell &&
            Battle_Shout.IsSpellUsable &&
            !Battle_Shout.HaveBuff)
        {
            Battle_Shout.Launch();
        }

        //----------------------------------------------------
        // Execute
        //----------------------------------------------------

        else if (Execute.KnownSpell &&
                Execute.IsSpellUsable &&
                WowManager.WoW.ObjectManager.ObjectManager.Target.HealthPercent <= 20)
        {
            Execute.Launch(); ;
        }

        //----------------------------------------------------
        // Rend
        //----------------------------------------------------

        else if (Rend.KnownSpell &&
            !Rend.TargetHaveBuff &&
            Rend.IsSpellUsable &&
            Rend.IsDistanceGood)
        {
            Rend.Launch();
        }

        //----------------------------------------------------
        // Nuke it!
        //----------------------------------------------------

        else
        {
            if (Slam.KnownSpell)
            {
                if (Slam.IsSpellUsable && Slam.IsDistanceGood)
                    Slam.Launch();
            }
            else
            {

                if (Heroic_Strike.IsSpellUsable && Heroic_Strike.IsDistanceGood)
                    Heroic_Strike.Launch();
            }
        }
    }

    public void Patrolling()
    {

    }
}

public class Mage
{
    string FoodName = WowManager.WoW.ItemManager.AutoFindFoodWater.GetFood();
    string DrinkName = WowManager.WoW.ItemManager.AutoFindFoodWater.GetWater();

    #region InitializeSpell

    WowManager.MiscStructs.Spell Summon_Water_Elemental = new WowManager.MiscStructs.Spell("Summon Water Elemental");
    WowManager.MiscStructs.Spell Presence_of_Mind = new WowManager.MiscStructs.Spell("Presence of Mind");
    WowManager.MiscStructs.Spell Pyroblast = new WowManager.MiscStructs.Spell("Pyroblast");
    WowManager.MiscStructs.Spell Icy_Veins = new WowManager.MiscStructs.Spell("Icy Veins");
    WowManager.MiscStructs.Spell Fire_Blast = new WowManager.MiscStructs.Spell("Fire Blast");
    WowManager.MiscStructs.Spell Hot_Streak = new WowManager.MiscStructs.Spell("Hot Streak");
    WowManager.MiscStructs.Spell Frost_Nova = new WowManager.MiscStructs.Spell("Frost Nova");
    WowManager.MiscStructs.Spell Ice_Lance = new WowManager.MiscStructs.Spell("Ice Lance");
    WowManager.MiscStructs.Spell Chilled = new WowManager.MiscStructs.Spell("Chilled");
    WowManager.MiscStructs.Spell Arcane_Intellect = new WowManager.MiscStructs.Spell("Arcane Intellect");
    WowManager.MiscStructs.Spell Frost_Armor = new WowManager.MiscStructs.Spell("Frost Armor");
    WowManager.MiscStructs.Spell Ice_Armor = new WowManager.MiscStructs.Spell("Ice Armor");
    WowManager.MiscStructs.Spell Fireball = new WowManager.MiscStructs.Spell("Fireball");
    WowManager.MiscStructs.Spell Frostbolt = new WowManager.MiscStructs.Spell("Frostbolt");
    WowManager.MiscStructs.Spell Frostfire_Bolt = new WowManager.MiscStructs.Spell("Frostfire Bolt");
    WowManager.MiscStructs.Spell Conjure_Food = new WowManager.MiscStructs.Spell("Conjure Food");
    WowManager.MiscStructs.Spell Conjure_Refreshment = new WowManager.MiscStructs.Spell("Conjure Refreshment");
    WowManager.MiscStructs.Spell Conjure_Water = new WowManager.MiscStructs.Spell("Conjure Water");

    #endregion InitializeSpell

    public Mage()
    {
        Main.range = 28.0f; // Range
        bool postCombatUsed = true;
        UInt64 lastTarget = 0;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();
                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    PostCombat();
                }

                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && NukeSpell().IsDistanceGood)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {
        //----------------------------------------------------
        // Summon Water Elemental
        //----------------------------------------------------

        if (Summon_Water_Elemental.KnownSpell &&
            Summon_Water_Elemental.IsSpellUsable &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid == 0)
        {
            Summon_Water_Elemental.Launch();
        }

        //----------------------------------------------------
        // Pull with nuke spell
        //----------------------------------------------------

        if (NukeSpell().IsSpellUsable &&
            NukeSpell().IsDistanceGood)
        {
            NukeSpell().Launch();
        }
    }

    public void Combat()
    {

        //----------------------------------------------------
        // Presence of Mind
        //----------------------------------------------------

        if (Presence_of_Mind.KnownSpell &&
            Presence_of_Mind.IsSpellUsable)
        {
            Presence_of_Mind.Launch();

            if (Pyroblast.KnownSpell &&
                Pyroblast.IsSpellUsable &&
                Pyroblast.IsDistanceGood)
            {
                Pyroblast.Launch();
            }

        }

        //----------------------------------------------------
        // Attack with nuke spell
        //----------------------------------------------------

        if (NukeSpell().IsSpellUsable &&
            NukeSpell().IsDistanceGood)
        {

            NukeSpell().Launch(); ;

        }

        //----------------------------------------------------
        // Icy Veins
        //----------------------------------------------------

        if (Icy_Veins.KnownSpell &&
                Icy_Veins.IsSpellUsable)
        {
            Icy_Veins.Launch();
        }

        //----------------------------------------------------
        // Fire Blast
        //----------------------------------------------------

        if (Fire_Blast.KnownSpell &&
                Fire_Blast.IsSpellUsable &&
                Fire_Blast.IsDistanceGood)
        {
            Fire_Blast.Launch();

        }

        //----------------------------------------------------
        // Instant pyroblast
        //----------------------------------------------------

        if (Pyroblast.KnownSpell &&
            Hot_Streak.HaveBuff &&
            Pyroblast.IsSpellUsable)
        {
            Pyroblast.Launch();
        }

        //----------------------------------------------------
        // Frost Nova
        //----------------------------------------------------

        if (Frost_Nova.KnownSpell &&
                Frost_Nova.IsSpellUsable &&
                Frost_Nova.IsDistanceGood)
        {
            WowManager.Hardware.Keyboard.DownKey("{DOWN}");
            System.Threading.Thread.Sleep(300);
            Frost_Nova.Launch();
            System.Threading.Thread.Sleep(1600);
            WowManager.Hardware.Keyboard.UpKey("{DOWN}"); ;
        }

        //----------------------------------------------------
        // Ice Lance
        //----------------------------------------------------

        if (Ice_Lance.KnownSpell &&
            Ice_Lance.IsDistanceGood &&
            Ice_Lance.IsSpellUsable)
        {
            if (Frost_Nova.HaveBuff ||
            Chilled.HaveBuff)
            {
                Ice_Lance.Launch();
            }
        }

    }
    ////Food
    //5349
    //1113
    //1114
    //6129
    //10144
    //8076
    //22895
    //22019

    ////Water
    //5350
    //2288
    //2136
    //3772
    //8077
    //8078
    //8079
    //30703
    //22018

    ////Both
    //43518
    //43523


    public void PostCombat()
    {
        FoodCheck();
        WaterCheck();
    }

    public void Patrolling()
    {


        //----------------------------------------------------
        // Use Ice Armor if available
        //----------------------------------------------------
        if (Ice_Armor.KnownSpell)
        {
            if (!Ice_Armor.HaveBuff &&
                Ice_Armor.IsSpellUsable)
            {
                Ice_Armor.Launch();
            }

            //----------------------------------------------------
            // Use Frost Armor if available
            //----------------------------------------------------
        }
        else
        {
            if (!Frost_Armor.HaveBuff &&
                Frost_Armor.KnownSpell &&
                Frost_Armor.IsSpellUsable)
            {
                Frost_Armor.Launch();
            }
        }

        //----------------------------------------------------
        // Use Arcane Intellect if available
        //----------------------------------------------------

        if (!Arcane_Intellect.HaveBuff &&
            Arcane_Intellect.KnownSpell &&
            Arcane_Intellect.IsSpellUsable)
        {
            Arcane_Intellect.Launch();
        }

    }


    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////

    private WowManager.MiscStructs.Spell NukeSpell()
    {

        if (Frostfire_Bolt.KnownSpell)
        {
            return Frostfire_Bolt;
        }
        else if (Frostbolt.KnownSpell)
        {
            return Frostbolt;
        }
        else
            return Fireball;
    }

    public void FoodCheck()
    {
        if (FoodName != "" && !WowManager.WoW.PlayerManager.Fight.InFight)
        {
            if (Conjure_Refreshment.KnownSpell &&
                Conjure_Refreshment.IsSpellUsable)
            {
                if (WowManager.WoW.ItemManager.Item.GetItemCountByNameLUA(FoodName) < 2)
                {
                    Conjure_Refreshment.Launch();
                }
            }
            else if (Conjure_Food.KnownSpell &&
                Conjure_Food.IsSpellUsable)
            {
                if (WowManager.WoW.ItemManager.Item.GetItemCountByNameLUA(FoodName) < 2)
                {

                    Conjure_Food.Launch();
                    System.Threading.Thread.Sleep(1000);
                }
            }
        }
    }
    public void WaterCheck()
    {
        if (DrinkName != "" && !WowManager.WoW.PlayerManager.Fight.InFight)
        {
            if (Conjure_Refreshment.KnownSpell &&
                Conjure_Refreshment.IsSpellUsable)
            {
                if (WowManager.WoW.ItemManager.Item.GetItemCountByNameLUA(DrinkName) < 2)
                {
                    Conjure_Refreshment.Launch();
                }
            }
            else if (Conjure_Water.KnownSpell &&
                Conjure_Water.IsSpellUsable)
            {
                if (WowManager.WoW.ItemManager.Item.GetItemCountByNameLUA(DrinkName) < 2)
                {

                    Conjure_Water.Launch();
                    System.Threading.Thread.Sleep(1000);
                }
            }
        }
    }
}

public class Warlock
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Demonic_Empowerment = new WowManager.MiscStructs.Spell("Demonic Empowerment");
    WowManager.MiscStructs.Spell Immolate = new WowManager.MiscStructs.Spell("Immolate");
    WowManager.MiscStructs.Spell Curse_of_the_Elements = new WowManager.MiscStructs.Spell("Curse of the Elements");
    WowManager.MiscStructs.Spell Curse_of_Agony = new WowManager.MiscStructs.Spell("Curse of Agony");
    WowManager.MiscStructs.Spell Shadow_Bolt = new WowManager.MiscStructs.Spell("Shadow Bolt");
    WowManager.MiscStructs.Spell Corruption = new WowManager.MiscStructs.Spell("Corruption");
    WowManager.MiscStructs.Spell Shadow_Trance = new WowManager.MiscStructs.Spell("Shadow Trance");
    WowManager.MiscStructs.Spell Unstable_Affliction = new WowManager.MiscStructs.Spell("Unstable Affliction");
    WowManager.MiscStructs.Spell Drain_Life = new WowManager.MiscStructs.Spell("Drain Life");
    WowManager.MiscStructs.Spell Drain_Soul = new WowManager.MiscStructs.Spell("Drain Soul");
    WowManager.MiscStructs.Spell Soul_Link = new WowManager.MiscStructs.Spell("Soul Link");
    WowManager.MiscStructs.Spell Summon_Imp = new WowManager.MiscStructs.Spell("Summon Imp");
    WowManager.MiscStructs.Spell Summon_Voidwalker = new WowManager.MiscStructs.Spell("Summon Voidwalker");
    WowManager.MiscStructs.Spell Summon_Felguard = new WowManager.MiscStructs.Spell("Summon Felguard");
    WowManager.MiscStructs.Spell Health_Funnel = new WowManager.MiscStructs.Spell("Health Funnel");
    WowManager.MiscStructs.Spell Life_Tap = new WowManager.MiscStructs.Spell("Life Tap");
    WowManager.MiscStructs.Spell Fel_Armor = new WowManager.MiscStructs.Spell("Fel Armor");
    WowManager.MiscStructs.Spell Demon_Armor = new WowManager.MiscStructs.Spell("Demon Armor");
    WowManager.MiscStructs.Spell Demon_Skin = new WowManager.MiscStructs.Spell("Demon Skin");
    WowManager.MiscStructs.Spell Fel_Domination = new WowManager.MiscStructs.Spell("Fel Domination");

    #endregion InitializeSpell


    public Warlock()
    {
        Main.range = 28.0f; // Range
        bool postCombatUsed = true;
        UInt64 lastTarget = 0;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount && !WowManager.WoW.ObjectManager.ObjectManager.Me.IsDeadMe)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }

                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance <= Main.range)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        Boolean HasDOT = false;
        Pet_Check();
        ArmorCheck();

        //----------------------------------------------------
        // Pet Attack
        //----------------------------------------------------

        WowManager.WoW.Interface.Lua.RunMacroText("/petattack");
        WowManager.Log.AddLog("Launch Pet Attack");

        //----------------------------------------------------
        // Demonic Empowerment
        //----------------------------------------------------

        if (Demonic_Empowerment.KnownSpell &&
            Demonic_Empowerment.IsSpellUsable &&
           !Demonic_Empowerment.HaveBuff &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.Health > 0)
        {
            Demonic_Empowerment.Launch();
        }

        //----------------------------------------------------
        // Immolate
        //----------------------------------------------------

        if (Immolate.KnownSpell &&
            Immolate.IsSpellUsable &&
            Immolate.IsDistanceGood)
        {
            Immolate.Launch();
            HasDOT = true;
        }

        //----------------------------------------------------
        // Curse of Agony
        //----------------------------------------------------
        if (Curse_of_the_Elements.KnownSpell || Curse_of_Agony.KnownSpell)
        {
            if (Curse_of_the_Elements.KnownSpell &&
                Curse_of_the_Elements.IsSpellUsable &&
                Curse_of_the_Elements.IsDistanceGood)
            {
                Curse_of_the_Elements.Launch();
                HasDOT = true;
            }
            else if (Curse_of_Agony.KnownSpell &&
                Curse_of_Agony.IsSpellUsable &&
                Curse_of_Agony.IsDistanceGood)
            {
                Curse_of_Agony.Launch();
                HasDOT = true;
            }
        }

        //----------------------------------------------------
        // Corruption
        //----------------------------------------------------

        if (Corruption.KnownSpell &&
            Corruption.IsSpellUsable &&
            Corruption.IsDistanceGood)
        {
            Corruption.Launch();
            HasDOT = true;
        }



        if (!HasDOT)
        {

            //----------------------------------------------------
            // Shadow Bolt
            //----------------------------------------------------
            if (Shadow_Bolt.KnownSpell &&
                Shadow_Bolt.IsSpellUsable &&
                Shadow_Bolt.IsDistanceGood)
            {
                Shadow_Bolt.Launch();
            }
        }

    }

    public void Combat()
    {

        LifeTap();
        Pet_Health();
        AvoidMelee();
        // HandleAdds();




        //----------------------------------------------------
        // Instant Shadow Bolt
        //----------------------------------------------------

        if (Shadow_Trance.HaveBuff)
        {
            if (Shadow_Bolt.KnownSpell &&
    Shadow_Bolt.IsSpellUsable &&
    Shadow_Bolt.IsDistanceGood)
            {
                Shadow_Bolt.Launch();
            }
            Pet_Health();
            //HandleAdds()
        }

        //----------------------------------------------------
        // Unstable Affliction
        //----------------------------------------------------

        if (Unstable_Affliction.KnownSpell &&
            Unstable_Affliction.IsSpellUsable &&
            Unstable_Affliction.IsDistanceGood &&
            !WowManager.WoW.ObjectManager.ObjectManager.Target.HaveBuff(Unstable_Affliction.Id))
        {
            Unstable_Affliction.Launch();
            Pet_Health();
            //HandleAdds()
        }

        //----------------------------------------------------
        // Drain Life / Shadow Bolt
        //----------------------------------------------------

        if (Drain_Life.KnownSpell &&
            Drain_Life.IsDistanceGood &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent < 70)
        {
            Drain_Life.Launch();
            Pet_Health();
            //HandleAdds()
        }
        else
        {
            if (Shadow_Bolt.KnownSpell &&
    Shadow_Bolt.IsSpellUsable &&
    Shadow_Bolt.IsDistanceGood)
            {
                Shadow_Bolt.Launch();
            }
            Pet_Health();
            //HandleAdds()
        }

        //----------------------------------------------------
        // Drain Soul
        //----------------------------------------------------

        if (Drain_Soul.KnownSpell &&
            Drain_Soul.IsDistanceGood &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.HealthPercent < 25 &&
            WowManager.WoW.ItemManager.Item.GetItemCountByIdLUA(6265) < 9)
        {
            Drain_Soul.Launch();
            Pet_Health();
            //HandleAdds()
        }

    }

    public void PostCombat()
    {
        LifeTap();
    }

    public void Patrolling()
    {

        if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
        {

            Pet_Check();
            ArmorCheck();

            //----------------------------------------------------
            // Soul Link
            //----------------------------------------------------
            /*
            if (Soul_Link.KnownSpell &&
                !Soul_Link.HaveBuff &&
                WowManager.WoW.ObjectManager.ObjectManager.Pet.Health > 0)
            {
                Soul_Link.Launch();
            }
             */
        }

    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////

    private void Pet_Check()
    {

        if ((WowManager.WoW.ObjectManager.ObjectManager.Pet.Health == 0 ||
            WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid == 0) && !WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount && !WowManager.WoW.ObjectManager.ObjectManager.Me.IsDeadMe)
        {

            if (Summon_Imp.KnownSpell)
            {

                Int32 nbSoulShard = WowManager.WoW.ItemManager.Item.GetItemCountByIdLUA(6265); // Soul Shard

                if (nbSoulShard > 0 &&
                    (Summon_Voidwalker.KnownSpell ||
                     Summon_Felguard.KnownSpell))
                {

                    if (Summon_Felguard.KnownSpell)
                    {
                        if (Fel_Domination.KnownSpell)
                        {
                            Fel_Domination.Launch();
                        }
                        Summon_Felguard.Launch();
                        System.Threading.Thread.Sleep(1000);
                    }
                    else if (Summon_Voidwalker.KnownSpell)
                    {
                        if (Fel_Domination.KnownSpell)
                        {
                            Fel_Domination.Launch();
                        }
                        Summon_Voidwalker.Launch();
                        System.Threading.Thread.Sleep(1000);
                    }

                }
                else
                {
                    Summon_Imp.Launch();
                    System.Threading.Thread.Sleep(1000);
                }

            }

        }

    }

    private void Pet_Health()
    {

        if (Health_Funnel.KnownSpell)
            if (WowManager.WoW.ObjectManager.ObjectManager.Pet.HealthPercent > 0 &&
                WowManager.WoW.ObjectManager.ObjectManager.Pet.HealthPercent < 50 &&
                Health_Funnel.IsSpellUsable)
            {
                Health_Funnel.Launch();
                while (WowManager.WoW.ObjectManager.ObjectManager.Me.IsCast)
                {

                    if (WowManager.WoW.ObjectManager.ObjectManager.Pet.HealthPercent > 80 || WowManager.WoW.ObjectManager.ObjectManager.Pet.IsDead)
                        break;

                    System.Threading.Thread.Sleep(100);

                }
            }

    }

    private void LifeTap()
    {
        if (Life_Tap.KnownSpell)
            if (WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 40 &&
                (WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage < WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent))
            {
                while (WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 35 &&
                        WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage < 65)
                {
                    Life_Tap.Launch();
                }
            }
    }

    private void ArmorCheck()
    {

        if (Fel_Armor.KnownSpell &&
            !Fel_Armor.HaveBuff &&
            Fel_Armor.IsSpellUsable)
        {
            Fel_Armor.Launch();
        }
        else if (Demon_Armor.KnownSpell &&
                !Fel_Armor.KnownSpell &&
                !Demon_Armor.HaveBuff &&
                Demon_Armor.IsSpellUsable)
        {
            Demon_Armor.Launch();
        }
        else if (Demon_Skin.KnownSpell &&
                !Demon_Armor.KnownSpell &&
                !Fel_Armor.KnownSpell &&
                !Demon_Skin.HaveBuff &&
                Demon_Skin.IsSpellUsable)
        {
            Demon_Skin.Launch();
        }

    }

    public void HandleAdds()
    {
        if (WowManager.WoW.ObjectManager.ObjectManager.GetNumberAttackPlayer() >= 2)
        {
            foreach (WowManager.WoW.WoWObject.WoWUnit Unit in WowManager.WoW.ObjectManager.ObjectManager.GetUnitAttackPlayer())
            {
                WowManager.WoW.PlayerManager.Interact.InteractGameObject(Unit.GetBaseAddress);
                WowManager.WoW.Interface.Lua.RunMacroText("/petattack");
                WowManager.Log.AddLog("Launch Pet Attack");
                while (Unit.Target != WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid && !WowManager.WoW.ObjectManager.ObjectManager.Pet.IsDead && Unit.GetBaseAddress > 0 && !Unit.IsDead)
                {
                    Thread.Sleep(10);
                }

                //----------------------------------------------------
                // Immolate
                //----------------------------------------------------

                if (Immolate.KnownSpell &&
                    Immolate.IsSpellUsable &&
                    Immolate.IsDistanceGood)
                {
                    Immolate.Launch();
                }

                //----------------------------------------------------
                // Corruption
                //----------------------------------------------------

                if (Corruption.KnownSpell &&
                    Corruption.IsSpellUsable &&
                    Corruption.IsDistanceGood)
                {
                    Corruption.Launch();
                }

                //----------------------------------------------------
                // Curse
                //----------------------------------------------------
                if (Curse_of_the_Elements.KnownSpell || Curse_of_Agony.KnownSpell)
                {
                    if (Curse_of_the_Elements.KnownSpell &&
                        Curse_of_the_Elements.IsSpellUsable &&
                        Curse_of_the_Elements.IsDistanceGood)
                    {
                        Curse_of_the_Elements.Launch();
                    }
                    else if (Curse_of_Agony.KnownSpell &&
                        Curse_of_Agony.IsSpellUsable &&
                        Curse_of_Agony.IsDistanceGood)
                    {
                        Curse_of_Agony.Launch();
                    }
                }
            }
        }
    }

    private void AvoidMelee()
    {
        if (WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance < 5 &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.IsAlive &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid != 0 &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.Target == WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid)
        {
            WowManager.Hardware.Keyboard.DownKey("{DOWN}");
            System.Threading.Thread.Sleep(1500);
            WowManager.Hardware.Keyboard.UpKey("{DOWN}");
        }
    }
}

public class Shaman
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Totemic_Recall = new WowManager.MiscStructs.Spell("Totemic Recall");
    WowManager.MiscStructs.Spell Call_of_the_Elements = new WowManager.MiscStructs.Spell("Call of the Elements");
    WowManager.MiscStructs.Spell Stoneskin_Totem = new WowManager.MiscStructs.Spell("Stoneskin Totem");
    WowManager.MiscStructs.Spell Lightning_Bolt = new WowManager.MiscStructs.Spell("Lightning Bolt");
    WowManager.MiscStructs.Spell Earth_Shock = new WowManager.MiscStructs.Spell("Earth Shock");
    WowManager.MiscStructs.Spell Lava_Burst = new WowManager.MiscStructs.Spell("Lava Burst");
    WowManager.MiscStructs.Spell Feral_Spirit = new WowManager.MiscStructs.Spell("Feral Spirit");
    WowManager.MiscStructs.Spell Water_Shield = new WowManager.MiscStructs.Spell("Water Shield");
    WowManager.MiscStructs.Spell Healing_Wave = new WowManager.MiscStructs.Spell("Healing Wave");
    WowManager.MiscStructs.Spell Searing_Totem = new WowManager.MiscStructs.Spell("Searing Totem");

    #endregion InitializeSpell

    public Shaman()
    {
        Main.range = 23.0f; // Range

        UInt64 lastTarget = 0;
        bool postCombatUsed = true;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }


                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance <= Main.range)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        Buff_WaterShield();

        //----------------------------------------------------
        // Totem Related
        //----------------------------------------------------

        if (Call_of_the_Elements.KnownSpell)
        {

            if (Call_of_the_Elements.IsSpellUsable)
            {
                Call_of_the_Elements.Launch();
            }

        }
        else
        {
            if (Stoneskin_Totem.KnownSpell &&
                Stoneskin_Totem.IsSpellUsable)
            {
                Stoneskin_Totem.Launch();
            }

            if (Searing_Totem.IsSpellUsable &&
                Searing_Totem.KnownSpell)
            {
                Searing_Totem.Launch();
            }
        }
        Lightning_Bolt.Launch();
        CheckHeal();
    }

    public void Combat()
    {

        CheckHeal();

        if (Earth_Shock.KnownSpell &&
            Earth_Shock.IsSpellUsable &&
            Earth_Shock.IsDistanceGood)
        {
            Earth_Shock.Launch();
            CheckHeal();
        }

        if (Lava_Burst.KnownSpell &&
            Lava_Burst.IsSpellUsable &&
            Lava_Burst.IsDistanceGood)
        {
            Lava_Burst.Launch();
            CheckHeal();
        }

        if (Feral_Spirit.KnownSpell &&
            Feral_Spirit.IsSpellUsable &&
            Feral_Spirit.IsDistanceGood)
        {
            Feral_Spirit.Launch();
            CheckHeal();
        }

        if (Lightning_Bolt.KnownSpell &&
            Lightning_Bolt.IsSpellUsable &&
            Lightning_Bolt.IsDistanceGood)
        {
            Lightning_Bolt.Launch();
            CheckHeal();
        }

    }

    public void PostCombat()
    {

        if (Totemic_Recall.KnownSpell &&
            Totemic_Recall.IsSpellUsable)
        {
            Totemic_Recall.Launch();
        }

    }

    public void Patrolling()
    {

        Buff_WaterShield();

    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////

    private void Buff_WaterShield()
    {

        if (!Water_Shield.HaveBuff &&
            Water_Shield.KnownSpell &&
            Water_Shield.IsSpellUsable)
        {
            Water_Shield.Launch();
        }

    }

    private void CheckHeal()
    {

        if (Healing_Wave.KnownSpell &&
            Healing_Wave.IsSpellUsable &&
           WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent <= 50)
        {
            Healing_Wave.Launch();
            System.Threading.Thread.Sleep(1000);
        }

    }
}

public class Priest
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Vampiric_Touch = new WowManager.MiscStructs.Spell("Vampiric Touch");
    WowManager.MiscStructs.Spell Holy_Fire = new WowManager.MiscStructs.Spell("Holy Fire");
    WowManager.MiscStructs.Spell Smite = new WowManager.MiscStructs.Spell("Smite");
    WowManager.MiscStructs.Spell Mind_Blast = new WowManager.MiscStructs.Spell("Mind Blast");
    WowManager.MiscStructs.Spell Shadow_Word_Pain = new WowManager.MiscStructs.Spell("Shadow Word: Pain");
    WowManager.MiscStructs.Spell Devouring_Plague = new WowManager.MiscStructs.Spell("Devouring Plague");
    WowManager.MiscStructs.Spell Shadowfiend = new WowManager.MiscStructs.Spell("Shadowfiend");
    WowManager.MiscStructs.Spell Mind_Flay = new WowManager.MiscStructs.Spell("Mind Flay");
    WowManager.MiscStructs.Spell Shadowform = new WowManager.MiscStructs.Spell("Shadowform");
    WowManager.MiscStructs.Spell Inner_Fire = new WowManager.MiscStructs.Spell("Inner Fire");
    WowManager.MiscStructs.Spell Power_Word_Fortitude = new WowManager.MiscStructs.Spell("Power Word: Fortitude");
    WowManager.MiscStructs.Spell Vampiric_Embrace = new WowManager.MiscStructs.Spell("Vampiric Embrace");
    WowManager.MiscStructs.Spell Divine_Spirit = new WowManager.MiscStructs.Spell("Divine Spirit");
    WowManager.MiscStructs.Spell Shadow_Protection = new WowManager.MiscStructs.Spell("Shadow Protection");
    WowManager.MiscStructs.Spell Power_Word_Shield = new WowManager.MiscStructs.Spell("Power Word: Shield");
    WowManager.MiscStructs.Spell Lesser_Heal = new WowManager.MiscStructs.Spell("Lesser Heal");
    WowManager.MiscStructs.Spell Flash_Heal = new WowManager.MiscStructs.Spell("Flash Heal");
    WowManager.MiscStructs.Spell Heal = new WowManager.MiscStructs.Spell("Heal");
    WowManager.MiscStructs.Spell Greater_Heal = new WowManager.MiscStructs.Spell("Greater Heal");

    #endregion InitializeSpell

    public Priest()
    {
        Main.range = 23.0f; // Range

        UInt64 lastTarget = 0;
        bool postCombatUsed = true;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }


                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance <= Main.range)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        Buff_Shadowform();
        Buff_PWShield();

        if (Vampiric_Touch.KnownSpell &&
            Vampiric_Touch.IsSpellUsable &&
            Vampiric_Touch.IsDistanceGood)
        {
            Vampiric_Touch.Launch();

        }
        else if (Holy_Fire.KnownSpell &&
            Holy_Fire.IsSpellUsable &&
            Holy_Fire.IsDistanceGood)
        {
            Holy_Fire.Launch();

        }
        else
        {
            if (Smite.KnownSpell &&
     Smite.IsSpellUsable &&
     Smite.IsDistanceGood)
            {
                Smite.Launch();
            }
        }



        if (Mind_Blast.KnownSpell &&
             Mind_Blast.IsSpellUsable)
        {
            Mind_Blast.Launch();
        }
        else
        {
            if (Smite.KnownSpell &&
     Smite.IsSpellUsable &&
     Smite.IsDistanceGood)
            {
                Smite.Launch();
            }
        }


    }

    public void Combat()
    {

        Buff_PWShield();
        Buff_InnerFire();
        Buff_VampiricEmbrace();



        //----------------------------------------------------
        // Shadow Word: Pain
        //----------------------------------------------------

        if (!Shadow_Word_Pain.TargetHaveBuff &&
            Shadow_Word_Pain.KnownSpell &&
            Shadow_Word_Pain.IsSpellUsable &&
            Shadow_Word_Pain.IsDistanceGood)
        {

            Shadow_Word_Pain.Launch();
            Heal_Check();
            System.Threading.Thread.Sleep(1000);

        }

        //----------------------------------------------------
        // Devouring Plague
        //----------------------------------------------------


        if (!Devouring_Plague.TargetHaveBuff &&
            Devouring_Plague.KnownSpell &&
            Devouring_Plague.IsSpellUsable &&
            Devouring_Plague.IsDistanceGood)
        {
            Devouring_Plague.Launch();
            Heal_Check();

        }

        //----------------------------------------------------
        // Shadowfiend
        //----------------------------------------------------

        if (Shadowfiend.KnownSpell &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.HealthPercent > 10 &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage < 40 &&
            Shadowfiend.IsSpellUsable &&
            Shadowfiend.IsDistanceGood)
        {
            Shadowfiend.Launch();
            Heal_Check();
        }

        //----------------------------------------------------
        // Mind Blast / Mind Flay
        //----------------------------------------------------


        if (Mind_Blast.KnownSpell &&
            Mind_Blast.IsSpellUsable &&
            Mind_Blast.IsDistanceGood)
        {
            Mind_Blast.Launch();
        }
        else if (Mind_Flay.KnownSpell &&
                 Mind_Flay.IsSpellUsable &&
                 Mind_Flay.IsDistanceGood)
        {
            Mind_Flay.Launch();
        }

        //----------------------------------------------------
        // Smite
        //----------------------------------------------------

        if (!Mind_Flay.KnownSpell && !Mind_Flay.IsSpellUsable)
        {
            if (Smite.KnownSpell &&
                 Smite.IsSpellUsable &&
                 Smite.IsDistanceGood)
            {
                Smite.Launch();
            }
        }

        Heal_Check();

    }

    public void PostCombat()
    {

    }

    public void Patrolling()
    {

        Buff_Shadowform();
        Buff_InnerFire();
        Buff_PWFortitude();
        Buff_VampiricEmbrace();
        Buff_DivineSpirit();
        Buff_ShadowProtection();

    }


    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////	

    //----------------------------------------------------
    // Shadowform
    //----------------------------------------------------

    private void Buff_Shadowform()
    {
        if (!Shadowform.HaveBuff &&
            Shadowform.KnownSpell &&
            Shadowform.IsSpellUsable)
        {
            Shadowform.Launch();
        }
    }

    //----------------------------------------------------
    // Inner Fire
    //----------------------------------------------------

    private void Buff_InnerFire()
    {
        if (!Inner_Fire.HaveBuff &&
            Inner_Fire.KnownSpell &&
            Inner_Fire.IsSpellUsable)
        {
            Inner_Fire.Launch();
        }
    }

    //----------------------------------------------------
    // Power Word: Fortitude
    //----------------------------------------------------

    private void Buff_PWFortitude()
    {
        if (!Power_Word_Fortitude.HaveBuff &&
            Power_Word_Fortitude.KnownSpell &&
            Power_Word_Fortitude.IsSpellUsable)
        {
            Power_Word_Fortitude.Launch();
        }
    }

    //----------------------------------------------------
    // Vampiric Embrace
    //----------------------------------------------------

    private void Buff_VampiricEmbrace()
    {
        if (!Vampiric_Embrace.HaveBuff &&
            Vampiric_Embrace.KnownSpell &&
            Vampiric_Embrace.IsSpellUsable)
        {
            Vampiric_Embrace.Launch();
        }
    }

    //----------------------------------------------------
    // Divine Spirit
    //----------------------------------------------------

    private void Buff_DivineSpirit()
    {
        if (!Divine_Spirit.HaveBuff &&
            Divine_Spirit.KnownSpell &&
            Divine_Spirit.IsSpellUsable)
        {
            Divine_Spirit.Launch();
        }
    }

    //----------------------------------------------------
    // Shadow Protection
    //----------------------------------------------------

    private void Buff_ShadowProtection()
    {
        if (!Shadow_Protection.HaveBuff &&
            Shadow_Protection.KnownSpell &&
            Shadow_Protection.IsSpellUsable)
        {
            Shadow_Protection.Launch();
        }
    }

    //----------------------------------------------------
    // Power Word: Shield
    //----------------------------------------------------

    private void Buff_PWShield()
    {
        if (!Power_Word_Shield.HaveBuff &&
             Power_Word_Shield.KnownSpell &&
             Power_Word_Shield.IsSpellUsable)
        {
            Power_Word_Shield.Launch();
            System.Threading.Thread.Sleep(1000);
        }
    }

    //----------------------------------------------------
    // Check Heal
    //----------------------------------------------------

    private void Heal_Check()
    {

        if (WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 50 &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent < 70)
        {

            if (Flash_Heal.KnownSpell)
            {
                Flash_Heal.Launch();
            }
            else
            {
                Lesser_Heal.Launch();
            }

            System.Threading.Thread.Sleep(1500);

        }
        else if (WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent > 0 &&
                WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent <= 50)
        {
            if (Greater_Heal.KnownSpell && Greater_Heal.IsSpellUsable)
            {
                Greater_Heal.Launch();
            }
            else if (Heal.KnownSpell && Heal.IsSpellUsable)
            {
                Heal.Launch();
            }
            else if (Lesser_Heal.IsSpellUsable)
            {
                Lesser_Heal.Launch();
            }

            System.Threading.Thread.Sleep(1500);
        }
    }
}

public class Hunter
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Hunter_s_Mark = new WowManager.MiscStructs.Spell("Hunter's Mark");
    WowManager.MiscStructs.Spell Serpent_Sting = new WowManager.MiscStructs.Spell("Serpent Sting");
    WowManager.MiscStructs.Spell Arcane_Shot = new WowManager.MiscStructs.Spell("Arcane Shot");
    WowManager.MiscStructs.Spell Raptor_Strike = new WowManager.MiscStructs.Spell("Raptor Strike");
    WowManager.MiscStructs.Spell Aimed_Shot = new WowManager.MiscStructs.Spell("Aimed Shot");
    WowManager.MiscStructs.Spell Steady_Shot = new WowManager.MiscStructs.Spell("Steady Shot");
    WowManager.MiscStructs.Spell Call_Pet = new WowManager.MiscStructs.Spell("Call Pet");
    WowManager.MiscStructs.Spell Revive_Pet = new WowManager.MiscStructs.Spell("Revive Pet");
    WowManager.MiscStructs.Spell Aspect_of_the_Viper = new WowManager.MiscStructs.Spell("Aspect of the Viper");
    WowManager.MiscStructs.Spell Aspect_of_the_Hawk = new WowManager.MiscStructs.Spell("Aspect of the Hawk");
    WowManager.MiscStructs.Spell Mend_Pet = new WowManager.MiscStructs.Spell("Mend Pet");

    #endregion InitializeSpell

    public Hunter()
    {
        Main.range = 23.0f; // Range

        UInt64 lastTarget = 0;
        bool postCombatUsed = true;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }


                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance <= Main.range)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        //----------------------------------------------------
        // Summon Pet
        //----------------------------------------------------

        SummonPet();

        //----------------------------------------------------
        // Pet Pet Defensive
        //----------------------------------------------------

        if (WowManager.WoW.ObjectManager.ObjectManager.Pet.IsAlive)
        {
            WowManager.WoW.Interface.Lua.LuaDoString("PetDefensiveMode();");
        }

        //----------------------------------------------------
        // Pet Attack
        //----------------------------------------------------

        if (WowManager.WoW.ObjectManager.ObjectManager.Pet.IsAlive)
        {
            WowManager.WoW.Interface.Lua.RunMacroText("/petattack");
            WowManager.Log.AddLog("Launch Pet Attack");
        }

        //----------------------------------------------------
        // Hunter's Mark
        //----------------------------------------------------

        if (!Hunter_s_Mark.HaveBuff &&
            Hunter_s_Mark.KnownSpell)
        {
            Hunter_s_Mark.Launch();
        }

        //----------------------------------------------------
        // Serpent Sting
        //----------------------------------------------------

        if (!WowManager.WoW.ObjectManager.ObjectManager.Target.HaveBuff(Serpent_Sting.Id) &&
            Serpent_Sting.KnownSpell &&
            Serpent_Sting.IsSpellUsable &&
            Serpent_Sting.IsDistanceGood)
        {
            Serpent_Sting.Launch();
        }

        //----------------------------------------------------
        // Arcane Shot
        //----------------------------------------------------

        if (Arcane_Shot.KnownSpell &&
            Arcane_Shot.IsSpellUsable &&
            Arcane_Shot.IsDistanceGood)
        {
            Arcane_Shot.Launch();
        }
    }

    public void Combat()
    {
        HealPet();
        AvoidMelee();

        //----------------------------------------------------
        // Arcane Shot
        //----------------------------------------------------

        if (Arcane_Shot.KnownSpell &&
            Arcane_Shot.IsSpellUsable &&
            Arcane_Shot.IsDistanceGood)
        {
            Arcane_Shot.Launch();
            HealPet();
            AvoidMelee();
        }

        //----------------------------------------------------
        // Raptor Strike
        //----------------------------------------------------

        if (Raptor_Strike.KnownSpell &&
            Raptor_Strike.IsSpellUsable &&
            Raptor_Strike.IsDistanceGood)
        {
            Raptor_Strike.Launch();
            HealPet();
            AvoidMelee();
        }

        //----------------------------------------------------
        // Aimed Shot
        //----------------------------------------------------

        if (Aimed_Shot.KnownSpell &&
            Aimed_Shot.IsSpellUsable &&
            Aimed_Shot.IsDistanceGood)
        {
            Aimed_Shot.Launch();
            HealPet();
            AvoidMelee();
        }

        //----------------------------------------------------
        // Steady Shot
        //----------------------------------------------------

        if (Steady_Shot.KnownSpell &&
           Steady_Shot.IsSpellUsable &&
            Steady_Shot.IsDistanceGood)
        {
            Steady_Shot.Launch();
            HealPet();
            AvoidMelee();
        }

    }

    public void PostCombat()
    {

    }

    public void Patrolling()
    {

        if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
        {

            //----------------------------------------------------
            // Summon Pet
            //----------------------------------------------------

            SummonPet();

            //----------------------------------------------------
            // Check Aura
            //----------------------------------------------------

            CheckAura();

        }

    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////	

    private void SummonPet()
    {

        if (Call_Pet.KnownSpell &&
            Revive_Pet.KnownSpell)
        {

            if (!WowManager.WoW.ObjectManager.ObjectManager.Pet.IsAlive ||
                WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid == 0)
            {
                Call_Pet.Launch();
                System.Threading.Thread.Sleep(1000);

                if (!WowManager.WoW.ObjectManager.ObjectManager.Pet.IsAlive)
                {
                    Revive_Pet.Launch();
                    System.Threading.Thread.Sleep(1000);
                }

            }

        }

    }

    private void CheckAura()
    {

        if (Aspect_of_the_Viper.KnownSpell &&
            Aspect_of_the_Hawk.KnownSpell)
        {

            if (WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage >= 80 && !Aspect_of_the_Hawk.HaveBuff)
            {
                Aspect_of_the_Hawk.Launch();
            }
            else if (WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage <= 25 && !Aspect_of_the_Viper.HaveBuff)
            {
                Aspect_of_the_Viper.Launch();
            }
            else if (!Aspect_of_the_Viper.HaveBuff &&
                    !Aspect_of_the_Hawk.HaveBuff)
            {
                Aspect_of_the_Hawk.Launch();
            }

        }

    }

    private Int32 LastHealTick = 0;
    private void HealPet()
    {

        if (WowManager.WoW.ObjectManager.ObjectManager.Pet.Health > 0 &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.HealthPercent < 50 &&
            (Environment.TickCount - LastHealTick) > (15 * 1000))
        {
            LastHealTick = Environment.TickCount;
            Mend_Pet.Launch();
        }

    }

    private void AvoidMelee()
    {
        if (WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance < 5 &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.IsAlive &&
            WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid != 0 &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.Target == WowManager.WoW.ObjectManager.ObjectManager.Pet.Guid)
        {
            WowManager.Hardware.Keyboard.DownKey("{DOWN}");
            System.Threading.Thread.Sleep(1500);
            WowManager.Hardware.Keyboard.UpKey("{DOWN}");
        }
    }

}

public class Rogue
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Stealth = new WowManager.MiscStructs.Spell("Stealth");
    WowManager.MiscStructs.Spell Premeditation = new WowManager.MiscStructs.Spell("Premeditation");
    WowManager.MiscStructs.Spell Shadowstep = new WowManager.MiscStructs.Spell("Shadowstep");
    WowManager.MiscStructs.Spell Pick_Pocket = new WowManager.MiscStructs.Spell("Pick Pocket");
    WowManager.MiscStructs.Spell Cheap_Shot = new WowManager.MiscStructs.Spell("Cheap Shot");
    WowManager.MiscStructs.Spell Sinister_Strike = new WowManager.MiscStructs.Spell("Sinister Strike");
    WowManager.MiscStructs.Spell Eviscerate = new WowManager.MiscStructs.Spell("Eviscerate");
    WowManager.MiscStructs.Spell Evasion = new WowManager.MiscStructs.Spell("Evasion");
    WowManager.MiscStructs.Spell Blade_Flurry = new WowManager.MiscStructs.Spell("Blade Flurry");
    WowManager.MiscStructs.Spell Adrenaline_Rush = new WowManager.MiscStructs.Spell("Adrenaline Rush");

    #endregion InitializeSpell

    public Rogue()
    {
        Main.range = 3.6f; // Range

        UInt64 lastTarget = 0;
        bool postCombatUsed = true;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }


                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && Premeditation.IsDistanceGood)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        if (Stealth.KnownSpell &&
            !Stealth.HaveBuff)
        {
            if (WowManager.WoW.ObjectManager.ObjectManager.Target.Target != WowManager.WoW.ObjectManager.ObjectManager.Me.Guid &&
                Stealth.IsSpellUsable)
            {
                // RANGE 18
                Stealth.Launch();

                if (Premeditation.KnownSpell &&
                    Premeditation.IsSpellUsable &&
                    Premeditation.IsDistanceGood)
                {
                    Premeditation.Launch();
                }

                if (Shadowstep.KnownSpell &&
                    Shadowstep.IsSpellUsable &&
                    Shadowstep.IsDistanceGood)
                {
                    Shadowstep.Launch();
                }

                //RANGE 3

                if (Pick_Pocket.KnownSpell &&
                    Pick_Pocket.IsSpellUsable &&
                    WowManager.WoW.ObjectManager.ObjectManager.Target.Target == 0 &&
                    WowManager.WoW.ObjectManager.ObjectManager.Target.CreatureTypeTarget == "Humanoid")
                {
                    // RANGE 2
                    Pick_Pocket.Launch();
                }

                if (Cheap_Shot.KnownSpell &&
                    Cheap_Shot.IsSpellUsable &&
                    Cheap_Shot.IsDistanceGood)
                {
                    Cheap_Shot.Launch();
                }
                else
                {
                    Sinister_Strike.Launch();
                }


            }
        }
    }

    public void Combat()
    {
        if (Sinister_Strike.KnownSpell && Sinister_Strike.IsSpellUsable && Sinister_Strike.IsDistanceGood)
            Sinister_Strike.Launch();

        if (WowManager.WoW.ObjectManager.ObjectManager.Target.HealthPercent < 50 &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.ComboPoint >= 3 &&
            Eviscerate.IsSpellUsable &&
            Eviscerate.IsDistanceGood)
            Eviscerate.Launch();

        if (Evasion.KnownSpell &&
            Evasion.IsSpellUsable &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent < 60)
            Evasion.Launch();

        if (Blade_Flurry.KnownSpell &&
            Blade_Flurry.IsSpellUsable &&
            WowManager.WoW.ObjectManager.ObjectManager.Target.HealthPercent > 50)
            Blade_Flurry.Launch();

        if (Adrenaline_Rush.KnownSpell &&
            Adrenaline_Rush.IsSpellUsable &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.BarTwoPercentage < 50)
            Adrenaline_Rush.Launch();
    }

    public void PostCombat()
    {

    }

    public void Patrolling()
    {

    }
}

public class DruidBalance
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Stealth = new WowManager.MiscStructs.Spell("Stealth");

    WowManager.MiscStructs.Spell Starfire = new WowManager.MiscStructs.Spell("Starfire");
    WowManager.MiscStructs.Spell Wrath = new WowManager.MiscStructs.Spell("Wrath");
    WowManager.MiscStructs.Spell Entangling_Roots = new WowManager.MiscStructs.Spell("Entangling Roots");
    WowManager.MiscStructs.Spell Moonfire = new WowManager.MiscStructs.Spell("Moonfire");
    WowManager.MiscStructs.Spell Faerie_Fire = new WowManager.MiscStructs.Spell("Faerie Fire");
    WowManager.MiscStructs.Spell Insect_Swarm = new WowManager.MiscStructs.Spell("Insect Swarm");
    WowManager.MiscStructs.Spell Mark_of_the_Wild = new WowManager.MiscStructs.Spell("Mark of the Wild");
    WowManager.MiscStructs.Spell Thorns = new WowManager.MiscStructs.Spell("Thorns");
    WowManager.MiscStructs.Spell Healing_Touch = new WowManager.MiscStructs.Spell("Healing Touch");

    #endregion InitializeSpell

    public DruidBalance()
    {
        Main.range = 26.0f; // Range

        UInt64 lastTarget = 0;
        bool postCombatUsed = true;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }


                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance <= Main.range)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        Buff_MarkoftheWild();
        Buff_Thorns();

        if (Starfire.KnownSpell &&
            Starfire.IsSpellUsable &&
            Starfire.IsDistanceGood)
        {
            Starfire.Launch();
        }
        else if (Wrath.KnownSpell &&
            Wrath.IsSpellUsable &&
            Wrath.IsDistanceGood)
        {
            Wrath.Launch();
        }

        if (Entangling_Roots.KnownSpell &&
            Entangling_Roots.IsSpellUsable &&
            Entangling_Roots.IsDistanceGood)
        {
            Entangling_Roots.Launch();
        }

        if (Moonfire.KnownSpell &&
            Moonfire.IsSpellUsable &&
            Moonfire.IsDistanceGood)
        {
            Moonfire.Launch();
        }

    }

    public void Combat()
    {

        //----------------------------------------------------
        // Faerie Fire
        //----------------------------------------------------

        if (Faerie_Fire.IsSpellUsable &&
            Faerie_Fire.KnownSpell &&
            Faerie_Fire.IsDistanceGood &&
            !WowManager.WoW.ObjectManager.ObjectManager.Target.HaveBuff(Faerie_Fire.Id))
        {
            Faerie_Fire.Launch();
            CheckHeal();
        }

        //----------------------------------------------------
        // Insect Swarm
        //----------------------------------------------------

        if (Insect_Swarm.IsSpellUsable &&
            Insect_Swarm.KnownSpell &&
            Insect_Swarm.IsDistanceGood &&
            !WowManager.WoW.ObjectManager.ObjectManager.Target.HaveBuff(Insect_Swarm.Id))
        {
            Insect_Swarm.Launch();
            CheckHeal();
        }

        //----------------------------------------------------
        // Wrath
        //----------------------------------------------------

        if (Wrath.KnownSpell &&
            Wrath.IsSpellUsable &&
            Wrath.IsDistanceGood)
        {
            Wrath.Launch();
            CheckHeal();
        }
    }

    public void PostCombat()
    {

    }

    public void Patrolling()
    {

        Buff_MarkoftheWild();
        Buff_Thorns();

    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////	

    //----------------------------------------------------
    // Mark of the Wild
    //----------------------------------------------------

    private void Buff_MarkoftheWild()
    {

        if (!Mark_of_the_Wild.HaveBuff &&
            Mark_of_the_Wild.KnownSpell &&
            Mark_of_the_Wild.IsSpellUsable)
        {
            Mark_of_the_Wild.Launch();
        }

    }

    //----------------------------------------------------
    // Thorns
    //----------------------------------------------------

    private void Buff_Thorns()
    {

        if (!Thorns.HaveBuff &&
            Thorns.KnownSpell &&
            Thorns.IsSpellUsable)
        {
            Thorns.Launch();
        }

    }

    //----------------------------------------------------
    // Check Heal
    //----------------------------------------------------

    private void CheckHeal()
    {

        if (Healing_Touch.KnownSpell &&
            Healing_Touch.IsSpellUsable &&
            WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent <= 50)
        {
            Healing_Touch.Launch();
            System.Threading.Thread.Sleep(1000);
        }
    }
}

public class DruidDeral
{
    #region InitializeSpell

    WowManager.MiscStructs.Spell Faerie_Fire_Feral = new WowManager.MiscStructs.Spell("Faerie Fire (Feral)");
    WowManager.MiscStructs.Spell Ferocious_Bite = new WowManager.MiscStructs.Spell("Ferocious Bite");
    WowManager.MiscStructs.Spell Rip = new WowManager.MiscStructs.Spell("Rip");
    WowManager.MiscStructs.Spell ClawBashMaul = new WowManager.MiscStructs.Spell("ClawBashMaul");
    WowManager.MiscStructs.Spell Mark_of_the_Wild = new WowManager.MiscStructs.Spell("Mark of the Wild");
    WowManager.MiscStructs.Spell Thorns = new WowManager.MiscStructs.Spell("Thorns");
    WowManager.MiscStructs.Spell Healing_Touch = new WowManager.MiscStructs.Spell("Healing Touch");
    WowManager.MiscStructs.Spell Cat_Form = new WowManager.MiscStructs.Spell("Cat Form");
    WowManager.MiscStructs.Spell Bear_Form = new WowManager.MiscStructs.Spell("Bear Form");
    WowManager.MiscStructs.Spell Dire_Bear_Form = new WowManager.MiscStructs.Spell("Dire Bear Form");
    WowManager.MiscStructs.Spell Maul = new WowManager.MiscStructs.Spell("Maul");
    WowManager.MiscStructs.Spell Bash = new WowManager.MiscStructs.Spell("Bash");
    WowManager.MiscStructs.Spell Claw = new WowManager.MiscStructs.Spell("Claw");

    #endregion InitializeSpell

    public DruidDeral()
    {
        Main.range = 3.6f; // Range

        UInt64 lastTarget = 0;
        bool postCombatUsed = true;

        while (Main.loop)
        {
            if (!WowManager.WoW.ObjectManager.ObjectManager.Me.IsMount)
            {
                Patrolling();

                if (!WowManager.WoW.PlayerManager.Fight.InFight && !postCombatUsed)
                {
                    postCombatUsed = true;
                    PostCombat();
                }


                if (WowManager.WoW.PlayerManager.Fight.InFight && WowManager.WoW.ObjectManager.ObjectManager.Me.Target > 0)
                {
                    if (WowManager.WoW.ObjectManager.ObjectManager.Me.Target != lastTarget && WowManager.WoW.ObjectManager.ObjectManager.Target.GetDistance <= Main.range)
                    {
                        Pull();
                        lastTarget = WowManager.WoW.ObjectManager.ObjectManager.Me.Target;
                    }

                    Combat();
                    postCombatUsed = false;
                }
            }
            Thread.Sleep(20);
        }
    }

    public void Pull()
    {

        Buff_MarkoftheWild();
        Buff_Thorns();

        //----------------------------------------------------
        // Check Changeform
        //----------------------------------------------------

        if (GuessForm() == String.Empty)
        {
            System.Windows.Forms.MessageBox.Show("Custum Class > NO VALID FORM DETECTED !");
            Main.loop = false;
        }

        CheckForm();

        //----------------------------------------------------
        // Faerie Fire (Feral)
        //----------------------------------------------------

        if (Faerie_Fire_Feral.KnownSpell &&
            Faerie_Fire_Feral.IsSpellUsable &&
            Faerie_Fire_Feral.IsDistanceGood &&
            !WowManager.WoW.ObjectManager.ObjectManager.Target.HaveBuff(Faerie_Fire_Feral.Id))
        {
            Faerie_Fire_Feral.Launch();
        }

    }

    public void Combat()
    {

        CheckForm();

        //----------------------------------------------------
        // Faerie Fire (Feral)
        //----------------------------------------------------

        if (Faerie_Fire_Feral.KnownSpell &&
    Faerie_Fire_Feral.IsSpellUsable &&
    Faerie_Fire_Feral.IsDistanceGood &&
    !WowManager.WoW.ObjectManager.ObjectManager.Target.HaveBuff(Faerie_Fire_Feral.Id))
        {
            Faerie_Fire_Feral.Launch();
            CheckHeal();
        }

        //----------------------------------------------------
        // Bear Rotation
        //----------------------------------------------------

        if (GuessForm() == "bear")
        {

            if (Maul.KnownSpell &&
                Maul.IsSpellUsable &&
                Maul.IsDistanceGood)
            {
                CheckForm();
                Maul.Launch();
                CheckHeal();
            }

            if (Bash.KnownSpell &&
                Bash.IsSpellUsable &&
                Bash.IsDistanceGood)
            {
                CheckForm();
                Bash.Launch();
                CheckHeal();
            }

        }

        //----------------------------------------------------
        // Cat Rotation
        //----------------------------------------------------

        if (GuessForm() == "cat")
        {

            if (WowManager.WoW.ObjectManager.ObjectManager.Me.ComboPoint < 3)
            {

                if (Claw.KnownSpell &&
                    Claw.IsSpellUsable &&
                    Claw.IsDistanceGood)
                {
                    CheckForm();
                    Claw.Launch();
                    CheckHeal();
                }

            }
            else if (WowManager.WoW.ObjectManager.ObjectManager.Me.ComboPoint >= 3)
            {

                if (Rip.KnownSpell &&
                    !Ferocious_Bite.KnownSpell &&
                    Rip.IsSpellUsable &&
                    Rip.IsDistanceGood)
                {
                    CheckForm();
                    Rip.Launch();
                    CheckHeal();
                }

                if (Ferocious_Bite.KnownSpell &&
                    Ferocious_Bite.IsSpellUsable &&
                    Ferocious_Bite.IsDistanceGood)
                {
                    CheckForm();
                    Ferocious_Bite.Launch();
                    CheckHeal();
                }

            }

        }

    }

    public void PostCombat()
    {

    }

    public void Patrolling()
    {

        Buff_MarkoftheWild();
        Buff_Thorns();
        CheckForm();

    }

    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////
    ///////////					Private Function				  //////////
    ////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////	

    //----------------------------------------------------
    // Mark of the Wild
    //----------------------------------------------------

    private void Buff_MarkoftheWild()
    {

        if (!Mark_of_the_Wild.HaveBuff &&
            Mark_of_the_Wild.KnownSpell &&
            Mark_of_the_Wild.IsSpellUsable)
        {
            Mark_of_the_Wild.Launch();
        }

    }

    //----------------------------------------------------
    // Thorns
    //----------------------------------------------------

    private void Buff_Thorns()
    {
        if (!Thorns.HaveBuff &&
            Thorns.KnownSpell &&
            Thorns.IsSpellUsable)
        {
            Thorns.Launch();
        }
    }

    //----------------------------------------------------
    // Check Heal
    //----------------------------------------------------

    private void CheckHeal()
    {

        if (Healing_Touch.KnownSpell &&
            Healing_Touch.IsSpellUsable &&
           WowManager.WoW.ObjectManager.ObjectManager.Me.HealthPercent <= 50)
        {
            Healing_Touch.Launch();
            System.Threading.Thread.Sleep(1000);
        }

    }

    //----------------------------------------------------
    // Guess changeform
    //----------------------------------------------------

    private String GuessForm()
    {

        if (Cat_Form.KnownSpell)
        {
            return "cat";
        }
        else if (Bear_Form.KnownSpell || Dire_Bear_Form.KnownSpell)
        {
            return "bear";
        }

        return String.Empty;

    }

    //----------------------------------------------------
    // Check changeform
    //----------------------------------------------------

    private void CheckForm()
    {

        if (Cat_Form.KnownSpell)
        {
            if (!Cat_Form.HaveBuff)
            {
                Cat_Form.Launch();
            }
        }
        else if (Bear_Form.KnownSpell || Dire_Bear_Form.KnownSpell)
        {

            if (!Bear_Form.HaveBuff &&
                Dire_Bear_Form.KnownSpell)
            {
                Dire_Bear_Form.Launch();
            }
            else if (!Bear_Form.HaveBuff &&
                Bear_Form.KnownSpell)
            {
                Bear_Form.Launch();
            }

        }

    }

}

#endregion CustomClass
