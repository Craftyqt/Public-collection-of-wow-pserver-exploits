<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Styx</name>
    </assembly>
    <members>
        <member name="P:Styx.BotBase.IsPrimaryType">
            <summary>Gets a value indicating whether this object is primary bot type. These will be used by default in mixed-mode.</summary>
            <value>true if this object is primary type, false if not.</value>
        </member>
        <member name="P:Styx.BotBase.RequirementsMet">
            <summary>Gets a value indicating whether the requirements met for this bot to be run. Secondary type bots MUST implement this
            		 member, for the bot to be used when needed.</summary>
            <value>true if requirements met, false if not.</value>
        </member>
        <member name="T:Styx.Combat.CombatRoutine.IBehaviors">
            <summary>Behaviors interface, internal usage only.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.RestBehavior">
            <summary>
            Behavior used when resting
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.PreCombatBuffBehavior">
            <summary>
            Behavior used for buffing, regular buffs like 'Power Word: Fortitude', 'MotW' etc..
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.PullBuffBehavior">
            <summary>
            Behavior used when buffing prior to pulling
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.PullBehavior">
            <summary>
            Behavior used when engaging mobs in combat
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.CombatBuffBehavior">
            <summary>
            Behavior used for combat buffs. eg; 'Horn of Winter', 'Power Infusion' etc..
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.CombatBehavior">
            <summary>
            Behavior used in combat
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.HealBehavior">
            <summary>
            Behavior used when healing
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.IBehaviors.MoveToTargetBehavior">
            <summary>
            Behavior used for moving to targets
            </summary>
        </member>
        <member name="T:Styx.Combat.CombatRoutine.ICombatRoutine">
            <summary>Internal usage only.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.Rest">
            <summary>Rest actions</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.PreCombatBuff">
            <summary>PreCombatBuff actions</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.PullBuff">
            <summary>Pull Buff actions.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.Pull">
            <summary>Pull actions</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.CombatBuff">
            <summary>Combat buff actions.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.Combat">
            <summary>Combat actions.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.Heal">
            <summary>Heal actions</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.Initialize">
            <summary>Called when this CC is selected as the current CC.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.OnButtonPress">
            <summary>Called when the button for this CC is pressed.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.Pulse">
            <summary>Called in every pulse of the bot. This way you can maintain stuff per-pulse like a plugin.</summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.ICombatRoutine.ShutDown">
            <summary>Called when the CC is being disposed.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.Name">
            <summary>The name of this CombatRoutine</summary>
            <value>The name.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.Class">
            <summary>The <see cref="T:Styx.Combat.CombatRoutine.WoWClass"/> to be used with this routine</summary>
             <value>The class.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.PullDistance">
            <summary>Pulldistance.</summary>
            <value>The pulldistance.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.NeedRest">
            <summary>Property indicating if you need to rest.</summary>
            <value><c>true</c> if rest is needed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.NeedPreCombatBuffs">
            <summary>Property indicating if you need PreCombatBuffs</summary>
             <value><c>true</c> if rest is needed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.NeedPullBuffs">
            <summary>Property indicating if you need Pull Buffs</summary>
            <value><c>true</c> if pull buffs is needed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.NeedCombatBuffs">
            <summary>Property indicating if you need combat buffs.</summary>
            <value><c>true</c> if combat buffs is needed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.NeedHeal">
            <summary>Property indicating if you to heal.</summary>
            <value><c>true</c> if heal is needed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.WantButton">
            <summary>Whether this CC want the button on the form to be enabled.</summary>
            <value><c>true</c> if configuration button is wanted, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.ICombatRoutine.ButtonText">
            <summary>The text to appear on the button in the form.</summary>
            <value>The text.</value>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.CombatRoutine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.CombatRoutine.Initialize">
            <summary>
            Called when this CC is selected as the current CC.
            </summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.CombatRoutine.OnButtonPress">
            <summary>
            Called when the button for this CC is pressed.
            </summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.CombatRoutine.Pulse">
            <summary>
            Called in every pulse of the bot. This way you can maintain stuff per-pulse like a plugin.
            </summary>
        </member>
        <member name="M:Styx.Combat.CombatRoutine.CombatRoutine.ShutDown">
            <summary>
            Called when this routine is disposed.
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.WantButton">
            <summary>
            Whether this CC want the button on the form to be enabled.
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.ButtonText">
            <summary>
            The text to appear on the button in the form. [Default: "CC Configuration"]
            </summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.RestBehavior">
            <summary>Behavior used when resting.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.PreCombatBuffBehavior">
            <summary>Behavior used for buffing, regular buffs like 'Power Word: Fortitude', 'MotW' etc..</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.PullBuffBehavior">
            <summary>Behavior used when buffing prior to pulling.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.PullBehavior">
            <summary>Behavior used when engaging mobs in combat.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.CombatBuffBehavior">
            <summary>Behavior used for combat buffs. eg; 'Horn of Winter', 'Power Infusion' etc..</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.CombatBehavior">
            <summary>Behavior used in combat.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.HealBehavior">
            <summary>Behavior used when healing.</summary>
        </member>
        <member name="P:Styx.Combat.CombatRoutine.CombatRoutine.MoveToTargetBehavior">
            <summary>Behavior used for moving to targets.</summary>
        </member>
        <member name="T:Styx.Guard">
            <summary>Guard. </summary>
            <remarks>Created 9/20/2010.</remarks>
        </member>
        <member name="M:Styx.Guard.AgainstInvalidExecutor">
            <summary>Against invalid executor. </summary>
            <remarks>Created 9/20/2010.</remarks>
            <exception cref="T:Styx.InvalidExecutorException">Thrown when invalidexecutor.</exception>
        </member>
        <member name="T:Styx.UserException">
            <summary>
            Represents an exception that should be logged to the user.
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.Influenced">
            <summary>
            Applied in SPELL_AURA_MOD_CONFUSE (5)
            Applied in SPELL_AURA_MOD_FEAR (7)
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.PlayerControlled">
            <summary>
            Enables Detailed Collision, Allows swimming
            When set for pets allows the popup menu to be shown (dismiss, rename, etc)
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.Preparation">
            <summary>
            Spells are free, and some have no reagent cost
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.PlusMob">
            <summary>
            Elite
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.Looting">
            <summary>
            Looting animation is shown
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.Pacified">
            <summary>
            Pacifies the target, preventing spells from being cast that have PreventionType == Pacified
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.Combat">
            <summary>
            Unit is in Combat
            </summary>
        </member>
        <member name="F:Styx.UnitFlags.TaxiFlight">
            <summary>
            Unit is currently on a taxi
            </summary>
        </member>
        <member name="F:Styx.UnitFlags2.Flag_0x80">
            <summary>
            Treat as disarmed?
            Treat main and off hand weapons as not being equipped?
            </summary>
        </member>
        <member name="F:Styx.UnitFlags2.Flag_0x400">
            <summary>
            Skip checks on ranged weapon?
            Treat it as not being equipped?
            </summary>
        </member>
        <member name="T:Styx.SheathType">
            <summary>
            Used in UNIT_FIELD_BYTES_2, 1st byte
            </summary>
        </member>
        <member name="T:Styx.PvPState">
            <summary>
            Used in UNIT_FIELD_BYTES_2, 2nd byte
            </summary>
        </member>
        <member name="F:Styx.WoWGameObjectType.FishingBobber">
            <summary>
            Fishing bobber.
            </summary>
        </member>
        <member name="F:Styx.WoWGameObjectState.Active">
            <summary>
            Show in world as used and not reset. (Closed door open)
            </summary>
        </member>
        <member name="F:Styx.WoWGameObjectState.Ready">
            <summary>
            Show in world as read. (Closed door close)
            </summary>
        </member>
        <member name="F:Styx.WoWGameObjectState.ActiveAlternative">
            <summary>
            Show in world as used in alt way and not reset (closed door open by cannon fire)
            </summary>
        </member>
        <member name="F:Styx.GameObjectFlags.InUse">
            <summary>
            0x1
            Disables interaction while animated
            </summary>
        </member>
        <member name="F:Styx.GameObjectFlags.Locked">
            <summary>
            0x2
            Requires a key, spell, event, etc to be opened. 
            Makes "Locked" appear in tooltip
            </summary>
        </member>
        <member name="F:Styx.GameObjectFlags.ConditionalInteraction">
            <summary>
            0x4
            Objects that require a condition to be met before they are usable
            </summary>
        </member>
        <member name="F:Styx.GameObjectFlags.Transport">
            <summary>
            0x8
            any kind of transport? Object can transport (elevator, boat, car)
            </summary>
        </member>
        <member name="F:Styx.GameObjectFlags.DoesNotDespawn">
            <summary>
            0x20
            These objects never de-spawn, but typically just change state in response to an event
            Ex: doors
            </summary>
        </member>
        <member name="F:Styx.GameObjectFlags.Triggered">
            <summary>
            0x40
            Typically, summoned objects. Triggered by spell or other events
            </summary>
        </member>
        <member name="F:Styx.WoWItemAmmoType.Bolts">
            <summary>
            Obsolete
            </summary>
        </member>
        <member name="T:Styx.Plugins.PluginClass.HBPlugin">
            <summary>
            Represents a plugin for HB.
            </summary>
        </member>
        <member name="M:Styx.Plugins.PluginClass.HBPlugin.Pulse">
            <summary>
            Called everytime the engine pulses.
            </summary>
        </member>
        <member name="M:Styx.Plugins.PluginClass.HBPlugin.OnButtonPress">
            <summary>
            Called when the user presses the button while having this plugin selected. The plugin can start a thread, show a form, or just do what the hell it wants.
            </summary>
        </member>
        <member name="M:Styx.Plugins.PluginClass.HBPlugin.Initialize">
            <summary>Initializes this plugin after it has been properly loaded.</summary>
        </member>
        <member name="M:Styx.Plugins.PluginClass.HBPlugin.Dispose">
            <summary>Dispose of this plugin, cleaning up any resources it uses.</summary>
        </member>
        <member name="M:Styx.Plugins.PluginClass.HBPlugin.GetHashCode">
            <summary>
            Gets the hashcode of this plugin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Plugins.PluginClass.HBPlugin.Equals(System.Object)">
            <summary>
            Checks if this plugin equals a specified object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.Plugins.PluginClass.HBPlugin.WantButton">
            <summary>
            Does this plugin want a button? If set to true, the button in the plugin manager will be enabled. [Default: false]
            </summary>
        </member>
        <member name="P:Styx.Plugins.PluginClass.HBPlugin.ButtonText">
            <summary>
            The text of the button if the plugin wants it. [Default: "Settings"]
            </summary>
        </member>
        <member name="P:Styx.Plugins.PluginClass.HBPlugin.Name">
            <summary>
            The name of this plugin.
            </summary>
        </member>
        <member name="P:Styx.Plugins.PluginClass.HBPlugin.Author">
            <summary>
            The author of this plugin.
            </summary>
        </member>
        <member name="P:Styx.Plugins.PluginClass.HBPlugin.Version">
            <summary>
            The version of the plugin.
            </summary>
        </member>
        <member name="T:Styx.Helpers.CommandLine">
            <summary>A simple class to allow easy access to command line arguments.</summary>
            <remarks>Created 7/30/2011.</remarks>
        </member>
        <member name="P:Styx.Helpers.CommandLine.Arguments">
            <summary>A wrapper class for each argument passed to the exe at startup.</summary>
            <value>The arguments.</value>
        </member>
        <member name="T:Styx.Helpers.Arguments">
            <summary>
            Arguments class
            </summary>
        </member>
        <member name="M:Styx.Helpers.Arguments.SplitCommandLine(System.String)">
            <summary>
            Splits the command line. When main(string[] args) is used escaped quotes (ie a path "c:\folder\")
            Will consume all the following command line arguments as the one argument. 
            This function ignores escaped quotes making handling paths much easier.
            </summary>
            <param name="commandLine">The command line.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.Arguments.Add(System.String,System.String)">
            <summary>
            Adds the specified argument.
            </summary>
            <param name="argument">The argument.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Styx.Helpers.Arguments.IsTrue(System.String)">
            <summary>
            Determines whether the specified argument is true.
            </summary>
            <param name="argument">The argument.</param>
            <returns>
                <c>true</c> if the specified argument is true; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Styx.Helpers.Arguments.GetString(System.String)">
            <summary>Returns a single argument value from the command line.</summary>
            <remarks>Created 10/1/2011.</remarks>
            <param name="argument">The argument.</param>
            <returns>.</returns>
        </member>
        <member name="P:Styx.Helpers.Arguments.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Styx.Helpers.Arguments.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Collections.ObjectModel.Collection`1"/> with the specified parameter.
            </summary>
            <value></value>
        </member>
        <member name="T:Styx.Helpers.EnumTypeConverter">
            <summary>
            TypeConverter for enum types which supports the FieldDisplayName-attribute
            </summary>
        </member>
        <member name="M:Styx.Helpers.EnumTypeConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Helpers.EnumTypeConverter"/> class.
            </summary>
            <param name="type">Eine <see cref="T:System.Type"></see>-Klasse, die den Typ der Enumeration darstellt, der diesem Enumerationskonverter zugeordnet werden soll.</param>
        </member>
        <member name="M:Styx.Helpers.EnumTypeConverter.EnsureMappingsAvailable(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Build the mappings between the field values of the enumeration type and the display name for the field
            </summary>
            <param name="enumType">Type of the enum.</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:Styx.Helpers.FieldDisplayNameAttribute">
            <summary>
            Attribute which can be used to provide a good name for a field
            </summary>
        </member>
        <member name="M:Styx.Helpers.FieldDisplayNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Helpers.FieldDisplayNameAttribute"/> class.
            </summary>
            <param name="displayName">the name which should be displayed</param>
        </member>
        <member name="T:Styx.Helpers.InactivityDetector">
            <summary>
            Handles logging out if we are inactive for a certain period of time.
            </summary>
        </member>
        <member name="M:Styx.Helpers.InactivityDetector.ForceLogout(System.Boolean)">
            <summary>
            Forces the bot to logout, or quit the game.
            </summary>
            <param name="useForceQuit"></param>
        </member>
        <member name="P:Styx.Helpers.InactivityDetector.TimeUntilLogout">
            <summary>
            Time remaining until the bot will log out, or quit.
            </summary>
        </member>
        <member name="P:Styx.Helpers.InactivityDetector.LogoutTime">
            <summary>
            The exact time that the bot will log out or quit.
            </summary>
        </member>
        <member name="P:Styx.Helpers.IndexedList`1.Index">
            <summary>
            Sets the index. An exception is not thrown if the index is invalid, but rather Index is updated according to <see cref="P:Styx.Helpers.IndexedList`1.IsCyclic"/>. If <see cref="P:Styx.Helpers.IndexedList`1.IsCyclic"/> is true, index is cycled into a valid range. If it is false, it is clamped into a valid range.
            </summary>
        </member>
        <member name="M:Styx.Helpers.Logging.Write(System.Drawing.Color,System.String)">
            <summary>
            Writes a message to the log.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.Write(System.String)">
            <summary>
            Writes a message to the log.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.Write(System.Drawing.Color,System.String,System.Object[])">
            <summary>
            Writes a message to the log.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="format">The format of the message.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.Write(System.String,System.Object[])">
            <summary>
            Writes a message to the log.
            </summary>
            <param name="format">The format of the message.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteDebug(System.Drawing.Color,System.String)">
            <summary>
            Writes a message to the debug log.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteDebug(System.String)">
            <summary>
            Writes a message to the debug log.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteDebug(System.Drawing.Color,System.String,System.Object[])">
            <summary>
            Writes a message to the debug log.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="format">The format of the message</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteDebug(System.String,System.Object[])">
            <summary>
            Writes a message to the debug log.
            </summary>
            <param name="format">The format of the message.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteNavigator(System.Drawing.Color,System.String)">
            <summary>
            Writes a message to the navigator log.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteNavigator(System.String)">
            <summary>
            Writes a message to the navigator log.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteNavigator(System.Drawing.Color,System.String,System.Object[])">
            <summary>
            Writes a message to the navigator log.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="format">The format of the message</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteNavigator(System.String,System.Object[])">
            <summary>
            Writes a message to the navigator log.
            </summary>
            <param name="format">The format of the message.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteException(System.Drawing.Color,System.Exception)">
            <summary>
            Logs an exception.
            </summary>
            <param name="color">The color of the message.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.WriteException(System.Exception)">
            <summary>
            Logs an exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.FileOnly(System.String)">
            <summary>
            Writes a message that only goes to the log file.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Styx.Helpers.Logging.FileOnly(System.String,System.Object[])">
            <summary>
            Writes a message that only goes to the log file.
            </summary>
            <param name="format">The format of the message.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="F:Styx.Helpers.LogLevel.None">
            <summary>A level to disable all logging entirely.</summary>
        </member>
        <member name="F:Styx.Helpers.LogLevel.Silent">
            <summary>Only logs very seldome statements. Use this for the least spammy option of logging.</summary>
        </member>
        <member name="F:Styx.Helpers.LogLevel.Normal">
            <summary></summary>
        </member>
        <member name="F:Styx.Helpers.LogLevel.Verbose">
            <summary>Slightly more spammy than Normal. Logs some debugging information.</summary>
        </member>
        <member name="F:Styx.Helpers.LogLevel.Diagnostic">
            <summary>Very verbose output. This level logs all debugging information, and is VERY spammy. Only suggested to use while debugging, or requested.</summary>
        </member>
        <member name="M:Styx.Helpers.XmlUtils.GetInt32Attribute(System.Xml.Linq.XElement,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>Gets an integer value from the specified element, using the provided attribute name.</summary>
            <remarks>Created 1/29/2011.</remarks>
            <param name="element">The element.</param>
            <param name="name">The attribute name to get the value from.</param>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="value">[out] The value of the attribute.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="T:Styx.Loaders.AssemblyVerifier">
            <summary>Assembly verifier. </summary>
            <remarks>Created 9/21/2010.</remarks>
        </member>
        <member name="M:Styx.Loaders.AssemblyVerifier.Initialize">
            <summary>Initializes this object. </summary>
            <remarks>Created 9/21/2010.</remarks>
        </member>
        <member name="P:Styx.Loaders.FrameworkVersionDetection.DotNet4Installed">
            <summary>
            Determines whether or not the .NET Framework v4.0 is installed on the current machine.
            If true, then the 4.0 compiler version will be used instead of the 3.5.
            </summary>
        </member>
        <member name="T:Styx.Loaders.CodeCompiler">
            <summary>
            This class handles compiling any code that we need to do dynamically. CCs, plugins, etc.
            </summary>
        </member>
        <member name="M:Styx.Loaders.CodeCompiler.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Styx.Loaders.CodeCompiler"/> class.
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Styx.Loaders.CodeCompiler.CompiledAssembly">
            <summary>
            The final, compiled assembly.
            </summary>
        </member>
        <member name="P:Styx.Loaders.CodeCompiler.SourcePath">
            <summary>
            The path to the source files. This can be a directory, or a single file. See <see cref="P:Styx.Loaders.CodeCompiler.FileStructure"/> for the current type.
            </summary>
        </member>
        <member name="P:Styx.Loaders.CodeCompiler.FileStructure">
            <summary>
            The type of source structure this compiler uses. File, folder, etc.
            </summary>
        </member>
        <member name="P:Styx.Loaders.CodeCompiler.Options">
            <summary>
            Retrieves the current compiler options.
            </summary>
        </member>
        <member name="P:Styx.Loaders.CodeCompiler.CompilerVersion">
            <summary>
            The compiler version. [Default: 3.5]
            </summary>
        </member>
        <member name="P:Styx.Loaders.CodeCompiler.AssemblyName">
            <summary>
            The name of the assembly on disk.
            </summary>
        </member>
        <member name="T:Styx.Loaders.DllLoader`1">
            <summary>A simple class to handle loading only DLLs. If the DLL is not within the valid assemblies list, this class does nothing!</summary>
            <remarks>Created 9/26/2010.</remarks>
        </member>
        <member name="M:Styx.Loaders.DllLoader`1.#ctor(System.String,System.Object[])">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="constructorArgs"></param>
        </member>
        <member name="T:Styx.Loaders.DynamicLoader`1">
            <summary>A simple class to dynamically load classes from a specified path.</summary>
            <remarks>Created 9/26/2010.</remarks>
        </member>
        <member name="M:Styx.Loaders.DynamicLoader`1.#ctor(System.String,System.Boolean,System.Object[])">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="compileSource"></param>
            <param name="constructorArgs"></param>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="P:Styx.Loaders.DynamicLoader`1.Path">
            <summary>Gets or sets the full pathname of the file.</summary>
            <value>The full pathname of the file.</value>
        </member>
        <member name="P:Styx.Loaders.DynamicLoader`1.IsDirectory">
            <summary>Gets or sets a value indicating whether this object is directory.</summary>
            <value>true if this object is directory, false if not.</value>
        </member>
        <member name="P:Styx.Loaders.DynamicLoader`1.CompilerResults">
            <summary>Gets or sets the compiler results.</summary>
            <value>The compiler results.</value>
        </member>
        <member name="F:Styx.Logic.Combat.RoutineSelectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.RoutineSelectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Styx.Logic.Combat.RoutineSelectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Styx.Logic.Combat.WoWPetSpell">
            <summary>Defines a pet "action" spell. (From the action bar. All known pet actions.)</summary>
            <remarks>Created 3/18/2011.</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.WoWPetSpell.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Combat.WoWPetSpell.Spell">
            <summary>Gets the actual spell, if SpellType is "Spell"</summary>
            <value>The spell.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWPetSpell.SpellType">
            <summary>Returns the type of spell this <see cref="T:Styx.Logic.Combat.WoWPetSpell"/> is for.</summary>
            <value>The type of the spell.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWPetSpell.Action">
            <summary>Gets the action type.</summary>
            <value>The action.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWPetSpell.Stance">
            <summary>Gets the stance this spell sets the pet into..</summary>
            <value>The stance.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWPetSpell.Cooldown">
            <summary>Gets a value indicating whether the spell is on cooldown. Only valid if SpellType is "Spell".</summary>
            <value>true if cooldown, false if not.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWPetSpell.ActionBarIndex">
            <summary>Gets the zero-based index of the action bar, where this spell resides.</summary>
            <value>The action bar index.</value>
        </member>
        <member name="M:Styx.Logic.Combat.WoWSpell.GetSpellEffect(System.Int32)">
            <summary>
            Get's a spell effect for this spell 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Combat.WoWSpell.GetSpellInfo">
            <summary>
            Get's a <see cref="T:Styx.Logic.Combat.WoWSpell.SpellInfo"/> object used for caching some values used in this class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Combat.WoWSpell.Cast">
            <summary>
            Casts this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.IsMeleeSpell">
            <summary>Gets a value indicating whether this object is melee spell (can only be cast within melee range).</summary>
            <value>true if this object is melee spell, false if not.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.IsSelfOnlySpell">
            <summary>Gets a value indicating whether this object is self buff spell (can only cast it on yourself).</summary>
            <value>true if this object is self buffer spell, false if not.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.IsValid">
            <summary>
            Returns true if this is a valid spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.BaseLevel">
            <summary>
            Returns the base level of this spell, same as train level
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Level">
            <summary>
            Returns the level of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.ManaCostPercent">
            <summary>
            Returns how many percent power this spell costs
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Id">
            <summary>
            Returns the id of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Category">
            <summary>
            Returns the category id of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.DispelType">
            <summary>
            Returns the DispelType of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Mechanic">
            <summary>
            Returns the Mechanic of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.MaxTargets">
            <summary>
            Returns the number of max targets for this spell, usally only applies to dots. eg; 'Shadow Word: Pain'
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.TargetType">
            <summary>
            Returns type of target this spell can be cast on usally
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.SpellEffect1">
            <summary>
            Returns the #1 effect of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.SpellEffect2">
            <summary>
            Returns the #2 effect of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.SpellEffect3">
            <summary>
            Returns the #3 effect of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.SpellEffects">
            <summary>
            Returns all spell effects of this spell.
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.PowerType">
            <summary>
            Returns the powertype of this spell. eg; 'Mana', 'Energy', 'Focus' etc...
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.InternalInfo">
            <summary>
            Returns the internal cached dbc info used for this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.PowerCost">
            <summary>
            Returns the powercost of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.IsFunnel">
            <summary>
            Returns if this is a funnel spell. eg; 'Drain Life'
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.IsChanneled">
            <summary>
            Returns if this is a channeled spell. eg; 'Mind Flay'
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.CastTime">
            <summary>
            Returns the casttime of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.MinRange">
            <summary>
            Returns the minrange of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.MaxRange">
            <summary>
            Returns the maxrange of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.MaxStackCount">
            <summary>
            Returns the maxstackcount of this item
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Name">
            <summary>
            Returns the english name of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Rank">
            <summary>
            Returns the rank of this spell, this string is localized
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Tooltip">
            <summary>
            Returns the tooltip of this spell, this string is localized
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Description">
            <summary>
            Returns the description of this spell, this string is localized
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.Cooldown">
            <summary>
            Returns true if this spell is on cooldown
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.CooldownTimeLeft">
            <summary>Gets the cooldown time left.</summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.BaseCooldown">
            <summary>
            Returns the base cooldown ammount 
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.HasRange">
            <summary>
            Returns true if this is a ranged spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.BaseDuration">
            <summary>
            Returns the base duration of this spell or it's effect, eg; the duration of dots, buffs etc...
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.DurationPerLevel">
            <summary>
            Returns the duration per level multiplier if any otherwise 0
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.MaxDuration">
            <summary>
            Rerturn the maxduration of this spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.School">
            <summary>
            Returns the <see cref="T:Styx.Logic.Combat.WoWSpellSchool"/> of this item. eg; 'Shadow', 'Holy' etc...
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.CanCast">
            <summary>
            Returns true if this is a usable spell
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWSpell.RangeDescription">
            <summary>
            Returns the range description of this spell. eg; 'Medium Range'
            </summary>
        </member>
        <member name="T:Styx.Logic.FlightPathReason">
            <summary>
            Values that represent FlightPathReason.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
        </member>
        <member name="F:Styx.Logic.FlightPathReason.None">
            <summary>
              No reason...
            </summary>
        </member>
        <member name="F:Styx.Logic.FlightPathReason.Learn">
            <summary>
              Request to learn the new flight path
            </summary>
        </member>
        <member name="F:Styx.Logic.FlightPathReason.Use">
            <summary>
              Request to use the flight path
            </summary>
        </member>
        <member name="F:Styx.Logic.FlightPathReason.Update">
            <summary>
              Request to update information about the flight path
            </summary>
        </member>
        <member name="T:Styx.Logic.FlightPaths">
            <summary>
            Flight paths.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
        </member>
        <member name="M:Styx.Logic.FlightPaths.GetFlightPathTime(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Returns the time required to take a flight path
            </summary>
            <param name="from">
            The starting flight path location
            </param>
            <param name="to">
            The ending flight path location
            </param>
            <returns>
            The time from one flight path to another
            </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.GetFullTravelTime(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary> Gets a <see cref="T:System.TimeSpan"/> showing the amount of time required to travel from start, to end </summary>
            <param name="start"> The start location. </param>
            <param name="end"> The end location. </param>
            <param name="flightPathStart"> The flight path start. </param>
            <param name="flightPathEnd"> The flight path end. </param>
            <param name="travelSpeed"> The travel speed. </param>
            <returns> The time required to travel </returns>
            <exception cref="T:System.InvalidOperationException"> Thrown when the requested operation is invalid. </exception>
        </member>
        <member name="M:Styx.Logic.FlightPaths.GetRunPathTime(Styx.Logic.Pathing.WoWPoint[],System.Single)">
            <summary> Returns the amount of time required to travel along a path, by foot. </summary>
            <param name="path"> The path to travel on. </param>
            <param name="travelSpeed"> The travel speed. </param>
            <returns> The time required. </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.Initialize">
            <summary>
            Initializes the flightpaths system.
            </summary>
        </member>
        <member name="M:Styx.Logic.FlightPaths.NeedNearbyUpdate">
            <summary>
            Returns whether there's a nearby FlightMaster that we need updated information for.
            </summary>
            <returns>
            true for yes, false for no. Fuck off stylecop!
            </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.ShouldTakeFlightpath(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            Returns whether we should take a flight path, given the start, and end of a path
            </summary>
            <param name="start">
            The start location.
            </param>
            <param name="end">
            The end location.
            </param>
            <param name="travelSpeed">
            The travel speed.
            </param>
            <returns>
            true if we should take a FP, false if not
            </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.GetNode(System.String)">
            <summary>
            Gets a node.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="name">
            The name of the node.
            </param>
            <returns>
            The node .
            </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.GetNodeFromMaster(System.UInt32,System.Int32)">
            <summary>
            Gets a node from master.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="masterEntry">
            The master entry.
            </param>
            <returns>
            The node from master.
            </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.GetPathDistance(Styx.Logic.Pathing.WoWPoint[])">
            <summary>
            Gets a path distance.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="path">
            The path to travel on.
            </param>
            <returns>
            The path distance.
            </returns>
        </member>
        <member name="M:Styx.Logic.FlightPaths.HandleTaximapOpened(System.Object,Styx.WoWInternals.LuaEventArgs)">
            <summary>
            Handle taximap opened.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="sender">
            Source of the event.
            </param>
            <param name="args">
            Lua event information.
            </param>
        </member>
        <member name="P:Styx.Logic.FlightPaths.NearestFlightMerchant">
            <summary>Gets the nearest flight merchant.</summary>
            <value>The nearest flight merchant.</value>
        </member>
        <member name="P:Styx.Logic.FlightPaths.NeedFlightPath">
            <summary>
              Gets or sets a value indicating whether the need flight path.
            </summary>
            <value>true if need flight path, false if not.</value>
        </member>
        <member name="P:Styx.Logic.FlightPaths.Reason">
            <summary>
              Gets or sets the reason.
            </summary>
            <value>The reason.</value>
        </member>
        <member name="P:Styx.Logic.FlightPaths.XmlNodes">
            <summary>
              Gets or sets the xml nodes.
            </summary>
            <value>The xml nodes.</value>
        </member>
        <member name="P:Styx.Logic.FlightPaths.XmlPath">
            <summary>
              Gets the full pathname of the xml file.
            </summary>
            <value>The full pathname of the xml file.</value>
        </member>
        <member name="T:Styx.Logic.XmlFlightNode">
            <summary>
            Xml flight node.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
        </member>
        <member name="M:Styx.Logic.XmlFlightNode.#ctor(System.String,System.UInt32,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Logic.XmlFlightNode"/> class. Constructor.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="name">
            The name of the node, from the taxi frame.
            </param>
            <param name="continent">
            The continent id of the node.
            </param>
            <param name="location">The location of the node</param>
        </member>
        <member name="M:Styx.Logic.XmlFlightNode.#ctor(System.UInt32,System.Int32,System.String,System.UInt32,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Logic.XmlFlightNode"/> class. Constructor.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="masterEntry">
            The flight master's object entry.
            </param>
            <param name="name">
            The name of the node, from the taxi frame.
            </param>
            <param name="continent">
            The continent od of the node.
            </param>
            <param name="location"></param>
        </member>
        <member name="M:Styx.Logic.XmlFlightNode.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Logic.XmlFlightNode"/> class. Constructor.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="xml">
            The xml element to use, to initialize this entry.
            </param>
        </member>
        <member name="M:Styx.Logic.XmlFlightNode.Connect(System.String)">
            <summary>
            Connects this node, to another.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <param name="to">
            The string to connect.
            </param>
        </member>
        <member name="M:Styx.Logic.XmlFlightNode.ToXml">
            <summary>
            Converts this object to an xml.
            </summary>
            <remarks>
            Created 12/11/2010.
            </remarks>
            <returns>
            This object as an XElement.
            </returns>
        </member>
        <member name="P:Styx.Logic.XmlFlightNode.Connections">
            <summary>
              Gets or sets the connections.
            </summary>
            <value>The connections.</value>
        </member>
        <member name="P:Styx.Logic.XmlFlightNode.Continent">
            <summary>
              Gets or sets the continent.
            </summary>
            <value>The continent.</value>
        </member>
        <member name="P:Styx.Logic.XmlFlightNode.MasterEntry">
            <summary>
              Gets or sets the master entry.
            </summary>
            <value>The master entry.</value>
        </member>
        <member name="P:Styx.Logic.XmlFlightNode.UpdateLevel">
            <summary>
             Gets of sets the update level
            </summary>
            <value>Last level we updated the master.</value>
        </member>
        <member name="P:Styx.Logic.XmlFlightNode.Name">
            <summary>
              Gets or sets the name.
            </summary>
            <value>The name of this node.</value>
        </member>
        <member name="T:Styx.Logic.Inventory.WeightSetEx">
            <summary>
            Class used for scoring items
            Example usage:
            <example>
            <code> 
            WeightSetEx weightSet = new WeightSetEx();
            foreach (WoWItem item in StyxWoW.Me.CarriedItems)
            {
                float score = weightSet.EvaluateItem(item);    
                Logging.Write("[{0}] Score:{1}", item.Name, score);
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.EvaluateItem(System.String)">
            <summary>
            Evalutes an item
            </summary>
            <param name="itemLink">the itemlink of the item to evaluate.</param>
            <returns>computed score for this item.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.EvaluateItem(Styx.WoWInternals.WoWObjects.WoWItem,System.Boolean)">
            <summary>
            Evalutes an item
            </summary>
            <param name="item">the items as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object. </param>
            <param name="includeEnchants">true if you want to include enchants (enchants from glyphs too) etc. when computing the score. </param>
            <returns>computed score for this item.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.EvaluateItem(Styx.WoWInternals.WoWObjects.WoWItem)">
            <summary>
            Evalutes an item
            </summary>
            <param name="item">the items as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object. </param>
            <returns>computed score for this item.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.EvaluateItem(Styx.WoWInternals.WoWObjects.ItemInfo,Styx.WoWInternals.WoWObjects.ItemStats)">
            <summary>
            Evalutes an item
            </summary>
            <param name="itemInfo">the <see cref="T:Styx.WoWInternals.WoWObjects.ItemInfo"/> for this item, can be passed as null.</param>
            <param name="itemStats">the stats to be used when evalutaing this.</param>
            <returns>computed score for this item.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.GetStatScore(Styx.Logic.Inventory.Stat,System.Single)">
            <summary>
            Computes and returns the score of a stat.
            </summary>
            <param name="stat">the stat.</param>
            <param name="statPoints">number of statpoints.</param>
            <returns>computed score for this <see cref="T:Styx.Logic.Inventory.Stat"/>.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.GetStatScore(System.String,System.Single)">
            <summary>
            Computes and returns the score of a stat.
            </summary>
            <param name="statName">the name of the stat.</param>
            <param name="statPoints">number of statpoints.</param>
            <returns>computed score for this stat.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.GetWantedArmorClass">
            <summary>
            Returns the wanted <see cref="T:Styx.WoWItemArmorClass"/> for the player.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.GetItemIdFromItemLink(System.String)">
            <summary>
            Retrives the item id in a item-link using regex.
            </summary>
            <param name="itemLink">itemlink to parse</param>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.LoadWeightSets">
            <summary>
            Loads all weight sets from disk.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSetEx.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Styx.Logic.Inventory.WeightSetEx.CurrentWeightSet">
            <summary>
            The first weight set found matching the current player.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WeightSetEx.StatScores">
            <summary>
            The stat scores.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WeightSetEx.Class">
            <summary>
            The class to be used with this weight set.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WeightSetEx.Specialization">
            <summary>
            The index of the tree to use this weight set with.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WeightSetEx.Name">
            <summary>
            The name of this weight set.
            </summary>
        </member>
        <member name="T:Styx.Logic.Inventory.WoWPrice">
            <summary>
            Class representing the price of something that can be bought in wow.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WoWPrice.TotalCoppers">
            <summary>
            The total amount of coppers.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WoWPrice.Gold">
            <summary>
            The amount of gold.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WoWPrice.Silver">
            <summary>
            The amount of silver.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.WoWPrice.Copper">
            <summary>
            The amount of copper.
            </summary>
        </member>
        <member name="T:Styx.Logic.CanMountDelegate">
            <summary>
            Delegate used to provide an extra condition when mounting
            </summary>
            <returns></returns>
        </member>
        <member name="T:Styx.Logic.LocationRetriever">
            <summary>
            Delegate used to provide the destination when mounting
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.MountUpEventArgs.Cancel">
            <summary>
            Gets or sets a boolean indicating whether to cancel this mount up.
            </summary>
        </member>
        <member name="P:Styx.Logic.MountUpEventArgs.Destination">
            <summary>
            The destination
            </summary>
        </member>
        <member name="M:Styx.Logic.Mount.Dismount">
            <summary>
            Attempts to dismount the player.
            </summary>
        </member>
        <member name="M:Styx.Logic.Mount.Dismount(System.String)">
            <summary>
            Attempts to dismount the player.
            </summary>
            <param name="reason">reason why we are dismounting. </param>
        </member>
        <member name="M:Styx.Logic.Mount.AddCantMountSpot(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            We store the area where we can't mount
            </summary>
            <param name="loc">wowpoint</param>
        </member>
        <member name="M:Styx.Logic.Mount.StateMount">
            <summary>
            Does a special state mount that checks if you can mount and shizzle.
            </summary>
        </member>
        <member name="E:Styx.Logic.Mount.OnMountUp">
            <summary>
            Fired when the player starts to mount.
            </summary>
        </member>
        <member name="E:Styx.Logic.Mount.OnDismount">
            <summary>
            Fired when the player has finished dismounting.
            </summary>
        </member>
        <member name="F:Styx.Logic.MountType.Scaling">
            <summary> This is both flying and ground mounts, headless horseman has this type. </summary>
        </member>
        <member name="P:Styx.Logic.MountHelper.NumMounts">
            <summary>Gets the number of mounts.</summary>
            <value>The total number of mounts.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.Mounts">
            <summary>Gets the mounts the current player has.</summary>
            <value>The mounts.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.GroundMounts">
            <summary>Gets the ground mounts.</summary>
            <value>The ground mounts.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.FlyingMounts">
            <summary>Gets the flying mounts.</summary>
            <value>The flying mounts.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.UnderwaterMounts">
            <summary>Gets the underwater mounts.</summary>
            <value>The underwater mounts.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.Slot">
            <summary>Gets or sets the slot.</summary>
            <value>The slot.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.CreatureId">
            <summary>Gets or sets the identifier of the creature.</summary>
            <value>The identifier of the creature.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.CreatureSpellId">
            <summary>Gets or sets the identifier of the creature spell.</summary>
            <value>The identifier of the creature spell.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.CreatureSpell">
            <summary>Gets or sets the creature spell.</summary>
            <value>The creature spell.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.Icon">
            <summary>Gets or sets the icon.</summary>
            <value>The icon.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.IsSummoned">
            <summary>Gets or sets a value indicating whether this object is summoned.</summary>
            <value>true if this object is summoned, false if not.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Styx.Logic.MountHelper.MountWrapper.CanMount">
            <summary>Gets a value indicating whether we can mount.</summary>
            <value>true if we can mount, false if not.</value>
        </member>
        <member name="M:Styx.Logic.Pathing.AvoidanceManager.Add(System.UInt32)">
            <summary>
            Adds a unit to avoid.
            </summary>
            <param name="id">The ID of the unit.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.AvoidanceManager.AddAll(System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            Adds a bunch of units to avoid.
            </summary>
            <param name="ids">The IDs of the units.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.AvoidanceManager.Remove(System.UInt32)">
            <summary>
            Removes a unit being avoided.
            </summary>
            <param name="id">The ID of the unit.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.AvoidanceManager.RemoveAll(System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            Removes a bunch of units being avoided.
            </summary>
            <param name="ids">The IDs of the units.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.BlackspotManager.AddBlackspot(Styx.Logic.Pathing.WoWPoint,System.Single,System.Single)">
            <summary>
              Adds a blackspot.
            </summary>
            <remarks>
              Created 1/24/2011.
            </remarks>
            <param name = "location">The location.</param>
            <param name = "radius">The radius.</param>
            <param name = "height">The height.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.BlackspotManager.AddBlackspots(System.Collections.Generic.IEnumerable{Styx.Logic.Profiles.Blackspot})">
            <summary>
              Adds multiple blackspots.
            </summary>
            <remarks>
              Created 1/24/2011.
            </remarks>
            <param name = "blackspots">A variable-length parameters list containing blackspots.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.BlackspotManager.RemoveBlackspot(Styx.Logic.Profiles.Blackspot)">
            <summary>
              Removes the blackspot. Note: This will RELOAD all currently loaded navigation meshes. Use this method sparingly.
            </summary>
            <remarks>
              Created 1/24/2011.
            </remarks>
            <param name = "spot">The spot.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.BlackspotManager.RemoveBlackspots(System.Collections.Generic.IEnumerable{Styx.Logic.Profiles.Blackspot})">
            <summary>
              Removes the blackspots described by spots. Note: This will RELOAD all currently loaded navigation meshes. Use this method sparingly.
            </summary>
            <remarks>
              Created 1/24/2011.
            </remarks>
            <param name = "spots">The spots.</param>
        </member>
        <member name="P:Styx.Logic.Pathing.BlackspotManager.GlobalBlackspots">
            <summary>A read-only list of global blackspots, added by the default stuck handler. This collection cannot be modified, to avoid serious issues.</summary>
            <value>The global blackspots.</value>
        </member>
        <member name="T:Styx.Logic.Pathing.ClickToMoveMover">
            <summary>Click to move mover. This is the default mover for Honorbuddy.</summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="T:Styx.Logic.Pathing.IPlayerMover">
            <summary>Interface for player mover. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Pathing.IPlayerMover.Move(Styx.WoWInternals.WoWMovement.MovementDirection)">
            <summary>Moves. </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.IPlayerMover.MoveTowards(Styx.Logic.Pathing.WoWPoint)">
            <summary>Moves towards a location.</summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.IPlayerMover.MoveStop">
            <summary>Move stop. </summary>
        </member>
        <member name="M:Styx.Logic.Pathing.ClickToMoveMover.Move(Styx.WoWInternals.WoWMovement.MovementDirection)">
            <summary>Moves. </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Styx.Logic.Pathing.ClickToMoveMover.MoveTowards(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Styx.Logic.Pathing.ClickToMoveMover.MoveStop">
            <summary>Move stop. </summary>
        </member>
        <member name="T:Styx.Logic.Pathing.ITerrainHeightProvider">
            <summary>Interface for terrain height provider. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Pathing.ITerrainHeightProvider.FindHeights(System.Single,System.Single)">
            <summary>Searches for Z 'collisions' at the given x/y coordinate.</summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>The found heights.</returns>
        </member>
        <member name="T:Styx.Logic.Pathing.IStuckHandler">
            <summary>Interface for stuck handler. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Pathing.IStuckHandler.IsStuck">
            <summary>Query if this object is stuck. </summary>
            <returns>true if stuck, false if not.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.IStuckHandler.Unstick">
            <summary>Unsticks this object. </summary>
        </member>
        <member name="M:Styx.Logic.Pathing.IStuckHandler.Reset">
            <summary>Resets this object. Called when the navigation provider reaches its end location.</summary>
        </member>
        <member name="M:Styx.Logic.Pathing.Flightor.Clear">
            <summary>
            Clears the flight path
            </summary>
        </member>
        <member name="P:Styx.Logic.Pathing.Flightor.MountHelper.Mounted">
            <summary>
            ///////////////////////////////////////////////////////////////////////////////////////////
            </summary>
        </member>
        <member name="T:Styx.Logic.Pathing.INavigationProvider">
            <summary>Interface for navigation provider. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Pathing.INavigationProvider.MoveTo(Styx.Logic.Pathing.WoWPoint)">
            <summary>Moves to the specified coordinate</summary>
            <param name="location">The location.</param>
            <returns>.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.INavigationProvider.Clear">
            <summary>Clears the current path to its blank/initial state.</summary>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.INavigationProvider.GeneratePath(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>Generates a path. </summary>
            <param name="from">Source for the path.</param>
            <param name="to">to.</param>
            <returns>The path.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.INavigationProvider.CanNavigateFully(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Int32)">
            <summary>Queries if we can navigate fully 'from'. </summary>
            <param name="from">Source for the path.</param>
            <param name="to">to.</param>
            <param name="maxHops"></param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="P:Styx.Logic.Pathing.INavigationProvider.PathPrecision">
            <summary>Gets or sets the path precision.</summary>
            <value>The path precision.</value>
        </member>
        <member name="P:Styx.Logic.Pathing.INavigationProvider.StuckHandler">
            <summary>Gets or sets the stuck handler for this navigation provider.</summary>
            <value>The stuck handler.</value>/
        </member>
        <member name="M:Styx.Logic.Pathing.MeshNavigator.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Styx.Logic.Pathing.MeshNavigator.MovePath(Styx.Logic.Pathing.MeshMovePath)">
            <summary>
            Moves along a path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.Pathing.MeshNavigator.Nav">
            <summary>
            </summary>
        </member>
        <member name="P:Styx.Logic.Pathing.MeshNavigator.CurrentMovePath">
            <summary>
            </summary>
        </member>
        <member name="M:Styx.Logic.Pathing.NavMesh.NavMesh.RemoveConnection(System.Int32,System.Int32)">
            <summary>
            Removes the connection from <paramref name="node1"/> to <paramref name="node2"/>.
            </summary>
            <param name="node1"></param>
            <param name="node2"></param>
            <returns>A boolean indicating whether the connection was successfully removed.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.NavMesh.NavMeshBuilder.Clean">
            <summary>
            Removes all invalid (deleted) nodes and updates neighbor refs.
            </summary>
        </member>
        <member name="M:Styx.Logic.Pathing.NavMesh.NavMeshBuilder.FindClosest(Tripper.Tools.Math.Vector2,System.Predicate{Styx.Logic.Pathing.NavMesh.NavMeshBuilderNode})">
            <summary>
            Finds the closest node to a location that matches a predicate.
            </summary>
            <param name="loc"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Pathing.NavMesh.NavMeshBuilder.AddConnection(Styx.Logic.Pathing.NavMesh.NavMeshBuilderNode,Styx.Logic.Pathing.NavMesh.NavMeshBuilderNode)">
            <summary>
            Adds a connection from the <paramref name="this"/>-node to the <paramref name="neighbor"/> node.
            </summary>
            <param name="this"></param>
            <param name="neighbor"></param>
        </member>
        <member name="F:Styx.Logic.Profiles.ForceMailManager._dynamicForceMailItems">
            <summary>
            Add and remove protected items from/to here at runtime.
            </summary>
        </member>
        <member name="M:Styx.Logic.Profiles.Quest.ConditionHelper.CompileAndBindExpression(System.String[]@,System.Func{System.Boolean}@)">
            <summary>
            Compiles and evalutes the current expressions, returns false if there was compiler errors.
            </summary>
            <param name="buildErrors">Array with compiler errors if any.</param>
            <param name="boundExpression">A delegate representing the expression.</param>
        </member>
        <member name="T:Styx.Logic.Questing.CustomForcedBehavior">
            <summary>Custom forced behavior. </summary>
            <remarks>Created 12/8/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAs``1(System.String,System.Boolean,Styx.Logic.Questing.CustomForcedBehavior.IConstraintChecker{``0},System.String[])">
             <summary>
             <para>This class is for use only with reference-types (e.g., string).  <see cref="!:GetAttributeAsNullable&lt;T&gt;(...)"/></para>
             is the corresponding method for use with value-types (e..g, double, int, WoWPoint).
             <para>-----</para>
             <para>Examines the argument list looking for the specified <paramref name="attributeName"/>,
             and returns the parsed representation of the attribute's value.  The attribute may also be found
             as one of the aliases provided in <paramref name="attributeNameAliases"/>.</para>
             </summary>
             <param name="attributeName">the name of the attribute for which we look in the argument list.
             This value may not be <c>null</c>, or the empty string ("").</param>
             <param name="isAttributeRequired">true, if the attribute is required; false, if the attribute is optional</param>
             <param name="constriants">A method that further constrains the input beyond its native type. If the input should
             not be constrained beyond its native type, supply <c>null</c> for this parameter.
             <para>There are a number of preset
             constraints provided by the <see cref="T:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs"/> class.  There are also a number of prebuilt constraint
             classes that implement the <see cref="!:IConstraintChecker"/> interface--these prebuilt classes begin with the
             name "ConstrainTo".</para></param>
             /// <param name="attributeNameAliases">an array of alternate names that the attribute is known as.  The primary
             purpose of this field is for backward-compatibility when attributes get renamed.  If there are no other names
             by which the attribute is known, supply <c>null</c> for this parameter.</param>
             <returns>
             <para>a parsed represention of the attribute's value, if it could be located using its primary
             name or an alias.  The parsed representation will also meet any constraint that has been specified.</para>
             <para>Otherwise, <c>null</c> is returned if there was any kind of problem, or the attribute was not present
             in the argument list.</para>
             </returns>
             <remarks>
             <para>Error messages are sent to the Styx logging facilities under the following conditions:</para>
             <para>* The attribute is required, but the attribute could not be found using its primary name or one
             of its aliases.</para>
             <para>* The attribute value is malformed.</para>
             <para>* The attribute does not fall within the specified constraint</para>
             </remarks>
             <example>
             <code>
             string TriggerPhrase { get; set; }
             TriggerPhrase = GetAttributeAs&lt;string&gt;(&amp;quot;CannonAngle&amp;quot;, false, ConstrainAs.StringNonEmpty, null) ?? string.Empty;
             </code>
             </example>
            
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsArray``1(System.String,System.Boolean,Styx.Logic.Questing.CustomForcedBehavior.IConstraintChecker{``0},System.String[],System.Char[])">
             <summary>
             <para>This method is primarily to support backward-compatibility.  Constructing data that requires
             the use of this method is un-XML-like, and its use is discouraged.</para>
             <para>-----</para>
             <para>Examines the argument list looking for the specified <paramref name="attributeName"/>,
             and returns the parsed representation of the attribute's value.  The attribute may also be found
             as one of the aliases provided in <paramref name="attributeNameAliases"/>.</para>
             <para>The value of the located argument is expected to be in the form of a delineated composite.
             If the <paramref name="separatorCharacters"/> parameter is provided as null, the separator characters
             default to space, comma, and semicolon.</para>
             <para>For example, an integer list could be formatted as follows:
             "1,6,3,1,2,-1", "1 6 3 1 2 -1", or "1; 6; 3; 1; 2; -1".  Since the method is a generic, you may also
             use for other data types such as boolean (e.g., "true,false,true,true"),  enumerations (e.g., "Black; Blue; DarkRed;
             White"), and other types.</para>
             <para>Each argument in the composite must adhere to any constraint that is provided by the caller.</para>
             <para>Although this method can also be used for strings, the comma/space/semicolon as separation characters,
             typically makes the returned results difficult to use.  When string are employed, the caller may need to supply
             a non-null value for <paramref name="separatorCharacters"/> that is chosen judiciously.</para>
             <para>If &lt;T&gt; is a WoWPoint, the the <paramref name="separatorCharacters"/> are ignored, and the attribute
             value must follow a rigid format.  WoWPoints are formatted in one of the following ways: "X1,Y1,Z1|X2,Y2,Z2|X3..."
             or "X1,Y1,Z1;X2,Y2,Z2;X3...".</para>
             </summary>
             <param name="attributeName">the name of the attribute for which we look in the argument list.
             This value may not be <c>null</c>, or the empty string ("").</param>
             <param name="isAttributeRequired">true, if the attribute is required; false, if the attribute is optional</param>
             <param name="constriants">A method that further constrains the input beyond its native type. If the input should
             not be constrained beyond its native type, supply <c>null</c> for this parameter.
             <para>There are a number of preset
             constraints provided by the <see cref="T:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs"/> class.  There are also a number of prebuilt constraint
             classes that implement the <see cref="!:IConstraintChecker"/> interface--these prebuilt classes begin with the
             name "ConstrainTo".</para></param>
             <param name="attributeNameAliases">an array of alternate names that the attribute is known as.  The primary
             purpose of this field is for backward-compatibility when attributes get renamed.  If there are no other names
             by which the attribute is known, supply <c>null</c> for this parameter.</param>
             <param name="separatorCharacters">an array of characters that will be used as separators to delineate the
             attribute's value into array members. Note: if &lt;T&gt; is <c>WoWPoint</c>, then the separator characters
             are ignored, and the argument list must adhere to a specific format.</param>
             <returns>
             <para>a parsed represention of the attribute's value, if it could be located using its primary
             name or an alias.  The parsed representation will also meet any constraint that has been specified.</para>
             <para>Otherwise, an empty array is returned if there was any kind of problem, or the attribute was not present
             in the argument list.</para>
             </returns>
             <remarks>
             <para>This method will never return null.  Instead, an empty array is returned if a problem was encountered,
             or the attribute could not be located in the argument list.</para>
             <para>If &lt;T&gt; is <c>WoWPoint</c>, then separatorCharacters are ignored, and the attribute formatting
             must follow a rigid format as previously described.</para>
             <para>Error messages are sent to the Styx logging facilities under the following conditions:</para>
             <para>* The attribute is required, but the attribute could not be found using its primary name or one
             of its aliases.</para>
             <para>* The attribute value is malformed.</para>
             <para>* The attribute does not fall within the specified constraint</para>
             </remarks>
             <example>
             <code>
             string TriggerPhrase { get; set; }
             TriggerPhrase = GetAttributeAsArray&lt;string&gt;(&amp;quot;TriggerPhrase&amp;quot;, false, ConstrainAs.StringNonEmpty, null, null) ?? string.Empty;
             </code>
             </example>
            
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsNullable``1(System.String,System.Boolean,Styx.Logic.Questing.CustomForcedBehavior.IConstraintChecker{``0},System.String[])">
             <summary>
             <para>This class is for use only with value-types (e.g., double, int, WoWPoint).
             <see cref="!:GetAttributeAs&lt;T&gt;(...)"/></para>
             is the corresponding method for use with reference-types (e..g, string).
             <para>-----</para>
             <para>Examines the argument list looking for the specified <paramref name="attributeName"/>,
             and returns the parsed representation of the attribute's value.  The attribute may also be found
             as one of the aliases provided in <paramref name="attributeNameAliases"/>.</para>
             </summary>
             <param name="attributeName">the name of the attribute for which we look in the argument list.
             This value may not be <c>null</c>, or the empty string ("").</param>
             <param name="isAttributeRequired">true, if the attribute is required; false, if the attribute is optional</param>
             <param name="constriants">A method that further constrains the input beyond its native type. If the input should
             not be constrained beyond its native type, supply <c>null</c> for this parameter.
             <para>There are a number of preset
             constraints provided by the <see cref="T:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs"/> class.  There are also a number of prebuilt constraint
             classes that implement the <see cref="!:IConstraintChecker"/> interface--these prebuilt classes begin with the
             name "ConstrainTo".</para></param>
             /// <param name="attributeNameAliases">an array of alternate names that the attribute is known as.  The primary
             purpose of this field is for backward-compatibility when attributes get renamed.  If there are no other names
             by which the attribute is known, supply <c>null</c> for this parameter.</param>
             <returns>
             <para>a parsed represention of the attribute's value, if it could be located using its primary
             name or an alias.  The parsed representation will also meet any constraint that has been specified.</para>
             <para>Otherwise, <c>null</c> is returned if there was any kind of problem, or the attribute was not present
             in the argument list.</para>
             </returns>
             <remarks>
             <para>Error messages are sent to the Styx logging facilities under the following conditions:</para>
             <para>* The attribute is required, but the attribute could not be found using its primary name or one
             of its aliases.</para>
             <para>* The attribute value is malformed.</para>
             <para>* The attribute does not fall within the specified constraint</para>
             </remarks>
             <example>
             <code>
             string TriggerPhrase { get; set; }
             TriggerPhrase = GetAttributeAs&lt;string&gt;(&amp;quot;CannonAngle&amp;quot;, false, ConstrainAs.StringNonEmpty, null) ?? string.Empty;
             </code>
             </example>
            
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.GetNumberedAttributesAsArray``1(System.String,System.Int32,Styx.Logic.Questing.CustomForcedBehavior.IConstraintChecker{``0},System.String[])">
             <summary>
             <para>This method looks for attributes with a prefix specified as <paramref name="baseName"/>
             followed by an integer value (e.g., ButtonPhrase1, ButtonPhrase2, ButtonPhrase3).
             Such located parameters are collected
             and returned as an array.  An argument consisting of just the prefix and no following number
             (e.g., ButtonPhrase) is considered as part of the acceptable set of parameters found.  An argument that does not
             fit the form of prefix-followed-by-number will be ignored (e.g., ButtonPhrase3n, ButtonPhrases, etc). 
             Attributes are also looked for under prefixes specified by <paramref name="aliasBaseNames"/></para>
             <para>Any found arguments must adhere to the <paramref name="constraints"/> specified by the caller.</para>
             <para>The <paramref name="countRequired"/> argument determines how many of the similarly-named attributes
             must be found; otherwise, an error is reported and an empty array is returned.</para>
             If &lt;T&gt; is a WoWPoint, then three parameters will be sought, one parameter each that identifies the
             X, Y, and Z contribution.  If any of these three parameters doesn't exist, then this is considered
             an error in the argument list.
             </summary>
             <param name="baseName">a prefix used for the primary name of the arguments sought</param>
             <param name="countRequired">the number of similarly-named arguments that must be encountered for success</param>
             <param name="constriants">A method that further constrains the input beyond its native type. If the input should
             not be constrained beyond its native type, supply <c>null</c> for this parameter.
             <para>There are a number of preset
             constraints provided by the <see cref="T:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs"/> class.  There are also a number of prebuilt constraint
             classes that implement the <see cref="!:IConstraintChecker"/> interface--these prebuilt classes begin with the
             name "ConstrainTo".</para></param>
             <param name="aliasBaseNames">alternative prefixes under which to look for acceptable attributes</param>
             <returns>
             <para>an array comprised of the values of all located arguments.  The arguments will adhere to
             the <paramref name="constraints"/> identified by the caller.</para>
             <para>Otherwise, an empty array is returned if no such parameters could be located, or
             the <paramref name="countRequired"/> number of arguments was not encountered.</para>
             </returns>
             <remarks>
             <para>This method will never return null.  Instead, an empty array is returned if a problem was encountered,
             or the attributes could not be located in the argument list.</para>
             <para>If &lt;T&gt; is a <c>WoWPoint</c>, then parameters will be sought with a X/Y/Z following the number.
             In other words, "WaitPosition3X" is a valid attribute name--"WaitPositionX3" is invalid.</para>
             <para>Error messages are sent to the Styx logging facilities under the following conditions:</para>
             <para>* The attribute is required, but the attribute could not be found using its primary name or one
             of its aliases.</para>
             <para>* The attribute value is malformed.</para>
             <para>* The attribute does not fall within the specified constraint</para>
             </remarks>
            
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.UtilTo``1(System.String,System.String)">
            <summary>
            Converts the provide TEXT into the requested type.  If the conversion fails,
            an exception is thrown.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="attributeValueAsString"></param>
            <returns>the type-specific representation of the provided string, or
            'null' if the string was malformed.</returns>
            <throw>InvalidCastException</throw>
            <throw>FormatException</throw>
            <throw>OverflowException</throw>
            <throw>ArgumentNullException</throw>
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior._isAttributeProblem">
            <summary>
            Initialized to 'false' when the concrete behavior is created, this value gets set to 'true'
            if an error (not warning) is encountered in one of the GetAttribute*() methods.
            Note, that this field can only be set to true, and once set, it always remains true
            </summary>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.OnStart_HandleAttributeProblem">
            <summary>
            <para>This should be the first method called in a concrete CustomForcedBehavior's OnStart() method.
            When this is called, it will emit error messages that have occurred due to argument processing.
            The messages sent to the Styx log indicate which line of the profile is generating the problem.</para>
            <para>If there was a problem with argument processing, this method arranges for Honorbudy to cease
            executing the profile.</para>
            <para>This method also informs the user if the behavior will be skipped because the completion
            criteria were met when the behavior was called.</para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.LogMessage(System.String,System.Nullable{System.Drawing.Color},System.String,System.Object[])" -->
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.LogMessage(System.String,System.String,System.Object[])">
            <summary>
            Convenience wrapper around <see cref="!:LogMessage(string, Color?, string, params object[])"/>
            </summary>
            <param name="messageType"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.UtilIsProgressRequirementsMet(System.Int32,Styx.Logic.Questing.CustomForcedBehavior.QuestInLogRequirement,Styx.Logic.Questing.CustomForcedBehavior.QuestCompleteRequirement)">
            <summary>
            Determine whether a behavior should start or continue based on the QuestId, and its required
            presence and completion criteria.
            </summary>
            <param name="questId">provides the reference for which the specified qualifies should be applied</param>
            <param name="questInLogRequirement">the QuestId must meet this specified qualifier for the behavior to proceed.</param>
            <param name="questCompleteRequirement">the QuestId must mee this specified qualifier for the behavior to proceed.</param>
            <returns>true, if the provided QuestId meets the specified qualifiers; otherwise, returns false.</returns>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Constructor. </summary>
            <remarks>Created 12/8/2010.</remarks>
            <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.CreateBehavior">
            <summary>Creates the behavior. </summary>
            <returns>.</returns>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.Execute">
            <summary>Gets the execute. </summary>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.OnStart">
            <summary>Called right after this behavior has been set as the current behavior.</summary>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.OnTick">
            <summary>Called when the behavior tree is ticked.</summary>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.Dispose">
            <summary>Called right before this behavior is removed as the current behavior.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsBoolean(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsColor(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsDouble(System.String,System.Boolean,System.Double,System.Double,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsDoubleArray(System.String,System.Boolean,System.Double,System.Double,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsEnum``1(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsFactionId(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsHotbarButton(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsInteger(System.String,System.Boolean,System.Int32,System.Int32,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsIntegerArray(System.String,System.Boolean,System.Int32,System.Int32,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsItemId(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsMobId(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsNumOfTimes(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsQuestId(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsRange(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsSpellId(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsString(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsString_NonEmpty(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsString_SpecificValue(System.String,System.Boolean,System.String[],System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsWaitTime(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetXYZAttributeAsWoWPoint(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsWoWPoints(System.String,System.Boolean,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetNumberedAttributesAsIntegerArray(System.String,System.Int32,System.Int32,System.Int32,System.String[])" -->
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.UtilLogMessage(System.String,System.String,System.Object[])">
            <summary>
            DEPRECATED: This method has been renamed to 'LogMessage'
            </summary>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.UtilLogMessage(System.String,System.Nullable{System.Drawing.Color},System.String,System.Object[])">
            <summary>
            DEPRECATED: This method has been renamed to 'LogMessage'
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsEnum``1(System.String,System.Boolean,``0,``0@)" -->
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.CheckForUnrecognizedAttributes(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            DEPRECATED: Use OnStart_HandleAttributeProblem(), instead
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsBoolean(System.String,System.Boolean,System.String,System.Boolean@)" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsFloat(System.String,System.Boolean,System.String,System.Single,System.Single,System.Single@)" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsInteger(System.String,System.Boolean,System.String,System.Int32,System.Int32,System.Int32@)" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsString(System.String,System.Boolean,System.String,System.String@)" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetAttributeAsSpecificString(System.String,System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String@)" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetXYZAttributeAsWoWPoint(System.Boolean,Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint@)" -->
        <!-- Badly formed XML comment ignored for member "M:Styx.Logic.Questing.CustomForcedBehavior.GetXYZAttributeAsWoWPoint(System.String,System.String,System.String,System.Boolean,Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint@)" -->
        <member name="P:Styx.Logic.Questing.CustomForcedBehavior.Element">
            <summary>Gets the element.</summary>
            <value>The element.</value>
        </member>
        <member name="P:Styx.Logic.Questing.CustomForcedBehavior.Args">
            <summary>Gets the arguments.</summary>
            <value>The arguments.</value>
        </member>
        <member name="P:Styx.Logic.Questing.CustomForcedBehavior.Branch">
            <summary>Gets the branch.</summary>
            <value>The branch.</value>
        </member>
        <member name="P:Styx.Logic.Questing.CustomForcedBehavior.IsDone">
            <summary>Gets a value indicating whether this object is done.</summary>
            <value>true if this object is done, false if not.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs" -->
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.AuraId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.CollectionCount">
            <summary>Domain: [1..1000]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.FactionId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.HotbarButton">
            <summary>Domain: [1..12]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.ItemId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.Milliseconds">
            <summary>Domain: [0..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.MobId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.ObjectId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.Percent">
            <summary>Domain: [0.0..100.0]</summary> 
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.QuestId(Styx.Logic.Questing.CustomForcedBehavior)">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.Range">
            <summary>Domain: [1.0..10000.0]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.RepeatCount">
            <summary>Domain: [1..1000]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.SpellId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.StringNonEmpty">
            <summary>string must not be null or string.Empty</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.VehicleId">
            <summary>Domain: [1..int.MaxValue]</summary> 
        </member>
        <member name="F:Styx.Logic.Questing.CustomForcedBehavior.ConstrainAs.WoWPointNonEmpty">
            <summary>WoWPoint must not be equal to WoWPoint.Empty</summary> 
        </member>
        <!-- Badly formed XML comment ignored for member "T:Styx.Logic.Questing.CustomForcedBehavior.IConstraintChecker`1" -->
        <!-- Badly formed XML comment ignored for member "T:Styx.Logic.Questing.CustomForcedBehavior.ConstrainTo" -->
        <member name="T:Styx.Logic.Questing.CustomForcedBehavior.ConfigMemento">
            <summary>
            <para>This class captures the current Honorbuddy configuration.  When the memento is Dispose'd
            the configuration that existed when the memento was created is restored.</para>
            <para>More info about how this class applies to saving and restoring user configuration
            can be found here...
                http://www.thebuddyforum.com/mediawiki/index.php?title=Honorbuddy_Programming_Cookbook:_Saving_and_Restoring_User_Configuration
            </para>
            </summary>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.ConfigMemento.#ctor">
            <summary>
            Creating a memento captures the Honorbuddy configuration that exists when the memento
            is created.  You can then alter the Honorbuddy configuration as you wish.  To restore
            the configuration to its original state, just Dispose of the memento.
            </summary>
        </member>
        <member name="M:Styx.Logic.Questing.CustomForcedBehavior.ConfigMemento.Dispose">
            <summary>
            Disposing of a memento restores the Honorbuddy configuration that existed when
            the memento was created.
            </summary>
        </member>
        <member name="T:Styx.Resources.StyxResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.__0____Navigator___1_">
            <summary>
              Looks up a localized string similar to [{0}] [Navigator] {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.__0__Gate__State_has_changed_destroyed__1_">
            <summary>
              Looks up a localized string similar to ({0} Gate) State has changed destroyed:{1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._0___1____From___2_">
            <summary>
              Looks up a localized string similar to {0} {1} - From: {2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._0__1____From___2_">
            <summary>
              Looks up a localized string similar to {0}{1} - From: {2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._0__Dist___1_">
            <summary>
              Looks up a localized string similar to {0} Dist: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._0__Distance___1_">
            <summary>
              Looks up a localized string similar to {0} Distance: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._ChatMessage___0____1_____2_">
            <summary>
              Looks up a localized string similar to [ChatMessage][{0}][{1}]: {2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._Consider_using_multiple_blackspots_instead_of_one_very_large_blackspot_">
            <summary>
              Looks up a localized string similar to  Consider using multiple blackspots instead of one very large blackspot..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._EVENT___0___Args___1_">
            <summary>
              Looks up a localized string similar to [EVENT] {0}: Args: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._Udp_Server_Content__">
            <summary>
              Looks up a localized string similar to [Udp Server]Content :.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._Udp_Server_Port__">
            <summary>
              Looks up a localized string similar to [Udp Server]Port :.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources._Valid_values_are__">
            <summary>
              Looks up a localized string similar to  Valid values are: .
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Aborting_all_activities_now_">
            <summary>
              Looks up a localized string similar to Aborting all activities now..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Activity___0_">
            <summary>
              Looks up a localized string similar to Activity: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Adding___0_">
            <summary>
              Looks up a localized string similar to Adding: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.An_error_occured_while_attempting_to_download_a_mesh_file___0___The_server_may_be_having_troubles__so_please_try_again_later_">
            <summary>
              Looks up a localized string similar to An error occured while attempting to download a mesh file: {0}. The server may be having troubles, so please try again later..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Attribute__0__of__1__type_was_missing_in___2___tag_">
            <summary>
              Looks up a localized string similar to Attribute {0} of {1} type was missing in &quot;{2}&quot; tag..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Blacklisted_mount_spot_at__0_">
            <summary>
              Looks up a localized string similar to Blacklisted mount spot at {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Blacklisted_Vendor">
            <summary>
              Looks up a localized string similar to Blacklisted Vendor.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Blacklisting__0__for_5_minutes_because_we_can_t_navigate_to_it_">
            <summary>
              Looks up a localized string similar to Blacklisting {0} for 5 minutes because we can&apos;t navigate to it!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.BlackMagic_was_not_Initialized_">
            <summary>
              Looks up a localized string similar to BlackMagic was not Initialized!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.boolean">
            <summary>
              Looks up a localized string similar to boolean.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.BotIsNotPresent">
            <summary>
              Looks up a localized string similar to {0} Is not present in the current list of bots.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Building_spell_book">
            <summary>
              Looks up a localized string similar to Building spell book.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Buying___0____1__">
            <summary>
              Looks up a localized string similar to Buying #{0} [{1}].
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Can_t_start___No_combat_class_is_loaded_">
            <summary>
              Looks up a localized string similar to Can&apos;t start - No combat class is loaded!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Cannot_format_string_of_format___0___">
            <summary>
              Looks up a localized string similar to Cannot format string of format ({0})..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Cannot_get_subclasses_of_T_when_T_is_not_a_class_">
            <summary>
              Looks up a localized string similar to Cannot get subclasses of T when T is not a class!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Cannot_load__0____code_requires_privilege_to_execute">
            <summary>
              Looks up a localized string similar to Cannot load {0} - code requires privilege to execute.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Cannot_run_injection_routines_while_not_in_game___Crash_Prevention_">
            <summary>
              Looks up a localized string similar to Cannot run injection routines while not in game! (Crash Prevention).
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.CannotReadDescriptorOnInvalidObject">
            <summary>
              Looks up a localized string similar to Cannot read a descriptor on an invalid object..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Changed_tilemap_to__0___Tiled___1_">
            <summary>
              Looks up a localized string similar to Changed tilemap to {0}, Tiled: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Changing_current_profile_to__0_">
            <summary>
              Looks up a localized string similar to Changing current profile to {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Chose__0__as_your_combat_class_">
            <summary>
              Looks up a localized string similar to Chose {0} as your combat class!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Compiler_error_s__encountered_and_saved_to_AssemblyFactory_CompilerErrors">
            <summary>
              Looks up a localized string similar to Compiler error(s) encountered and saved to AssemblyFactory.CompilerErrors.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Confirmed__0__as_your_class_">
            <summary>
              Looks up a localized string similar to Confirmed {0} as your class!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.ConnectionClosed">
             <summary>
               Looks up a localized string similar to 
            Connection Closed!!.
             </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_compile_CC_from__0__">
            <summary>
              Looks up a localized string similar to Could not compile CC from {0}!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_create_user_mesh_directory___0_">
            <summary>
              Looks up a localized string similar to Could not create user mesh directory! {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_a_routine_fitting_for_your_class__Please_make_sure_you_have_a_proper_combat_class_routine_in_your_folder__and_restart_Honorbuddy_">
            <summary>
              Looks up a localized string similar to Could not find a routine fitting for your class. Please make sure you have a proper combat class routine in your folder, and restart Honorbuddy..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_any_food_to_eat_">
            <summary>
              Looks up a localized string similar to Could not find any food to eat!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_any_water_to_drink_">
            <summary>
              Looks up a localized string similar to Could not find any water to drink!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_Device_">
            <summary>
              Looks up a localized string similar to Could not find Device..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_DevicePointer_">
            <summary>
              Looks up a localized string similar to Could not find DevicePointer..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_EndSceneProc">
            <summary>
              Looks up a localized string similar to Could not find EndSceneProc.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_item_to_use_by_ID__ID_provided___0_">
            <summary>
              Looks up a localized string similar to Could not find item to use by ID! ID provided: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_target_to_use_item_on_with_ID__0___ID_provided__1_">
            <summary>
              Looks up a localized string similar to Could not find target to use item on with ID:{0}, ID provided:{1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_find_the_settings_path_">
            <summary>
              Looks up a localized string similar to Could not find the settings path!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_get_plugin_data___0_">
            <summary>
              Looks up a localized string similar to Could not get plugin data: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse___0___into_C__statement_">
            <summary>
              Looks up a localized string similar to Could not parse &quot;{0}&quot; into C# statement!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse__Else__body_node_">
            <summary>
              Looks up a localized string similar to Could not parse &apos;Else&apos; body node!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse__Else__in__If__">
            <summary>
              Looks up a localized string similar to Could not parse &apos;Else&apos; in &apos;If&apos;..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse__ElseIf___Condition_code___0___could_not_be_compiled_into_C__code_">
            <summary>
              Looks up a localized string similar to Could not parse &apos;ElseIf&apos;. Condition code &quot;{0}&quot; could not be compiled into C# code..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse__ElseIf__in__If__">
            <summary>
              Looks up a localized string similar to Could not parse &apos;ElseIf&apos; in &apos;If&apos;..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse__If___Condition_code___0___could_not_be_compiled_into_C__code_">
            <summary>
              Looks up a localized string similar to Could not parse &apos;If&apos;. Condition code &quot;{0}&quot; could not be compiled into C# code..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse__If__body_node_">
            <summary>
              Looks up a localized string similar to Could not parse &apos;If&apos; body node!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse_SetMailbox_node_">
            <summary>
              Looks up a localized string similar to Could not parse SetMailbox node..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse_SetVendor_node_">
            <summary>
              Looks up a localized string similar to Could not parse SetVendor node..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_parse_X_Y_and_Z_in__MoveToNode__">
            <summary>
              Looks up a localized string similar to Could not parse X Y and Z in &apos;MoveToNode&apos;..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Could_not_Virtual_Table_">
            <summary>
              Looks up a localized string similar to Could not Virtual Table..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Couldn_t_download_offsets__Closing_bot_in_3_seconds">
            <summary>
              Looks up a localized string similar to Couldn&apos;t download offsets! Closing bot in 3 seconds.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.CouldNotCompileBot">
            <summary>
              Looks up a localized string similar to Could not compile bot from {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.CurrentBuildNotSupportedException">
            <summary>
              Looks up a localized string similar to Error! This build of WoW: [{0}] is not supported by Honorbuddy {1}..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.CurrentBuildOfWowNotSupported">
            <summary>
              Looks up a localized string similar to Current build of wow is not supported! - [{0}] please visit thebuddyforum.com for info on the next release !.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.DateTime___0_">
            <summary>
              Looks up a localized string similar to DateTime :{0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Detection_risk___aborting_all_activities_now_">
            <summary>
              Looks up a localized string similar to Detection risk - aborting all activities now..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.DirectoryNotFound_BotsLoadDir">
            <summary>
              Looks up a localized string similar to Could not find directory to load bots from..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Dismount_to_get_unstuck_">
            <summary>
              Looks up a localized string similar to Dismount to get unstuck..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Downloaded__0_">
            <summary>
              Looks up a localized string similar to Downloaded {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Downloaded__0___1___2__trimesh">
            <summary>
              Looks up a localized string similar to Downloaded {0}_{1}_{2}.trimesh.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Downloaded__0__trimesh">
            <summary>
              Looks up a localized string similar to Downloaded {0}.trimesh.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Downloaded_tilemap__0_">
            <summary>
              Looks up a localized string similar to Downloaded tilemap {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Downloading_mesh_">
            <summary>
              Looks up a localized string similar to Downloading mesh..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Downloading_Mesh___">
            <summary>
              Looks up a localized string similar to Downloading Mesh....
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Drinking__0_">
            <summary>
              Looks up a localized string similar to Drinking {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Eating__0_">
            <summary>
              Looks up a localized string similar to Eating {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.ElseIf_FromXml_Could_not_parse__ElseIf__body_node___0_">
            <summary>
              Looks up a localized string similar to Could not parse &apos;ElseIf&apos; body node: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.EndSceneHookFailed">
            <summary>
              Looks up a localized string similar to Error - Endscene hook failed: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Entry_in__0_">
            <summary>
              Looks up a localized string similar to Entry in {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Error___GetOffsets_____0_____1_">
            <summary>
              Looks up a localized string similar to Error - GetOffsets(): {0} - {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Error_getting_mount_info_for_mount_slot__0___Exception___1_">
            <summary>
              Looks up a localized string similar to Error getting mount info for mount slot {0}. Exception: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Error_in_ForceMail_XML_file_at__0____1_">
            <summary>
              Looks up a localized string similar to Error in ForceMail XML file at {0}: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Error_in_ProtectedItems_XML_file_at__0____1_">
            <summary>
              Looks up a localized string similar to Error in ProtectedItems XML file at {0}: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Error_trying_to_save_the_settings_file___0_">
            <summary>
              Looks up a localized string similar to Error trying to save the settings file: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Exception_when_attempting_to_download__0____1_">
            <summary>
              Looks up a localized string similar to Exception when attempting to download {0}: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Expected_object_type__Mob_or_GameObject_">
            <summary>
              Looks up a localized string similar to Expected object type; Mob or GameObject..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Expected_objective_type_">
            <summary>
              Looks up a localized string similar to Expected objective type!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.FactionStringPrintOut">
            <summary>
              Looks up a localized string similar to {0}, Parent: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Failed_to_download__0_">
            <summary>
              Looks up a localized string similar to Failed to download {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Failed_to_get_tile_map_for__0__">
            <summary>
              Looks up a localized string similar to Failed to get tile map for {0}!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Failed_to_load__0__at_all_">
            <summary>
              Looks up a localized string similar to Failed to load {0} at all..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.File___0__Line___1___3____2_">
            <summary>
              Looks up a localized string similar to File: {0} Line: {1} {3}: {2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.First_argument_when_specifying_ThisCall_must_be_a_nonnull_uint_">
            <summary>
              Looks up a localized string similar to First argument when specifying ThisCall must be a nonnull uint..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.floating">
            <summary>
              Looks up a localized string similar to floating.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.FlyingMountsNotSupported">
            <summary>
              Looks up a localized string similar to Flying mounts are not supported..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Found_flying_mount__0__">
            <summary>
              Looks up a localized string similar to Found flying mount {0}..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.GetGuidByKeyword_failed_">
            <summary>
              Looks up a localized string similar to GetGuidByKeyword failed!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.GetReactionTowardsException">
            <summary>
              Looks up a localized string similar to Exception in GetReactionTowards checking my reaction ({0}) against {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Honorbuddy_does_not_currently_support_elevators_">
            <summary>
              Looks up a localized string similar to Honorbuddy does not currently support elevators..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Honorbuddy_does_not_support_flying_mounts_">
            <summary>
              Looks up a localized string similar to Honorbuddy does not support flying mounts..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Honorbuddy_does_not_support_the_currently_active__gxAPI__please_change_it_to__D3D9_">
            <summary>
              Looks up a localized string similar to Honorbuddy does not support the currently active &apos;gxAPI&apos; please change it to &apos;D3D9&apos;.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.INACTIVITY_TIMER_TRIPPED__LOGGING_OUT_">
            <summary>
              Looks up a localized string similar to INACTIVITY TIMER TRIPPED! LOGGING OUT!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Index_can_t_be_higher_than_2_for_SpellEffects_">
            <summary>
              Looks up a localized string similar to Index can&apos;t be higher than 2 for SpellEffects!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Battlegrounds">
            <summary>
              Looks up a localized string similar to Initializing Battlegrounds.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Blackspot_Manager">
            <summary>
              Looks up a localized string similar to Initializing Blackspot Manager.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Flight_Paths">
            <summary>
              Looks up a localized string similar to Initializing Flight Paths.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Navigator">
            <summary>
              Looks up a localized string similar to Initializing Navigator.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Plugins">
            <summary>
              Looks up a localized string similar to Initializing Plugins.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Routines">
            <summary>
              Looks up a localized string similar to Initializing Routines.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Initializing_Spell_Manager">
            <summary>
              Looks up a localized string similar to Initializing Spell Manager.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Inner___0_">
            <summary>
              Looks up a localized string similar to Inner: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.integral">
            <summary>
              Looks up a localized string similar to integral.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Invalid_path_specified_in_DynamicLoader_constructor_">
            <summary>
              Looks up a localized string similar to Invalid path specified in DynamicLoader constructor..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Invalid_Routine">
            <summary>
              Looks up a localized string similar to Invalid Routine.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Invalid_tilemap_for_map__0__received_from_server__Attempting_to_continue_">
            <summary>
              Looks up a localized string similar to Invalid tilemap for map {0} received from server. Attempting to continue..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Inventory">
            <summary>
              Looks up a localized string similar to Inventory.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.IsUnderground__Invalid_Executor_">
            <summary>
              Looks up a localized string similar to IsUnderground: Invalid Executor..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.It_appears_that___0___is_corrupt___If_the_bot_doesn_t_move_in_the_next_few_minutes__exit_Honorbuddy__delete_your_meshes_folder_and_try_again_">
            <summary>
              Looks up a localized string similar to It appears that &apos;{0}&apos; is corrupt.  If the bot doesn&apos;t move in the next few minutes, exit Honorbuddy, delete your meshes folder and try again..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Learned_Updated_Flight_Path_Information">
            <summary>
              Looks up a localized string similar to Learned/Updated Flight Path Information.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Loading__0_">
            <summary>
              Looks up a localized string similar to Loading {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Loading_memory_management___tables">
            <summary>
              Looks up a localized string similar to Loading memory management &amp; tables.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Loading_Spells">
            <summary>
              Looks up a localized string similar to Loading Spells.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Loading_Tile_s">
            <summary>
              Looks up a localized string similar to Loading Tile/s.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Logging_of_exception_failed">
            <summary>
              Looks up a localized string similar to Logging of exception failed.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Login_failed_">
            <summary>
              Looks up a localized string similar to Login failed!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Mailing__0_">
            <summary>
              Looks up a localized string similar to Mailing {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Missing_attribute__0__in___1____2_">
            <summary>
              Looks up a localized string similar to Missing attribute {0} in &quot;{1}&quot;.{2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Missing_subelement__0__in___1___">
            <summary>
              Looks up a localized string similar to Missing subelement {0} in &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Mounting___0_">
            <summary>
              Looks up a localized string similar to Mounting: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Navmesh_data_for_single_mesh_map__0__could_not_be_found_">
            <summary>
              Looks up a localized string similar to Navmesh data for single mesh map {0} could not be found..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Need_at_least_three_vertices_for_triangulation">
            <summary>
              Looks up a localized string similar to Need at least three vertices for triangulation.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.New_spells_available_at_the_trainer__">
            <summary>
              Looks up a localized string similar to New spells available at the trainer: .
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.NewBotAdded">
            <summary>
              Looks up a localized string similar to New bot added!: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No__0__in_bags_">
            <summary>
              Looks up a localized string similar to No {0} in bags!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No_grind_or_quest_hotspots_have_been_defined_">
            <summary>
              Looks up a localized string similar to No grind or quest hotspots have been defined!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No_hotspots_have_been_defined_">
            <summary>
              Looks up a localized string similar to No hotspots have been defined!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No_points_in_list_">
            <summary>
              Looks up a localized string similar to No points in list!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No_profile_is_loaded_">
            <summary>
              Looks up a localized string similar to No profile is loaded!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No_suitable_grind_or_quest_hotspots_in__0__">
            <summary>
              Looks up a localized string similar to No suitable grind or quest hotspots in {0}..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.No_suitable_hotspots_in__0__">
            <summary>
              Looks up a localized string similar to No suitable hotspots in {0}..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.NoHotspotsCreatedForQuest">
            <summary>
              Looks up a localized string similar to Could not generate any hotspots for quest {0}. Please place a quest override for this quest..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Not_enough_money_to_buy__0_">
            <summary>
              Looks up a localized string similar to Not enough money to buy {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.NotAvailable">
            <summary>
              Looks up a localized string similar to N/A.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.NotInGame">
            <summary>
              Looks up a localized string similar to Not in game.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Objective_info_is_missing_type_">
            <summary>
              Looks up a localized string similar to Objective info is missing type!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.PacketReceived">
             <summary>
               Looks up a localized string similar to Packet Received!!
            .
             </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Please_purchase_Honorbuddy_">
            <summary>
              Looks up a localized string similar to Please purchase Honorbuddy..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Please_purchase_Honorbuddy___">
            <summary>
              Looks up a localized string similar to Please purchase Honorbuddy....
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Please_purchase_Honorbuddy_to_use__0__">
            <summary>
              Looks up a localized string similar to Please purchase Honorbuddy to use {0}..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Please_try_again_in_a_few_minutes">
            <summary>
              Looks up a localized string similar to Please try again in a few minutes.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Please_visit_http___www_honorbuddy_com_to_buy_Honorbuddy_">
            <summary>
              Looks up a localized string similar to Please visit http://www.honorbuddy.com to buy Honorbuddy..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Plugin_from__0__could_not_be_compiled__Compiler_errors_">
            <summary>
              Looks up a localized string similar to Plugin from {0} could not be compiled! Compiler errors:.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.PluginManagerEx_has_not_been_started_">
            <summary>
              Looks up a localized string similar to PluginManagerEx has not been started..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.positive_integral">
            <summary>
              Looks up a localized string similar to positive integral.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.PostMessage___0_">
            <summary>
              Looks up a localized string similar to PostMessage: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Queueing_up__0_">
            <summary>
              Looks up a localized string similar to Queueing up {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Received_error_code_from_mesh_server_when_attempting_to_download__0____1_">
            <summary>
              Looks up a localized string similar to Received error code from mesh server when attempting to download {0}: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Received_error_code_from_mesh_server_when_attempting_to_download__0__trimesh___1_">
            <summary>
              Looks up a localized string similar to Received error code from mesh server when attempting to download {0}.trimesh: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Received_error_code_from_mesh_server_when_attempting_to_get_tile_map_for__0____1_">
            <summary>
              Looks up a localized string similar to Received error code from mesh server when attempting to get tile map for {0}: {1}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Remoting_client_started_">
            <summary>
              Looks up a localized string similar to Remoting client started!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Remoting_server_started_">
            <summary>
              Looks up a localized string similar to Remoting server started!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Resting_">
            <summary>
              Looks up a localized string similar to Resting..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Restocked">
            <summary>
              Looks up a localized string similar to Restocked.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.RetrievingCurrentDateTime">
             <summary>
               Looks up a localized string similar to 
            Retriving current Date Time....
             </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Script_files_must_have_a__cs_or__vb_extension__for_C__or_Visual_Basic_NET_respectively_">
            <summary>
              Looks up a localized string similar to Script files must have a .cs or .vb extension, for C# or Visual Basic.NET respectively..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.SendingCurrentDateTeime">
             <summary>
               Looks up a localized string similar to 
            Sending current Date Time...
            .
             </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.settarget_failed_">
            <summary>
              Looks up a localized string similar to settarget failed..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Setting__0__has_invalid_value___1___">
            <summary>
              Looks up a localized string similar to Setting {0} has invalid value &quot;{1}&quot;!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Settings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Settings_SotA_Area_to___0_">
            <summary>
              Looks up a localized string similar to Settings SotA Area to: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Something_is_messed_up__we_didn_t_attach_all_of_our_items_">
            <summary>
              Looks up a localized string similar to Something is messed up, we didn&apos;t attach all of our items!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Spell_book_built">
            <summary>
              Looks up a localized string similar to Spell book built.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Stat_name__0__is_unknown__Please_report_this_to_the_HB_team_">
            <summary>
              Looks up a localized string similar to Stat name {0} is unknown! Please report this to the HB team..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Stop_and_dismount___">
            <summary>
              Looks up a localized string similar to Stop and dismount....
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Stuck_for_too_long_at_the_same_spot__Logging_out_of_game">
            <summary>
              Looks up a localized string similar to Stuck for too long at the same spot. Logging out of game.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.SwitchedFromFmtToFmt">
            <summary>
              Looks up a localized string similar to Switched from: {0} to {1}!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Sync_Failed_">
            <summary>
              Looks up a localized string similar to Sync Failed!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Taking_flight_path_to__0_">
            <summary>
              Looks up a localized string similar to Taking flight path to {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.TaxiMap_is_opened__Updating_known_nodes_list_">
            <summary>
              Looks up a localized string similar to TaxiMap is opened! Updating known nodes list..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.The_name_of_the_weight_set_can_not_be_null_or_empty_">
            <summary>
              Looks up a localized string similar to The name of the weight set can not be null or empty!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.The_server_is_either_down__or_too_busy_to_process_the_request">
            <summary>
              Looks up a localized string similar to The server is either down, or too busy to process the request.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.The_settings_file_does_not_match_the_type_that_is_being_loaded__Root_name_is___0____expected___1___">
            <summary>
              Looks up a localized string similar to The settings file does not match the type that is being loaded! Root name is &quot;{0}&quot;, expected &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.The_unique_key_is_not_contained_in_the_cache_">
            <summary>
              Looks up a localized string similar to The unique key is not contained in the cache..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.This_function_only_takes_vaues_from_0_5">
            <summary>
              Looks up a localized string similar to This function only takes vaues from 0-5.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.This_map_does_not_use_a_single_navmesh_">
            <summary>
              Looks up a localized string similar to This map does not use a single navmesh!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.This_mount_is_not_supported_">
            <summary>
              Looks up a localized string similar to This mount is not supported..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.This_profile_does_not_contain_any_profiles_fitting_the_character_">
            <summary>
              Looks up a localized string similar to This profile does not contain any profiles fitting the character!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Tilemap_is_null_">
            <summary>
              Looks up a localized string similar to Tilemap is null!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Took_Flight_Path">
            <summary>
              Looks up a localized string similar to Took Flight Path.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Trying_to_loot___0__of__1__Rarity__2__3_">
            <summary>
              Looks up a localized string similar to Trying to loot #{0} of {1} Rarity:{2}{3}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Unable_to_load_new_profile__file_not_found_">
            <summary>
              Looks up a localized string similar to Unable to load new profile, file not found!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Unknown_attribute___0____Input____1____in___2____3_">
            <summary>
              Looks up a localized string similar to Unknown attribute &quot;{0}&quot; (Input: &quot;{1}&quot;) in &quot;{2}&quot;!{3}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Unknown_DLL_Loaded__">
            <summary>
              Looks up a localized string similar to Unknown DLL Loaded: .
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Unknown_tag___0____Input____1____in___2____3_">
            <summary>
              Looks up a localized string similar to Unknown tag &quot;{0}&quot; (Input: &quot;{1}&quot;) in &quot;{2}&quot;!{3}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Updated__0___1___2__trimesh">
            <summary>
              Looks up a localized string similar to Updated {0}_{1}_{2}.trimesh.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Updated__0__trimesh">
            <summary>
              Looks up a localized string similar to Updated {0}.trimesh.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Updating__0_">
            <summary>
              Looks up a localized string similar to Updating {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Use_health_potion_">
            <summary>
              Looks up a localized string similar to Use health potion..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Use_mana_potion_">
            <summary>
              Looks up a localized string similar to Use mana potion..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.User_stopped_the_bot_and_ThreadAbortException_was_thrown__This_is_a_good_thing_">
            <summary>
              Looks up a localized string similar to Stop Button pressed. User has stopped the bot..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Valid_attributes_are__">
            <summary>
              Looks up a localized string similar to Valid attributes are: .
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Valid_tags_are__">
            <summary>
              Looks up a localized string similar to Valid tags are: .
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Valid_values_are__">
            <summary>
              Looks up a localized string similar to Valid values are: .
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Value___0___in___1___attribute_is_not_supported__Expected__2__type__3_">
            <summary>
              Looks up a localized string similar to Value &quot;{0}&quot; in &quot;{1}&quot; attribute is not supported! Expected {2} type.{3}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Value___0___in___1___is_not_supported__2_">
            <summary>
              Looks up a localized string similar to Value &quot;{0}&quot; in &quot;{1}&quot; is not supported!{2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Value___0___in___1___tag_is_not_supported__Expected__2__type__3_">
            <summary>
              Looks up a localized string similar to Value &quot;{0}&quot; in &quot;{1}&quot; tag is not supported! Expected {2} type.{3}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Vendor_does_not_sell_food_or_water___Or_none_could_be_found__Blacklisting_it_">
            <summary>
              Looks up a localized string similar to Vendor does not sell food or water. (Or none could be found) Blacklisting it!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Waiting_for_other_HB">
            <summary>
              Looks up a localized string similar to Waiting for other HB.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Waiting_for_other_HB_">
            <summary>
              Looks up a localized string similar to Waiting for other HB..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Waiting_on_taxi___">
            <summary>
              Looks up a localized string similar to Waiting on taxi....
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.WARDEN_HAS_UPDATED_SO_STOPPING_BOTTING_AND_KILLING_WOW_">
            <summary>
              Looks up a localized string similar to WARDEN HAS UPDATED SO STOPPING BOTTING AND KILLING WOW!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning___0_">
            <summary>
              Looks up a localized string similar to Warning: {0}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning___Factions__has_been_moved_to_the__GrindArea___Please_reflect_this_change_in_your_profiles_">
            <summary>
              Looks up a localized string similar to Warning: &apos;Factions&apos; has been moved to the &apos;GrindArea&apos;. Please reflect this change in your profiles..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning___navmesh_could_not_be_loaded__Disabling_hotspot_at___0____1__">
            <summary>
              Looks up a localized string similar to Warning - navmesh could not be loaded. Disabling hotspot at &lt;{0}, {1}&gt;.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning___TargetMaxLevel__has_been_moved_to__GrindArea___Please_reflect_this_change_in_your_profiles_">
            <summary>
              Looks up a localized string similar to Warning: &apos;TargetMaxLevel&apos; has been moved to &apos;GrindArea&apos;. Please reflect this change in your profiles..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning___TargetMinLevel__has_been_moved_to__GrindArea___Please_reflect_this_change_in_your_profiles_">
            <summary>
              Looks up a localized string similar to Warning: &apos;TargetMinLevel&apos; has been moved to &apos;GrindArea&apos;. Please reflect this change in your profiles..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Warning__Max_polygon_count_exceeded_while_applying_blackspot__0__with_radius__1___2_">
            <summary>
              Looks up a localized string similar to Warning: Max polygon count exceeded while applying blackspot {0} with radius {1}.{2}.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.We_either_outleveled_the_currently_loaded_profile__or_something_has_gone_terribly_wrong__Can_t_find_a_new__sub_profile_to_use_">
            <summary>
              Looks up a localized string similar to We either outleveled the currently loaded profile, or something has gone terribly wrong. Can&apos;t find a new (sub)profile to use!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.We_leveled_up__Checking_if_we_need_to_switch_profiles_">
            <summary>
              Looks up a localized string similar to We leveled up! Checking if we need to switch profiles..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.WoW_cannot_be_minimized_while_running_Honorbuddy_">
            <summary>
              Looks up a localized string similar to WoW cannot be minimized while running Honorbuddy!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.Wow_exited__Honorbuddy_stopped_">
            <summary>
              Looks up a localized string similar to Wow exited, Honorbuddy stopped!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_can_not_attach_more_than_12_items_">
            <summary>
              Looks up a localized string similar to You can not attach more than 12 items!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_can_t_mount_here_">
            <summary>
              Looks up a localized string similar to You can&apos;t mount here..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_did_not_specify_the_ID_of_the_game_object_in_the_UseObject_element_">
            <summary>
              Looks up a localized string similar to You did not specify the ID of the game object in the UseObject element!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_did_not_specify_the_ID_of_the_item_in_the_CollectItem_objective_">
            <summary>
              Looks up a localized string similar to You did not specify the ID of the item in the CollectItem objective!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_did_not_specify_the_ID_of_the_mob_in_the_KillMob_objective_">
            <summary>
              Looks up a localized string similar to You did not specify the ID of the mob in the KillMob objective!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_have_not_selected_a_mesh_folder__Please_check_your_settings_and_set_a_mesh_folder_before_starting_Honorbuddy_">
            <summary>
              Looks up a localized string similar to You have not selected a mesh folder! Please check your settings and set a mesh folder before starting Honorbuddy..
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_have_placed_the__Z__attribute_before_the__X__and__Y__attribute_">
            <summary>
              Looks up a localized string similar to You have placed the &apos;Z&apos; attribute before the &apos;X&apos; and &apos;Y&apos; attribute!.
            </summary>
        </member>
        <member name="P:Styx.Resources.StyxResources.You_need_to_buy_Honorbuddy_to_use_over_level_20_">
            <summary>
              Looks up a localized string similar to You need to buy Honorbuddy to use over level 20..
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.DBC.AreaTable">
            <summary>Represents a area within wow.</summary>
        </member>
        <member name="M:Styx.WoWInternals.DBC.AreaTable.#ctor(System.UInt32)">
            <summary>Constructor.</summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.IsValid">
            <summary>Returns a <c>bool</c> indicating if this is a valid object.</summary>
            <value><c>true</c> if this map is valid, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.AreaId">
            <summary>The area id.</summary>
            <value>The identifier of the area.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.MapId">
            <summary>The map id.</summary>
            <value>The identifier of the map.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.ParentMap">
            <summary>The parent map of this area.</summary>
            <value>The map.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.ParentAreaId">
            <summary>The map id.</summary>
            <value>The identifier of the map.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.ExplorationLevel">
            <summary>The exploration level.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.AreaTable.AreaName">
            <summary>The name of the area.</summary>
            <value>The name.</value>
        </member>
        <member name="T:Styx.WoWInternals.DBC.LfgDungeonExpansion">
            <summary>Represents a dungeon expansion.</summary>
        </member>
        <member name="M:Styx.WoWInternals.DBC.LfgDungeonExpansion.#ctor(System.UInt32)">
            <summary>Constructor.</summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.IsValid">
            <summary>Returns a <c>bool</c> indicating if this is a valid object.</summary>
            <value><c>true</c> if this map is valid, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.Id">
            <summary>The id of this dungeon expansion entry.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.LfgId">
            <summary>The lfg id of this dungeon expansion.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.ExpansionLevel">
            <summary>The expansion level of this dungeon expansion.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.RandomId">
            <summary>The random id of this dungeon expansion.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.HardLevelMin">
            <summary>The minimum hard level of this dungeon expansion.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.HardLevelMax">
            <summary>The maximum hard level of this dungeon expansion.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.TargetLevelMin">
            <summary>The target level min of this dungeon expansion.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeonExpansion.TargetLevelMax">
            <summary>The target level max of this dungeon expansion.</summary>
            <value>The level.</value>
        </member>
        <member name="T:Styx.WoWInternals.DBC.LfgDungeons">
            <summary>Respresent a dungeon.</summary>
        </member>
        <member name="M:Styx.WoWInternals.DBC.LfgDungeons.#ctor(System.UInt32)">
            <summary>Constructor.</summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.IsValid">
            <summary>Returns a <c>bool</c> indicating if this is a valid object.</summary>
            <value><c>true</c> if this map is valid, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Id">
            <summary>The id of this dungeon.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Name">
            <summary>The name of this dungeon.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.MinLevel">
            <summary>The earliest level you can enter this dungeon (using the portal, not LFD).</summary>
            <value>The minimum level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.MaxLevel">
            <summary>The highest level you can enter this dungeon (using the portal, not LFD)</summary>
            <value>The max level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.RecommendedLevel">
            <summary>The recommended level to queue for this dungeon.</summary>
            <value>The recommended level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.QueueMinLevel">
            <summary>The earliest level you can queue up for the dungeon.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.QueueMaxLevel">
            <summary>The highest level you can queue up for the dungeon.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.MapId">
            <summary>The mapid of this dungeon.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Map">
            <summary>The <see cref="P:Styx.WoWInternals.DBC.LfgDungeons.Map"/> object for this dungeon.</summary>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Difficulty">
            <summary>The difficulty - 0 for normal 1 for heroic.</summary>
            <value>The difficulty.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Flags">
            <summary>The flags of this dungeon</summary>
            <value>The flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.IsHolidayEvent">
            <summary>Returns a value indicating if this is a holiday event.</summary>
            <value><c>true</c> if this is a holiday event, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.TypeId">
            <summary>The typeid of this dungeon.</summary>
            <value>The typeid.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.FactionId">
            <summary>The faction id of this dungeon.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Faction">
            <summary>The faction of this dungeon.</summary>
            <value>The faction.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.TextureFilename">
            <summary>The texturefilename of this dungeon.</summary>
            <value>The filename.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.ExpansionId">
            <summary>The expansion id of this dungeon.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.OrderIndex">
            <summary>The order index of this dungeon.</summary>
            <value>The index.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.GroupId">
            <summary>The group id of this dungeon.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.LfgDungeons.Description">
            <summary>The description of this dungeon.</summary>
            <value>The description.</value>
        </member>
        <member name="T:Styx.WoWInternals.DBC.Map">
            <summary>Represents a Map dbc entry.</summary>
        </member>
        <member name="M:Styx.WoWInternals.DBC.Map.#ctor(System.UInt32)">
            <summary>Constructor.</summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Styx.WoWInternals.DBC.Map.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsValid">
            <summary>Returns a <c>bool</c> indicating if this is a valid object.</summary>
            <value><c>true</c> if this map is valid, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.MapId">
            <summary>The map id.</summary>
            <value>The identifier of the map.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.InternalName">
            <summary>The name of this map.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.MapType">
            <summary>The <c>MapType</c> for this <see cref="T:Styx.WoWInternals.DBC.Map"/></summary>
            <value>The map type.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.MapFlags">
            <summary>The flags of this <see cref="T:Styx.WoWInternals.DBC.Map"/></summary>
            <value>The map flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsBattleground">
            <summary>Returns a value incidating if this is a battleground.</summary>
            <value><c>true</c> if this is a battleground, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.Name">
            <summary>The name of this map.</summary>
            <value>THe name</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.AreaTableId">
            <summary>The area table id of this map.</summary>
            <value>The area table identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.MapDescription">
            <summary>The description of this map</summary>
            <value>The description.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.MapDescription2">
            <summary>The description 2 of this map.</summary>
            <value>The description.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.LoadingScreenId">
            <summary>The loading screen id, referes to LoadingScreens.dbc</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.BattlefieldMapIconScale">
            <summary>The battlefield map icon scale.</summary>
            <value>The scale.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.GhostEntranceMap">
            <summary>The ghost entrance map.</summary>
            <value>The ghost entrance map object.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.GhostEntranceLocation">
            <summary>The ghost entrance location</summary>
            <value>The location.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.TimeOfDayOverride">
            <summary>The time of day override.</summary>
            <value>The override.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.ExpansionId">
            <summary>The expansion id.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.RaidOffset">
            <summary>The raid offset.</summary>
            <value>The offset.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.MaxPlayers">
            <summary>The max players of this map, usally only valid in battlegrounds.</summary>
            <value>The max players.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsArena">
            <summary>Returns a value incidating if this is a arena.</summary>
            <value><c>true</c> if this is a arena, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsInstance">
            <summary>Returns a value incidating if this is a instance, (not raid).</summary>
            <value><c>true</c> if this is a instance, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsRaid">
            <summary>Returns a value incidating if this is a raid.</summary>
            <value><c>true</c> if this is a raid, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsDungeon">
            <summary>Returns a value incidating if this is a dungeon, (raid or instance).</summary>
            <value><c>true</c> if this is a dungeon, (raid or instance), <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsMountAllowed">
            <summary>Returns a value incidating if it's allowed to mount in this dungeon.</summary>
            <value><c>true</c> if it's allowed, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.Map.IsContinent">
            <summary>Returns a value incidating if this is one of the major continents.</summary>
            <value><c>true</c> if it's a continent, <c>false</c> otherwise.</value>
        </member>
        <member name="T:Styx.WoWInternals.DBC.MapDifficulty">
            <summary>Represents a map difficulty record.</summary>
        </member>
        <member name="M:Styx.WoWInternals.DBC.MapDifficulty.#ctor(System.UInt32)">
            <summary>Constructor.</summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.IsValid">
            <summary>Returns a <c>bool</c> indicating if this is a valid object.</summary>
            <value><c>true</c> if this map is valid, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.Id">
            <summary>The id of this map difficulty entry.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.MapId">
            <summary>The map id of this dungeon difficulty.</summary>
            <value>The identifier of the map.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.Difficulty">
            <summary>The difficulty of this dungeon difficulty.</summary>
            <value>The difficulty.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.AreaTriggerText">
            <summary>The area trigger text of this map difficulty.</summary>
            <value>The area trigger text.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.RaidDuration">
            <summary>The map id.</summary>
            <value>The identifier of the map.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.MaxPlayers">
            <summary>The max players of this dungeon difficulty.</summary>
            <value>The max players.</value>
        </member>
        <member name="P:Styx.WoWInternals.DBC.MapDifficulty.DifficultyString">
            <summary>The difficulty string of this map difficulty.</summary>
            <value>The difficulty string.</value>
        </member>
        <member name="P:Styx.WoWInternals.LuaEventArgs.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.LuaEventArgs.FireTimeStamp">
            <summary>
            A timestamp corresponding to StyxWoW.Client.PerformanceCounter(), of the exact time the event was fired.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.LuaEventArgs.Args">
            <summary>
            The args that were passed to the event. For basic types like 'double', HB will change them to 'double'. If something is not a number or string, the arg will be a 'LuaTValue'.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.LuaEvents.Wipe">
            <summary>
            Wipes the event table of all contents.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.LuaEvents.AddFilter(System.String,System.String)">
            <summary>Adds a filter to a specified (hooked) Lua event. If a filter cannot be applied (because one is already applied) this function will return false.</summary>
            <remarks>Created 2/8/2011.</remarks>
            <param name="eventName">The name of the event to attach to.</param>
            <param name="filterCode">The filter code - this is LUA code. Use "args" for the event arguments.</param>
            <returns>true if the filter was added, false if another filter is in place already.</returns>
        </member>
        <member name="M:Styx.WoWInternals.LuaEvents.AttachEvent(System.String,Styx.WoWInternals.LuaEventHandlerDelegate)">
            <summary>
            Attaches to a Lua event.
            </summary>
            <param name="eventName">The name of the event to attach to.</param>
            <param name="handler">The handler to attach.</param>
        </member>
        <member name="M:Styx.WoWInternals.LuaEvents.DetachEvent(System.String,Styx.WoWInternals.LuaEventHandlerDelegate)">
            <summary>
            Detaches from a Lua event.
            </summary>
            <param name="eventName">The name of the event to detach from.</param>
            <param name="handler">The handler to detach.</param>
        </member>
        <member name="M:Styx.WoWInternals.LuaEventWait.Wait">
            <summary>
            Waits until the event is fired.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.LuaEventWait.Wait(System.Int32)">
            <summary>
            Waits for a specified time, and returns after the time has elapsed or the event was fired. The return value indicates whether the wait returned because of the event firing, or because of timeout.
            </summary>
            <param name="millisecondsTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.LuaEventWait.Wait(System.TimeSpan)">
            <summary>
            Waits for a specified time, and returns after the time has elapsed or the event was fired. The return value indicates whether the wait returned because of the event firing, or because of timeout.
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="T:Styx.WoWInternals.LuaTable">
            <summary>
            Represents a Lua table.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.LuaTable.GetField(System.String)">
            <summary>
            Gets a field indexed by a string.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.LuaTable.GetField(System.Double)">
            <summary>
            Gets a field indexed by a number. This number can also be a raw index. In that case, it is zero based.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.CalculateAuctionDeposit(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the required deposit for the current selling item given the specified duration 
            </summary>
            <param name="runTime">1=12h, 2=24h, 3=48h</param>
            <param name="stackSize">size of the stack</param>
            <param name="numStacks">number of stacks</param>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.CanCancelAuction(System.Int32)">
            <summary>
            Returns true if auction can be canceled, false otherwise. 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.CancelSell">
            <summary>
            Clears the auction house listing queue, not creating any additional auctions.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.CancelAuction(System.Int32)">
            <summary>
            Cancel the specified auction (on the "owner" list). 
            </summary>
            <param name="index">index of the auction</param>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.ClickAuctionSellItemButton">
            <summary>
            Puts the currently 'picked up' item into the 'create auction' slot. 
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetAuctionHouseDepositRate">
            <summary>
            Returns the deposit rate (percentage) for the currently open auction house
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetNumAuctionItems(Styx.WoWInternals.Misc.AuctionListType,System.Int32@,System.Int32@)">
            <summary>
            Gets the number of auction items in the specified list. For the 'browse' tab, this is the current search.
            </summary>
            <param name="type"></param>
            <param name="batch"></param>
            <param name="totalCount"></param>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetAuction(Styx.WoWInternals.Misc.AuctionListType,System.Int32,Styx.WoWInternals.Misc.WoWAuction@)">
            <summary>
            Gets an auction by index.
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="auction"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetAllBatchAuctions(Styx.WoWInternals.Misc.AuctionListType)">
            <summary>
            Gets all batch auctions in the specified list. For the 'browse' tab, this is the auctions on the current page of the current search.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetOwnedAuctions">
            <summary>
            Get's all auctions owned by the player.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetBidderAuctions">
            <summary>
            Get's all bidder auctions.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.GetListAuctions">
            <summary>
            Get's all auctions listed on the current page in the 'browse' tab.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.AuctionHouse.PostAuction(System.Int64,System.Int64,Styx.WoWInternals.Misc.AuctionPostTime,Styx.WoWInternals.WoWObjects.WoWItem,System.UInt32,System.UInt32)">
            <summary>
            Posts the specified WoWItem as an Auction.
            </summary>
            <param name="minBid">The bid. </param>
            <param name="buyout">The buyout (0 for no buyout). </param>
            <param name="postTime">The posttime - Short = 12 hours, Medium = 24 hours and Long = 48 hours. </param>
            <param name="item">The item to post. </param>
            <param name="stackSize">The stacksize. </param>
            <param name="numStacks">Number of stacks to post. </param>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.CanPerformSearch">
            <summary>
            Returns true if auction search button would be active, false otherwise. 
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.CanPerformGetAllSearch">
            <summary>
            Returns true if auction search button would be active, false otherwise. 
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.NumListAuctions">
            <summary>
            Number of 'list' auctions.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.NumBidderAuctions">
            <summary>
            Number of 'bidder' auctions.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.NumOwnerAuctions">
            <summary>
            Number of 'owner' auctions.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.FullNumBidderAuctions">
            <summary>
            Full number of 'bidder' auctions (all pages)
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.FullNumListAuctions">
            <summary>
            Full number of 'list' auctions (all pages)
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.AuctionHouse.NumListAuctionPages">
            <summary>
            Returns the number of pages for the current search result.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.AuctionPostTime.Short">
            <summary>
            12 Hours
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.AuctionPostTime.Medium">
            <summary>
            24 Hours
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.AuctionPostTime.Long">
            <summary>
            48 Hours
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.AuctionListType.List">
            <summary>
            Auctions the auction house is browsing.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.AuctionListType.Bidder">
            <summary>
            Bids the local player has made.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.AuctionListType.Owner">
            <summary>
            Auctions the local player has posted.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.Misc.WoWAuction">
            <summary>
            Class representing an item on the auction house.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.AuctionId">
            <summary>
            The id of this auction.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.ItemId">
            <summary>
            The itemId of this auction.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.SuffixId">
            <summary>
            The suffix id.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.StackCount">
            <summary>
            The stackcount of this auction.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.PosterGuid">
            <summary>
            The guid of the poster.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.MinBid">
            <summary>
            The starting bid price 
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.MinIncrement">
            <summary>
            The minimum amount of item at which to put the next bid 
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.BuyoutPrice">
            <summary>
            The buyout price, zero if no buy out, otherwise it contains the buyout price of the auction item
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.EndTime">
            <summary>
            The time variable used by wow to calculate the duration left on this auction.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.CurrentBidderGuid">
            <summary>
            Guid of the current bidder
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.Misc.WoWAuction.CurrentBid">
            <summary>
            The current bid on this item.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWAuction.IsSold">
            <summary>
            Returns true if this auction is sold.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWAuction.TimeLeft">
            <summary>
            Time as a <see cref="T:System.TimeSpan"/> when this auction ends.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWAuction.ExpireTime">
            <summary>
            Returns the exact time as a <see cref="T:System.DateTime"/> when this auction ends.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWAuction.ItemInfo">
            <summary>
            Returns detailed info about this item.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWAuction.CanUse">
            <summary>
            Returns true if you can use this item.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWAuction.ItemName">
            <summary>
            The name of this auction.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.Misc.DBC.CreatureFamily">
            <summary>Represents a creature family record.</summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.DBC.CreatureFamily.#ctor(System.UInt32)">
            <summary>Constructor.</summary>
            <param name="creatureFamilyEntry">The creature family entry.</param>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.IsValid">
            <summary>
            Returns true if this instance of the <see cref="T:Styx.WoWInternals.Misc.DBC.CreatureFamily"/> is valid.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.Id">
            <summary>
            The id of this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.MinScale">
            <summary>
            The minimum scale for this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.MinScaleLevel">
            <summary>
            The minimum level for this scale for this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.MaxScale">
            <summary>
            The maximum scale for this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.MaxScaleLevel">
            <summary>
            The maximum level for this scale for this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.Diet">
            <summary>
            The diet for this CreatureFamily, 'Meat', 'Fish', 'Fungus' etc...
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.PetTalentType">
            <summary>
            The PetTalentType for this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.SkillLine">
            <summary>
            Returns skills associated with this CreatureFamily.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.DBC.CreatureFamily.Name">
            <summary>
            The name of this CreatureFamily.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.Stable.GetPet(System.Int32)">
            <summary>
            Gets a stabled pet. Returns null if there is no pet in the slot.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.Stable.GetCarriedPets">
            <summary>
            Gets all pets the player is carrying and that therefore can be summoned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.Stable.GetNonCarriedPets">
            <summary>
            Gets all stabled pets the player is not carrying. None of these pets can be summoned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.Stable.GetPets">
            <summary>
            Gets a list of all stabled pets. This includes carried pets.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.Misc.StabledPet.GetSummonSpellId">
            <summary>
            Gets the spell ID of the spell used to summon this pet if it's summonable. Returns 0 on failure.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.Misc.StabledPet.CanSummon">
            <summary>
            Returns a boolean indicating whether this pet can be summoned (if it's in one of the first 5 slots).
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Misc.StabledPet.PetNumber">
            <summary>
            A unique number for this pet.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Position">
            <summary>Gets the position.</summary>
            <value>The position.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.FieldOfView">
            <summary>Gets the field of view.</summary>
            <value>The field of view.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.NearZ">
            <summary>Gets the near z coordinate.</summary>
            <value>The near z coordinate.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.FarZ">
            <summary>Gets the far z coordinate.</summary>
            <value>The far z coordinate.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Aspect">
            <summary>Gets the aspect ratio. (WoW currently does NOT set this value. It is here for support once we figure out where exactly they store this value)</summary>
            <value>The aspect.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Projection">
            <summary>Gets the projection matrix.</summary>
            <value>The projection.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.World">
            <summary>Gets the world matrix.</summary>
            <value>The world.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.View">
            <summary>Gets the view matrix.</summary>
            <value>The view.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Forward">
            <summary>Gets the forward vector of the camera.</summary>
            <value>The forward.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Right">
            <summary>Gets the right vector of the camera.</summary>
            <value>The right.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Up">
            <summary>Gets the up vector of the camera.</summary>
            <value>The up.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWCamera.Matrix">
            <summary>Gets the matrix of the camera. This is the raw matrix, from which Projection, View, Position, Forward, Right, and Up are calculated from.</summary>
            <value>The matrix.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat">
            <summary>An extended version of the WoWChat class. Exposes much more in terms of availability of chat messages.</summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWChat.WoWChatExMessageHandler(System.Object,Styx.WoWInternals.LuaEventArgs)">
            <summary>Wow chat ex message handler. </summary>
            <remarks>Created 9/23/2010.</remarks>
            <param name="sender">Source of the event.</param>
            <param name="args">Lua event information.</param>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Addon">
            <summary> Event queue for all listeners interested in Addon events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Afk">
            <summary> Event queue for all listeners interested in Afk events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Dnd">
            <summary> Event queue for all listeners interested in Dnd events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.TextEmote">
            <summary> Event queue for all listeners interested in TextEmote events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Emote">
            <summary> Event queue for all listeners interested in Emote events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Whisper">
            <summary> Event queue for all listeners interested in Whisper events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.WhisperTo">
            <summary> Event queue for all listeners interested in WhisperTo events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Battleground">
            <summary> Event queue for all listeners interested in Battleground events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Yell">
            <summary> Event queue for all listeners interested in Yell events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.BattlegroundLeader">
            <summary> Event queue for all listeners interested in BattlegroundLeader events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.AllianceBattleground">
            <summary> Event queue for all listeners interested in AllianceBattleground events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.HordeBattleground">
            <summary> Event queue for all listeners interested in HordeBattleground events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.NeutralBattleground">
            <summary> Event queue for all listeners interested in NeutralBattleground events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.System">
            <summary> Event queue for all listeners interested in System events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Channel">
            <summary> Event queue for all listeners interested in Channel events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Guild">
            <summary> Event queue for all listeners interested in Guild events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.MonsterEmote">
            <summary> Event queue for all listeners interested in MonsterEmote events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.MonsterSay">
            <summary> Event queue for all listeners interested in MonsterSay events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.MonsterYell">
            <summary> Event queue for all listeners interested in MonsterYell events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.MonsterWhisper">
            <summary> Event queue for all listeners interested in MonsterWhisper events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.MonsterParty">
            <summary> Event queue for all listeners interested in MonsterParty events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.RaidBossEmote">
            <summary> Event queue for all listeners interested in RaidBossEmote events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.RaidBossWhisper">
            <summary> Event queue for all listeners interested in RaidBossWhisper events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Officer">
            <summary> Event queue for all listeners interested in Officer events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Party">
            <summary> Event queue for all listeners interested in Party events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.PartyLeader">
            <summary> Event queue for all listeners interested in PartyLeader events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Raid">
            <summary> Event queue for all listeners interested in Raid events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.RaidLeader">
            <summary> Event queue for all listeners interested in RaidLeader events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.RaidWarning">
            <summary> Event queue for all listeners interested in RaidWarning events. </summary>
        </member>
        <member name="E:Styx.WoWInternals.WoWChat.Say">
            <summary> Event queue for all listeners interested in Say events. </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatMessageHandlerEx`1">
            <summary>A simple generic delegate to help simplify chat based events.</summary>
            <remarks>Created 9/23/2010.</remarks>
            <typeparam name="T">.</typeparam>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatAddonEventArgs">
            <summary>Additional information for chat addon events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatMessageBaseEventArgs">
            <summary>Additional information for chat message base events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatAddonEventArgs.Prefix">
            <summary>Gets the prefix.</summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatAddonEventArgs.Message">
            <summary>Gets the message.</summary>
            <value>The message.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatAddonEventArgs.Type">
            <summary>PARTY, RAID, GUILD, BATLEGROUND, or WHISPER</summary>
            <value>The type.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatAddonEventArgs.Sender">
            <summary>Gets the sender.</summary>
            <value>The sender.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatAuthoredEventArgs">
            <summary>Additional information for chat events with an author. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatSimpleMessageEventArgs">
            <summary>Additional information for chat simple message events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatSimpleMessageEventArgs.Message">
            <summary>Gets the message.</summary>
            <value>The message.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatAuthoredEventArgs.Author">
            <summary>Gets the author.</summary>
            <value>The author.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs">
            <summary>Additional information for chat channel specific events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatLanguageSpecificEventArgs">
            <summary>Additional information for chat language specific events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatLanguageSpecificEventArgs.Language">
            <summary>Gets the language.</summary>
            <value>The language.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.ChannelNameWithNumber">
            <summary>Gets the channel name with number.</summary>
            <value>The channel name with number.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.Target">
            <summary>Gets target for the.</summary>
            <value>The target.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.ChatFlags">
            <summary>Gets the chat flags.</summary>
            <value>The chat flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.ZoneFlags">
            <summary>Gets the zone flags.</summary>
            <value>The zone flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.ChannelNumber">
            <summary>Gets the channel number.</summary>
            <value>The channel number.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.ChannelName">
            <summary>Gets the name of the channel.</summary>
            <value>The name of the channel.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatChannelSpecificEventArgs.LineId">
            <summary>Gets the identifier of the line.</summary>
            <value>The identifier of the line.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatGuildEventArgs">
            <summary>Additional information for chat guild events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatGuildEventArgs.Message">
            <summary>Gets the message.</summary>
            <value>The message.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatGuildEventArgs.Author">
            <summary>Gets the author.</summary>
            <value>The author.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatGuildEventArgs.Language">
            <summary>Gets the language.</summary>
            <value>The language.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatMonsterEventArgs">
            <summary>Additional information for chat monster events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatMonsterEventArgs.Message">
            <summary>Gets the message.</summary>
            <value>The message.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatMonsterEventArgs.MonsterName">
            <summary>Gets the name of the monster.</summary>
            <value>The name of the monster.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatMonsterSayEventArgs">
            <summary>Additional information for chat monster say events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatMonsterSayEventArgs.Language">
            <summary>Gets the language.</summary>
            <value>The language.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatMonsterSayEventArgs.Receiver">
            <summary>Gets the receiver.</summary>
            <value>The receiver.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWChat.ChatWhisperEventArgs">
            <summary>Additional information for chat whisper events. </summary>
            <remarks>Created 9/23/2010.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatWhisperEventArgs.Status">
            <summary>Gets the status.</summary>
            <value>The status.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWChat.ChatWhisperEventArgs.MessageId">
            <summary>Gets the identifier of the message.</summary>
            <value>The identifier of the message.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWCurrency">
            <summary>
            Provides information on a specific currency.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWCurrency.GetCurrencyById(System.UInt32)">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWCurrency"/> object containing detailed info on a specific currency.
            </summary>
            <param name="id">id of the currency</param>
        </member>
        <member name="M:Styx.WoWInternals.WoWCurrency.GetCurrencyByType(Styx.WoWInternals.WoWCurrencyType)">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWCurrency"/> object containing detailed info on a specific currency. 
            </summary>
            <param name="type">currency type, check the <see cref="T:Styx.WoWInternals.WoWCurrencyType"/> enumeration for different types. </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWCurrency.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.IsValid">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWCurrency"/> object is valid.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.Entry">
            <summary>
            The dbc entry of this WoWCurrency.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.Name">
            <summary>
            The localized name of this currency.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.CurrencyCategoryEntry">
            <summary>
            The currency-category dbc entry of this WoWCurrency.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.Amount">
            <summary>
            The amount of currency.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.TotalMax">
            <summary>
            The total max amount of currency.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.WeeklyMax">
            <summary>
            The amount of currency you can get in a week.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWCurrency.CurrencyType">
            <summary>
            The type of currency.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.ChampionSeal">
            <summary>
            Champion's Seals are the currency rewarded and used at the Argent Tournament.
            They are accumulated by completing Argent Tournament daily quests, and can be exchanged with your faction's quartermasters for various rewards.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.ChefsAward">
            <summary>
            Chef's Awards are currency related to the Cooking skill. They can be earned by completing daily cooking quests in your faction's home city (Stormwind City / Orgrimmar).
            They can be used to purchase new cooking recipes from the Sous Chef in your home city.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.ConquestPoints">
            <summary>
            Conquest Points are the higher tier of PvP content rewards. They are earned from doing ranked arena matches and rated battlegrounds.
            The lower tier currency, Honor Points, is earned from un-rated battlegrounds, un-ranked arena matches, honorable kills, and controlling Wintergrasp.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.DalaranCookingAward">
            <summary>
            Dalaran Cooking Awards are rewarded from level 80 daily cooking quests in Dalaran.
            They can be used to purchase level 400-450 cooking recipes, as well as Northern Spices and the mighty Chef's Hat.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.DalaranJewelcraftersToken">
            <summary>
            Dalaran Jewelcrafter's Tokens are rewarded from level 80 jewelcrafting daily quests in Dalaran.
            They can be used to purchase level 370-450 jewelcrafting designs.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.DraeneiArchaeologyFragment">
            <summary>
            Draenei Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Draenei fragments are all found in Outland.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.DwarfArchaeologyFragment">
            <summary>
            Dwarf Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Dwarf fragments are found in centers of historical dwarven habitation, such as the Badlands, the Wetlands, and Loch Modan.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.FossilArchaeologyFragment">
            <summary>
            Fossil Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Fossil fragments are usually found in locations such as Un'Goro Crater and Desolace.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.HonorPoints">
            <summary>
            Honor Points are the lower tier of PvP content rewards. They have replaced all forms of pre 4.0 PvP rewards.
            You can earn Honor Points from non-rated battlegrounds, unranked arenas, honorable kills, or from controlling Wintergrasp.
            Rated battlegrounds and ranked arenas reward Conquest Points instead.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.IllustriousJewelcrafterToken">
            <summary>
            Illustrious Jewelcrafter's Tokens are rewarded from faction-based daily quests in your factions home city (Stormwind City / Orgrimmar)
            They can be used to purchase level 465-525 jewelcrafting designs from your faction's quartermaster.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.JusticePoints">
            <summary>
            Justice Points are a type of currency that is rewarded via participating in instanced PvE content, such as dungeons and raids, and is used to purchase tier sets.
            Justice Points are the lower of the two tiers of PvE rewards, and are rewarded for completing your first random normal dungeon each day, as well as for defeating heroic bosses. Raid bosses, as well as the your first random heroic each day, reward Valor Points.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.MarkoftheWorldTree">
            <summary>
            Mark of the World Tree is the currency that will be used to unlock the The Regrowth and Molten Front Daily Quest Hubs at the player's discretion.
            The currency will be rewarded in small amounts from the daily quests in the zone (similar to Champion's Seals) and will be spendable by the player in some manner in order to unlock more dailies and/or cause further storyline progression to occur.
            This way players can experience the story and phasing at their own pace, rather than on a timeline or the pace of the rest of the sever.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.NerubianArchaeologyFragment">
            <summary>
            Nerubian Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Nerubian fragments are all found in Northrend, typically in areas of Nerubian habitation such as Dragonblight.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.NightElfArchaeologyFragment">
            <summary>
            Night Elf Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Night elf fragments are typically found in areas such as Ashenvale and Darkshore.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.OrcArchaeologyFragment">
            <summary>
            Orc Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Orc fragments are exclusively found in Outland, particularly in areas such as Nagrand. If this confuses you, remember that orcs are native to Outland—they invaded Azeroth through the dark portal in the First War, detailed in the original Warcraft: Orcs and Humans.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.TolBaradCommendation">
            <summary>
            Tol Barad Commendations are the currency rewarded for completing daily quests in Tol Barad. These quests are unlocked when your faction controls the zone.
            Tol Barad Commendations can be used to purchase rewards from your faction's Tol Barad Quartermaster.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.TolvirArchaeologyFragment">
            <summary>
            Tol'vir Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Tol'vir fragments are exclusively found in level 80+ zones in Azeroth, particularly in areas such as Uldum.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.TrollArchaeologyFragment">
            <summary>
            Troll Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Troll fragments are frequently found in areas such as The Hinterlands and Stranglethorn Vale.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.ValorPoints">
            <summary>
            Valor Points are a type of currency that is rewarded via participating in instanced PvE content, such as dungeons and raids, and is used to purchase tier sets.
            Valor Points are the higher of the two tiers of PvE rewards, 
            and are rewarded for completing your first random heroic dungeon each day, as well as for defeating raid bosses. 
            Heroic bosses, as well as the your first random normal dungeon each day, reward Justice Points.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWCurrencyType.VrykulArchaeologyFragment">
            <summary>
            Vrykul Archaeology Fragments are discovered via the Survey ability in Archaeology. They are gathered via surveying, saved up, and used to create the items listed below.
            Vrykul fragments are exclusively found in Northrend, especially in areas such as Howling Fjord and Icecrown.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.Pulse">
            <summary>
            Pulses this instance.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.CalculatePointFrom(Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            Calculates a point at a given distance from the target point, using the local players position as the start position.
            </summary>
            <param name="target">The target.</param>
            <param name="distance">The distance.</param>
            <returns>The point.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(System.Single,System.Single,System.Single)">
            <summary>
            Uses Click-To-Move to move to a point in-game.
            </summary>
            <param name="x">The X unit of the point.</param>
            <param name="y">The Y unit of the point.</param>
            <param name="z">The Z unit of the point.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            Uses Click-To-Move to move to a point ingame. An additional parameter defines at what distance to the point the click is performed.
            </summary>
            <param name="point">The destination point.</param>
            <param name="distance">The distance to the destination point to move to - if you want to stop at 5 yards before reaching the destination, you would specify 5 here.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Uses Click-To-Move to move to a point in-game.
            </summary>
            <param name="point">The destination point.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(System.UInt64,Styx.Logic.Pathing.WoWPoint,Styx.WoWInternals.WoWMovement.ClickToMoveType)">
            <summary>
            Uses Click-To-Move to perform in-game interaction.
            </summary>
            <param name="guid">The GUID.</param>
            <param name="loc">The loc.</param>
            <param name="type">The type.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(System.UInt64,Styx.WoWInternals.WoWMovement.ClickToMoveType)">
            <summary>
            Uses Click-To-Move to perform object based in-game interaction.
            </summary>
            <param name="guid">The GUID.</param>
            <param name="type">The type.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(System.UInt64,Styx.Logic.Pathing.WoWPoint,System.Single,Styx.WoWInternals.WoWMovement.ClickToMoveType)">
            <summary>
            Uses Click-To-Move to move to a point in-game.
            </summary>
            <param name="guid">.</param>
            <param name="loc">.</param>
            <param name="facing">The facing.</param>
            <param name="type">.</param>
            <remarks>
            Created 12/9/2010.
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.GetHeadingDiff(System.Double,System.Double,System.Double@,System.Int32@)">
            <summary>
            Finds the heading different of two different headings.
            </summary>
            <param name="currentHeading">The current heading.</param>
            <param name="destHeading">The dest heading.</param>
            <param name="headingDiff">The heading diff.</param>
            <param name="directionCoeff">The direction coeff.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.Face(System.UInt64,System.Boolean)">
            <summary>
            Faces an object by GUID of the object.
            </summary>
            <param name="guid">The GUID of the object to face.</param>
            <param name="stop">Whether to stop the facing after it's done; if false it will keep facing the GUID until told to stop (constant facing).</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.Face(System.UInt64)">
            <summary>
            Faces an object based on GUID.
            </summary>
            <param name="guid">The GUID of the object.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.Face">
            <summary>
            Constant faces the target using CTM.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.StopFace">
            <summary>
            Stops facing the current target.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ConstantFace(System.UInt64)">
            <summary>
            Faces an object by GUID, and keeps facing it until told to stop.
            </summary>
            <param name="guid">GUID of the object to face.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ConstantFaceStop(System.UInt64)">
            <summary>
            Stops constant facing a
            </summary>
            <param name="guid">GUID of object to stop facing</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.Move(Styx.WoWInternals.WoWMovement.MovementDirection,System.TimeSpan)">
            <summary>
            Moves the specified dir.
            </summary>
            <param name="dir">The dir.</param>
            <param name="time">The time.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.Move(Styx.WoWInternals.WoWMovement.MovementDirection)">
            <summary>
            Sets a control bit
            </summary>
            <param name="direction">The direction.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.MoveStop(Styx.WoWInternals.WoWMovement.MovementDirection)">
            <summary>
            Unsets a control bit flag
            </summary>
            <param name="direction">The direction.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.MoveStop">
            <summary>
            Makes you stop moving
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ToggleControlBits(Styx.WoWInternals.WoWMovement.MovementDirection,System.Boolean)">
            <summary>
            Toggles the control bits.
            </summary>
            <param name="dir">The dir.</param>
            <param name="stop">if set to <c>true</c> [stop].</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.SetFacing(System.Single)">
            <summary>
            Sets the facing.
            </summary>
            <param name="facingInRadians">The facing in radians.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.AddToggleControlBitASM(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Adds ASM for toggle control bit.
            </summary>
            <param name="this">The @this.</param>
            <param name="flag">The flag.</param>
            <param name="enable">The enable.</param>
            <param name="unk">The unk.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMove(Styx.WoWInternals.WoWMovement.ClickToMoveType,System.UInt64,Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            Uses WoW's ingame Click-To-Move feature to interact with the perform interaction in the in-game world.
            </summary>
            <param name="clickToMoveType">Type of the click to move.</param>
            <param name="guid">The GUID.</param>
            <param name="clickPos">The click pos.</param>
            <param name="facing">The facing.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMoveStop">
            <summary>
            Clicks to move stop.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWMovement.ClickToMoveInfo">
            <summary>
            Provides information about the current click to move.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWMovement.ActiveMoverGuid">
            <summary>
            Gets the active mover GUID.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWMovement.ActiveMover">
            <summary>
            Gets the active mover.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWMovement.IsFacing">
            <summary>
            Returns a value indicating if you current are constant facing with CTM.
            </summary>
            <value>
            	<c>true</c> if you current are constant facing with CTM <c>false</c> otherwise.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWMovement.ActiveInputControlPtr">
            <summary>
            Returns a pointer of the current active input control in WoW.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWMovement.ActiveInputControl">
            <summary>
            The current active input control.
            </summary>
            <value>
              <see cref="T:Styx.WoWInternals.WoWMovement.InputControl"/> object.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWMovement.ClickToMoveInfoStruct.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.WoWInternals.Lua.TolString(System.UInt32,System.Int32,System.Int32)">
            <summary>
            lua_tostring
            const char *lua_tostring (lua_State *L, int index);
            Equivalent to TolString with len equal to NULL.
            </summary>
            <param name="pState">State of the p.</param>
            <param name="index">The index.</param>
            <param name="len">The len.</param>
            <returns>The <c>string</c>.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.Escape(System.String)">
            <summary>
            Escapes a string, replacing invalid characters like '\' with LUA ones, making it ready for use in LUA statements.
            </summary>
            <param name="unescaped">The unescaped.</param>
            <returns>The new string.</returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.ShowLuaStack(System.UInt32)">
            <summary>
            Show's the current values on the lua stack
            </summary>
            <param name="pState">pointer to the lua state.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.GetTop(System.UInt32)">
            <summary>
            GetTop
            int GetTop (lua_State *L);
            Returns the index of the top element in the stack.
            Because indices start at 1, this result is equal to the number of elements in the stack (and so 0 means an empty stack).
            </summary>
            <param name="pState">pointer to the lua state</param>
            <returns>
            number of elements on the lua stack
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.GetReturnValues(System.String)">
            <summary>
            Gets the return values of a lua statement.
            </summary>
            <param name="lua">The lua.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.GetReturnValues(System.String,System.String)">
            <summary>
            Gets the return values of a lua statement.
            </summary>
            <param name="lua">The lua.</param>
            <param name="scriptName">Name of the script.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.LuaGetReturnValue(System.String,System.String)">
            <summary>
            Gets the return values of a lua statement.
            </summary>
            <param name="lua">The lua.</param>
            <param name="scriptName">Name of the script.</param>
            <returns></returns>
            <remarks>Created 2012-02-10</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.GetReturnVal``1(System.String,System.UInt32)">
            <summary>
            Gets the return value of a lua statement.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="lua">The lua.</param>
            <param name="retVal">The ret val.</param>
            <returns>
            The value of the statmenet.
            </returns>
            <example>
            return UnitHealth('player')
            </example>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.DoString(System.String,System.String)">
            <summary>
            Executes a lua string.
            </summary>
            <param name="szLua">The lua.</param>
            <param name="szLuaFile">The lua file.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.DoString(System.String)">
            <summary>
            Executes a lua string.
            </summary>
            <param name="szLua">The lua.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.DoString(System.String,System.Object[])">
            <summary>
            Executes a lua string.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.DoString(System.String,System.String,System.UInt32)">
            <summary>
            Executes a lua string.
            </summary>
            <param name="lua">The lua.</param>
            <param name="luaFile">The lua file.</param>
            <param name="pState">State of the p.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.AddDoStringASM(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Adds the ASM for FrameScript::Execute.
            </summary>
            <param name="luaPtr">The lua pointer.</param>
            <param name="luaFilePtr">The lua file pointer.</param>
            <param name="pState">State lua state pointer.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.Lua.AddDoStringASM(System.String,System.String,System.UInt32@)">
            <summary>
            Adds the ASM for FrameScript::Execute.
            </summary>
            <param name="lua">The lua.</param>
            <param name="luaFile">The lua file.</param>
            <param name="freePtr">A pointer to memory that was allocated and must be freed.</param>
        </member>
        <member name="M:Styx.WoWInternals.Lua.Pulse">
            <summary>
            Pulsess the lua events.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.Lua.State">
            <summary>
            Gets the current Lua state. This object should never be cached, but should be used immediately and then disposed of, before any control is transferred to HB.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.Lua.Events">
            <summary>
            Gets the events.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.Lua.RunStatus.ErrRun">
            <summary>
            A runtime error
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.Lua.RunStatus.ErrSyntax">
            <summary>
            Syntax error
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.Lua.RunStatus.ErrMem">
            <summary>
            Memory allocation error. For such errors, Lua does not call the error handler function.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.Lua.RunStatus.ErrErr">
            <summary>
            Error while running the error handler function.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetProfileName(Styx.Logic.BattlegroundType)">
            <summary>
            Returns the profile name for <para>type</para>
            </summary>
            <param name="type">the battleground type</param>
            <returns>Returns a string with the profile name </returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.IsQueuedForBattleground(Styx.Logic.BattlegroundType)">
            <summary> Query if 'type' is queued for battleground. </summary>
            <remarks> Created 12/7/2011. </remarks>
            <param name="type"> BattlegroundType ie. WSG EotS AB etc... </param>
            <returns> true if queued for battleground, false if not. </returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.AcceptBattlegroundConfirmation">
            <summary> Accept battleground confirmation. </summary>
            <remarks> Created 12/8/2011. </remarks>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.AcceptBattlefieldPort(System.Int32,System.Boolean)">
            <summary>
            Accepts or declines a battlefield port.
            </summary>
            <param name="index">The zero based index of the port.</param>
            <param name="accept">If true, will accept. Otherwise will decline.</param>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetBGIndexWithStatus(Styx.Logic.BattlegroundStatus)">
            <summary>
            Returns the first found index of the battlegournd with x status 
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetStatus(System.UInt32)">
            <summary>
            Get's the current battleground status
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetCurrentBattleground">
            <summary>
            Returns the current battleground  you are in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetQueuedBattlegroundWaitTime(System.UInt32)">
            <summary>Gets a queued battleground wait time in miliseconds, or 0 if the battleground is not queued.</summary>
            <remarks>Created 1/14/2011.</remarks>
            <param name="index">.</param>
            <returns>The queued battleground wait time.</returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetQueuedBattlegroundInfo(System.UInt32)">
            <summary>
            Returns detailed information on the battlegrounds in the que
            </summary>
            <param name="index">The index of the BG to get the info for. (Valid values are 0 and 1)</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.GetBattlefieldWinner">
            <summary>
            Get the battlefields winner. 
            Integer - Faction/team that has won the battlefield. 
            Results are: nil if nobody has won, 
            0 for Horde and 1 for Alliance in a battleground, 
            0 for Green Team and 1 for Yellow in an arena
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.JoinBattlefield(Styx.Logic.BattlegroundType,System.Boolean)">
            <summary>
            Join's the que for a battlefield
            </summary>
            <param name="type">BattlegroundType ie. WSG EotS AB etc...</param>
            <param name="asGroup"></param>
        </member>
        <member name="M:Styx.Logic.Battlegrounds.LeaveBattlefield">
            <summary>
            Leaves the current battlefield the player is inside, 
            pre-2.0.1 this would only leave the battlefield if it had been won or lost this was changed in 2.0.1 to exit you from the battlefield regardless if it was finished or not and will give you deserter. 
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.BattlefieldInstanceRunTime">
            <summary>
            Returns the time since the battleground started.
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.BattlefieldStartTime">
            <summary>
            Gets the battlefield start time.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.LandMarks">
            <summary>
            Returns a list of all visible landmarks
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.Current">
            <summary>
            Returns the current battleground the local player is inside
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.Finished">
            <summary>
            Returns true if the battlefield has ended
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.Winner">
            <summary>
            Returns the battlefield winner
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.BattlegroundStatuses">
            <summary>
            Returns a list of battleground statuses
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.IsInsideBattleground">
            <summary>
            Returns true if you are inside a battleground
            </summary>
        </member>
        <member name="P:Styx.Logic.Battlegrounds.WaitingForConfirmation">
            <summary> Gets a value indicating whether a BG queue has popped, and the game is waiting for confirmation to enter. </summary>
            <value> true if waiting for confirmation, false if not. </value>
        </member>
        <member name="F:Styx.Logic.BattlegroundStatus.None">
            <summary>
            This doesn't deserve a comment!
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundStatus.Queued">
            <summary>
            Didn't enter yet
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundStatus.Confirm">
            <summary>
            Confirmation box visible
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundStatus.Active">
            <summary>
            BG is active
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.Deserter">
            <summary>
            You or one of your party members is a deserter
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.NotSameTeam">
            <summary>
            Your group is not in the same team
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.Max3Battles">
            <summary>
            Can only be enqueued for 3 battles at once
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.StillEnqueued">
            <summary>
            You cannot queue for a rated match while enqueued for other battles
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.InRatedMatch">
            <summary>
            You cannot queue for another battle while queued for a rated arena match
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.TeamLeftQueue">
            <summary>
            Your team has left the arena queue
            </summary>
        </member>
        <member name="F:Styx.Logic.BattlegroundJoinError.GroupJoinedNotEligible">
            <summary>
            Your group has joined a battleground queue but you are not eglible.
            (This is the same error message for all other numbers but valid BattlegroundIds)
            </summary>
        </member>
        <member name="M:Styx.Logic.Blacklist.Flush">
            <summary>
            Flushes this instance.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Blacklist.Contains(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Determines whether [contains] [the specified wowobject].
            </summary>
            <param name="o">The o.</param>
            <returns>
              <c>true</c> if [contains] [the specified o]; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Blacklist.Contains(System.UInt64)">
            <summary>
            Determines whether [contains] [the specified GUID].
            </summary>
            <param name="guid">The GUID.</param>
            <returns>
              <c>true</c> if [contains] [the specified GUID]; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Blacklist.Contains(System.UInt64,System.Boolean)">
            <summary>
            Determines whether [contains] [the specified GUID].
            </summary>
            <param name="guid">The GUID.</param>
            <param name="flush">if set to <c>true</c> [flush].</param>
            <returns>
              <c>true</c> if [contains] [the specified GUID]; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Blacklist.Add(System.UInt64,System.TimeSpan)">
            <summary>
            Adds the specified GUID.
            </summary>
            <param name="guid">The GUID.</param>
            <param name="end">The end.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Blacklist.Add(Styx.WoWInternals.WoWObjects.WoWObject,System.TimeSpan)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="o">The o.</param>
            <param name="end">The end.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="T:Styx.Logic.Inventory.Frames.LootFrame.LootSlotInfo">
            <summary>
            Class used internally by the LootFrame class to get more information about loot slot items.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.LootFrame.LootSlotInfo.LootIcon">
            <summary>
            The path of the graphical icon for the item. 
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.LootFrame.LootSlotInfo.LootName">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.LootFrame.LootSlotInfo.LootQuantity">
            <summary>
            The quantity of the item in a stack. Note: Quantity for coin is always 0. 
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.LootFrame.LootSlotInfo.LootRarity">
            <summary>
            The rarity of this item, Grey, white, green epic etc...
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.LootFrame.LootSlotInfo.Locked">
            <summary>
            Whether you are eligible to loot this item or not. Locked items are by default shown tinted red. 
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.MailBox.MailFrame.GetMailAttachments(System.Int32)">
            <summary>
            Takes all items out of the specified mail, and returns when the mail successfully disappears, or if the inventory is full.
            </summary>
            <param name="mailIndex"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.MailBox.MailFrame.OpenAllMail">
            <summary>
            Opens all mail. This function returns after all mail has been opened, or if the inventory becomes full.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.MailBox.MailFrame.Hide">
            <summary>
            Closes the mailbox frame.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.MailBox.MailFrame.Close">
            <summary>
            Closes the mailbox frame.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.InventoryManager.GetInventorySlotsByEquipSlot(Styx.InventoryType)">
            <summary>
            Returns a list of inventory slots that an item with the specified equip slot would be able to go in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.IsInLineOfSightOCD(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            An obsessive-compulsive version of IsInLineOfSight. This includes extra flags
            to do extra hit-tests. However it is slower.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns>
              <c>true</c> if [is in line of sight OCD] [the specified from]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.IsInLineOfSight(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Used to check visual sight between two points.
            </summary>
            <param name="from">Start point</param>
            <param name="to">End point</param>
            <returns>
              <c>true</c> if [is in line of sight] [the specified from]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.IsInLineOfSpellSight(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Used to check spell LoS between two points. This will make sure you can cast heal/damage spells.
            Two points may not be in visual sight while this returns true!
            </summary>
            <param name="from">Start point</param>
            <param name="to">End point</param>
            <returns>
              <c>true</c> if [is in line of spell sight] [the specified from]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.TraceLine(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags)">
            <summary>
            Checks if a path between 2 points is obstructed.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="flags">The flags.</param>
            <returns><c>true</c> if obstructed, otherwise <c>false</c>.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.TraceLine(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags,Styx.Logic.Pathing.WoWPoint@)">
            <summary>
            Checks if a path between 2 points is obstructed.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="flags">The flags.</param>
            <param name="hitPoint">The hit point.</param>
            <returns><c>true</c> if obstructed, otherwise <c>false</c>.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.MassTraceLine(Styx.WoWInternals.World.WorldLine[],Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags,System.Boolean[]@)">
            <summary>
            Performs a mass traceline.
            </summary>
            <param name="lines">The lines.</param>
            <param name="flag">The flag.</param>
            <param name="hitResults">The hit results.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.MassTraceLine(Styx.WoWInternals.World.WorldLine[],Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags[],System.Boolean[]@)">
            <summary>
            Performs a mass traceline.
            </summary>
            <param name="lines">The lines.</param>
            <param name="flags">The flags.</param>
            <param name="hitResults">The hit results.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.MassTraceLine(Styx.WoWInternals.World.WorldLine[],Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags,System.Boolean[]@,Styx.Logic.Pathing.WoWPoint[]@)">
            <summary>
            Performs a mass traceline.
            </summary>
            <param name="lines">The lines.</param>
            <param name="flag">The flag.</param>
            <param name="hitResults">The hit results.</param>
            <param name="hitPoints">The hit points.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.MassTraceLine(Styx.WoWInternals.World.WorldLine[],Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags[],System.Boolean[]@,Styx.Logic.Pathing.WoWPoint[]@)">
            <summary>
            Performs a mass traceline.
            </summary>
            <param name="lines">The lines.</param>
            <param name="flags">The flags.</param>
            <param name="hitResults">The hit results.</param>
            <param name="hitPoints">The hit points.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.GameWorld.TraceLine(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Single,Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags,Styx.Logic.Pathing.WoWPoint@)">
            <summary>
            Checks if a path between 2 points is obstructed.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="distance">The distance.</param>
            <param name="flags">The flags.</param>
            <param name="hitPoint">The hit point.</param>
            /// <returns><c>true</c> if obstructed, otherwise <c>false</c>.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestBoundingModels">
            <summary>
            Models' bounding, ie. where you can't walk on a model. (Trees, smaller structures etc.)
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestSpellLoS">
            <summary>			
            Spell LoS flag. This one hit when there is no spell los. 
            When combined with some other flag, it will never hit. Be careful
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestWMO">
            <summary>
            Structures like big buildings, Orgrimmar etc.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestUnknown">
            <summary>
            Used in CTM.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestUnknown2">
            <summary>
            Dunno what that is what its not line of sight through this flag. /raphus
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestGround">
            <summary>
            The terrain.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestLiquid">
            <summary>
            This one also works for liquid. Returned exact same as with LIQUID2 when I tested it on a lake.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestLiquid2">
            <summary>
            Another flag that works for liquid. This is called by WoW constantly ?
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestMovableObjects">
            <summary>
            Hits on movable objects (I think) - tested on UC elevator doors.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestUnknown3">
            <summary>
            Dunno what that is what its not line of sight through this flag. /raphus
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.GameWorld.CGWorldFrameHitFlags.HitTestUnknown4">
            <summary>
            Dunno what that is what its not line of sight through this flag. /raphus
            </summary>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.DegreesToRadians(System.Single)">
            <summary>Degrees to radians. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="degrees">The degrees.</param>
            <returns>.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.RadiansToDegrees(System.Single)">
            <summary>Radians to degrees. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="radians">The radians.</param>
            <returns>.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.IsSafelyBehind(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            Returns a boolean indcating whether you are safely behind a target. 
            </summary>
            <param name="me">Position of me.</param>
            <param name="target">Position of target.</param>
            <param name="targetFacingRadians">Facing of target in radians.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.IsBehind(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Single,System.Single)">
            <summary>
            Returns a boolean indicating whether you are behind a target. A parameter indicates the wideness of the cone used to test.
            </summary>
            <param name="me">Position of me.</param>
            <param name="target">Position of target.</param>
            <param name="targetFacingRadians">Facing of target in radians.</param>
            <param name="arcRadians">The arc to test against in radians. PI is the default value.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.IsSafelyFacing(Styx.Logic.Pathing.WoWPoint,System.Single,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Returns a boolean indicating whether you are facing a target safely.
            </summary>
            <param name="me">Position of me.</param>
            <param name="myFacingRadians">Facing of me in radians.</param>
            <param name="target">Position of target.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.IsFacing(Styx.Logic.Pathing.WoWPoint,System.Single,Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            Returns a boolean indicating whether you are facing a target. A parameter indicates the wideness of the cone used to test.
            </summary>
            <param name="me">Position of me.</param>
            <param name="myFacingRadians">Facing of me in radians.</param>
            <param name="target">Position of target.</param>
            <param name="arcRadians">The arc to test against in radians. PI is the default value.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.CalculateNeededFacing(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Calculates the required facing to face a point from any other point.
            </summary>
            <param name="start">The start point.</param>
            <param name="faceTarget">The end point.</param>
            <returns>The required facing in radians.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.CalculatePointBehind(Styx.Logic.Pathing.WoWPoint,System.Single,System.Single)">
            <summary>
            Calculates a point behind a unit location with facing.
            </summary>
            <param name="target">Target position.</param>
            <param name="targetFacingRadians">Target facing in radians.</param>
            <param name="distanceToTarget">The yards behind the target the calculate point should be.</param>
            <returns>A point behind the target.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.CalculatePointAtSide(Styx.Logic.Pathing.WoWPoint,System.Single,System.Single,System.Boolean)">
            <summary>
            Calculates a point at the side of a location.
            </summary>
            <param name="target">The desired location to get the side of.</param>
            <param name="targetFacingInRadians">The facing of the mob standing at the location.</param>
            <param name="distanceToTarget">The distance wanted from the point to the target.</param>
            <param name="rightSide">Right side of the mob or left side of the mob.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.CalculatePointFrom(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Single)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="target"></param>
            <param name="distance"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.NormalizeRadian(System.Single)">
            <summary>
            Normalizes a radian so it's between 0 and pi * 2.
            </summary>
            <param name="radian"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.IsInPath(Styx.WoWInternals.WoWObjects.WoWUnit,Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>Query if 'unit' is in path. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="unit">The unit.</param>
            <param name="start">The start point.</param>
            <param name="destination">Destination for the.</param>
            <returns>true if in path, false if not.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.IsInPath(System.Collections.Generic.IEnumerable{Styx.WoWInternals.WoWObjects.WoWUnit},Styx.Logic.Pathing.WoWPoint)">
            <summary>Query if 'unit' is in path.</summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="units">The units.</param>
            <param name="destination">Destination for the.</param>
            <returns>true if in path, false if not.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.GetClosestInPath(System.Collections.Generic.IEnumerable{Styx.WoWInternals.WoWObjects.WoWUnit},Styx.Logic.Pathing.WoWPoint)">
            <summary>Gets a closest in path. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="units">The units.</param>
            <param name="destination">Destination for the.</param>
            <returns>The closest in path.</returns>
        </member>
        <member name="M:Styx.Helpers.WoWMathHelper.GetPointAt(Styx.Logic.Pathing.WoWPoint,System.Single,System.Single,System.Single)">
            <summary>Gets a point at a specified location, given a distance, rotation, and pitch.</summary>
            <remarks>Created 12/27/2010.</remarks>
            <param name="from">The origin location</param>
            <param name="distance">How far away the point should be.</param>
            <param name="rotationRadians">The rotation in radians.</param>
            <param name="pitchRadians">The pitch in radians.</param>
            <returns>The point at.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.Refresh">
            <summary>
            Refreshes the spell book to find new spells the user has obtained since the last refresh.
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CanCastSpell(System.UInt32)">
            <summary>
            Returns whether you can cast this spell id
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CanCastSpell(System.String)">
            <summary>
            Determines whether you can cast a spell.
            </summary>
            <param name="name">The name of the spell.</param>
            <returns>True if the spell is castable; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.String)">
            <summary>
            Casts a spell by name.
            </summary>
            <param name="name">The name of the spell that is to be casted.</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.String,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts a spell by name.
            </summary>
            <param name="name">The name of the spell that is to be casted.</param>
            <param name="target">The target on which to cast the spell on.</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.String,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Casts a spell by name.
            </summary>
            <param name="name">The name of the spell that is to be casted.</param>
            <param name="target">The target on which to cast the spell on.</param>
            <param name="returnImmediately">Whether to wait until the spell has finished casting, or return immediately after it has started casting (useful for channels etc.).</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.String,System.UInt64)">
            <summary>
            Casts a spell by name.
            </summary>
            <param name="name">The name of the spell that is to be casted.</param>
            <param name="targetGuid">The target on which to cast the spell on.</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.String,System.Boolean)">
            <summary>
            Casts a spell by name.
            </summary>
            <param name="name">The name of the spell that is to be casted.</param>
            <param name="returnImmediately">Whether to wait until the spell has finished casting, or return immediately after it has started casting (useful for channels etc.).</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.String,System.UInt64,System.Boolean)">
            <summary>
            Casts a spell by name.
            </summary>
            <param name="name">The name of the spell that is to be casted.</param>
            <param name="targetGuid"></param>
            <param name="returnImmediately">Whether to wait until the spell has finished casting, or return immediately after it has started casting (useful for channels etc.).</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(Styx.Logic.Combat.WoWSpell,System.UInt64,System.Boolean)">
            <summary>
            Casts a spell.
            </summary>
            <param name="spell">The spell that is to be casted.</param>
            <param name="targetGuid">The target on which to cast the spell.</param>
            <param name="returnImmediately">Whether to wait until the spell has finished casting, or return immediately after it has started casting (useful for channels etc.).</param>
            <returns>True if the spell was successfully cast; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.ClickRemoteLocation(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Clicks a remote location. Useful for using spells like Rain of Fire, which require you to press the ground.
            </summary>
            <param name="location">The location to press.</param>
            <returns>True if a spell was waiting for a press and it pressed; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.StopCasting">
            <summary>
            Fucks your mom in the ass
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastableSpell(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Determines whether a specified spell is castable.
            </summary>
            <param name="spell">The spell.</param>
            <returns>True if this spell is castable; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.HandleTerrainClick(Styx.Logic.Combat.LegacySpellManager.CTerrainClickEvent)">
            <summary>
            Handles a terrain click.
            </summary>
            <param name="click">The click info.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpellById(System.UInt32)">
            <summary>
            Casts a spell by id.
            </summary>
            <param name="spellid">The spellid.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpellById(System.Int32)">
            <summary>
            Casts a spell by id.
            </summary>
            <param name="spellid">The spellid.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpellById(System.Int32,System.UInt64)">
            <summary>
            Casts a spell by id.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="targetGuid">The target GUID.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpellById(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts a spell by id.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.LegacySpellManager.CastSpell(System.Int32,System.Int32,System.UInt64,System.Int32)">
            <summary>
            Casts a spell by id.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="unk">The unk.</param>
            <param name="targetGuid">The target GUID.</param>
            <param name="optional">The optional.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Combat.LegacySpellManager.KnownSpells">
            <summary>
            Returns a dictionary of <see cref="T:Styx.Logic.Combat.WoWSpell"/> with all known spells.
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.LegacySpellManager.GlobalCooldown">
            <summary>
            Returns if the global cooldown is currently running.
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.LegacySpellManager.CastBarVisible">
            <summary>
            Determines whether the player is currently casting anything.
            </summary>
            <returns>True if the player is casting anything; false otherwise.</returns>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAuraCollection.GetTotalAuraModifier(Styx.Logic.Combat.WoWApplyAuraType)">
            <summary>
            Sums the BasePoints value of all spell effects of all auras in this collection, and returns the result.
            </summary>
            <param name="auraType"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAura.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAura.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAura.op_Equality(Styx.Logic.Combat.WoWAura,Styx.Logic.Combat.WoWAura)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAura.op_Inequality(Styx.Logic.Combat.WoWAura,Styx.Logic.Combat.WoWAura)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAura.Equals(Styx.Logic.Combat.WoWAura)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.WoWAura.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.ApplyAuraType">
            <summary>
            The first Auratype of this aura
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.CreatorGuid">
            <summary>
            Gets the creator Guid of this <see cref="T:Styx.Logic.Combat.WoWAura"/>.
            </summary>
            <value>The creator Guid.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.SpellId">
            <summary>
            Gets the spell id of this <see cref="T:Styx.Logic.Combat.WoWAura"/>.
            </summary>
            <value>The spell id.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.Flags">
            <summary>
            Flags of this aura
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.Duration">
            <summary>
            Gets the duration of this <see cref="T:Styx.Logic.Combat.WoWAura"/>.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.EndTime">
            <summary>
            Gets the end time of this <see cref="T:Styx.Logic.Combat.WoWAura"/>.
            </summary>
            <value>The end time.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.TimeLeft">
            <summary>
            Gets the time left until this buff wears off.
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.StackCount">
            <summary>
            Gets the stack count of this <see cref="T:Styx.Logic.Combat.WoWAura"/>.
            </summary>
            <value>The stack count.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.Level">
            <summary>
            Gets the level of this <see cref="T:Styx.Logic.Combat.WoWAura"/>.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.IsHarmful">
            <summary>
            Gets a value indicating whether this instance is harmful.
            </summary>
            <value>
            	<c>true</c> if this instance is harmful; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.IsPassive">
            <summary>
            Gets a value indicating whether this instance is passive.
            </summary>
            <value>
            	<c>true</c> if this instance is passive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.Cancellable">
            <summary>
            Returns whether or not the aura can be cancelled by the user.
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.Name">
            <summary>
            Gets the name of this aura
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.WoWAura.Spell">
            <summary>
            Returns a <see cref="T:Styx.Logic.Combat.WoWSpell"/> with the Id of this Aura
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.SpellEffect.BasePoints">
            <summary>
            The base points of this effect. This usually indicates the value of the spell effect.
            </summary>
        </member>
        <member name="M:Styx.Logic.Targeting.Clear">
            <summary>
            Clears the list of targets
            </summary>
        </member>
        <member name="M:Styx.Logic.Targeting.DefaultRemoveTargetsFilter(System.Collections.Generic.List{Styx.WoWInternals.WoWObjects.WoWObject})">
            <summary>
            Default target filter for all bots.
            Removes all dead, flying, non-attackble mobs etc..
            </summary>
        </member>
        <member name="M:Styx.Logic.Targeting.DefaultIncludeTargetsFilter(System.Collections.Generic.List{Styx.WoWInternals.WoWObjects.WoWObject},System.Collections.Generic.HashSet{Styx.WoWInternals.WoWObjects.WoWObject})">
            <summary>
            Default include target's logic
            makes sure we have targets in combat
            </summary>
            <param name="incomingUnits"></param>
            <param name="outgoingUnits"></param>
        </member>
        <member name="M:Styx.Logic.Targeting.DefaultTargetWeight(System.Collections.Generic.List{Styx.Logic.Targeting.TargetPriority})">
            <summary>
            The default target weight used by all bots.
            Sorts players by distance, (removed the weight from the PvPBot.. seems kinda redundant)
            </summary>
            <param name="units"></param>
        </member>
        <member name="P:Styx.Logic.Targeting.DisplayTargetingExceptions">
            <summary>
            Should we print out targeting exceptions? [Default: true]
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.TargetList">
            <summary>
            The current list of viable targets.
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.ObjectList">
            <summary>
            This is the actual list of objects held by the targeting system. Any forward-facing API should use a separate property using the ConvertAll() function.
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.MaxTargets">
            <summary>
            The 'limit' on the number of possible targets at any one time. [Default: 5]
            </summary>
        </member>
        <member name="E:Styx.Logic.Targeting.OnTargetListUpdateFinished">
            <summary>
            Occurs when the target list has been fully updated. 
            </summary>
        </member>
        <member name="E:Styx.Logic.Targeting.IncludeTargetsFilter">
            <summary>
            Occurrs when a request is made to include targets in the targeting list.
            </summary>
        </member>
        <member name="E:Styx.Logic.Targeting.RemoveTargetsFilter">
            <summary>
            Occurs when a request is made to remove targets in the targeting list.
            </summary>
        </member>
        <member name="E:Styx.Logic.Targeting.WeighTargetsFilter">
            <summary>
            Occurs when a request is made to weigh the targets in the targeting list.
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.PullDistance">
            <summary>
            Pulldistance used by hb for pulling evil npc's
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.CollectionRange">
            <summary>
            The distance from ourselves, where targets will be collected. [Default: 100]
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.IncludeWorldPlayers">
            <summary>
            Include players in non-battlegrounds/arenas? [Default: false]
            </summary>
        </member>
        <member name="P:Styx.Logic.Targeting.IncludeElites">
            <summary>
            Include Elites? [Default: false]
            </summary>
        </member>
        <member name="M:Styx.Logic.Common.Rest.FeedImmediate">
            <summary>Attempts to eat the best food currently in your bags. It will only attempt to eat once every 5 seconds. 
            		 This method will return immediately. 
            		 This method does not check for combat, or other contextual events!</summary>
            <remarks>Created 10/6/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Common.Rest.DrinkImmediate">
            <summary>Attempts to eat the best food currently in your bags. It will only attempt to eat once every 5 seconds. 
            		 This method will return immediately. 
            		 This method does not check for combat, or other contextual events!</summary>
            <remarks>Created 10/6/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.Close">
            <summary>
            Dismiss the gossip window.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.SelectActiveQuest(System.Int32)">
            <summary>
            Selects a zero based active quest.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.SelectGossipOption(System.Int32)">
            <summary>
            Selects a zero based gossip option.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.SelectAvailableQuest(System.Int32)">
            <summary>
            Selects a zero based available quest.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.Hide">
            <summary>
            Hides this frame
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.GetAvaibleQuestInfoFromIndex(System.Int32)">
            <summary>
            Returns a integer of the quest entry at index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.GetActiveQuestInfoFromIndex(System.Int32)">
            <summary>
            Returns a integer of the quest entry at index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.ActiveQuests">
            <summary>
            Retrieves a list of the active (?) quests on the NPC you are talking to. 
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.AvailableQuests">
            <summary>
            Retrieves a list of the available (!) quests on the NPC you are talking to. 
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.GossipOptionEntries">
            <summary>
            Retrieves a list of the available gossip items on the NPC you are talking to.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Gossip.GossipFrame.GossipText">
            <summary>
            Retrieves the gossip text.
            </summary>
        </member>
        <member name="T:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame">
            <summary>
            Class for functions fields properites etc associated with the MerchantFrame
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.SellItemQualities(Styx.Logic.Inventory.Frames.Merchant.ItemQuality,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>
            Sells all items of the specified qualities (bitwise OR them together).
            Pass null for exceptions if you don't have any.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.Close">
            <summary>
            Close this frame (same as Hide())
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.Hide">
            <summary>
            Hide the frame (same as Close())
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.BuyItem(System.Int32,System.Int32)">
            <summary>
            Buys an item from the merchant.
            </summary>
            <param name="index">The zero based index of the item.</param>
            <param name="amount">The amount to buy.</param>
            <returns> boolean if item was purchased sucesfully, false if you can't afford it.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.BuyItem(System.String,System.Int32)">
            <summary>
            Buys an item from the merchant.
            </summary>
            <param name="name">name of the item.</param>
            <param name="amount">The amount to buy.</param>
            <returns> boolean if item was purchased sucesfully, false if you can't afford it.</returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.SellItem(Styx.WoWInternals.WoWObjects.WoWItem)">
            <summary>
            Sell this item
            </summary>
            <param name="item">item to sell</param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.RepairAllItems">
            <summary>
            Reparis all your items
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.RepairAllItems(System.Boolean)">
            <summary>
            Reparis all your items
            </summary>
            <param name="useGuildBankFunds">true if you wish to use the guildbank as payment</param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.GetAllMerchantItems">
            <summary>
            Returns an array with <see cref="T:Styx.Logic.Inventory.Frames.Merchant.MerchantItem"/> that this merchant offers to sell.
            </summary>
            <returns>Array with MerchantItems. </returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.GetMerchantItemByIndex(System.Int32)">
            <summary>
            Gets a merchant item by index.
            </summary>
            <param name="index">index in the array</param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.GetBuybackItem(System.Int32)">
            <summary>
            Returns an item from the buyback frame.
            </summary>
            <param name="index">The index or slot of the item in the buyback frame.</param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.GetBestDrinkFromVendor">
            <summary>
            Returns the best usable drink available from a vendor. -1 if none are found.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.GetBestFoodFromVendor">
            <summary>
            Returns the best usable food available from a vendor. -1 if none are found.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.Merchant">
            <summary>
            Returns the merchant unit.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.NumBuybackItems">
            <summary>
            Returns the number of buyback items.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantFrame.MerchantNumItems">
            <summary>
            Number of items this merchant has avaible for sale
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.Index">
            <summary>
            Returns the 1 based index of the item in the merchant's inventory 
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.ItemId">
            <summary>
            Returns the itemid of this <see cref="T:Styx.Logic.Inventory.Frames.Merchant.MerchantItem"/>
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.TextureId">
            <summary>
            Returns the textureid of this <see cref="T:Styx.Logic.Inventory.Frames.Merchant.MerchantItem"/>
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.NumAvailable">
            <summary>
            Returns the number of how many times you can buy this item
            -1 = Infinite
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.BuyPrice">
            <summary>
            Returns the buy price in copper of this <see cref="T:Styx.Logic.Inventory.Frames.Merchant.MerchantItem"/>
            compare to Me.Coinage to check if you afford it
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.Quantity">
            <summary>
            The quantity in which you buy the item.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.ExtendedCostId">
            <summary>
            Returns the 'ExtendedCostId' used to check if the item requires honor, badges or something else to be bought
            requires a dbc lookup
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.ItemInfo">
            <summary>
            Returns an <see cref="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.ItemInfo"/> reference of this MerchantItem.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Merchant.MerchantItem.Name">
            <summary>
            Returns the name of this item.
            </summary>
        </member>
        <member name="F:Styx.Logic.Inventory.Frames.Merchant.ItemQuality.Legendary">
            <summary>
            Yeah right.
            </summary>
        </member>
        <member name="F:Styx.Logic.Inventory.Frames.Merchant.ItemQuality.Artifact">
            <summary>
            OVER NIIIIINEEEEEE THOUSAND!!!!
            </summary>
        </member>
        <member name="M:Styx.Logic.Pathing.WoWPoint.Negate">
            <summary>
            Flips the components.
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.HotspotManager.GetRandomHotspot">
            <summary>
            Gets a random hotspot that is not on the blacklist.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.Profiles.MailboxManager.ForcedMailboxes">
            <summary>
            List of mailboxes you can set to 'override' the current mailboxes defined by the profile.
            </summary>
        </member>
        <member name="M:Styx.Logic.Profiles.Profile.GetRootProfile">
            <summary>
            Returns the root profile. 
            </summary>
            <returns>The root profile. If this is the root profile, it returns itself.</returns>
        </member>
        <member name="M:Styx.Logic.Profiles.Profile.GetScopeSortedProfiles">
            <summary>
            Gets all children profiles and children of children profiles, returning a list where the most inner profiles are first.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.Profiles.Profile.XmlElement">
            <summary>Gets the XElement that actually represents this Profile.</summary>
            <value>The xml element.</value>
        </member>
        <member name="F:Styx.Logic.Profiles.ProtectedItemsManager._dynamicProtectedItems">
            <summary>
            Add and remove protected items from/to here at runtime.
            </summary>
        </member>
        <member name="P:Styx.Logic.Profiles.VendorManager.ForcedVendors">
            <summary>
            List of vendors you can set to 'override' the current vendors defined by the profile.
            </summary>
        </member>
        <member name="P:Styx.Logic.Profiles.VendorManager.AllVendors">
            <summary>
            All the vendors.
            </summary>
        </member>
        <member name="T:Styx.Logic.TargetListUpdateFinishedDelegate">
            <summary>
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Styx.Logic.IncludeTargetsFilterDelegate">
            <summary>
            A filter for the target list. This filter adds all potential targets to the outgoing units.
            </summary>
            <param name="incomingUnits">A list of incoming units. This is potential units that can be added to outgoing units.</param>
            <param name="outgoingUnits">A set of final units in the target list. Add units you want in the target list here.</param>
        </member>
        <member name="T:Styx.Logic.RemoveTargetsFilterDelegate">
            <summary>
            A filter for the target list. This filter should remove invalid units from the list. This is called before the include targets filter.
            </summary>
            <param name="units"></param>
        </member>
        <member name="T:Styx.Logic.WeighTargetsDelegate">
            <summary>
            Allows a registered callee to set the weights on the specified units.
            </summary>
            <param name="units"></param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWSubObject"/> class.
            </summary>
            <param name="baseAddress">The base address.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.CanUse">
            <summary>
            Returns a boolean indicating whether this game object can be used. This checks for stuff like keys, too low level for herbalism/mining etc.
            </summary>
            <returns>
              <c>true</c> if this instance can use; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.CanUseNow">
            <summary>
            Returns a boolean indicating whether this game object can be used right now. This checks for stuff like distance.
            </summary>
            <returns>
              <c>true</c> if this instance [can use now]; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.CanUseNow(Styx.GameError@)">
            <summary>
            Returns a boolean indicating whether this game object can be used right now. If the return value is false, a out parameter gives the reason.
            </summary>
            <param name="reason">The reason.</param>
            <returns>
              <c>true</c> if this instance [can use now] the specified reason; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.Use">
            <summary>
            Uses this <see cref="T:Styx.WoWInternals.WoWObjects.WoWSubObject"/>.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.CanUseNowAsm(BlueMagic.ExecutorRand,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Determines whether this instance [can use now asm] the specified executor.
            </summary>
            <param name="executor">The executor.</param>
            <param name="reason">The reason.</param>
            <param name="interactDistance">The interact distance.</param>
            <param name="a4">The a4.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWSubObject.GetField``1(Styx.WoWInternals.WoWObjects.WoWSubObject.SubObjectOffsets)">
            <summary>
            Gets the field.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="offset">The offset.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWSubObject.BaseAddress">
            <summary>
            Gets the base address.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWSubObject.InteractDistance">
            <summary>
            Gets the interact distance.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWSubObject.OwnerObject">
            <summary>
            Gets the owner object.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWChair.SlotPositions">
            <summary>
            Gets the positions where a unit can sit in this chair.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWChair.ChairSlots">
            <summary>
            The number of slots that can be sit in.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWDoor.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> class.
            </summary>
            <param name="baseAddress">The base address.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWDoor.CanOpenNow">
            <summary>
            Determines whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> [can be opened now].
            </summary>
            <returns>
              <c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> [can be opened now]; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWDoor.CanOpenNow(System.UInt32@)">
            <summary>
            Determines whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> [can open now] the specified reason.
            </summary>
            <param name="reason">The reason.</param>
            <returns>
              <c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> [can open now] the specified reason; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWDoor.CanOpenNowAsm(BlueMagic.ExecutorRand,System.UInt32,System.UInt32)">
            <summary>
            Determines whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> [can open now asm] the specified executor.
            </summary>
            <param name="executor">The executor.</param>
            <param name="reason">The reason.</param>
            <param name="interactDistance">The interact distance.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDoor.IsClosed">
            <summary>
            Gets a value indicating whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> is closed.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> is closed; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDoor.IsOpen">
            <summary>
            Gets a value indicating whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> is open.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWDoor"/> is open; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWPartyMember.HasRole(Styx.WoWInternals.WoWObjects.WoWPartyMember.GroupRole)">
            <summary>
             Whether or not the party member has the role
            </summary>
            <param name="role">The role</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWPartyMember.ToPlayer">
            <summary>Converts this object to a player. This is only valid if the member is within range of the object manager. (Roughly 100yds)</summary>
            <remarks>Created 1/2/2011.</remarks>
            <returns>This object as a WoWPlayer.</returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Guid">
            <summary>Gets a unique identifier.</summary>
            <value>The identifier of the unique.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.IsMainTank">
            <summary>Gets a value indicating whether this object is main tank. [Only valid in raids]</summary>
            <value>true if this object is main tank, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.IsMainAssist">
            <summary>Gets a value indicating whether this object is main assist. [Only valid in raids]</summary>
            <value>true if this object is main assist, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.IsOnline">
            <summary>
              Gets a value indicating whether this object is online.
            </summary>
            <value>true if this object is online, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.PvpFlagged">
            <summary>
              Gets a value indicating whether the pvp flagged.
            </summary>
            <value>true if pvp flagged, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Dead">
            <summary>
              Gets a value indicating whether the dead.
            </summary>
            <value>true if dead, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Ghost">
            <summary>
              Gets a value indicating whether the ghost.
            </summary>
            <value>true if ghost, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.FFAPvpFlagged">
            <summary>
              Gets a value indicating whether the ffa pvp flagged.
            </summary>
            <value>true if ffa pvp flagged, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.GroupLeader">
            <summary>
              Gets a value indicating whether the group leader.
            </summary>
            <value>true if group leader, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.DNDFlagged">
            <summary>
              Gets a value indicating whether the dnd flagged.
            </summary>
            <value>true if dnd flagged, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.RAFLinked">
            <summary>
              Gets a value indicating whether the raf linked.
            </summary>
            <value>true if raf linked, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.PowerType">
            <summary>
              Gets the type of the power.
            </summary>
            <value>The type of the power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Health">
            <summary>
              Gets the health.
            </summary>
            <value>The health.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.HealthMax">
            <summary>
              Gets the health maximum.
            </summary>
            <value>The health maximum.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Power">
            <summary>
              Gets the power.
            </summary>
            <value>The power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.PowerMax">
            <summary>
              Gets the power maximum.
            </summary>
            <value>The power maximum.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Level">
            <summary>
              Gets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.AreaTableId">
            <summary>
              Gets the identifier of the area table.
            </summary>
            <value>The identifier of the area table.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.ContinentId">
            <summary>
            Gets the continent id.
            </summary>
            <value>The continent id.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Location">
            <summary>
            Gets the location. This location is only the X and Y. WoW does not store any more. If you need a Z, please use the Location3D API.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Location3D">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.GroupNumber">
            <summary>
              Gets the group number. [Only valid in raids]
            </summary>
            <value>The group number.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.RaidRank">
            <summary>
              Gets the raid rank. [Only valid in raids]
            </summary>
            <value>The raid rank.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.RoleFlags">
            <summary>
              Gets the role flags. [Only valid in raids]
            </summary>
            <value>The role flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPartyMember.Role">
            <summary>
              Gets the role of this member. [Only valid in raids]
            </summary>
            <value>The role.</value>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWPartyMember.GroupRole">
            <summary>Values that represent a role in our current group.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Guid">
            <summary>Gets a unique identifier for the totem (Only valid if the totem is actually out!).</summary>
            <value>The identifier of the unique.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Expired">
            <summary>Returns true if the totem has expired. (Ran its full duration)</summary>
            <value>true if expired, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Unit">
            <summary>Gets the unit that this totem info represents.</summary>
            <value>The unit.</value>/
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Slot">
            <summary>Gets the slot for this totem. (0-3).</summary>
            <value>The slot.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Duration">
            <summary>Gets the duration, in milliseconds, that the totem will stay out.</summary>
            <value>The duration.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.StartTime">
            <summary>Gets the time of when this totem was laid out.</summary>
            <value>The time of the start.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Expires">
            <summary>Gets the time when this totem will expire.</summary>
            <value>The expires.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.WoWTotem">
            <summary>Gets the totem this represents. (Strength of Earth, Healing Stream, etc)</summary>
            <value>The wo w totem.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Spell">
            <summary>Gets the spell that creates this totem.</summary>
            <value>The spell.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.IconPath">
            <summary>Gets the full pathname of the icon file. (This is an MPQ path!)</summary>
            <value>The full pathname of the icon file.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Name">
            <summary>Gets the name of this totem. (This is NOT always in English! Do not use this as an identifier!)</summary>
            <value>The name.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWTotemInfo.Type">
            <summary>Gets the type of totem this represents. (Fire, Earth, Water, Air)</summary>
            <value>The type.</value>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Quest.QuestFrame.AcceptQuest">
            <summary>
            Accepts the current quest available in the quest frame.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Quest.QuestFrame.CompleteQuest">
            <summary>
            Completes the current quest open in the quest frame.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Quest.QuestFrame.DeclineQuest">
            <summary>
            Declines the current quest available in the quest frame.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Quest.QuestFrame.SelectQuestReward(System.Int32)">
            <summary>
            Selects a quest reward by a zero based index. This does not complete the quest immediately, but is like pressing a reward choice item manually.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Quest.QuestFrame.Hide">
            <summary>
            Closes the quest frame.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Quest.QuestFrame.Close">
            <summary>
            Closes the quest frame.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Quest.QuestFrame.AvailableQuests">
            <summary>
            Retrieves a list of the available (!) quests on the NPC you are talking to. 
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Quest.QuestFrame.ActiveQuests">
            <summary>
            Retrieves a list of the active (?) quests on the NPC you are talking to. 
            </summary>
        </member>
        <member name="M:Styx.Plugins.PluginManager.Initialize(System.String[])">
            <summary>
            Initializes the plugin manager, which means loads and compiles all plugins it can find the /Plugins/ folder.
            </summary>
        </member>
        <member name="M:Styx.Plugins.PluginManager.CompileAndLoadFrom(System.String)">
            <summary>
            Compiles a codefile to an assembly and loads all plugins contained within that assembly.
            </summary>
            <param name="path">A path to to a .cs file or a directory.</param>
        </member>
        <member name="M:Styx.Logic.Questing.Quest.GetObjectives">
            <summary>
            Gets the objectives of this quest.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Questing.Quest.FromId(System.UInt32)">
            <summary>
            Gets a quest by ID. Returns null if there is no information available for the quest.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.InternalInfo">
            <summary>
            The internal info of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.Name">
            <summary>
            The name of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.Description">
            <summary>
            The description of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.SubDescription">
            <summary>
            The sub description of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.CompletionText">
            <summary>
            The text told by the NPC when delivering the quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.ObjectiveText">
            <summary>
            The objective text of this quest (the text over the actual objectives, eg. the text over "Voidwalker's slain 0/20")
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.Objectives">
            <summary>
            The special objectives of this quest. These will only be filled for objectives that aren't normal. They won't be filled for a "slay 10 XX" objective.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.CollectItemIDs">
            <summary>
            The item IDs that are meant to be collected.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.CollectItemCounts">
            <summary>
            The count of items meant to be collected. The index coresponds to CollectItemIDs.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.CollectIntermediateItemIDs">
            <summary>
            The items you need to obtain before being able to do the main objective.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.CollectIntermediateItemCounts">
            <summary>
            The count of items you need to collect before being able to do the main objective.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.NormalObjectiveIDs">
            <summary>
            The normal objectives of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.NormalObjectiveRequiredCounts">
            <summary>
            The required count of the normal objectives of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.Level">
            <summary>
            The level of this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RequiredLevel">
            <summary>
            The required level to pick up this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.NextQuestId">
            <summary>
            The ID of the quest following this quest in the quest chain.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardMoney">
            <summary>
            The amount of money received by turning in this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardMoneyAtMaxLevel">
            <summary>
            The amount of money received by turning in this quest at level 80.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardSpell">
            <summary>
            The spell rewarded by completing this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardSpellId">
            <summary>
            The spell ID rewarded by completing this quest, or 0 if the reward is not a spell.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardArenaPoints">
            <summary>
            The amount of arena points rewarded by completing this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardNumTalentPoints">
            <summary>
            The amount of talent points rewarded by completing this quest. Currently only exists in DK starting place.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardTitleId">
            <summary>
            The ID of the title rewarded for completing this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.RewardXp">
            <summary>
            The amount of XP that is rewarded by completing this quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.SuggestedPlayers">
            <summary>
            Suggested players for this quest, or 0 if it's not a party quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.IsStayAliveQuest">
            <summary>
            A boolean indicating whether this quest is a stay alive quest; meaning it will be failed if you die.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.IsPartyQuest">
            <summary>
            A boolean indicating whether this quest will be started for all party members on accept; like escort quests.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.IsShareable">
            <summary>
            A boolean indicating whether this quest is shareable.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.IsDaily">
            <summary>
            A boolean indicating whether this quest is a daily quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.FlagsPVP">
            <summary>
            A boolean indicating whether accepting this quest will flag you for PVP.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.IsWeekly">
            <summary>
            A boolean indicating whether this quest is a weekly quest.
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.Quest.IsAutoAccepted">
            <summary>
            A boolean indicating whether opening the quest description is enough to accept it automatically.
            </summary>
        </member>
        <member name="F:Styx.Logic.Questing.Quest.QuestObjective.Count">
            <summary>
            The count that is needed of the specified objective.
            </summary>
        </member>
        <member name="F:Styx.Logic.Questing.Quest.QuestObjective.ID">
            <summary>
            The ID of the objective. If the objective is CollectItem, this will be an item ID. If it's KillMob, it will be a mob ID. If it's UseGameObject, it will be a game object ID.
            </summary>
        </member>
        <member name="F:Styx.Logic.Questing.Quest.QuestObjective.Objective">
            <summary>
            The string objective. If the objective type is special, this will be a string.
            </summary>
        </member>
        <member name="F:Styx.Logic.Questing.Quest.QuestObjective.Type">
            <summary>
            The type of objective.
            </summary>
        </member>
        <member name="M:Styx.BotEvents.LoadEventCheckers(System.Type)">
            <summary>
            Recursively loads all event checkers from a type (if it's a class), including nested classes.
            </summary>
            <param name="t"></param>
        </member>
        <member name="E:Styx.BotEvents.OnBotStart">
            <summary>
            Fired right before the bot is started.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.OnBotStarted">
            <summary>
            Fired right after the bot is started.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.OnBotStop">
            <summary>
            Fired right before the bot has been stopped.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.OnBotStopped">
            <summary>
            Fired right after the bot has been stopped.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.OnBotChanged">
            <summary>
            Fired when the current bot is changed with the usage of TreeRoot.SetCurrent.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.Profile.OnNewProfileLoaded">
            <summary>
            Fired when a new inner profile is loaded. That means, without the actually .xml profile changing, but a new subprofile in the current profile is loaded.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.Profile.OnNewOuterProfileLoaded">
            <summary>
            Fired when a new outer profile is loaded. That means when the actual .xml file changes.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.Player.OnMapChanged">
            <summary>
            This event is fired when the map changes.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.Player.OnPlayerDied">
            <summary>
            This event fires when the local player dies
            </summary>
        </member>
        <member name="F:Styx.BotEvents.Player.MapChangedEventArgs.NewMapName">
            <summary>
            The new map name. This is not a friendly map name, but is used by Tripper to denote which meshes to use.
            </summary>
        </member>
        <member name="E:Styx.BotEvents.Battleground.OnBattlegroundEntered">
            <summary>
            Event occurs as the localplayer enters a battleground, sender contains the current battlegroundtype
            </summary>
        </member>
        <member name="E:Styx.BotEvents.Questing.OnQuestAccepted">
            <summary>
            Event occurs as the localplayer accepts a new quest from a questgiver (gameobject/npc/item)
            </summary>
        </member>
        <member name="M:Styx.Helpers.ClassCollection`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.Helpers.ClassCollection`1.CompileAndLoadFrom(System.String,System.CodeDom.Compiler.CompilerResults@)">
            <summary>
            Compiles an assembly and loads all classes of type <typeparamref name="T"/> from that assembly. <paramref name="path"/> can be a directory or .cs file.
            </summary>
        </member>
        <member name="T:Styx.Logic.BehaviorTree.TreeRoot">
            <summary>
            Class that will tick/initialize/start/dispose the behavior tree
            </summary>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.#cctor">
            <summary>
            Default constructor, Set's the Current field wich fills it up with the bot to use.
            </summary>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.HookProcessExit">
            <summary>
            Makes sure Process.Exited get's subscribed to.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.WoWProcess_Exited(System.Object,System.EventArgs)">
            <summary>
            Handles the Exited event of the WoWProcess control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.BotEvents_OnBotStart(System.EventArgs)">
            <summary>
            Fired when the bot start.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.Player_OnMobKilled(Styx.BotEvents.Player.MobKilledEventArgs)">
            <summary>
            Fired on mob killed.
            </summary>
            <param name="args">The <see cref="T:Styx.BotEvents.Player.MobKilledEventArgs"/> instance containing the event data.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.Tick">
            <summary>
            Executes the user code of the function, as expressed in execute.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.Start">
            <summary>
            Initializes and starts the current bot.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.Stop">
            <summary>
            Attempts to stop the current running bot.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.TreeRoot.Run">
            <summary>
            Function used by the thread to tick the current bot
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.TreeRoot.TicksPerSecond">
            <summary>
            Gets or sets the frequency of how often the bot is "Ticked". Default: 15
            </summary>
            <value>
            The ticks per second.
            </value>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.TreeRoot.Current">
            <summary>
            Gets the current <see cref="T:Styx.BotBase"/>.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.TreeRoot.IsRunning">
            <summary>
            Gets a value indicating whether the <see cref="T:Styx.Logic.BehaviorTree.TreeRoot"/> is running.
            </summary>
            <value>
            	<c>true</c> if the <see cref="T:Styx.Logic.BehaviorTree.TreeRoot"/> is running; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.TreeRoot.StatusText">
            <summary>
            Provides the status bar text for the main form and useful loggin info if needed
            </summary>
        </member>
        <member name="E:Styx.Logic.BehaviorTree.TreeRoot.OnStatusTextChanged">
            <summary>
            Occurs when [the status text changes].
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.TreeRoot.GoalText">
            <summary>
            Gets or sets the goal text.
            </summary>
            <value>
            The goal text.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.BehaviorTree.StatusTextChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Logic.BehaviorTree.StatusTextChangedEventArgs"/> class.
            </summary>
            <param name="new">The @new.</param>
            <param name="old">The old.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.StatusTextChangedEventArgs.NewStatus">
            <summary>
            Gets or sets the new status.
            </summary>
            <value>
            The new status.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.BehaviorTree.StatusTextChangedEventArgs.OldStatus">
            <summary>
            Gets or sets the old status.
            </summary>
            <value>
            The old status.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.RoutineManager.Reload">
            <summary>
            Reloads this instance.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.RoutineManager.Init">
            <summary>
            Inits this instance.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Combat.RoutineManager.AutoSelectClass">
            <summary>
            Gets the auto select class.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Combat.RoutineManager.Current">
            <summary>
            The current routine
            </summary>
            <value>
            The routine.
            </value>
        </member>
        <member name="T:Styx.Logic.Combat.RoutineManager.InvalidRoutineWrapper">
            <summary>
            This class just lets us do some things to make sure we always have a valid routine, but don't break the bot.
            It's a good thing, I swear!
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.WeightSet.#ctor(System.String,System.Collections.Generic.Dictionary{Styx.Logic.Inventory.Stat,System.Single})">
            <summary>
            Initialized a new weight set from a dictionary of weights.
            </summary>
            <param name="name">The name of this weight set. This can not be null or empty.</param>
            <param name="weights"></param>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetCompletedQuests">
            <summary>
            Gets the completed quests.
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.AddCompletedQuest(System.UInt32)">
            <summary>
            Adds to the completed quest.
            </summary>
            <param name="questId">The quest id.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetIndexForQuest(System.UInt32)">
            <summary>
            Gets the index for a quest.
            </summary>
            <param name="questId">The quest id.</param>
            <returns>The index.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetAllQuests">
            <summary>
            Gets all the quests in your questlog.
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetQuest(System.UInt32)">
            <summary>
            Gets a quest by the index.
            </summary>
            <param name="index">The index.</param>
            <returns>The quest.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetQuestId(System.UInt32)">
            <summary>
            Gets the quest id of a quest in your questlog by the index.
            </summary>
            <param name="index">The index.</param>
            <returns>The quest id.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.InternalGetQuestId(System.UInt32)">
            <summary>
            Gets the quest id of a quest in your questlog by the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.ContainsQuest(System.UInt32)">
            <summary>
            Determines whether the specified quest id is contained in the questlog
            </summary>
            <param name="questId">The quest id.</param>
            <returns>
              <c>true</c> if the specified quest id is contained in the questlog; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetQuestById(System.UInt32)">
            <summary>
            Gets the quest by id.
            </summary>
            <param name="questID">The quest ID.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.GetQuestInfo(System.Int32)">
            <summary>
            Gets detailed info on a quest.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.AbandonQuestById(System.UInt32)">
            <summary>
            Abandons a quest by it's id.
            </summary>
            <param name="questId">The quest id.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.AbandonQuest(System.Byte)">
            <summary>
            Abandons the quest.
            </summary>
            <param name="slot">The slot.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLog.QuestLogRemoveQuest(System.Byte)">
            <summary>
            Removes a quest from the questlog.
            </summary>
            <param name="slot">The slot.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Questing.QuestLog.QuestCount">
            <summary>
            Number of quests in the questlog including the headers. eg; 'Dun Morogh', 'Loch Modan', 'Alterac Valley' etc...
            </summary>
        </member>
        <member name="P:Styx.Logic.Questing.QuestLog.QuestLogWithHeaders">
            <summary>
            Returns a list of <see cref="T:Styx.Logic.Questing.QuestLogEntry"/> objects from the QuestLog
            </summary>
        </member>
        <member name="F:Styx.Logic.Questing.QuestLogEntry.Id">
            <summary>
            The ID.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.Logic.Questing.QuestLogEntry.State">
            <summary>
            The state flag.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.Logic.Questing.QuestLogEntry.ObjectiveRequiredCounts">
            <summary>
            The required objective count.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.Logic.Questing.QuestLogEntry.Time">
            <summary>
            The time.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Questing.QuestLogEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.Logic.Questing.QuestLogEntry.StateFlag.Complete">
            <summary>
            Completed quest.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.Logic.Questing.QuestLogEntry.StateFlag.Failed">
            <summary>
            Failed quest.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Helpers.RangedDictionary`1.GetAllValues">
            <summary>
            Gets all values in all ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.Helpers.RangedDictionary`1.ValueCount">
            <summary>
            Gets the total value count with all ranges.
            </summary>
        </member>
        <member name="T:Styx.Helpers.SettingAttribute">
            <summary>
            Marks a property as a setting, optionally providing an explanation and element name for the output XML file.
            </summary>
        </member>
        <member name="T:Styx.Helpers.DefaultValueAttribute">
            <summary>
            Gives a setting a default value it will be initialized with.
            </summary>
        </member>
        <member name="T:Styx.Helpers.EncryptedAttribute">
            <summary>
            Encrypts a setting using passed in key and IV.
            </summary>
        </member>
        <member name="M:Styx.Helpers.EncryptedAttribute.#ctor(System.String,System.String)">
            <summary>Constructor. </summary>
            <remarks>Created 8/6/2011.</remarks>
            <param name="key">A base64 encoded string representing the Key to use for the cipher.</param>
            <param name="iv">A base64 encoded string representing the IV to use for the cipher.</param>
        </member>
        <member name="T:Styx.Logic.Pathing.NavigationProviderChangedEventArgs`1">
            <summary>Additional information for navigator changed events. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="P:Styx.Logic.Pathing.NavigationProviderChangedEventArgs`1.OldProvider">
            <summary>Gets or sets the old provider.</summary>
            <value>The old provider.</value>
        </member>
        <member name="P:Styx.Logic.Pathing.NavigationProviderChangedEventArgs`1.NewProvider">
            <summary>Gets or sets the new provider.</summary>
            <value>The new provider.</value>
        </member>
        <member name="T:Styx.Logic.Pathing.Navigator">
            <summary>Navigator. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.GetNavigationProviderAs``1">
            <summary>Gets the navigation provider as. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <typeparam name="T">Generic type parameter.</typeparam>
            <returns>The navigation provider as T</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.MoveTo(Styx.Logic.Pathing.WoWPoint)">
            <summary>Move to. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the navigation provider is null.</exception>
            <param name="location">The location.</param>
            <returns>.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.Clear">
            <summary>Clears the current path to its blank/initial state. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.GeneratePath(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>Generates a path. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="from">Source for the.</param>
            <param name="to">to.</param>
            <returns>The path.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.CanNavigateFully(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>Queries if we can navigate fully 'from' one location 'to' another.</summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="from">Source for the.</param>
            <param name="to">to.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.CanNavigateFully(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint,System.Int32)">
            <summary>Queries if we can navigate fully 'from' one location 'to' another.</summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="from">Source for the.</param>
            <param name="to">to.</param>
            <param name="maxHops"></param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.GetRunStatusFromMoveResult(Styx.Logic.Pathing.MoveResult)">
            <summary>Gets a run status from move result. </summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when one or more arguments are outside
                                                          the required range.</exception>
            <param name="moveResult">The move result.</param>
            <returns>The run status from move result.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.FindHeights(System.Single,System.Single)">
            <summary>Finds all heights at a specified X and Y value.</summary>
            <remarks>Created 12/1/2010.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>The found mesh heights.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.FindHeight(Tripper.Tools.Math.Vector3@)">
            <summary>Finds a height of a specified point and assigns the vector passed-in's Z value with the height (if successful).</summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="v">[in,out] The vector containing the X and Y value. The Z value will be assigned if this function succeeds.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Styx.Logic.Pathing.Navigator.FindHeight(System.Single,System.Single,System.Single@)">
            <summary>Finds a height at a specified X and Y coordinate.</summary>
            <remarks>Created 12/1/2010.</remarks>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">[out] The z coordinate.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="P:Styx.Logic.Pathing.Navigator.NavigationProvider">
            <summary>Gets or sets the navigation provider.</summary>
            <value>The navigation provider.</value>
        </member>
        <member name="P:Styx.Logic.Pathing.Navigator.HeightProvider">
            <summary>Gets or sets the height provider.</summary>
            <value>The height provider.</value>
        </member>
        <member name="P:Styx.Logic.Pathing.Navigator.PlayerMover">
            <summary>Gets or sets the player mover.</summary>
            <value>The player mover.</value>
        </member>
        <member name="P:Styx.Logic.Pathing.Navigator.PathPrecision">
            <summary>Gets the path precision.</summary>
            <value>The path precision.</value>
        </member>
        <member name="E:Styx.Logic.Pathing.Navigator.OnNavigationProviderChanged">
            <summary> Event queue for all listeners interested in OnNavigationProviderChanged events. </summary>
        </member>
        <member name="E:Styx.Logic.Pathing.Navigator.OnPlayerMoverChanged">
            <summary> Event queue for all listeners interested in OnPlayerMoverChanged events. </summary>
        </member>
        <member name="E:Styx.Logic.Pathing.Navigator.OnHeightProviderChanged">
            <summary> Event queue for all listeners interested in OnHeightProviderChanged events. </summary>
        </member>
        <member name="E:Styx.Logic.Pathing.Navigator.OnStuckHandlerChanged">
            <summary> Event queue for all listeners interested in OnStuckHandlerChanged events. </summary>
        </member>
        <member name="T:Styx.Logic.Pathing.MoveResult">
            <summary>Values that represent MoveResult. </summary>
            <remarks>Created 12/1/2010.</remarks>
        </member>
        <member name="F:Styx.Logic.Pathing.MoveResult.Failed">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.Logic.Pathing.MoveResult.ReachedDestination">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.Logic.Pathing.MoveResult.PathGenerationFailed">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.Logic.Pathing.MoveResult.PathGenerated">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.Logic.Pathing.MoveResult.UnstuckAttempt">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.Logic.Pathing.MoveResult.Moved">
            <summary> .  </summary>
        </member>
        <member name="M:Styx.Helpers.CircularQueue`1.Dequeue">
            <summary>Removes the head object from this queue. </summary>
            <remarks>Created 1/6/2011.</remarks>
            <returns>The head object from this queue.</returns>
        </member>
        <member name="M:Styx.Helpers.CircularQueue`1.Enqueue(`0)">
            <summary>Adds an object onto the end of this queue. </summary>
            <remarks>Created 1/6/2011.</remarks>
            <param name="item">The item.</param>
        </member>
        <member name="M:Styx.Helpers.CircularQueue`1.CycleTo(`0)">
            <summary>Cycle to. </summary>
            <remarks>Created 1/6/2011.</remarks>
            <param name="item">The item.</param>
        </member>
        <member name="M:Styx.Helpers.CircularQueue`1.Add(`0)">
            <summary> Enqueues the item. Needed for constructor </summary>
            <remarks>Created 15/12/2011.</remarks>
            <param name="item"></param>
        </member>
        <member name="T:Styx.GraphicsApi">
            <summary>Values that represent GraphicsApi. </summary>
            <remarks>Created 12/18/2010.</remarks>
        </member>
        <member name="F:Styx.GraphicsApi.OpenGL">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.GraphicsApi.D3D9">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.GraphicsApi.D3D11">
            <summary> .  </summary>
        </member>
        <member name="F:Styx.GraphicsApi.GLL">
            <summary> .  </summary>
        </member>
        <member name="M:Styx.StyxWoW.SleepForLagDuration">
            <summary>
            Causes the current thread to sleep, for the amount of time it takes a packet to be sent to the server, and a possible update packet
            to be recieved. Will also sleep for an extra 50ms to include 'processing time'.
            </summary>
        </member>
        <member name="M:Styx.StyxWoW.ResetAfk">
            <summary>Resets the afk. </summary>
            <remarks>Created 12/18/2010.</remarks>
        </member>
        <member name="P:Styx.StyxWoW.Camera">
            <summary>Gets the current game camera.</summary>
            <value>The camera.</value>
        </member>
        <member name="P:Styx.StyxWoW.Landmarks">
            <summary>Gets or sets the landmarks.</summary>
            <value>The landmarks.</value>
        </member>
        <member name="P:Styx.StyxWoW.Db">
            <summary>Gets or sets the database.</summary>
            <value>The database.</value>
        </member>
        <member name="P:Styx.StyxWoW.Cache">
            <summary>Gets or sets the cache.</summary>
            <value>The cache.</value>
        </member>
        <member name="P:Styx.StyxWoW.AreaManager">
            <summary>Gets or sets the manager for area.</summary>
            <value>The area manager.</value>
        </member>
        <member name="P:Styx.StyxWoW.Me">
            <summary>Gets me.</summary>
            <value>me.</value>
        </member>
        <member name="P:Styx.StyxWoW.WoWClient">
            <summary>Gets or sets the wo w client.</summary>
            <value>The wo w client.</value>
        </member>
        <member name="P:Styx.StyxWoW.IsInGame">
            <summary>Gets a value indicating whether this object is in game.</summary>
            <value>true if this object is in game, false if not.</value>
        </member>
        <member name="P:Styx.StyxWoW.GameGraphicsApi">
            <summary>Gets the game graphics api.</summary>
            <value>The game graphics api.</value>
        </member>
        <member name="P:Styx.StyxWoW.GameVersion">
            <summary>Gets the game version.</summary>
            <value>The game version.</value>
        </member>
        <member name="P:Styx.StyxWoW.GameState">
            <summary>Gets the state of the game (Idling, zoning, etc).</summary>
            <value>The game state.</value>
        </member>
        <member name="P:Styx.StyxWoW.IsInWorld">
            <summary>Returns whether the current character is logged in, and not zoning. (Loading screen).</summary>
            <value>true if this object is in world, false if not.</value>
        </member>
        <member name="P:Styx.StyxWoW.GlobalCooldown">
            <summary>
            Returns a value indicating if the global cooldown is currently running.
            </summary>
        </member>
        <member name="P:Styx.StyxWoW.ImageBase">
            <summary>
            Returns the imagebase of the opened process.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.ObjectManager.SupportedBuildNumber">
            <summary>
            Currently supported build number
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.InternalGetMe">
            <summary>
            Internals the get me.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.Initialize(BlueMagic.Memory)">
            <summary>
            Initializes BlackMagic Wow and some pointers
            </summary>
            <param name="blackmagic">instance of BlackMagic that will be used in the entire bot to read and write memory</param>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.HookEndscene">
            <summary>
            Install endscene hook
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.ConstructObject(System.UInt32,System.Nullable{Styx.WoWObjectType},System.UInt64,System.UInt64)">
            <summary>
            Constructs an object of the correct type by a given base address.
            </summary>
            <param name="baseAddress">The address of the object.</param>
            <param name="objType">The object type of the object or null if it should be read.</param>
            <param name="objGuid">The GUID of the object.</param>
            <param name="myGuid">The GUID of the local player.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetObjectsOfType``1">
            <summary>
            Gets all objects of a specified type, excluding yourself.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetObjectsOfType``1(System.Boolean)">
            <summary>
            Gets all objects of a type, excluding yourself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="allowInheritance">Indicates whether to also get objects that derives from the specified type (ie. WoWPlayer derives from WoWUnit, so specifying WoWUnit and true would also return all players).</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetObjectsOfType``1(System.Boolean,System.Boolean)">
            <summary>
            Gets object of the specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="allowInheritance">Indicates whether to also get objects that derives from the specified type (ie. WoWPlayer derives from WoWUnit, so specifying WoWUnit and true would also return all players).</param>
            <param name="includeMeIfFound">Indicates whether to include the local player.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetGuidByKeyword(System.String,System.UInt64@,System.Int32)">
            <summary>
            Gets the GUID by keyword.
            </summary>
            <param name="keyword">The keyword.</param>
            <param name="guid">The GUID.</param>
            <param name="unk">The unk.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetUnitByKeyword``1(System.String)">
            <summary>
            Gets the unit by keyword.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="unit">The unit.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetObjectByGuid(System.UInt64)">
            <summary>
            Gets the object by GUID.
            </summary>
            <param name="guid">The GUID.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetAnyObjectByGuid``1(System.UInt64)">
            <summary>
            Gets any object by GUID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="guid">The GUID.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.ObjectManager.GetObjectByGuid``1(System.UInt64)">
            <summary>
            Gets the object by GUID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="guid">The GUID.</param>
            <returns></returns>
        </member>
        <member name="E:Styx.WoWInternals.ObjectManager.OnObjectListUpdateFinished">
            <summary>
            Occurs when [the object list has finished updating].
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.WoWProcess">
            <summary>
            Gets the WoW process as a <see cref="T:System.Diagnostics.Process"/>.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.IsInitialized">
            <summary>
            Gets a value indicating whether this instance is initialized.
            </summary>
            <value>
            	<c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.Wow">
            <summary>
            Gets the Memory reader used in Styx.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.Executor">
            <summary>
            Gets or sets the executor.
            </summary>
            <value>
            The executor.
            </value>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.Me">
            <summary>
            Gets or sets me.
            </summary>
            <value>
            Me.
            </value>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.RemoteAsm">
            <summary>
            Gets the remote asm.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.LocalGuid">
            <summary>
            Gets the local GUID.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.CurMgrPtr">
            <summary>
            Gets the current objectmanager pointer.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.IsInGame">
            <summary>
            Returns whether the local player is ingame or not.  
            </summary>
            <summary>
            Returns true if you are currently ingame.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.ObjectManager.ObjectList">
            <summary>
            Gets the object list.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWCache.WoWCache.GetInfoBlockById(System.UInt32,System.UInt32,System.UInt32,System.UInt64,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a info block by id.
            </summary>
            <param name="function">The function.</param>
            <param name="caller">The caller.</param>
            <param name="index">The index.</param>
            <param name="guid">The GUID.</param>
            <param name="a3">The a3.</param>
            <param name="a4">The a4.</param>
            <param name="a5">The a5.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Id">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Method">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Level">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RequiredLevel">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.AreaIdOrSortId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.InfoId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.SuggestedPlayers">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.FriendlyFactionID">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.FriendlyFactionAmount">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.HostileFactionID">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.HostileFactionAmount">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.NextQuestId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.XPId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardMoney">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardMoneyInsteadOfXp">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardSpellId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.EffectOnPlayer">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardHonor">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardHonorBonus">
            float
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.StartingItemId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Flags">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardItem">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardItemCount">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardChoiceItem">
            int[6]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardChoiceItemCount">
            int[6]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.PointMapID">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.PointX">
            float
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.PointY">
            float
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.PointOptional">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Name">
            BYTE[512]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.ObjectiveText">
            BYTE[3000]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Description">
            BYTE[3000]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.EndText">
            BYTE[512]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.ObjectiveId">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.ObjectiveRequiredCount">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.CollectItemId">
            int[6]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.CollectItemCount">
            int[6]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.IntermediateItemId">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.IntermediateItemCount">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_1">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.ObjectiveTexts">
            BYTE[1024]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardTitleId">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RequiredPlayersKilled">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardTalentPoints">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardArenaPoints">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_2">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_3">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_4">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_5">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_6_String512">
            BYTE[512]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_7">
            BYTE[512]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_8_String256">
            BYTE[256]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_9_String512">
            BYTE[512]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_10_String512">
            BYTE[512]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_11_String256">
            BYTE[256]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.CompletionText">
            BYTE[2048]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardReputationFaction">
            int[5]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.FactionRewardID">
            int[5]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.RewardReputationOverride">
            int[5]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.Unk17">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_12_RewardCurrency">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_13_RewardCurrencyCount">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_14_RequiredCurrency">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_15_RequiredCurrencyCount">
            int[4]
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_16_SoundId_Unk">
            int
        </member>
        <member name="F:Styx.WoWInternals.WoWCache.WoWCache.QuestCacheEntry.New401_17_QuestCompleteAction_Unk">
            int
        </member>
        <member name="M:Styx.WoWInternals.WoWCache.WoWCache.Cache.GetInfoBlockById(System.UInt32)">
            <summary>
            Gets an infoblock. Returns null if there was no infoblock for the passed id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.LocalPlayer">
            <summary>
            The main local player (me)
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWUnit">
            <summary>
            <see cref="T:Styx.WoWInternals.WoWObjects.WoWUnit"/> a wrapper for wow's CGUnit_C class.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWObject">
            <summary>
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> class.
            </summary>
            <param name="baseAdress">The base adress.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetWorldMatrix">
            <summary>
            Returns the WorldMatrix of this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/>
            </summary>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.HasFlag(System.UInt32,System.UInt32)">
            <summary>
            Determines whether the specified flags has flag.
            </summary>
            <param name="flag">The flag.</param>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified flag has flag; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ReadGuid(System.UInt32)">
            <summary>
            Reads the GUID.
            </summary>
            <param name="baseAddress">The base address.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.UpdatePointer(System.UInt32)">
            <summary>
            Updates the pointer.
            </summary>
            <param name="ptr">The PTR.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.Equals(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.op_Equality(Styx.WoWInternals.WoWObjects.WoWObject,Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.op_Inequality(Styx.WoWInternals.WoWObjects.WoWObject,Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.CompareTo(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetStorageFieldByOffsetIndex``1(System.Int32)">
            <summary>
            Gets the index of the storage field by offset.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="offsetIndex">The offset index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetStorageField``1(System.UInt32)">
            <summary>
            The get storage field.
            </summary>
            <typeparam name="T">The generic type to get</typeparam>
            <param name="field">The field number.</param>
            <returns>
            The storage field.
            </returns>
            <exception cref="T:System.InvalidOperationException">
              <c>InvalidOperationException</c>.
              </exception>
            <exception cref="T:Styx.InvalidObjectPointerException"><c>InvalidObjectPointerException</c>.</exception>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToDynamicObject">
            <summary>Casts this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWDynamicObject"/> </summary>
            <remarks>Created 3/29/2011.</remarks>
            <returns>This object as a WoWDynamicObject.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToUnit">
            <summary>
            Casts this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWUnit"/>
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToPlayer">
            <summary>
            Casts this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWPlayer"/>
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToItem">
            <summary>
            Casts this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/>
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToContainer">
            <summary>
            Casts this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWContainer"/>
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.ToGameObject">
            <summary>
            Casts this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWGameObject"/>
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.FireInvalidated">
            <summary>
            Fires the invalidated.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsFacing(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Returns a boolean indicating whether this object is facing another object. This should not be used unless you know what yo uare doing. Use IsSafelyFacing instead.
            </summary>
            <param name="obj">The other object.</param>
            <returns>
              <c>true</c> if the specified obj is facing; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsFacing(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Returns a boolean indicating wheter this object is facing a point.
            </summary>
            <param name="location">The location to check against.</param>
            <returns>
              <c>true</c> if the specified location is facing; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsSafelyFacing(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Returns a boolean indicating whether this object is safely facing another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>
              <c>true</c> if [is safely facing] [the specified obj]; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsSafelyFacing(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Returns a boolean indicating whether this object is facing a point.
            </summary>
            <param name="location">The location to check against.</param>
            <returns>
              <c>true</c> if [is safely facing] [the specified location]; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsSafelyFacing(Styx.WoWInternals.WoWObjects.WoWObject,System.Single)">
            <summary>
            Returns a boolean indicating whether this object is safely facing another object.
            </summary>
            <param name="obj">The other object.</param>
            <param name="viewDegrees">The view in degrees.</param>
            <returns>
            true if safely facing, false if not.
            </returns>
            <remarks>
            Created 10/6/2010.
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsBehind(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Returns a boolean indicating whether this object is behind an other object. This should not be used unless you know what you are doing. Use IsSafelyBehind instead.
            </summary>
            <param name="obj">The other object.</param>
            <returns>
              <c>true</c> if the specified obj is behind; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.IsSafelyBehind(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            Returns a boolean indicating whether this object is safely behind an other object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>
              <c>true</c> if [is safely behind] [the specified obj]; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.Interact">
            <summary>
            Performs a simulated right click on this object, very useful for looting npcs etc...
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.Interact(System.Boolean)">
            <summary>
            Performs a simulated right click on this object, very useful for looting npcs etc...
            </summary>
            <param name="ignoreTimer">if set to <c>true</c> [ignore timer].</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetPosition">
            <summary>
            Gets the position of the object using the virtual method table. This is slower than using <see cref="P:Styx.WoWInternals.WoWObjects.WoWObject.Location"/>. Use <see cref="P:Styx.WoWInternals.WoWObjects.WoWObject.Location"/> whenever possible.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Cannot begin injected subroutine on an object with BaseAddress == 0</exception>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetObjectName">
            <summary>
            Returns the name of a <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/>
            </summary>
            <returns>
            The name of this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetIsIndoors">
            <summary>
            Determines whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> is indoors.
            </summary>
            <returns>
              <c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> is indoors; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWObject.GetIsOutdoors">
            <summary>
            Determines whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> is outdoors.
            </summary>
            <returns>
              <c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> is outdoors; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">Cannot begin injected subroutine on an object with BaseAddress == 0</exception>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="E:Styx.WoWInternals.WoWObjects.WoWObject.OnInvalidate">
            <summary>
            This event is fired when this object becomes invalid, when it is removed from the object list.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.BaseAddress">
            <summary>
            The BaseAddress of this object in WoW
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.IsValid">
            <summary>
            Always returns true if your toon is logged in and the object exists.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Entry">
            <summary>
            The Entry of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Type">
            <summary>
            This object's type
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.TypeFlags">
            <summary>
            The TypeFlags of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Guid">
            <summary>
            The GUID of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.WoWGuid">
            <summary>
            The GUID of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.ObjectFlags">
            <summary>
            The ObjectFlags of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.InteractRange">
            <summary>
            The InteractRange of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.InteractRangeSqr">
            <summary>
            The Squared InteractRange of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.WithinInteractRange">
            <summary>
            Returns true if you are within InteractRange of this object
            </summary>
            <value>
              <c>true</c> if [within interact range]; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.IsDisabled">
            <summary>
            Returns whether the current object is disabled. (Fading out)
            </summary>
            <value>
            	<c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.DescriptorGuid">
            <summary>
            The GUID of this object according to the descriptors
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.X">
            <summary>
            The X coordinate for this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Y">
            <summary>
            The Y coordinate for this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Z">
            <summary>
            The Z coordinate for this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Rotation">
            <summary>
            The rotation for this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.RotationDegrees">
            <summary>
            The rotation in degrees for this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Distance">
            <summary>
            The distance from the local player to this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.DistanceSqr">
            <summary>
            The squared distance from the local player to this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Distance2D">
            <summary>
            The 2d distance from the local player to this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Distance2DSqr">
            <summary>
            The squared 2d distance from the local player to this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.IsMe">
            <summary>
            Returns true if this is me
            </summary>
            <value>
              <c>true</c> if this instance is me; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Name">
            <summary>
            The name of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.Location">
            <summary>
            Returns the location as a <see cref="T:Styx.Logic.Pathing.WoWPoint"/> object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.WorldLocation">
            <summary>
            Returns the WorldLocation of this object as a <see cref="T:Styx.Logic.Pathing.WoWPoint"/>
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.RelativeLocation">
            <summary>
            Gets the relative location.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.QuestGiverStatus">
            <summary>
            The QuestGiverStatus of this object, 'TurnIn', 'Avaible' etc..
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.InteractType">
            <summary>
            The InteractType of thisi object
            </summary>
            <value>
            The type of the interact.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.MeIsSafelyBehind">
            <summary>
            Returns a boolean indicating whether the local player is safely behind this unit.
            </summary>
            <value>
              <c>true</c> if [me is safely behind]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.MeIsBehind">
            <summary>
            Returns a boolean indicating whether the local player is behind this unit. This should not be used unless you know what you are doing. Use <see cref="P:Styx.WoWInternals.WoWObjects.WoWObject.MeIsSafelyBehind"/> instead.
            </summary>
            <value>
              <c>true</c> if [me is behind]; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.IsOutdoors">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> is outdoors.
            </summary>
            <value>
            	<c>true</c> if this instance is outdoors; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.IsIndoors">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> is indoors.
            </summary>
            <value>
            	<c>true</c> if this instance is indoors; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.InLineOfSight">
            <summary>
            Returns true if this object is in line of sight
            </summary>
            <value>
              <c>true</c> if [in line of sight]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWObject.InLineOfSightOCD">
            <summary>
            Returns true if this object is in line of sight using extra OCD checks - MUCH SLOWER THAN THE InLineOfSight PROPERTY
            </summary>
            <value>
              <c>true</c> if [in line of sight OCD]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.ILootableObject">
            <summary>
            Interface provided for lootable objets.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ILootableObject.CanLoot">
            <summary>
            
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.#ctor(System.UInt32)">
            <summary>
            </summary>
            <param name="baseAddress">pointer for this object. </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetAuraByName(System.String)">
            <summary>
            Gets an aura by name. If the return value is null, the aura does not exist.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetAuraById(System.Int32)">
            <summary>
            Gets an aura by id. If the return value is null, the aura does not exist.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.HasAura(System.String)">
            <summary>
            Returns a boolean indicating whether this unit has an aura.
            </summary>
            <param name="name">The name of the aura.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.HasAura(System.Int32)">
            <summary>
            Returns a boolean indicating whether this unit has an aura.
            </summary>
            <param name="id">The id of the aura.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetAuras">
            <summary>
            Return's a Dictionary of <see cref="T:Styx.Logic.Combat.WoWSpell"/> with the current active, passive and harmful auras of a target
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetAllAuras">
            <summary>
            Gets all auras.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetTraceLinePos">
            <summary>
            Returns a point more suitable for usage with TraceLine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetCurrentPower(Styx.WoWPowerType)">
            <summary>Gets a current power.</summary>
            <param name="type">The type.</param>
            <returns>The current power.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetMaxPower(Styx.WoWPowerType)">
            <summary>Gets a maximum power.</summary>
            <param name="type">The type.</param>
            <returns>The maximum power.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetPowerPercent(Styx.WoWPowerType)">
            <summary>Gets a power percent.</summary>
            <param name="type">The type.</param>
            <returns>The power percent.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetPowerRegenFlat(Styx.WoWPowerType)">
            <summary>Gets a power regen flat.</summary>
            <param name="type">The type.</param>
            <returns>The power regen flat.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetPowerRegenInterrupted(Styx.WoWPowerType)">
            <summary>Gets a power regen interrupted.</summary>
            <param name="type">The type.</param>
            <returns>The power regen interrupted.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetPowerInfo(Styx.WoWPowerType)">
            <summary>Gets a power information.</summary>
            <param name="type">The type.</param>
            <returns>The power information.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetPowerCostModifier(Styx.WoWPowerType)">
            <summary>Gets a power cost modifier.</summary>
            <param name="type">The type.</param>
            <returns>The power cost modifier.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetPowerCostMultiplier(Styx.WoWPowerType)">
            <summary>Gets a power cost multiplier.</summary>
            <param name="type">The type.</param>
            <returns>The power cost multiplier.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.HasFlag(Styx.UnitNPCFlags)">
            <summary>Query if 'flags' has flag.</summary>
            <param name="flags">The flags.</param>
            <returns>true if flag, false if not.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.HasFlag(Styx.UnitDynamicFlags)">
            <summary>Query if 'flags' has flag.</summary>
            <param name="flags">The flags.</param>
            <returns>true if flag, false if not.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.HasFlag(Styx.UnitFlags)">
            <summary>Query if 'flags' has flag.</summary>
            <param name="flags">The flags.</param>
            <returns>true if flag, false if not.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.HasFlag(Styx.UnitFlags2)">
            <summary>Query if 'flags' has flag.</summary>
            <param name="flags">The flags.</param>
            <returns>true if flag, false if not.</returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetCachedInfo(Styx.WoWInternals.WoWCache.WoWCache.CreatureCacheEntry@)">
            <summary>
            Gets the cached info for this unit. A return value indicates whether this unit has cached info.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.Behind(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Returns true if passed in object is behind this unit
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetStealthDetectionRange(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Gets the approximate range at which this unit will be detected by the passed in unit.
            </summary>
            <param name="to">The "To" unit.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetAggroRange(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Gets the approximate aggro range of this unit towards another unit.
            </summary>
            <param name="to">The "To" unit.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.Face">
            <summary>
            Face a target
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.Target">
            <summary>
            Target's this unit
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.TargetInternal(System.UInt64)">
            <summary>
            Internal function used by styx without any extra checks for setting targets
            </summary>
            <param name="guid">The GUID.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetReactionTowards(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Gets the reaction of this unit towards another unit.
            </summary>
            <param name="otherUnit">The other unit.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetForcedReaction(System.UInt32,Styx.WoWUnitReaction@)">
            <summary>
            Gets the forced reaction.
            </summary>
            <param name="factionId">The faction id.</param>
            <param name="reaction">The reaction.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.GetThreatInfoFor(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Returns detailed threat information for this unit towards the passed in unit
            </summary>
            <param name="otherUnit">The other unit.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.IsWithinMeleeRangeInternal(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Internal function, used to determine if we are within melee range of a unit.
            </summary>
            <param name="otherUnit">The other unit.</param>
            <returns>
              <c>true</c> if we are within range, <c>false</c> otherwise.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentCastStartTime">
            <summary>Gets the current cast start time.</summary>
            <value>The time of the current cast start.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentCastEndTime">
            <summary>Gets the current cast end time.</summary>
            <value>The time of the current cast end.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentCastTimeLeft">
            <summary>Gets the current cast time left.</summary>
            <value>The current cast time left.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentCastId">
            <summary>Gets the current cast ID number. This is basically an incremental counter of how many spells have been cast since logging in to the game.</summary>
            <value>The identifier of the current cast.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CanInterruptCurrentSpellCast">
            <summary>Returns whether the current spell being cast by this unit, can actually be interrupted. If no spell is being cast, this should return false.</summary>
            <value>true if we can interrupt current spell cast, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Auras">
            <summary>
            Returns a dictionary of auras on a unit, with the name of the aura as the key.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PassiveAuras">
            <summary>
            Return's a Dictionary of <see cref="T:Styx.Logic.Combat.WoWSpell"/> with the current passive auras of a target
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ActiveAuras">
            <summary>
            Return's a Dictionary of <see cref="T:Styx.Logic.Combat.WoWSpell"/> with the current active auras of a target
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Buffs">
            <summary>
            Return's a Dictionary of <see cref="T:Styx.Logic.Combat.WoWSpell"/> with the current helpful auras of a target
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Debuffs">
            <summary>
            Return's a Dictionary of <see cref="T:Styx.Logic.Combat.WoWSpell"/> with the current harmful auras of a target
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BoundingHeight">
            <summary>
            Returns the height of the bounding box for this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Location">
            <summary>Returns the Location of this unit.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RelativeLocation">
            <summary>Returns the relative location of this unit.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RenderFacing">
            <summary>Gets the render facing for this <see cref="T:Styx.WoWInternals.WoWObjects.WoWUnit"/>.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Rotation">
            <summary>Returns the rotation/facing of this unit in radians.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.InteractRange">
            <summary>Returns the InteractRange of this unit. </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsWithinMeleeRange">
            <summary>Internal function, used to determine if we are within melee range of a unit.</summary>
            <returns><c>true</c> if we are within range, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.TransportGuid">
            <summary> Returns the transport guid of this unit.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Transport">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> of the current transport or null if not on a transport.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsOnTransport">
            <summary>
            Returns a boolean indicating if you are on a transport.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsPlayerBehind">
            <summary>
            Returns a boolean indicating if you are behind this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BehindTarget">
            <summary>
            Returns true if you are behind this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MeIsSafelyBehind">
            <summary>
            Returns a boolean indicating whether the local player is safely behind this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MeIsBehind">
            <summary>
            Returns a boolean indicating whether the local player is behind this unit. This should not be used unless you know what you are doing. Use <see cref="P:Styx.WoWInternals.WoWObjects.WoWUnit.MeIsSafelyBehind"/> instead.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsMoving">
            <summary>
            Returns a boolean indicating if this unit is moving.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsFalling">
            <summary>
            Returns a boolean indicating whether this unit is falling.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsSwimming">
            <summary>
            Returns a boolean indicating whether this unit is swimming.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsFlying">
            <summary>
            Returns a boolean indicating whether this unit is flying.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MovementInfo">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWObjects.WoWMovementInfo"/> struct for this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ChannelObject">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWObjects.WoWObject"/> with the current channeled object, eg; 'Fishing Bobber'
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ChannelObjectGuid">
             <summary>
            Returns the guid of the current channeled object, eg; 'Fishing Bobber'
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CharmedUnit">
            <summary>Gets the charmed unit.</summary>
            <value>The charmed unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CharmedUnitGuid">
            <summary>Gets the guid of the charmed unit.</summary>
            <value>The charmed unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SummonedUnit">
            <summary>Gets the summoned unit.</summary>
            <value>The summoned unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SummonedUnitGuid">
            <summary>Gets the summoned unit guid.</summary>
            <value>The summoned unit guid.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.VanityPet">
            <summary>Gets the vanity pet.</summary>
            <value>The vanity pet.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.VanityPetGuid">
            <summary>Gets the vanity pet guid.</summary>
            <value>The vanity pet.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CharmedByUnit">
            <summary>Gets the charmed by unit.</summary>
            <value>The charmed by unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CharmedByUnitGuid">
            <summary>Gets the charmed by unit guid.</summary>
            <value>The charmed by unit guid.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SummonedByUnit">
            <summary>Gets the summoned by unit.</summary>
            <value>The summoned by unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SummonedByUnitGuid">
            <summary>Gets the summoned by unit guid.</summary>
            <value>The summoned by unit guid.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CreatedByUnit">
            <summary>Gets the created by unit.</summary>
            <value>The created by unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CreatedByUnitGuid">
            <summary>Gets the created by unit guid.</summary>
            <value>The created by unit guid.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentTarget">
            <summary>Gets the current target.</summary>
            <value>The current target.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentTargetGuid">
            <summary>Gets the current target guid.</summary>
            <value>The current target guid.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.OwnedByUnit">
            <summary>
            If this unit is a pet, this returns the Unit who 'owns' this pet. (Summoned or charmed by)
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.OwnedByRoot">
            <summary>
            Returns the root unit that owns this unit
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ControllingPlayer">
            <summary>
            Gets the player controlling this unit, or null if this unit is not controlled.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.GotTarget">
            <summary>
            Returns a boolean indicating if you got a target.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentPower">
            <summary>Returns the current power of this unit.</summary>
            <value>The current power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxPower">
            <summary>Gets the maximum power.</summary>
            <value>The maximum power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerPercent">
            <summary>Gets the power percent.</summary>
            <value>The power percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentPowerInfo">
            <summary>Gets the information describing the current power.</summary>
            <value>Information describing the current power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Dead">
            <summary>Gets a value indicating whether the dead.</summary>
            <value>true if dead, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentHealth">
            <summary>Returns the current health of this unit.</summary>
            <value>The current health.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentMana">
            <summary>Returns the current mana of this unit.</summary>
            <value>The current mana.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentRage">
            <summary>Returns the current rage of this unit.</summary>
            <value>The current rage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentEnergy">
            <summary>Returns the current energy of this unit.</summary>
            <value>The current energy.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentFocus">
            <summary>Returns the current focus of this unit.</summary>
            <value>The current focus.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentHappiness">
            <summary>Returns the current happiness of this unit.</summary>
            <value>The current happiness.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentRunicPower">
            <summary>Returns the current runicpower of this unit.</summary>
            <value>The current runic power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentSoulShards">
            <summary>Gets the current soul shards.</summary>
            <value>The current soul shards.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentEclipse">
            <summary>Gets the current eclipse. Values less than zero are "solar", values above zero are "lunar". Currently no way to tell which way the meter is filling.</summary>
            <value>The current eclipse.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CurrentHolyPower">
            <summary>Gets the current holy power.</summary>
            <value>The current holy power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxHealth">
            <summary>Returns the maximum health of this unit.</summary>
            <value>The maximum health.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxMana">
            <summary>Returns the maximum mana of this unit.</summary>
            <value>The maximum mana.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxRage">
            <summary>Returns the maximum rage of this unit.</summary>
            <value>The maximum rage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxEnergy">
            <summary>Returns the maxmimum energy of this unit.</summary>
            <value>The maximum energy.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxFocus">
            <summary>Returns the maximum focus of this unit.</summary>
            <value>The maximum focus.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxHappiness">
            <summary>Returns the maximum happiness of this unit.</summary>
            <value>The maximum happiness.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxRunicPower">
            <summary>Returns the maximum runicpower of this unit.</summary>
            <value>The maximum runic power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxSoulShards">
            <summary>Gets the maximum soul shards.</summary>
            <value>The maximum soul shards.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxEclipse">
            <summary>Gets the maximum eclipse.</summary>
            <value>The maximum eclipse.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxHolyPower">
            <summary>Gets the maximum holy power.</summary>
            <value>The maximum holy power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.EclipsePercent">
            <summary>Gets the holy power in percent.</summary>
            <value>The holy power in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.EnergyPercent">
            <summary>Gets the energy in percent.</summary>
            <value>The energy in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.FocusPercent">
            <summary>Gets the focus in percent.</summary>
            <value>The focus in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.HappinessPercent">
            <summary>Gets the happiness in percent.</summary>
            <value>The happiness in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.HealthPercent">
            <summary>Gets the health in percent.</summary>
            <value>The health in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.HolyPowerPercent">
            <summary>Gets the holy power in percent.</summary>
            <value>The holy power in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ManaPercent">
            <summary>Gets the mana in percent.</summary>
            <value>The mana in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RagePercent">
            <summary>Gets the rage in percent.</summary>
            <value>The rage in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RunesPercent">
            <summary>Gets the runes in percent.</summary>
            <value>The runes in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RunicPowerPercent">
            <summary>Gets the runic power in percent.</summary>
            <value>The runic power in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SoulShardsPercent">
            <summary>Gets the soul shards in percent.</summary>
            <value>The soul shards in percent.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ManaInfo">
            <summary>Gets the information describing the mana.</summary>
            <value>Information describing the mana.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RageInfo">
            <summary>Gets the information describing the rage.</summary>
            <value>Information describing the rage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.EnergyInfo">
            <summary>Gets the information describing the energy.</summary>
            <value>Information describing the energy.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.FocusInfo">
            <summary>Gets the information describing the focus.</summary>
            <value>Information describing the focus.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.HappinessInfo">
            <summary>Gets the information describing the happiness.</summary>
            <value>Information describing the happiness.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RunesPowerInfo">
            <summary>Gets the information describing the runes power.</summary>
            <value>Information describing the runes power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RunicPowerInfo">
            <summary>Gets the information describing the runic power.</summary>
            <value>Information describing the runic power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SoulShardsInfo">
            <summary>Gets the information describing the soul shards.</summary>
            <value>Information describing the soul shards.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.EclipseInfo">
            <summary>Gets the information describing the eclipse.</summary>
            <value>Information describing the eclipse.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.HolyPowerInfo">
            <summary>Gets the information describing the holy power.</summary>
            <value>Information describing the holy power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxItemLevel">
            <summary>Gets the maximum item level.</summary>
            <value>The maximum item level.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.VirtualItemSlotIds">
            <summary>Gets the virtual item slot ids.</summary>
            <value>The virtual item slot ids.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Strength">
            <summary>Gets the strength.</summary>
            <value>The strength.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.StrengthPositiveModifier">
            <summary>This unit's current positive strength modifier. (Bonus strength. Usually from buffs.)</summary>
            <value>The strength positive modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.StrengthNegativeModifier">
            <summary>
            This unit's current negative strength modifier. (Negative strength. Usually from debuffs.)
            </summary>
            <value>The strength negative modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Agility">
            <summary>Gets the agility.</summary>
            <value>The agility.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.AgilityPositiveModifier">
            <summary>Gets the agility positive modifier.</summary>
            <value>The agility positive modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.AgilityNegativeModifier">
            <summary>Gets the agility negative modifier.</summary>
            <value>The agility negative modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Stamina">
            <summary>Gets the stamina.</summary>
            <value>The stamina.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.StaminaPositiveModifier">
            <summary>Gets the stamina positive modifier.</summary>
            <value>The stamina positive modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.StaminaNegativeModifier">
            <summary>Gets the stamina negative modifier.</summary>
            <value>The stamina negative modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Intellect">
            <summary>Gets the intellect.</summary>
            <value>The intellect.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IntellectPositiveModifier">
            <summary>Gets the intellect positive modifier.</summary>
            <value>The intellect positive modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IntellectNegativeModifier">
            <summary>Gets the intellect negative modifier.</summary>
            <value>The intellect negative modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Spirit">
            <summary>Gets the spirit.</summary>
            <value>The spirit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SpiritPositiveModifier">
            <summary>Gets the spirit positive modifier.</summary>
            <value>The spirit positive modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SpiritNegativeModifier">
            <summary>Gets the spirit negative modifier.</summary>
            <value>The spirit negative modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BaseMana">
            <summary>Gets the base mana.</summary>
            <value>The base mana.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BaseHealth">
            <summary>Gets the base health.</summary>
            <value>The base health.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.AttackPower">
            <summary>Gets the attack power.</summary>
            <value>The attack power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.AttackPowerMultiplier">
            <summary>Gets the attack power multiplier.</summary>
            <value>The attack power multiplier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BaseAttackTime">
            <summary>Gets the time of the base attack.</summary>
            <value>The time of the base attack.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BaseOffHandAttackTime">
            <summary>Gets the time of the base off hand attack.</summary>
            <value>The time of the base off hand attack.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BaseRangedAttackTime">
            <summary>Gets the time of the base ranged attack.</summary>
            <value>The time of the base ranged attack.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RangedAttackPower">
            <summary>Gets the ranged attack power.</summary>
            <value>The ranged attack power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RangedAttackPowerMultiplier">
            <summary>Gets the ranged attack power multiplier.</summary>
            <value>The ranged attack power multiplier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MinRangedDamage">
            <summary>Gets the minimum ranged damage.</summary>
            <value>The minimum ranged damage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxRangedDamage">
            <summary>Gets the maximum ranged damage.</summary>
            <value>The maximum ranged damage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CombatReach">
            <summary>Gets the combat reach.</summary>
            <value>The combat reach.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MinDamage">
            <summary>Gets the minimum damage.</summary>
            <value>The minimum damage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxDamage">
            <summary>Gets the maximum damage.</summary>
            <value>The maximum damage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MinOffHandDamage">
            <summary>Gets the minimum off hand damage.</summary>
            <value>The minimum off hand damage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxOffHandDamage">
            <summary>Gets the maximum off hand damage.</summary>
            <value>The maximum off hand damage.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Armor">
            <summary>
            Returns the amount of armor this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistHoly">
            <summary>
            Returns the amount of holy resistance this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistFire">
            <summary>
            Returns the amount of fire resistance this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistNature">
            <summary>
            Returns the amount of nature resistance this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistFrost">
            <summary>
            Returns the amount of frost resistance this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistShadow">
            <summary>
            Returns the amount of shadow resistance this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistArcane">
            <summary>
            Returns the amount of arcane resistance this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ResistFirePos">
            <summary>
            Returns the amount of resistance buff mod positive this unit has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MaxHealthModifier">
            <summary>Gets the maximum health modifier.</summary>
            <value>The maximum health modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PetNumber">
            <summary>Gets the pet number.</summary>
            <value>The pet number.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PetNameTimestamp">
            <summary>Gets the pet name timestamp.</summary>
            <value>The pet name timestamp.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PetExperience">
            <summary>Gets the pet experience.</summary>
            <value>The pet experience.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PetNextLevelExperience">
            <summary>Gets the pet next level experience.</summary>
            <value>The pet next level experience.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Pet">
            <summary>
            Returns the pet of this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsPet">
            <summary>
            Returns a boolean indicating if this unit is a pet.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTargetingMeOrPet">
            <summary>
            Returns a boolean indicating whether this mob is targeting the local player or the local players pet.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTargetingAnyMinion">
            <summary>
            Returns a boolean indicating wheter this mob is targeting any of the local players minions.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.GotAlivePet">
            <summary>
            Returns a boolean indicating if you got an alive pet.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTargetingPet">
            <summary>
            Returns a boolean indicating if this unit is targeting your pet, if you have any.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ChanneledCastingSpellId">
            <summary>
            Returns the spellid of the current channeled spell being cast
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.NonChanneledCastingSpellId">
            <summary>
            Returns the spell Id of the current non channeled spell being cast
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CastingSpellId">
            <summary>
            Return's the current spell ID being cast.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CastingSpell">
            <summary>
            Returns the current spell being cast
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsCasting">
            <summary>
            Returns true if this unit is casting a spell.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Level">
            <summary>Gets the level.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.FactionId">
            <summary>Gets the faction id.</summary>
            <value>The faction id.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Faction">
            <summary>Gets the faction.</summary>
            <value>The faction.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.FactionTemplate">
            <summary>
            Returns the faction template object for this unit. This class wraps common Faction-based information.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.BoundingRadius">
            <summary>Gets the bounding radius.</summary>
            <value>The bounding radius.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.DisplayId">
            <summary>Gets the identifier of the display.</summary>
            <value>The identifier of the display.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.NativeDisplayId">
            <summary>Gets the identifier of the native display.</summary>
            <value>The identifier of the native display.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MountDisplayId">
            <summary>Gets the identifier of the mount display.</summary>
            <value>The identifier of the mount display.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Mounted">
            <summary>Gets a value indicating whether the mounted.</summary>
            <value>true if mounted, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.HoverHeight">
            <summary>Gets the height of the hover.</summary>
            <value>The height of the hover.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CastSpeedModifier">
            <summary>Gets the cast speed modifier.</summary>
            <value>The cast speed modifier.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CreatedBySpellId">
            <summary>Gets the identifier of the created by spell.</summary>
            <value>The identifier of the created by spell.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Flags">
            <summary>Gets the flags.</summary>
            <value>The flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Flags2">
            <summary>Gets the flags 2.</summary>
            <value>The flags 2.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.DynamicFlags">
            <summary>Gets the dynamic flags.</summary>
            <value>The dynamic flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.NpcFlags">
            <summary>Gets the npc flags.</summary>
            <value>The npc flags.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.NpcEmoteState">
            <summary>Gets the state of the npc emote.</summary>
            <value>The npc emote state.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.AuraState">
            <summary>Gets the state of the aura.</summary>
            <value>The aura state.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Bytes0">
            <summary>Gets the bytes 0.</summary>
            <value>The bytes 0.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Class">
            <summary>Gets the class.</summary>
            <value>The class.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Race">
            <summary>Gets the race.</summary>
            <value>The race.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerType">
            <summary>Gets the type of the power.</summary>
            <value>The type of the power.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Gender">
            <summary>Gets the gender.</summary>
            <value>The gender.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Bytes1">
            <summary>Gets the bytes 1.</summary>
            <value>The bytes 1.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.StateFlag">
            <summary>Gets the state flag.</summary>
            <value>The state flag.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Bytes2">
            <summary>Gets the bytes 2.</summary>
            <value>The bytes 2.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PvPState">
            <summary>Gets the state of the pv p.</summary>
            <value>The pv p state.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SheathType">
            <summary>Gets the type of the sheath.</summary>
            <value>The type of the sheath.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Shapeshift">
            <summary>Gets the shapeshift.</summary>
            <value>The shapeshift.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Combat">
            <summary>Gets a value indicating whether the combat.</summary>
            <value>true if combat, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Skinnable">
            <summary>Gets a value indicating whether the skinnable.</summary>
            <value>true if skinnable, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Dazed">
            <summary>Gets a value indicating whether the dazed.</summary>
            <value>true if dazed, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Disarmed">
            <summary>Gets a value indicating whether the disarmed.</summary>
            <value>true if disarmed, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Attackable">
            <summary>Gets a value indicating whether the attackable.</summary>
            <value>true if attackable, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PvpFlagged">
            <summary>Gets a value indicating whether the pvp flagged.</summary>
            <value>true if pvp flagged, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Fleeing">
            <summary>Gets a value indicating whether the fleeing.</summary>
            <value>true if fleeing, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Pacified">
            <summary>Gets a value indicating whether the pacified.</summary>
            <value>true if pacified, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Stunned">
            <summary>Gets a value indicating whether the stunned.</summary>
            <value>true if stunned, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Rooted">
            <summary>Gets a value indicating whether the rooted.</summary>
            <value>true if rooted, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CanSelect">
            <summary>Gets a value indicating whether we can select.</summary>
            <value>true if we can select, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Silenced">
            <summary>Gets a value indicating whether the silenced.</summary>
            <value>true if silenced, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Possessed">
            <summary>Gets a value indicating whether the possessed.</summary>
            <value>true if possessed, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Elite">
            <summary>Gets a value indicating whether the elite.</summary>
            <value>true if elite, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Looting">
            <summary>Gets a value indicating whether the looting.</summary>
            <value>true if looting, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PetInCombat">
            <summary>Gets a value indicating whether the pet in combat.</summary>
            <value>true if pet in combat, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.OnTaxi">
            <summary>Gets a value indicating whether the on taxi.</summary>
            <value>true if on taxi, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PlayerControlled">
            <summary>Gets a value indicating whether the player controlled.</summary>
            <value>true if player controlled, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.TaggedByOther">
            <summary>Gets a value indicating whether the tagged by other.</summary>
            <value>true if tagged by other, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.TaggedByMe">
            <summary>Gets a value indicating whether the tagged by me.</summary>
            <value>true if tagged by me, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Lootable">
            <summary>Gets a value indicating whether we can loot.</summary>
            <value>true if we can loot, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Tracked">
            <summary>Gets a value indicating whether the tracked.</summary>
            <value>true if tracked, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.RafLinked">
            <summary>Gets a value indicating whether the raf linked.</summary>
            <value>true if raf linked, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.TappedByAllThreatLists">
            <summary>Gets a value indicating whether the tapped by all threat lists.</summary>
            <value>true if tapped by all threat lists, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CanGossip">
            <summary>Gets a value indicating whether we can gossip.</summary>
            <value>true if we can gossip, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsQuestGiver">
            <summary>Gets a value indicating whether this object is question giver.</summary>
            <value>true if this object is question giver, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTrainer">
            <summary>Gets a value indicating whether this object is trainer.</summary>
            <value>true if this object is trainer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsClassTrainer">
            <summary>Gets a value indicating whether this object is class trainer.</summary>
            <value>true if this object is class trainer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsProfessionTrainer">
            <summary>Gets a value indicating whether this object is profession trainer.</summary>
            <value>true if this object is profession trainer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsAnyTrainer">
            <summary>Gets a value indicating whether this object is any trainer.</summary>
            <value>true if this object is any trainer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsAnyVendor">
            <summary>Gets a value indicating whether this object is any vendor.</summary>
            <value>true if this object is any vendor, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsVendor">
            <summary>Gets a value indicating whether this object is vendor.</summary>
            <value>true if this object is vendor, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsAmmoVendor">
            <summary>Gets a value indicating whether this object is ammo vendor.</summary>
            <value>true if this object is ammo vendor, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsFoodVendor">
            <summary>Gets a value indicating whether this object is food vendor.</summary>
            <value>true if this object is food vendor, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsPoisonVendor">
            <summary>Gets a value indicating whether this object is poison vendor.</summary>
            <value>true if this object is poison vendor, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsPetitioner">
            <summary>Gets a value indicating whether this object is petitioner.</summary>
            <value>true if this object is petitioner, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsReagentVendor">
            <summary>Gets a value indicating whether this object is reagent vendor.</summary>
            <value>true if this object is reagent vendor, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsRepairMerchant">
            <summary>Gets a value indicating whether this object is repair merchant.</summary>
            <value>true if this object is repair merchant, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsFlightMaster">
            <summary>Gets a value indicating whether this object is flight master.</summary>
            <value>true if this object is flight master, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsSpiritHealer">
            <summary>Gets a value indicating whether this object is spirit healer.</summary>
            <value>true if this object is spirit healer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsSpiritGuide">
            <summary>Gets a value indicating whether this object is spirit guide.</summary>
            <value>true if this object is spirit guide, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsInnkeeper">
            <summary>Gets a value indicating whether this object is innkeeper.</summary>
            <value>true if this object is innkeeper, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsBanker">
            <summary>Gets a value indicating whether this object is banker.</summary>
            <value>true if this object is banker, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTabardDesigner">
            <summary>Gets a value indicating whether this object is tabard designer.</summary>
            <value>true if this object is tabard designer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsBattleMaster">
            <summary>Gets a value indicating whether this object is battle master.</summary>
            <value>true if this object is battle master, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsAuctioneer">
            <summary>Gets a value indicating whether this object is auctioneer.</summary>
            <value>true if this object is auctioneer, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsStableMaster">
            <summary>Gets a value indicating whether this object is stable master.</summary>
            <value>true if this object is stable master, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsGuard">
            <summary>Gets a value indicating whether this object is guard.</summary>
            <value>true if this object is guard, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsGuildBanker">
            <summary>Gets a value indicating whether this object is guild banker.</summary>
            <value>true if this object is guild banker, false if not.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CreatureFamilyInfo">
            <summary>
            Returns detailed information about this CreatureFamily (If any) null otherwise.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SubName">
            <summary>
            Returns the subname of this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.SkinType">
            <summary>
            Gets a value indicating the skin type of this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CreatureType">
            <summary>
            Returns the <see cref="T:Styx.WoWCreatureType"/> of this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsBeast">
            <summary>
            Returns true if this is a beast
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsCritter">
            <summary>
            Returns true if this is a Critter
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsDemon">
            <summary>
            Returns true if this is a demon
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsDragon">
            <summary>
            Returns true if this is a dragon
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsElemental">
            <summary>
            Returns true if this is a elemental
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsGasCloud">
            <summary>
            Returns true if this is a gascloud
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsGiant">
            <summary>
            Returns true if this is a giant
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsHumanoid">
            <summary>
            Returns true if this is a humanoid
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsMechanical">
            <summary>
            Returns true if this is a mechanical unit
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsNonCombatPet">
            <summary>
            Returns true if this is a non combat pet
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTotem">
            <summary>
            Returns true if this is a totem
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsUndead">
            <summary>
            Returns true if this is an undead
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CreatureRank">
            <summary>
            Returns the rank of this unit; 'Normal','Elite','Rare' etc.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTameable">
            <summary>
            Gets a value indicating whether this creature can be tamed by a hunter.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsGhostVisible">
            <summary>
            Returns a value indicating whether this creature is visible to a dead player like a sprit healer.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsExotic">
            <summary>
            Gets a value indicating whether this creature is an exotic creature.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.ThreatInfo">
            <summary>
            Returns detailed threat information for this unit towards the local player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.Aggro">
            <summary>
            Returns a boolean indicating whether this unit is attacking me.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PetAggro">
            <summary>
            Returns a boolean indicating whether this unit is attacking my pet.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MyReaction">
            <summary>
            Returns the <see cref="T:Styx.WoWUnitReaction"/> of the local player towards this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsFriendly">
            <summary>
            Returns a boolean indicating if this unit is friendly to the local player; meaning if this unit is 'green' for the local player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsHostile">
            <summary>
            Returns a boolean indicating if this unit is hostile to the local player; meaning if this unit is 'red' for the local player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsNeutral">
            <summary>
            Returns a boolean indicating if this unit is neutral to the local player; meaning if this unit is 'yellow' for the local player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsAutoAttacking">
            <summary>
            Returns a boolean indicating if this unit is auto attacking.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsPlayer">
            <summary>
            Returns true if this unit is a player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsUnit">
            <summary>
            Returns true if this unit is a unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsAlive">
            <summary>
            Returns a boolean indicating if this unit is alive.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.KilledByMe">
            <summary>
            Returns a boolean indicating whether this unit is tagged by me and is dead.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MyAggroRange">
            <summary>
            Returns the approximate aggro radius towards the local player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.MyStealthDetectionRange">
            <summary>
            Returns the approximate range at which the local player will become detected by this unit.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CanSkin">
            <summary>
            Returns a boolean indicating whether this unit can be skinned by the local player.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTargetingMyPartyMember">
            <summary>
            Returns true if this unit is targeting anyone in the local player's party.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsTargetingMyRaidMember">
            <summary>
            Returns true if this unit is targeting anyone in the local player's raid.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.IsStealthed">
            <summary>
            Returns true if this unit is stealthed.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.CanLoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.InLineOfSight">
            <summary>
            Returns true if this object is in line of sight. Used for visual sight.
            </summary>
            <value>
              <c>true</c> if [in line of sight]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.InLineOfSpellSight">
            <summary>
            Returns true if this object is in line of sight to cast heal/damage spells on.
            Be warned! This may return true while there is no visual sight to the unit.
            </summary>
            <value>
            	<c>true</c> if [in line of spell sight]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.InLineOfSightOCD">
            <summary>
            Returns true if this object is in line of sight using extra OCD checks - MUCH SLOWER THAN THE InLineOfSight PROPERTY
            </summary>
            <value>
              <c>true</c> if [in line of sight OCD]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo">
            <summary>Information about the power.</summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.#ctor(Styx.WoWPowerType,System.UInt32,System.UInt32,System.Single,System.Single,System.UInt32,System.Single)">
            <summary>Constructor. </summary>
            <param name="type">The type.</param>
            <param name="current">The current.</param>
            <param name="max">The maximum.</param>
            <param name="regenFlatModifier">The regen flat modifier.</param>
            <param name="regenInterruptedFlatModifier">The regen interrupted flat modifier.</param>
            <param name="costModifier">The cost modifier.</param>
            <param name="costMultiplier">The cost multiplier.</param>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.Type">
            <summary>Gets or sets the type.</summary>
            <value>The type.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.Current">
            <summary>Gets or sets the current.</summary>
            <value>The current.</value>/
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.CurrentI">
            <summary>Gets the current value, as an integer.</summary>
            <value>The current value, as an integer.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.Max">
            <summary>
            Returns the max power
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.Percent">
            <summary>
            Returns the current power percent.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.RegenFlatModifier">
            <summary>
            Returns the flat modifier.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.RegenInterruptedFlatModifier">
            <summary>
            Returns the regen interrupted flat modifier.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.CostModifier">
            <summary>
            Returns the cost modifier.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWUnit.PowerInfo.CostMultiplier">
            <summary>
            Returns the cost multiplier.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsHorde">
            <summary>
            Returns true if this player is a horde player
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsAlliance">
            <summary>
            Returns true if this player is a alliance player
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.PlayerFlags">
            <summary>
            Returns the Flags of the local player
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsGhost">
            <summary>
            Returns a bool indicating whether this player is a ghost.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsGroupLeader">
            <summary>
            Returs wheter the player is group leader
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsAFKFlagged">
            <summary>
            Returns wheter the player is tagged AFK
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsDNDFlagged">
            <summary>
            Returns wheter the player is tagged DND
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsGM">
            <summary>
            Returns wheter if this player is a GM
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsResting">
            <summary>
            Returns wheter the player is resting, eg; inside a major city or inn
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsFFAPvPFlagged">
            <summary>
            Returs wheter a player is in a FFA PvP zone
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.ContestedPvPFlagged">
            <summary>
            Returns wheter the player has been involved in a PvP combat and will be attacked by contested guards 
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsPvPFlagged">
            <summary>
            Returns wheter the player is in PvP combat
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsHidingHelm">
            <summary>
            Returns wheter the players helm is hidden
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsHidingCloak">
            <summary>
            Returns wheter the players cloak is hidden
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsOutOfBounds">
            <summary>
            returns true if the local player is out of bounds
            1 if the player is currently outside the bounds of the world; otherwise nil (1nil) 
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsPvPTimerActive">
            <summary>
            Returns wheter the pvp timer is active, only occurs after pvp is toggeled manually
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsInsideSanctuary">
            <summary>
            Returns wheter the player is in a sanctuary soon
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.Copper">
            <summary>
            Returns the amount of money you got in copper.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.Silver">
            <summary>
            Returns the amount of money you got in silver.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.Gold">
            <summary>
            Returns the amount of money you got in gold.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.LevelFraction">
            <summary>
            Gets the level fraction of this unit; this is the level, with a fraction representing the XP the player has into the next level.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsInMyParty">
            <summary>
            Returns true if this player is in the local players party.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsInMyRaid">
            <summary>
            Returns true if this player is in the local players party.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsInMyPartyOrRaid">
            <summary>
            Returns a boolean indicating whether this player is in the local players party or raid.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.IsAlive">
            <summary>
            Returns true if this player is alive
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.Mounted">
            <summary>
            Returns true if this player is mounted
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWPlayer.Minions">
            <summary>
            Returns a list of minion belonging to this player (excluding non combat pets), pet's/totems/various guardian characters
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetTotemBarSpells(System.Int32)">
            <summary>Gets the spells in a specified slot of the totem bar. (Valid values are 0-3)</summary>
            <remarks>Created 3/26/2011.</remarks>
            <param name="totemBarSlot">The totem bar slot.</param>
            <returns>The totem bar spells.</returns>
            <exception cref="T:System.ArgumentException">Value must be between 0 and 3</exception>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.LocalPlayer.QuestLog">
            <summary>
            The quest log.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.LocalPlayer._stable">
            <summary>
            The _stable.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.LocalPlayer"/> class. 
            The local player.
            </summary>
            <param name="baseAddress">
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.CanEquipItem(Styx.WoWInternals.WoWObjects.WoWItem)">
            <summary>
            Finds out if an item can be used or equipped.
            </summary>
            <param name="item">
            </param>
            <returns>
            The can equip item.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.CanEquipItem(Styx.WoWInternals.WoWObjects.ItemInfo)">
            <summary>
            Finds out if an item can be used or equipped.
            </summary>
            <param name="itemInfo">
            </param>
            <returns>
            The can equip item.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.CanEquipItem(Styx.WoWInternals.WoWObjects.ItemInfo,Styx.GameError@)">
            <summary>
            Finds out if an item can be used or equipped.
            </summary>
            <param name="itemInfo">
            </param>
            <param name="reason">
            </param>
            <returns>
            The can equip item.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.CanEquipItem(Styx.WoWInternals.WoWObjects.WoWItem,Styx.GameError@)">
            <summary>
            Finds out if an item can be used or equipped.
            </summary>
            <param name="item">
            </param>
            <param name="reason">
            </param>
            <returns>
            The can equip item.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.ClearTarget">
            <summary>
            Clear's the current target
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetBag(Styx.WoWBagSlot)">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWObjects.WoWContainer"/> object representing the requested bag, or null if there is no bag in the slot.
            </summary>
            <param name="slot">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetBagAtIndex(System.UInt32)">
            <summary>
            Returns the bag at the specified index or null if there is no bag at the index.
            </summary>
            <param name="index">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetBagGuidAtIndex(System.UInt32)">
            <summary>
            Gets the bag GUID at the specified index.
            </summary>
            <param name="index">
            </param>
            <returns>
            The get bag guid at index.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetFactionStanding(Styx.FactionId,Styx.WoWInternals.WoWObjects.FactionStanding@)">
            <summary>
            The get faction standing.
            </summary>
            <param name="factionId">
            The faction id.
            </param>
            <param name="standing">
            The standing.
            </param>
            <returns>
            The get faction standing.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetFactionStanding(System.UInt32,Styx.WoWInternals.WoWObjects.FactionStanding@)">
            <summary>
            The get faction standing.
            </summary>
            <param name="factionId">
            The faction id.
            </param>
            <param name="standing">
            The standing.
            </param>
            <returns>
            The get faction standing.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetFactionStanding(Styx.WoWInternals.WoWFaction,Styx.WoWInternals.WoWObjects.FactionStanding@)">
            <summary>
            The get faction standing.
            </summary>
            <param name="faction">
            The faction.
            </param>
            <param name="standing">
            The standing.
            </param>
            <returns>
            The get faction standing.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetMirrorTimerInfo(Styx.MirrorTimerType)">
            <summary>
            Returns detailed information on a mirror timer, eg; 'Feign Death', 'Breath' etc...
            </summary>
            <param name="type">
            The type.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetPartyMemberGuid(System.Int32)">
            <summary>
            Gets the Guid of a party member. Index must be 0, 1, 2 or 3.
            </summary>
            <param name="index">
            </param>
            <returns>
            The get party member guid.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetRaidMember(System.Int32)">
            <summary>
            Gets a raid member by index
            </summary>
            <param name="index">
            the index
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetRaidMemberGuid(System.Int32)">
            <summary>
            Gets the Guid of a raid member. Index must be from 0 to and including 39.
            </summary>
            <param name="index">
            the index
            </param>
            <returns>
            the guid
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetReputationLevelWith(System.UInt32)">
            <summary>
            The get reputation level with.
            </summary>
            <param name="factionId">
            The faction id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetReputationWith(System.UInt32)">
            <summary>
            The get reputation with.
            </summary>
            <param name="toFactionId">
            The to faction id.
            </param>
            <returns>
            The get reputation with.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetRuneCount(System.Int32)">
            <summary>
            Returns the amount of runes by index.
            </summary>
            <param name="index">
            The index.
            </param>
            <returns>
            The get rune count.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetRuneCount(Styx.WoWInternals.WoWObjects.RuneType)">
            <summary>
            Returns rune type by <see cref="T:Styx.WoWInternals.WoWObjects.RuneType"/>
            </summary>
            <param name="type">
            The type.
            </param>
            <returns>
            The get rune count.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetRuneType(System.Int32)">
            <summary>
            Returns rune type by index.
            </summary>
            <param name="index">
            The index.
            </param>
            <exception cref="T:System.IndexOutOfRangeException"><c>IndexOutOfRangeException</c>.</exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetSkill(System.Int32)">
            <summary>
            Returns detailed information on a skill, eg; 'Herbalism', 'Mining' etc...
            </summary>
            <param name="id">
            The id.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetSkill(System.String)">
            <summary>
            Returns detailed information on a skill, eg; 'Herbalism', 'Mining' etc...
            </summary>
            <param name="name">
            The name.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetSkill(Styx.SkillLine)">
            <summary>
            Returns detailed information on a skill, eg; 'Herbalism', 'Mining' etc...
            </summary>
            <param name="skill">
            The skill.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.IsBehind(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Returns true if you are behind a unit
            </summary>
            <param name="unit">
            </param>
            <returns>
            The is behind.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.SetFacing(Styx.WoWInternals.WoWObjects.WoWGameObject)">
            <summary>
            Sets your facing
            </summary>
            <param name="obj">
            The obj.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.SetFacing(Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Sets your facing
            </summary>
            <param name="obj">
            The obj.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.SetFacing(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Sets your facing
            </summary>
            <param name="otherLoc">
            The other Loc.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.SetFacing(System.Single)">
            <summary>
            Sets your facing
            </summary>
            <param name="facingInRadians">
            The facing In Radians.
            </param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.SetFocus(Styx.WoWInternals.WoWObjects.WoWObject)">
            <summary>
            The set focus.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The set focus.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            </exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.SetFocus(System.UInt64)">
            <summary>
            Sets the local player's focus to a specific GUID
            </summary>
            <param name="guid">
            The guid of the object to set focus to.
            </param>
            <returns>
            The result
            </returns>
            <exception cref="T:System.ArgumentNullException">
            </exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.TargetLastTarget">
            <summary>
            Target's the last target
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.ToggleAttack">
            <summary>
            Toggle's attack
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetEstimatedRepairCost">
            <summary>
            Returns the average repair cost for all carried items.
            Use with care, lots of dbc look-ups
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.InternalGetPartyMemberGuid(System.Int32)">
            <summary>
            The internal get party member guid.
            </summary>
            <param name="index">
            The index.
            </param>
            <returns>
            The party member guids.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.CanUseItem(System.UInt32,Styx.GameError@)">
            <summary>
            The can use item.
            </summary>
            <param name="itemId">
            The item id.
            </param>
            <param name="reason">
            The reason.
            </param>
            <returns>
            The result
            </returns>
            <exception cref="T:System.ArgumentNullException">
            </exception>
            <exception cref="T:System.Exception">
            </exception>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetAllPartyMemberGuids">
            <summary>
            The get all party member guids.
            </summary>
            <returns>
            A list of GUIDs
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.HasPendingSpell(System.Int32)">
            <summary>
            Checks if this spell is pending in the cursor, eg; 'Blizzard', 'Flamestrike', 'Skinning' etc...
            </summary>
            <param name="spellId">
            The spellid.
            </param>
            <returns>
            The has pending spell.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.HasPendingSpell(System.String)">
            <summary>
            Checks if this spell is pending in the cursor, eg; 'Blizzard', 'Flamestrike', 'Skinning' etc...
            </summary>
            <param name="name">
            The spell name.
            </param>
            <returns>
            The has pending spell.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.HasPendingSpell(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Checks if this spell is pending in the cursor, eg; 'Blizzard', 'Flamestrike', 'Skinning' etc...
            </summary>
            <param name="spell">
            The <see cref="T:Styx.Logic.Combat.WoWSpell"/> object.
            </param>
            <returns>
            The has pending spell.
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetKnownSpells">
            <summary>
            The get known spells.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.GetSkill(System.UInt32)">
            <summary>
            Returns detailed information on a skill, eg; 'Herbalism', 'Mining' etc...
            </summary>
            <param name="index">
            The index.
            </param>
            <returns>
            The get skill.
            </returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.HearthstoneAreaId">
            <summary>Gets the area ID for where your hearthstone is currently set.</summary>
            <value>The identifier of the hearthstone area.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.Totems">
            <summary>Gets the totems for the local player. This will return 4 entries in total, regardless if you have 4 totems actually out.</summary>
            <value>The totems.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PetSpells">
            <summary>
            Gets a list of the spells your pet or a vehicle you are in control of can use.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsActuallyInCombat">
            <summary>
            Returns if we are actually in combat + have a valid target.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.BloodRuneCount">
            <summary>
              Gets the amount of active BloodRunes the player currently has avaible.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.DeathRuneCount">
            <summary>
              Gets the amount of active DeathRunes the player currently has avaible.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.FrostRuneCount">
            <summary>
              Gets the amount of active FrostRunes the player currently has avaible.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.UnholyRuneCount">
            <summary>
              Returns the amount of active UnholyRunes the player currently has avaible.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.ResearchSiteIds">
            <summary>Gets a list of IDs of the research sites this character is working on. (These are entries into ResearchSite.dbc).</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.AccountName">
            <summary>
              Gets the accountname of the logged in character
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.AutoRepeatingSpellId">
            <summary>
              Gets the spellid of the current auto-repeat spell.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.BagItemGuids">
            <summary>
              Gets all item GUID's in the players 5 bags.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.BagItems">
            <summary>
              Gets all items in the players 5 bags.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.BagsFull">
            <summary>
              Gets a value determining if all slots in your bags are filled with items.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.CarriedItemGuids">
            <summary>
              Gets all carried item GUIDs; which is the players 5 bags, equipped items, currency and key ring.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.CarriedItems">
            <summary>
              Gets all carried items as WoWItem objects; which is the players 5 bags, equipped items, currency and key ring.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.ComboPoints">
            <summary>
              Returns the number of active combo points on the current target.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.RawComboPoints">
            <summary>Gets the current combo points, regardless of active target.</summary>
            <value>The raw combo points.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.CorpsePoint">
            <summary>
              Gets the location of the local player corpse
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.Durability">
            <summary>
              Gets the durability of all equipped items summed up together.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.DurabilityPercent">
            <summary>
              Gets the durability in percent for all equipped items.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.FreeBagSlots">
            <summary>
              Gets the number free slots in your bags.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.FreeNormalBagSlots">
            <summary>
              Gets the number of free normal bag slots. This does not include quivers etc.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.Inventory">
            <summary>
              Gets the players inventory.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsAutoRepeatingSpell">
            <summary>
              Gets a value indicating whether the player is auto repeating a spell.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsInInstance">
            <summary>
              Returns true if the player is inside a dungeon.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsInParty">
            <summary>
              Returns true if you are in a party
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsInRaid">
            <summary>
              Returns true if you are in a raid group
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsIndoors">
            <summary>
              Returns true if the player is indoors.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.IsOutdoors">
            <summary>
              Returns true if the player is outdoors.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.LastRedErrorMessage">
            <summary>
              Returns the last red error message.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.LowestDurabilityPercent">
            <summary>
              Returns the lowest durability for all of your equipped items.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.MapId">
            <summary>
              Returns the current continent id
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.CurrentMap">
            <summary>Returns information about the current map.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.MapName">
            <summary>
              Gets the current map name. This is not a friendly name.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.MaxDurability">
            <summary>
              Returns the maxdurability of all equipped items summed up together.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.MinimapZoneText">
            <summary>
              Returns the name of the current area (as displayed in the Minimap)
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.NormalBagsFull">
            <summary>
              Returns true if all normal bags are filled with items.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.NumRaidMembers">
            <summary>
              Returns the number of raid members in the raid group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember1">
            <summary>
              Returns the first party member in your group, or null if he/she doesn't exist.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember1GUID">
            <summary>
              Returns the Guid of the first party member in your group, or 0 if you aren't in a group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember2">
            <summary>
              Returns the second party member in your group, or null if he/she doesn't exist.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember2GUID">
            <summary>
              Returns the Guid of the second party member in your group, or 0 if you aren't in a group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember3">
            <summary>
              Returns the third party member in your group, or null if he/she doesn't exist.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember3GUID">
            <summary>
              Returns the Guid of the third party member in your group, or 0 if you aren't in a group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember4">
            <summary>
              Returns the fourth party member in your group, or null if he/she doesn't exist.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMember4GUID">
            <summary>
              Returns the Guid of the fourth party member in your group, or 0 if you aren't in a group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMemberGuids">
            <summary>
              Returns a list of all party members' GUIDs, or an empty list if you have no party members.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.RaidMemberInfos">
            <summary>Gets a list of 'simple' raid AND party member infos. This information is useful if the members are 'far away'.</summary>
            <value>The raid member infos.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMemberInfos">
            <summary>Gets a list of 'simple' party member infos. This information is useful for role checks, and other such things
            when a unit is far away. This list includes the local player!</summary>
            <value>The party member infos.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.PartyMembers">
            <summary>
            Returns a list of all party members in your group, or an empty list if you are not in a group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.RawRaidMemberGuids">
            <summary>
            Returns a array of all party members GUID's in your group, or an empty array if you are not in a group.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.RaidMemberGuids">
            <summary>
              Returns an array of all guid's of the members of the local players raid.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.RaidMembers">
            <summary>
              Returns a list of all players in the local player's raid, or an empty list if the player isn't in a raid.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.Role">
            <summary>The role of the local player when in a group. Tank, Healer, Damage etc.</summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.RealZoneText">
            <summary>
              Returns the "official" name of the zone or instance in which the player is located
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.Stable">
            <summary>
            Gets Stable.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.SubZoneText">
            <summary>
              Returns the name of the minor area in which the player is located
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.ZoneId">
            <summary>
              returns the local players ZoneId
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.ZoneText">
            <summary>
              Returns the name of the zone in which the player is located
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpells">
            <summary>
              Returns the list of known spells.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.LearnableSpells">
            <summary>
            Gets LearnableSpells.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.Skills">
            <summary>
              Internal dictionary for skills
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.CanSkinLevel">
            <summary>
            Returns the maximum level of units you can skin
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.FocusedUnitGuid">
            <summary>Gets a unique identifier of the currently /focus'd unit.</summary>
            <value>Unique identifier of the focused unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.FocusedUnit">
            <summary>Gets the /focus'd unit.</summary>
            <value>The focused unit.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.LocalPlayer.CurrentPendingCursorSpell">
            <summary>
            Returns the current pending spell active in the cursor.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpell">
            <summary>
            The known spell.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpell.KnownType">
            <summary>
            The known type.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpell.SpellId">
            <summary>
            The spell id.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpell.Level">
            <summary>
            The level.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpell.Unk_TabType">
            <summary>
            The unk_ tab type.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.LocalPlayer.KnownSpell.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The to string.
            </returns>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.RuneType">
            <summary>
            The rune type.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.RuneType.Blood">
            <summary>
            The blood.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.RuneType.Unholy">
            <summary>
            The unholy.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.RuneType.Frost">
            <summary>
            The frost.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.RuneType.Death">
            <summary>
            The death.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.SpecType">
            <summary>
            The spec type
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.MirrorTimerInfo">
            <summary>
            The mirror timer info.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.Type">
            <summary>
            The type.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.InitialValue">
            <summary>
              The initial value of the timer.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.MaxValue">
            <summary>
              The max value of the timer.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.ChangePerMillisecond">
            <summary>
              The change of the value of the timer per millisecond.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo._paused">
            <summary>
            The _paused.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.SpellID">
            <summary>
            The spell id.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.StartTime">
            <summary>
            The start time.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The to string.
            </returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.CurrentTime">
            <summary>
              Gets the current value of this timer.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.MirrorTimerInfo.IsVisible">
            <summary>
            Gets a value indicating whether IsVisible.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.ReputationFlags">
            <summary>
            The reputation flags.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.None">
            <summary>
            The none.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.Visible">
            <summary>
            The visible.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.AtWar">
            <summary>
            The at war.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.Hidden">
            <summary>
            The hidden.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.ForcedInvisible">
            <summary>
              Always overrides the <value>Visible</value> flag
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.ForcedPeace">
            <summary>
              Always overrides the <value>AtWar</value> flag
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.Inactive">
            <summary>
            The inactive.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.Flag_0x40">
            <summary>
              Factions from The Burning Crusade
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ReputationFlags.Expansion_2">
            <summary>
              The main 2 opposing factions from Wrath of the Lich King
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.FactionStanding">
            <summary>
            The faction standing.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.FactionStanding.FactionId">
            <summary>
            The faction id.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.FactionStanding.Flags">
            <summary>
            The flags.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.FactionStanding._unk">
            <summary>
            The _unk.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.FactionStanding.Reputation">
            <summary>
            The reputation.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.FactionStanding.ReputationBonus">
            <summary>
            The reputation bonus.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.FactionStanding.HasFlag(Styx.WoWInternals.WoWObjects.ReputationFlags)">
            <summary>
            The has flag.
            </summary>
            <param name="flag">
            The flag.
            </param>
            <returns>
            The has flag.
            </returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.FactionStanding.TotalReputation">
            <summary>
            Gets TotalReputation.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.DurabilityQualityEntry">
            <summary>
            The durability quality entry.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.DurabilityQualityEntry.itemLevel">
            <summary>
            The itemlevel.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.DurabilityQualityEntry.Multiplier">
            <summary>
            The multiplier.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.DurabilityCostEntry">
            <summary>
            The durability cost entry.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.DurabilityCostEntry.itemLevel">
            <summary>
            The itemlevel.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.DurabilityCostEntry.Multiplier">
            <summary>
            The multiplier.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> class.
            </summary>
            <param name="baseAddress">The base address.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.Interact">
            <summary>
            Simulates a right click with this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/>.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetItemName">
            <summary>
            Gets the name of this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/>.
            </summary>
            <returns>The name</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.BuildItemName(System.UInt32,System.Int32)">
            <summary>
            Builds the name of this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/>.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="suffixId">The suffix id.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetEnchantment(System.String)">
            <summary>
            Returns an item enchantment class containing info about the enchantment.
            Note: this does an equality based on a name.Contains. So you can pass Rockbiter and it will match Rockbiter I
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetEnchantmentById(System.UInt32)">
            <summary>
            Returns an item enchantment class containing info about the enchantment.
            </summary>
            <param name="id">The id.</param>
            <returns>The enchantment.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetEnchantment(System.UInt32)">
            <summary>
            Returns an item enchantment class containing info about the enchantment.
            </summary>
            <param name="index">The index.</param>
            <returns>The enchantment.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetStat(System.Int32)">
            <summary>
            Gets the stat.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetStatType(System.Int32)">
            <summary>
            Gets the stat type.
            </summary>
            <param name="index">The index.</param>
            <returns>The stat type.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetStatValue(System.Int32)">
            <summary>
            Gets the stat value.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetMinDamage(System.Int32)">
            <summary>
            Gets the min damage.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetMaxDamage(System.Int32)">
            <summary>
            Gets the max damage.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetDamageType(System.Int32)">
            <summary>
            Gets the type of the damage.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetSpell(System.Int32)">
            <summary>
            Gets the spell.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.GetSocketColor(System.Int32)">
            <summary>
            Gets the color of the socket.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.UseContainerItem">
            <summary>
            Use this container item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.PickUp">
            <summary>
            Picks up this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> from it's corresponding container.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.Use(System.UInt64,System.Boolean)">
            <summary>
            Simulates a right click on this item.
            </summary>
            <param name="targetGuid">The target on which to use the item.</param>
            <param name="forceUse">A boolean indicating whether to force the usage; if true is passed, you will not be asked with a 'using this item binds it to you' popup, if the item is bound on usage.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.Use(System.UInt64)">
            <summary>
            Simulates a right click on this item.
            </summary>
            <param name="targetGuid">The target on which to use the item.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.Use(System.Boolean)">
            <summary>
            Simulates a right click on this item.
            </summary>
            <param name="forceUse">A boolean indicating whether to force the usage; if true is passed, you will not be asked with a 'using this item binds it to you' popup, if the item is bound on usage.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.Use">
            <summary>
            Simulates a right click on this item.
            </summary>
            <returns>
              <c>true</c> if successfull, <c>false</c> otherwise.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.HasFlag(Styx.WoWInternals.WoWObjects.WoWItem.ItemFlags)">
            <summary>
            Determines whether the specified flag has flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>
              <c>true</c> if the specified flag has flag; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.UseItem(System.UInt64,System.UInt64,System.Boolean)">
            <summary>
            Uses this item.
            </summary>
            <param name="itemGuid">The item GUID.</param>
            <param name="targetGuid">The target GUID.</param>
            <param name="forceUse">if set to <c>true</c> [force use].</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.CreateItemLink(System.UInt32,System.Int32,System.Int32,System.Int32[],System.Int32)">
            <summary>
            Creates the item link for this <see cref="!:WowItem"/>.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="itemQuality">The item quality.</param>
            <param name="enchantId">The enchant id.</param>
            <param name="jewelsIDs">The jewels I ds.</param>
            <param name="suffixId">The suffix id.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.ItemStatsFill(Styx.WoWInternals.WoWObjects.WoWItem)">
            <summary>
            Get's the stats for this item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Name">
            <summary>
            The name of this object
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Location">
            <summary>
            Returns the location as a <see cref="T:Styx.Logic.Pathing.WoWPoint"/>.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Distance">
            <summary>
            The distance from the local player to this object
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.DistanceSqr">
            <summary>
            The squared distance from the local player to this object
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Distance2D">
            <summary>
            The 2d distance from the local player to this object
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Distance2DSqr">
            <summary>
            The squared 2d distance from the local player to this object
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.ItemLink">
            <summary>
            Gets the item link.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.ItemStats">
            <summary>
            Retruns the stats of this item as a <see cref="P:Styx.WoWInternals.WoWObjects.WoWItem.ItemStats"/> object.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
            <returns><see cref="P:Styx.WoWInternals.WoWObjects.WoWItem.ItemStats"/> object containing the stats of this item. Random Properties and Suffix excluded. </returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.BagIndex">
            <summary>
            Gets the index of the bag.
            </summary>
            <value>
            The index of the bag.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.BagSlot">
            <summary>
            Gets the bag slot.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.OwnerGuid">
            <summary>
            Gets the owner GUID.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.ContainerGuid">
            <summary>
            Gets the container GUID.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.CreatorGuid">
            <summary>
            Gets the creator GUID.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.GiftCreatorGuid">
            <summary>
            Gets the gift creator GUID.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.StackCount">
            <summary>
            Gets the stack count.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Duration">
            <summary>
            Gets the duration.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.SpellCharges">
            <summary>
            Gets the spell charges.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Flags">
            <summary>
            Gets the flags.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.PropertySeed">
            <summary>
            Gets the property seed.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.RandomPropertiesId">
            <summary>
            Gets the random properties id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.RandomSuffix">
            <summary>
            Returns the random suffix of this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> as a <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix"/> object.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Durability">
            <summary>
            Gets the durability.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.MaxDurability">
            <summary>
            Gets the max durability.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.DurabilityPercent">
            <summary>
            Gets the durability percent.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.TemporaryEnchantment">
            <summary>
            Gets the temporary enchantment.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.ItemSpells">
            <summary>
            Gets the item spells.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.ItemInfo">
            <summary>
            Gets the item info.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Quality">
            <summary>
            The rarity of this item. 'Epic', 'Common', 'Legendary' etc...
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsSoulbound">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is soulbound.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is soulbound; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsConjured">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a conjured item.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsOpenable">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is openable.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is openable; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsGiftWrapped">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a gift wrapped item.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is gift wrapped; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsTotem">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a totem.
            </summary>
            <value>
              <c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is totem; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.TriggersSpell">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> triggers a spell.
            </summary>
            <value>
              <c>true</c> if [triggers spell]; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.HasEquipCooldown">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object has equip cooldown.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> has equip cooldown; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsWand">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a wand.
            </summary>
            <value>
              <c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is a wand; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsWrappingPaper">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is wrapping paper.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is wrapping paper; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsCharter">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a guild charter.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is charter; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsReadable">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a readable item.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is readable; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsPvPItem">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a pvp item.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is a PvP item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.CanExpire">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object can expire.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> can expire; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.CanProspect">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object can be prospected.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> can be prospectected; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsUniqueEquipped">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is a 'unique-equipped' item.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is unique equipped; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsThrownWeapon">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is an thrown weapon.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is a thrown weapon; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsAccountBound">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is an account bound item.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is account bound; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsEnchantScroll">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is an 'unique-equipped' item.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is an enchant scroll; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.IsMillable">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is millable.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> is millable; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Cooldown">
            <summary>
            Returns the cooldown left on this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object as a <c>float</c>
            </summary>
            <remarks>
            this property uses lua.
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.CooldownTimeLeft">
            <summary>
            Gets the cooldown time left.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.Usable">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem"/> object is usable, <note>this property uses lua. </note>.
            </summary>
            <value>
              <c>true</c> if usable; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment"/> class.
            </summary>
            <param name="id">The id.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.#ctor(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="expiration">The expiration.</param>
            <param name="chargesLeft">The charges left.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.GetStat(System.Int32)">
            <summary>
            Valid values are 0-2
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.GetStat(System.Int32,Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix,System.Int32)">
            <summary>
            Valid values are 0-2
            todo: Finish this.
            http://www.wowpedia.org/ItemRandomSuffix
            </summary>
            <param name="index">The index.</param>
            <param name="suffix">The suffix.</param>
            <param name="uniqueId">The unique id.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.IsValid">
            <summary>
            Returns true if this object is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.Id">
            <summary>
            Returns the Id of this enchant.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.ChargesLeft">
            <summary>
            Returns the number of charges left.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.ExpirationTimestamp">
            <summary>
            /Returns the timestamp when this enchant expiress.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemEnchantment.Name">
            <summary>
            Returns the name of this enchant.
            </summary>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomProperties.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomProperties"/> class.
            </summary>
            <param name="propId">The prop id.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomProperties.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomProperties.Suffix">
            <summary>
            Gets the suffix.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomProperties.Enchantments">
            <summary>
            Gets the enchantments.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix">
            <summary>
            Class wrapping the ItemRandomSuffix dbc.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix"/> object.
            </summary>
            <param name="suffixId">the id of the suffix to lookup.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix.IsValid">
            <summary>
            Returns true if this <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix"/> object is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix.Name">
            <summary>
            Returns the name of this suffix, 'of the owl', 'of stamina' etc.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix.Enchantments">
            <summary>
            Returns a list of enchantments this suffix adds to the item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemRandomSuffix.Prefix">
            <summary>
            Gets the prefix.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="triggerId">The trigger id.</param>
            <param name="charges">The charges.</param>
            <param name="cooldown">The cooldown.</param>
            <param name="category">The category.</param>
            <param name="categoryCooldown">The category cooldown.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.Id">
            <summary>
            Gets the id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.TriggerId">
            <summary>
            Gets the trigger id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.Charges">
            <summary>
            Gets the charges.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.Cooldown">
            <summary>
            Gets the cooldown.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.Category">
            <summary>
            Gets the category.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.CategoryCooldown">
            <summary>
            Gets the category cooldown.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemSpell.ActualSpell">
            <summary>
            Gets the actual spell.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemStat.#ctor(Styx.WoWItemStatType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemStat"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemStat.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemStat.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWItem.WoWItemStat.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWContainer.GetItemGuidBySlot(System.UInt32)">
            <summary>
            Returns an items GUID by slot. The max slot is Slots - 1. If the returned value is 0, the slot is empty.
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWContainer.GetItemBySlot(System.UInt32)">
            <summary>
            Return an item by slot. The max slot is Slots - 1. If the returned value is null, the slot is empty.
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.Bag">
            <summary>
            Gets the native bag this container uses.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.BagIndex">
            <summary>
            Gets the index of this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.BagType">
            <summary>
            Return the type of the bag. (i.e Mining Bag, Herb Bag etc.)
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.Slots">
            <summary>
            Gets the number of slots this bag has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.UsedSlots">
            <summary>
            Gets the number of used slots in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.ItemGuids">
            <summary>
            Gets an array of item GUIDs in this bag. If an item is 0, there is no item in that slot.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.Items">
            <summary>
            Gets an array of items in this bag. If an item is null, there is no item in that slot.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.PhysicalItemGuids">
            <summary>
            Gets an array of all item GUIDs in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.PhysicalItems">
            <summary>
            Gets an array of all items in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.FreeSlots">
            <summary>
            Gets the number of free slots in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWContainer.SlotsFromDescriptor">
            <summary>
            Gets the number of slots.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWCorpse">
            <summary>
            Resprents an ingame corpse, bones only etc.
            A player becomes a corpse after he/she releases from the body.
            </summary>
            2012-01-05 12:31 Nesox
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWCorpse.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWCorpse"/> class.
            </summary>
            <param name="baseAdress">The base adress.</param>
            2012-01-05 12:31 Nesox
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.CorpseType">
            <summary>
            Gets the type of the corpse.
            </summary>
            <value>
            The type of the corpse.
            </value>
            2012-01-05 12:20 Nesox
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.Bytes2">
            <summary>
            Gets the bytes2.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.DisplayId">
            <summary>
            Gets the display id.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.Owner">
            <summary>
            Gets the owner.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.Party">
            <summary>
            Gets the party.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.DynamicFlags">
            <summary>
            Gets the dynamic flags.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.Flags">
            <summary>
            Gets the flags.
            </summary>
            2012-01-05 12:20 Nesox
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.Lootable">
            <summary>
            Gets a value indicating whether this <see cref="T:Styx.WoWInternals.WoWObjects.WoWCorpse"/> is lootable.
            </summary>
            <value>
              <c>true</c> if lootable; otherwise, <c>false</c>.
            </value>
            2012-01-05 12:20 Nesox
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWCorpse.IsOnlyBones">
            <summary>
            Gets a value indicating whether this instance is only bones.
            </summary>
            <value>
            	<c>true</c> if this instance is only bones; otherwise, <c>false</c>.
            </value>
            2012-01-05 12:20 Nesox
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWCorpse.CorpseFlags">
            <summary>
            Corpse Flags
            </summary>
            2012-01-05 12:20 Nesox
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.CorpseType">
            <summary>
            The corpse type
            </summary>
            2012-01-05 12:20 Nesox
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.CorpseType.Bones">
            <summary>
            Bones only corpse.
            </summary>
            2012-01-05 12:20 Nesox
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.CorpseType.ResurrectablePvE">
            <summary>
            Ressurectable corpse, pve only.
            </summary>
            2012-01-05 12:20 Nesox
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.CorpseType.ResurrectablePvP">
            <summary>
            Ressurectable corpse, pvp only.
            </summary>
            2012-01-05 12:20 Nesox
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.WoWDynamicObject">
            <summary>A dynamic object within WoW. Usually spells placed on the ground, and similar effects.</summary>
            <remarks>Created 3/29/2011.</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.SpellId">
            <summary>Gets the spell ID that 'created' this dynamic object.</summary>
            <value>The identifier of the spell.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.Spell">
            <summary>Gets the spell that 'created' this dynamic object..</summary>
            <value>The spell.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.Caster">
            <summary>Gets the caster who created this dynamic object. (The unit who cast the spell)</summary>
            <value>The caster.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.CasterGuid">
            <summary>Gets a unique identifier of the caster who created this dynamic object.</summary>
            <value>Unique identifier of the caster.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.Bytes">
            <summary>Gets the 4 bit flags for this dynamic object. This is mostly unused. Almost always 0x1 (total 4 byte flag)</summary>
            <value>The bytes.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.Radius">
            <summary>Gets the radius of this dynamic object. (How far from Location this object extends to.)</summary>
            <value>The radius.</value>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWDynamicObject.CastTime">
            <summary>Gets the time of the cast. This is a server time. (TimeNow - ServerStartTime) Use at your own risk, as determining server uptime is quite difficult!</summary>
            <value>The time of the cast.</value>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGameObject.CanUse">
            <summary>
            Returns a boolean indicating whether this game object can be used. This checks for stuff like object reaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGameObject.CanUseNow">
            <summary>
            Returns a boolean indicating whether this game object can be used right now. This checks for stuff like distance, too low level for herbalism/mining etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGameObject.CanUseNow(Styx.GameError@)">
            <summary>
            Returns a boolean indicating whether this game object can be used right now. If the return value is false, a out parameter gives the reason.
            </summary>
            <param name="reason"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGameObject.Compare(Styx.WoWInternals.WoWObjects.WoWUnit,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <returns>
            Value Condition Less than zero<paramref name="x"/> is less than <paramref name="y"/>.Zero<paramref name="x"/> equals <paramref name="y"/>.Greater than zero<paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
            <param name="x">The first object to compare.</param><param name="y">The second object to compare.</param>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGameObject.Compare(Styx.WoWInternals.WoWObjects.WoWGameObject,Styx.WoWInternals.WoWObjects.WoWGameObject)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <returns>
            Value Condition Less than zero<paramref name="x"/> is less than <paramref name="y"/>.Zero<paramref name="x"/> equals <paramref name="y"/>.Greater than zero<paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
            <param name="x">The first object to compare.</param><param name="y">The second object to compare.</param>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWGameObject.SpellFocus">
            <summary>
            The type of spell focus this gameobject is.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWGameObject.RequiredSkill">
            <summary>
            Returns the required skill level to interact with this gameobject
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.WoWGameObject.CanLoot">
            <summary>
            Returns true if you can loot this gameobject, works for herbs minerals and chests
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.GameObjectInfo.FromId(System.UInt32)">
            <summary>
            Constructs a <see cref="T:Styx.WoWInternals.WoWObjects.GameObjectInfo"/> instance from a game object ID. Returns null if there is no cached information for this gameobject available.
            </summary>
            <param name="gameObjectId"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.GameObjectInfo.BaseAddress">
            <summary>
            For debugging purposes only.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.GameObjectInfo.IsCached">
            <summary>
            Returns true if this quest is cached in WoW's cache. If it's true, you will be able to retrieve information about this quest.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.GameObjectInfo.InternalInfo">
            <summary>
            The internal info of this quest.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemStats.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.ItemStats"/> class.
            </summary>
            <param name="itemLink">The item link.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemStats.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.ItemStats"/> class.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemStats.GetItemStats(System.String)">
            <summary>
            Gets the item stats.
            </summary>
            <param name="itemLink">The item link.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ItemStats.DPS">
            <summary>
            The DPS.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.WoWObjects.ItemStats.Stats">
            <summary>
            The stats.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemInfo.#ctor(System.UInt32,Styx.WoWInternals.WoWCache.WoWCache.ItemSparseEntry)">
            <summary>
            Prevents a default instance of the <see cref="T:Styx.WoWInternals.WoWObjects.ItemInfo"/> class from being created.
            </summary>
            <param name="id">The id.</param>
            <param name="itemSparse">The item sparse.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemInfo.GetItemStats">
            <summary>
            Gets the stats of this item.
            Note: Use WoWItem.GetItemStats whenever it's possible instead.
            </summary>
            <returns>The item stats.</returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemInfo.GetPhysicalDamageIndex">
            <summary>
            Gets the index of the physical damage.
            </summary>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.ItemInfo.FromId(System.UInt32)">
            <summary>
            Constructs an <see cref="T:Styx.WoWInternals.WoWObjects.ItemInfo"/> instance from an item ID. Returns null if there is no cached information for that item.
            </summary>
            <param name="itemId"></param>
            <returns>The <see cref="T:Styx.WoWInternals.WoWObjects.ItemInfo"/></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.InternalInfo">
            <summary>
            Gets the internal info.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Id">
            <summary>
            Gets the id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.TypeFlags">
            <summary>
            Gets the type flags.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SubClassId">
            <summary>
            Gets the sub class id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RangeModifier">
            <summary>
            Gets the range modifier.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.AllowedClasses">
            <summary>
            Gets the allowed classes.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.AllowedRaces">
            <summary>
            Gets the allowed races.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.BookStationaryId">
            <summary>
            Gets the book stationary id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.MaterialId">
            <summary>
            Gets the material id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SheathId">
            <summary>
            Gets the sheath id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RandomPropertiesId">
            <summary>
            Gets the random properties id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RandomSuffixId">
            <summary>
            Gets the random suffix id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ItemSetId">
            <summary>
            Gets the item set id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ItemAreaId">
            <summary>
            Gets the item area id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ItemMapId">
            <summary>
            Gets the item map id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.BagFamily">
            <summary>
            Gets the bag family.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.TotemCategory">
            <summary>
            Gets the totem category.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ArmorDamageModifier">
            <summary>
            Gets the armor damage modifier.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.StatId">
            <summary>
            Gets the stat id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.StatValue">
            <summary>
            Gets the stat value.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.DamageMin">
            <summary>
            Gets the damage min.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.DamageMax">
            <summary>
            Gets the damage max.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.DamageType">
            <summary>
            Gets the type of the damage.
            </summary>
            <value>
            The type of the damage.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SpellId">
            <summary>
            Gets the spell id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SpellTriggerId">
            <summary>
            Gets the spell trigger id.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SpellCharges">
            <summary>
            Gets the spell charges.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SpellCooldown">
            <summary>
            Gets the spell cooldown.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SpellCategory">
            <summary>
            Gets the spell category.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SpellCategoryCooldown">
            <summary>
            Gets the spell category cooldown.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SocketColor">
            <summary>
            Gets the color of the socket.
            </summary>
            <value>
            The color of the socket.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Name">
            <summary>
            The full name of this item.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ItemClass">
            <summary>
            The itemclass of this item. eg; 'Weapon', 'Gem', 'Armor', 'Consumable'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.WeaponClass">
            <summary>
            The WeaponClass of this item. eg; 'Bow', 'Gun', 'Mace' etc...
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.GlyphClass">
            <summary>
            The GlyphClass of this item. eg; 'Warrior', 'Paladin', 'Hunter'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.KeyClass">
            <summary>
            The KeyClass of this item. None, Key or Lockpick
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.MiscClass">
            <summary>
            The MiscClass of this item. eg; 'Junk', 'Reagent', 'Pet'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.QuiverClass">
            <summary>
            The QuiverClass of this item. eg; 'AmmoPouch'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RecipeClass">
            <summary>
            The RecipeClass of this item. eg; 'Cooking', 'Alchemy', 'First Aid'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.TradeGoodsClass">
            <summary>
            The TradeGoodsClass of this item. eg; 'Meat', 'Herb', 'Explosives'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ProjectileClass">
            <summary>
            The ProjectileClass of this item. eg; 'Wand', 'Bolt', 'Arrow'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ArmorClass">
            <summary>
            The ArmorClass of this item. eg; 'Cloth', 'Leahter', 'Mail'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.GemClass">
            <summary>
            The GemClass of this item. eg; 'Red', 'Blue', 'Yellow'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ContainerClass">
            <summary>
            The ContainerClass of this item. eg; 'Bandage', 'Scroll', 'Flask'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.WeaponDelay">
            <summary>
            The Weapon speed in seconds of this weapon.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.MinDamage">
            <summary>
            The minimum damage of this weapon, return 0 if this item isn't a weapon
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.MaxDamage">
            <summary>
            The maximum damage of this weapon, return 0 if this item isn't a weapon
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.DPS">
            <summary>
            The DPS of this item, if it's a weapon. Else 0.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.DisplayInfoId">
            <summary>
            The DisplayInfoId of this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Quality">
            <summary>
            The Quality of this item. eg; 'Legendary', 'Epic'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.SellPrice">
            <summary>
            The total amount of copper retrieved by selling this item to a vendor.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.BuyPrice">
            <summary>
            The total amount of copper this item costs from a vendor.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.AmmoType">
            <summary>
            The AmmoType of this item. eg; 'Bolts', 'Arrows'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Level">
            <summary>
            The item level of this item.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredLevel">
            <summary>
            The required level to use this item.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredSkillId">
            <summary>
            The required skill id to use this item if any, 0 otherwise
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredSkillLevel">
            <summary>
            The required skill level to use this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredSpellId">
            <summary>
            The required spellid to use this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredHonorRank">
            <summary>
            The required honor rank to use this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredReputationFactionId">
            <summary>
            The required reputation faction id to use this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.RequiredReputationRank">
            <summary>
            The requred reputation level to use this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.UniqueCount">
            <summary>
            The maximum number of 
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.MaxStackSize">
            <summary>
            The maximum number of items a stack can contain.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.BagSlots">
            <summary>
            The number of bagslots if this item is a bag, otherwise 0
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.StatsCount">
            <summary>
            The number of stats on this item
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Armor">
            <summary>
            The armor this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.HolyResistance">
            <summary>
            The holy resistance this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.FireResistance">
            <summary>
            The fire resistance this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.NatureResistance">
            <summary>
            The nature resistance this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.FrostResistance">
            <summary>
            The frost resistance this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ShadowResistance">
            <summary>
            The shadow resistance this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.ArcaneResistance">
            <summary>
            The arcane resistance this item gives.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Bond">
            <summary>
            The bond type of this item. eg; 'BindOnEquip', 'BindOnPickup'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.InventoryType">
            <summary>
            The InventoryType (Slot) of this item. eg; 'Head', 'Neck', 'Shoulder'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.EquipSlot">
            <summary>
            The EquipSlot of this item. eg; 'Head', 'Shoulders', 'Back'
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.Description">
            <summary>
            Gets the description.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.BookTextId">
            <summary>
            The book text id of this item, used for some dbc crap
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.BeginQuestId">
            <summary>
            The id of the quest this item starts, if any
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.WeaponSpeed">
            <summary>
            The WeaponDelay in milliseconds of this weapon. eg; '3000' for a staff
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.ItemInfo.IsWeapon">
            <summary>
            Gets a value indicating whether this instance is a weapon.
            </summary>
            <value>
              <c>true</c> if this instance is a weapon; otherwise, <c>false</c>.
            </value>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="T:Styx.WoWInternals.WoWObjects.ObjectInvalidateDelegate">
            <summary>
            Delegate used when invalidating objects.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWGuid"/> struct.
            </summary>
            <param name="low">The low.</param>
            <param name="high">The high.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.WoWObjects.WoWGuid"/> struct.
            </summary>
            <param name="full">The full.</param>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.GetLow(System.UInt64)">
            <summary>
            Gets the low.
            </summary>
            <param name="full">The full.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.GetHigh(System.UInt64)">
            <summary>
            Gets the high.
            </summary>
            <param name="full">The full.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.Combine(System.UInt32,System.UInt32)">
            <summary>
            Combines the specified low.
            </summary>
            <param name="low">The low.</param>
            <param name="high">The high.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.op_Implicit(Styx.WoWInternals.WoWObjects.WoWGuid)~System.UInt64">
            <summary>
            Performs an implicit conversion from <see cref="T:Styx.WoWInternals.WoWObjects.WoWGuid"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="guid">The GUID.</param>
            <returns>
            The result of the conversion.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.WoWGuid.op_Implicit(System.UInt64)~Styx.WoWInternals.WoWObjects.WoWGuid">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt64"/> to <see cref="T:Styx.WoWInternals.WoWObjects.WoWGuid"/>.
            </summary>
            <param name="guid">The GUID.</param>
            <returns>
            The result of the conversion.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.UnitThreatInfo.#ctor(Styx.WoWInternals.WoWObjects.UnitThreatInfo.NativeThreatEntry)">
            <summary>
            Prevents a default instance of the <see cref="T:Styx.WoWInternals.WoWObjects.UnitThreatInfo"/> class from being created.
            </summary>
            <param name="entry">The entry.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.UnitThreatInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.UnitThreatInfo.GetForUnit(Styx.WoWInternals.WoWObjects.WoWUnit,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Gets Threat info for unit.
            </summary>
            <param name="mob">The mob.</param>
            <param name="unit">The unit.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWObjects.UnitThreatInfo.FindThreatEntry(Styx.Patchables.NativeWowTable,System.UInt32,System.UInt64,System.UInt32@)">
            <summary>
            Finds the threat entry.
            </summary>
            <param name="table">The table.</param>
            <param name="hash">The hash.</param>
            <param name="guid">The GUID.</param>
            <param name="result">The result.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.UnitThreatInfo.RawPercent">
            <summary>
            Gets the raw percent.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.UnitThreatInfo.TargetGuid">
            <summary>
            Gets the target GUID.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.UnitThreatInfo.ThreatStatus">
            <summary>
            Gets the threat status.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.WoWInternals.WoWObjects.UnitThreatInfo.ThreatValue">
            <summary>
            Gets the threat value.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Helpers.XmlExtensions.Error(System.Xml.Linq.XObject,System.String)">
            <summary>An XNode extension method that prints an error message, including line number [if viable] to the Debug logger.</summary>
            <remarks>Created 3/8/2011.</remarks>
            <param name="actualElement">The actualElement to act on.</param>
            <param name="errorMessage">Message describing the error.</param>
        </member>
        <member name="M:Styx.Logic.AreaManagement.Area.CycleToNearest">
            <summary>
            Cycles to the nearest hotspot.
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.Area.GetNextHotspot">
            <summary>
            Dequeue's a hotspot in the que, returns null if the queue is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.AreaManagement.Area.GetRandomHotspot">
            <summary>
            Gets a random hotspot that is not on the blacklist.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.AreaManagement.Area.Equals(Styx.Logic.AreaManagement.Area)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Styx.Logic.AreaManagement.AreaManager.SetArea(Styx.Logic.AreaManagement.GrindArea)">
            <summary>
            Sets the current GrindArea
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:Styx.Logic.AreaManagement.AreaManager.Add(Styx.Logic.AreaManagement.Area)">
            <summary>
            Adds a <see cref="T:Styx.Logic.AreaManagement.Area"/> object to the area collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Styx.Logic.AreaManagement.AreaManager.CurrentGrindArea">
            <summary>
            Returns the current grind area, null if non is specified in the current subprofile
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.GrindArea.EnsureHotspots">
            <summary>
            Used internally to set the current hotspot properly and/or to deque randomzie or w/e the profile wants.
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.GrindArea.FromXML(System.Xml.Linq.XElement)">
            <summary>
            Returns an <see cref="T:Styx.Logic.AreaManagement.GrindArea"/> object of the passede in <see cref="T:System.Xml.Linq.XElement"/> object
            </summary>
        </member>
        <member name="P:Styx.Logic.AreaManagement.GrindArea.CurrentHotSpot">
            <summary>
            Returns the current hotspot the bot should move against.
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.Hotspot.ToWoWPoint">
            <summary>
            Returns this <see cref="T:Styx.Logic.AreaManagement.Hotspot"/> as a <see cref="T:Styx.Logic.Pathing.WoWPoint"/> object
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.Hotspot.ToXML">
            <summary>
            Returns this hotspot as a <see cref="T:System.Xml.Linq.XElement"/> object
            </summary>
        </member>
        <member name="M:Styx.Logic.AreaManagement.HotspotExtensions.ToHotspot(Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Returns this <see cref="T:Styx.Logic.Pathing.WoWPoint"/> as a <see cref="T:Styx.Logic.AreaManagement.Hotspot"/> object
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Styx.Logic.AreaManagement.QuestArea">
            <summary>
            Class used to define a grind area for associated with one or more quests.
            </summary>
        </member>
        <member name="M:Styx.Logic.Profiles.ProfileManager.GetBestProfile(System.Int32)">
            <summary>
            Returns the best profile of the current outer profile
            </summary>
            <param name="level">integer - level of the local player</param>
        </member>
        <member name="M:Styx.Logic.Profiles.ProfileManager.LoadNew(System.String,System.Boolean)">
            <summary>
            Loads a new profile
            </summary>
            <param name="path">The path of the profile.</param>
            <param name="rememberMe">True if the path should be saved in the settings file, as the last used path.</param>
            <exception cref="T:System.IO.FileNotFoundException"><c>FileNotFoundException</c>.</exception>
            <exception cref="T:Styx.HonorbuddyUnableToStartException"><c>HonorbuddyUnableToStartException</c>.</exception>
        </member>
        <member name="M:Styx.Logic.Profiles.ProfileManager.LoadNew(System.String)">
            <summary>
            Loads a new profile
            </summary>
            <param name="path">path to the location of the profile</param>
        </member>
        <member name="M:Styx.Logic.Profiles.ProfileManager.LoadEmpty">
            <summary>Loads an 'empty' profile. The empty profile will be valid for all level ranges, and continents.</summary>
            <remarks>Created 2/17/2011.</remarks>
        </member>
        <member name="M:Styx.Helpers.Utilities.PerformanceCounterToDateTime(System.UInt64)">
            <summary>A method that converts a WoW performance counter to a DateTime object. </summary>
            <remarks>Created 3/26/2011.</remarks>
            <param name="performanceCounter">The performanceCounter to act on.</param>
            <returns>.</returns>
        </member>
        <member name="M:Styx.Helpers.Utilities.GetObjectString(System.Object,System.String)">
            <summary>
            Gets a string for an object. If the object is null, it returns <paramref name="nullRet"/>. If it's nonnull, it returns obj.ToString().
            </summary>
            <param name="obj"></param>
            <param name="nullRet"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.AreaManagement.PolygonArea.PnPoly(System.Int32,System.Single[],System.Single[],System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="nvert">Number of vertices in the polygon. Whether to repeat the first vertex at the end is discussed below. </param>
            <param name="vertx">Array containing the x coordinates of the polygon's vertices.</param>
            <param name="verty">Array containing the y coordinates of the polygon's vertices.</param>
            <param name="testx">x-coordinate of the test point. </param>
            <param name="testy">y-coordinate of the test point. </param>
        </member>
        <member name="M:Styx.Logic.Landmarks.Refresh">
            <summary>
            Refreshes the list if landmarks
            </summary>
        </member>
        <member name="M:Styx.Logic.Landmarks.Display">
            <summary>
            Displays all visible landmarks
            </summary>
        </member>
        <member name="P:Styx.Logic.Landmarks.NumMapLandmarks">
            <summary>
            Returns the number of visible MapLandmarks
            </summary>
        </member>
        <member name="T:Styx.Logic.Questing.PlayerQuest">
            <summary>
            Represents a quest the player has in his questlog.
            </summary>
        </member>
        <member name="M:Styx.Logic.WoWLandMark.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.Logic.WoWLandMark"/> class.
            </summary>
            <param name="ptr">The PTR.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.WoWLandMark.GetWorldState(System.UInt32)">
            <summary>
            Gets the state of the world.
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.Type">
            <summary>
            Gets the type of this landmark.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.IsValid">
            <summary>
            Returns true if this landmark is a valid object.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.Entry">
            <summary>
            The entry of this landmark.
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.NormalIcon">
            <summary>
            The normal icon of this landmark.
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.MapId">
            <summary>
            The MapId of this landmark.
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.AreaId">
            <summary>
            The AreaId of this landmark.
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.Name">
            <summary>
            The Name of this landmark, eg; 'West Beacon'
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.Description">
            <summary>
            The description of this landmark, eg; 'Horde Controlled'
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.WorldState">
            <summary>
            The world-state of this landmark
            </summary>
            <value>
            The state of the world.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.TextureIndex">
            <summary>
            The texture index of this landmark, refers to current texture of it.
            </summary>
            <value>
            The index of the texture.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.Flags">
            <summary>
            The flags of this landmark.
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.ShowInBattleMap">
            <summary>
            Returns true if this landmark is shown in the BattleMap
            </summary>
            <value>
              <c>true</c> if [show in battle map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.ShowInBg">
            <summary>
            Returnsn true if this landmark is show in BG
            </summary>
            <value>
              <c>true</c> if [show in bg]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.ShowInZone">
            <summary>
            Returns true if this landmark is show in Zone
            </summary>
            <value>
              <c>true</c> if [show in zone]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.Location">
            <summary>
            The ingame location of this landmark;
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.MapX">
            <summary>
            The Map-X Location of this landmark.
            </summary>
        </member>
        <member name="P:Styx.Logic.WoWLandMark.MapY">
            <summary>
            The Map-Y Location of this landmark.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWDb.Item(Styx.Patchables.ClientDb)">
            <summary>
            Returns a DBC table based on the <see cref="T:Styx.Patchables.ClientDb"/> member passed.
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="T:Styx.WoWInternals.WoWDb.DbTable">
            <summary>
            Represents a single DBC table.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWDb.DbTable.GetRow(System.UInt32)">
            <summary>
            Returns a <see cref="T:Styx.WoWInternals.WoWDb.Row"/> representing a DBC record. Returns null if the record does not exist.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWDb.DbTable.IsValid">
            <summary>
            Returns true if this is a valid table
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWDb.DbTable.NumRows">
            <summary>
            The number of rows (records) this DBC has.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWDb.DbTable.MaxIndex">
            <summary>
            The max row index of this DBC table.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWDb.DbTable.MinIndex">
            <summary>
            The min row index of this DBC table.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWDb.Row">
            <summary>
            Represents a DBC record.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWDb.Row.GetField``1(System.UInt32)">
            <summary>
            Returns a field of a type you specify.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWDb.Row.SetField``1(System.UInt32,``0)">
            <summary>
            Set's the value of a field in a row, kinda hackkish :) (can be used to do some minor fun hacks)
            </summary>
            <typeparam name="T">datatype</typeparam>
            <param name="index">entry of the row to rape</param>
            <param name="value">value to 'insert'</param>
        </member>
        <member name="M:Styx.WoWInternals.WoWDb.Row.GetStruct``1">
            <summary>
            Returns a struct representation of this row. (The struct must be properly formatted. If it contains strings,
            it must be marked with the CharSet value to Ansi)
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWDb.Row.IsValid">
            <summary>
            Returns whether or not this Row is valid.
            </summary>
        </member>
        <member name="M:Styx.BotManager.SetCurrent(Styx.BotBase)">
            <summary>
            Sets the current bot. Note: Setting the bot will stop the current bot if it's running.
            </summary>
            <param name="bot"></param>
        </member>
        <member name="M:Styx.BotManager.LoadBots(System.String)">
            <summary>
            Loads a set of bots from a path
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Styx.BotManager.Add(System.String,Styx.BotBase)">
            <summary>
            Adds a bot to the bot collection.
            </summary>
            <param name="name">name of the bot</param>
            <param name="derievesFromBotBase">object that derieves from BotBase</param>
        </member>
        <member name="M:Styx.BotManager.Add(Styx.BotBase)">
            <summary>
            Adds a bot to the bot collection.
            </summary>
            <param name="derievesFromBotBase">object that derieves from BotBase</param>
        </member>
        <member name="M:Styx.BotManager.Add(System.IO.Stream)">
            <summary>
            Adds a bot from a stream
            </summary>
            <param name="botStream">stream containg a botbase object</param>
        </member>
        <member name="M:Styx.BotManager.Remove(System.String)">
            <summary>
            Removes a bot from the collection
            </summary>
            <param name="name">name of the bot</param>
        </member>
        <member name="M:Styx.BotManager.GetBots">
            <summary>
            Returns a dictionary of all the currently loaded bots
            </summary>
        </member>
        <member name="M:Styx.BotManager.Clear">
            <summary>
            Clears the list of bots
            </summary>
        </member>
        <member name="P:Styx.BotManager.Bots">
            <summary>
            Returns a dictionary of all the currently loaded bots
            </summary>
        </member>
        <member name="M:Styx.Database.Connection.ExecuteReaderWithParams(System.Data.SQLite.SQLiteCommand,System.Object[])">
            <summary>
            Executes a command, and returns it's reader using the specified parameters.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="args">The parameters, in command order, that the command takes.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Database.NpcResult.Equals(Styx.Database.NpcResult)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.
                            </param>
        </member>
        <member name="M:Styx.Database.NpcResult.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. 
                            </param><exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.
                            </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.Database.NpcResult.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.Database.NpcQueries.GetNpcByName(System.String)">
            <summary>Gets a npc by name. </summary>
            <remarks>Created 10/1/2010.</remarks>
            <param name="name">The name.</param>
            <returns>The npc by name.</returns>
        </member>
        <member name="M:Styx.Database.NpcQueries.GetNpcById(System.UInt32)">
            <summary>Gets a npc by its ID. </summary>
            <remarks>Created 10/1/2010.</remarks>
            <param name="id">The identifier.</param>
            <returns>The npc by identifier.</returns>
        </member>
        <member name="M:Styx.Database.NpcQueries.GetNearestTrainer(Styx.WoWInternals.WoWFactionTemplate,System.UInt32,Styx.Logic.Pathing.WoWPoint,Styx.Combat.CombatRoutine.WoWClass)">
            <summary>Gets the nearest trainer. </summary>
            <remarks>Created 10/1/2010.</remarks>
            <param name="myFaction">my faction.</param>
            <param name="mapId">Identifier for the map.</param>
            <param name="searchLocation">The search location.</param>
            <param name="searchClass">The search class.</param>
            <returns>The nearest trainer.</returns>
        </member>
        <member name="M:Styx.Database.NpcQueries.GetNearestNpc(Styx.WoWInternals.WoWFactionTemplate,System.UInt32,Styx.Logic.Pathing.WoWPoint,Styx.UnitNPCFlags)">
            <summary>Gets a nearest npc. </summary>
            <remarks>Created 10/1/2010.</remarks>
            <param name="myFaction">my faction.</param>
            <param name="mapId">Identifier for the map.</param>
            <param name="searchLocation">The search location.</param>
            <param name="npcFlags">The npc flags.</param>
            <returns>The nearest npc.</returns>
        </member>
        <member name="M:Styx.DbHelper.ReadSpells(System.String,System.Collections.Generic.Dictionary{System.Int32,Styx.Spell}@)">
            <summary>
            Reads all spellnames from disk
            </summary>
            <param name="file"></param>
            <param name="spells"></param>
        </member>
        <member name="M:Styx.DbHelper.GetSpell(System.Int32)">
            <summary>
            Returns a <see cref="T:Styx.Spell"/> object with all the strings for the spellid if it found it, empty struct otherwise
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.DbHelper.GetName(System.Int32)">
            <summary>
            Returns the name of a spell in english
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Styx.FrameLock">
            <summary>
            Locks the current frame in WoW allowing for multiple injections at once. Disposing of this is crucial.
            </summary>
        </member>
        <member name="M:Styx.Helpers.AllocatedMemory.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Styx.Helpers.AsmHelper.GetFloatInt(System.Single)">
            <summary>
            Gets the integer representation of a float.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Styx.Helpers.WaitTimer">
            <summary>
            A simple timer class to help keep track of waits, and other useful timing info.
            </summary>
        </member>
        <member name="M:Styx.Helpers.WaitTimer.#ctor(System.TimeSpan)">
            <summary>
            Creates a new instance of the WaitTimer class. This is just a simple way to create a timer that you can query for 'finishing' things.
            </summary>
            <param name="waitTime"></param>
        </member>
        <member name="M:Styx.Helpers.WaitTimer.Reset">
            <summary>
            Resets the <see cref="T:Styx.Helpers.WaitTimer"/> to a time in the future, specified by the <see cref="P:Styx.Helpers.WaitTimer.WaitTime"/> property.
            </summary>
        </member>
        <member name="M:Styx.Helpers.WaitTimer.Stop">
            <summary>
            Stops this timer, and causes the <see cref="P:Styx.Helpers.WaitTimer.IsFinished"/> property to return false.
            </summary>
        </member>
        <member name="M:Styx.Helpers.WaitTimer.Update">
            <summary>
            Updates this timer. It must be called fairly frequently if you wish to use the <see cref="E:Styx.Helpers.WaitTimer.Finished"/> event.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.WaitTime">
            <summary>
            The time to wait before this timer is considered 'finished'.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.EndTime">
            <summary>
            The time that this timer will end it's run, and be considered finished.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.StartTime">
            <summary>
            The time this timer was physically started.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.IsFinished">
            <summary>
            Returns whether or not this timer has finished.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.TimeLeft">
            <summary>
            Returns the time left on this timer before it finishes.
            </summary>
        </member>
        <member name="E:Styx.Helpers.WaitTimer.Finished">
            <summary>
            Occurs when the wait timer has finished.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.WaitTimerEventArgs.TimeFinished">
            <summary>
            The actual time when this event was fired.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.WaitTimerEventArgs.WaitTime">
            <summary>
            The time spent waiting.
            </summary>
        </member>
        <member name="P:Styx.Helpers.WaitTimer.WaitTimerEventArgs.TimeStarted">
            <summary>
            The time the timer was physically started.
            </summary>
        </member>
        <member name="T:Styx.Logic.Combat.SpellManager">
            <summary>
             An extended version of the <see cref="T:Styx.Logic.Combat.LegacySpellManager"/> class.
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.HasSpell(System.String)">
            <summary>
            Determines whether we have the specified spell.
            </summary>
            <param name="name">The name.</param>
            <returns>
              <c>true</c> if we have the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.HasSpell(System.Int32)">
            <summary>
            Determines whether we have the specified spell.
            </summary>
            <param name="id">The id.</param>
            <returns>
              <c>true</c> if we have the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.HasSpell(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Determines whether we have the specified spell.
            </summary>
            <param name="spell">The <see cref="T:Styx.Logic.Combat.WoWSpell"/> object.</param>
            <returns>
              <c>true</c> if we have the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.String)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.String,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if we can cast the specified spell the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.String,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.String,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.String,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <param name="checkMoving">if set to <c>true</c> [check moving].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.Int32)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.Int32,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(Styx.Logic.Combat.WoWSpell,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <param name="checkMoving">if set to <c>true</c> [check moving].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanCast(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Determines whether we can cast the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <param name="checkMoving">if set to <c>true</c> [check moving].</param>
            <param name="accountForLagTolerance">if set to <c>true</c> [account for lag tolerance].</param>
            <returns>
              <c>true</c> if we can cast the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.String)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.String,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.String,System.Boolean)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.String,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.Int32)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.Int32,System.Boolean)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(Styx.Logic.Combat.WoWSpell,System.Boolean)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CanBuff(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Determines whether we can buff with the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns>
              <c>true</c> if we can buff with the specified spell; otherwise, <c>false</c>.
            </returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Cast(System.String)">
            <summary>
            Casts the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Cast(System.String,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts the specified spell.
            </summary>
            <param name="spellName">Name of the spell.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Cast(System.Int32)">
            <summary>
            Casts the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Cast(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Cast(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Casts the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <returns></returns>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Cast(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Buff(System.String)">
            <summary>
            Buffs with the specified spell.
            </summary>
            <param name="spellName">Name of the buff.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Buff(System.String,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Buffs with the specified spell.
            </summary>
            <param name="spellName">Name of the buff.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Buff(System.Int32)">
            <summary>
            Buffs with the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Buff(System.Int32,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Buffs with the specified spell.
            </summary>
            <param name="spellId">The spell id.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Buff(Styx.Logic.Combat.WoWSpell)">
            <summary>
            Buffs with the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Buff(Styx.Logic.Combat.WoWSpell,Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Buffs with the specified spell.
            </summary>
            <param name="spell">The spell.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{System.String},Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spellNames">The spell names.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{System.String},Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spellNames">The spell names.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spellNames">The spell names.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{System.Int32},Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spellIds">The spell ids.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{System.Int32},Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spellIds">The spell ids.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spellIds">The spell ids.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{Styx.Logic.Combat.WoWSpell},Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spells">The spells.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{Styx.Logic.Combat.WoWSpell},System.Boolean)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spells">The spells.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.CastRandom(System.Collections.Generic.IEnumerable{Styx.Logic.Combat.WoWSpell},Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Casts a random spell.
            </summary>
            <param name="spells">The spells.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{System.String},Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spellNames">The spell names.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{System.String},Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spellNames">The spell names.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spellNames">The spell names.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{System.Int32},Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spellIds">The spell ids.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{System.Int32},Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spellIds">The spell ids.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spellIds">The spell ids.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{Styx.Logic.Combat.WoWSpell},Styx.WoWInternals.WoWObjects.WoWUnit)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spells">The _spells.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{Styx.Logic.Combat.WoWSpell},System.Boolean)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spells">The spells.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BuffRandom(System.Collections.Generic.IEnumerable{Styx.Logic.Combat.WoWSpell},Styx.WoWInternals.WoWObjects.WoWUnit,System.Boolean)">
            <summary>
            Buffs with a random spell.
            </summary>
            <param name="spells">The spells.</param>
            <param name="target">The target.</param>
            <param name="checkRange">if set to <c>true</c> [check range].</param>
            <returns></returns>
            <remarks>
            Created by Nesox 2012-02-04
            </remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.StopCasting">
            <summary>
            Stops you from casting.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.BotEvents_OnBotStart(System.EventArgs)">
            <summary>
            Occurs when the bot starts.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Init">
            <summary>
            Inits this instance.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.Logic.Combat.SpellManager.Shutdown">
            <summary>
            Shutdowns this instance.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="P:Styx.Logic.Combat.SpellManager.GlobalCooldownLeft">
            <summary>
            Returns the amount of time left on Global Cooldown.
            <returns> TimeSpan with remaining time for the Global Cooldown Timer, TimeSpan.Zero if it's not running. </returns>
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.SpellManager.GlobalCooldown">
            <summary>
            Returns true if the Global Cooldown timer is running.
            </summary>
        </member>
        <member name="P:Styx.Logic.Combat.SpellManager.RawSpells">
            <summary>Returns a read-only collection of known spells. This is a raw list where only the spell IDs are unique. Names may not be!.</summary>
            <value>The raw spells.</value>
        </member>
        <member name="P:Styx.Logic.Combat.SpellManager.Spells">
            <summary>Gets the known spells using the spell name as the unique identifier.</summary>
            <value>The spells.</value>
        </member>
        <member name="T:Styx.Logic.Combat.SpellManager.SpellCooldownEntry">
            <summary>
            Reversed from SpellHistory::GetCooldown, get's called from Spell_C_GetSpellCooldown.
            </summary>
        </member>
        <member name="F:Styx.Logic.Combat.SpellManager.SpellCooldownEntry.Next">
            <summary>
            Pointer to the next SpellCooldownEntry
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.
            </summary>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2"/> can contain.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0.
                            </exception>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for the type of the key.
                            </param>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2"/> can contain.
                            </param><param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for the type of the key.
                            </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0.
                            </exception>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor(System.Collections.Generic.IDictionary{System.String,Styx.Logic.Combat.WoWSpell})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2"/> and uses the default equality comparer for the key type.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2"/>.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="dictionary"/> is null.
                            </exception><exception cref="T:System.ArgumentException"><paramref name="dictionary"/> contains one or more duplicate keys.
                            </exception>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor(System.Collections.Generic.IDictionary{System.String,Styx.Logic.Combat.WoWSpell},System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2"/> and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2"/>.
                            </param><param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for the type of the key.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="dictionary"/> is null.
                            </exception><exception cref="T:System.ArgumentException"><paramref name="dictionary"/> contains one or more duplicate keys.
                            </exception>
        </member>
        <member name="M:Styx.Logic.Combat.SpellCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2"/> class with serialized data.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"/>.
                            </param><param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> structure containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2"/>.
                            </param>
        </member>
        <member name="T:Styx.Logic.Inventory.Consumable">
            <summary>
              A small wrapper class around consumable items. [Food, Water, Potions, Bandages, etc]
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Consumable.GetFood">
            <summary>
              Returns a list of all the food you currently have in your inventory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Consumable.GetDrinks">
            <summary>
              Returns a list of all the drinks you currently have in your inventory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Consumable.GetBestFood(System.Boolean)">
            <summary>
              Returns the best food you currently have, optionally including specialty foods.
            </summary>
            <param name = "includeSpecialtyItems"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Consumable.GetBestDrink(System.Boolean)">
            <summary>
              Returns the best drink in your inventory, optionally including specialty items.
            </summary>
            <param name = "includeSpecialtyItems"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.SetServiceFilter(Styx.Logic.Inventory.Frames.Trainer.TrainerServiceFilter,System.Boolean)">
            <summary>
            Sets the trainer filter shown in the UI.
            </summary>
            <param name="filter"></param>
            <param name="show"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.GetServiceCost(System.Int32)">
            <summary>
            Returns the cost (in copper) to purchase a trainer service. (Spell)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.Close">
            <summary>
            Closes the trainer window.
            </summary>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.Buy(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.BuyAll">
            <summary>
            Attempts to purchase all the available services. If it cannot, due to not having enough money, this function returns false.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.NumTrainerServices">
            <summary>
            Returns the total number of available trainer services shown.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.IsTradeskillTrainer">
            <summary>
            Returns whether or not this trainer is a tradeskill trainer. If false, this is a class trainer.
            </summary>
        </member>
        <member name="P:Styx.Logic.Inventory.Frames.Trainer.TrainerFrame.Selected">
            <summary>
            Returns the currently selected trainer service index.
            </summary>
        </member>
        <member name="M:Styx.Logic.POI.BotPoi.Clear">
            <summary>
            Clears the current POI, and sets its type to None.
            </summary>
        </member>
        <member name="P:Styx.Logic.POI.BotPoi.Current">
            <summary>
             The current POI that the bot has decided on.
            </summary>
        </member>
        <member name="P:Styx.Logic.POI.BotPoi.Type">
            <summary>
            Valid for all POI types.
            </summary>
        </member>
        <member name="P:Styx.Logic.POI.BotPoi.Name">
            <summary>
            Invalid for hotspots
            </summary>
        </member>
        <member name="P:Styx.Logic.POI.BotPoi.Guid">
            <summary>
            Valid only for types of WoWObject
            </summary>
        </member>
        <member name="P:Styx.Logic.POI.BotPoi.Entry">
            <summary>
            Invalid for hotspots
            </summary>
        </member>
        <member name="P:Styx.Logic.POI.BotPoi.Location">
            <summary>
            Valid for most.
            </summary>
        </member>
        <member name="M:Styx.Logic.Profiles.HotspotCollection.FromXML(System.Xml.Linq.XElement,System.String[])">
            <summary>
            Converts an XML element to a hotspot collection.
            </summary>
            <param name="element">The element that contains location tags.</param>
            <param name="elementNames">The accepted names of the location tags.</param>
            <returns></returns>
        </member>
        <member name="T:Styx.Logic.Profiles.Quest.CheckpointNode">
            <summary>
            A quest checkpoint is a node that does not modify behavior. It only tells HB points of which to start from.
            </summary>
        </member>
        <member name="T:Styx.Logic.Profiles.Quest.IfNode">
            <summary>
            </summary>
        </member>
        <member name="M:Styx.Logic.Profiles.Quest.IfNode.FromXml(System.Xml.Linq.XElement)">
            <exception cref="T:Styx.Logic.Profiles.ProfileException"><c>ProfileException</c>.</exception>
        </member>
        <member name="M:Styx.Logic.Profiles.Quest.ElseIf.FromXml(System.Xml.Linq.XElement)">
            <exception cref="T:Styx.Logic.Profiles.ProfileException"><c>ProfileException</c>.</exception>
        </member>
        <member name="T:Styx.Logic.Profiles.Quest.ObjectiveNode">
            <summary>
            A quest objective tells HB to perform an objective for a quest.
            </summary>
        </member>
        <member name="T:Styx.Logic.Profiles.Quest.PickUpNode">
            <summary>
            A pick up tells HB to pick up a quest.
            </summary>
        </member>
        <member name="M:Styx.Logic.Profiles.Quest.CollectFromCollection.FromXML(System.Xml.Linq.XElement,System.String[])">
            <summary>
            Converts an XML element to a kill mob/game object collection.
            </summary>
            <param name="element">The element that contains kill mob/game object tags.</param>
            <param name="elementNames">The accepted names of the kill mob/game object tags.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Profiles.Quest.QuestInfo.FromXML(System.Xml.Linq.XElement)">
            <summary>
            Convers an XML element to quest info.
            </summary>
            <param name="element">The element that contains the quest info.</param>
            <returns></returns>
        </member>
        <member name="M:Styx.Logic.Vendors.MailAllItems">
            <summary>
            </summary>
        </member>
        <member name="M:Styx.Logic.Vendors.RepairAllItems">
            <summary>
            Handles repairing items.
            </summary>
        </member>
        <member name="M:Styx.Logic.Vendors.SellAllItems">
            <summary>
            Handles selling items.
            </summary>
        </member>
        <member name="M:Styx.Logic.Vendors.BuyItems">
            <summary>
            Handles buying items.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.Misc.WoWClient.GetNetStats(System.Single@,System.Single@,System.UInt32@)">
            <summary>
            Gets the current net stats.
            </summary>
            <param name="downKBs"></param>
            <param name="upKBs"></param>
            <param name="latency"></param>
        </member>
        <member name="P:Styx.WoWInternals.Misc.WoWClient.Latency">
            <summary>
            Returns the current latency of WoW's network traffic. It is recommended that you cache this value when you retrieve it.
            </summary>
        </member>
        <member name="F:Styx.WoWInternals.World.WorldLine.Start">
            <summary>
            The start point.
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="F:Styx.WoWInternals.World.WorldLine.End">
            <summary>
            The end point
            </summary>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.World.WorldLine.#ctor(Styx.Logic.Pathing.WoWPoint,Styx.Logic.Pathing.WoWPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Styx.WoWInternals.World.WorldLine"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <remarks>Created by Nesox 2012-02-04</remarks>
        </member>
        <member name="M:Styx.WoWInternals.WoWBag.GetItemGuidBySlot(System.UInt32)">
            <summary>
            Returns an items GUID by slot. The max slot is Slots - 1. If the returned value is 0, the slot is empty.
            </summary>
            <param name="slot"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>slot</c> is out of range.</exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWBag.GetItemBySlot(System.UInt32)">
            <summary>
            Return an item by slot. The max slot is Slots - 1. If the returned value is null, the slot is empty.
            </summary>
            <param name="slot"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>slot</c> is out of range.</exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWBag.Contains(Styx.WoWInternals.WoWObjects.WoWItem)">
            <summary>
            Returns a bool indicating whether this bag contains an item.
            </summary>
            <param name="item"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWBag.Contains(System.UInt64)">
            <summary>
            Returns a bool indicating whether this bag contains an item.
            </summary>
            <param name="itemGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Styx.WoWInternals.WoWBag.IndexOf(Styx.WoWInternals.WoWObjects.WoWItem)">
            <summary>
            Returns the index of an item or -1 if it's not in this bag.
            </summary>
            <param name="item"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Styx.WoWInternals.WoWBag.IndexOf(System.UInt64)">
            <summary>
            Returns the index of an item or -1 if it's not in this bag.
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.Name">
            <summary>
            Returns the name of this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.IsInventory">
            <summary>
            Returns a bool indicating whether this bag is the players inventory.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.Guid">
            <summary>
            Returns the GUID of this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.ItemGuids">
            <summary>
            Gets an array of item GUIDs in this bag. If an item is 0, there is no item in that slot.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.Items">
            <summary>
            Gets an array of items in this bag. If an item is null, there is no item in that slot.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.PhysicalItemGuids">
            <summary>
            Gets an array of all item GUIDs in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.PhysicalItems">
            <summary>
            Gets an array of all items in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.FreeSlots">
            <summary>
            Gets the number of free slots in this bag.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWBag.UsedSlots">
            <summary>
            Gets the number of used slots in this bag.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWFaction">
            <summary>
             Wraps common Faction stuff.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWPlayerInventory.Equipped">
            <summary>
            Gets a bag representing all equipped items.
            The last 4 slots are the equipped bags.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWPlayerInventory.Backpack">
            <summary>
            Gets a bag representing the backpack.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWPlayerInventory.Bank">
            <summary>
            Gets a bag representing the bank.
            The last 7 slots are the bank bags.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWPlayerInventory.Buyback">
            <summary>
            Gets a bag representing the buyback frame.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWPlayerInventory.Keyring">
            <summary>
            Gets a bag representing the keyring.
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWTaxi">
            <summary>
            Gathers information about flight paths, boats, and zepplins.
            </summary>
        </member>
        <member name="M:Styx.WoWInternals.WoWTaxi.GetKnownNodes">
            <summary>
            Gets a list of known nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.NodeCount">
            <summary>
            Returns the current amount of nodes visible in the taxi frame. (This is only updated once you speak to the taxi NPC!)
            </summary>
        </member>
        <member name="T:Styx.WoWInternals.WoWTaxi.TaxiNode">
            <summary>
            A small wrapper class around taxi nodes.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.IsValid">
            <summary>
            Whether this is a valid taxi node or not.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.Id">
            <summary>
            The ID of this taxi node.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.MapId">
            <summary>
            The map ID that this taxi node is located on.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.Location">
            <summary>
            The physical location in the world where this taxi node exists.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.Name">
            <summary>
            The name of the taxi node.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.HordeMountCreatureId">
            <summary>
            The horde mount ID. This is only valid for actual flight paths.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.AllianceMountCreatureId">
            <summary>
            The alliance mount ID. This is only valid for actual flight paths.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.AllianceOnly">
            <summary>
            Whether this taxi node is alliance only.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.HordeOnly">
            <summary>
            Whether this taxi node is horde only.
            </summary>
        </member>
        <member name="P:Styx.WoWInternals.WoWTaxi.TaxiNode.FlightPath">
            <summary>
            Whether this taxi node is actually a flight path, or a boat/zep or elevator.
            </summary>
        </member>
    </members>
</doc>
